Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,AbstractBorder,1,Insets getBorderInsets(Component c),True,"This default implementation returns a new Insets object that is initialized by the getBorderInsets(Component,Insets) method.","

getBorderInsets
public Insets getBorderInsets(Component c)
This default implementation returns a new Insets object
 that is initialized by the getBorderInsets(Component,Insets)
 method.
 By default the top, left, bottom,
 and right fields are set to 0.

Specified by:
getBorderInsets in interface Border
Parameters:
c - the component for which this border insets value applies
Returns:
a new Insets object


"
0,AbstractBorder,2,boolean isBorderOpaque(),True,This default implementation returns false.,"

isBorderOpaque
public boolean isBorderOpaque()
This default implementation returns false.

Specified by:
isBorderOpaque in interface Border
Returns:
false


"
0,AbstractBorder,3,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,This default implementation does no painting.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
This default implementation does no painting.

Specified by:
paintBorder in interface Border
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
0,AbstractBorder,4,void install(Component c),False,,NULL
0,AbstractBorder,5,void uninstall(Component c),False,,NULL
1,BevelBorder,1,"BevelBorder(int bevelType, Color highlight, Color shadow)",False,,NULL
1,BevelBorder,2,"BevelBorder(int bevelType, Color highlight, Color shadow, int highlightThickness, int shadowThickness)",False,,NULL
1,BevelBorder,3,int getBevelType(),True,Returns the type of the bevel border.,"

getBevelType
public int getBevelType()
Returns the type of the bevel border.

"
1,BevelBorder,4,Color getHighlightColor(),False,,NULL
1,BevelBorder,5,Color getShadowColor(),False,,NULL
1,BevelBorder,6,int getHighlightThickness(),False,,NULL
1,BevelBorder,7,int getShadowThickness(),False,,NULL
1,BevelBorder,8,void setBevelType(int bevelType),False,,NULL
1,BevelBorder,9,void setHighlightColor(Color highlight),False,,NULL
1,BevelBorder,10,void setShadowColor(Color shadow),False,,NULL
1,BevelBorder,11,void setHighlightThickness(int thickness),False,,NULL
1,BevelBorder,12,void setShadowThickness(int thickness),False,,NULL
1,BevelBorder,13,Insets getBorderInsets(Component c),False,,NULL
1,BevelBorder,14,boolean isBorderOpaque(),True,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
1,BevelBorder,15,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the specified
 position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
2,CompoundBorder,1,Border getBorderInside(),False,,NULL
2,CompoundBorder,2,Border getBorderOutside(),False,,NULL
2,CompoundBorder,3,Insets getBorderInsets(Component c),False,,NULL
2,CompoundBorder,4,boolean isBorderOpaque(),True,Returns whether or not the compound border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the compound border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
true if the inside and outside borders
         are each either null or opaque;
         or false otherwise


"
2,CompoundBorder,5,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Paints the compound border by painting the outside border with the specified position and size and then painting the inside border at the specified position and size offset by the insets of the outside border.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the compound border by painting the outside border
 with the specified position and size and then painting the
 inside border at the specified position and size offset by
 the insets of the outside border.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
3,EmptyBorder,1,"EmptyBorder(int top, int left, int bottom, int right)",False,,NULL
3,EmptyBorder,2,EmptyBorder(Insets insets),False,,NULL
3,EmptyBorder,3,Insets getBorderInsets(Component c),False,,NULL
3,EmptyBorder,4,boolean isBorderOpaque(),True,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.
 Returns false by default.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
3,EmptyBorder,5,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Does no drawing by default.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Does no drawing by default.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
4,EtchedBorder,1,"EtchedBorder(int etchType, Color highlight, Color shadow)",False,,NULL
4,EtchedBorder,2,EtchedBorder(int etchType),False,,NULL
4,EtchedBorder,3,EtchedBorder(),False,,NULL
4,EtchedBorder,4,void setEtchType(int newType),False,,NULL
4,EtchedBorder,5,int getEtchType(),True,Returns which etch-type is set on the etched border.,"

getEtchType
public int getEtchType()
Returns which etch-type is set on the etched border.

"
4,EtchedBorder,6,void setHighlightColor(Color newColor),False,,NULL
4,EtchedBorder,7,Color getHighlightColor(),True,Returns the highlight color of the etched border.,"

getHighlightColor
public Color getHighlightColor()
Returns the highlight color of the etched border.
 Will return null if no highlight color was specified
 at instantiation.

Since:
1.3


"
4,EtchedBorder,8,void setShadowColor(Color newColor),False,,NULL
4,EtchedBorder,9,Color getShadowColor(),True,Returns the shadow color of the etched border.,"

getShadowColor
public Color getShadowColor()
Returns the shadow color of the etched border.
 Will return null if no shadow color was specified
 at instantiation.

Since:
1.3


"
4,EtchedBorder,10,Insets getBorderInsets(Component c),False,,NULL
4,EtchedBorder,11,boolean isBorderOpaque(),True,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
4,EtchedBorder,12,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the
 specified position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
4,EtchedBorder,13,void install(Component c),False,,NULL
4,EtchedBorder,14,void uninstall(Component c),False,,NULL
4,EtchedBorder,15,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the
 specified position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
4,EtchedBorder,16,Insets getBorderInsets(Component c),False,,NULL
4,EtchedBorder,17,boolean isBorderOpaque(),True,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
4,EtchedBorder,18,void install(Component c),False,,NULL
4,EtchedBorder,19,void uninstall(Component c),False,,NULL
4,EtchedBorder,20,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the
 specified position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
5,LineBorder,1,"LineBorder(Color lineColor, int thickness)",False,,NULL
5,LineBorder,2,"LineBorder(Color lineColor, int thickness, boolean roundedCorners)",False,,NULL
5,LineBorder,3,getLineColor(),False,,NULL
5,LineBorder,4,getThickness(),False,,NULL
5,LineBorder,5,getRoundedCorners(),False,,NULL
6,MatteBorder,1,"MatteBorder(int top, int left, int bottom, int right, Color matteColor)",False,,NULL
6,MatteBorder,2,"MatteBorder(int top, int left, int bottom, int right, Icon matteIcon)",False,,NULL
6,MatteBorder,3,"MatteBorder(int top, int left, int bottom, int right, boolean shared)",False,,NULL
6,MatteBorder,4,"MatteBorder(int top, int left, int bottom, int right, Color matteColor, boolean shared)",False,,NULL
6,MatteBorder,5,"MatteBorder(int top, int left, int bottom, int right, Icon matteIcon, boolean shared)",False,,NULL
7,SoftBevelBorder,1,"SoftBevelBorder(int bevelType, Color highlight, Color shadow)",False,,NULL
7,SoftBevelBorder,2,void setHighlightColor(Color newColor),False,,NULL
7,SoftBevelBorder,3,void setShadowColor(Color newColor),False,,NULL
7,SoftBevelBorder,4,void setBevelType(int bevelType),False,,NULL
7,SoftBevelBorder,5,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the specified
 position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class BevelBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
8,StrokeBorder,1,StrokeBorder(Stroke stroke),False,,NULL
8,StrokeBorder,2,Stroke getStroke(),False,,NULL
8,StrokeBorder,3,void setStroke(Stroke newStroke),False,,NULL
8,StrokeBorder,4,Insets getBorderInsets(Component c),False,,NULL
8,StrokeBorder,5,boolean isBorderOpaque(),False,,NULL
9,TitledBorder,1,"TitledBorder(Border border, String title, int justification, int titlePosition)",False,,NULL
9,TitledBorder,2,Border getBorder(),True,Returns the border of the titled border.,"

getBorder
public Border getBorder()
Returns the border of the titled border.

Returns:
the border of the titled border


"
9,TitledBorder,3,String getTitle(),True,Returns the title of the titled border.,"

getTitle
public String getTitle()
Returns the title of the titled border.

Returns:
the title of the titled border


"
9,TitledBorder,4,int getTitleJustification(),True,Returns the title-justification of the titled border.,"

getTitleJustification
public int getTitleJustification()
Returns the title-justification of the titled border.

Returns:
the title-justification of the titled border


"
9,TitledBorder,5,int getTitlePosition(),True,Returns the title-position of the titled border.,"

getTitlePosition
public int getTitlePosition()
Returns the title-position of the titled border.

Returns:
the title-position of the titled border


"
