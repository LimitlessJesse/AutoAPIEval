Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,AttributeListImpl,1,boolean add(E e),False,,NULL
0,AttributeListImpl,2,E get(int index),False,,NULL
0,AttributeListImpl,3,E remove(int index),False,,NULL
0,AttributeListImpl,4,"E set(int index, E element)",False,,NULL
0,AttributeListImpl,5,int size(),False,,NULL
1,AttributesImpl,1,boolean add(E e),False,,NULL
1,AttributesImpl,2,"void add(int index, E element)",False,,NULL
1,AttributesImpl,3,boolean addAll(Collection<? extends E> c),False,,NULL
1,AttributesImpl,4,"boolean addAll(int index, Collection<? extends E> c)",False,,NULL
1,AttributesImpl,5,void clear(),True,Clear the attribute list for reuse.,"

clear
public void clear()
Clear the attribute list for reuse.

 Note that little memory is freed by this call:
 the current array is kept so it can be
 reused.

"
2,DefaultHandler,1,void startDocument(),True,Receive notification of the beginning of the document.,"

startDocument
public void startDocument()
                   throws SAXException
Receive notification of the beginning of the document.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the beginning
 of a document (such as allocating the root node of a tree or
 creating an output file).

Specified by:
startDocument in interface ContentHandler
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
ContentHandler.startDocument()


"
2,DefaultHandler,2,void endDocument(),True,Receive notification of the end of the document.,"

endDocument
public void endDocument()
                 throws SAXException
Receive notification of the end of the document.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the end
 of a document (such as finalising a tree or closing an output
 file).

Specified by:
endDocument in interface ContentHandler
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
ContentHandler.endDocument()


"
2,DefaultHandler,3,"void startElement(String uri, String localName, String qName, Attributes attributes)",True,Receive notification of the start of an element.,"

startElement
public void startElement(String uri,
                         String localName,
                         String qName,
                         Attributes attributes)
                  throws SAXException
Receive notification of the start of an element.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the start of
 each element (such as allocating a new tree node or writing
 output to a file).

Specified by:
startElement in interface ContentHandler
Parameters:
uri - The Namespace URI, or the empty string if the
        element has no Namespace URI or if Namespace
        processing is not being performed.
localName - The local name (without prefix), or the
        empty string if Namespace processing is not being
        performed.
qName - The qualified name (with prefix), or the
        empty string if qualified names are not available.
attributes - The attributes attached to the element.  If
        there are no attributes, it shall be an empty
        Attributes object.
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
ContentHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)


"
2,DefaultHandler,4,"void endElement(String uri, String localName, String qName)",True,Receive notification of the end of an element.,"

endElement
public void endElement(String uri,
                       String localName,
                       String qName)
                throws SAXException
Receive notification of the end of an element.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the end of
 each element (such as finalising a tree node or writing
 output to a file).

Specified by:
endElement in interface ContentHandler
Parameters:
uri - The Namespace URI, or the empty string if the
        element has no Namespace URI or if Namespace
        processing is not being performed.
localName - The local name (without prefix), or the
        empty string if Namespace processing is not being
        performed.
qName - The qualified name (with prefix), or the
        empty string if qualified names are not available.
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
ContentHandler.endElement(java.lang.String, java.lang.String, java.lang.String)


"
2,DefaultHandler,5,"void characters(char ch[], int start, int length)",False,,NULL
3,LocatorImpl,1,int getLineNumber(),True,Return the saved line number (1-based).,"

getLineNumber
public int getLineNumber()
Return the saved line number (1-based).

Specified by:
getLineNumber in interface Locator
Returns:
The line number as an integer, or -1 if none is available.
See Also:
Locator.getLineNumber(), 
setLineNumber(int)


"
3,LocatorImpl,2,int getColumnNumber(),True,Return the saved column number (1-based).,"

getColumnNumber
public int getColumnNumber()
Return the saved column number (1-based).

Specified by:
getColumnNumber in interface Locator
Returns:
The column number as an integer, or -1 if none is available.
See Also:
Locator.getColumnNumber(), 
setColumnNumber(int)


"
3,LocatorImpl,3,String getPublicId(),True,Return the saved public identifier.,"

getPublicId
public String getPublicId()
Return the saved public identifier.

Specified by:
getPublicId in interface Locator
Returns:
The public identifier as a string, or null if none
         is available.
See Also:
Locator.getPublicId(), 
setPublicId(java.lang.String)


"
3,LocatorImpl,4,String getSystemId(),True,Return the saved system identifier.,"

getSystemId
public String getSystemId()
Return the saved system identifier.

Specified by:
getSystemId in interface Locator
Returns:
The system identifier as a string, or null if none
         is available.
See Also:
Locator.getSystemId(), 
setSystemId(java.lang.String)


"
3,LocatorImpl,5,String getCharacterEncodingScheme(),False,,NULL
4,NamespaceSupport,1,"boolean add(String prefix, String uri)",False,,NULL
4,NamespaceSupport,2,"boolean add(String prefix, String uri, String defaultElement)",False,,NULL
4,NamespaceSupport,3,"boolean add(String prefix, String uri, String defaultElement, String defaultAttribute)",False,,NULL
4,NamespaceSupport,4,"boolean add(String prefix, String uri, String defaultElement, String defaultAttribute, String defaultNamespace)",False,,NULL
4,NamespaceSupport,5,"boolean add(String prefix, String uri, String defaultElement, String defaultAttribute, String defaultNamespace, String defaultNamespacePrefix)",False,,NULL
5,ParserAdapter,1,void setContentHandler(ContentHandler handler),True,Set the content handler.,"

setContentHandler
public void setContentHandler(ContentHandler handler)
Set the content handler.

Specified by:
setContentHandler in interface XMLReader
Parameters:
handler - the new content handler
See Also:
XMLReader.setEntityResolver(org.xml.sax.EntityResolver)


"
5,ParserAdapter,2,void setDTDHandler(DTDHandler handler),True,Set the DTD handler.,"

setDTDHandler
public void setDTDHandler(DTDHandler handler)
Set the DTD handler.

Specified by:
setDTDHandler in interface XMLReader
Parameters:
handler - the new DTD handler
See Also:
XMLReader.setEntityResolver(org.xml.sax.EntityResolver)


"
5,ParserAdapter,3,void setEntityResolver(EntityResolver resolver),True,Set the entity resolver.,"

setEntityResolver
public void setEntityResolver(EntityResolver resolver)
Set the entity resolver.

Specified by:
setEntityResolver in interface XMLReader
Parameters:
resolver - The new entity resolver.
See Also:
XMLReader.setEntityResolver(org.xml.sax.EntityResolver)


"
5,ParserAdapter,4,void setErrorHandler(ErrorHandler handler),True,Set the error handler.,"

setErrorHandler
public void setErrorHandler(ErrorHandler handler)
Set the error handler.

Specified by:
setErrorHandler in interface XMLReader
Parameters:
handler - The new error handler.
See Also:
XMLReader.setEntityResolver(org.xml.sax.EntityResolver)


"
5,ParserAdapter,5,"void parse(InputSource input) throws SAXException, IOException",True,Parse an XML document.,"

parse
public void parse(InputSource input)
           throws IOException,
                  SAXException
Parse an XML document.

Specified by:
parse in interface XMLReader
Parameters:
input - An input source for the document.
Throws:
IOException - If there is a problem reading
            the raw content of the document.
SAXException - If there is a problem
            processing the document.
See Also:
parse(java.lang.String), 
Parser.parse(org.xml.sax.InputSource)


"
6,ParserFactory,1,ParserFactory.newInstance(),False,,NULL
6,ParserFactory,2,ParserFactory.newParser(),False,,NULL
6,ParserFactory,3,ParserFactory.setFeature(),False,,NULL
6,ParserFactory,4,ParserFactory.getFeature(),False,,NULL
6,ParserFactory,5,ParserFactory.setProperty(),False,,NULL
7,XMLFilterImpl,1,void setParent(XMLReader parent),True,Set the parent reader.,"

setParent
public void setParent(XMLReader parent)
Set the parent reader.

 This is the XMLReader from which
 this filter will obtain its events and to which it will pass its
 configuration requests.  The parent may itself be another filter.
If there is no parent reader set, any attempt to parse
 or to set or get a feature or property will fail.

Specified by:
setParent in interface XMLFilter
Parameters:
parent - The parent XML reader.
See Also:
getParent()


"
7,XMLFilterImpl,2,void setDocumentLocator(Locator locator),True,Filter a new document locator event.,"

setDocumentLocator
public void setDocumentLocator(Locator locator)
Filter a new document locator event.

Specified by:
setDocumentLocator in interface ContentHandler
Parameters:
locator - The document locator.
See Also:
Locator


"
7,XMLFilterImpl,3,void startDocument(),True,Filter a start document event.,"

startDocument
public void startDocument()
                   throws SAXException
Filter a start document event.

Specified by:
startDocument in interface ContentHandler
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.endDocument()


"
7,XMLFilterImpl,4,void endDocument(),True,Filter an end document event.,"

endDocument
public void endDocument()
                 throws SAXException
Filter an end document event.

Specified by:
endDocument in interface ContentHandler
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.startDocument()


"
7,XMLFilterImpl,5,"void startPrefixMapping(String prefix, String uri)",True,Filter a start Namespace prefix mapping event.,"

startPrefixMapping
public void startPrefixMapping(String prefix,
                               String uri)
                        throws SAXException
Filter a start Namespace prefix mapping event.

Specified by:
startPrefixMapping in interface ContentHandler
Parameters:
prefix - The Namespace prefix.
uri - The Namespace URI.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.endPrefixMapping(java.lang.String), 
ContentHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)


"
7,XMLFilterImpl,6,void endPrefixMapping(String prefix),True,Filter an end Namespace prefix mapping event.,"

endPrefixMapping
public void endPrefixMapping(String prefix)
                      throws SAXException
Filter an end Namespace prefix mapping event.

Specified by:
endPrefixMapping in interface ContentHandler
Parameters:
prefix - The Namespace prefix.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.startPrefixMapping(java.lang.String, java.lang.String), 
ContentHandler.endElement(java.lang.String, java.lang.String, java.lang.String)


"
7,XMLFilterImpl,7,"void startElement(String uri, String localName, String qName, Attributes atts)",True,Filter a start element event.,"

startElement
public void startElement(String uri,
                         String localName,
                         String qName,
                         Attributes atts)
                  throws SAXException
Filter a start element event.

Specified by:
startElement in interface ContentHandler
Parameters:
uri - The element's Namespace URI, or the empty string.
localName - The element's local name, or the empty string.
qName - The element's qualified (prefixed) name, or the empty
        string.
atts - The element's attributes.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.endElement(java.lang.String, java.lang.String, java.lang.String), 
Attributes, 
AttributesImpl


"
7,XMLFilterImpl,8,"void endElement(String uri, String localName, String qName)",True,Filter an end element event.,"

endElement
public void endElement(String uri,
                       String localName,
                       String qName)
                throws SAXException
Filter an end element event.

Specified by:
endElement in interface ContentHandler
Parameters:
uri - The element's Namespace URI, or the empty string.
localName - The element's local name, or the empty string.
qName - The element's qualified (prefixed) name, or the empty
        string.
Throws:
SAXException - The client may throw
            an exception during processing.


"
7,XMLFilterImpl,9,"void characters(char[] ch, int start, int length)",True,Filter a character data event.,"

characters
public void characters(char[] ch,
                       int start,
                       int length)
                throws SAXException
Filter a character data event.

Specified by:
characters in interface ContentHandler
Parameters:
ch - An array of characters.
start - The starting position in the array.
length - The number of characters to use from the array.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.ignorableWhitespace(char[], int, int), 
Locator


"
7,XMLFilterImpl,10,"void ignorableWhitespace(char[] ch, int start, int length)",True,Filter an ignorable whitespace event.,"

ignorableWhitespace
public void ignorableWhitespace(char[] ch,
                                int start,
                                int length)
                         throws SAXException
Filter an ignorable whitespace event.

Specified by:
ignorableWhitespace in interface ContentHandler
Parameters:
ch - An array of characters.
start - The starting position in the array.
length - The number of characters to use from the array.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
ContentHandler.characters(char[], int, int)


"
7,XMLFilterImpl,11,"void processingInstruction(String target, String data)",True,Filter a processing instruction event.,"

processingInstruction
public void processingInstruction(String target,
                                  String data)
                           throws SAXException
Filter a processing instruction event.

Specified by:
processingInstruction in interface ContentHandler
Parameters:
target - The processing instruction target.
data - The text following the target.
Throws:
SAXException - The client may throw
            an exception during processing.


"
7,XMLFilterImpl,12,void skippedEntity(String name),True,Filter a skipped entity event.,"

skippedEntity
public void skippedEntity(String name)
                   throws SAXException
Filter a skipped entity event.

Specified by:
skippedEntity in interface ContentHandler
Parameters:
name - The name of the skipped entity.
Throws:
SAXException - The client may throw
            an exception during processing.


"
7,XMLFilterImpl,13,void warning(SAXParseException e),True,Filter a warning event.,"

warning
public void warning(SAXParseException e)
             throws SAXException
Filter a warning event.

Specified by:
warning in interface ErrorHandler
Parameters:
e - The warning as an exception.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
SAXParseException


"
7,XMLFilterImpl,14,void error(SAXParseException e),True,Filter an error event.,"

error
public void error(SAXParseException e)
           throws SAXException
Filter an error event.

Specified by:
error in interface ErrorHandler
Parameters:
e - The error as an exception.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
SAXParseException


"
7,XMLFilterImpl,15,void fatalError(SAXParseException e),True,Filter a fatal error event.,"

fatalError
public void fatalError(SAXParseException e)
                throws SAXException
Filter a fatal error event.

Specified by:
fatalError in interface ErrorHandler
Parameters:
e - The error as an exception.
Throws:
SAXException - The client may throw
            an exception during processing.
See Also:
SAXParseException


"
8,XMLReaderAdapter,1,void setContentHandler(ContentHandler handler),False,,NULL
8,XMLReaderAdapter,2,void setDTDHandler(DTDHandler handler),True,Register the DTD event handler.,"

setDTDHandler
public void setDTDHandler(DTDHandler handler)
Register the DTD event handler.

Specified by:
setDTDHandler in interface Parser
Parameters:
handler - The new DTD event handler.
See Also:
Parser.setDTDHandler(org.xml.sax.DTDHandler)


"
8,XMLReaderAdapter,3,void setEntityResolver(EntityResolver resolver),True,Register the entity resolver.,"

setEntityResolver
public void setEntityResolver(EntityResolver resolver)
Register the entity resolver.

Specified by:
setEntityResolver in interface Parser
Parameters:
resolver - The new resolver.
See Also:
Parser.setEntityResolver(org.xml.sax.EntityResolver)


"
8,XMLReaderAdapter,4,void setErrorHandler(ErrorHandler handler),True,Register the error event handler.,"

setErrorHandler
public void setErrorHandler(ErrorHandler handler)
Register the error event handler.

Specified by:
setErrorHandler in interface Parser
Parameters:
handler - The new error event handler.
See Also:
Parser.setErrorHandler(org.xml.sax.ErrorHandler)


"
8,XMLReaderAdapter,5,"void parse(InputSource input) throws SAXException, IOException",True,Parse the document.,"

parse
public void parse(InputSource input)
           throws IOException,
                  SAXException
Parse the document.

 This method will throw an exception if the embedded
 XMLReader does not support the
 http://xml.org/sax/features/namespace-prefixes property.

Specified by:
parse in interface Parser
Parameters:
input - An input source for the document.
Throws:
IOException - If there is a problem reading
            the raw content of the document.
SAXException - If there is a problem
            processing the document.
See Also:
parse(java.lang.String), 
Parser.parse(org.xml.sax.InputSource)


"
9,XMLReaderFactory,1,XMLReaderFactory.createXMLReader(),False,,NULL
9,XMLReaderFactory,2,XMLReaderFactory.getXMLReader(),False,,NULL
9,XMLReaderFactory,3,XMLReaderFactory.getXMLReader(String parser),False,,NULL
9,XMLReaderFactory,4,"XMLReaderFactory.getXMLReader(String parser, String classname)",False,,NULL
9,XMLReaderFactory,5,"XMLReaderFactory.getXMLReader(String parser, String classname, String feature, boolean value)",False,,NULL
