ClassName,Method,Return Type,Description,Full Description
ColorType,getID(),int,"Returns a unique id, as an integer, for this ColorType.","

getID
public final int getID()
Returns a unique id, as an integer, for this ColorType.

Returns:
a unique id, as an integer, for this ColorType.


"
ColorType,toString(),String,Returns the textual description of this ColorType.,"

toString
public String toString()
Returns the textual description of this ColorType.
 This is the same value that the ColorType was created
 with.

Overrides:
toString in class Object
Returns:
the description of the string


"
Region,getName(),String,Returns the name of the region.,"

getName
public String getName()
Returns the name of the region.

Returns:
name of the Region.


"
Region,isSubregion(),boolean,"Returns true if the Region is a subregion of a Component, otherwise false.","

isSubregion
public boolean isSubregion()
Returns true if the Region is a subregion of a Component, otherwise
 false. For example, Region.BUTTON corresponds do a
 Component so that Region.BUTTON.isSubregion()
 returns false.

Returns:
true if the Region is a subregion of a Component.


"
Region,toString(),String,Returns the name of the Region.,"

toString
public String toString()
Returns the name of the Region.

Overrides:
toString in class Object
Returns:
name of the Region.


"
SynthButtonUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthButtonUI,"getBaseline(JComponent c, int width, int height)",int,Returns the baseline.,"

getBaseline
public int getBaseline(JComponent c,
                       int width,
                       int height)
Returns the baseline.

Overrides:
getBaseline in class BasicButtonUI
Parameters:
c - JComponent baseline is being requested for
width - the width to get the baseline for
height - the height to get the baseline for
Returns:
baseline or a value < 0 indicating there is no reasonable
                  baseline
See Also:
JComponent.getBaseline(int, int)


"
SynthButtonUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthButtonUI,getDefaultIcon(AbstractButton b),protected Icon,Returns the default icon.,"

getDefaultIcon
protected Icon getDefaultIcon(AbstractButton b)
Returns the default icon. This should not callback
 to the JComponent.

Parameters:
b - button the icon is associated with
Returns:
default icon


"
SynthButtonUI,getIcon(AbstractButton b),protected Icon,Returns the Icon to use for painting the button.,"

getIcon
protected Icon getIcon(AbstractButton b)
Returns the Icon to use for painting the button. The icon is chosen with
 respect to the current state of the button.

Parameters:
b - button the icon is associated with
Returns:
an icon


"
SynthButtonUI,getMaximumSize(JComponent c),Dimension,Returns the specified component's maximum size appropriate for the look and feel.,"

getMaximumSize
public Dimension getMaximumSize(JComponent c)
Returns the specified component's maximum size appropriate for
 the look and feel.  If null is returned, the maximum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMaximumSize in class BasicButtonUI
Parameters:
c - the component whose maximum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a Dimension object or null
See Also:
JComponent.getMaximumSize(), 
LayoutManager2.maximumLayoutSize(java.awt.Container)


"
SynthButtonUI,getMinimumSize(JComponent c),Dimension,Returns the specified component's minimum size appropriate for the look and feel.,"

getMinimumSize
public Dimension getMinimumSize(JComponent c)
Returns the specified component's minimum size appropriate for
 the look and feel.  If null is returned, the minimum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMinimumSize in class BasicButtonUI
Parameters:
c - the component whose minimum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a Dimension object or null
See Also:
JComponent.getMinimumSize(), 
LayoutManager.minimumLayoutSize(java.awt.Container), 
ComponentUI.getPreferredSize(javax.swing.JComponent)


"
SynthButtonUI,getPreferredSize(JComponent c),Dimension,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicButtonUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
SynthButtonUI,getSizingIcon(AbstractButton b),protected Icon,Returns the Icon used in calculating the preferred/minimum/maximum size.,"

getSizingIcon
protected Icon getSizingIcon(AbstractButton b)
Returns the Icon used in calculating the
 preferred/minimum/maximum size.

"
SynthButtonUI,installDefaults(AbstractButton b),protected void,NULL,"

installDefaults
protected void installDefaults(AbstractButton b)

Overrides:
installDefaults in class BasicButtonUI


"
SynthButtonUI,installListeners(AbstractButton b),protected void,NULL,"

installListeners
protected void installListeners(AbstractButton b)

Overrides:
installListeners in class BasicButtonUI


"
SynthButtonUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicButtonUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthButtonUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthButtonUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthButtonUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthButtonUI,uninstallDefaults(AbstractButton b),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults(AbstractButton b)

Overrides:
uninstallDefaults in class BasicButtonUI


"
SynthButtonUI,uninstallListeners(AbstractButton b),protected void,NULL,"

uninstallListeners
protected void uninstallListeners(AbstractButton b)

Overrides:
uninstallListeners in class BasicButtonUI


"
SynthButtonUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthCheckBoxMenuItemUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthCheckBoxMenuItemUI,getPropertyPrefix(),protected String,NULL,"

getPropertyPrefix
protected String getPropertyPrefix()

Overrides:
getPropertyPrefix in class BasicMenuItemUI


"
SynthCheckBoxMenuItemUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthMenuItemUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthCheckBoxUI,createUI(JComponent b),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent b)
Creates a new UI object for the given component.

Parameters:
b - component to create UI object for
Returns:
the UI object


"
SynthCheckBoxUI,getPropertyPrefix(),protected String,NULL,"

getPropertyPrefix
protected String getPropertyPrefix()

Overrides:
getPropertyPrefix in class SynthRadioButtonUI


"
SynthCheckBoxUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthRadioButtonUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthColorChooserUI,createDefaultChoosers(),protected AbstractColorChooserPanel[],NULL,"

createDefaultChoosers
protected AbstractColorChooserPanel[] createDefaultChoosers()

Overrides:
createDefaultChoosers in class BasicColorChooserUI


"
SynthColorChooserUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthColorChooserUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthColorChooserUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicColorChooserUI


"
SynthColorChooserUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicColorChooserUI


"
SynthColorChooserUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthColorChooserUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.
 This implementation does not perform any actions.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthColorChooserUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthColorChooserUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthColorChooserUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicColorChooserUI


"
SynthColorChooserUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicColorChooserUI


"
SynthColorChooserUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthComboBoxUI,createArrowButton(),protected JButton,Creates a button which will be used as the control to show or hide the popup portion of the combo box.,"

createArrowButton
protected JButton createArrowButton()
Creates a button which will be used as the control to show or hide
 the popup portion of the combo box.

Overrides:
createArrowButton in class BasicComboBoxUI
Returns:
a button which represents the popup control


"
SynthComboBoxUI,createEditor(),protected ComboBoxEditor,Creates the default editor that will be used in editable combo boxes.,"

createEditor
protected ComboBoxEditor createEditor()
Creates the default editor that will be used in editable combo boxes.
 A default editor will be used only if an editor has not been
 explicitly set with setEditor.

Overrides:
createEditor in class BasicComboBoxUI
Returns:
a ComboBoxEditor used for the combo box
See Also:
JComboBox.setEditor(javax.swing.ComboBoxEditor)


"
SynthComboBoxUI,createPopup(),protected ComboPopup,Creates the popup portion of the combo box.,"

createPopup
protected ComboPopup createPopup()
Creates the popup portion of the combo box.

Overrides:
createPopup in class BasicComboBoxUI
Returns:
an instance of ComboPopup
See Also:
ComboPopup


"
SynthComboBoxUI,createRenderer(),protected ListCellRenderer,Creates the default renderer that will be used in a non-editiable combo box.,"

createRenderer
protected ListCellRenderer createRenderer()
Creates the default renderer that will be used in a non-editiable combo
 box. A default renderer will used only if a renderer has not been
 explicitly set with setRenderer.

Overrides:
createRenderer in class BasicComboBoxUI
Returns:
a ListCellRender used for the combo box
See Also:
JComboBox.setRenderer(javax.swing.ListCellRenderer<? super E>)


"
SynthComboBoxUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthComboBoxUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthComboBoxUI,getDefaultSize(),protected Dimension,Returns the default size of an empty display area of the combo box using the current renderer and font.,"

getDefaultSize
protected Dimension getDefaultSize()
Returns the default size of an empty display area of the combo box using
 the current renderer and font.

 This method was overridden to use SynthComboBoxRenderer instead of
 DefaultListCellRenderer as the default renderer when calculating the
 size of the combo box. This is used in the case of the combo not having
 any data.

Overrides:
getDefaultSize in class BasicComboBoxUI
Returns:
the size of an empty display area
See Also:
BasicComboBoxUI.getDisplaySize()


"
SynthComboBoxUI,installDefaults(),protected void,"Installs the default colors, default font, default renderer, and default editor into the JComboBox.","

installDefaults
protected void installDefaults()
Description copied from class: BasicComboBoxUI
Installs the default colors, default font, default renderer, and default
 editor into the JComboBox.

Overrides:
installDefaults in class BasicComboBoxUI


"
SynthComboBoxUI,installListeners(),protected void,Creates and installs listeners for the combo box and its model.,"

installListeners
protected void installListeners()
Creates and installs listeners for the combo box and its model.
 This method is called when the UI is installed.

Overrides:
installListeners in class BasicComboBoxUI


"
SynthComboBoxUI,installUI(JComponent c),void,Configures the specified component appropriately for the look and feel.,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

 Overridden to ensure that ButtonHandler is created prior to any of
 the other installXXX methods, since several of them reference
 buttonHandler.

Overrides:
installUI in class BasicComboBoxUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
SynthComboBoxUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicComboBoxUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthComboBoxUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthComboBoxUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthComboBoxUI,"paintCurrentValue(Graphics g, Rectangle bounds, boolean hasFocus)",void,Paints the currently selected item.,"

paintCurrentValue
public void paintCurrentValue(Graphics g,
                              Rectangle bounds,
                              boolean hasFocus)
Paints the currently selected item.

Overrides:
paintCurrentValue in class BasicComboBoxUI


"
SynthComboBoxUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthComboBoxUI,uninstallDefaults(),protected void,"Uninstalls the default colors, default font, default renderer, and default editor from the combo box.","

uninstallDefaults
protected void uninstallDefaults()
Uninstalls the default colors, default font, default renderer,
 and default editor from the combo box.

Overrides:
uninstallDefaults in class BasicComboBoxUI


"
SynthComboBoxUI,uninstallListeners(),protected void,Removes the installed listeners from the combo box and its model.,"

uninstallListeners
protected void uninstallListeners()
Removes the installed listeners from the combo box and its model.
 The number and types of listeners removed and in this method should be
 the same that was added in installListeners

Overrides:
uninstallListeners in class BasicComboBoxUI


"
SynthComboBoxUI,uninstallUI(JComponent c),void,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicComboBoxUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
SynthComboBoxUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthContext,getComponent(),JComponent,Returns the hosting component containing the region.,"

getComponent
public JComponent getComponent()
Returns the hosting component containing the region.

Returns:
Hosting Component


"
SynthContext,getComponentState(),int,"Returns the state of the widget, which is a bitmask of the values defined in SynthConstants.","

getComponentState
public int getComponentState()
Returns the state of the widget, which is a bitmask of the
 values defined in SynthConstants. A region will at least
 be in one of
 ENABLED, MOUSE_OVER, PRESSED
 or DISABLED.

Returns:
State of Component
See Also:
SynthConstants


"
SynthContext,getRegion(),Region,Returns the Region identifying this state.,"

getRegion
public Region getRegion()
Returns the Region identifying this state.

Returns:
Region of the hosting component


"
SynthContext,getStyle(),SynthStyle,Returns the style associated with this Region.,"

getStyle
public SynthStyle getStyle()
Returns the style associated with this Region.

Returns:
SynthStyle associated with the region.


"
SynthDesktopIconUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthDesktopIconUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthDesktopIconUI,installComponents(),protected void,NULL,"

installComponents
protected void installComponents()

Overrides:
installComponents in class BasicDesktopIconUI


"
SynthDesktopIconUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicDesktopIconUI


"
SynthDesktopIconUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicDesktopIconUI


"
SynthDesktopIconUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthDesktopIconUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthDesktopIconUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthDesktopIconUI,propertyChange(PropertyChangeEvent evt),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent evt)
Description copied from interface: PropertyChangeListener
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
evt - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthDesktopIconUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicDesktopIconUI


"
SynthDesktopIconUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicDesktopIconUI


"
SynthDesktopIconUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthDesktopPaneUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthDesktopPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthDesktopPaneUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicDesktopPaneUI


"
SynthDesktopPaneUI,installDesktopManager(),protected void,NULL,"

installDesktopManager
protected void installDesktopManager()

Overrides:
installDesktopManager in class BasicDesktopPaneUI


"
SynthDesktopPaneUI,installListeners(),protected void,Installs the PropertyChangeListener returned from createPropertyChangeListener on the JDesktopPane.,"

installListeners
protected void installListeners()
Installs the PropertyChangeListener returned from
 createPropertyChangeListener on the
 JDesktopPane.

Overrides:
installListeners in class BasicDesktopPaneUI
See Also:
BasicDesktopPaneUI.createPropertyChangeListener()


"
SynthDesktopPaneUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicDesktopPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthDesktopPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthDesktopPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthDesktopPaneUI,propertyChange(PropertyChangeEvent evt),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
evt - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthDesktopPaneUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicDesktopPaneUI


"
SynthDesktopPaneUI,uninstallDesktopManager(),protected void,NULL,"

uninstallDesktopManager
protected void uninstallDesktopManager()

Overrides:
uninstallDesktopManager in class BasicDesktopPaneUI


"
SynthDesktopPaneUI,uninstallListeners(),protected void,Uninstalls the PropertyChangeListener returned from createPropertyChangeListener from the JDesktopPane.,"

uninstallListeners
protected void uninstallListeners()
Uninstalls the PropertyChangeListener returned from
 createPropertyChangeListener from the
 JDesktopPane.

Overrides:
uninstallListeners in class BasicDesktopPaneUI
See Also:
BasicDesktopPaneUI.createPropertyChangeListener()


"
SynthDesktopPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthEditorPaneUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthEditorPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthEditorPaneUI,installDefaults(),protected void,"Initializes component properties, such as font, foreground, background, caret color, selection color, selected text color, disabled text color, and border color.","

installDefaults
protected void installDefaults()
Initializes component properties, such as font, foreground,
 background, caret color, selection color, selected text color,
 disabled text color, and border color.  The font, foreground, and
 background properties are only set if their current value is either null
 or a UIResource, other properties are set if the current
 value is null.

Overrides:
installDefaults in class BasicTextUI
See Also:
BasicTextUI.uninstallDefaults(), 
BasicTextUI.installUI(javax.swing.JComponent)


"
SynthEditorPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthEditorPaneUI,paintBackground(Graphics g),protected void,Paints a background for the view.,"

paintBackground
protected void paintBackground(Graphics g)
Paints a background for the view.  This will only be
 called if isOpaque() on the associated component is
 true.  The default is to paint the background color
 of the component.

Overrides:
paintBackground in class BasicTextUI
Parameters:
g - the graphics context


"
SynthEditorPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthEditorPaneUI,propertyChange(PropertyChangeEvent evt),protected void,This method gets called when a bound property is changed on the associated JTextComponent.,"

propertyChange
protected void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed
 on the associated JTextComponent.  This is a hook
 which UI implementations may change to reflect how the
 UI displays bound properties of JTextComponent subclasses.
 This is implemented to rebuild the ActionMap based upon an
 EditorKit change.

Overrides:
propertyChange in class BasicEditorPaneUI
Parameters:
evt - the property change event


"
SynthEditorPaneUI,uninstallDefaults(),protected void,Sets the component properties that have not been explicitly overridden to null.,"

uninstallDefaults
protected void uninstallDefaults()
Sets the component properties that have not been explicitly overridden
 to null.  A property is considered overridden if its current
 value is not a UIResource.

Overrides:
uninstallDefaults in class BasicTextUI
See Also:
BasicTextUI.installDefaults(), 
BasicTextUI.uninstallUI(javax.swing.JComponent)


"
SynthEditorPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicTextUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthFormattedTextFieldUI,createUI(JComponent c),static ComponentUI,Creates a UI for a JFormattedTextField.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a UI for a JFormattedTextField.

Parameters:
c - the formatted text field
Returns:
the UI


"
SynthFormattedTextFieldUI,getPropertyPrefix(),protected String,Fetches the name used as a key to lookup properties through the UIManager.,"

getPropertyPrefix
protected String getPropertyPrefix()
Fetches the name used as a key to lookup properties through the
 UIManager.  This is used as a prefix to all the standard
 text properties.

Overrides:
getPropertyPrefix in class BasicTextFieldUI
Returns:
the name ""FormattedTextField""


"
SynthFormattedTextFieldUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthTextFieldUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthGraphicsUtils,"computeStringWidth(SynthContext ss, Font font, FontMetrics metrics, String text)",int,Returns the size of the passed in string.,"

computeStringWidth
public int computeStringWidth(SynthContext ss,
                              Font font,
                              FontMetrics metrics,
                              String text)
Returns the size of the passed in string.

Parameters:
ss - SynthContext
font - Font to use
metrics - FontMetrics, may be ignored
text - Text to get size of.


"
SynthGraphicsUtils,"drawLine(SynthContext context, Object paintKey, Graphics g, int x1, int y1, int x2, int y2)",void,Draws a line between the two end points.,"

drawLine
public void drawLine(SynthContext context,
                     Object paintKey,
                     Graphics g,
                     int x1,
                     int y1,
                     int x2,
                     int y2)
Draws a line between the two end points.

Parameters:
context - Identifies hosting region.
paintKey - Identifies the portion of the component being asked
                 to paint, may be null.
g - Graphics object to paint to
x1 - x origin
y1 - y origin
x2 - x destination
y2 - y destination


"
SynthGraphicsUtils,"drawLine(SynthContext context, Object paintKey, Graphics g, int x1, int y1, int x2, int y2, Object styleKey)",void,Draws a line between the two end points.,"

drawLine
public void drawLine(SynthContext context,
                     Object paintKey,
                     Graphics g,
                     int x1,
                     int y1,
                     int x2,
                     int y2,
                     Object styleKey)
Draws a line between the two end points.
 This implementation supports only one line style key,
 ""dashed"". The ""dashed"" line style is applied
 only to vertical and horizontal lines.
 Specifying null or any key different from
 ""dashed"" will draw solid lines.

Parameters:
context - identifies hosting region
paintKey - identifies the portion of the component being asked
                 to paint, may be null
g - Graphics object to paint to
x1 - x origin
y1 - y origin
x2 - x destination
y2 - y destination
styleKey - identifies the requested style of the line (e.g. ""dashed"")
Since:
1.6


"
SynthGraphicsUtils,getMaximumCharHeight(SynthContext context),int,Returns the maximum height of the the Font from the passed in SynthContext.,"

getMaximumCharHeight
public int getMaximumCharHeight(SynthContext context)
Returns the maximum height of the the Font from the passed in
 SynthContext.

Parameters:
context - SynthContext used to determine font.
Returns:
maximum height of the characters for the font from the passed
         in context.


"
SynthGraphicsUtils,"getMaximumSize(SynthContext ss, Font font, String text, Icon icon, int hAlign, int vAlign, int hTextPosition, int vTextPosition, int iconTextGap, int mnemonicIndex)",Dimension,Returns the maximum size needed to properly render an icon and text.,"

getMaximumSize
public Dimension getMaximumSize(SynthContext ss,
                                Font font,
                                String text,
                                Icon icon,
                                int hAlign,
                                int vAlign,
                                int hTextPosition,
                                int vTextPosition,
                                int iconTextGap,
                                int mnemonicIndex)
Returns the maximum size needed to properly render an icon and text.

Parameters:
ss - SynthContext
font - Font to use
text - Text to layout
icon - Icon to layout
hAlign - horizontal alignment
vAlign - vertical alignment
hTextPosition - horizontal text position
vTextPosition - vertical text position
iconTextGap - gap between icon and text
mnemonicIndex - Index into text to render the mnemonic at, -1
        indicates no mnemonic.


"
SynthGraphicsUtils,"getMinimumSize(SynthContext ss, Font font, String text, Icon icon, int hAlign, int vAlign, int hTextPosition, int vTextPosition, int iconTextGap, int mnemonicIndex)",Dimension,Returns the minimum size needed to properly render an icon and text.,"

getMinimumSize
public Dimension getMinimumSize(SynthContext ss,
                                Font font,
                                String text,
                                Icon icon,
                                int hAlign,
                                int vAlign,
                                int hTextPosition,
                                int vTextPosition,
                                int iconTextGap,
                                int mnemonicIndex)
Returns the minimum size needed to properly render an icon and text.

Parameters:
ss - SynthContext
font - Font to use
text - Text to layout
icon - Icon to layout
hAlign - horizontal alignment
vAlign - vertical alignment
hTextPosition - horizontal text position
vTextPosition - vertical text position
iconTextGap - gap between icon and text
mnemonicIndex - Index into text to render the mnemonic at, -1
        indicates no mnemonic.


"
SynthGraphicsUtils,"getPreferredSize(SynthContext ss, Font font, String text, Icon icon, int hAlign, int vAlign, int hTextPosition, int vTextPosition, int iconTextGap, int mnemonicIndex)",Dimension,Returns the preferred size needed to properly render an icon and text.,"

getPreferredSize
public Dimension getPreferredSize(SynthContext ss,
                                  Font font,
                                  String text,
                                  Icon icon,
                                  int hAlign,
                                  int vAlign,
                                  int hTextPosition,
                                  int vTextPosition,
                                  int iconTextGap,
                                  int mnemonicIndex)
Returns the preferred size needed to properly render an icon and text.

Parameters:
ss - SynthContext
font - Font to use
text - Text to layout
icon - Icon to layout
hAlign - horizontal alignment
vAlign - vertical alignment
hTextPosition - horizontal text position
vTextPosition - vertical text position
iconTextGap - gap between icon and text
mnemonicIndex - Index into text to render the mnemonic at, -1
        indicates no mnemonic.


"
SynthGraphicsUtils,"layoutText(SynthContext ss, FontMetrics fm, String text, Icon icon, int hAlign, int vAlign, int hTextPosition, int vTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int iconTextGap)",String,"Lays out text and an icon returning, by reference, the location to place the icon and text.","

layoutText
public String layoutText(SynthContext ss,
                         FontMetrics fm,
                         String text,
                         Icon icon,
                         int hAlign,
                         int vAlign,
                         int hTextPosition,
                         int vTextPosition,
                         Rectangle viewR,
                         Rectangle iconR,
                         Rectangle textR,
                         int iconTextGap)
Lays out text and an icon returning, by reference, the location to
 place the icon and text.

Parameters:
ss - SynthContext
fm - FontMetrics for the Font to use, this may be ignored
text - Text to layout
icon - Icon to layout
hAlign - horizontal alignment
vAlign - vertical alignment
hTextPosition - horizontal text position
vTextPosition - vertical text position
viewR - Rectangle to layout text and icon in.
iconR - Rectangle to place icon bounds in
textR - Rectangle to place text in
iconTextGap - gap between icon and text


"
SynthGraphicsUtils,"paintText(SynthContext ss, Graphics g, String text, Icon icon, int hAlign, int vAlign, int hTextPosition, int vTextPosition, int iconTextGap, int mnemonicIndex, int textOffset)",void,Paints an icon and text.,"

paintText
public void paintText(SynthContext ss,
                      Graphics g,
                      String text,
                      Icon icon,
                      int hAlign,
                      int vAlign,
                      int hTextPosition,
                      int vTextPosition,
                      int iconTextGap,
                      int mnemonicIndex,
                      int textOffset)
Paints an icon and text. This will render the text as html, if
 necessary, and offset the location by the insets of the component.

Parameters:
ss - SynthContext
g - Graphics to render string and icon into
text - Text to layout
icon - Icon to layout
hAlign - horizontal alignment
vAlign - vertical alignment
hTextPosition - horizontal text position
vTextPosition - vertical text position
iconTextGap - gap between icon and text
mnemonicIndex - Index into text to render the mnemonic at, -1
        indicates no mnemonic.
textOffset - Amount to offset the text when painting


"
SynthGraphicsUtils,"paintText(SynthContext ss, Graphics g, String text, int x, int y, int mnemonicIndex)",void,Paints text at the specified location.,"

paintText
public void paintText(SynthContext ss,
                      Graphics g,
                      String text,
                      int x,
                      int y,
                      int mnemonicIndex)
Paints text at the specified location. This will not attempt to
 render the text as html nor will it offset by the insets of the
 component.

Parameters:
ss - SynthContext
g - Graphics used to render string in.
text - Text to render
x - X location to draw text at.
y - Upper left corner to draw text at.
mnemonicIndex - Index to draw string at.


"
SynthGraphicsUtils,"paintText(SynthContext ss, Graphics g, String text, Rectangle bounds, int mnemonicIndex)",void,Paints text at the specified location.,"

paintText
public void paintText(SynthContext ss,
                      Graphics g,
                      String text,
                      Rectangle bounds,
                      int mnemonicIndex)
Paints text at the specified location. This will not attempt to
 render the text as html nor will it offset by the insets of the
 component.

Parameters:
ss - SynthContext
g - Graphics used to render string in.
text - Text to render
bounds - Bounds of the text to be drawn.
mnemonicIndex - Index to draw string at.


"
SynthInternalFrameUI,createComponentListener(),protected ComponentListener,NULL,"

createComponentListener
protected ComponentListener createComponentListener()

Overrides:
createComponentListener in class BasicInternalFrameUI


"
SynthInternalFrameUI,createNorthPane(JInternalFrame w),protected JComponent,NULL,"

createNorthPane
protected JComponent createNorthPane(JInternalFrame w)

Overrides:
createNorthPane in class BasicInternalFrameUI


"
SynthInternalFrameUI,createUI(JComponent b),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent b)
Creates a new UI object for the given component.

Parameters:
b - component to create UI object for
Returns:
the UI object


"
SynthInternalFrameUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthInternalFrameUI,installDefaults(),void,NULL,"

installDefaults
public void installDefaults()

Overrides:
installDefaults in class BasicInternalFrameUI


"
SynthInternalFrameUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicInternalFrameUI


"
SynthInternalFrameUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthInternalFrameUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthInternalFrameUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthInternalFrameUI,propertyChange(PropertyChangeEvent evt),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
evt - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthInternalFrameUI,uninstallComponents(),protected void,NULL,"

uninstallComponents
protected void uninstallComponents()

Overrides:
uninstallComponents in class BasicInternalFrameUI


"
SynthInternalFrameUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicInternalFrameUI


"
SynthInternalFrameUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicInternalFrameUI


"
SynthInternalFrameUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthLabelUI,createUI(JComponent c),static ComponentUI,Returns the LabelUI implementation used for the skins look and feel.,"

createUI
public static ComponentUI createUI(JComponent c)
Returns the LabelUI implementation used for the skins look and feel.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthLabelUI,"getBaseline(JComponent c, int width, int height)",int,Returns the baseline.,"

getBaseline
public int getBaseline(JComponent c,
                       int width,
                       int height)
Returns the baseline.

Overrides:
getBaseline in class BasicLabelUI
Parameters:
c - JComponent baseline is being requested for
width - the width to get the baseline for
height - the height to get the baseline for
Returns:
baseline or a value < 0 indicating there is no reasonable
                  baseline
See Also:
JComponent.getBaseline(int, int)


"
SynthLabelUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthLabelUI,getMaximumSize(JComponent c),Dimension,Returns the specified component's maximum size appropriate for the look and feel.,"

getMaximumSize
public Dimension getMaximumSize(JComponent c)
Returns the specified component's maximum size appropriate for
 the look and feel.  If null is returned, the maximum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMaximumSize in class BasicLabelUI
Parameters:
c - the component whose maximum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
getPreferredSize(c)
See Also:
JComponent.getMaximumSize(), 
LayoutManager2.maximumLayoutSize(java.awt.Container)


"
SynthLabelUI,getMinimumSize(JComponent c),Dimension,Returns the specified component's minimum size appropriate for the look and feel.,"

getMinimumSize
public Dimension getMinimumSize(JComponent c)
Returns the specified component's minimum size appropriate for
 the look and feel.  If null is returned, the minimum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMinimumSize in class BasicLabelUI
Parameters:
c - the component whose minimum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
getPreferredSize(c)
See Also:
JComponent.getMinimumSize(), 
LayoutManager.minimumLayoutSize(java.awt.Container), 
ComponentUI.getPreferredSize(javax.swing.JComponent)


"
SynthLabelUI,getPreferredSize(JComponent c),Dimension,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicLabelUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
SynthLabelUI,installDefaults(JLabel c),protected void,Installs default properties.,"

installDefaults
protected void installDefaults(JLabel c)
Installs default properties.

Overrides:
installDefaults in class BasicLabelUI
Parameters:
c - an instance of JLabel


"
SynthLabelUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicLabelUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthLabelUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthLabelUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthLabelUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Overrides:
propertyChange in class BasicLabelUI
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthLabelUI,uninstallDefaults(JLabel c),protected void,Uninstalls default properties.,"

uninstallDefaults
protected void uninstallDefaults(JLabel c)
Uninstalls default properties.

Overrides:
uninstallDefaults in class BasicLabelUI
Parameters:
c - an instance of JLabel


"
SynthLabelUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthListUI,createUI(JComponent list),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent list)
Creates a new UI object for the given component.

Parameters:
list - component to create UI object for
Returns:
the UI object


"
SynthListUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthListUI,installDefaults(),protected void,"Initializes list properties such as font, foreground, and background, and adds the CellRendererPane.","

installDefaults
protected void installDefaults()
Initializes list properties such as font, foreground, and background,
 and adds the CellRendererPane. The font, foreground, and background
 properties are only set if their current value is either null
 or a UIResource, other properties are set if the current
 value is null.

Overrides:
installDefaults in class BasicListUI
See Also:
BasicListUI.uninstallDefaults(), 
BasicListUI.installUI(javax.swing.JComponent), 
CellRendererPane


"
SynthListUI,installListeners(),protected void,"Creates and installs the listeners for the JList, its model, and its selectionModel.","

installListeners
protected void installListeners()
Creates and installs the listeners for the JList, its model, and its
 selectionModel.  This method is called at installUI() time.

Overrides:
installListeners in class BasicListUI
See Also:
BasicListUI.installUI(javax.swing.JComponent), 
BasicListUI.uninstallListeners()


"
SynthListUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthListUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthListUI,uninstallDefaults(),protected void,Sets the list properties that have not been explicitly overridden to null.,"

uninstallDefaults
protected void uninstallDefaults()
Sets the list properties that have not been explicitly overridden to
 null. A property is considered overridden if its current value
 is not a UIResource.

Overrides:
uninstallDefaults in class BasicListUI
See Also:
BasicListUI.installDefaults(), 
BasicListUI.uninstallUI(javax.swing.JComponent), 
CellRendererPane


"
SynthListUI,uninstallListeners(),protected void,"Removes the listeners from the JList, its model, and its selectionModel.","

uninstallListeners
protected void uninstallListeners()
Removes the listeners from the JList, its model, and its
 selectionModel.  All of the listener fields, are reset to
 null here.  This method is called at uninstallUI() time,
 it should be kept in sync with installListeners.

Overrides:
uninstallListeners in class BasicListUI
See Also:
BasicListUI.uninstallUI(javax.swing.JComponent), 
BasicListUI.installListeners()


"
SynthListUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the BasicListUI.paint(java.awt.Graphics, javax.swing.JComponent) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
BasicListUI.paint(java.awt.Graphics, javax.swing.JComponent)


"
SynthLookAndFeel,createUI(JComponent c),static ComponentUI,Creates the Synth look and feel ComponentUI for the passed in JComponent.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates the Synth look and feel ComponentUI for
 the passed in JComponent.

Parameters:
c - JComponent to create the ComponentUI for
Returns:
ComponentUI to use for c


"
SynthLookAndFeel,getDefaults(),UIDefaults,Returns the defaults for this SynthLookAndFeel.,"

getDefaults
public UIDefaults getDefaults()
Returns the defaults for this SynthLookAndFeel.

Overrides:
getDefaults in class BasicLookAndFeel
Returns:
Defaults table.
See Also:
BasicLookAndFeel.initClassDefaults(javax.swing.UIDefaults), 
BasicLookAndFeel.initSystemColorDefaults(javax.swing.UIDefaults), 
BasicLookAndFeel.initComponentDefaults(javax.swing.UIDefaults)


"
SynthLookAndFeel,getDescription(),String,Returns a textual description of SynthLookAndFeel.,"

getDescription
public String getDescription()
Returns a textual description of SynthLookAndFeel.

Specified by:
getDescription in class LookAndFeel
Returns:
textual description of synth.


"
SynthLookAndFeel,getID(),String,Return a string that identifies this look and feel.,"

getID
public String getID()
Return a string that identifies this look and feel.

Specified by:
getID in class LookAndFeel
Returns:
a short string identifying this look and feel.


"
SynthLookAndFeel,getName(),String,Return a short string that identifies this look and feel.,"

getName
public String getName()
Return a short string that identifies this look and feel.

Specified by:
getName in class LookAndFeel
Returns:
a short string identifying this look and feel.


"
SynthLookAndFeel,getRegion(JComponent c),static Region,Returns the Region for the JComponent c.,"

getRegion
public static Region getRegion(JComponent c)
Returns the Region for the JComponent c.

Parameters:
c - JComponent to fetch the Region for
Returns:
Region corresponding to c


"
SynthLookAndFeel,"getStyle(JComponent c, Region region)",static SynthStyle,Gets a SynthStyle for the specified region of the specified component.,"

getStyle
public static SynthStyle getStyle(JComponent c,
                                  Region region)
Gets a SynthStyle for the specified region of the specified component.
 This is not for general consumption, only custom UIs should call this
 method.

Parameters:
c - JComponent to get the SynthStyle for
region - Identifies the region of the specified component
Returns:
SynthStyle to use.


"
SynthLookAndFeel,getStyleFactory(),static SynthStyleFactory,Returns the current SynthStyleFactory.,"

getStyleFactory
public static SynthStyleFactory getStyleFactory()
Returns the current SynthStyleFactory.

Returns:
SynthStyleFactory


"
SynthLookAndFeel,initialize(),void,Called by UIManager when this look and feel is installed.,"

initialize
public void initialize()
Called by UIManager when this look and feel is installed.

Overrides:
initialize in class BasicLookAndFeel
See Also:
LookAndFeel.uninitialize(), 
UIManager.setLookAndFeel(javax.swing.LookAndFeel)


"
SynthLookAndFeel,isNativeLookAndFeel(),boolean,"Returns false, SynthLookAndFeel is not a native look and feel.","

isNativeLookAndFeel
public boolean isNativeLookAndFeel()
Returns false, SynthLookAndFeel is not a native look and feel.

Specified by:
isNativeLookAndFeel in class LookAndFeel
Returns:
false


"
SynthLookAndFeel,isSupportedLookAndFeel(),boolean,"Returns true, SynthLookAndFeel is always supported.","

isSupportedLookAndFeel
public boolean isSupportedLookAndFeel()
Returns true, SynthLookAndFeel is always supported.

Specified by:
isSupportedLookAndFeel in class LookAndFeel
Returns:
true.
See Also:
UIManager.setLookAndFeel(javax.swing.LookAndFeel)


"
SynthLookAndFeel,"load(InputStream input, Class<?> resourceBase)",void,Loads the set of SynthStyles that will be used by this SynthLookAndFeel.,"

load
public void load(InputStream input,
                 Class<?> resourceBase)
          throws ParseException
Loads the set of SynthStyles that will be used by
 this SynthLookAndFeel. resourceBase is
 used to resolve any path based resources, for example an
 Image would be resolved by
 resourceBase.getResource(path). Refer to
 Synth File Format
 for more information.

Parameters:
input - InputStream to load from
resourceBase - used to resolve any images or other resources
Throws:
ParseException - if there is an error in parsing
IllegalArgumentException - if input or resourceBase is null


"
SynthLookAndFeel,load(URL url),void,Loads the set of SynthStyles that will be used by this SynthLookAndFeel.,"

load
public void load(URL url)
          throws ParseException,
                 IOException
Loads the set of SynthStyles that will be used by
 this SynthLookAndFeel. Path based resources are resolved
 relatively to the specified URL of the style. For example
 an Image would be resolved by
 new URL(synthFile, path). Refer to
 Synth File Format for more
 information.
 
 Whilst this API may be safe for loading local resources that are
 delivered with a LookAndFeel or application, and so have an
 equal level of trust with application code, using it to load from
 remote resources, particularly any which may have a lower level of
 trust, is strongly discouraged.
 The alternative mechanisms to load styles from an InputStream
load(InputStream, Class)
 using resources co-located with the application or by providing a
 SynthStyleFactory to
 setStyleFactory(SynthStyleFactory)
 are preferred.

Parameters:
url - the URL to load the set of
     SynthStyle from
Throws:
ParseException - if there is an error in parsing
IllegalArgumentException - if synthSet is null
IOException - if synthSet cannot be opened as an InputStream
Since:
1.6


"
SynthLookAndFeel,setStyleFactory(SynthStyleFactory cache),static void,Sets the SynthStyleFactory that the UI classes provided by synth will use to obtain a SynthStyle.,"

setStyleFactory
public static void setStyleFactory(SynthStyleFactory cache)
Sets the SynthStyleFactory that the UI classes provided by
 synth will use to obtain a SynthStyle.

Parameters:
cache - SynthStyleFactory the UIs should use.


"
SynthLookAndFeel,shouldUpdateStyleOnAncestorChanged(),boolean,Returns whether or not the UIs should update their SynthStyles from the SynthStyleFactory when the ancestor of the JComponent changes.,"

shouldUpdateStyleOnAncestorChanged
public boolean shouldUpdateStyleOnAncestorChanged()
Returns whether or not the UIs should update their
 SynthStyles from the SynthStyleFactory
 when the ancestor of the JComponent changes. A subclass
 that provided a SynthStyleFactory that based the
 return value from getStyle off the containment hierarchy
 would override this method to return true.

Returns:
whether or not the UIs should update their
 SynthStyles from the SynthStyleFactory
 when the ancestor changed.


"
SynthLookAndFeel,shouldUpdateStyleOnEvent(PropertyChangeEvent ev),protected boolean,Returns whether or not the UIs should update their styles when a particular event occurs.,"

shouldUpdateStyleOnEvent
protected boolean shouldUpdateStyleOnEvent(PropertyChangeEvent ev)
Returns whether or not the UIs should update their styles when a
 particular event occurs.

Parameters:
ev - a PropertyChangeEvent
Returns:
whether or not the UIs should update their styles
Since:
1.7


"
SynthLookAndFeel,uninitialize(),void,Called by UIManager when this look and feel is uninstalled.,"

uninitialize
public void uninitialize()
Called by UIManager when this look and feel is uninstalled.

Overrides:
uninitialize in class BasicLookAndFeel
See Also:
LookAndFeel.initialize(), 
UIManager.setLookAndFeel(javax.swing.LookAndFeel)


"
SynthLookAndFeel,updateStyles(Component c),static void,"Updates the style associated with c, and all its children.","

updateStyles
public static void updateStyles(Component c)
Updates the style associated with c, and all its children.
 This is a lighter version of
 SwingUtilities.updateComponentTreeUI.

Parameters:
c - Component to update style for.


"
SynthMenuBarUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthMenuBarUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthMenuBarUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicMenuBarUI


"
SynthMenuBarUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicMenuBarUI


"
SynthMenuBarUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthMenuBarUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthMenuBarUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthMenuBarUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthMenuBarUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicMenuBarUI


"
SynthMenuBarUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicMenuBarUI


"
SynthMenuBarUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthMenuItemUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthMenuItemUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthMenuItemUI,"getPreferredMenuItemSize(JComponent c, Icon checkIcon, Icon arrowIcon, int defaultTextIconGap)",protected Dimension,NULL,"

getPreferredMenuItemSize
protected Dimension getPreferredMenuItemSize(JComponent c,
                                             Icon checkIcon,
                                             Icon arrowIcon,
                                             int defaultTextIconGap)

Overrides:
getPreferredMenuItemSize in class BasicMenuItemUI


"
SynthMenuItemUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicMenuItemUI


"
SynthMenuItemUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicMenuItemUI


"
SynthMenuItemUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthMenuItemUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthMenuItemUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthMenuItemUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthMenuItemUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicMenuItemUI


"
SynthMenuItemUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicMenuItemUI


"
SynthMenuItemUI,uninstallUI(JComponent c),void,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicMenuItemUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
SynthMenuItemUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthMenuUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthMenuUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthMenuUI,"getPreferredMenuItemSize(JComponent c, Icon checkIcon, Icon arrowIcon, int defaultTextIconGap)",protected Dimension,NULL,"

getPreferredMenuItemSize
protected Dimension getPreferredMenuItemSize(JComponent c,
                                             Icon checkIcon,
                                             Icon arrowIcon,
                                             int defaultTextIconGap)

Overrides:
getPreferredMenuItemSize in class BasicMenuItemUI


"
SynthMenuUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicMenuUI


"
SynthMenuUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicMenuUI


"
SynthMenuUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthMenuUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthMenuUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthMenuUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthMenuUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicMenuUI


"
SynthMenuUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicMenuUI


"
SynthMenuUI,uninstallUI(JComponent c),void,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicMenuItemUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
SynthMenuUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthOptionPaneUI,createMessageArea(),protected Container,Called from installComponents() to create a Container containing the body of the message.,"

createMessageArea
protected Container createMessageArea()
Called from installComponents() to create a Container
 containing the body of the message. The icon is the created by calling
 BasicOptionPaneUI.addIcon(java.awt.Container).

Overrides:
createMessageArea in class BasicOptionPaneUI


"
SynthOptionPaneUI,createSeparator(),protected Container,NULL,"

createSeparator
protected Container createSeparator()

Overrides:
createSeparator in class BasicOptionPaneUI


"
SynthOptionPaneUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthOptionPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthOptionPaneUI,getSizeButtonsToSameWidth(),protected boolean,"Returns true, basic L&F wants all the buttons to have the same width.","

getSizeButtonsToSameWidth
protected boolean getSizeButtonsToSameWidth()
Returns true, basic L&F wants all the buttons to have the same
 width.

Overrides:
getSizeButtonsToSameWidth in class BasicOptionPaneUI


"
SynthOptionPaneUI,installComponents(),protected void,NULL,"

installComponents
protected void installComponents()

Overrides:
installComponents in class BasicOptionPaneUI


"
SynthOptionPaneUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicOptionPaneUI


"
SynthOptionPaneUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicOptionPaneUI


"
SynthOptionPaneUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthOptionPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthOptionPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthOptionPaneUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthOptionPaneUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicOptionPaneUI


"
SynthOptionPaneUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicOptionPaneUI


"
SynthOptionPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthPainter,"paintArrowButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of an arrow button.,"

paintArrowButtonBackground
public void paintArrowButtonBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of an arrow button. Arrow buttons are created by
 some components, such as JScrollBar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintArrowButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of an arrow button.,"

paintArrowButtonBorder
public void paintArrowButtonBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of an arrow button. Arrow buttons are created by
 some components, such as JScrollBar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintArrowButtonForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int direction)",void,Paints the foreground of an arrow button.,"

paintArrowButtonForeground
public void paintArrowButtonForeground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h,
                                       int direction)
Paints the foreground of an arrow button. This method is responsible
 for drawing a graphical representation of a direction, typically
 an arrow. Arrow buttons are created by
 some components, such as JScrollBar

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
direction - One of SwingConstants.NORTH, SwingConstants.SOUTH
                  SwingConstants.EAST or SwingConstants.WEST


"
SynthPainter,"paintButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a button.,"

paintButtonBackground
public void paintButtonBackground(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h)
Paints the background of a button.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a button.,"

paintButtonBorder
public void paintButtonBorder(SynthContext context,
                              Graphics g,
                              int x,
                              int y,
                              int w,
                              int h)
Paints the border of a button.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintCheckBoxBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a check box.,"

paintCheckBoxBackground
public void paintCheckBoxBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of a check box.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintCheckBoxBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a check box.,"

paintCheckBoxBorder
public void paintCheckBoxBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a check box.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintCheckBoxMenuItemBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a check box menu item.,"

paintCheckBoxMenuItemBackground
public void paintCheckBoxMenuItemBackground(SynthContext context,
                                            Graphics g,
                                            int x,
                                            int y,
                                            int w,
                                            int h)
Paints the background of a check box menu item.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintCheckBoxMenuItemBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a check box menu item.,"

paintCheckBoxMenuItemBorder
public void paintCheckBoxMenuItemBorder(SynthContext context,
                                        Graphics g,
                                        int x,
                                        int y,
                                        int w,
                                        int h)
Paints the border of a check box menu item.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintColorChooserBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a color chooser.,"

paintColorChooserBackground
public void paintColorChooserBackground(SynthContext context,
                                        Graphics g,
                                        int x,
                                        int y,
                                        int w,
                                        int h)
Paints the background of a color chooser.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintColorChooserBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a color chooser.,"

paintColorChooserBorder
public void paintColorChooserBorder(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the border of a color chooser.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintComboBoxBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a combo box.,"

paintComboBoxBackground
public void paintComboBoxBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of a combo box.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintComboBoxBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a combo box.,"

paintComboBoxBorder
public void paintComboBoxBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a combo box.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintDesktopIconBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a desktop icon.,"

paintDesktopIconBackground
public void paintDesktopIconBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of a desktop icon.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintDesktopIconBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a desktop icon.,"

paintDesktopIconBorder
public void paintDesktopIconBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of a desktop icon.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintDesktopPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a desktop pane.,"

paintDesktopPaneBackground
public void paintDesktopPaneBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of a desktop pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintDesktopPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a desktop pane.,"

paintDesktopPaneBorder
public void paintDesktopPaneBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the background of a desktop pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintEditorPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of an editor pane.,"

paintEditorPaneBackground
public void paintEditorPaneBackground(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h)
Paints the background of an editor pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintEditorPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of an editor pane.,"

paintEditorPaneBorder
public void paintEditorPaneBorder(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h)
Paints the border of an editor pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintFileChooserBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a file chooser.,"

paintFileChooserBackground
public void paintFileChooserBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of a file chooser.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintFileChooserBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a file chooser.,"

paintFileChooserBorder
public void paintFileChooserBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of a file chooser.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintFormattedTextFieldBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a formatted text field.,"

paintFormattedTextFieldBackground
public void paintFormattedTextFieldBackground(SynthContext context,
                                              Graphics g,
                                              int x,
                                              int y,
                                              int w,
                                              int h)
Paints the background of a formatted text field.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintFormattedTextFieldBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a formatted text field.,"

paintFormattedTextFieldBorder
public void paintFormattedTextFieldBorder(SynthContext context,
                                          Graphics g,
                                          int x,
                                          int y,
                                          int w,
                                          int h)
Paints the border of a formatted text field.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintInternalFrameBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of an internal frame.,"

paintInternalFrameBackground
public void paintInternalFrameBackground(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h)
Paints the background of an internal frame.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintInternalFrameBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of an internal frame.,"

paintInternalFrameBorder
public void paintInternalFrameBorder(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the border of an internal frame.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintInternalFrameTitlePaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of an internal frame title pane.,"

paintInternalFrameTitlePaneBackground
public void paintInternalFrameTitlePaneBackground(SynthContext context,
                                                  Graphics g,
                                                  int x,
                                                  int y,
                                                  int w,
                                                  int h)
Paints the background of an internal frame title pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintInternalFrameTitlePaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of an internal frame title pane.,"

paintInternalFrameTitlePaneBorder
public void paintInternalFrameTitlePaneBorder(SynthContext context,
                                              Graphics g,
                                              int x,
                                              int y,
                                              int w,
                                              int h)
Paints the border of an internal frame title pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintLabelBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a label.,"

paintLabelBackground
public void paintLabelBackground(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the background of a label.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintLabelBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a label.,"

paintLabelBorder
public void paintLabelBorder(SynthContext context,
                             Graphics g,
                             int x,
                             int y,
                             int w,
                             int h)
Paints the border of a label.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintListBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a list.,"

paintListBackground
public void paintListBackground(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the background of a list.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintListBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a list.,"

paintListBorder
public void paintListBorder(SynthContext context,
                            Graphics g,
                            int x,
                            int y,
                            int w,
                            int h)
Paints the border of a list.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintMenuBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a menu.,"

paintMenuBackground
public void paintMenuBackground(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the background of a menu.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintMenuBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a menu bar.,"

paintMenuBarBackground
public void paintMenuBarBackground(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the background of a menu bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintMenuBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a menu bar.,"

paintMenuBarBorder
public void paintMenuBarBorder(SynthContext context,
                               Graphics g,
                               int x,
                               int y,
                               int w,
                               int h)
Paints the border of a menu bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintMenuBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a menu.,"

paintMenuBorder
public void paintMenuBorder(SynthContext context,
                            Graphics g,
                            int x,
                            int y,
                            int w,
                            int h)
Paints the border of a menu.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintMenuItemBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a menu item.,"

paintMenuItemBackground
public void paintMenuItemBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of a menu item.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintMenuItemBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a menu item.,"

paintMenuItemBorder
public void paintMenuItemBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a menu item.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintOptionPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of an option pane.,"

paintOptionPaneBackground
public void paintOptionPaneBackground(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h)
Paints the background of an option pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintOptionPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of an option pane.,"

paintOptionPaneBorder
public void paintOptionPaneBorder(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h)
Paints the border of an option pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintPanelBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a panel.,"

paintPanelBackground
public void paintPanelBackground(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the background of a panel.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintPanelBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a panel.,"

paintPanelBorder
public void paintPanelBorder(SynthContext context,
                             Graphics g,
                             int x,
                             int y,
                             int w,
                             int h)
Paints the border of a panel.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintPasswordFieldBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a password field.,"

paintPasswordFieldBackground
public void paintPasswordFieldBackground(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h)
Paints the background of a password field.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintPasswordFieldBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a password field.,"

paintPasswordFieldBorder
public void paintPasswordFieldBorder(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the border of a password field.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintPopupMenuBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a popup menu.,"

paintPopupMenuBackground
public void paintPopupMenuBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the background of a popup menu.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintPopupMenuBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a popup menu.,"

paintPopupMenuBorder
public void paintPopupMenuBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the border of a popup menu.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintProgressBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a progress bar.,"

paintProgressBarBackground
public void paintProgressBarBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of a progress bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintProgressBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of a progress bar.,"

paintProgressBarBackground
public void paintProgressBarBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h,
                                       int orientation)
Paints the background of a progress bar. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - one of JProgressBar.HORIZONTAL or
                    JProgressBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintProgressBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a progress bar.,"

paintProgressBarBorder
public void paintProgressBarBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of a progress bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintProgressBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of a progress bar.,"

paintProgressBarBorder
public void paintProgressBarBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h,
                                   int orientation)
Paints the border of a progress bar. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - one of JProgressBar.HORIZONTAL or
                    JProgressBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintProgressBarForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the foreground of a progress bar.,"

paintProgressBarForeground
public void paintProgressBarForeground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h,
                                       int orientation)
Paints the foreground of a progress bar. is responsible for
 providing an indication of the progress of the progress bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - one of JProgressBar.HORIZONTAL or
                    JProgressBar.VERTICAL


"
SynthPainter,"paintRadioButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a radio button.,"

paintRadioButtonBackground
public void paintRadioButtonBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of a radio button.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintRadioButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a radio button.,"

paintRadioButtonBorder
public void paintRadioButtonBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of a radio button.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintRadioButtonMenuItemBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a radio button menu item.,"

paintRadioButtonMenuItemBackground
public void paintRadioButtonMenuItemBackground(SynthContext context,
                                               Graphics g,
                                               int x,
                                               int y,
                                               int w,
                                               int h)
Paints the background of a radio button menu item.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintRadioButtonMenuItemBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a radio button menu item.,"

paintRadioButtonMenuItemBorder
public void paintRadioButtonMenuItemBorder(SynthContext context,
                                           Graphics g,
                                           int x,
                                           int y,
                                           int w,
                                           int h)
Paints the border of a radio button menu item.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintRootPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a root pane.,"

paintRootPaneBackground
public void paintRootPaneBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of a root pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintRootPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a root pane.,"

paintRootPaneBorder
public void paintRootPaneBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a root pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintScrollBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a scrollbar.,"

paintScrollBarBackground
public void paintScrollBarBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the background of a scrollbar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintScrollBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of a scrollbar.,"

paintScrollBarBackground
public void paintScrollBarBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h,
                                     int orientation)
Paints the background of a scrollbar. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - Orientation of the JScrollBar, one of
                    JScrollBar.HORIZONTAL or
                    JScrollBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintScrollBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a scrollbar.,"

paintScrollBarBorder
public void paintScrollBarBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the border of a scrollbar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintScrollBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of a scrollbar.,"

paintScrollBarBorder
public void paintScrollBarBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h,
                                 int orientation)
Paints the border of a scrollbar. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - Orientation of the JScrollBar, one of
                    JScrollBar.HORIZONTAL or
                    JScrollBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintScrollBarThumbBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the thumb of a scrollbar.,"

paintScrollBarThumbBackground
public void paintScrollBarThumbBackground(SynthContext context,
                                          Graphics g,
                                          int x,
                                          int y,
                                          int w,
                                          int h,
                                          int orientation)
Paints the background of the thumb of a scrollbar. The thumb provides
 a graphical indication as to how much of the Component is visible in a
 JScrollPane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - Orientation of the JScrollBar, one of
                    JScrollBar.HORIZONTAL or
                    JScrollBar.VERTICAL


"
SynthPainter,"paintScrollBarThumbBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the thumb of a scrollbar.,"

paintScrollBarThumbBorder
public void paintScrollBarThumbBorder(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h,
                                      int orientation)
Paints the border of the thumb of a scrollbar. The thumb provides
 a graphical indication as to how much of the Component is visible in a
 JScrollPane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - Orientation of the JScrollBar, one of
                    JScrollBar.HORIZONTAL or
                    JScrollBar.VERTICAL


"
SynthPainter,"paintScrollBarTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the track of a scrollbar.,"

paintScrollBarTrackBackground
public void paintScrollBarTrackBackground(SynthContext context,
                                          Graphics g,
                                          int x,
                                          int y,
                                          int w,
                                          int h)
Paints the background of the track of a scrollbar. The track contains
 the thumb.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintScrollBarTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the track of a scrollbar.,"

paintScrollBarTrackBackground
public void paintScrollBarTrackBackground(SynthContext context,
                                          Graphics g,
                                          int x,
                                          int y,
                                          int w,
                                          int h,
                                          int orientation)
Paints the background of the track of a scrollbar. The track contains
 the thumb. This implementation invokes the method of the same name without
 the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - Orientation of the JScrollBar, one of
                    JScrollBar.HORIZONTAL or
                    JScrollBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintScrollBarTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the track of a scrollbar.,"

paintScrollBarTrackBorder
public void paintScrollBarTrackBorder(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h)
Paints the border of the track of a scrollbar. The track contains
 the thumb.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintScrollBarTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the track of a scrollbar.,"

paintScrollBarTrackBorder
public void paintScrollBarTrackBorder(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h,
                                      int orientation)
Paints the border of the track of a scrollbar. The track contains
 the thumb. This implementation invokes the method of the same name without
 the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - Orientation of the JScrollBar, one of
                    JScrollBar.HORIZONTAL or
                    JScrollBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintScrollPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a scroll pane.,"

paintScrollPaneBackground
public void paintScrollPaneBackground(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h)
Paints the background of a scroll pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintScrollPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a scroll pane.,"

paintScrollPaneBorder
public void paintScrollPaneBorder(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h)
Paints the border of a scroll pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSeparatorBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a separator.,"

paintSeparatorBackground
public void paintSeparatorBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the background of a separator.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSeparatorBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of a separator.,"

paintSeparatorBackground
public void paintSeparatorBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h,
                                     int orientation)
Paints the background of a separator. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSeparator.HORIZONTAL or
                           JSeparator.VERTICAL
Since:
1.6


"
SynthPainter,"paintSeparatorBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a separator.,"

paintSeparatorBorder
public void paintSeparatorBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the border of a separator.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSeparatorBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of a separator.,"

paintSeparatorBorder
public void paintSeparatorBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h,
                                 int orientation)
Paints the border of a separator. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSeparator.HORIZONTAL or
                           JSeparator.VERTICAL
Since:
1.6


"
SynthPainter,"paintSeparatorForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the foreground of a separator.,"

paintSeparatorForeground
public void paintSeparatorForeground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h,
                                     int orientation)
Paints the foreground of a separator.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSeparator.HORIZONTAL or
                           JSeparator.VERTICAL


"
SynthPainter,"paintSliderBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a slider.,"

paintSliderBackground
public void paintSliderBackground(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h)
Paints the background of a slider.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSliderBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of a slider.,"

paintSliderBackground
public void paintSliderBackground(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h,
                                  int orientation)
Paints the background of a slider. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSlider.HORIZONTAL or
                           JSlider.VERTICAL
Since:
1.6


"
SynthPainter,"paintSliderBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a slider.,"

paintSliderBorder
public void paintSliderBorder(SynthContext context,
                              Graphics g,
                              int x,
                              int y,
                              int w,
                              int h)
Paints the border of a slider.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSliderBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of a slider.,"

paintSliderBorder
public void paintSliderBorder(SynthContext context,
                              Graphics g,
                              int x,
                              int y,
                              int w,
                              int h,
                              int orientation)
Paints the border of a slider. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSlider.HORIZONTAL or
                           JSlider.VERTICAL
Since:
1.6


"
SynthPainter,"paintSliderThumbBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the thumb of a slider.,"

paintSliderThumbBackground
public void paintSliderThumbBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h,
                                       int orientation)
Paints the background of the thumb of a slider.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSlider.HORIZONTAL or
                           JSlider.VERTICAL


"
SynthPainter,"paintSliderThumbBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the thumb of a slider.,"

paintSliderThumbBorder
public void paintSliderThumbBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h,
                                   int orientation)
Paints the border of the thumb of a slider.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSlider.HORIZONTAL or
                           JSlider.VERTICAL


"
SynthPainter,"paintSliderTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the track of a slider.,"

paintSliderTrackBackground
public void paintSliderTrackBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of the track of a slider.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSliderTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the track of a slider.,"

paintSliderTrackBackground
public void paintSliderTrackBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h,
                                       int orientation)
Paints the background of the track of a slider. This implementation invokes
 the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSlider.HORIZONTAL or
                           JSlider.VERTICAL
Since:
1.6


"
SynthPainter,"paintSliderTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the track of a slider.,"

paintSliderTrackBorder
public void paintSliderTrackBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of the track of a slider.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSliderTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the track of a slider.,"

paintSliderTrackBorder
public void paintSliderTrackBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h,
                                   int orientation)
Paints the border of the track of a slider. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSlider.HORIZONTAL or
                           JSlider.VERTICAL
Since:
1.6


"
SynthPainter,"paintSpinnerBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a spinner.,"

paintSpinnerBackground
public void paintSpinnerBackground(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the background of a spinner.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSpinnerBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a spinner.,"

paintSpinnerBorder
public void paintSpinnerBorder(SynthContext context,
                               Graphics g,
                               int x,
                               int y,
                               int w,
                               int h)
Paints the border of a spinner.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSplitPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a split pane.,"

paintSplitPaneBackground
public void paintSplitPaneBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the background of a split pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSplitPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a split pane.,"

paintSplitPaneBorder
public void paintSplitPaneBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the border of a split pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSplitPaneDividerBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the divider of a split pane.,"

paintSplitPaneDividerBackground
public void paintSplitPaneDividerBackground(SynthContext context,
                                            Graphics g,
                                            int x,
                                            int y,
                                            int w,
                                            int h)
Paints the background of the divider of a split pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintSplitPaneDividerBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the divider of a split pane.,"

paintSplitPaneDividerBackground
public void paintSplitPaneDividerBackground(SynthContext context,
                                            Graphics g,
                                            int x,
                                            int y,
                                            int w,
                                            int h,
                                            int orientation)
Paints the background of the divider of a split pane. This implementation
 invokes the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSplitPane.HORIZONTAL_SPLIT or
                           JSplitPane.VERTICAL_SPLIT
Since:
1.6


"
SynthPainter,"paintSplitPaneDividerForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the foreground of the divider of a split pane.,"

paintSplitPaneDividerForeground
public void paintSplitPaneDividerForeground(SynthContext context,
                                            Graphics g,
                                            int x,
                                            int y,
                                            int w,
                                            int h,
                                            int orientation)
Paints the foreground of the divider of a split pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSplitPane.HORIZONTAL_SPLIT or
                           JSplitPane.VERTICAL_SPLIT


"
SynthPainter,"paintSplitPaneDragDivider(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,"Paints the divider, when the user is dragging the divider, of a split pane.","

paintSplitPaneDragDivider
public void paintSplitPaneDragDivider(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h,
                                      int orientation)
Paints the divider, when the user is dragging the divider, of a
 split pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JSplitPane.HORIZONTAL_SPLIT or
                           JSplitPane.VERTICAL_SPLIT


"
SynthPainter,"paintTabbedPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a tabbed pane.,"

paintTabbedPaneBackground
public void paintTabbedPaneBackground(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h)
Paints the background of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTabbedPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a tabbed pane.,"

paintTabbedPaneBorder
public void paintTabbedPaneBorder(SynthContext context,
                                  Graphics g,
                                  int x,
                                  int y,
                                  int w,
                                  int h)
Paints the border of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTabbedPaneContentBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the area that contains the content of the selected tab of a tabbed pane.,"

paintTabbedPaneContentBackground
public void paintTabbedPaneContentBackground(SynthContext context,
                                             Graphics g,
                                             int x,
                                             int y,
                                             int w,
                                             int h)
Paints the background of the area that contains the content of the
 selected tab of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTabbedPaneContentBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the area that contains the content of the selected tab of a tabbed pane.,"

paintTabbedPaneContentBorder
public void paintTabbedPaneContentBorder(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h)
Paints the border of the area that contains the content of the
 selected tab of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTabbedPaneTabAreaBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the area behind the tabs of a tabbed pane.,"

paintTabbedPaneTabAreaBackground
public void paintTabbedPaneTabAreaBackground(SynthContext context,
                                             Graphics g,
                                             int x,
                                             int y,
                                             int w,
                                             int h)
Paints the background of the area behind the tabs of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTabbedPaneTabAreaBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the area behind the tabs of a tabbed pane.,"

paintTabbedPaneTabAreaBackground
public void paintTabbedPaneTabAreaBackground(SynthContext context,
                                             Graphics g,
                                             int x,
                                             int y,
                                             int w,
                                             int h,
                                             int orientation)
Paints the background of the area behind the tabs of a tabbed pane.
 This implementation invokes the method of the same name without the
 orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JTabbedPane.TOP,
                    JTabbedPane.LEFT,
                    JTabbedPane.BOTTOM, or
                    JTabbedPane.RIGHT
Since:
1.6


"
SynthPainter,"paintTabbedPaneTabAreaBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the area behind the tabs of a tabbed pane.,"

paintTabbedPaneTabAreaBorder
public void paintTabbedPaneTabAreaBorder(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h)
Paints the border of the area behind the tabs of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTabbedPaneTabAreaBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the area behind the tabs of a tabbed pane.,"

paintTabbedPaneTabAreaBorder
public void paintTabbedPaneTabAreaBorder(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h,
                                         int orientation)
Paints the border of the area behind the tabs of a tabbed pane. This
 implementation invokes the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JTabbedPane.TOP,
                    JTabbedPane.LEFT,
                    JTabbedPane.BOTTOM, or
                    JTabbedPane.RIGHT
Since:
1.6


"
SynthPainter,"paintTabbedPaneTabBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex)",void,Paints the background of a tab of a tabbed pane.,"

paintTabbedPaneTabBackground
public void paintTabbedPaneTabBackground(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h,
                                         int tabIndex)
Paints the background of a tab of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
tabIndex - Index of tab being painted.


"
SynthPainter,"paintTabbedPaneTabBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex, int orientation)",void,Paints the background of a tab of a tabbed pane.,"

paintTabbedPaneTabBackground
public void paintTabbedPaneTabBackground(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h,
                                         int tabIndex,
                                         int orientation)
Paints the background of a tab of a tabbed pane. This implementation
 invokes the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
tabIndex - Index of tab being painted.
orientation - One of JTabbedPane.TOP,
                    JTabbedPane.LEFT,
                    JTabbedPane.BOTTOM, or
                    JTabbedPane.RIGHT
Since:
1.6


"
SynthPainter,"paintTabbedPaneTabBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex)",void,Paints the border of a tab of a tabbed pane.,"

paintTabbedPaneTabBorder
public void paintTabbedPaneTabBorder(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h,
                                     int tabIndex)
Paints the border of a tab of a tabbed pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
tabIndex - Index of tab being painted.


"
SynthPainter,"paintTabbedPaneTabBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex, int orientation)",void,Paints the border of a tab of a tabbed pane.,"

paintTabbedPaneTabBorder
public void paintTabbedPaneTabBorder(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h,
                                     int tabIndex,
                                     int orientation)
Paints the border of a tab of a tabbed pane. This implementation invokes
 the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
tabIndex - Index of tab being painted.
orientation - One of JTabbedPane.TOP,
                    JTabbedPane.LEFT,
                    JTabbedPane.BOTTOM, or
                    JTabbedPane.RIGHT
Since:
1.6


"
SynthPainter,"paintTableBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a table.,"

paintTableBackground
public void paintTableBackground(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the background of a table.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTableBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a table.,"

paintTableBorder
public void paintTableBorder(SynthContext context,
                             Graphics g,
                             int x,
                             int y,
                             int w,
                             int h)
Paints the border of a table.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTableHeaderBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the header of a table.,"

paintTableHeaderBackground
public void paintTableHeaderBackground(SynthContext context,
                                       Graphics g,
                                       int x,
                                       int y,
                                       int w,
                                       int h)
Paints the background of the header of a table.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTableHeaderBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the header of a table.,"

paintTableHeaderBorder
public void paintTableHeaderBorder(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the border of the header of a table.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTextAreaBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a text area.,"

paintTextAreaBackground
public void paintTextAreaBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of a text area.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTextAreaBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a text area.,"

paintTextAreaBorder
public void paintTextAreaBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a text area.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTextFieldBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a text field.,"

paintTextFieldBackground
public void paintTextFieldBackground(SynthContext context,
                                     Graphics g,
                                     int x,
                                     int y,
                                     int w,
                                     int h)
Paints the background of a text field.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTextFieldBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a text field.,"

paintTextFieldBorder
public void paintTextFieldBorder(SynthContext context,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int w,
                                 int h)
Paints the border of a text field.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTextPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a text pane.,"

paintTextPaneBackground
public void paintTextPaneBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of a text pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTextPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a text pane.,"

paintTextPaneBorder
public void paintTextPaneBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a text pane.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToggleButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a toggle button.,"

paintToggleButtonBackground
public void paintToggleButtonBackground(SynthContext context,
                                        Graphics g,
                                        int x,
                                        int y,
                                        int w,
                                        int h)
Paints the background of a toggle button.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToggleButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a toggle button.,"

paintToggleButtonBorder
public void paintToggleButtonBorder(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the border of a toggle button.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a tool bar.,"

paintToolBarBackground
public void paintToolBarBackground(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the background of a tool bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of a tool bar.,"

paintToolBarBackground
public void paintToolBarBackground(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h,
                                   int orientation)
Paints the background of a tool bar. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JToolBar.HORIZONTAL or
                           JToolBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintToolBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a tool bar.,"

paintToolBarBorder
public void paintToolBarBorder(SynthContext context,
                               Graphics g,
                               int x,
                               int y,
                               int w,
                               int h)
Paints the border of a tool bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of a tool bar.,"

paintToolBarBorder
public void paintToolBarBorder(SynthContext context,
                               Graphics g,
                               int x,
                               int y,
                               int w,
                               int h,
                               int orientation)
Paints the border of a tool bar. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JToolBar.HORIZONTAL or
                           JToolBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintToolBarContentBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the tool bar's content area.,"

paintToolBarContentBackground
public void paintToolBarContentBackground(SynthContext context,
                                          Graphics g,
                                          int x,
                                          int y,
                                          int w,
                                          int h)
Paints the background of the tool bar's content area.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarContentBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the tool bar's content area.,"

paintToolBarContentBackground
public void paintToolBarContentBackground(SynthContext context,
                                          Graphics g,
                                          int x,
                                          int y,
                                          int w,
                                          int h,
                                          int orientation)
Paints the background of the tool bar's content area. This implementation
 invokes the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JToolBar.HORIZONTAL or
                           JToolBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintToolBarContentBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the content area of a tool bar.,"

paintToolBarContentBorder
public void paintToolBarContentBorder(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h)
Paints the border of the content area of a tool bar.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarContentBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the content area of a tool bar.,"

paintToolBarContentBorder
public void paintToolBarContentBorder(SynthContext context,
                                      Graphics g,
                                      int x,
                                      int y,
                                      int w,
                                      int h,
                                      int orientation)
Paints the border of the content area of a tool bar. This implementation
 invokes the method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JToolBar.HORIZONTAL or
                           JToolBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintToolBarDragWindowBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the window containing the tool bar when it has been detached from its primary frame.,"

paintToolBarDragWindowBackground
public void paintToolBarDragWindowBackground(SynthContext context,
                                             Graphics g,
                                             int x,
                                             int y,
                                             int w,
                                             int h)
Paints the background of the window containing the tool bar when it
 has been detached from its primary frame.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarDragWindowBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the background of the window containing the tool bar when it has been detached from its primary frame.,"

paintToolBarDragWindowBackground
public void paintToolBarDragWindowBackground(SynthContext context,
                                             Graphics g,
                                             int x,
                                             int y,
                                             int w,
                                             int h,
                                             int orientation)
Paints the background of the window containing the tool bar when it
 has been detached from its primary frame. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JToolBar.HORIZONTAL or
                           JToolBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintToolBarDragWindowBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the window containing the tool bar when it has been detached from it's primary frame.,"

paintToolBarDragWindowBorder
public void paintToolBarDragWindowBorder(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h)
Paints the border of the window containing the tool bar when it
 has been detached from it's primary frame.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolBarDragWindowBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)",void,Paints the border of the window containing the tool bar when it has been detached from it's primary frame.,"

paintToolBarDragWindowBorder
public void paintToolBarDragWindowBorder(SynthContext context,
                                         Graphics g,
                                         int x,
                                         int y,
                                         int w,
                                         int h,
                                         int orientation)
Paints the border of the window containing the tool bar when it
 has been detached from it's primary frame. This implementation invokes the
 method of the same name without the orientation.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to
orientation - One of JToolBar.HORIZONTAL or
                           JToolBar.VERTICAL
Since:
1.6


"
SynthPainter,"paintToolTipBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a tool tip.,"

paintToolTipBackground
public void paintToolTipBackground(SynthContext context,
                                   Graphics g,
                                   int x,
                                   int y,
                                   int w,
                                   int h)
Paints the background of a tool tip.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintToolTipBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a tool tip.,"

paintToolTipBorder
public void paintToolTipBorder(SynthContext context,
                               Graphics g,
                               int x,
                               int y,
                               int w,
                               int h)
Paints the border of a tool tip.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTreeBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of a tree.,"

paintTreeBackground
public void paintTreeBackground(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the background of a tree.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTreeBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a tree.,"

paintTreeBorder
public void paintTreeBorder(SynthContext context,
                            Graphics g,
                            int x,
                            int y,
                            int w,
                            int h)
Paints the border of a tree.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTreeCellBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the row containing a cell in a tree.,"

paintTreeCellBackground
public void paintTreeCellBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of the row containing a cell in a tree.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTreeCellBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of the row containing a cell in a tree.,"

paintTreeCellBorder
public void paintTreeCellBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of the row containing a cell in a tree.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintTreeCellFocus(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the focus indicator for a cell in a tree when it has focus.,"

paintTreeCellFocus
public void paintTreeCellFocus(SynthContext context,
                               Graphics g,
                               int x,
                               int y,
                               int w,
                               int h)
Paints the focus indicator for a cell in a tree when it has focus.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintViewportBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the background of the viewport.,"

paintViewportBackground
public void paintViewportBackground(SynthContext context,
                                    Graphics g,
                                    int x,
                                    int y,
                                    int w,
                                    int h)
Paints the background of the viewport.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPainter,"paintViewportBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border of a viewport.,"

paintViewportBorder
public void paintViewportBorder(SynthContext context,
                                Graphics g,
                                int x,
                                int y,
                                int w,
                                int h)
Paints the border of a viewport.

Parameters:
context - SynthContext identifying the JComponent and
        Region to paint to
g - Graphics to paint to
x - X coordinate of the area to paint to
y - Y coordinate of the area to paint to
w - Width of the area to paint to
h - Height of the area to paint to


"
SynthPanelUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthPanelUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthPanelUI,installDefaults(JPanel p),protected void,NULL,"

installDefaults
protected void installDefaults(JPanel p)

Overrides:
installDefaults in class BasicPanelUI


"
SynthPanelUI,installListeners(JPanel p),protected void,Installs listeners into the panel.,"

installListeners
protected void installListeners(JPanel p)
Installs listeners into the panel.

Parameters:
p - the JPanel object


"
SynthPanelUI,installUI(JComponent c),void,Configures the specified component appropriately for the look and feel.,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class BasicPanelUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
SynthPanelUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthPanelUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthPanelUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthPanelUI,propertyChange(PropertyChangeEvent pce),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent pce)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
pce - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthPanelUI,uninstallDefaults(JPanel p),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults(JPanel p)

Overrides:
uninstallDefaults in class BasicPanelUI


"
SynthPanelUI,uninstallListeners(JPanel p),protected void,Uninstalls listeners from the panel.,"

uninstallListeners
protected void uninstallListeners(JPanel p)
Uninstalls listeners from the panel.

Parameters:
p - the JPanel object


"
SynthPanelUI,uninstallUI(JComponent c),void,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicPanelUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
SynthPanelUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthPasswordFieldUI,create(Element elem),View,Creates a view (PasswordView) for an element.,"

create
public View create(Element elem)
Creates a view (PasswordView) for an element.

Specified by:
create in interface ViewFactory
Overrides:
create in class BasicTextFieldUI
Parameters:
elem - the element
Returns:
the view
See Also:
View


"
SynthPasswordFieldUI,createUI(JComponent c),static ComponentUI,Creates a UI for a JPasswordField.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a UI for a JPasswordField.

Parameters:
c - the JPasswordField
Returns:
the UI


"
SynthPasswordFieldUI,getPropertyPrefix(),protected String,Fetches the name used as a key to look up properties through the UIManager.,"

getPropertyPrefix
protected String getPropertyPrefix()
Fetches the name used as a key to look up properties through the
 UIManager.  This is used as a prefix to all the standard
 text properties.

Overrides:
getPropertyPrefix in class BasicTextFieldUI
Returns:
the name (""PasswordField"")


"
SynthPasswordFieldUI,installKeyboardActions(),protected void,NULL,"

installKeyboardActions
protected void installKeyboardActions()

Overrides:
installKeyboardActions in class BasicTextUI


"
SynthPasswordFieldUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthTextFieldUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthPopupMenuUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthPopupMenuUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthPopupMenuUI,installDefaults(),void,NULL,"

installDefaults
public void installDefaults()

Overrides:
installDefaults in class BasicPopupMenuUI


"
SynthPopupMenuUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicPopupMenuUI


"
SynthPopupMenuUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthPopupMenuUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthPopupMenuUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthPopupMenuUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthPopupMenuUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicPopupMenuUI


"
SynthPopupMenuUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicPopupMenuUI


"
SynthPopupMenuUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthProgressBarUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthProgressBarUI,"getBaseline(JComponent c, int width, int height)",int,Returns the baseline.,"

getBaseline
public int getBaseline(JComponent c,
                       int width,
                       int height)
Returns the baseline.

Overrides:
getBaseline in class BasicProgressBarUI
Parameters:
c - JComponent baseline is being requested for
width - the width to get the baseline for
height - the height to get the baseline for
Returns:
baseline or a value < 0 indicating there is no reasonable
                  baseline
See Also:
JComponent.getBaseline(int, int)


"
SynthProgressBarUI,getBox(Rectangle r),protected Rectangle,Stores the position and size of the bouncing box that would be painted for the current animation index in r and returns r.,"

getBox
protected Rectangle getBox(Rectangle r)
Stores the position and size of
 the bouncing box that would be painted for the current animation index
 in r and returns r.
 Subclasses that add to the painting performed
 in this class's implementation of paintIndeterminate --
 to draw an outline around the bouncing box, for example --
 can use this method to get the location of the bouncing
 box that was just painted.
 By overriding this method,
 you have complete control over the size and position
 of the bouncing box,
 without having to reimplement paintIndeterminate.

Overrides:
getBox in class BasicProgressBarUI
Parameters:
r - the Rectangle instance to be modified;
           may be null
Returns:
null if no box should be drawn;
           otherwise, returns the passed-in rectangle
           (if non-null)
           or a new rectangle
See Also:
BasicProgressBarUI.setAnimationIndex(int)


"
SynthProgressBarUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthProgressBarUI,getPreferredSize(JComponent c),Dimension,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicProgressBarUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
SynthProgressBarUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicProgressBarUI


"
SynthProgressBarUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicProgressBarUI


"
SynthProgressBarUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicProgressBarUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthProgressBarUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthProgressBarUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthProgressBarUI,"paintText(SynthContext context, Graphics g, String title)",protected void,Paints the component's text.,"

paintText
protected void paintText(SynthContext context,
                         Graphics g,
                         String title)
Paints the component's text.

Parameters:
context - context for the component being painted
g - Graphics object used for painting
title - the text to paint


"
SynthProgressBarUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthProgressBarUI,setAnimationIndex(int newValue),protected void,Sets the index of the current animation frame to the specified value and requests that the progress bar be repainted.,"

setAnimationIndex
protected void setAnimationIndex(int newValue)
Sets the index of the current animation frame
 to the specified value and requests that the
 progress bar be repainted.
 Subclasses that don't use the default painting code
 might need to override this method
 to change the way that the repaint method
 is invoked.

Overrides:
setAnimationIndex in class BasicProgressBarUI
Parameters:
newValue - the new animation index; no checking
                 is performed on its value
See Also:
BasicProgressBarUI.incrementAnimationIndex()


"
SynthProgressBarUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicProgressBarUI


"
SynthProgressBarUI,uninstallListeners(),protected void,Removes all listeners installed by this object.,"

uninstallListeners
protected void uninstallListeners()
Removes all listeners installed by this object.

Overrides:
uninstallListeners in class BasicProgressBarUI


"
SynthProgressBarUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthRadioButtonMenuItemUI,createUI(JComponent b),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent b)
Creates a new UI object for the given component.

Parameters:
b - component to create UI object for
Returns:
the UI object


"
SynthRadioButtonMenuItemUI,getPropertyPrefix(),protected String,NULL,"

getPropertyPrefix
protected String getPropertyPrefix()

Overrides:
getPropertyPrefix in class BasicMenuItemUI


"
SynthRadioButtonMenuItemUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthMenuItemUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthRadioButtonUI,createUI(JComponent b),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent b)
Creates a new UI object for the given component.

Parameters:
b - component to create UI object for
Returns:
the UI object


"
SynthRadioButtonUI,getPropertyPrefix(),protected String,NULL,"

getPropertyPrefix
protected String getPropertyPrefix()

Overrides:
getPropertyPrefix in class SynthToggleButtonUI


"
SynthRadioButtonUI,getSizingIcon(AbstractButton b),protected Icon,Returns the Icon used in calculating the preferred/minimum/maximum size.,"

getSizingIcon
protected Icon getSizingIcon(AbstractButton b)
Returns the Icon used in calculating the
 preferred/minimum/maximum size.

Overrides:
getSizingIcon in class SynthButtonUI


"
SynthRadioButtonUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthToggleButtonUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthRootPaneUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthRootPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthRootPaneUI,installDefaults(JRootPane c),protected void,NULL,"

installDefaults
protected void installDefaults(JRootPane c)

Overrides:
installDefaults in class BasicRootPaneUI


"
SynthRootPaneUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthRootPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthRootPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthRootPaneUI,propertyChange(PropertyChangeEvent e),void,Invoked when a property changes on the root pane.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
Invoked when a property changes on the root pane. If the event
 indicates the defaultButton has changed, this will
 reinstall the keyboard actions.

Specified by:
propertyChange in interface PropertyChangeListener
Overrides:
propertyChange in class BasicRootPaneUI
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthRootPaneUI,uninstallDefaults(JRootPane root),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults(JRootPane root)

Overrides:
uninstallDefaults in class BasicRootPaneUI


"
SynthRootPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthScrollBarUI,configureScrollBarColors(),protected void,NULL,"

configureScrollBarColors
protected void configureScrollBarColors()

Overrides:
configureScrollBarColors in class BasicScrollBarUI


"
SynthScrollBarUI,createDecreaseButton(int orientation),protected JButton,NULL,"

createDecreaseButton
protected JButton createDecreaseButton(int orientation)

Overrides:
createDecreaseButton in class BasicScrollBarUI


"
SynthScrollBarUI,createIncreaseButton(int orientation),protected JButton,NULL,"

createIncreaseButton
protected JButton createIncreaseButton(int orientation)

Overrides:
createIncreaseButton in class BasicScrollBarUI


"
SynthScrollBarUI,createUI(JComponent c),static ComponentUI,NULL,"

createUI
public static ComponentUI createUI(JComponent c)

"
SynthScrollBarUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthScrollBarUI,getMinimumThumbSize(),protected Dimension,Returns the smallest acceptable size for the thumb.,"

getMinimumThumbSize
protected Dimension getMinimumThumbSize()
Returns the smallest acceptable size for the thumb.  If the scrollbar
 becomes so small that this size isn't available, the thumb will be
 hidden.
 
Warning : the value returned by this method should not be
 be modified, it's a shared static constant.

Overrides:
getMinimumThumbSize in class BasicScrollBarUI
Returns:
The smallest acceptable size for the thumb.
See Also:
BasicScrollBarUI.getMaximumThumbSize()


"
SynthScrollBarUI,getPreferredSize(JComponent c),Dimension,"A vertical scrollbar's preferred width is the maximum of preferred widths of the (non null) increment/decrement buttons, and the minimum width of the thumb.","

getPreferredSize
public Dimension getPreferredSize(JComponent c)
A vertical scrollbar's preferred width is the maximum of
 preferred widths of the (non null)
 increment/decrement buttons,
 and the minimum width of the thumb. The preferred height is the
 sum of the preferred heights of the same parts.  The basis for
 the preferred size of a horizontal scrollbar is similar.
 
 The preferredSize is only computed once, subsequent
 calls to this method just return a cached size.

Overrides:
getPreferredSize in class BasicScrollBarUI
Parameters:
c - the JScrollBar that's delegating this method to us
Returns:
the preferred size of a Basic JScrollBar
See Also:
BasicScrollBarUI.getMaximumSize(javax.swing.JComponent), 
ComponentUI.getMinimumSize(javax.swing.JComponent)


"
SynthScrollBarUI,getSupportsAbsolutePositioning(),boolean,Indicates whether the user can absolutely position the thumb with a mouse gesture (usually the middle mouse button).,"

getSupportsAbsolutePositioning
public boolean getSupportsAbsolutePositioning()
Indicates whether the user can absolutely position the thumb with
 a mouse gesture (usually the middle mouse button).

Overrides:
getSupportsAbsolutePositioning in class BasicScrollBarUI
Returns:
true if a mouse gesture can absolutely position the thumb


"
SynthScrollBarUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicScrollBarUI


"
SynthScrollBarUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicScrollBarUI


"
SynthScrollBarUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicScrollBarUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthScrollBarUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthScrollBarUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthScrollBarUI,"paintThumb(SynthContext context, Graphics g, Rectangle thumbBounds)",protected void,Paints the scrollbar thumb.,"

paintThumb
protected void paintThumb(SynthContext context,
                          Graphics g,
                          Rectangle thumbBounds)
Paints the scrollbar thumb.

Parameters:
context - context for the component being painted
g - Graphics object used for painting
thumbBounds - bounding box for the thumb


"
SynthScrollBarUI,"paintTrack(SynthContext context, Graphics g, Rectangle trackBounds)",protected void,Paints the scrollbar track.,"

paintTrack
protected void paintTrack(SynthContext context,
                          Graphics g,
                          Rectangle trackBounds)
Paints the scrollbar track.

Parameters:
context - context for the component being painted
g - Graphics object used for painting
trackBounds - bounding box for the track


"
SynthScrollBarUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
Description copied from interface: PropertyChangeListener
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthScrollBarUI,setThumbRollover(boolean active),protected void,Sets whether or not the mouse is currently over the thumb.,"

setThumbRollover
protected void setThumbRollover(boolean active)
Sets whether or not the mouse is currently over the thumb.

Overrides:
setThumbRollover in class BasicScrollBarUI
Parameters:
active - True indicates the thumb is currently active.


"
SynthScrollBarUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicScrollBarUI


"
SynthScrollBarUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicScrollBarUI


"
SynthScrollBarUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthScrollPaneUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthScrollPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthScrollPaneUI,installDefaults(JScrollPane scrollpane),protected void,NULL,"

installDefaults
protected void installDefaults(JScrollPane scrollpane)

Overrides:
installDefaults in class BasicScrollPaneUI


"
SynthScrollPaneUI,installListeners(JScrollPane c),protected void,NULL,"

installListeners
protected void installListeners(JScrollPane c)

Overrides:
installListeners in class BasicScrollPaneUI


"
SynthScrollPaneUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicScrollPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthScrollPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthScrollPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthScrollPaneUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
Description copied from interface: PropertyChangeListener
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthScrollPaneUI,uninstallDefaults(JScrollPane c),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults(JScrollPane c)

Overrides:
uninstallDefaults in class BasicScrollPaneUI


"
SynthScrollPaneUI,uninstallListeners(JComponent c),protected void,NULL,"

uninstallListeners
protected void uninstallListeners(JComponent c)

Overrides:
uninstallListeners in class BasicScrollPaneUI


"
SynthScrollPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSeparatorUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthSeparatorUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthSeparatorUI,getMaximumSize(JComponent c),Dimension,Returns the specified component's maximum size appropriate for the look and feel.,"

getMaximumSize
public Dimension getMaximumSize(JComponent c)
Returns the specified component's maximum size appropriate for
 the look and feel.  If null is returned, the maximum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMaximumSize in class ComponentUI
Parameters:
c - the component whose maximum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a Dimension object or null
See Also:
JComponent.getMaximumSize(), 
LayoutManager2.maximumLayoutSize(java.awt.Container)


"
SynthSeparatorUI,getMinimumSize(JComponent c),Dimension,Returns the specified component's minimum size appropriate for the look and feel.,"

getMinimumSize
public Dimension getMinimumSize(JComponent c)
Returns the specified component's minimum size appropriate for
 the look and feel.  If null is returned, the minimum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMinimumSize in class ComponentUI
Parameters:
c - the component whose minimum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a Dimension object or null
See Also:
JComponent.getMinimumSize(), 
LayoutManager.minimumLayoutSize(java.awt.Container), 
ComponentUI.getPreferredSize(javax.swing.JComponent)


"
SynthSeparatorUI,getPreferredSize(JComponent c),Dimension,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class ComponentUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
SynthSeparatorUI,installDefaults(JSeparator c),void,Installs default setting.,"

installDefaults
public void installDefaults(JSeparator c)
Installs default setting. This method is called when a
 LookAndFeel is installed.

"
SynthSeparatorUI,installListeners(JSeparator c),void,Installs listeners.,"

installListeners
public void installListeners(JSeparator c)
Installs listeners. This method is called when a
 LookAndFeel is installed.

"
SynthSeparatorUI,installUI(JComponent c),void,Configures the specified component appropriately for the look and feel.,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class ComponentUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
SynthSeparatorUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSeparatorUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthSeparatorUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthSeparatorUI,propertyChange(PropertyChangeEvent evt),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent evt)
Description copied from interface: PropertyChangeListener
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
evt - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthSeparatorUI,uninstallDefaults(JSeparator c),void,Uninstalls default setting.,"

uninstallDefaults
public void uninstallDefaults(JSeparator c)
Uninstalls default setting. This method is called when a
 LookAndFeel is uninstalled.

"
SynthSeparatorUI,uninstallListeners(JSeparator c),void,Uninstalls listeners.,"

uninstallListeners
public void uninstallListeners(JSeparator c)
Uninstalls listeners. This method is called when a
 LookAndFeel is uninstalled.

"
SynthSeparatorUI,uninstallUI(JComponent c),void,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class ComponentUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
SynthSeparatorUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSliderUI,calculateGeometry(),protected void,NULL,"

calculateGeometry
protected void calculateGeometry()

Overrides:
calculateGeometry in class BasicSliderUI


"
SynthSliderUI,calculateThumbLocation(),protected void,NULL,"

calculateThumbLocation
protected void calculateThumbLocation()

Overrides:
calculateThumbLocation in class BasicSliderUI


"
SynthSliderUI,createTrackListener(JSlider s),protected BasicSliderUI.TrackListener,NULL,"

createTrackListener
protected BasicSliderUI.TrackListener createTrackListener(JSlider s)

Overrides:
createTrackListener in class BasicSliderUI


"
SynthSliderUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthSliderUI,"getBaseline(JComponent c, int width, int height)",int,Returns the baseline.,"

getBaseline
public int getBaseline(JComponent c,
                       int width,
                       int height)
Returns the baseline.

Overrides:
getBaseline in class BasicSliderUI
Parameters:
c - JComponent baseline is being requested for
width - the width to get the baseline for
height - the height to get the baseline for
Returns:
baseline or a value < 0 indicating there is no reasonable
                  baseline
See Also:
JComponent.getBaseline(int, int)


"
SynthSliderUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthSliderUI,getMinimumSize(JComponent c),Dimension,Returns the specified component's minimum size appropriate for the look and feel.,"

getMinimumSize
public Dimension getMinimumSize(JComponent c)
Returns the specified component's minimum size appropriate for
 the look and feel.  If null is returned, the minimum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMinimumSize in class BasicSliderUI
Parameters:
c - the component whose minimum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a Dimension object or null
See Also:
JComponent.getMinimumSize(), 
LayoutManager.minimumLayoutSize(java.awt.Container), 
ComponentUI.getPreferredSize(javax.swing.JComponent)


"
SynthSliderUI,getPreferredSize(JComponent c),Dimension,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicSliderUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
SynthSliderUI,getThumbSize(),protected Dimension,NULL,"

getThumbSize
protected Dimension getThumbSize()

Overrides:
getThumbSize in class BasicSliderUI


"
SynthSliderUI,installDefaults(JSlider slider),protected void,NULL,"

installDefaults
protected void installDefaults(JSlider slider)

Overrides:
installDefaults in class BasicSliderUI


"
SynthSliderUI,installListeners(JSlider slider),protected void,NULL,"

installListeners
protected void installListeners(JSlider slider)

Overrides:
installListeners in class BasicSliderUI


"
SynthSliderUI,layout(),protected void,Lays out the slider.,"

layout
protected void layout()
Lays out the slider.

"
SynthSliderUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicSliderUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSliderUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthSliderUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthSliderUI,"paintThumb(SynthContext context, Graphics g, Rectangle thumbBounds)",protected void,Paints the slider thumb.,"

paintThumb
protected void paintThumb(SynthContext context,
                          Graphics g,
                          Rectangle thumbBounds)
Paints the slider thumb.

Parameters:
context - context for the component being painted
g - Graphics object used for painting
thumbBounds - bounding box for the thumb


"
SynthSliderUI,"paintTrack(SynthContext context, Graphics g, Rectangle trackBounds)",protected void,Paints the slider track.,"

paintTrack
protected void paintTrack(SynthContext context,
                          Graphics g,
                          Rectangle trackBounds)
Paints the slider track.

Parameters:
context - context for the component being painted
g - Graphics object used for painting
trackBounds - bounding box for the track


"
SynthSliderUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthSliderUI,recalculateIfInsetsChanged(),protected void,NULL,"

recalculateIfInsetsChanged
protected void recalculateIfInsetsChanged()

Overrides:
recalculateIfInsetsChanged in class BasicSliderUI


"
SynthSliderUI,"setThumbLocation(int x, int y)",void,NULL,"

setThumbLocation
public void setThumbLocation(int x,
                             int y)

Overrides:
setThumbLocation in class BasicSliderUI


"
SynthSliderUI,uninstallDefaults(JSlider slider),protected void,Uninstalls default setting.,"

uninstallDefaults
protected void uninstallDefaults(JSlider slider)
Uninstalls default setting. This method is called when a
 LookAndFeel is uninstalled.

Overrides:
uninstallDefaults in class BasicSliderUI


"
SynthSliderUI,uninstallListeners(JSlider slider),protected void,NULL,"

uninstallListeners
protected void uninstallListeners(JSlider slider)

Overrides:
uninstallListeners in class BasicSliderUI


"
SynthSliderUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSliderUI,valueForXPosition(int xPos),int,Returns the value at the x position.,"

valueForXPosition
public int valueForXPosition(int xPos)
Returns the value at the x position.  If xPos is beyond the
 track at the left or the right, this method sets the value to either the
 minimum or maximum value of the slider, depending on if the slider is
 inverted or not.

Overrides:
valueForXPosition in class BasicSliderUI


"
SynthSliderUI,valueForYPosition(int yPos),int,Returns the value at the y position.,"

valueForYPosition
public int valueForYPosition(int yPos)
Returns the value at the y position. If yPos is beyond the
 track at the the bottom or the top, this method sets the value to either
 the minimum or maximum value of the slider, depending on if the slider
 is inverted or not.

Overrides:
valueForYPosition in class BasicSliderUI


"
SynthSliderUI,xPositionForValue(int value),protected int,NULL,"

xPositionForValue
protected int xPositionForValue(int value)

Overrides:
xPositionForValue in class BasicSliderUI


"
SynthSliderUI,"yPositionForValue(int value, int trackY, int trackHeight)",protected int,Returns the y location for the specified value.,"

yPositionForValue
protected int yPositionForValue(int value,
                                int trackY,
                                int trackHeight)
Returns the y location for the specified value.  No checking is
 done on the arguments.  In particular if trackHeight is
 negative undefined results may occur.

Overrides:
yPositionForValue in class BasicSliderUI
Parameters:
value - the slider value to get the location for
trackY - y-origin of the track
trackHeight - the height of the track


"
SynthSpinnerUI,createEditor(),protected JComponent,This method is called by installUI to get the editor component of the JSpinner.,"

createEditor
protected JComponent createEditor()
This method is called by installUI to get the editor component
 of the JSpinner.  By default it just returns
 JSpinner.getEditor().  Subclasses can override
 createEditor to return a component that contains
 the spinner's editor or null, if they're going to handle adding
 the editor to the JSpinner in an
 installUI override.
 
 Typically this method would be overridden to wrap the editor
 with a container with a custom border, since one can't assume
 that the editors border can be set directly.
 
 The replaceEditor method is called when the spinners
 editor is changed with JSpinner.setEditor.  If you've
 overriden this method, then you'll probably want to override
 replaceEditor as well.

Overrides:
createEditor in class BasicSpinnerUI
Returns:
the JSpinners editor JComponent, spinner.getEditor() by default
See Also:
BasicSpinnerUI.installUI(javax.swing.JComponent), 
replaceEditor(javax.swing.JComponent, javax.swing.JComponent), 
JSpinner.getEditor()


"
SynthSpinnerUI,createLayout(),protected LayoutManager,"Creates a LayoutManager that manages the editor, nextButton, and previousButton children of the JSpinner.","

createLayout
protected LayoutManager createLayout()
Creates a LayoutManager that manages the editor,
 nextButton, and previousButton
 children of the JSpinner.  These three children must be
 added with a constraint that identifies their role:
 ""Editor"", ""Next"", and ""Previous"". The default layout manager
 can handle the absence of any of these children.

Overrides:
createLayout in class BasicSpinnerUI
Returns:
a LayoutManager for the editor, next button, and previous button.
See Also:
BasicSpinnerUI.createNextButton(), 
BasicSpinnerUI.createPreviousButton(), 
BasicSpinnerUI.createEditor()


"
SynthSpinnerUI,createNextButton(),protected Component,"Creates an increment button, i.e.","

createNextButton
protected Component createNextButton()
Creates an increment button, i.e. component that replaces the spinner
 value with the object returned by spinner.getNextValue.
 By default the nextButton is a JButton. If the
 increment button is not needed this method should return null.

Overrides:
createNextButton in class BasicSpinnerUI
Returns:
a component that will replace the spinner's value with the
     next value in the sequence, or null
See Also:
BasicSpinnerUI.installUI(javax.swing.JComponent), 
BasicSpinnerUI.createPreviousButton(), 
BasicSpinnerUI.installNextButtonListeners(java.awt.Component)


"
SynthSpinnerUI,createPreviousButton(),protected Component,"Creates a decrement button, i.e.","

createPreviousButton
protected Component createPreviousButton()
Creates a decrement button, i.e. component that replaces the spinner
 value with the object returned by spinner.getPreviousValue.
 By default the previousButton is a JButton. If the
 decrement button is not needed this method should return null.

Overrides:
createPreviousButton in class BasicSpinnerUI
Returns:
a component that will replace the spinner's value with the
     previous value in the sequence, or null
See Also:
BasicSpinnerUI.installUI(javax.swing.JComponent), 
BasicSpinnerUI.createNextButton(), 
BasicSpinnerUI.installPreviousButtonListeners(java.awt.Component)


"
SynthSpinnerUI,createUI(JComponent c),static ComponentUI,Returns a new instance of SynthSpinnerUI.,"

createUI
public static ComponentUI createUI(JComponent c)
Returns a new instance of SynthSpinnerUI.

Parameters:
c - the JSpinner (not used)
Returns:
a new SynthSpinnerUI object
See Also:
ComponentUI.createUI(javax.swing.JComponent)


"
SynthSpinnerUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthSpinnerUI,installDefaults(),protected void,"Initializes the JSpinner border, foreground, and background, properties based on the corresponding ""Spinner.*"" properties from defaults table.","

installDefaults
protected void installDefaults()
Initializes the JSpinner border,
 foreground, and background, properties
 based on the corresponding ""Spinner.*"" properties from defaults table.
 The JSpinners layout is set to the value returned by
 createLayout.  This method is called by installUI.

Overrides:
installDefaults in class BasicSpinnerUI
See Also:
uninstallDefaults(), 
BasicSpinnerUI.installUI(javax.swing.JComponent), 
createLayout(), 
LookAndFeel.installBorder(javax.swing.JComponent, java.lang.String), 
LookAndFeel.installColors(javax.swing.JComponent, java.lang.String, java.lang.String)


"
SynthSpinnerUI,installListeners(),protected void,Initializes PropertyChangeListener with a shared object that delegates interesting PropertyChangeEvents to protected methods.,"

installListeners
protected void installListeners()
Initializes PropertyChangeListener with
 a shared object that delegates interesting PropertyChangeEvents
 to protected methods.
 
 This method is called by installUI.

Overrides:
installListeners in class BasicSpinnerUI
See Also:
BasicSpinnerUI.replaceEditor(javax.swing.JComponent, javax.swing.JComponent), 
BasicSpinnerUI.uninstallListeners()


"
SynthSpinnerUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSpinnerUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthSpinnerUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthSpinnerUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthSpinnerUI,"replaceEditor(JComponent oldEditor, JComponent newEditor)",protected void,Called by the PropertyChangeListener when the JSpinner editor property changes.,"

replaceEditor
protected void replaceEditor(JComponent oldEditor,
                             JComponent newEditor)
Called by the PropertyChangeListener when the
 JSpinner editor property changes.  It's the responsibility
 of this method to remove the old editor and add the new one.  By
 default this operation is just:
 
 spinner.remove(oldEditor);
 spinner.add(newEditor, ""Editor"");
 
 The implementation of replaceEditor should be coordinated
 with the createEditor method.

Overrides:
replaceEditor in class BasicSpinnerUI
See Also:
createEditor(), 
BasicSpinnerUI.createPropertyChangeListener()


"
SynthSpinnerUI,uninstallDefaults(),protected void,Sets the JSpinner's layout manager to null.,"

uninstallDefaults
protected void uninstallDefaults()
Sets the JSpinner's layout manager to null.  This
 method is called by uninstallUI.

Overrides:
uninstallDefaults in class BasicSpinnerUI
See Also:
installDefaults(), 
BasicSpinnerUI.uninstallUI(javax.swing.JComponent)


"
SynthSpinnerUI,uninstallListeners(),protected void,Removes the PropertyChangeListener added by installListeners.,"

uninstallListeners
protected void uninstallListeners()
Removes the PropertyChangeListener added
 by installListeners.
 
 This method is called by uninstallUI.

Overrides:
uninstallListeners in class BasicSpinnerUI
See Also:
BasicSpinnerUI.installListeners()


"
SynthSpinnerUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSplitPaneUI,createDefaultDivider(),BasicSplitPaneDivider,Creates the default divider.,"

createDefaultDivider
public BasicSplitPaneDivider createDefaultDivider()
Creates the default divider.

Overrides:
createDefaultDivider in class BasicSplitPaneUI


"
SynthSplitPaneUI,createDefaultNonContinuousLayoutDivider(),protected Component,"Returns the default non continuous layout divider, which is an instance of Canvas that fills in the background with dark gray.","

createDefaultNonContinuousLayoutDivider
protected Component createDefaultNonContinuousLayoutDivider()
Returns the default non continuous layout divider, which is an
 instance of Canvas that fills in the background with dark gray.

Overrides:
createDefaultNonContinuousLayoutDivider in class BasicSplitPaneUI


"
SynthSplitPaneUI,createUI(JComponent x),static ComponentUI,Creates a new SynthSplitPaneUI instance,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new SynthSplitPaneUI instance

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthSplitPaneUI,"finishedPaintingChildren(JSplitPane jc, Graphics g)",void,Called when the specified split pane has finished painting its children.,"

finishedPaintingChildren
public void finishedPaintingChildren(JSplitPane jc,
                                     Graphics g)
Called when the specified split pane has finished painting
 its children.

Overrides:
finishedPaintingChildren in class BasicSplitPaneUI


"
SynthSplitPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthSplitPaneUI,installDefaults(),protected void,Installs the UI defaults.,"

installDefaults
protected void installDefaults()
Installs the UI defaults.

Overrides:
installDefaults in class BasicSplitPaneUI


"
SynthSplitPaneUI,installListeners(),protected void,Installs the event listeners for the UI.,"

installListeners
protected void installListeners()
Installs the event listeners for the UI.

Overrides:
installListeners in class BasicSplitPaneUI


"
SynthSplitPaneUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicSplitPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthSplitPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthSplitPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthSplitPaneUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthSplitPaneUI,uninstallDefaults(),protected void,Uninstalls the UI defaults.,"

uninstallDefaults
protected void uninstallDefaults()
Uninstalls the UI defaults.

Overrides:
uninstallDefaults in class BasicSplitPaneUI


"
SynthSplitPaneUI,uninstallListeners(),protected void,Uninstalls the event listeners from the UI.,"

uninstallListeners
protected void uninstallListeners()
Uninstalls the event listeners from the UI.

Overrides:
uninstallListeners in class BasicSplitPaneUI


"
SynthSplitPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthStyle,"get(SynthContext context, Object key)",Object,Getter for a region specific style property.,"

get
public Object get(SynthContext context,
                  Object key)
Getter for a region specific style property.

Parameters:
context - SynthContext identifying requester
key - Property being requested.
Returns:
Value of the named property


"
SynthStyle,"getBoolean(SynthContext context, Object key, boolean defaultValue)",boolean,Convenience method to get a specific style property whose value is an Boolean.,"

getBoolean
public boolean getBoolean(SynthContext context,
                          Object key,
                          boolean defaultValue)
Convenience method to get a specific style property whose value is
 an Boolean.

Parameters:
context - SynthContext identifying requester
key - Property being requested.
defaultValue - Value to return if the property has not been
        specified, or is not a Boolean
Returns:
Value of the named property


"
SynthStyle,"getColor(SynthContext context, ColorType type)",Color,Returns the color for the specified state.,"

getColor
public Color getColor(SynthContext context,
                      ColorType type)
Returns the color for the specified state. This gives precedence to
 foreground and background of the JComponent. If the
 Color from the JComponent is not appropriate,
 or not used, this will invoke getColorForState. Subclasses
 should generally not have to override this, instead override
 getColorForState(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.ColorType).

Parameters:
context - SynthContext identifying requester
type - Type of color being requested.
Returns:
Color


"
SynthStyle,"getColorForState(SynthContext context, ColorType type)",protected abstract Color,Returns the color for the specified state.,"

getColorForState
protected abstract Color getColorForState(SynthContext context,
                                          ColorType type)
Returns the color for the specified state. This should NOT call any
 methods on the JComponent.

Parameters:
context - SynthContext identifying requester
type - Type of color being requested.
Returns:
Color to render with


"
SynthStyle,getFont(SynthContext context),Font,Returns the Font for the specified state.,"

getFont
public Font getFont(SynthContext context)
Returns the Font for the specified state. This redirects to the
 JComponent from the context as necessary.
 If this does not redirect
 to the JComponent getFontForState(javax.swing.plaf.synth.SynthContext) is invoked.

Parameters:
context - SynthContext identifying requester
Returns:
Font to render with


"
SynthStyle,getFontForState(SynthContext context),protected abstract Font,Returns the font for the specified state.,"

getFontForState
protected abstract Font getFontForState(SynthContext context)
Returns the font for the specified state. This should NOT call any
 method on the JComponent.

Parameters:
context - SynthContext identifying requester
Returns:
Font to render with


"
SynthStyle,getGraphicsUtils(SynthContext context),SynthGraphicsUtils,Returns the SynthGraphicUtils for the specified context.,"

getGraphicsUtils
public SynthGraphicsUtils getGraphicsUtils(SynthContext context)
Returns the SynthGraphicUtils for the specified context.

Parameters:
context - SynthContext identifying requester
Returns:
SynthGraphicsUtils


"
SynthStyle,"getIcon(SynthContext context, Object key)",Icon,Convenience method to get a specific style property whose value is an Icon.,"

getIcon
public Icon getIcon(SynthContext context,
                    Object key)
Convenience method to get a specific style property whose value is
 an Icon.

Parameters:
context - SynthContext identifying requester
key - Property being requested.
Returns:
Value of the named property, or null if not specified


"
SynthStyle,"getInsets(SynthContext context, Insets insets)",Insets,Returns the Insets that are used to calculate sizing information.,"

getInsets
public Insets getInsets(SynthContext context,
                        Insets insets)
Returns the Insets that are used to calculate sizing information.

Parameters:
context - SynthContext identifying requester
insets - Insets to place return value in.
Returns:
Sizing Insets.


"
SynthStyle,"getInt(SynthContext context, Object key, int defaultValue)",int,Convenience method to get a specific style property whose value is a Number.,"

getInt
public int getInt(SynthContext context,
                  Object key,
                  int defaultValue)
Convenience method to get a specific style property whose value is
 a Number. If the value is a Number,
 intValue is returned, otherwise defaultValue
 is returned.

Parameters:
context - SynthContext identifying requester
key - Property being requested.
defaultValue - Value to return if the property has not been
        specified, or is not a Number
Returns:
Value of the named property


"
SynthStyle,getPainter(SynthContext context),SynthPainter,Returns the SynthPainter that will be used for painting.,"

getPainter
public SynthPainter getPainter(SynthContext context)
Returns the SynthPainter that will be used for painting.
 This may return null.

Parameters:
context - SynthContext identifying requester
Returns:
SynthPainter to use


"
SynthStyle,"getString(SynthContext context, Object key, String defaultValue)",String,Convenience method to get a specific style property whose value is a String.,"

getString
public String getString(SynthContext context,
                        Object key,
                        String defaultValue)
Convenience method to get a specific style property whose value is
 a String.

Parameters:
context - SynthContext identifying requester
key - Property being requested.
defaultValue - Value to return if the property has not been
        specified, or is not a String
Returns:
Value of the named property


"
SynthStyle,installDefaults(SynthContext context),void,Installs the necessary state from this Style on the JComponent from context.,"

installDefaults
public void installDefaults(SynthContext context)
Installs the necessary state from this Style on the
 JComponent from context.

Parameters:
context - SynthContext identifying component to install properties
        to.


"
SynthStyle,isOpaque(SynthContext context),boolean,Returns true if the region is opaque.,"

isOpaque
public boolean isOpaque(SynthContext context)
Returns true if the region is opaque.

Parameters:
context - SynthContext identifying requester
Returns:
true if region is opaque.


"
SynthStyle,uninstallDefaults(SynthContext context),void,Uninstalls any state that this style installed on the JComponent from context.,"

uninstallDefaults
public void uninstallDefaults(SynthContext context)
Uninstalls any state that this style installed on
 the JComponent from context.
 
 Styles should NOT depend upon this being called, in certain cases
 it may never be called.

Parameters:
context - SynthContext identifying component to install properties
        to.


"
SynthStyleFactory,"getStyle(JComponent c, Region id)",abstract SynthStyle,Returns the style for the specified Component.,"

getStyle
public abstract SynthStyle getStyle(JComponent c,
                                    Region id)
Returns the style for the specified Component.

Parameters:
c - Component asking for
id - Region identifier
Returns:
SynthStyle for region.


"
SynthTabbedPaneUI,calculateMaxTabHeight(int tabPlacement),protected int,NULL,"

calculateMaxTabHeight
protected int calculateMaxTabHeight(int tabPlacement)

Overrides:
calculateMaxTabHeight in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,calculateMaxTabWidth(int tabPlacement),protected int,NULL,"

calculateMaxTabWidth
protected int calculateMaxTabWidth(int tabPlacement)

Overrides:
calculateMaxTabWidth in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,"calculateTabWidth(int tabPlacement, int tabIndex, FontMetrics metrics)",protected int,NULL,"

calculateTabWidth
protected int calculateTabWidth(int tabPlacement,
                                int tabIndex,
                                FontMetrics metrics)

Overrides:
calculateTabWidth in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,createLayoutManager(),protected LayoutManager,Invoked by installUI to create a layout manager object to manage the JTabbedPane.,"

createLayoutManager
protected LayoutManager createLayoutManager()
Invoked by installUI to create
 a layout manager object to manage
 the JTabbedPane.

 Overridden to create a TabbedPaneLayout subclass which takes into
 account tabOverlap.

Overrides:
createLayoutManager in class BasicTabbedPaneUI
Returns:
a layout manager object
See Also:
BasicTabbedPaneUI.TabbedPaneLayout, 
JTabbedPane.getTabLayoutPolicy()


"
SynthTabbedPaneUI,createMouseListener(),protected MouseListener,Overridden to keep track of whether the selected tab is also pressed.,"

createMouseListener
protected MouseListener createMouseListener()


 Overridden to keep track of whether the selected tab is also pressed.

Overrides:
createMouseListener in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,createScrollButton(int direction),protected JButton,Creates and returns a JButton that will provide the user with a way to scroll the tabs in a particular direction.,"

createScrollButton
protected JButton createScrollButton(int direction)
Creates and returns a JButton that will provide the user
 with a way to scroll the tabs in a particular direction. The
 returned JButton must be instance of UIResource.

Overrides:
createScrollButton in class BasicTabbedPaneUI
Parameters:
direction - One of the SwingConstants constants:
 SOUTH, NORTH, EAST or WEST
Returns:
Widget for user to
See Also:
JTabbedPane.setTabPlacement(int), 
SwingConstants


"
SynthTabbedPaneUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthTabbedPaneUI,getBaseline(int tab),protected int,Returns the baseline for the specified tab.,"

getBaseline
protected int getBaseline(int tab)
Returns the baseline for the specified tab.

Overrides:
getBaseline in class BasicTabbedPaneUI
Parameters:
tab - index of tab to get baseline for
Returns:
baseline or a value < 0 indicating there is no reasonable
                  baseline


"
SynthTabbedPaneUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthTabbedPaneUI,getFontMetrics(),protected FontMetrics,NULL,"

getFontMetrics
protected FontMetrics getFontMetrics()

Overrides:
getFontMetrics in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,"getTabInsets(int tabPlacement, int tabIndex)",protected Insets,NULL,"

getTabInsets
protected Insets getTabInsets(int tabPlacement,
                              int tabIndex)

Overrides:
getTabInsets in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,"getTabLabelShiftX(int tabPlacement, int tabIndex, boolean isSelected)",protected int,NULL,"

getTabLabelShiftX
protected int getTabLabelShiftX(int tabPlacement,
                                int tabIndex,
                                boolean isSelected)

Overrides:
getTabLabelShiftX in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,"getTabLabelShiftY(int tabPlacement, int tabIndex, boolean isSelected)",protected int,NULL,"

getTabLabelShiftY
protected int getTabLabelShiftY(int tabPlacement,
                                int tabIndex,
                                boolean isSelected)

Overrides:
getTabLabelShiftY in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTabbedPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTabbedPaneUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthTabbedPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTabbedPaneUI,"paintTabArea(Graphics g, int tabPlacement, int selectedIndex)",protected void,Paints the tabs in the tab area.,"

paintTabArea
protected void paintTabArea(Graphics g,
                            int tabPlacement,
                            int selectedIndex)
Description copied from class: BasicTabbedPaneUI
Paints the tabs in the tab area.
 Invoked by paint().
 The graphics parameter must be a valid Graphics
 object.  Tab placement may be either:
 JTabbedPane.TOP, JTabbedPane.BOTTOM,
 JTabbedPane.LEFT, or JTabbedPane.RIGHT.
 The selected index must be a valid tabbed pane tab index (0 to
 tab count - 1, inclusive) or -1 if no tab is currently selected.
 The handling of invalid parameters is unspecified.

Overrides:
paintTabArea in class BasicTabbedPaneUI
Parameters:
g - the graphics object to use for rendering
tabPlacement - the placement for the tabs within the JTabbedPane
selectedIndex - the tab index of the selected component


"
SynthTabbedPaneUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthTabbedPaneUI,setRolloverTab(int index),protected void,Sets the tab the mouse is currently over to index.,"

setRolloverTab
protected void setRolloverTab(int index)
Sets the tab the mouse is currently over to index.
 index will be -1 if the mouse is no longer over any
 tab. No checking is done to ensure the passed in index identifies a
 valid tab.

Overrides:
setRolloverTab in class BasicTabbedPaneUI
Parameters:
index - Index of the tab the mouse is over.


"
SynthTabbedPaneUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicTabbedPaneUI


"
SynthTabbedPaneUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTableHeaderUI,createUI(JComponent h),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent h)
Creates a new UI object for the given component.

Parameters:
h - component to create UI object for
Returns:
the UI object


"
SynthTableHeaderUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthTableHeaderUI,installDefaults(),protected void,"Initializes JTableHeader properties such as font, foreground, and background.","

installDefaults
protected void installDefaults()
Initializes JTableHeader properties such as font, foreground, and background.
 The font, foreground, and background properties are only set if their
 current value is either null or a UIResource, other properties are set
 if the current value is null.

Overrides:
installDefaults in class BasicTableHeaderUI
See Also:
BasicTableHeaderUI.installUI(javax.swing.JComponent)


"
SynthTableHeaderUI,installListeners(),protected void,Attaches listeners to the JTableHeader.,"

installListeners
protected void installListeners()
Attaches listeners to the JTableHeader.

Overrides:
installListeners in class BasicTableHeaderUI


"
SynthTableHeaderUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTableHeaderUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTableHeaderUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthTableHeaderUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTableHeaderUI,propertyChange(PropertyChangeEvent evt),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
evt - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthTableHeaderUI,"rolloverColumnUpdated(int oldColumn, int newColumn)",protected void,This method gets called every time when a rollover column in the table header is updated.,"

rolloverColumnUpdated
protected void rolloverColumnUpdated(int oldColumn,
                                     int newColumn)
This method gets called every time when a rollover column in the table
 header is updated. Every look and feel that supports a rollover effect
 in a table header should override this method and repaint the header.

Overrides:
rolloverColumnUpdated in class BasicTableHeaderUI
Parameters:
oldColumn - the index of the previous rollover column or -1 if the
 mouse was not over a column
newColumn - the index of the new rollover column or -1 if the mouse
 is not over a column
See Also:
BasicTableHeaderUI.getRolloverColumn(), 
JTableHeader.getHeaderRect(int)


"
SynthTableHeaderUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicTableHeaderUI


"
SynthTableHeaderUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicTableHeaderUI


"
SynthTableHeaderUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTableUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthTableUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthTableUI,installDefaults(),protected void,"Initializes JTable properties, such as font, foreground, and background.","

installDefaults
protected void installDefaults()
Initializes JTable properties, such as font, foreground, and background.
 The font, foreground, and background properties are only set if their
 current value is either null or a UIResource, other properties are set
 if the current value is null.

Overrides:
installDefaults in class BasicTableUI
See Also:
BasicTableUI.installUI(javax.swing.JComponent)


"
SynthTableUI,installListeners(),protected void,Attaches listeners to the JTable.,"

installListeners
protected void installListeners()
Attaches listeners to the JTable.

Overrides:
installListeners in class BasicTableUI


"
SynthTableUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTableUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTableUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthTableUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTableUI,propertyChange(PropertyChangeEvent event),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent event)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
event - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthTableUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicTableUI


"
SynthTableUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicTableUI


"
SynthTableUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTextAreaUI,createUI(JComponent ta),static ComponentUI,Creates a UI object for a JTextArea.,"

createUI
public static ComponentUI createUI(JComponent ta)
Creates a UI object for a JTextArea.

Parameters:
ta - a text area
Returns:
the UI object


"
SynthTextAreaUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthTextAreaUI,installDefaults(),protected void,"Initializes component properties, such as font, foreground, background, caret color, selection color, selected text color, disabled text color, and border color.","

installDefaults
protected void installDefaults()
Initializes component properties, such as font, foreground,
 background, caret color, selection color, selected text color,
 disabled text color, and border color.  The font, foreground, and
 background properties are only set if their current value is either null
 or a UIResource, other properties are set if the current
 value is null.

Overrides:
installDefaults in class BasicTextAreaUI
See Also:
BasicTextUI.uninstallDefaults(), 
BasicTextUI.installUI(javax.swing.JComponent)


"
SynthTextAreaUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthTextAreaUI,paintBackground(Graphics g),protected void,Paints a background for the view.,"

paintBackground
protected void paintBackground(Graphics g)
Paints a background for the view.  This will only be
 called if isOpaque() on the associated component is
 true.  The default is to paint the background color
 of the component.

 Overridden to do nothing.

Overrides:
paintBackground in class BasicTextUI
Parameters:
g - the graphics context


"
SynthTextAreaUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTextAreaUI,propertyChange(PropertyChangeEvent evt),protected void,This method gets called when a bound property is changed on the associated JTextComponent.,"

propertyChange
protected void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed
 on the associated JTextComponent.  This is a hook
 which UI implementations may change to reflect how the
 UI displays bound properties of JTextComponent subclasses.
 This is implemented to rebuild the View when the
 WrapLine or the WrapStyleWord property changes.

Overrides:
propertyChange in class BasicTextAreaUI
Parameters:
evt - the property change event


"
SynthTextAreaUI,uninstallDefaults(),protected void,Sets the component properties that have not been explicitly overridden to null.,"

uninstallDefaults
protected void uninstallDefaults()
Sets the component properties that have not been explicitly overridden
 to null.  A property is considered overridden if its current
 value is not a UIResource.

Overrides:
uninstallDefaults in class BasicTextUI
See Also:
BasicTextUI.installDefaults(), 
BasicTextUI.uninstallUI(javax.swing.JComponent)


"
SynthTextAreaUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicTextUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTextFieldUI,createUI(JComponent c),static ComponentUI,Creates a UI for a JTextField.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a UI for a JTextField.

Parameters:
c - the text field
Returns:
the UI object


"
SynthTextFieldUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthTextFieldUI,installDefaults(),protected void,"Initializes component properties, such as font, foreground, background, caret color, selection color, selected text color, disabled text color, and border color.","

installDefaults
protected void installDefaults()
Initializes component properties, such as font, foreground,
 background, caret color, selection color, selected text color,
 disabled text color, and border color.  The font, foreground, and
 background properties are only set if their current value is either null
 or a UIResource, other properties are set if the current
 value is null.

Overrides:
installDefaults in class BasicTextUI
See Also:
BasicTextUI.uninstallDefaults(), 
BasicTextUI.installUI(javax.swing.JComponent)


"
SynthTextFieldUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.
 This is routed to the BasicTextUI.paintSafely(java.awt.Graphics) method under
 the guarantee that the model does not change from the view of this
 thread while it is rendering (if the associated model is
 derived from AbstractDocument).  This enables the
 model to potentially be updated asynchronously.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthTextFieldUI,paintBackground(Graphics g),protected void,Paints a background for the view.,"

paintBackground
protected void paintBackground(Graphics g)
Paints a background for the view.  This will only be
 called if isOpaque() on the associated component is
 true.  The default is to paint the background color
 of the component.
 Overridden to do nothing.

Overrides:
paintBackground in class BasicTextUI
Parameters:
g - the graphics context


"
SynthTextFieldUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTextFieldUI,propertyChange(PropertyChangeEvent evt),protected void,This method gets called when a bound property is changed on the associated JTextComponent.,"

propertyChange
protected void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed
 on the associated JTextComponent.  This is a hook
 which UI implementations may change to reflect how the
 UI displays bound properties of JTextComponent subclasses.
 This is implemented to do nothing (i.e. the response to
 properties in JTextComponent itself are handled prior
 to calling this method).

Overrides:
propertyChange in class BasicTextUI
Parameters:
evt - the property change event


"
SynthTextFieldUI,uninstallDefaults(),protected void,Sets the component properties that have not been explicitly overridden to null.,"

uninstallDefaults
protected void uninstallDefaults()
Sets the component properties that have not been explicitly overridden
 to null.  A property is considered overridden if its current
 value is not a UIResource.

Overrides:
uninstallDefaults in class BasicTextUI
See Also:
BasicTextUI.installDefaults(), 
BasicTextUI.uninstallUI(javax.swing.JComponent)


"
SynthTextFieldUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicTextUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTextPaneUI,createUI(JComponent c),static ComponentUI,Creates a UI for the JTextPane.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a UI for the JTextPane.

Parameters:
c - the JTextPane object
Returns:
the UI object


"
SynthTextPaneUI,getPropertyPrefix(),protected String,Fetches the name used as a key to lookup properties through the UIManager.,"

getPropertyPrefix
protected String getPropertyPrefix()
Fetches the name used as a key to lookup properties through the
 UIManager.  This is used as a prefix to all the standard
 text properties.

Overrides:
getPropertyPrefix in class BasicEditorPaneUI
Returns:
the name (""TextPane"")


"
SynthTextPaneUI,installUI(JComponent c),void,Installs the UI for a component.,"

installUI
public void installUI(JComponent c)
Installs the UI for a component.  This does the following
 things.
 

 Sets opaqueness of the associated component according to its style,
 if the opaque property has not already been set by the client program.
 
 Installs the default caret and highlighter into the
 associated component. These properties are only set if their
 current value is either null or an instance of
 UIResource.
 
 Attaches to the editor and model.  If there is no
 model, a default one is created.
 
 Creates the view factory and the view hierarchy used
 to represent the model.
 

Overrides:
installUI in class BasicEditorPaneUI
Parameters:
c - the editor component
See Also:
BasicTextUI.installUI(javax.swing.JComponent), 
ComponentUI.installUI(javax.swing.JComponent)


"
SynthTextPaneUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthEditorPaneUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTextPaneUI,propertyChange(PropertyChangeEvent evt),protected void,This method gets called when a bound property is changed on the associated JTextComponent.,"

propertyChange
protected void propertyChange(PropertyChangeEvent evt)
This method gets called when a bound property is changed
 on the associated JTextComponent.  This is a hook
 which UI implementations may change to reflect how the
 UI displays bound properties of JTextComponent subclasses.
 If the font, foreground or document has changed, the
 the appropriate property is set in the default style of
 the document.

Overrides:
propertyChange in class SynthEditorPaneUI
Parameters:
evt - the property change event


"
SynthToggleButtonUI,createUI(JComponent b),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent b)
Creates a new UI object for the given component.

Parameters:
b - component to create UI object for
Returns:
the UI object


"
SynthToggleButtonUI,getPropertyPrefix(),protected String,NULL,"

getPropertyPrefix
protected String getPropertyPrefix()

Overrides:
getPropertyPrefix in class BasicButtonUI


"
SynthToggleButtonUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthButtonUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthToolBarUI,createLayout(),protected LayoutManager,Creates a LayoutManager to use with the toolbar.,"

createLayout
protected LayoutManager createLayout()
Creates a LayoutManager to use with the toolbar.

Returns:
a LayoutManager instance


"
SynthToolBarUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthToolBarUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthToolBarUI,installComponents(),protected void,NULL,"

installComponents
protected void installComponents()

Overrides:
installComponents in class BasicToolBarUI


"
SynthToolBarUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicToolBarUI


"
SynthToolBarUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicToolBarUI


"
SynthToolBarUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthToolBarUI,"paint(SynthContext context, Graphics g)",protected void,Paints the toolbar.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the toolbar.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthToolBarUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthToolBarUI,"paintContent(SynthContext context, Graphics g, Rectangle bounds)",protected void,Paints the toolbar content.,"

paintContent
protected void paintContent(SynthContext context,
                            Graphics g,
                            Rectangle bounds)
Paints the toolbar content.

Parameters:
context - context for the component being painted
g - Graphics object used for painting
bounds - bounding box for the toolbar


"
SynthToolBarUI,paintDragWindow(Graphics g),protected void,Paints the contents of the window used for dragging.,"

paintDragWindow
protected void paintDragWindow(Graphics g)
Paints the contents of the window used for dragging.

Overrides:
paintDragWindow in class BasicToolBarUI
Parameters:
g - Graphics to paint to.


"
SynthToolBarUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthToolBarUI,setBorderToNonRollover(Component c),protected void,"This implementation does nothing, because the rollover property of the JToolBar class is not used in the Synth Look and Feel.","

setBorderToNonRollover
protected void setBorderToNonRollover(Component c)
This implementation does nothing, because the rollover
 property of the JToolBar class is not used
 in the Synth Look and Feel.

Overrides:
setBorderToNonRollover in class BasicToolBarUI
Parameters:
c - component which will have a non-rollover border installed
See Also:
BasicToolBarUI.createNonRolloverBorder()


"
SynthToolBarUI,setBorderToNormal(Component c),protected void,"This implementation does nothing, because the rollover property of the JToolBar class is not used in the Synth Look and Feel.","

setBorderToNormal
protected void setBorderToNormal(Component c)
This implementation does nothing, because the rollover
 property of the JToolBar class is not used
 in the Synth Look and Feel.

Overrides:
setBorderToNormal in class BasicToolBarUI
Parameters:
c - component which will have a normal border re-installed
See Also:
BasicToolBarUI.createNonRolloverBorder()


"
SynthToolBarUI,setBorderToRollover(Component c),protected void,"This implementation does nothing, because the rollover property of the JToolBar class is not used in the Synth Look and Feel.","

setBorderToRollover
protected void setBorderToRollover(Component c)
This implementation does nothing, because the rollover
 property of the JToolBar class is not used
 in the Synth Look and Feel.

Overrides:
setBorderToRollover in class BasicToolBarUI
Parameters:
c - component which will have a rollover border installed
See Also:
BasicToolBarUI.createRolloverBorder()


"
SynthToolBarUI,uninstallComponents(),protected void,NULL,"

uninstallComponents
protected void uninstallComponents()

Overrides:
uninstallComponents in class BasicToolBarUI


"
SynthToolBarUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicToolBarUI


"
SynthToolBarUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicToolBarUI


"
SynthToolBarUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthToolTipUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthToolTipUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthToolTipUI,getPreferredSize(JComponent c),Dimension,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicToolTipUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
SynthToolTipUI,installDefaults(JComponent c),protected void,NULL,"

installDefaults
protected void installDefaults(JComponent c)

Overrides:
installDefaults in class BasicToolTipUI


"
SynthToolTipUI,installListeners(JComponent c),protected void,NULL,"

installListeners
protected void installListeners(JComponent c)

Overrides:
installListeners in class BasicToolTipUI


"
SynthToolTipUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicToolTipUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthToolTipUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthToolTipUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthToolTipUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthToolTipUI,uninstallDefaults(JComponent c),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults(JComponent c)

Overrides:
uninstallDefaults in class BasicToolTipUI


"
SynthToolTipUI,uninstallListeners(JComponent c),protected void,NULL,"

uninstallListeners
protected void uninstallListeners(JComponent c)

Overrides:
uninstallListeners in class BasicToolTipUI


"
SynthToolTipUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTreeUI,createDefaultCellEditor(),protected TreeCellEditor,Creates a default cell editor.,"

createDefaultCellEditor
protected TreeCellEditor createDefaultCellEditor()
Creates a default cell editor.

Overrides:
createDefaultCellEditor in class BasicTreeUI


"
SynthTreeUI,createDefaultCellRenderer(),protected TreeCellRenderer,Returns the default cell renderer that is used to do the stamping of each node.,"

createDefaultCellRenderer
protected TreeCellRenderer createDefaultCellRenderer()
Returns the default cell renderer that is used to do the
 stamping of each node.

Overrides:
createDefaultCellRenderer in class BasicTreeUI


"
SynthTreeUI,createUI(JComponent x),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent x)
Creates a new UI object for the given component.

Parameters:
x - component to create UI object for
Returns:
the UI object


"
SynthTreeUI,"drawCentered(Component c, Graphics graphics, Icon icon, int x, int y)",protected void,NULL,"

drawCentered
protected void drawCentered(Component c,
                            Graphics graphics,
                            Icon icon,
                            int x,
                            int y)

Overrides:
drawCentered in class BasicTreeUI


"
SynthTreeUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthTreeUI,getExpandedIcon(),Icon,NULL,"

getExpandedIcon
public Icon getExpandedIcon()

Overrides:
getExpandedIcon in class BasicTreeUI


"
SynthTreeUI,"getRowX(int row, int depth)",protected int,"Returns the location, along the x-axis, to render a particular row at.","

getRowX
protected int getRowX(int row,
                      int depth)
Returns the location, along the x-axis, to render a particular row
 at. The return value does not include any Insets specified on the JTree.
 This does not check for the validity of the row or depth, it is assumed
 to be correct and will not throw an Exception if the row or depth
 doesn't match that of the tree.

Overrides:
getRowX in class BasicTreeUI
Parameters:
row - Row to return x location for
depth - Depth of the row
Returns:
amount to indent the given row.


"
SynthTreeUI,installDefaults(),protected void,NULL,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicTreeUI


"
SynthTreeUI,installListeners(),protected void,NULL,"

installListeners
protected void installListeners()

Overrides:
installListeners in class BasicTreeUI


"
SynthTreeUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTreeUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthTreeUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthTreeUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthTreeUI,paintDropLine(Graphics g),protected void,Paints the drop line.,"

paintDropLine
protected void paintDropLine(Graphics g)
Paints the drop line.

Overrides:
paintDropLine in class BasicTreeUI
Parameters:
g - Graphics object to draw on


"
SynthTreeUI,"paintExpandControl(Graphics g, Rectangle clipBounds, Insets insets, Rectangle bounds, TreePath path, int row, boolean isExpanded, boolean hasBeenExpanded, boolean isLeaf)",protected void,Paints the expand (toggle) part of a row.,"

paintExpandControl
protected void paintExpandControl(Graphics g,
                                  Rectangle clipBounds,
                                  Insets insets,
                                  Rectangle bounds,
                                  TreePath path,
                                  int row,
                                  boolean isExpanded,
                                  boolean hasBeenExpanded,
                                  boolean isLeaf)
Paints the expand (toggle) part of a row. The receiver should
 NOT modify clipBounds, or insets.

Overrides:
paintExpandControl in class BasicTreeUI


"
SynthTreeUI,"paintHorizontalLine(Graphics g, JComponent c, int y, int left, int right)",protected void,Paints a horizontal line.,"

paintHorizontalLine
protected void paintHorizontalLine(Graphics g,
                                   JComponent c,
                                   int y,
                                   int left,
                                   int right)
Paints a horizontal line.

Overrides:
paintHorizontalLine in class BasicTreeUI


"
SynthTreeUI,"paintHorizontalPartOfLeg(Graphics g, Rectangle clipBounds, Insets insets, Rectangle bounds, TreePath path, int row, boolean isExpanded, boolean hasBeenExpanded, boolean isLeaf)",protected void,Paints the horizontal part of the leg.,"

paintHorizontalPartOfLeg
protected void paintHorizontalPartOfLeg(Graphics g,
                                        Rectangle clipBounds,
                                        Insets insets,
                                        Rectangle bounds,
                                        TreePath path,
                                        int row,
                                        boolean isExpanded,
                                        boolean hasBeenExpanded,
                                        boolean isLeaf)
Paints the horizontal part of the leg. The receiver should
 NOT modify clipBounds, or insets.
 NOTE: parentRow can be -1 if the root is not visible.

Overrides:
paintHorizontalPartOfLeg in class BasicTreeUI


"
SynthTreeUI,"paintVerticalLine(Graphics g, JComponent c, int x, int top, int bottom)",protected void,Paints a vertical line.,"

paintVerticalLine
protected void paintVerticalLine(Graphics g,
                                 JComponent c,
                                 int x,
                                 int top,
                                 int bottom)
Paints a vertical line.

Overrides:
paintVerticalLine in class BasicTreeUI


"
SynthTreeUI,"paintVerticalPartOfLeg(Graphics g, Rectangle clipBounds, Insets insets, TreePath path)",protected void,Paints the vertical part of the leg.,"

paintVerticalPartOfLeg
protected void paintVerticalPartOfLeg(Graphics g,
                                      Rectangle clipBounds,
                                      Insets insets,
                                      TreePath path)
Paints the vertical part of the leg. The receiver should
 NOT modify clipBounds, insets.

Overrides:
paintVerticalPartOfLeg in class BasicTreeUI


"
SynthTreeUI,propertyChange(PropertyChangeEvent event),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent event)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
event - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthTreeUI,uninstallDefaults(),protected void,NULL,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicTreeUI


"
SynthTreeUI,uninstallListeners(),protected void,NULL,"

uninstallListeners
protected void uninstallListeners()

Overrides:
uninstallListeners in class BasicTreeUI


"
SynthTreeUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthViewportUI,createUI(JComponent c),static ComponentUI,Creates a new UI object for the given component.,"

createUI
public static ComponentUI createUI(JComponent c)
Creates a new UI object for the given component.

Parameters:
c - component to create UI object for
Returns:
the UI object


"
SynthViewportUI,getContext(JComponent c),SynthContext,Returns the Context for the specified component.,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
SynthViewportUI,installDefaults(JComponent c),protected void,Installs defaults for a viewport.,"

installDefaults
protected void installDefaults(JComponent c)
Installs defaults for a viewport.

Parameters:
c - a JViewport object


"
SynthViewportUI,installListeners(JComponent c),protected void,Installs listeners into the viewport.,"

installListeners
protected void installListeners(JComponent c)
Installs listeners into the viewport.

Parameters:
c - a JViewport object


"
SynthViewportUI,installUI(JComponent c),void,Configures the specified component appropriately for the look and feel.,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class ComponentUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
SynthViewportUI,"paint(Graphics g, JComponent c)",void,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
SynthViewportUI,"paint(SynthContext context, Graphics g)",protected void,Paints the specified component.,"

paint
protected void paint(SynthContext context,
                     Graphics g)
Paints the specified component. This implementation does nothing.

Parameters:
context - context for the component being painted
g - the Graphics object used for painting
See Also:
update(Graphics,JComponent)


"
SynthViewportUI,"paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",void,Paints the border.,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border. The method is never called,
 because the JViewport class does not support a border.
 This implementation does nothing.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - the Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
SynthViewportUI,propertyChange(PropertyChangeEvent e),void,This method gets called when a bound property is changed.,"

propertyChange
public void propertyChange(PropertyChangeEvent e)
This method gets called when a bound property is changed.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
e - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
SynthViewportUI,uninstallDefaults(JComponent c),protected void,Uninstalls defaults from a viewport.,"

uninstallDefaults
protected void uninstallDefaults(JComponent c)
Uninstalls defaults from a viewport.

Parameters:
c - a JViewport object


"
SynthViewportUI,uninstallListeners(JComponent c),protected void,Uninstalls listeners from the viewport.,"

uninstallListeners
protected void uninstallListeners(JComponent c)
Uninstalls listeners from the viewport.

Parameters:
c - a JViewport object


"
SynthViewportUI,uninstallUI(JComponent c),void,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class ComponentUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
SynthViewportUI,"update(Graphics g, JComponent c)",void,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
