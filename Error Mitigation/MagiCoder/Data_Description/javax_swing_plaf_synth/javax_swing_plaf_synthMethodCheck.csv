Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,ColorType,1,ColorType getAccent(),False,,NULL
0,ColorType,2,ColorType getHighlight(),False,,NULL
0,ColorType,3,ColorType getHighlightAlternate(),False,,NULL
0,ColorType,4,ColorType getPrimary(),False,,NULL
0,ColorType,5,ColorType getSecondary(),False,,NULL
0,ColorType,6,ColorType getShadow(),False,,NULL
0,ColorType,7,ColorType getInactiveText(),False,,NULL
0,ColorType,8,ColorType getInactiveControl(),False,,NULL
0,ColorType,9,ColorType getActiveCaption(),False,,NULL
0,ColorType,10,ColorType getInactiveCaption(),False,,NULL
0,ColorType,11,ColorType getMenu(),False,,NULL
0,ColorType,12,ColorType getWindow(),False,,NULL
0,ColorType,13,ColorType getWindowText(),False,,NULL
0,ColorType,14,ColorType getMenuText(),False,,NULL
0,ColorType,15,ColorType getScrollbar(),False,,NULL
0,ColorType,16,ColorType getText(),False,,NULL
0,ColorType,17,ColorType getBlack(),False,,NULL
0,ColorType,18,ColorType getWhite(),False,,NULL
0,ColorType,19,ColorType getControl(),False,,NULL
0,ColorType,20,ColorType getControlHighlight(),False,,NULL
0,ColorType,21,ColorType getControlLtHighlight(),False,,NULL
0,ColorType,22,ColorType getControlDkShadow(),False,,NULL
0,ColorType,23,ColorType getControlShadow(),False,,NULL
0,ColorType,24,ColorType getInfo(),False,,NULL
0,ColorType,25,ColorType getInfoText(),False,,NULL
0,ColorType,26,ColorType getWarning(),False,,NULL
0,ColorType,27,ColorType getWarningText(),False,,NULL
0,ColorType,28,ColorType getError(),False,,NULL
0,ColorType,29,ColorType getErrorText(),False,,NULL
0,ColorType,30,ColorType getHyperlink(),False,,NULL
0,ColorType,31,ColorType getHyperlinkFocus(),False,,NULL
0,ColorType,32,ColorType getHyperlinkVisited(),False,,NULL
0,ColorType,33,ColorType getButtonShadow(),False,,NULL
0,ColorType,34,ColorType getButtonHighlight(),False,,NULL
0,ColorType,35,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,36,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,37,ColorType getButtonShadow(),False,,NULL
0,ColorType,38,ColorType getButtonHighlight(),False,,NULL
0,ColorType,39,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,40,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,41,ColorType getButtonShadow(),False,,NULL
0,ColorType,42,ColorType getButtonHighlight(),False,,NULL
0,ColorType,43,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,44,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,45,ColorType getButtonShadow(),False,,NULL
0,ColorType,46,ColorType getButtonHighlight(),False,,NULL
0,ColorType,47,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,48,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,49,ColorType getButtonShadow(),False,,NULL
0,ColorType,50,ColorType getButtonHighlight(),False,,NULL
0,ColorType,51,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,52,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,53,ColorType getButtonShadow(),False,,NULL
0,ColorType,54,ColorType getButtonHighlight(),False,,NULL
0,ColorType,55,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,56,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,57,ColorType getButtonShadow(),False,,NULL
0,ColorType,58,ColorType getButtonHighlight(),False,,NULL
0,ColorType,59,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,60,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,61,ColorType getButtonShadow(),False,,NULL
0,ColorType,62,ColorType getButtonHighlight(),False,,NULL
0,ColorType,63,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,64,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,65,ColorType getButtonShadow(),False,,NULL
0,ColorType,66,ColorType getButtonHighlight(),False,,NULL
0,ColorType,67,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,68,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,69,ColorType getButtonShadow(),False,,NULL
0,ColorType,70,ColorType getButtonHighlight(),False,,NULL
0,ColorType,71,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,72,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,73,ColorType getButtonShadow(),False,,NULL
0,ColorType,74,ColorType getButtonHighlight(),False,,NULL
0,ColorType,75,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,76,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,77,ColorType getButtonShadow(),False,,NULL
0,ColorType,78,ColorType getButtonHighlight(),False,,NULL
0,ColorType,79,ColorType getButtonDkShadow(),False,,NULL
0,ColorType,80,ColorType getButtonLtHighlight(),False,,NULL
0,ColorType,81,ColorType getButtonShadow(),False,,NULL
1,Region,1,void setBackground(Color color),False,,NULL
1,Region,2,void setForeground(Color color),False,,NULL
1,Region,3,void setBorder(Border border),False,,NULL
1,Region,4,void setPaint(Paint paint),False,,NULL
1,Region,5,void setShape(Shape shape),False,,NULL
2,SynthButtonUI,1,void installDefaults(JComponent c),False,,NULL
2,SynthButtonUI,2,void uninstallDefaults(JComponent c),False,,NULL
2,SynthButtonUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicButtonUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
2,SynthButtonUI,4,Dimension getPreferredSize(JComponent c),True,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicButtonUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
2,SynthButtonUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
3,SynthCheckBoxMenuItemUI,1,void installDefaults(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,2,void uninstallDefaults(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
3,SynthCheckBoxMenuItemUI,4,"void update(Graphics g, JComponent c)",False,,NULL
3,SynthCheckBoxMenuItemUI,5,void installUI(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,6,void uninstallUI(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,7,void installFocus(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,8,void uninstallFocus(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,9,void installKeyboardActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,10,void uninstallKeyboardActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,11,void installMouseActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,12,void uninstallMouseActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,13,void installRootPane(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,14,void uninstallRootPane(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,15,void installDefaults(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,16,void uninstallDefaults(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,17,"void paint(Graphics g, JComponent c)",False,,NULL
3,SynthCheckBoxMenuItemUI,18,"void update(Graphics g, JComponent c)",False,,NULL
3,SynthCheckBoxMenuItemUI,19,void installUI(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,20,void uninstallUI(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,21,void installFocus(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,22,void uninstallFocus(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,23,void installKeyboardActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,24,void uninstallKeyboardActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,25,void installMouseActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,26,void uninstallMouseActions(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,27,void installRootPane(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,28,void uninstallRootPane(JComponent c),False,,NULL
4,SynthCheckBoxUI,1,void installDefaults(JComponent c),False,,NULL
4,SynthCheckBoxUI,2,void uninstallDefaults(JComponent c),False,,NULL
4,SynthCheckBoxUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
4,SynthCheckBoxUI,4,"void update(Graphics g, JComponent c)",False,,NULL
4,SynthCheckBoxUI,5,void installUI(JComponent c),False,,NULL
4,SynthCheckBoxUI,6,void uninstallUI(JComponent c),False,,NULL
4,SynthCheckBoxUI,7,void installFocus(JComponent c),False,,NULL
4,SynthCheckBoxUI,8,void uninstallFocus(JComponent c),False,,NULL
4,SynthCheckBoxUI,9,void installKeyboardActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,10,void uninstallKeyboardActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,11,void installMouseActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,12,void uninstallMouseActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,13,void installRootPane(JRootPane rp),False,,NULL
4,SynthCheckBoxUI,14,void uninstallRootPane(JRootPane rp),False,,NULL
4,SynthCheckBoxUI,15,void installDefaults(JComponent c),False,,NULL
4,SynthCheckBoxUI,16,void uninstallDefaults(JComponent c),False,,NULL
4,SynthCheckBoxUI,17,"void paint(Graphics g, JComponent c)",False,,NULL
4,SynthCheckBoxUI,18,"void update(Graphics g, JComponent c)",False,,NULL
4,SynthCheckBoxUI,19,void installUI(JComponent c),False,,NULL
4,SynthCheckBoxUI,20,void uninstallUI(JComponent c),False,,NULL
4,SynthCheckBoxUI,21,void installFocus(JComponent c),False,,NULL
4,SynthCheckBoxUI,22,void uninstallFocus(JComponent c),False,,NULL
4,SynthCheckBoxUI,23,void installKeyboardActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,24,void uninstallKeyboardActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,25,void installMouseActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,26,void uninstallMouseActions(JComponent c),False,,NULL
4,SynthCheckBoxUI,27,void installRootPane(JRootPane rp),False,,NULL
4,SynthCheckBoxUI,28,void uninstallRootPane(JRootPane rp),False,,NULL
5,SynthColorChooserUI,1,void setColor(Color color),False,,NULL
5,SynthColorChooserUI,2,void setPreviewPanel(JPanel previewPanel),False,,NULL
5,SynthColorChooserUI,3,void setColorChooserPanel(JPanel colorChooserPanel),False,,NULL
5,SynthColorChooserUI,4,void setColorModel(ColorModel colorModel),False,,NULL
5,SynthColorChooserUI,5,void setColorSelectionModel(ColorSelectionModel selectionModel),False,,NULL
6,SynthComboBoxUI,1,void installComboBox(JComboBox comboBox),False,,NULL
6,SynthComboBoxUI,2,void uninstallComboBox(JComboBox comboBox),False,,NULL
6,SynthComboBoxUI,3,"void paint(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,4,"void paintFocus(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,5,"void paintItem(Graphics g, JComboBox comboBox, int index)",False,,NULL
6,SynthComboBoxUI,6,"void paintPopupArrow(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,7,"void paintSelectedItem(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,8,"void paintTray(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,9,"void paintTrayItem(Graphics g, JComboBox comboBox, int index)",False,,NULL
6,SynthComboBoxUI,10,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,11,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,12,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,13,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,14,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,15,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,16,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,17,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,18,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,19,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,20,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,21,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,22,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,23,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,24,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
6,SynthComboBoxUI,25,"void paintTraySeparator(Graphics g, JComboBox comboBox)",False,,NULL
7,SynthContext,1,"SynthContext(Graphics g, Rectangle clip)",False,,NULL
7,SynthContext,2,void setRegion(Region region),False,,NULL
7,SynthContext,3,Region getRegion(),True,Returns the Region identifying this state.,"

getRegion
public Region getRegion()
Returns the Region identifying this state.

Returns:
Region of the hosting component


"
7,SynthContext,4,void setPaint(Paint paint),False,,NULL
7,SynthContext,5,Paint getPaint(),False,,NULL
7,SynthContext,6,void setFont(Font font),False,,NULL
7,SynthContext,7,Font getFont(),False,,NULL
7,SynthContext,8,void setColor(Color color),False,,NULL
7,SynthContext,9,Color getColor(),False,,NULL
7,SynthContext,10,void setComponent(Component component),False,,NULL
7,SynthContext,11,Component getComponent(),False,,NULL
7,SynthContext,12,void setRectangle(Rectangle rectangle),False,,NULL
7,SynthContext,13,Rectangle getRectangle(),False,,NULL
7,SynthContext,14,void setClip(Shape clip),False,,NULL
7,SynthContext,15,Shape getClip(),False,,NULL
7,SynthContext,16,void setGraphics(Graphics g),False,,NULL
7,SynthContext,17,Graphics getGraphics(),False,,NULL
7,SynthContext,18,void setGraphics2D(Graphics2D g2),False,,NULL
7,SynthContext,19,Graphics2D getGraphics2D(),False,,NULL
7,SynthContext,20,void setGraphicsConfig(GraphicsConfig gc),False,,NULL
7,SynthContext,21,GraphicsConfig getGraphicsConfig(),False,,NULL
7,SynthContext,22,void setGraphicsConfig(GraphicsConfig gc),False,,NULL
7,SynthContext,23,GraphicsConfig getGraphicsConfig(),False,,NULL
7,SynthContext,24,void setGraphicsConfig(GraphicsConfig gc),False,,NULL
7,SynthContext,25,GraphicsConfig getGraphicsConfig(),False,,NULL
8,SynthDesktopIconUI,1,void installDefaults(JComponent c),False,,NULL
8,SynthDesktopIconUI,2,void uninstallDefaults(JComponent c),False,,NULL
8,SynthDesktopIconUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
8,SynthDesktopIconUI,4,void uninstall(JComponent c),False,,NULL
8,SynthDesktopIconUI,5,void install(JComponent c),False,,NULL
9,SynthDesktopPaneUI,1,void installUI(JComponent c),False,,NULL
9,SynthDesktopPaneUI,2,void uninstallUI(JComponent c),False,,NULL
9,SynthDesktopPaneUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicDesktopPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
9,SynthDesktopPaneUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
9,SynthDesktopPaneUI,5,void installDefaults(JComponent c),False,,NULL
10,SynthEditorPaneUI,1,void setContent(Node content),False,,NULL
10,SynthEditorPaneUI,2,void setContentType(String type),False,,NULL
10,SynthEditorPaneUI,3,void setEditable(boolean b),False,,NULL
10,SynthEditorPaneUI,4,void setEditorKit(EditorKit kit),False,,NULL
10,SynthEditorPaneUI,5,void setText(String text),False,,NULL
11,SynthFormattedTextFieldUI,1,void installUI(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,2,void uninstallUI(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
11,SynthFormattedTextFieldUI,4,"void update(Graphics g, JComponent c)",False,,NULL
11,SynthFormattedTextFieldUI,5,void installDefaults(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,6,void uninstallDefaults(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,7,void installFocus(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,8,void uninstallFocus(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,9,void installOverrides(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,10,void uninstallOverrides(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,11,"void installProperties(JComponent c, UIDefaults table)",False,,NULL
11,SynthFormattedTextFieldUI,12,"void uninstallProperties(JComponent c, UIDefaults table)",False,,NULL
11,SynthFormattedTextFieldUI,13,"void installColorsAndFont(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,14,"void uninstallColorsAndFont(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,15,"void installDimension(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,16,"void uninstallDimension(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,17,"void installIcon(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,18,"void uninstallIcon(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,19,"void installKeys(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,20,"void uninstallKeys(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,21,void installUI(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,22,void uninstallUI(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,23,"void paint(Graphics g, JComponent c)",False,,NULL
11,SynthFormattedTextFieldUI,24,"void update(Graphics g, JComponent c)",False,,NULL
11,SynthFormattedTextFieldUI,25,void installDefaults(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,26,void uninstallDefaults(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,27,void installFocus(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,28,void uninstallFocus(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,29,void installOverrides(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,30,void uninstallOverrides(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,31,"void installProperties(JComponent c, UIDefaults table)",False,,NULL
11,SynthFormattedTextFieldUI,32,"void uninstallProperties(JComponent c, UIDefaults table)",False,,NULL
11,SynthFormattedTextFieldUI,33,"void installColorsAndFont(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,34,"void uninstallColorsAndFont(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,35,"void installDimension(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,36,"void uninstallDimension(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,37,"void installIcon(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,38,"void uninstallIcon(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,39,"void installKeys(JComponent c, JLabel label)",False,,NULL
11,SynthFormattedTextFieldUI,40,"void uninstallKeys(JComponent c, JLabel label)",False,,NULL
12,SynthGraphicsUtils,1,"void drawLine(Graphics g, int x1, int y1, int x2, int y2)",False,,NULL
12,SynthGraphicsUtils,2,"void drawRect(Graphics g, int x, int y, int width, int height)",False,,NULL
12,SynthGraphicsUtils,3,"void drawRoundRect(Graphics g, int x, int y, int width, int height, int arcWidth, int arcHeight)",False,,NULL
12,SynthGraphicsUtils,4,"void drawOval(Graphics g, int x, int y, int width, int height)",False,,NULL
12,SynthGraphicsUtils,5,"void drawArc(Graphics g, int x, int y, int width, int height, int startAngle, int arcAngle)",False,,NULL
13,SynthInternalFrameUI,1,void installDefaults(JComponent c),False,,NULL
13,SynthInternalFrameUI,2,void uninstallDefaults(JComponent c),False,,NULL
13,SynthInternalFrameUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
13,SynthInternalFrameUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
13,SynthInternalFrameUI,5,void installUI(JComponent c),False,,NULL
13,SynthInternalFrameUI,6,void uninstallUI(JComponent c),False,,NULL
13,SynthInternalFrameUI,7,"void paint(Graphics g, JInternalFrame f)",False,,NULL
13,SynthInternalFrameUI,8,"void update(Graphics g, JInternalFrame f)",False,,NULL
13,SynthInternalFrameUI,9,void installDefaults(JInternalFrame f),False,,NULL
13,SynthInternalFrameUI,10,void uninstallDefaults(JInternalFrame f),False,,NULL
13,SynthInternalFrameUI,11,void installUI(JInternalFrame f),False,,NULL
13,SynthInternalFrameUI,12,void uninstallUI(JInternalFrame f),False,,NULL
13,SynthInternalFrameUI,13,"void paint(Graphics g, JRootPane r)",False,,NULL
13,SynthInternalFrameUI,14,"void update(Graphics g, JRootPane r)",False,,NULL
13,SynthInternalFrameUI,15,void installDefaults(JRootPane r),False,,NULL
13,SynthInternalFrameUI,16,void uninstallDefaults(JRootPane r),False,,NULL
13,SynthInternalFrameUI,17,void installUI(JRootPane r),False,,NULL
13,SynthInternalFrameUI,18,void uninstallUI(JRootPane r),False,,NULL
13,SynthInternalFrameUI,19,"void paint(Graphics g, JMenuBar m)",False,,NULL
13,SynthInternalFrameUI,20,"void update(Graphics g, JMenuBar m)",False,,NULL
13,SynthInternalFrameUI,21,void installDefaults(JMenuBar m),False,,NULL
13,SynthInternalFrameUI,22,void uninstallDefaults(JMenuBar m),False,,NULL
13,SynthInternalFrameUI,23,void installUI(JMenuBar m),False,,NULL
13,SynthInternalFrameUI,24,void uninstallUI(JMenuBar m),False,,NULL
13,SynthInternalFrameUI,25,"void paint(Graphics g, JMenuItem m)",False,,NULL
13,SynthInternalFrameUI,26,"void update(Graphics g, JMenuItem m)",False,,NULL
13,SynthInternalFrameUI,27,void installDefaults(JMenuItem m),False,,NULL
13,SynthInternalFrameUI,28,void uninstallDefaults(JMenuItem m),False,,NULL
13,SynthInternalFrameUI,29,void installUI(JMenuItem m),False,,NULL
13,SynthInternalFrameUI,30,void uninstallUI(JMenuItem m),False,,NULL
13,SynthInternalFrameUI,31,"void paint(Graphics g, JMenu m)",False,,NULL
13,SynthInternalFrameUI,32,"void update(Graphics g, JMenu m)",False,,NULL
13,SynthInternalFrameUI,33,void installDefaults(JMenu m),False,,NULL
13,SynthInternalFrameUI,34,void uninstallDefaults(JMenu m),False,,NULL
13,SynthInternalFrameUI,35,void installUI(JMenu m),False,,NULL
13,SynthInternalFrameUI,36,void uninstallUI(JMenu m),False,,NULL
13,SynthInternalFrameUI,37,"void paint(Graphics g, JPopupMenu m)",False,,NULL
13,SynthInternalFrameUI,38,"void update(Graphics g, JPopupMenu m)",False,,NULL
13,SynthInternalFrameUI,39,void installDefaults(JPopupMenu m),False,,NULL
13,SynthInternalFrameUI,40,void uninstallDefaults(JPopupMenu m),False,,NULL
13,SynthInternalFrameUI,41,void installUI(JPopupMenu m),False,,NULL
13,SynthInternalFrameUI,42,void uninstallUI(JPopupMenu m),False,,NULL
13,SynthInternalFrameUI,43,"void paint(Graphics g, JScrollBar b)",False,,NULL
13,SynthInternalFrameUI,44,"void update(Graphics g, JScrollBar b)",False,,NULL
13,SynthInternalFrameUI,45,void installDefaults(JScrollBar b),False,,NULL
13,SynthInternalFrameUI,46,void uninstallDefaults(JScrollBar b),False,,NULL
13,SynthInternalFrameUI,47,void installUI(JScrollBar b),False,,NULL
13,SynthInternalFrameUI,48,void uninstallUI(JScrollBar b),False,,NULL
13,SynthInternalFrameUI,49,"void paint(Graphics g, JScrollPane p)",False,,NULL
13,SynthInternalFrameUI,50,"void update(Graphics g, JScrollPane p)",False,,NULL
13,SynthInternalFrameUI,51,void installDefaults(JScrollPane p),False,,NULL
13,SynthInternalFrameUI,52,void uninstallDefaults(JScrollPane p),False,,NULL
13,SynthInternalFrameUI,53,void installUI(JScrollPane p),False,,NULL
13,SynthInternalFrameUI,54,void uninstallUI(JScrollPane p),False,,NULL
13,SynthInternalFrameUI,55,"void paint(Graphics g, JSeparator s)",False,,NULL
13,SynthInternalFrameUI,56,"void update(Graphics g, JSeparator s)",False,,NULL
13,SynthInternalFrameUI,57,void installDefaults(JSeparator s),False,,NULL
13,SynthInternalFrameUI,58,void uninstallDefaults(JSeparator s),False,,NULL
13,SynthInternalFrameUI,59,void installUI(JSeparator s),False,,NULL
13,SynthInternalFrameUI,60,void uninstallUI(JSeparator s),False,,NULL
13,SynthInternalFrameUI,61,"void paint(Graphics g, JSlider s)",False,,NULL
14,SynthLabelUI,1,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicLabelUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
14,SynthLabelUI,2,void installDefaults(JComponent c),False,,NULL
14,SynthLabelUI,3,void uninstallDefaults(JComponent c),False,,NULL
14,SynthLabelUI,4,void installUI(JComponent c),False,,NULL
14,SynthLabelUI,5,void uninstallUI(JComponent c),False,,NULL
15,SynthListUI,1,void installUI(JComponent c),False,,NULL
15,SynthListUI,2,void uninstallUI(JComponent c),False,,NULL
15,SynthListUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
15,SynthListUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
15,SynthListUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the BasicListUI.paint(java.awt.Graphics, javax.swing.JComponent) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
BasicListUI.paint(java.awt.Graphics, javax.swing.JComponent)


"
16,SynthLookAndFeel,1,void installColors(ColorMap colorMap),False,,NULL
16,SynthLookAndFeel,2,void installFont(Font font),False,,NULL
16,SynthLookAndFeel,3,void installUI(JComponent c),False,,NULL
16,SynthLookAndFeel,4,void installDefaults(JComponent c),False,,NULL
16,SynthLookAndFeel,5,void uninstallUI(JComponent c),False,,NULL
16,SynthLookAndFeel,6,void uninstallDefaults(JComponent c),False,,NULL
16,SynthLookAndFeel,7,void uninstallColors(ColorMap colorMap),False,,NULL
16,SynthLookAndFeel,8,void uninstallFont(Font font),False,,NULL
16,SynthLookAndFeel,9,void uninstallLookAndFeel(),False,,NULL
16,SynthLookAndFeel,10,void setCurrentTheme(Theme theme),False,,NULL
16,SynthLookAndFeel,11,Theme getCurrentTheme(),False,,NULL
16,SynthLookAndFeel,12,void setCurrentColorMap(ColorMap colorMap),False,,NULL
16,SynthLookAndFeel,13,ColorMap getCurrentColorMap(),False,,NULL
16,SynthLookAndFeel,14,void setCurrentFont(Font font),False,,NULL
16,SynthLookAndFeel,15,Font getCurrentFont(),False,,NULL
16,SynthLookAndFeel,16,void setCurrentInputMap(InputMap inputMap),False,,NULL
16,SynthLookAndFeel,17,InputMap getCurrentInputMap(),False,,NULL
16,SynthLookAndFeel,18,void setCurrentActionMap(ActionMap actionMap),False,,NULL
16,SynthLookAndFeel,19,ActionMap getCurrentActionMap(),False,,NULL
16,SynthLookAndFeel,20,void setCurrentBorder(Border border),False,,NULL
16,SynthLookAndFeel,21,Border getCurrentBorder(),False,,NULL
16,SynthLookAndFeel,22,void setCurrentInsets(Insets insets),False,,NULL
16,SynthLookAndFeel,23,Insets getCurrentInsets(),False,,NULL
16,SynthLookAndFeel,24,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,25,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,26,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,27,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,28,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,29,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,30,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,31,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,32,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,33,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,34,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,35,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,36,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,37,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,38,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,39,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,40,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,41,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,42,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,43,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,44,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,45,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,46,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,47,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,48,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,49,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,50,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,51,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,52,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,53,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,54,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,55,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,56,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,57,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,58,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,59,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,60,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,61,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,62,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,63,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,64,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,65,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,66,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,67,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,68,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,69,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,70,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,71,Painter getCurrentPainter(),False,,NULL
16,SynthLookAndFeel,72,void setCurrentPainter(Painter painter),False,,NULL
16,SynthLookAndFeel,73,Painter getCurrentPainter(),False,,NULL
17,SynthMenuBarUI,1,void installDefaults(JComponent c),False,,NULL
17,SynthMenuBarUI,2,void uninstallDefaults(JComponent c),False,,NULL
17,SynthMenuBarUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
17,SynthMenuBarUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
17,SynthMenuBarUI,5,void installUI(JComponent c),False,,NULL
17,SynthMenuBarUI,6,void uninstallUI(JComponent c),False,,NULL
17,SynthMenuBarUI,7,void installFocus(JComponent c),False,,NULL
17,SynthMenuBarUI,8,void uninstallFocus(JComponent c),False,,NULL
17,SynthMenuBarUI,9,"void installColorsAndFont(JComponent c, JLabel l)",False,,NULL
17,SynthMenuBarUI,10,"void uninstallColorsAndFont(JComponent c, JLabel l)",False,,NULL
17,SynthMenuBarUI,11,void installDimension(JComponent c),False,,NULL
17,SynthMenuBarUI,12,void uninstallDimension(JComponent c),False,,NULL
17,SynthMenuBarUI,13,void installIcon(JComponent c),False,,NULL
17,SynthMenuBarUI,14,void uninstallIcon(JComponent c),False,,NULL
17,SynthMenuBarUI,15,void installKeys(JComponent c),False,,NULL
17,SynthMenuBarUI,16,void uninstallKeys(JComponent c),False,,NULL
17,SynthMenuBarUI,17,void installProperties(JComponent c),False,,NULL
17,SynthMenuBarUI,18,void uninstallProperties(JComponent c),False,,NULL
17,SynthMenuBarUI,19,void installUI(JComponent c),False,,NULL
17,SynthMenuBarUI,20,void uninstallUI(JComponent c),False,,NULL
18,SynthMenuItemUI,1,void installDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,2,void uninstallDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
18,SynthMenuItemUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
18,SynthMenuItemUI,5,void installUI(JComponent c),False,,NULL
18,SynthMenuItemUI,6,void uninstallUI(JComponent c),True,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicMenuItemUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
18,SynthMenuItemUI,7,void installFocus(JComponent c),False,,NULL
18,SynthMenuItemUI,8,void uninstallFocus(JComponent c),False,,NULL
18,SynthMenuItemUI,9,void installKeyboardActions(JComponent c),False,,NULL
18,SynthMenuItemUI,10,void uninstallKeyboardActions(JComponent c),False,,NULL
18,SynthMenuItemUI,11,void installMouseActions(JComponent c),False,,NULL
18,SynthMenuItemUI,12,void uninstallMouseActions(JComponent c),False,,NULL
18,SynthMenuItemUI,13,void installTransferHandler(JComponent c),False,,NULL
18,SynthMenuItemUI,14,void uninstallTransferHandler(JComponent c),False,,NULL
18,SynthMenuItemUI,15,void installLayout(JComponent c),False,,NULL
18,SynthMenuItemUI,16,void uninstallLayout(JComponent c),False,,NULL
18,SynthMenuItemUI,17,void installComponents(JComponent c),False,,NULL
18,SynthMenuItemUI,18,void uninstallComponents(JComponent c),False,,NULL
18,SynthMenuItemUI,19,void installProperties(JComponent c),False,,NULL
18,SynthMenuItemUI,20,void uninstallProperties(JComponent c),False,,NULL
18,SynthMenuItemUI,21,void installAccessibility(JComponent c),False,,NULL
18,SynthMenuItemUI,22,void uninstallAccessibility(JComponent c),False,,NULL
18,SynthMenuItemUI,23,void installDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,24,void uninstallDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,25,void installDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,26,void uninstallDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,27,void installDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,28,void uninstallDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,29,void installDefaults(JComponent c),False,,NULL
18,SynthMenuItemUI,30,void uninstallDefaults(JComponent c),False,,NULL
19,SynthMenuUI,1,void installDefaults(JComponent c),False,,NULL
19,SynthMenuUI,2,void uninstallDefaults(JComponent c),False,,NULL
19,SynthMenuUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
19,SynthMenuUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicMenuItemUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
19,SynthMenuUI,5,void installUI(JComponent c),False,,NULL
20,SynthOptionPaneUI,1,SynthOptionPaneUI(UIManager.LookAndFeelInfo info),False,,NULL
20,SynthOptionPaneUI,2,void installDefaults(JComponent c),False,,NULL
20,SynthOptionPaneUI,3,void uninstallDefaults(JComponent c),False,,NULL
20,SynthOptionPaneUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
20,SynthOptionPaneUI,5,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
21,SynthPainter,1,"void paint(Graphics g, JComponent c, Rectangle bounds)",False,,NULL
21,SynthPainter,2,"void paint(Graphics g, JComponent c, Rectangle bounds, Color background)",False,,NULL
21,SynthPainter,3,"void paint(Graphics g, JComponent c, Rectangle bounds, Color background, Color foreground)",False,,NULL
21,SynthPainter,4,"void paint(Graphics g, JComponent c, Rectangle bounds, Color background, Color foreground, boolean isSelected, boolean hasFocus)",False,,NULL
21,SynthPainter,5,"void paint(Graphics g, JComponent c, Rectangle bounds, Color background, Color foreground, boolean isSelected, boolean hasFocus, boolean isPressed)",False,,NULL
22,SynthPanelUI,1,SynthPanelUI(),False,,NULL
22,SynthPanelUI,2,void installDefaults(JComponent c),False,,NULL
22,SynthPanelUI,3,void uninstallDefaults(JComponent c),False,,NULL
22,SynthPanelUI,4,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
22,SynthPanelUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
23,SynthPasswordFieldUI,1,void installUI(JComponent c),False,,NULL
23,SynthPasswordFieldUI,2,void uninstallUI(JComponent c),False,,NULL
23,SynthPasswordFieldUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
23,SynthPasswordFieldUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
23,SynthPasswordFieldUI,5,"void update(Graphics g, JComponent c)",False,,NULL
24,SynthPopupMenuUI,1,void installDefaults(JComponent c),False,,NULL
24,SynthPopupMenuUI,2,void uninstallDefaults(JComponent c),False,,NULL
24,SynthPopupMenuUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
24,SynthPopupMenuUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
24,SynthPopupMenuUI,5,void installUI(JComponent c),False,,NULL
24,SynthPopupMenuUI,6,void uninstallUI(JComponent c),False,,NULL
24,SynthPopupMenuUI,7,void installFocus(JComponent c),False,,NULL
24,SynthPopupMenuUI,8,void uninstallFocus(JComponent c),False,,NULL
24,SynthPopupMenuUI,9,void installKeyboardActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,10,void uninstallKeyboardActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,11,void installMouseListeners(JComponent c),False,,NULL
24,SynthPopupMenuUI,12,void uninstallMouseListeners(JComponent c),False,,NULL
24,SynthPopupMenuUI,13,void installPopupMenuActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,14,void uninstallPopupMenuActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,15,void installPropertyChangeListener(JComponent c),False,,NULL
24,SynthPopupMenuUI,16,void uninstallPropertyChangeListener(JComponent c),False,,NULL
24,SynthPopupMenuUI,17,void installUI(JComponent c),False,,NULL
24,SynthPopupMenuUI,18,void uninstallUI(JComponent c),False,,NULL
24,SynthPopupMenuUI,19,void installFocus(JComponent c),False,,NULL
24,SynthPopupMenuUI,20,void uninstallFocus(JComponent c),False,,NULL
24,SynthPopupMenuUI,21,void installKeyboardActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,22,void uninstallKeyboardActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,23,void installMouseListeners(JComponent c),False,,NULL
24,SynthPopupMenuUI,24,void uninstallMouseListeners(JComponent c),False,,NULL
24,SynthPopupMenuUI,25,void installPopupMenuActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,26,void uninstallPopupMenuActions(JComponent c),False,,NULL
24,SynthPopupMenuUI,27,void installPropertyChangeListener(JComponent c),False,,NULL
24,SynthPopupMenuUI,28,void uninstallPropertyChangeListener(JComponent c),False,,NULL
25,SynthProgressBarUI,1,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicProgressBarUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
25,SynthProgressBarUI,2,Dimension getPreferredSize(JComponent c),True,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicProgressBarUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
25,SynthProgressBarUI,3,void installUI(JComponent c),False,,NULL
25,SynthProgressBarUI,4,void uninstallUI(JComponent c),False,,NULL
25,SynthProgressBarUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
26,SynthRadioButtonMenuItemUI,1,void installDefaults(JComponent c),False,,NULL
26,SynthRadioButtonMenuItemUI,2,void uninstallDefaults(JComponent c),False,,NULL
26,SynthRadioButtonMenuItemUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
26,SynthRadioButtonMenuItemUI,4,"void update(Graphics g, JComponent c)",False,,NULL
26,SynthRadioButtonMenuItemUI,5,void installUI(JComponent c),False,,NULL
26,SynthRadioButtonMenuItemUI,6,void uninstallUI(JComponent c),False,,NULL
26,SynthRadioButtonMenuItemUI,7,"void paintMenuItem(Graphics g, JMenuItem mi, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,8,"void paintArrow(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,9,"void paintFocus(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,10,"void paintSelection(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,11,"void paintText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,12,"void paintMenuItemBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,13,"void paintMenuItemForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,14,"void paintArrowBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,15,"void paintArrowForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,16,"void paintFocusBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,17,"void paintFocusForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,18,"void paintSelectionBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,19,"void paintSelectionForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,20,"void paintTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,21,"void paintTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,22,"void paintMenuItemText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,23,"void paintArrowText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,24,"void paintFocusText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,25,"void paintSelectionText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,26,"void paintTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,27,"void paintMenuItemTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,28,"void paintMenuItemTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,29,"void paintArrowTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,30,"void paintArrowTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,31,"void paintFocusTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,32,"void paintFocusTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,33,"void paintSelectionTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,34,"void paintSelectionTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,35,"void paintTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,36,"void paintTextTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,37,"void paintMenuItemTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,38,"void paintArrowTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,39,"void paintFocusTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,40,"void paintSelectionTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,41,"void paintTextTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,42,"void paintMenuItemTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,43,"void paintMenuItemTextTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,44,"void paintArrowTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,45,"void paintArrowTextTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,46,"void paintFocusTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,47,"void paintFocusTextTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,48,"void paintSelectionTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,49,"void paintSelectionTextTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,50,"void paintTextTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,51,"void paintTextTextTextForeground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,52,"void paintMenuItemTextTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,53,"void paintArrowTextTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,54,"void paintFocusTextTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,55,"void paintSelectionTextTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,56,"void paintTextTextTextText(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,57,"void paintMenuItemTextTextTextBackground(Graphics g, Rectangle r)",False,,NULL
26,SynthRadioButtonMenuItemUI,58,"void paintMenuItemTextTextTextForeground(Graphics g, Rectangle r)",False,,NULL
27,SynthRadioButtonUI,1,void installDefaults(JComponent c),False,,NULL
27,SynthRadioButtonUI,2,void uninstallDefaults(JComponent c),False,,NULL
27,SynthRadioButtonUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
27,SynthRadioButtonUI,4,"void update(Graphics g, JComponent c)",False,,NULL
27,SynthRadioButtonUI,5,void installUI(JComponent c),False,,NULL
27,SynthRadioButtonUI,6,void uninstallUI(JComponent c),False,,NULL
27,SynthRadioButtonUI,7,void installFocus(JComponent c),False,,NULL
27,SynthRadioButtonUI,8,void uninstallFocus(JComponent c),False,,NULL
27,SynthRadioButtonUI,9,void installKeyboardActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,10,void uninstallKeyboardActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,11,void installMouseActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,12,void uninstallMouseActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,13,void installRootPane(JComponent c),False,,NULL
27,SynthRadioButtonUI,14,void uninstallRootPane(JComponent c),False,,NULL
27,SynthRadioButtonUI,15,void installDefaults(JComponent c),False,,NULL
27,SynthRadioButtonUI,16,void uninstallDefaults(JComponent c),False,,NULL
27,SynthRadioButtonUI,17,"void paint(Graphics g, JComponent c)",False,,NULL
27,SynthRadioButtonUI,18,"void update(Graphics g, JComponent c)",False,,NULL
27,SynthRadioButtonUI,19,void installUI(JComponent c),False,,NULL
27,SynthRadioButtonUI,20,void uninstallUI(JComponent c),False,,NULL
27,SynthRadioButtonUI,21,void installFocus(JComponent c),False,,NULL
27,SynthRadioButtonUI,22,void uninstallFocus(JComponent c),False,,NULL
27,SynthRadioButtonUI,23,void installKeyboardActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,24,void uninstallKeyboardActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,25,void installMouseActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,26,void uninstallMouseActions(JComponent c),False,,NULL
27,SynthRadioButtonUI,27,void installRootPane(JComponent c),False,,NULL
27,SynthRadioButtonUI,28,void uninstallRootPane(JComponent c),False,,NULL
28,SynthRootPaneUI,1,void installDefaults(JComponent c),False,,NULL
28,SynthRootPaneUI,2,void uninstallDefaults(JComponent c),False,,NULL
28,SynthRootPaneUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
28,SynthRootPaneUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
28,SynthRootPaneUI,5,void installUI(JComponent c),False,,NULL
29,SynthScrollBarUI,1,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicScrollBarUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
29,SynthScrollBarUI,2,Dimension getPreferredSize(JComponent c),True,"A vertical scrollbar's preferred width is the maximum of preferred widths of the (non null) increment/decrement buttons, and the minimum width of the thumb.","

getPreferredSize
public Dimension getPreferredSize(JComponent c)
A vertical scrollbar's preferred width is the maximum of
 preferred widths of the (non null)
 increment/decrement buttons,
 and the minimum width of the thumb. The preferred height is the
 sum of the preferred heights of the same parts.  The basis for
 the preferred size of a horizontal scrollbar is similar.
 
 The preferredSize is only computed once, subsequent
 calls to this method just return a cached size.

Overrides:
getPreferredSize in class BasicScrollBarUI
Parameters:
c - the JScrollBar that's delegating this method to us
Returns:
the preferred size of a Basic JScrollBar
See Also:
BasicScrollBarUI.getMaximumSize(javax.swing.JComponent), 
ComponentUI.getMinimumSize(javax.swing.JComponent)


"
29,SynthScrollBarUI,3,void installDefaults(JComponent c),False,,NULL
29,SynthScrollBarUI,4,void uninstallDefaults(JComponent c),False,,NULL
29,SynthScrollBarUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
30,SynthScrollPaneUI,1,void installUI(JComponent c),False,,NULL
30,SynthScrollPaneUI,2,void uninstallUI(JComponent c),False,,NULL
30,SynthScrollPaneUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicScrollPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
30,SynthScrollPaneUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
30,SynthScrollPaneUI,5,void scrollRectToVisible(Rectangle rect),False,,NULL
31,SynthSeparatorUI,1,void installDefaults(JComponent c),False,,NULL
31,SynthSeparatorUI,2,void uninstallDefaults(JComponent c),False,,NULL
31,SynthSeparatorUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
31,SynthSeparatorUI,4,Dimension getPreferredSize(JComponent c),True,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class ComponentUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
31,SynthSeparatorUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
32,SynthSliderUI,1,void installDefaults(JComponent c),False,,NULL
32,SynthSliderUI,2,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicSliderUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
32,SynthSliderUI,3,void paintThumb(Graphics g),False,,NULL
32,SynthSliderUI,4,void paintTrack(Graphics g),False,,NULL
32,SynthSliderUI,5,void paintTicks(Graphics g),False,,NULL
33,SynthSpinnerUI,1,void installDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,2,void uninstallDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,3,"void installColorsAndFont(JComponent c, JLabel label)",False,,NULL
33,SynthSpinnerUI,4,void uninstallColorsAndFont(JComponent c),False,,NULL
33,SynthSpinnerUI,5,void installFocus(JComponent c),False,,NULL
33,SynthSpinnerUI,6,void uninstallFocus(JComponent c),False,,NULL
33,SynthSpinnerUI,7,void installDimension(JComponent c),False,,NULL
33,SynthSpinnerUI,8,void uninstallDimension(JComponent c),False,,NULL
33,SynthSpinnerUI,9,void installIcon(JComponent c),False,,NULL
33,SynthSpinnerUI,10,void uninstallIcon(JComponent c),False,,NULL
33,SynthSpinnerUI,11,void installBorder(JComponent c),False,,NULL
33,SynthSpinnerUI,12,void uninstallBorder(JComponent c),False,,NULL
33,SynthSpinnerUI,13,void installTransparency(JComponent c),False,,NULL
33,SynthSpinnerUI,14,void uninstallTransparency(JComponent c),False,,NULL
33,SynthSpinnerUI,15,void installCursor(JComponent c),False,,NULL
33,SynthSpinnerUI,16,void uninstallCursor(JComponent c),False,,NULL
33,SynthSpinnerUI,17,void installKeys(JComponent c),False,,NULL
33,SynthSpinnerUI,18,void uninstallKeys(JComponent c),False,,NULL
33,SynthSpinnerUI,19,void installActions(JComponent c),False,,NULL
33,SynthSpinnerUI,20,void uninstallActions(JComponent c),False,,NULL
33,SynthSpinnerUI,21,void installProperties(JComponent c),False,,NULL
33,SynthSpinnerUI,22,void uninstallProperties(JComponent c),False,,NULL
33,SynthSpinnerUI,23,void installUI(JComponent c),False,,NULL
33,SynthSpinnerUI,24,void uninstallUI(JComponent c),False,,NULL
33,SynthSpinnerUI,25,void installDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,26,void uninstallDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,27,void installDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,28,void uninstallDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,29,void installDefaults(JComponent c),False,,NULL
33,SynthSpinnerUI,30,void uninstallDefaults(JComponent c),False,,NULL
34,SynthSplitPaneUI,1,void installDefaults(JComponent c),False,,NULL
34,SynthSplitPaneUI,2,void uninstallDefaults(JComponent c),False,,NULL
34,SynthSplitPaneUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicSplitPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
34,SynthSplitPaneUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
34,SynthSplitPaneUI,5,void installUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,6,void uninstallUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,7,"void installColorsAndFont(JComponent c, JComponent.BaselineResizeBehavior baselineResizeBehavior)",False,,NULL
34,SynthSplitPaneUI,8,void uninstallColorsAndFont(JComponent c),False,,NULL
34,SynthSplitPaneUI,9,void installFocus(JComponent c),False,,NULL
34,SynthSplitPaneUI,10,void uninstallFocus(JComponent c),False,,NULL
34,SynthSplitPaneUI,11,void installDimension(JComponent c),False,,NULL
34,SynthSplitPaneUI,12,void uninstallDimension(JComponent c),False,,NULL
34,SynthSplitPaneUI,13,void installIcon(JComponent c),False,,NULL
34,SynthSplitPaneUI,14,void uninstallIcon(JComponent c),False,,NULL
34,SynthSplitPaneUI,15,void installKeys(JComponent c),False,,NULL
34,SynthSplitPaneUI,16,void uninstallKeys(JComponent c),False,,NULL
34,SynthSplitPaneUI,17,void installMouse(JComponent c),False,,NULL
34,SynthSplitPaneUI,18,void uninstallMouse(JComponent c),False,,NULL
34,SynthSplitPaneUI,19,void installProperties(JComponent c),False,,NULL
34,SynthSplitPaneUI,20,void uninstallProperties(JComponent c),False,,NULL
34,SynthSplitPaneUI,21,void installUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,22,void uninstallUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,23,void installDefaults(JComponent c),False,,NULL
34,SynthSplitPaneUI,24,void uninstallDefaults(JComponent c),False,,NULL
34,SynthSplitPaneUI,25,void installUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,26,void uninstallUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,27,"void installColorsAndFont(JComponent c, JComponent.BaselineResizeBehavior baselineResizeBehavior)",False,,NULL
34,SynthSplitPaneUI,28,void uninstallColorsAndFont(JComponent c),False,,NULL
34,SynthSplitPaneUI,29,void installFocus(JComponent c),False,,NULL
34,SynthSplitPaneUI,30,void uninstallFocus(JComponent c),False,,NULL
34,SynthSplitPaneUI,31,void installDimension(JComponent c),False,,NULL
34,SynthSplitPaneUI,32,void uninstallDimension(JComponent c),False,,NULL
34,SynthSplitPaneUI,33,void installIcon(JComponent c),False,,NULL
34,SynthSplitPaneUI,34,void uninstallIcon(JComponent c),False,,NULL
34,SynthSplitPaneUI,35,void installKeys(JComponent c),False,,NULL
34,SynthSplitPaneUI,36,void uninstallKeys(JComponent c),False,,NULL
34,SynthSplitPaneUI,37,void installMouse(JComponent c),False,,NULL
34,SynthSplitPaneUI,38,void uninstallMouse(JComponent c),False,,NULL
34,SynthSplitPaneUI,39,void installProperties(JComponent c),False,,NULL
34,SynthSplitPaneUI,40,void uninstallProperties(JComponent c),False,,NULL
35,SynthStyle,1,void setBackground(Color color),False,,NULL
35,SynthStyle,2,void setForeground(Color color),False,,NULL
35,SynthStyle,3,void setFont(Font font),False,,NULL
35,SynthStyle,4,void setInsets(Insets insets),False,,NULL
35,SynthStyle,5,void setBorder(Border border),False,,NULL
35,SynthStyle,6,void setPadding(Insets padding),False,,NULL
35,SynthStyle,7,void setMargin(Insets margin),False,,NULL
35,SynthStyle,8,void setSpacing(int spacing),False,,NULL
35,SynthStyle,9,void setAlignment(int alignment),False,,NULL
35,SynthStyle,10,void setOrientation(int orientation),False,,NULL
35,SynthStyle,11,void setLayout(LayoutManager layout),False,,NULL
35,SynthStyle,12,void setPreferredSize(Dimension preferredSize),False,,NULL
35,SynthStyle,13,void setMinimumSize(Dimension minimumSize),False,,NULL
35,SynthStyle,14,void setMaximumSize(Dimension maximumSize),False,,NULL
35,SynthStyle,15,void setSize(Dimension size),False,,NULL
35,SynthStyle,16,void setLocation(Point location),False,,NULL
35,SynthStyle,17,void setVisible(boolean visible),False,,NULL
35,SynthStyle,18,void setEnabled(boolean enabled),False,,NULL
35,SynthStyle,19,void setFocusable(boolean focusable),False,,NULL
35,SynthStyle,20,void setFocusTraversalKeysEnabled(boolean focusTraversalKeysEnabled),False,,NULL
35,SynthStyle,21,void setAlwaysOnTop(boolean alwaysOnTop),False,,NULL
35,SynthStyle,22,void setOpacity(float opacity),False,,NULL
35,SynthStyle,23,void setToolTipText(String toolTipText),False,,NULL
35,SynthStyle,24,void setCursor(Cursor cursor),False,,NULL
35,SynthStyle,25,void setComponent(Component component),False,,NULL
35,SynthStyle,26,void setComponentOrientation(ComponentOrientation componentOrientation),False,,NULL
35,SynthStyle,27,void setBorderPainted(boolean borderPainted),False,,NULL
35,SynthStyle,28,void setContentAreaFilled(boolean contentAreaFilled),False,,NULL
35,SynthStyle,29,void setRolloverEnabled(boolean rolloverEnabled),False,,NULL
35,SynthStyle,30,void setRolloverIcon(Icon rolloverIcon),False,,NULL
35,SynthStyle,31,void setRolloverSelectedIcon(Icon rolloverSelectedIcon),False,,NULL
35,SynthStyle,32,void setRolloverShadow(boolean rolloverShadow),False,,NULL
35,SynthStyle,33,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,34,void setSelected(boolean selected),False,,NULL
35,SynthStyle,35,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,36,void setSelected(boolean selected),False,,NULL
35,SynthStyle,37,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,38,void setSelected(boolean selected),False,,NULL
35,SynthStyle,39,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,40,void setSelected(boolean selected),False,,NULL
35,SynthStyle,41,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,42,void setSelected(boolean selected),False,,NULL
35,SynthStyle,43,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,44,void setSelected(boolean selected),False,,NULL
35,SynthStyle,45,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,46,void setSelected(boolean selected),False,,NULL
35,SynthStyle,47,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,48,void setSelected(boolean selected),False,,NULL
35,SynthStyle,49,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,50,void setSelected(boolean selected),False,,NULL
35,SynthStyle,51,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,52,void setSelected(boolean selected),False,,NULL
35,SynthStyle,53,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,54,void setSelected(boolean selected),False,,NULL
35,SynthStyle,55,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,56,void setSelected(boolean selected),False,,NULL
35,SynthStyle,57,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,58,void setSelected(boolean selected),False,,NULL
35,SynthStyle,59,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,60,void setSelected(boolean selected),False,,NULL
35,SynthStyle,61,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,62,void setSelected(boolean selected),False,,NULL
35,SynthStyle,63,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,64,void setSelected(boolean selected),False,,NULL
35,SynthStyle,65,void setSelectedIcon(Icon selectedIcon),False,,NULL
35,SynthStyle,66,void setSelected(boolean selected),False,,NULL
36,SynthStyleFactory,1,SynthStyleFactory.getStyle(String name),False,,NULL
36,SynthStyleFactory,2,SynthStyleFactory.getStyleNames(),False,,NULL
36,SynthStyleFactory,3,"SynthStyleFactory.getStyle(String name, String parent)",False,,NULL
36,SynthStyleFactory,4,"SynthStyleFactory.getStyle(String name, SynthStyle parent)",False,,NULL
36,SynthStyleFactory,5,"SynthStyleFactory.getStyle(String name, SynthStyle parent, boolean isDefault)",False,,NULL
37,SynthTabbedPaneUI,1,void installDefaults(JComponent c),False,,NULL
37,SynthTabbedPaneUI,2,void uninstallDefaults(JComponent c),False,,NULL
37,SynthTabbedPaneUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTabbedPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
37,SynthTabbedPaneUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
37,SynthTabbedPaneUI,5,void installUI(JComponent c),False,,NULL
37,SynthTabbedPaneUI,6,void uninstallUI(JComponent c),False,,NULL
37,SynthTabbedPaneUI,7,"void paintTabArea(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int width, int height, boolean isSelected, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,8,"void paintContent(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int width, int height, boolean isSelected, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,9,"void paintFocusIndicator(Graphics g, int tabPlacement, Rectangle[] rects, int tabIndex, Rectangle iconRect, Rectangle textRect, boolean isSelected, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,10,"void paintTabBackground(Graphics g, int tabPlacement, int tabIndex, int x, int y, int width, int height, boolean isSelected)",False,,NULL
37,SynthTabbedPaneUI,11,"void paintTabBorder(Graphics g, int tabPlacement, int tabIndex, int x, int y, int width, int height, boolean isSelected, boolean isMouseOver, boolean isSelectedMouseOver, boolean isPressed, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,12,"void paintTabAreaBorder(Graphics g, int tabPlacement, int x, int y, int width, int height)",False,,NULL
37,SynthTabbedPaneUI,13,"void paintTabAreaBackground(Graphics g, int tabPlacement, int x, int y, int width, int height)",False,,NULL
37,SynthTabbedPaneUI,14,"void paintFocusIndicator(Graphics g, int tabPlacement, Rectangle[] rects, int tabIndex, Rectangle iconRect, Rectangle textRect, boolean isSelected, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,15,"void paintTabBorder(Graphics g, int tabPlacement, int tabIndex, int x, int y, int width, int height, boolean isSelected, boolean isMouseOver, boolean isSelectedMouseOver, boolean isPressed, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,16,"void paintTabBackground(Graphics g, int tabPlacement, int tabIndex, int x, int y, int width, int height, boolean isSelected)",False,,NULL
37,SynthTabbedPaneUI,17,"void paintContent(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int width, int height, boolean isSelected, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,18,"void paintTabArea(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int width, int height, boolean isSelected, boolean hasFocus)",False,,NULL
37,SynthTabbedPaneUI,19,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTabbedPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
37,SynthTabbedPaneUI,20,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
38,SynthTableHeaderUI,1,void installUI(JComponent c),False,,NULL
38,SynthTableHeaderUI,2,void uninstallUI(JComponent c),False,,NULL
38,SynthTableHeaderUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTableHeaderUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
38,SynthTableHeaderUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
38,SynthTableHeaderUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
39,SynthTableUI,1,void installUI(JComponent c),False,,NULL
39,SynthTableUI,2,void uninstallUI(JComponent c),False,,NULL
39,SynthTableUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTableUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
39,SynthTableUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
39,SynthTableUI,5,void installDefaults(JComponent c),False,,NULL
40,SynthTextAreaUI,1,void installDefaults(JComponent c),False,,NULL
40,SynthTextAreaUI,2,void uninstallDefaults(JComponent c),False,,NULL
40,SynthTextAreaUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
40,SynthTextAreaUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicTextUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
40,SynthTextAreaUI,5,void installUI(JComponent c),False,,NULL
40,SynthTextAreaUI,6,void uninstallUI(JComponent c),False,,NULL
40,SynthTextAreaUI,7,void installFocus(JComponent c),False,,NULL
40,SynthTextAreaUI,8,void uninstallFocus(JComponent c),False,,NULL
40,SynthTextAreaUI,9,void installKeyboardActions(JComponent c),False,,NULL
40,SynthTextAreaUI,10,void uninstallKeyboardActions(JComponent c),False,,NULL
40,SynthTextAreaUI,11,void installMouseActions(JComponent c),False,,NULL
40,SynthTextAreaUI,12,void uninstallMouseActions(JComponent c),False,,NULL
40,SynthTextAreaUI,13,void installRootPane(JRootPane rp),False,,NULL
40,SynthTextAreaUI,14,void uninstallRootPane(JRootPane rp),False,,NULL
40,SynthTextAreaUI,15,void installDefaults(JComponent c),False,,NULL
40,SynthTextAreaUI,16,void uninstallDefaults(JComponent c),False,,NULL
40,SynthTextAreaUI,17,"void paint(Graphics g, JComponent c)",False,,NULL
40,SynthTextAreaUI,18,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicTextUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
40,SynthTextAreaUI,19,void installUI(JComponent c),False,,NULL
40,SynthTextAreaUI,20,void uninstallUI(JComponent c),False,,NULL
40,SynthTextAreaUI,21,void installFocus(JComponent c),False,,NULL
40,SynthTextAreaUI,22,void uninstallFocus(JComponent c),False,,NULL
40,SynthTextAreaUI,23,void installKeyboardActions(JComponent c),False,,NULL
40,SynthTextAreaUI,24,void uninstallKeyboardActions(JComponent c),False,,NULL
40,SynthTextAreaUI,25,void installMouseActions(JComponent c),False,,NULL
40,SynthTextAreaUI,26,void uninstallMouseActions(JComponent c),False,,NULL
40,SynthTextAreaUI,27,void installRootPane(JRootPane rp),False,,NULL
40,SynthTextAreaUI,28,void uninstallRootPane(JRootPane rp),False,,NULL
41,SynthTextFieldUI,1,void installUI(JComponent c),False,,NULL
41,SynthTextFieldUI,2,void uninstallUI(JComponent c),False,,NULL
41,SynthTextFieldUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
41,SynthTextFieldUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class BasicTextUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
41,SynthTextFieldUI,5,void installDefaults(JComponent c),False,,NULL
42,SynthTextPaneUI,1,void setText(String text),False,,NULL
42,SynthTextPaneUI,2,void setForeground(Color color),False,,NULL
42,SynthTextPaneUI,3,void setBackground(Color color),False,,NULL
42,SynthTextPaneUI,4,void setFont(Font font),False,,NULL
42,SynthTextPaneUI,5,void setCaretColor(Color color),False,,NULL
43,SynthToggleButtonUI,1,"void paint(Graphics g, JComponent c)",False,,NULL
43,SynthToggleButtonUI,2,void installDefaults(AbstractButton b),False,,NULL
43,SynthToggleButtonUI,3,void uninstallDefaults(AbstractButton b),False,,NULL
43,SynthToggleButtonUI,4,"void paintFocus(Graphics g, Rectangle r)",False,,NULL
43,SynthToggleButtonUI,5,"void paintArm(Graphics g, Rectangle r)",False,,NULL
44,SynthToolBarUI,1,void installDefaults(JComponent c),False,,NULL
44,SynthToolBarUI,2,void uninstallDefaults(JComponent c),False,,NULL
44,SynthToolBarUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
44,SynthToolBarUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
44,SynthToolBarUI,5,void installUI(JComponent c),False,,NULL
45,SynthToolTipUI,1,void installUI(JComponent c),False,,NULL
45,SynthToolTipUI,2,void uninstallUI(JComponent c),False,,NULL
45,SynthToolTipUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicToolTipUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
45,SynthToolTipUI,4,Dimension getPreferredSize(JComponent c),True,Returns the specified component's preferred size appropriate for the look and feel.,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicToolTipUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
45,SynthToolTipUI,5,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
46,SynthTreeUI,1,void installUI(JComponent c),False,,NULL
46,SynthTreeUI,2,void uninstallUI(JComponent c),False,,NULL
46,SynthTreeUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTreeUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
46,SynthTreeUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
46,SynthTreeUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
47,SynthViewportUI,1,void installUI(JComponent c),True,Configures the specified component appropriately for the look and feel.,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class ComponentUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
47,SynthViewportUI,2,void uninstallUI(JComponent c),True,Reverses configuration which was done on the specified component during installUI.,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class ComponentUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
47,SynthViewportUI,3,"void paint(Graphics g, JComponent c)",True,Paints the specified component according to the Look and Feel.,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
47,SynthViewportUI,4,"void update(Graphics g, JComponent c)",True,Notifies this UI delegate to repaint the specified component.,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
47,SynthViewportUI,5,void installDefaults(JComponent c),True,Installs defaults for a viewport.,"

installDefaults
protected void installDefaults(JComponent c)
Installs defaults for a viewport.

Parameters:
c - a JViewport object


"
