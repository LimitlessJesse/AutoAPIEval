Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,OutputKeys,1,final String CDATA_SECTION_ELEMENTS,False,,NULL
0,OutputKeys,2,final String INDENT,False,,NULL
0,OutputKeys,3,final String MEDIA_TYPE,False,,NULL
0,OutputKeys,4,final String OMIT_XML_DECLARATION,False,,NULL
0,OutputKeys,5,final String STANDALONE,False,,NULL
1,Transformer,1,"setOutputProperty(String name, String value)",False,,NULL
1,Transformer,2,"setParameter(String namespace, String value)",False,,NULL
1,Transformer,3,"transform(Source source, Result result)",False,,NULL
1,Transformer,4,"transform(Source source, StreamResult result)",False,,NULL
1,Transformer,5,"transform(Source source, Writer out)",False,,NULL
2,TransformerFactory,1,TransformerFactory newInstance(),True,Obtain a new instance of a TransformerFactory.,"

newInstance
public static TransformerFactory newInstance()
                                      throws TransformerFactoryConfigurationError
Obtain a new instance of a TransformerFactory.
 This static method creates a new factory instance.
This method uses the following ordered lookup procedure to determine
 the TransformerFactory implementation class to
 load:


 Use the javax.xml.transform.TransformerFactory system
 property.
 

 Use the properties file ""lib/jaxp.properties"" in the JRE directory.
 This configuration file is in standard java.util.Properties
  format and contains the fully qualified name of the
 implementation class with the key being the system property defined
 above.
 
 The jaxp.properties file is read only once by the JAXP implementation
 and it's values are then cached for future use.  If the file does not exist
 when the first attempt is made to read from it, no further attempts are
 made to check for its existence.  It is not possible to change the value
 of any property in jaxp.properties after it has been read for the first time.
 

   Use the service-provider loading facilities, defined by the
   ServiceLoader class, to attempt to locate and load an
   implementation of the service using the default loading mechanism:
   the service-provider loading facility will use the current thread's context class loader
   to attempt to load the service. If the context class
   loader is null, the system class loader will be used.
 

   Otherwise, the system-default implementation is returned.
 

Once an application has obtained a reference to a 
 TransformerFactory it can use the factory to configure
 and obtain transformer instances.

Returns:
new TransformerFactory instance, never null.
Throws:
TransformerFactoryConfigurationError - Thrown in case of service configuration error or if
 the implementation is not available or cannot be instantiated.


"
2,TransformerFactory,2,Transformer newTransformer(),True,Create a new Transformer that performs a copy of the Source to the Result.,"

newTransformer
public abstract Transformer newTransformer()
                                    throws TransformerConfigurationException
Create a new Transformer that performs a copy
 of the Source to the Result.
 i.e. the ""identity transform"".

Returns:
A Transformer object that may be used to perform a transformation
 in a single thread, never null.
Throws:
TransformerConfigurationException - When it is not
   possible to create a Transformer instance.


"
2,TransformerFactory,3,Templates newTemplates(),False,,NULL
2,TransformerFactory,4,Templates newTemplates(Source source),True,"Process the Source into a Templates object, which is a a compiled representation of the source.","

newTemplates
public abstract Templates newTemplates(Source source)
                                throws TransformerConfigurationException
Process the Source into a Templates object, which is a
 a compiled representation of the source. This Templates object
 may then be used concurrently across multiple threads.  Creating
 a Templates object allows the TransformerFactory to do detailed
 performance optimization of transformation instructions, without
 penalizing runtime transformation.

Parameters:
source - An object that holds a URL, input stream, etc.
Returns:
A Templates object capable of being used for transformation
   purposes, never null.
Throws:
TransformerConfigurationException - When parsing to
   construct the Templates object fails.


"
2,TransformerFactory,5,Templates newTemplates(TransformerHandler handler),False,,NULL
