Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,IIOMetadata,1,IIOMetadata.getNativeMetadataFormatName(),False,,NULL
0,IIOMetadata,2,IIOMetadata.getAsTree(String key),False,,NULL
0,IIOMetadata,3,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,4,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,5,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,6,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,7,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,8,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,9,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,10,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,11,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,12,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,13,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,14,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,15,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,16,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,17,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,18,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,19,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,20,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,21,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,22,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,23,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,24,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,25,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,26,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,27,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,28,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,29,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,30,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,31,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,32,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,33,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,34,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,35,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,36,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,37,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,38,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,39,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,40,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,41,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,42,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,43,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,44,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,45,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,46,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,47,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,48,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,49,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,50,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,51,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,52,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,53,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,54,IIOMetadata.getAsString(String key),False,,NULL
0,IIOMetadata,55,IIOMetadata.getAsLong(String key),False,,NULL
0,IIOMetadata,56,IIOMetadata.getAsRational(String key),False,,NULL
0,IIOMetadata,57,IIOMetadata.getAsIntArray(String key),False,,NULL
0,IIOMetadata,58,IIOMetadata.getAsDirectory(String key),False,,NULL
0,IIOMetadata,59,IIOMetadata.getAsString(String key),False,,NULL
1,IIOMetadataFormatImpl,1,"boolean canNodeAppear(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,2,"boolean canNodeBeValue(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,3,"boolean canNodeContainText(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,4,"boolean canNodeHaveAttribute(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,5,"boolean canNodeHaveChildren(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,6,"boolean canNodeHaveValue(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,7,"boolean canNodeHaveText(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,8,"boolean canNodeHaveType(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,9,"boolean canNodeHaveName(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,10,"boolean canNodeHaveNamespace(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,11,"boolean canNodeHaveParent(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,12,"boolean canNodeHaveSiblings(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,13,"boolean canNodeHaveChildren(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,14,"boolean canNodeHaveSiblings(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,15,"boolean canNodeHaveParent(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,16,"boolean canNodeHaveType(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,17,"boolean canNodeHaveName(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,18,"boolean canNodeHaveNamespace(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,19,"boolean canNodeHaveValue(String elementName, String attributeName)",False,,NULL
1,IIOMetadataFormatImpl,20,"boolean canNodeHaveText(String elementName, String attributeName)",False,,NULL
2,IIOMetadataNode,1,IIOMetadataNode(String name),False,,NULL
2,IIOMetadataNode,2,String getName(),False,,NULL
2,IIOMetadataNode,3,String getValue(),False,,NULL
2,IIOMetadataNode,4,void setValue(String value),False,,NULL
2,IIOMetadataNode,5,void setUserObject(Object userObject),True,Sets the value associated with this node.,"

setUserObject
public void setUserObject(Object userObject)
Sets the value associated with this node.

Parameters:
userObject - the user Object.
See Also:
getUserObject()


"
2,IIOMetadataNode,6,Object getUserObject(),True,Returns the Object value associated with this node.,"

getUserObject
public Object getUserObject()
Returns the Object value associated with this node.

Returns:
the user Object.
See Also:
setUserObject(java.lang.Object)


"
2,IIOMetadataNode,7,"void setAttribute(String name, String value)",True,Adds a new attribute.,"

setAttribute
public void setAttribute(String name,
                         String value)
Description copied from interface: Element
Adds a new attribute. If an attribute with that name is already present
 in the element, its value is changed to be that of the value
 parameter. This value is a simple string; it is not parsed as it is
 being set. So any markup (such as syntax to be recognized as an
 entity reference) is treated as literal text, and needs to be
 appropriately escaped by the implementation when it is written out.
 In order to assign an attribute value that contains entity
 references, the user must create an Attr node plus any
 Text and EntityReference nodes, build the
 appropriate subtree, and use setAttributeNode to assign
 it as the value of an attribute.
 To set an attribute with a qualified name and namespace URI, use
 the setAttributeNS method.

Specified by:
setAttribute in interface Element
Parameters:
name - The name of the attribute to create or alter.
value - Value to set in string form.


"
2,IIOMetadataNode,8,String getAttribute(String name),True,Retrieves an attribute value by name.,"

getAttribute
public String getAttribute(String name)
Retrieves an attribute value by name.

Specified by:
getAttribute in interface Element
Parameters:
name - The name of the attribute to retrieve.
Returns:
The Attr value as a string, or the empty string
 if that attribute does not have a specified or default value.


"
2,IIOMetadataNode,9,"void setAttributeNS(String namespaceURI, String qualifiedName, String value)",True,"Equivalent to setAttribute(qualifiedName, value).","

setAttributeNS
public void setAttributeNS(String namespaceURI,
                           String qualifiedName,
                           String value)
Equivalent to setAttribute(qualifiedName, value).

Specified by:
setAttributeNS in interface Element
Parameters:
namespaceURI - The namespace URI of the attribute to create or
   alter.
qualifiedName - The qualified name of the attribute to create or
   alter.
value - The value to set in string form.
See Also:
getAttributeNS(java.lang.String, java.lang.String)


"
2,IIOMetadataNode,10,"String getAttributeNS(String namespaceURI, String localName)",True,Equivalent to getAttribute(localName).,"

getAttributeNS
public String getAttributeNS(String namespaceURI,
                             String localName)
Equivalent to getAttribute(localName).

Specified by:
getAttributeNS in interface Element
Parameters:
namespaceURI - The namespace URI of the attribute to retrieve.
localName - The local name of the attribute to retrieve.
Returns:
The Attr value as a string, or the empty string
   if that attribute does not have a specified or default value.
See Also:
setAttributeNS(java.lang.String, java.lang.String, java.lang.String)


"
2,IIOMetadataNode,11,void setTextContent(String textContent),True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

setTextContent
public void setTextContent(String textContent)
                    throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
setTextContent in interface Node
Throws:
DOMException - - always.


"
2,IIOMetadataNode,12,String getTextContent(),True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getTextContent
public String getTextContent()
                      throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getTextContent in interface Node
Throws:
DOMException - - always.


"
2,IIOMetadataNode,13,void setNodeValue(String nodeValue),True,Sets the String value associated with this node.,"

setNodeValue
public void setNodeValue(String nodeValue)
Sets the String value associated with this node.

Specified by:
setNodeValue in interface Node


"
2,IIOMetadataNode,14,String getNodeValue(),True,Returns the value associated with this node.,"

getNodeValue
public String getNodeValue()
Returns the value associated with this node.

Specified by:
getNodeValue in interface Node
Returns:
the node value, as a String.


"
2,IIOMetadataNode,15,void setNodeType(short nodeType),False,,NULL
2,IIOMetadataNode,16,short getNodeType(),True,"Returns the node type, which is always ELEMENT_NODE.","

getNodeType
public short getNodeType()
Returns the node type, which is always
 ELEMENT_NODE.

Specified by:
getNodeType in interface Node
Returns:
the short value ELEMENT_NODE.


"
2,IIOMetadataNode,17,void setParentNode(Node parentNode),False,,NULL
2,IIOMetadataNode,18,Node getParentNode(),True,Returns the parent of this node.,"

getParentNode
public Node getParentNode()
Returns the parent of this node.  A null value
 indicates that the node is the root of its own tree.  To add a
 node to an existing tree, use one of the
 insertBefore, replaceChild, or
 appendChild methods.

Specified by:
getParentNode in interface Node
Returns:
the parent, as a Node.
See Also:
insertBefore(org.w3c.dom.Node, org.w3c.dom.Node), 
replaceChild(org.w3c.dom.Node, org.w3c.dom.Node), 
appendChild(org.w3c.dom.Node)


"
2,IIOMetadataNode,19,NodeList getChildNodes(),True,Returns a NodeList that contains all children of this node.,"

getChildNodes
public NodeList getChildNodes()
Returns a NodeList that contains all children of this node.
 If there are no children, this is a NodeList containing
 no nodes.

Specified by:
getChildNodes in interface Node
Returns:
the children as a NodeList


"
2,IIOMetadataNode,20,Node getFirstChild(),True,"Returns the first child of this node, or null if the node has no children.","

getFirstChild
public Node getFirstChild()
Returns the first child of this node, or null if
 the node has no children.

Specified by:
getFirstChild in interface Node
Returns:
the first child, as a Node, or
 null


"
2,IIOMetadataNode,21,Node getLastChild(),True,"Returns the last child of this node, or null if the node has no children.","

getLastChild
public Node getLastChild()
Returns the last child of this node, or null if
 the node has no children.

Specified by:
getLastChild in interface Node
Returns:
the last child, as a Node, or
 null.


"
2,IIOMetadataNode,22,Node getPreviousSibling(),True,"Returns the previous sibling of this node, or null if this node has no previous sibling.","

getPreviousSibling
public Node getPreviousSibling()
Returns the previous sibling of this node, or null
 if this node has no previous sibling.

Specified by:
getPreviousSibling in interface Node
Returns:
the previous sibling, as a Node, or
 null.


"
2,IIOMetadataNode,23,Node getNextSibling(),True,"Returns the next sibling of this node, or null if the node has no next sibling.","

getNextSibling
public Node getNextSibling()
Returns the next sibling of this node, or null if
 the node has no next sibling.

Specified by:
getNextSibling in interface Node
Returns:
the next sibling, as a Node, or
 null.


"
2,IIOMetadataNode,24,"Node insertBefore(Node newChild, Node refChild)",True,Inserts the node newChild before the existing child node refChild.,"

insertBefore
public Node insertBefore(Node newChild,
                         Node refChild)
Inserts the node newChild before the existing
 child node refChild. If refChild is
 null, insert newChild at the end of
 the list of children.

Specified by:
insertBefore in interface Node
Parameters:
newChild - the Node to insert.
refChild - the reference Node.
Returns:
the node being inserted.
Throws:
IllegalArgumentException - if newChild is
 null.


"
2,IIOMetadataNode,25,"Node insertAfter(Node newChild, Node refChild)",False,,NULL
2,IIOMetadataNode,26,"Node replaceChild(Node newChild, Node oldChild)",True,"Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node.","

replaceChild
public Node replaceChild(Node newChild,
                         Node oldChild)
Replaces the child node oldChild with
 newChild in the list of children, and returns the
 oldChild node.

Specified by:
replaceChild in interface Node
Parameters:
newChild - the Node to insert.
oldChild - the Node to be replaced.
Returns:
the node replaced.
Throws:
IllegalArgumentException - if newChild is
 null.


"
2,IIOMetadataNode,27,Node removeChild(Node oldChild),True,"Removes the child node indicated by oldChild from the list of children, and returns it.","

removeChild
public Node removeChild(Node oldChild)
Removes the child node indicated by oldChild from
 the list of children, and returns it.

Specified by:
removeChild in interface Node
Parameters:
oldChild - the Node to be removed.
Returns:
the node removed.
Throws:
IllegalArgumentException - if oldChild is
 null.


"
2,IIOMetadataNode,28,Node cloneNode(boolean deep),True,Returns a duplicate of this node.,"

cloneNode
public Node cloneNode(boolean deep)
Returns a duplicate of this node.  The duplicate node has no
 parent (getParentNode returns null).
 If a shallow clone is being performed (deep is
 false), the new node will not have any children or
 siblings.  If a deep clone is being performed, the new node
 will form the root of a complete cloned subtree.

Specified by:
cloneNode in interface Node
Parameters:
deep - if true, recursively clone the subtree
 under the specified node; if false, clone only the
 node itself.
Returns:
the duplicate node.


"
2,IIOMetadataNode,29,boolean hasAttributes(),True,Returns whether this node (if it is an element) has any attributes.,"

hasAttributes
public boolean hasAttributes()
Description copied from interface: Node
Returns whether this node (if it is an element) has any attributes.

Specified by:
hasAttributes in interface Node
Returns:
Returns true if this node has any attributes,
   false otherwise.


"
2,IIOMetadataNode,30,NamedNodeMap getAttributes(),True,Returns a NamedNodeMap containing the attributes of this node.,"

getAttributes
public NamedNodeMap getAttributes()
Returns a NamedNodeMap containing the attributes of
 this node.

Specified by:
getAttributes in interface Node
Returns:
a NamedNodeMap containing the attributes of
 this node.


"
2,IIOMetadataNode,31,Node getOwnerDocument(),False,,NULL
2,IIOMetadataNode,32,String getNamespaceURI(),True,"Returns null, since namespaces are not supported.","

getNamespaceURI
public String getNamespaceURI()
                       throws DOMException
Returns null, since namespaces are not supported.

Specified by:
getNamespaceURI in interface Node
Throws:
DOMException


"
2,IIOMetadataNode,33,String getPrefix(),True,"Returns null, since namespaces are not supported.","

getPrefix
public String getPrefix()
Returns null, since namespaces are not supported.

Specified by:
getPrefix in interface Node
Returns:
null.
See Also:
setPrefix(java.lang.String)


"
2,IIOMetadataNode,34,String getLocalName(),True,Equivalent to getNodeName.,"

getLocalName
public String getLocalName()
Equivalent to getNodeName.

Specified by:
getLocalName in interface Node
Returns:
the node name, as a String.


"
2,IIOMetadataNode,35,String getBaseURI(),True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getBaseURI
public String getBaseURI()
                  throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getBaseURI in interface Node
Throws:
DOMException - - always.


"
2,IIOMetadataNode,36,"boolean isSupported(String feature, String version)",True,Returns false since DOM features are not supported.,"

isSupported
public boolean isSupported(String feature,
                           String version)
Returns false since DOM features are not
 supported.

Specified by:
isSupported in interface Node
Parameters:
feature - a String, which is ignored.
version - a String, which is ignored.
Returns:
false.


"
2,IIOMetadataNode,37,"Object getFeature(String feature, String version)",True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getFeature
public Object getFeature(String feature,
                         String version)
                  throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getFeature in interface Node
Parameters:
feature - The name of the feature requested. Note that any plus
   sign ""+"" prepended to the name of the feature will be ignored since
   it is not significant in the context of this method.
version - This is the version number of the feature to test.
Returns:
Returns an object which implements the specialized APIs of
   the specified feature and version, if any, or null if
   there is no object which implements interfaces associated with that
   feature. If the DOMObject returned by this method
   implements the Node interface, it must delegate to the
   primary core Node and not return results inconsistent
   with the primary core Node such as attributes,
   childNodes, etc.
Throws:
DOMException - - always.


"
2,IIOMetadataNode,38,"Object setUserData(String key, Object data, UserDataHandler handler)",True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

setUserData
public Object setUserData(String key,
                          Object data,
                          UserDataHandler handler)
                   throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
setUserData in interface Node
Parameters:
key - The key to associate the object to.
data - The object to associate to the given key, or
   null to remove any existing association to that key.
handler - The handler to associate to that key, or
   null.
Returns:
Returns the DOMUserData previously associated to
   the given key on this node, or null if there was none.
Throws:
DOMException - - always.


"
2,IIOMetadataNode,39,Object getUserData(String key),True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getUserData
public Object getUserData(String key)
                   throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getUserData in interface Node
Parameters:
key - The key the object is associated to.
Returns:
Returns the DOMUserData associated to the given
   key on this node, or null if there was none.
Throws:
DOMException - - always.


"
2,IIOMetadataNode,40,void setNodeName(String name),False,,NULL
2,IIOMetadataNode,41,String getNodeName(),True,Returns the node name associated with this node.,"

getNodeName
public String getNodeName()
Returns the node name associated with this node.

Specified by:
getNodeName in interface Node
Returns:
the node name, as a String.


"
2,IIOMetadataNode,42,void setNodeType(short type),False,,NULL
2,IIOMetadataNode,43,short getNodeType(),True,"Returns the node type, which is always ELEMENT_NODE.","

getNodeType
public short getNodeType()
Returns the node type, which is always
 ELEMENT_NODE.

Specified by:
getNodeType in interface Node
Returns:
the short value ELEMENT_NODE.


"
2,IIOMetadataNode,44,void setNodeValue(String value),True,Sets the String value associated with this node.,"

setNodeValue
public void setNodeValue(String nodeValue)
Sets the String value associated with this node.

Specified by:
setNodeValue in interface Node


"
2,IIOMetadataNode,45,String getNodeValue(),True,Returns the value associated with this node.,"

getNodeValue
public String getNodeValue()
Returns the value associated with this node.

Specified by:
getNodeValue in interface Node
Returns:
the node value, as a String.


"
2,IIOMetadataNode,46,void setParentNode(Node parent),False,,NULL
2,IIOMetadataNode,47,Node getParentNode(),True,Returns the parent of this node.,"

getParentNode
public Node getParentNode()
Returns the parent of this node.  A null value
 indicates that the node is the root of its own tree.  To add a
 node to an existing tree, use one of the
 insertBefore, replaceChild, or
 appendChild methods.

Specified by:
getParentNode in interface Node
Returns:
the parent, as a Node.
See Also:
insertBefore(org.w3c.dom.Node, org.w3c.dom.Node), 
replaceChild(org.w3c.dom.Node, org.w3c.dom.Node), 
appendChild(org.w3c.dom.Node)


"
2,IIOMetadataNode,48,NodeList getChildNodes(),True,Returns a NodeList that contains all children of this node.,"

getChildNodes
public NodeList getChildNodes()
Returns a NodeList that contains all children of this node.
 If there are no children, this is a NodeList containing
 no nodes.

Specified by:
getChildNodes in interface Node
Returns:
the children as a NodeList


"
2,IIOMetadataNode,49,Node getFirstChild(),True,"Returns the first child of this node, or null if the node has no children.","

getFirstChild
public Node getFirstChild()
Returns the first child of this node, or null if
 the node has no children.

Specified by:
getFirstChild in interface Node
Returns:
the first child, as a Node, or
 null


"
2,IIOMetadataNode,50,Node getLastChild(),True,"Returns the last child of this node, or null if the node has no children.","

getLastChild
public Node getLastChild()
Returns the last child of this node, or null if
 the node has no children.

Specified by:
getLastChild in interface Node
Returns:
the last child, as a Node, or
 null.


"
2,IIOMetadataNode,51,Node getPreviousSibling(),True,"Returns the previous sibling of this node, or null if this node has no previous sibling.","

getPreviousSibling
public Node getPreviousSibling()
Returns the previous sibling of this node, or null
 if this node has no previous sibling.

Specified by:
getPreviousSibling in interface Node
Returns:
the previous sibling, as a Node, or
 null.


"
2,IIOMetadataNode,52,Node getNextSibling(),True,"Returns the next sibling of this node, or null if the node has no next sibling.","

getNextSibling
public Node getNextSibling()
Returns the next sibling of this node, or null if
 the node has no next sibling.

Specified by:
getNextSibling in interface Node
Returns:
the next sibling, as a Node, or
 null.


"
2,IIOMetadataNode,53,"Node insertBefore(Node newChild, Node refChild)",True,Inserts the node newChild before the existing child node refChild.,"

insertBefore
public Node insertBefore(Node newChild,
                         Node refChild)
Inserts the node newChild before the existing
 child node refChild. If refChild is
 null, insert newChild at the end of
 the list of children.

Specified by:
insertBefore in interface Node
Parameters:
newChild - the Node to insert.
refChild - the reference Node.
Returns:
the node being inserted.
Throws:
IllegalArgumentException - if newChild is
 null.


"
2,IIOMetadataNode,54,"Node insertAfter(Node newChild, Node refChild)",False,,NULL
2,IIOMetadataNode,55,"Node replaceChild(Node newChild, Node oldChild)",True,"Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node.","

replaceChild
public Node replaceChild(Node newChild,
                         Node oldChild)
Replaces the child node oldChild with
 newChild in the list of children, and returns the
 oldChild node.

Specified by:
replaceChild in interface Node
Parameters:
newChild - the Node to insert.
oldChild - the Node to be replaced.
Returns:
the node replaced.
Throws:
IllegalArgumentException - if newChild is
 null.


"
2,IIOMetadataNode,56,Node removeChild(Node oldChild),True,"Removes the child node indicated by oldChild from the list of children, and returns it.","

removeChild
public Node removeChild(Node oldChild)
Removes the child node indicated by oldChild from
 the list of children, and returns it.

Specified by:
removeChild in interface Node
Parameters:
oldChild - the Node to be removed.
Returns:
the node removed.
Throws:
IllegalArgumentException - if oldChild is
 null.


"
2,IIOMetadataNode,57,Node cloneNode(boolean deep),True,Returns a duplicate of this node.,"

cloneNode
public Node cloneNode(boolean deep)
Returns a duplicate of this node.  The duplicate node has no
 parent (getParentNode returns null).
 If a shallow clone is being performed (deep is
 false), the new node will not have any children or
 siblings.  If a deep clone is being performed, the new node
 will form the root of a complete cloned subtree.

Specified by:
cloneNode in interface Node
Parameters:
deep - if true, recursively clone the subtree
 under the specified node; if false, clone only the
 node itself.
Returns:
the duplicate node.


"
2,IIOMetadataNode,58,boolean hasAttributes(),True,Returns whether this node (if it is an element) has any attributes.,"

hasAttributes
public boolean hasAttributes()
Description copied from interface: Node
Returns whether this node (if it is an element) has any attributes.

Specified by:
hasAttributes in interface Node
Returns:
Returns true if this node has any attributes,
   false otherwise.


"
2,IIOMetadataNode,59,NamedNodeMap getAttributes(),True,Returns a NamedNodeMap containing the attributes of this node.,"

getAttributes
public NamedNodeMap getAttributes()
Returns a NamedNodeMap containing the attributes of
 this node.

Specified by:
getAttributes in interface Node
Returns:
a NamedNodeMap containing the attributes of
 this node.


"
2,IIOMetadataNode,60,Node getOwnerDocument(),False,,NULL
2,IIOMetadataNode,61,String getNamespaceURI(),True,"Returns null, since namespaces are not supported.","

getNamespaceURI
public String getNamespaceURI()
                       throws DOMException
Returns null, since namespaces are not supported.

Specified by:
getNamespaceURI in interface Node
Throws:
DOMException


"
2,IIOMetadataNode,62,String getPrefix(),True,"Returns null, since namespaces are not supported.","

getPrefix
public String getPrefix()
Returns null, since namespaces are not supported.

Specified by:
getPrefix in interface Node
Returns:
null.
See Also:
setPrefix(java.lang.String)


"
2,IIOMetadataNode,63,String getLocalName(),True,Equivalent to getNodeName.,"

getLocalName
public String getLocalName()
Equivalent to getNodeName.

Specified by:
getLocalName in interface Node
Returns:
the node name, as a String.


"
2,IIOMetadataNode,64,String getBaseURI(),True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getBaseURI
public String getBaseURI()
                  throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getBaseURI in interface Node
Throws:
DOMException - - always.


"
2,IIOMetadataNode,65,"boolean isSupported(String feature, String version)",True,Returns false since DOM features are not supported.,"

isSupported
public boolean isSupported(String feature,
                           String version)
Returns false since DOM features are not
 supported.

Specified by:
isSupported in interface Node
Parameters:
feature - a String, which is ignored.
version - a String, which is ignored.
Returns:
false.


"
2,IIOMetadataNode,66,"Object getFeature(String feature, String version)",True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getFeature
public Object getFeature(String feature,
                         String version)
                  throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getFeature in interface Node
Parameters:
feature - The name of the feature requested. Note that any plus
   sign ""+"" prepended to the name of the feature will be ignored since
   it is not significant in the context of this method.
version - This is the version number of the feature to test.
Returns:
Returns an object which implements the specialized APIs of
   the specified feature and version, if any, or null if
   there is no object which implements interfaces associated with that
   feature. If the DOMObject returned by this method
   implements the Node interface, it must delegate to the
   primary core Node and not return results inconsistent
   with the primary core Node such as attributes,
   childNodes, etc.
Throws:
DOMException - - always.


"
2,IIOMetadataNode,67,"Object setUserData(String key, Object data, UserDataHandler handler)",True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

setUserData
public Object setUserData(String key,
                          Object data,
                          UserDataHandler handler)
                   throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
setUserData in interface Node
Parameters:
key - The key to associate the object to.
data - The object to associate to the given key, or
   null to remove any existing association to that key.
handler - The handler to associate to that key, or
   null.
Returns:
Returns the DOMUserData previously associated to
   the given key on this node, or null if there was none.
Throws:
DOMException - - always.


"
2,IIOMetadataNode,68,Object getUserData(String key),True,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,"

getUserData
public Object getUserData(String key)
                   throws DOMException
This DOM Level 3 method is not supported for IIOMetadataNode
 and will throw a DOMException.

Specified by:
getUserData in interface Node
Parameters:
key - The key the object is associated to.
Returns:
Returns the DOMUserData associated to the given
   key on this node, or null if there was none.
Throws:
DOMException - - always.


"
2,IIOMetadataNode,69,void setNodeName(String name),False,,NULL
2,IIOMetadataNode,70,String getNodeName(),True,Returns the node name associated with this node.,"

getNodeName
public String getNodeName()
Returns the node name associated with this node.

Specified by:
getNodeName in interface Node
Returns:
the node name, as a String.


"
2,IIOMetadataNode,71,void setNodeType(short type),False,,NULL
2,IIOMetadataNode,72,short getNodeType(),True,"Returns the node type, which is always ELEMENT_NODE.","

getNodeType
public short getNodeType()
Returns the node type, which is always
 ELEMENT_NODE.

Specified by:
getNodeType in interface Node
Returns:
the short value ELEMENT_NODE.


"
2,IIOMetadataNode,73,void setNodeValue(String value),True,Sets the String value associated with this node.,"

setNodeValue
public void setNodeValue(String nodeValue)
Sets the String value associated with this node.

Specified by:
setNodeValue in interface Node


"
