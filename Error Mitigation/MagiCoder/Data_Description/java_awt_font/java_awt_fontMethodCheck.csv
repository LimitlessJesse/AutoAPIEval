Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,FontRenderContext,1,"FontRenderContext(float scale, boolean isAntiAliased, AffineTransform at, RenderingHints hints)",False,,NULL
0,FontRenderContext,2,AffineTransform getTransform(),True,Gets the transform that is used to scale typographical points to pixels in this FontRenderContext.,"

getTransform
public AffineTransform getTransform()
Gets the transform that is used to scale typographical points
   to pixels in this FontRenderContext.

Returns:
the AffineTransform of this
    FontRenderContext.
See Also:
AffineTransform


"
0,FontRenderContext,3,RenderingHints getHints(),False,,NULL
0,FontRenderContext,4,boolean isAntiAliased(),True,Returns a boolean which indicates whether or not some form of antialiasing is specified by this FontRenderContext.,"

isAntiAliased
public boolean isAntiAliased()
Returns a boolean which indicates whether or not some form of
 antialiasing is specified by this FontRenderContext.
 Call getAntiAliasingHint()
 for the specific rendering hint value.

Returns:
true, if text is anti-aliased in this
   FontRenderContext; false otherwise.
See Also:
RenderingHints.KEY_TEXT_ANTIALIASING, 
FontRenderContext(AffineTransform,boolean,boolean), 
FontRenderContext(AffineTransform,Object,Object)


"
0,FontRenderContext,5,float getScale(),False,,NULL
1,GlyphJustificationInfo,1,float getAdvance(),False,,NULL
1,GlyphJustificationInfo,2,float getAdvanceX(),False,,NULL
1,GlyphJustificationInfo,3,float getAdvanceY(),False,,NULL
1,GlyphJustificationInfo,4,float getBearingX(),False,,NULL
1,GlyphJustificationInfo,5,float getBearingY(),False,,NULL
1,GlyphJustificationInfo,6,float getScaleX(),False,,NULL
1,GlyphJustificationInfo,7,float getScaleY(),False,,NULL
1,GlyphJustificationInfo,8,float getRotation(),False,,NULL
1,GlyphJustificationInfo,9,float getRotationX(),False,,NULL
1,GlyphJustificationInfo,10,float getRotationY(),False,,NULL
1,GlyphJustificationInfo,11,float getShear(),False,,NULL
1,GlyphJustificationInfo,12,float getShearX(),False,,NULL
1,GlyphJustificationInfo,13,float getShearY(),False,,NULL
1,GlyphJustificationInfo,14,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,15,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,16,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,17,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,18,float getWidth(),False,,NULL
1,GlyphJustificationInfo,19,float getHeight(),False,,NULL
1,GlyphJustificationInfo,20,float getBaseline(),False,,NULL
1,GlyphJustificationInfo,21,float getBaselineOffset(),False,,NULL
1,GlyphJustificationInfo,22,float getBaselineRotation(),False,,NULL
1,GlyphJustificationInfo,23,float getBaselineShear(),False,,NULL
1,GlyphJustificationInfo,24,float getBaselineX(),False,,NULL
1,GlyphJustificationInfo,25,float getBaselineY(),False,,NULL
1,GlyphJustificationInfo,26,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,27,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,28,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,29,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,30,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,31,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,32,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,33,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,34,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,35,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,36,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,37,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,38,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,39,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,40,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,41,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,42,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,43,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,44,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,45,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,46,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,47,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,48,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,49,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,50,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,51,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,52,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,53,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,54,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,55,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,56,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,57,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,58,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,59,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,60,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,61,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,62,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,63,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,64,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,65,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,66,float getStrikeoutOffset(),False,,NULL
1,GlyphJustificationInfo,67,float getUnderlineOffset(),False,,NULL
1,GlyphJustificationInfo,68,float getStrikeoutPosition(),False,,NULL
1,GlyphJustificationInfo,69,float getUnderlinePosition(),False,,NULL
1,GlyphJustificationInfo,70,float getStrikeoutThickness(),False,,NULL
1,GlyphJustificationInfo,71,float getUnderlineThickness(),False,,NULL
1,GlyphJustificationInfo,72,float getStrikeoutOffset(),False,,NULL
2,GlyphMetrics,1,GlyphMetrics getGlyphMetrics(int glyphIndex),False,,NULL
2,GlyphMetrics,2,int getNumGlyphs(),False,,NULL
2,GlyphMetrics,3,"int getNumGlyphs(int start, int limit)",False,,NULL
2,GlyphMetrics,4,"int getNumGlyphs(int start, int limit, int[] glyphs)",False,,NULL
2,GlyphMetrics,5,"int getNumGlyphs(int start, int limit, int[] glyphs, int offset)",False,,NULL
3,GlyphVector,1,int getNumGlyphs(),True,Returns the number of glyphs in this GlyphVector.,"

getNumGlyphs
public abstract int getNumGlyphs()
Returns the number of glyphs in this GlyphVector.

Returns:
number of glyphs in this GlyphVector.


"
3,GlyphVector,2,Glyph getGlyph(int index),False,,NULL
3,GlyphVector,3,Rectangle2D getGlyphBounds(int index),False,,NULL
3,GlyphVector,4,Rectangle2D getBounds(),False,,NULL
3,GlyphVector,5,GlyphIterator getGlyphIterator(),False,,NULL
4,GraphicAttribute,1,boolean add(E e),False,,NULL
4,GraphicAttribute,2,"void add(int index, E element)",False,,NULL
4,GraphicAttribute,3,boolean addAll(Collection<? extends E> c),False,,NULL
4,GraphicAttribute,4,"boolean addAll(int index, Collection<? extends E> c)",False,,NULL
4,GraphicAttribute,5,void clear(),False,,NULL
5,ImageGraphicAttribute,1,"ImageGraphicAttribute(BufferedImage image, float width, float height)",False,,NULL
5,ImageGraphicAttribute,2,BufferedImage getImage(),False,,NULL
5,ImageGraphicAttribute,3,float getWidth(),False,,NULL
5,ImageGraphicAttribute,4,float getHeight(),False,,NULL
5,ImageGraphicAttribute,5,boolean equals(Object obj),True,Compares this ImageGraphicAttribute to the specified Object.,"

equals
public boolean equals(Object rhs)
Compares this ImageGraphicAttribute to the specified
 Object.

Overrides:
equals in class Object
Parameters:
rhs - the Object to compare for equality
Returns:
true if this
 ImageGraphicAttribute equals rhs;
 false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
6,LayoutPath,1,float getOffset(),False,,NULL
6,LayoutPath,2,float getPoint(),False,,NULL
6,LayoutPath,3,float getSegmentStart(),False,,NULL
6,LayoutPath,4,float getSegmentEnd(),False,,NULL
6,LayoutPath,5,float getSegmentLength(),False,,NULL
6,LayoutPath,6,float getSegmentSlope(),False,,NULL
6,LayoutPath,7,float getSegmentPerpendicular(),False,,NULL
6,LayoutPath,8,float getSegmentDirection(),False,,NULL
6,LayoutPath,9,float getSegmentAngle(),False,,NULL
6,LayoutPath,10,float getSegmentDistance(),False,,NULL
6,LayoutPath,11,float getSegmentDistanceFromStart(),False,,NULL
6,LayoutPath,12,float getSegmentDistanceFromEnd(),False,,NULL
6,LayoutPath,13,float getSegmentDistanceFromPoint(),False,,NULL
6,LayoutPath,14,float getSegmentDistanceFromStartOfSegment(),False,,NULL
6,LayoutPath,15,float getSegmentDistanceFromEndOfSegment(),False,,NULL
6,LayoutPath,16,float getSegmentDistanceFromPointToStartOfSegment(),False,,NULL
6,LayoutPath,17,float getSegmentDistanceFromPointToEndOfSegment(),False,,NULL
6,LayoutPath,18,float getSegmentDistanceFromPointToPoint(),False,,NULL
6,LayoutPath,19,"float getSegmentDistanceFromPointToPoint(float x, float y)",False,,NULL
6,LayoutPath,20,float getSegmentDistanceFromPointToPoint(Point2D p),False,,NULL
6,LayoutPath,21,"float getSegmentDistanceFromPointToPoint(float x, float y, float x1, float y1)",False,,NULL
6,LayoutPath,22,"float getSegmentDistanceFromPointToPoint(Point2D p1, Point2D p2)",False,,NULL
6,LayoutPath,23,"float getSegmentDistanceFromPointToPoint(float x, float y, float x1, float y1, float x2, float y2)",False,,NULL
6,LayoutPath,24,"float getSegmentDistanceFromPointToPoint(Point2D p1, Point2D p2, Point2D p3)",False,,NULL
6,LayoutPath,25,"float getSegmentDistanceFromPointToPoint(float x, float y, float x1, float y1, float x2, float y2, float x3, float y3)",False,,NULL
6,LayoutPath,26,"float getSegmentDistanceFromPointToPoint(Point2D p1, Point2D p2, Point2D p3, Point2D p4)",False,,NULL
7,LineBreakMeasurer,1,int getPosition(),True,Returns the current position of this LineBreakMeasurer.,"

getPosition
public int getPosition()
Returns the current position of this LineBreakMeasurer.

Returns:
the current position of this LineBreakMeasurer
See Also:
setPosition(int)


"
7,LineBreakMeasurer,2,int getPosition(TextLayout layout),False,,NULL
7,LineBreakMeasurer,3,TextLayout nextLayout(int width),False,,NULL
7,LineBreakMeasurer,4,"TextLayout nextLayout(int width, boolean hyphenated)",False,,NULL
7,LineBreakMeasurer,5,"TextLayout nextLayout(int width, boolean hyphenated, float hyphenationFactor)",False,,NULL
8,LineMetrics,1,float getAscent(),True,Returns the ascent of the text.,"

getAscent
public abstract float getAscent()
Returns the ascent of the text.  The ascent
 is the distance from the baseline
 to the ascender line.  The ascent usually represents the
 the height of the capital letters of the text.  Some characters
 can extend above the ascender line.

Returns:
the ascent of the text.


"
8,LineMetrics,2,float getDescent(),True,Returns the descent of the text.,"

getDescent
public abstract float getDescent()
Returns the descent of the text.  The descent
 is the distance from the baseline
 to the descender line.  The descent usually represents
 the distance to the bottom of lower case letters like
 'p'.  Some characters can extend below the descender
 line.

Returns:
the descent of the text.


"
8,LineMetrics,3,float getLeading(),True,Returns the leading of the text.,"

getLeading
public abstract float getLeading()
Returns the leading of the text. The
 leading is the recommended
 distance from the bottom of the descender line to the
 top of the next line.

Returns:
the leading of the text.


"
8,LineMetrics,4,float getHeight(),True,Returns the height of the text.,"

getHeight
public abstract float getHeight()
Returns the height of the text.  The
 height is equal to the sum of the ascent, the
 descent and the leading.

Returns:
the height of the text.


"
8,LineMetrics,5,float getStrikethroughOffset(),True,Returns the position of the strike-through line relative to the baseline.,"

getStrikethroughOffset
public abstract float getStrikethroughOffset()
Returns the position of the strike-through line
 relative to the baseline.

Returns:
the position of the strike-through line.


"
8,LineMetrics,6,float getStrikethroughThickness(),True,Returns the thickness of the strike-through line.,"

getStrikethroughThickness
public abstract float getStrikethroughThickness()
Returns the thickness of the strike-through line.

Returns:
the thickness of the strike-through line.


"
8,LineMetrics,7,float getUnderlineOffset(),True,Returns the position of the underline relative to the baseline.,"

getUnderlineOffset
public abstract float getUnderlineOffset()
Returns the position of the underline relative to
 the baseline.

Returns:
the position of the underline.


"
8,LineMetrics,8,float getUnderlineThickness(),True,Returns the thickness of the underline.,"

getUnderlineThickness
public abstract float getUnderlineThickness()
Returns the thickness of the underline.

Returns:
the thickness of the underline.


"
8,LineMetrics,9,float getStrikethroughOffset(),True,Returns the position of the strike-through line relative to the baseline.,"

getStrikethroughOffset
public abstract float getStrikethroughOffset()
Returns the position of the strike-through line
 relative to the baseline.

Returns:
the position of the strike-through line.


"
8,LineMetrics,10,float getStrikethroughThickness(),True,Returns the thickness of the strike-through line.,"

getStrikethroughThickness
public abstract float getStrikethroughThickness()
Returns the thickness of the strike-through line.

Returns:
the thickness of the strike-through line.


"
8,LineMetrics,11,float getUnderlineOffset(),True,Returns the position of the underline relative to the baseline.,"

getUnderlineOffset
public abstract float getUnderlineOffset()
Returns the position of the underline relative to
 the baseline.

Returns:
the position of the underline.


"
8,LineMetrics,12,float getUnderlineThickness(),True,Returns the thickness of the underline.,"

getUnderlineThickness
public abstract float getUnderlineThickness()
Returns the thickness of the underline.

Returns:
the thickness of the underline.


"
9,NumericShaper,1,NumericShaper(),False,,NULL
9,NumericShaper,2,"Shape shape(char c, FontRenderContext frc)",False,,NULL
9,NumericShaper,3,"Shape[] shape(String s, FontRenderContext frc)",False,,NULL
9,NumericShaper,4,"Shape[] shape(char[] c, FontRenderContext frc)",False,,NULL
9,NumericShaper,5,"Shape[] shape(String s, FontRenderContext frc, int start, int end)",False,,NULL
10,ShapeGraphicAttribute,1,ShapeGraphicAttribute(Shape shape),False,,NULL
10,ShapeGraphicAttribute,2,Shape getShape(),False,,NULL
10,ShapeGraphicAttribute,3,Object clone(),False,,NULL
10,ShapeGraphicAttribute,4,boolean equals(Object obj),True,Compares this ShapeGraphicAttribute to the specified Object.,"

equals
public boolean equals(Object rhs)
Compares this ShapeGraphicAttribute to the specified
 Object.

Overrides:
equals in class Object
Parameters:
rhs - the Object to compare for equality
Returns:
true if this
 ShapeGraphicAttribute equals rhs;
 false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
10,ShapeGraphicAttribute,5,int hashCode(),True,Returns a hashcode for this ShapeGraphicAttribute.,"

hashCode
public int hashCode()
Returns a hashcode for this ShapeGraphicAttribute.

Overrides:
hashCode in class Object
Returns:
a hash code value for this
 ShapeGraphicAttribute.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
11,TextAttribute,1,TextAttribute FAMILY(),False,,NULL
11,TextAttribute,2,TextAttribute SIZE(),False,,NULL
11,TextAttribute,3,TextAttribute WEIGHT(),False,,NULL
11,TextAttribute,4,TextAttribute POSTURE(),False,,NULL
11,TextAttribute,5,TextAttribute UNDERLINE(),False,,NULL
12,TextHitInfo,1,int getSide(),False,,NULL
12,TextHitInfo,2,int getTail(),False,,NULL
12,TextHitInfo,3,int getHead(),False,,NULL
12,TextHitInfo,4,int getInsertionIndex(),True,Returns the insertion index.,"

getInsertionIndex
public int getInsertionIndex()
Returns the insertion index.  This is the character index if
 the leading edge of the character was hit, and one greater
 than the character index if the trailing edge was hit.

Returns:
the insertion index.


"
12,TextHitInfo,5,int getCharIndex(),True,Returns the index of the character hit.,"

getCharIndex
public int getCharIndex()
Returns the index of the character hit.

Returns:
the index of the character hit.


"
12,TextHitInfo,6,int getCharWidth(),False,,NULL
12,TextHitInfo,7,int getCharHeight(),False,,NULL
12,TextHitInfo,8,int getCharBaseline(),False,,NULL
12,TextHitInfo,9,int getCharAscent(),False,,NULL
12,TextHitInfo,10,int getCharDescent(),False,,NULL
12,TextHitInfo,11,int getCharAdvance(),False,,NULL
12,TextHitInfo,12,int getCharStrIndex(),False,,NULL
12,TextHitInfo,13,int getCharStrLength(),False,,NULL
12,TextHitInfo,14,int getCharStrOffset(),False,,NULL
12,TextHitInfo,15,int getCharStrIndex(int charIndex),False,,NULL
12,TextHitInfo,16,int getCharStrLength(int charIndex),False,,NULL
12,TextHitInfo,17,int getCharStrOffset(int charIndex),False,,NULL
12,TextHitInfo,18,"int getCharStrIndex(int charIndex, int charWidth)",False,,NULL
12,TextHitInfo,19,"int getCharStrLength(int charIndex, int charWidth)",False,,NULL
12,TextHitInfo,20,"int getCharStrOffset(int charIndex, int charWidth)",False,,NULL
12,TextHitInfo,21,"int getCharStrIndex(int charIndex, int charWidth, int charHeight)",False,,NULL
12,TextHitInfo,22,"int getCharStrLength(int charIndex, int charWidth, int charHeight)",False,,NULL
12,TextHitInfo,23,"int getCharStrOffset(int charIndex, int charWidth, int charHeight)",False,,NULL
12,TextHitInfo,24,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline)",False,,NULL
12,TextHitInfo,25,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline)",False,,NULL
12,TextHitInfo,26,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline)",False,,NULL
12,TextHitInfo,27,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent)",False,,NULL
12,TextHitInfo,28,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent)",False,,NULL
12,TextHitInfo,29,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent)",False,,NULL
12,TextHitInfo,30,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent)",False,,NULL
12,TextHitInfo,31,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent)",False,,NULL
12,TextHitInfo,32,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent)",False,,NULL
12,TextHitInfo,33,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance)",False,,NULL
12,TextHitInfo,34,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance)",False,,NULL
12,TextHitInfo,35,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance)",False,,NULL
12,TextHitInfo,36,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex)",False,,NULL
12,TextHitInfo,37,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex)",False,,NULL
12,TextHitInfo,38,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex)",False,,NULL
12,TextHitInfo,39,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex, int charStrLength)",False,,NULL
12,TextHitInfo,40,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex, int charStrLength)",False,,NULL
12,TextHitInfo,41,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex, int charStrLength)",False,,NULL
12,TextHitInfo,42,"int getCharStrIndex(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex, int charStrLength, int charStrOffset)",False,,NULL
12,TextHitInfo,43,"int getCharStrLength(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex, int charStrLength, int charStrOffset)",False,,NULL
12,TextHitInfo,44,"int getCharStrOffset(int charIndex, int charWidth, int charHeight, int charBaseline, int charAscent, int charDescent, int charAdvance, int charStrIndex, int charStrLength, int charStrOffset)",False,,NULL
13,TextLayout,1,int getAscent(),False,,NULL
13,TextLayout,2,int getDescent(),False,,NULL
13,TextLayout,3,int getAdvance(),False,,NULL
13,TextLayout,4,Rectangle2D getBounds(),True,Returns the bounds of this TextLayout.,"

getBounds
public Rectangle2D getBounds()
Returns the bounds of this TextLayout.
 The bounds are in standard coordinates.
 Due to rasterization effects, this bounds might not enclose all of the
 pixels rendered by the TextLayout.
 It might not coincide exactly with the ascent, descent,
 origin or advance of the TextLayout.

Returns:
a Rectangle2D that is the bounds of this
        TextLayout.


"
13,TextLayout,5,"Rectangle2D getBounds(int start, int end)",False,,NULL
13,TextLayout,6,"Rectangle2D getBounds(int start, int end, int cursor)",False,,NULL
13,TextLayout,7,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition)",False,,NULL
13,TextLayout,8,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth)",False,,NULL
13,TextLayout,9,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight)",False,,NULL
13,TextLayout,10,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight, int halfBaseline)",False,,NULL
13,TextLayout,11,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight, int halfBaseline, int halfLeading)",False,,NULL
13,TextLayout,12,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight, int halfBaseline, int halfLeading, int halfStrikethrough)",False,,NULL
13,TextLayout,13,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight, int halfBaseline, int halfLeading, int halfStrikethrough, int halfInline)",False,,NULL
13,TextLayout,14,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight, int halfBaseline, int halfLeading, int halfStrikethrough, int halfInline, int halfSuperscript)",False,,NULL
13,TextLayout,15,"Rectangle2D getBounds(int start, int end, int cursor, int cursorPosition, int halfWidth, int halfHeight, int halfBaseline, int halfLeading, int halfStrikethrough, int halfInline, int halfSuperscript, int halfSubscript)",False,,NULL
14,TextLayout.CaretPolicy,1,CaretPolicy getCaretPolicy(),False,,NULL
14,TextLayout.CaretPolicy,2,CaretPolicy getCaretPolicy(int offset),False,,NULL
14,TextLayout.CaretPolicy,3,"CaretPolicy getCaretPolicy(int offset, int length)",False,,NULL
14,TextLayout.CaretPolicy,4,"CaretPolicy getCaretPolicy(int offset, int length, int direction)",False,,NULL
14,TextLayout.CaretPolicy,5,"CaretPolicy getCaretPolicy(int offset, int length, int direction, int granularity)",False,,NULL
15,TextMeasurer,1,"int getCharAdvance(int index, int limit)",False,,NULL
15,TextMeasurer,2,"int getStringAdvance(String str, int limit)",False,,NULL
15,TextMeasurer,3,"TextLayout getLayout(String str, int start, int end)",False,,NULL
15,TextMeasurer,4,TextLayout getLayout(String str),False,,NULL
15,TextMeasurer,5,"TextLayout getLayout(String str, int start, int end, int flags)",False,,NULL
16,TransformAttribute,1,TransformAttribute(float[] matrix),False,,NULL
16,TransformAttribute,2,"TransformAttribute(float[] matrix, int offset)",False,,NULL
16,TransformAttribute,3,"TransformAttribute(float[] matrix, int offset, int stride)",False,,NULL
16,TransformAttribute,4,float[] getMatrix(),False,,NULL
16,TransformAttribute,5,int getOffset(),False,,NULL
16,TransformAttribute,6,int getStride(),False,,NULL
16,TransformAttribute,7,TransformAttributeType getType(),False,,NULL
16,TransformAttribute,8,boolean isIdentity(),True,Returns true if the wrapped transform is an identity transform.,"

isIdentity
public boolean isIdentity()
Returns true if the wrapped transform is
 an identity transform.

Returns:
true if the wrapped transform is
 an identity transform; false otherwise.
Since:
1.4


"
16,TransformAttribute,9,boolean isInverse(TransformAttribute other),False,,NULL
16,TransformAttribute,10,TransformAttribute compose(TransformAttribute other),False,,NULL
16,TransformAttribute,11,TransformAttribute inverse(),False,,NULL
16,TransformAttribute,12,"TransformAttribute translate(float dx, float dy)",False,,NULL
16,TransformAttribute,13,"TransformAttribute scale(float sx, float sy)",False,,NULL
16,TransformAttribute,14,TransformAttribute rotate(float theta),False,,NULL
16,TransformAttribute,15,"TransformAttribute shear(float shx, float shy)",False,,NULL
16,TransformAttribute,16,"TransformAttribute transform(float x, float y)",False,,NULL
16,TransformAttribute,17,TransformAttribute transform(Point2D p),False,,NULL
16,TransformAttribute,18,TransformAttribute transform(Rectangle2D r),False,,NULL
16,TransformAttribute,19,TransformAttribute transform(AffineTransform at),False,,NULL
16,TransformAttribute,20,TransformAttribute transform(Shape s),False,,NULL
