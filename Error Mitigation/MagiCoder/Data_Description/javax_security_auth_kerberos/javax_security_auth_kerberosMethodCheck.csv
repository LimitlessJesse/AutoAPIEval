Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DelegationPermission,1,boolean implies(Permission p),True,"Checks if this Kerberos delegation permission object ""implies"" the specified permission.","

implies
public boolean implies(Permission p)
Checks if this Kerberos delegation permission object ""implies"" the
 specified permission.
 
 If none of the above are true, implies returns false.

Overrides:
implies in class BasicPermission
Parameters:
p - the permission to check against.
Returns:
true if the specified permission is implied by this object,
 false if not.


"
0,DelegationPermission,2,boolean equals(Object obj),True,Checks two DelegationPermission objects for equality.,"

equals
public boolean equals(Object obj)
Checks two DelegationPermission objects for equality.
 

Overrides:
equals in class BasicPermission
Parameters:
obj - the object to test for equality with this object.
Returns:
true if obj is a DelegationPermission, and
  has the same subordinate and service principal as this.
  DelegationPermission object.
See Also:
Object.hashCode(), 
HashMap


"
0,DelegationPermission,3,String getActions(),False,,NULL
0,DelegationPermission,4,int hashCode(),True,Returns the hash code value for this object.,"

hashCode
public int hashCode()
Returns the hash code value for this object.

Overrides:
hashCode in class BasicPermission
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
0,DelegationPermission,5,String getName(),False,,NULL
1,KerberosKey,1,boolean isValid(),False,,NULL
1,KerberosKey,2,byte[] getKeyValue(),False,,NULL
1,KerberosKey,3,String getKeyType(),False,,NULL
1,KerberosKey,4,String getKeyUsage(),False,,NULL
1,KerberosKey,5,String getKeyIdentifier(),False,,NULL
2,KerberosPrincipal,1,KerberosPrincipal(String name),False,,NULL
2,KerberosPrincipal,2,String getName(),True,The returned string corresponds to the single-string representation of a Kerberos Principal name as specified in Section 2.1 of RFC 1964.,"

getName
public String getName()
The returned string corresponds to the single-string
 representation of a Kerberos Principal name as specified in
 Section 2.1 of RFC 1964.

Specified by:
getName in interface Principal
Returns:
the principal name.


"
2,KerberosPrincipal,3,boolean equals(Object another),True,Compares the specified Object with this Principal for equality.,"

equals
public boolean equals(Object other)
Compares the specified Object with this Principal for equality.
 Returns true if the given object is also a
 KerberosPrincipal and the two
 KerberosPrincipal instances are equivalent.
 More formally two KerberosPrincipal instances are equal
 if the values returned by getName() are equal.

Specified by:
equals in interface Principal
Overrides:
equals in class Object
Parameters:
other - the Object to compare to
Returns:
true if the Object passed in represents the same principal
 as this one, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
2,KerberosPrincipal,4,int hashCode(),True,Returns a hashcode for this principal.,"

hashCode
public int hashCode()
Returns a hashcode for this principal. The hash code is defined to
 be the result of the following  calculation:
 
  hashCode = getName().hashCode();
 

Specified by:
hashCode in interface Principal
Overrides:
hashCode in class Object
Returns:
a hashCode() for the KerberosPrincipal
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
2,KerberosPrincipal,5,String toString(),True,Returns a string representation of the object.,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Specified by:
toString in interface Principal
Overrides:
toString in class Object
Returns:
a string representation of the object.


"
3,KerberosTicket,1,boolean isValid(),False,,NULL
3,KerberosTicket,2,String getClientName(),False,,NULL
3,KerberosTicket,3,String getServerName(),False,,NULL
3,KerberosTicket,4,long getStartTime(),False,,NULL
3,KerberosTicket,5,long getEndTime(),False,,NULL
3,KerberosTicket,6,byte[] getTicket(),False,,NULL
3,KerberosTicket,7,byte[] getSessionKey(),False,,NULL
3,KerberosTicket,8,byte[] getAuthorizationData(),False,,NULL
3,KerberosTicket,9,byte[] getEncryptedData(),False,,NULL
3,KerberosTicket,10,byte[] getSignedData(),False,,NULL
3,KerberosTicket,11,byte[] getAuthenticator(),False,,NULL
3,KerberosTicket,12,byte[] getAuthorizationDataEncrypted(),False,,NULL
3,KerberosTicket,13,byte[] getAuthorizationDataSigned(),False,,NULL
3,KerberosTicket,14,byte[] getAuthorizationDataAuthenticator(),False,,NULL
3,KerberosTicket,15,byte[] getAuthorizationDataEncryptedSigned(),False,,NULL
3,KerberosTicket,16,byte[] getAuthorizationDataEncryptedAuthenticator(),False,,NULL
3,KerberosTicket,17,byte[] getAuthorizationDataSignedAuthenticator(),False,,NULL
3,KerberosTicket,18,byte[] getAuthorizationDataEncryptedSignedAuthenticator(),False,,NULL
3,KerberosTicket,19,byte[] getAuthorizationDataEncryptedSignedAuthenticator(),False,,NULL
3,KerberosTicket,20,byte[] getAuthorizationDataEncryptedSignedAuthenticator(),False,,NULL
4,KeyTab,1,KeyTab.getInstance(File file),False,,NULL
4,KeyTab,2,KeyTab.getInstance(String name),False,,NULL
4,KeyTab,3,"KeyTab.getInstance(File file, String password)",False,,NULL
4,KeyTab,4,"KeyTab.getInstance(String name, String password)",False,,NULL
4,KeyTab,5,"KeyTab.getInstance(File file, String password, String principal)",False,,NULL
5,ServicePermission,1,boolean implies(Principal user),False,,NULL
5,ServicePermission,2,boolean implies(ServicePermission target),False,,NULL
5,ServicePermission,3,boolean equals(Object obj),True,Checks two ServicePermission objects for equality.,"

equals
public boolean equals(Object obj)
Checks two ServicePermission objects for equality.
 

Specified by:
equals in class Permission
Parameters:
obj - the object to test for equality with this object.
Returns:
true if obj is a ServicePermission, and has the
  same service principal, and actions as this
 ServicePermission object.
See Also:
Object.hashCode(), 
HashMap


"
5,ServicePermission,4,int hashCode(),True,Returns the hash code value for this object.,"

hashCode
public int hashCode()
Returns the hash code value for this object.

Specified by:
hashCode in class Permission
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
5,ServicePermission,5,String getActions(),True,Returns the canonical string representation of the actions.,"

getActions
public String getActions()
Returns the canonical string representation of the actions.
 Always returns present actions in the following order:
 initiate, accept.

Specified by:
getActions in class Permission
Returns:
the actions of this Permission.


"
5,ServicePermission,6,String getName(),False,,NULL
5,ServicePermission,7,String toString(),False,,NULL
5,ServicePermission,8,Principal getPrincipal(),False,,NULL
5,ServicePermission,9,boolean implies(Subject subject),False,,NULL
5,ServicePermission,10,boolean implies(ProtectionDomain domain),False,,NULL
