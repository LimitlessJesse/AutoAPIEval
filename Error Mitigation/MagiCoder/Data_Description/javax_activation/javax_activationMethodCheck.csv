Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,ActivationDataFlavor,1,boolean isMimeTypeAvailable(String mimeType),False,,NULL
0,ActivationDataFlavor,2,boolean isFlavorSerializable(),False,,NULL
0,ActivationDataFlavor,3,boolean isFlavorAssignable(DataFlavor flavor),False,,NULL
0,ActivationDataFlavor,4,boolean isFlavorTransferData(DataFlavor flavor),False,,NULL
0,ActivationDataFlavor,5,boolean isFlavorMultiPartType(DataFlavor flavor),False,,NULL
1,CommandInfo,1,String getCommandName(),True,Return the command verb.,"

getCommandName
public String getCommandName()
Return the command verb.

Returns:
the command verb.


"
1,CommandInfo,2,String getMimeType(),False,,NULL
1,CommandInfo,3,String getJavaClassName(),False,,NULL
1,CommandInfo,4,String getParameterName(),False,,NULL
1,CommandInfo,5,String getParameterDescription(),False,,NULL
2,CommandMap,1,CommandMap(),False,,NULL
2,CommandMap,2,"void addCommand(String command, CommandObject co)",False,,NULL
2,CommandMap,3,CommandObject getCommand(String command),False,,NULL
2,CommandMap,4,void removeCommand(String command),False,,NULL
2,CommandMap,5,Enumeration getCommands(),False,,NULL
3,DataHandler,1,"DataHandler(Object data, String contentType)",False,,NULL
3,DataHandler,2,Object getData(),False,,NULL
3,DataHandler,3,String getContentType(),True,Return the MIME type of this object as retrieved from the source object.,"

getContentType
public String getContentType()
Return the MIME type of this object as retrieved from
 the source object. Note that this is the full
 type with parameters.

Returns:
the MIME type


"
3,DataHandler,4,String getName(),True,Return the name of the data object.,"

getName
public String getName()
Return the name of the data object. If this DataHandler
 was created with a DataSource, this method calls through
 to the DataSource.getName method, otherwise it
 returns null.

Returns:
the name of the object


"
3,DataHandler,5,void setData(Object data),False,,NULL
3,DataHandler,6,void setContentType(String contentType),False,,NULL
3,DataHandler,7,void setName(String name),False,,NULL
3,DataHandler,8,void writeTo(OutputStream out) throws IOException,True,Write the data to an OutputStream.,"

writeTo
public void writeTo(OutputStream os)
             throws IOException
Write the data to an OutputStream.

 If the DataHandler was created with a DataSource, writeTo
 retrieves the InputStream and copies the bytes from the
 InputStream to the OutputStream passed in.
 
 If the DataHandler was created with an object, writeTo
 retrieves the DataContentHandler for the object's type.
 If the DataContentHandler was found, it calls the
 writeTo method on the DataContentHandler.

Parameters:
os - the OutputStream to write to
Throws:
IOException - if an I/O error occurs


"
3,DataHandler,9,void readFrom(InputStream in) throws IOException,False,,NULL
3,DataHandler,10,void setSize(long size),False,,NULL
3,DataHandler,11,long getSize(),False,,NULL
3,DataHandler,12,boolean equals(Object obj),False,,NULL
3,DataHandler,13,int hashCode(),False,,NULL
3,DataHandler,14,String toString(),False,,NULL
4,FileDataSource,1,FileDataSource(File file),False,,NULL
4,FileDataSource,2,InputStream getInputStream() throws IOException,True,This method will return an InputStream representing the the data and will throw an IOException if it can not do so.,"

getInputStream
public InputStream getInputStream()
                           throws IOException
This method will return an InputStream representing the
 the data and will throw an IOException if it can
 not do so. This method will return a new
 instance of InputStream with each invocation.

Specified by:
getInputStream in interface DataSource
Returns:
an InputStream
Throws:
IOException


"
4,FileDataSource,3,OutputStream getOutputStream() throws IOException,True,This method will return an OutputStream representing the the data and will throw an IOException if it can not do so.,"

getOutputStream
public OutputStream getOutputStream()
                             throws IOException
This method will return an OutputStream representing the
 the data and will throw an IOException if it can
 not do so. This method will return a new instance of
 OutputStream with each invocation.

Specified by:
getOutputStream in interface DataSource
Returns:
an OutputStream
Throws:
IOException


"
4,FileDataSource,4,String getContentType(),True,This method returns the MIME type of the data in the form of a string.,"

getContentType
public String getContentType()
This method returns the MIME type of the data in the form of a
 string. This method uses the currently installed FileTypeMap. If
 there is no FileTypeMap explictly set, the FileDataSource will
 call the getDefaultFileTypeMap method on
 FileTypeMap to acquire a default FileTypeMap. Note: By
 default, the FileTypeMap used will be a MimetypesFileTypeMap.

Specified by:
getContentType in interface DataSource
Returns:
the MIME Type
See Also:
FileTypeMap.getDefaultFileTypeMap()


"
4,FileDataSource,5,String getName(),True,Return the name of this object.,"

getName
public String getName()
Return the name of this object. The FileDataSource
 will return the file name of the object.

Specified by:
getName in interface DataSource
Returns:
the name of the object.
See Also:
DataSource


"
5,FileTypeMap,1,FileTypeMap getDefaultFileTypeMap(),True,Return the default FileTypeMap for the system.,"

getDefaultFileTypeMap
public static FileTypeMap getDefaultFileTypeMap()
Return the default FileTypeMap for the system.
 If setDefaultFileTypeMap was called, return
 that instance, otherwise return an instance of
 MimetypesFileTypeMap.

Returns:
The default FileTypeMap
See Also:
setDefaultFileTypeMap(javax.activation.FileTypeMap)


"
5,FileTypeMap,2,String getContentType(File file),True,Return the type of the file object.,"

getContentType
public abstract String getContentType(File file)
Return the type of the file object. This method should
 always return a valid MIME type.

Parameters:
file - A file to be typed.
Returns:
The content type.


"
5,FileTypeMap,3,String getContentType(String fileName),True,Return the type of the file passed in.,"

getContentType
public abstract String getContentType(String filename)
Return the type of the file passed in.  This method should
 always return a valid MIME type.

Parameters:
filename - the pathname of the file.
Returns:
The content type.


"
5,FileTypeMap,4,void addMimeType(String mimeType),False,,NULL
5,FileTypeMap,5,void addMimeTypes(String mimeTypes),False,,NULL
6,MailcapCommandMap,1,MailcapCommandMap(),False,,NULL
6,MailcapCommandMap,2,Object get(Object key),False,,NULL
6,MailcapCommandMap,3,boolean containsKey(Object key),False,,NULL
6,MailcapCommandMap,4,boolean containsValue(Object value),False,,NULL
6,MailcapCommandMap,5,"Set<Map.Entry<Object, Object>> entrySet()",False,,NULL
7,MimeType,1,String getBaseType(),True,Return a String representation of this object without the parameter list.,"

getBaseType
public String getBaseType()
Return a String representation of this object
 without the parameter list.

Returns:
the MIME type and sub-type


"
7,MimeType,2,String getSubType(),True,Retrieve the subtype of this object.,"

getSubType
public String getSubType()
Retrieve the subtype of this object.

Returns:
the MIME subtype


"
7,MimeType,3,String getSuffix(),False,,NULL
7,MimeType,4,String getPrimaryType(),True,Retrieve the primary type of this object.,"

getPrimaryType
public String getPrimaryType()
Retrieve the primary type of this object.

Returns:
the primary MIME type


"
7,MimeType,5,String getParameter(String name),True,"Retrieve the value associated with the given name, or null if there is no current association.","

getParameter
public String getParameter(String name)
Retrieve the value associated with the given name, or null if there
 is no current association.

Parameters:
name - the parameter name
Returns:
the paramter's value


"
7,MimeType,6,String[] getParameters(),False,,NULL
7,MimeType,7,String toString(),True,Return the String representation of this object.,"

toString
public String toString()
Return the String representation of this object.

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
7,MimeType,8,boolean match(MimeType mimeType),True,Determine if the primary and sub type of this object is the same as what is in the given type.,"

match
public boolean match(MimeType type)
Determine if the primary and sub type of this object is
 the same as what is in the given type.

Parameters:
type - the MimeType object to compare with
Returns:
true if they match


"
7,MimeType,9,boolean match(String type),True,Determine if the primary and sub type of this object is the same as the content type described in rawdata.,"

match
public boolean match(String rawdata)
              throws MimeTypeParseException
Determine if the primary and sub type of this object is
 the same as the content type described in rawdata.

Parameters:
rawdata - the MIME type string to compare with
Returns:
true if they match
Throws:
MimeTypeParseException


"
7,MimeType,10,"boolean match(String primaryType, String subType)",False,,NULL
7,MimeType,11,"boolean match(String primaryType, String subType, String suffix)",False,,NULL
7,MimeType,12,"boolean match(String primaryType, String subType, String suffix, String parameter)",False,,NULL
7,MimeType,13,"boolean match(String primaryType, String subType, String suffix, String parameter, String value)",False,,NULL
7,MimeType,14,"boolean match(String primaryType, String subType, String suffix, String parameter, String value, String charset)",False,,NULL
7,MimeType,15,"boolean match(String primaryType, String subType, String suffix, String parameter, String value, String charset, String boundary)",False,,NULL
8,MimeTypeParameterList,1,boolean add(E e),False,,NULL
8,MimeTypeParameterList,2,"void add(int index, E element)",False,,NULL
8,MimeTypeParameterList,3,boolean contains(Object o),False,,NULL
8,MimeTypeParameterList,4,E get(int index),False,,NULL
8,MimeTypeParameterList,5,int indexOf(Object o),False,,NULL
9,MimetypesFileTypeMap,1,String getContentType(String fileName),True,Return the MIME type based on the specified file name.,"

getContentType
public String getContentType(String filename)
Return the MIME type based on the specified file name.
 The MIME type entries are searched as described above under
 MIME types file search order.
 If no entry is found, the type ""application/octet-stream"" is returned.

Specified by:
getContentType in class FileTypeMap
Parameters:
filename - the file name
Returns:
the file's MIME type


"
9,MimetypesFileTypeMap,2,void load(InputStream is),False,,NULL
9,MimetypesFileTypeMap,3,void load(Reader reader),False,,NULL
9,MimetypesFileTypeMap,4,void load(URL url),False,,NULL
9,MimetypesFileTypeMap,5,void load(File file),False,,NULL
10,URLDataSource,1,URL getContentLocation(),False,,NULL
10,URLDataSource,2,InputStream getInputStream() throws IOException,True,The getInputStream method from the URL.,"

getInputStream
public InputStream getInputStream()
                           throws IOException
The getInputStream method from the URL. Calls the
 openStream method on the URL.

Specified by:
getInputStream in interface DataSource
Returns:
the InputStream.
Throws:
IOException


"
10,URLDataSource,3,String getName(),True,Calls the getFile method on the URL used to instantiate the object.,"

getName
public String getName()
Calls the getFile method on the URL used to
 instantiate the object.

Specified by:
getName in interface DataSource
Returns:
the result of calling the URL's getFile method.


"
10,URLDataSource,4,OutputStream getOutputStream() throws IOException,True,The getOutputStream method from the URL.,"

getOutputStream
public OutputStream getOutputStream()
                             throws IOException
The getOutputStream method from the URL. First an attempt is
 made to get the URLConnection object for the URL. If that
 succeeds, the getOutputStream method on the URLConnection
 is returned.

Specified by:
getOutputStream in interface DataSource
Returns:
the OutputStream.
Throws:
IOException


"
10,URLDataSource,5,Reader getReader() throws IOException,False,,NULL
