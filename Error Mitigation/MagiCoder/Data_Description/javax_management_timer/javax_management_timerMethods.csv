ClassName,Method,Return Type,Description,Full Description
Timer,"addNotification(String type, String message, Object userData, Date date)",Integer,"Creates a new timer notification with the specified type, message and userData and inserts it into the list of notifications with a given date and a null period and number of occurrences.","

addNotification
public Integer addNotification(String type,
                               String message,
                               Object userData,
                               Date date)
                        throws IllegalArgumentException
Creates a new timer notification with the specified type, message
 and userData and inserts it into the list of notifications with a given date
 and a null period and number of occurrences.
 
 The timer notification will be handled once at the specified date.
 
 If the timer notification to be inserted has a date that is before the current date,
 the method behaves as if the specified date were the current date and the
 notification is delivered immediately.

Specified by:
addNotification in interface TimerMBean
Parameters:
type - The timer notification type.
message - The timer notification detailed message.
userData - The timer notification user data object.
date - The date when the notification occurs.
Returns:
The identifier of the new created timer notification.
Throws:
IllegalArgumentException - The date is null.


"
Timer,"addNotification(String type, String message, Object userData, Date date, long period)",Integer,"Creates a new timer notification with the specified type, message and userData and inserts it into the list of notifications with a given date and period and a null number of occurrences.","

addNotification
public Integer addNotification(String type,
                               String message,
                               Object userData,
                               Date date,
                               long period)
                        throws IllegalArgumentException
Creates a new timer notification with the specified type, message
 and userData and inserts it into the list of notifications with a given date
 and period and a null number of occurrences.
 
 The timer notification will repeat continuously using the timer period using a fixed-delay
 execution scheme, as specified in Timer. In order to use a fixed-rate
 execution scheme, use addNotification(String, String, Object, Date, long, long,
 boolean) instead.
 
 If the timer notification to be inserted has a date that is before the current date,
 the method behaves as if the specified date were the current date. The
 first notification is delivered immediately and the subsequent ones are
 spaced as specified by the period parameter.

Specified by:
addNotification in interface TimerMBean
Parameters:
type - The timer notification type.
message - The timer notification detailed message.
userData - The timer notification user data object.
date - The date when the notification occurs.
period - The period of the timer notification (in milliseconds).
Returns:
The identifier of the new created timer notification.
Throws:
IllegalArgumentException - The date is null or
 the period is negative.


"
Timer,"addNotification(String type, String message, Object userData, Date date, long period, long nbOccurences)",Integer,"Creates a new timer notification with the specified type, message and userData and inserts it into the list of notifications with a given date, period and number of occurrences.","

addNotification
public Integer addNotification(String type,
                               String message,
                               Object userData,
                               Date date,
                               long period,
                               long nbOccurences)
                        throws IllegalArgumentException
Creates a new timer notification with the specified type, message
 and userData and inserts it into the list of notifications with a given date,
 period and number of occurrences.
 
 If the timer notification to be inserted has a date that is before the current date,
 the method behaves as if the specified date were the current date. 
 For once-off notifications, the notification is delivered immediately. 
 For periodic notifications, the first notification is delivered immediately and the
 subsequent ones are spaced as specified by the period parameter.
 
 Note that once the timer notification has been added into the list of notifications,
 its associated date, period and number of occurrences cannot be updated.
 
 In the case of a periodic notification, uses a fixed-delay execution scheme, as specified in
 Timer. In order to use a fixed-rate execution scheme, use
 addNotification(String, String, Object, Date, long, long, boolean) instead.

Specified by:
addNotification in interface TimerMBean
Parameters:
type - The timer notification type.
message - The timer notification detailed message.
userData - The timer notification user data object.
date - The date when the notification occurs.
period - The period of the timer notification (in milliseconds).
nbOccurences - The total number the timer notification will be emitted.
Returns:
The identifier of the new created timer notification.
Throws:
IllegalArgumentException - The date is null or
 the period or the number of occurrences is negative.
See Also:
addNotification(String, String, Object, Date, long, long, boolean)


"
Timer,"addNotification(String type, String message, Object userData, Date date, long period, long nbOccurences, boolean fixedRate)",Integer,"Creates a new timer notification with the specified type, message and userData and inserts it into the list of notifications with a given date, period and number of occurrences.","

addNotification
public Integer addNotification(String type,
                               String message,
                               Object userData,
                               Date date,
                               long period,
                               long nbOccurences,
                               boolean fixedRate)
                        throws IllegalArgumentException
Creates a new timer notification with the specified type, message
 and userData and inserts it into the list of notifications with a given date,
 period and number of occurrences.
 
 If the timer notification to be inserted has a date that is before the current date,
 the method behaves as if the specified date were the current date. 
 For once-off notifications, the notification is delivered immediately. 
 For periodic notifications, the first notification is delivered immediately and the
 subsequent ones are spaced as specified by the period parameter.
 
 Note that once the timer notification has been added into the list of notifications,
 its associated date, period and number of occurrences cannot be updated.
 
 In the case of a periodic notification, the value of parameter fixedRate is used to
 specify the execution scheme, as specified in Timer.

Specified by:
addNotification in interface TimerMBean
Parameters:
type - The timer notification type.
message - The timer notification detailed message.
userData - The timer notification user data object.
date - The date when the notification occurs.
period - The period of the timer notification (in milliseconds).
nbOccurences - The total number the timer notification will be emitted.
fixedRate - If true and if the notification is periodic, the notification
                  is scheduled with a fixed-rate execution scheme. If
                  false and if the notification is periodic, the notification
                  is scheduled with a fixed-delay execution scheme. Ignored if the
                  notification is not periodic.
Returns:
The identifier of the new created timer notification.
Throws:
IllegalArgumentException - The date is null or
 the period or the number of occurrences is negative.
See Also:
addNotification(String, String, Object, Date, long, long)


"
Timer,getAllNotificationIDs(),Vector<Integer>,Gets all timer notification identifiers registered into the list of notifications.,"

getAllNotificationIDs
public Vector<Integer> getAllNotificationIDs()
Gets all timer notification identifiers registered into the list of notifications.

Specified by:
getAllNotificationIDs in interface TimerMBean
Returns:
A vector of Integer objects containing all the timer notification identifiers.
 The vector is empty if there is no timer notification registered for this timer MBean.


"
Timer,getDate(Integer id),Date,Gets a copy of the date associated to a timer notification.,"

getDate
public Date getDate(Integer id)
Gets a copy of the date associated to a timer notification.

Specified by:
getDate in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
A copy of the date or null if the identifier is not mapped to any
 timer notification registered for this timer MBean.


"
Timer,getFixedRate(Integer id),Boolean,Gets a copy of the flag indicating whether a periodic notification is executed at fixed-delay or at fixed-rate.,"

getFixedRate
public Boolean getFixedRate(Integer id)
Gets a copy of the flag indicating whether a periodic notification is
 executed at fixed-delay or at fixed-rate.

Specified by:
getFixedRate in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
A copy of the flag indicating whether a periodic notification is
         executed at fixed-delay or at fixed-rate.


"
Timer,getNbNotifications(),int,Gets the number of timer notifications registered into the list of notifications.,"

getNbNotifications
public int getNbNotifications()
Gets the number of timer notifications registered into the list of notifications.

Specified by:
getNbNotifications in interface TimerMBean
Returns:
The number of timer notifications.


"
Timer,getNbOccurences(Integer id),Long,Gets a copy of the remaining number of occurrences associated to a timer notification.,"

getNbOccurences
public Long getNbOccurences(Integer id)
Gets a copy of the remaining number of occurrences associated to a timer notification.

Specified by:
getNbOccurences in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
A copy of the remaining number of occurrences or null if the identifier is not mapped to any
 timer notification registered for this timer MBean.


"
Timer,getNotificationIDs(String type),Vector<Integer>,Gets all the identifiers of timer notifications corresponding to the specified type.,"

getNotificationIDs
public Vector<Integer> getNotificationIDs(String type)
Gets all the identifiers of timer notifications corresponding to the specified type.

Specified by:
getNotificationIDs in interface TimerMBean
Parameters:
type - The timer notification type.
Returns:
A vector of Integer objects containing all the identifiers of
 timer notifications with the specified type.
 The vector is empty if there is no timer notifications registered for this timer MBean
 with the specified type.


"
Timer,getNotificationInfo(),MBeanNotificationInfo[],"Returns an array indicating, for each notification this MBean may send, the name of the Java class of the notification and the notification type.","

getNotificationInfo
public MBeanNotificationInfo[] getNotificationInfo()
Description copied from interface: NotificationBroadcaster
Returns an array indicating, for each notification this
 MBean may send, the name of the Java class of the notification
 and the notification type.
It is not illegal for the MBean to send notifications not
 described in this array.  However, some clients of the MBean
 server may depend on the array being complete for their correct
 functioning.

Specified by:
getNotificationInfo in interface NotificationBroadcaster
Overrides:
getNotificationInfo in class NotificationBroadcasterSupport
Returns:
the array of possible notifications.


"
Timer,getNotificationMessage(Integer id),String,Gets the timer notification detailed message corresponding to the specified identifier.,"

getNotificationMessage
public String getNotificationMessage(Integer id)
Gets the timer notification detailed message corresponding to the specified identifier.

Specified by:
getNotificationMessage in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
The timer notification detailed message or null if the identifier is not mapped to any
 timer notification registered for this timer MBean.


"
Timer,getNotificationType(Integer id),String,Gets the timer notification type corresponding to the specified identifier.,"

getNotificationType
public String getNotificationType(Integer id)
Gets the timer notification type corresponding to the specified identifier.

Specified by:
getNotificationType in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
The timer notification type or null if the identifier is not mapped to any
 timer notification registered for this timer MBean.


"
Timer,getNotificationUserData(Integer id),Object,Gets the timer notification user data object corresponding to the specified identifier.,"

getNotificationUserData
public Object getNotificationUserData(Integer id)
Gets the timer notification user data object corresponding to the specified identifier.

Specified by:
getNotificationUserData in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
The timer notification user data object or null if the identifier is not mapped to any
 timer notification registered for this timer MBean.


"
Timer,getPeriod(Integer id),Long,Gets a copy of the period (in milliseconds) associated to a timer notification.,"

getPeriod
public Long getPeriod(Integer id)
Gets a copy of the period (in milliseconds) associated to a timer notification.

Specified by:
getPeriod in interface TimerMBean
Parameters:
id - The timer notification identifier.
Returns:
A copy of the period or null if the identifier is not mapped to any
 timer notification registered for this timer MBean.


"
Timer,getSendPastNotifications(),boolean,Gets the flag indicating whether or not the timer sends past notifications.,"

getSendPastNotifications
public boolean getSendPastNotifications()
Gets the flag indicating whether or not the timer sends past notifications.
 The default value of the past notifications sending on/off flag is false.

Specified by:
getSendPastNotifications in interface TimerMBean
Returns:
The past notifications sending on/off flag value.
See Also:
setSendPastNotifications(boolean)


"
Timer,isActive(),boolean,Tests whether the timer MBean is active.,"

isActive
public boolean isActive()
Tests whether the timer MBean is active.
 A timer MBean is marked active when the start method is called.
 It becomes inactive when the stop method is called.
 The default value of the active on/off flag is false.

Specified by:
isActive in interface TimerMBean
Returns:
true if the timer MBean is active, false otherwise.


"
Timer,isEmpty(),boolean,Tests whether the list of timer notifications is empty.,"

isEmpty
public boolean isEmpty()
Tests whether the list of timer notifications is empty.

Specified by:
isEmpty in interface TimerMBean
Returns:
true if the list of timer notifications is empty, false otherwise.


"
Timer,postDeregister(),void,Allows the timer MBean to perform any operations needed after having been unregistered by the MBean server.,"

postDeregister
public void postDeregister()
Allows the timer MBean to perform any operations needed after having been
 unregistered by the MBean server.
 
 Not used in this context.

Specified by:
postDeregister in interface MBeanRegistration


"
Timer,postRegister(Boolean registrationDone),void,Allows the timer MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed.,"

postRegister
public void postRegister(Boolean registrationDone)
Allows the timer MBean to perform any operations needed after having been
 registered in the MBean server or after the registration has failed.
 
 Not used in this context.

Specified by:
postRegister in interface MBeanRegistration
Parameters:
registrationDone - Indicates whether or not the MBean has
 been successfully registered in the MBean server. The value
 false means that the registration phase has failed.


"
Timer,preDeregister(),void,Allows the timer MBean to perform any operations it needs before being unregistered by the MBean server.,"

preDeregister
public void preDeregister()
                   throws Exception
Allows the timer MBean to perform any operations it needs before being unregistered
 by the MBean server.
 
 Stops the timer.

Specified by:
preDeregister in interface MBeanRegistration
Throws:
Exception


"
Timer,"preRegister(MBeanServer server, ObjectName name)",ObjectName,Allows the timer MBean to perform any operations it needs before being registered in the MBean server.,"

preRegister
public ObjectName preRegister(MBeanServer server,
                              ObjectName name)
                       throws Exception
Allows the timer MBean to perform any operations it needs before being registered
 in the MBean server.
 
 Not used in this context.

Specified by:
preRegister in interface MBeanRegistration
Parameters:
server - The MBean server in which the timer MBean will be registered.
name - The object name of the timer MBean.
Returns:
The name of the timer MBean registered.
Throws:
Exception


"
Timer,removeAllNotifications(),void,Removes all the timer notifications from the list of notifications and resets the counter used to update the timer notification identifiers.,"

removeAllNotifications
public void removeAllNotifications()
Removes all the timer notifications from the list of notifications
 and resets the counter used to update the timer notification identifiers.

Specified by:
removeAllNotifications in interface TimerMBean


"
Timer,removeNotification(Integer id),void,Removes the timer notification corresponding to the specified identifier from the list of notifications.,"

removeNotification
public void removeNotification(Integer id)
                        throws InstanceNotFoundException
Removes the timer notification corresponding to the specified identifier from the list of notifications.

Specified by:
removeNotification in interface TimerMBean
Parameters:
id - The timer notification identifier.
Throws:
InstanceNotFoundException - The specified identifier does not correspond to any timer notification
 in the list of notifications of this timer MBean.


"
Timer,removeNotifications(String type),void,Removes all the timer notifications corresponding to the specified type from the list of notifications.,"

removeNotifications
public void removeNotifications(String type)
                         throws InstanceNotFoundException
Removes all the timer notifications corresponding to the specified type from the list of notifications.

Specified by:
removeNotifications in interface TimerMBean
Parameters:
type - The timer notification type.
Throws:
InstanceNotFoundException - The specified type does not correspond to any timer notification
 in the list of notifications of this timer MBean.


"
Timer,setSendPastNotifications(boolean value),void,Sets the flag indicating whether the timer sends past notifications or not.,"

setSendPastNotifications
public void setSendPastNotifications(boolean value)
Sets the flag indicating whether the timer sends past notifications or not.
 The default value of the past notifications sending on/off flag is false.

Specified by:
setSendPastNotifications in interface TimerMBean
Parameters:
value - The past notifications sending on/off flag value.
See Also:
getSendPastNotifications()


"
Timer,start(),void,Starts the timer.,"

start
public void start()
Starts the timer.
 
 If there is one or more timer notifications before the time in the list of notifications, the notification
 is sent according to the sendPastNotifications flag and then, updated
 according to its period and remaining number of occurrences.
 If the timer notification date remains earlier than the current date, this notification is just removed
 from the list of notifications.

Specified by:
start in interface TimerMBean


"
Timer,stop(),void,Stops the timer.,"

stop
public void stop()
Stops the timer.

Specified by:
stop in interface TimerMBean


"
TimerNotification,getNotificationID(),Integer,Gets the identifier of this timer notification.,"

getNotificationID
public Integer getNotificationID()
Gets the identifier of this timer notification.

Returns:
The identifier.


"
