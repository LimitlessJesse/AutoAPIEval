Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,AccessibleAttributeSequence,1,AccessibleAttributeSequence(),False,,NULL
0,AccessibleAttributeSequence,2,AccessibleAttributeSequence(int initialCapacity),False,,NULL
0,AccessibleAttributeSequence,3,AccessibleAttributeSequence(Collection<? extends Attribute> c),False,,NULL
0,AccessibleAttributeSequence,4,boolean add(Attribute attribute),False,,NULL
0,AccessibleAttributeSequence,5,"void add(int index, Attribute attribute)",False,,NULL
1,AccessibleBundle,1,AccessibleBundleEntry,False,,NULL
1,AccessibleBundle,2,AccessibleBundleEntrySet,False,,NULL
1,AccessibleBundle,3,AccessibleBundleKeys,False,,NULL
1,AccessibleBundle,4,AccessibleBundleValues,False,,NULL
1,AccessibleBundle,5,getAccessibleBundleEntry(String key),False,,NULL
2,AccessibleContext,1,AccessibleContext getAccessibleContext(),False,,NULL
2,AccessibleContext,2,AccessibleRole getAccessibleRole(),True,Gets the role of this object.,"

getAccessibleRole
public abstract AccessibleRole getAccessibleRole()
Gets the role of this object.  The role of the object is the generic
 purpose or use of the class of this object.  For example, the role
 of a push button is AccessibleRole.PUSH_BUTTON.  The roles in
 AccessibleRole are provided so component developers can pick from
 a set of predefined roles.  This enables assistive technologies to
 provide a consistent interface to various tweaked subclasses of
 components (e.g., use AccessibleRole.PUSH_BUTTON for all components
 that act like a push button) as well as distinguish between subclasses
 that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes
 and AccessibleRole.RADIO_BUTTON for radio buttons).
 Note that the AccessibleRole class is also extensible, so
 custom component developers can define their own AccessibleRole's
 if the set of predefined roles is inadequate.

Returns:
an instance of AccessibleRole describing the role of the object
See Also:
AccessibleRole


"
2,AccessibleContext,3,AccessibleState getAccessibleStateSet(),False,,NULL
2,AccessibleContext,4,AccessibleText getAccessibleText(),True,Gets the AccessibleText associated with this object presenting text on the display.,"

getAccessibleText
public AccessibleText getAccessibleText()
Gets the AccessibleText associated with this object presenting
 text on the display.

Returns:
AccessibleText if supported by object; else return null
See Also:
AccessibleText


"
2,AccessibleContext,5,AccessibleValue getAccessibleValue(),True,Gets the AccessibleValue associated with this object that supports a Numerical value.,"

getAccessibleValue
public AccessibleValue getAccessibleValue()
Gets the AccessibleValue associated with this object that supports a
 Numerical value.

Returns:
AccessibleValue if supported by object; else return null
See Also:
AccessibleValue


"
3,AccessibleHyperlink,1,AccessibleHyperlink getAccessibleHyperlink(int index),False,,NULL
3,AccessibleHyperlink,2,int getAccessibleHyperlinkCount(),False,,NULL
3,AccessibleHyperlink,3,boolean isAccessibleHyperlink(int index),False,,NULL
3,AccessibleHyperlink,4,AccessibleHyperlink getAccessibleHyperlink(int index),False,,NULL
3,AccessibleHyperlink,5,AccessibleHyperlink getAccessibleHyperlink(int index),False,,NULL
4,AccessibleRelation,1,AccessibleRelation getAccessibleRelation(int relationType),False,,NULL
4,AccessibleRelation,2,int getAccessibleRelationCount(),False,,NULL
4,AccessibleRelation,3,AccessibleRelation getAccessibleRelation(int index),False,,NULL
4,AccessibleRelation,4,boolean isAccessibleRelationSupported(int relationType),False,,NULL
4,AccessibleRelation,5,Accessible getAccessibleParent(),False,,NULL
5,AccessibleRelationSet,1,boolean add(AccessibleRelation relation),True,Adds a new relation to the current relation set.,"

add
public boolean add(AccessibleRelation relation)
Adds a new relation to the current relation set.  If the relation
 is already in the relation set, the target(s) of the specified
 relation is merged with the target(s) of the existing relation.
 Otherwise,  the new relation is added to the relation set.

Parameters:
relation - the relation to add to the relation set
Returns:
true if relation is added to the relation set; false if the
 relation set is unchanged


"
5,AccessibleRelationSet,2,void clear(),True,Removes all the relations from the current relation set.,"

clear
public void clear()
Removes all the relations from the current relation set.

"
5,AccessibleRelationSet,3,boolean contains(AccessibleRelation relation),False,,NULL
5,AccessibleRelationSet,4,boolean isEmpty(),False,,NULL
5,AccessibleRelationSet,5,boolean remove(AccessibleRelation relation),True,Removes a relation from the current relation set.,"

remove
public boolean remove(AccessibleRelation relation)
Removes a relation from the current relation set.  If the relation
 is not in the set, the relation set will be unchanged and the
 return value will be false.  If the relation is in the relation
 set, it will be removed from the set and the return value will be
 true.

Parameters:
relation - the relation to remove from the relation set
Returns:
true if the relation is in the relation set; false if the
 relation set is unchanged


"
6,AccessibleResourceBundle,1,AccessibleResourceBundle,False,,NULL
6,AccessibleResourceBundle,2,AccessibleResourceBundle.getAccessibleResourceBundle(Locale),False,,NULL
6,AccessibleResourceBundle,3,"AccessibleResourceBundle.getAccessibleResourceBundle(Locale, ClassLoader)",False,,NULL
6,AccessibleResourceBundle,4,"AccessibleResourceBundle.getAccessibleResourceBundle(Locale, ClassLoader, Class)",False,,NULL
6,AccessibleResourceBundle,5,"AccessibleResourceBundle.getAccessibleResourceBundle(Locale, ClassLoader, Class, Object)",False,,NULL
7,AccessibleRole,1,AccessibleRole getAccessibleRole(),False,,NULL
7,AccessibleRole,2,AccessibleRole getAccessibleRole(int role),False,,NULL
7,AccessibleRole,3,AccessibleRole getAccessibleRole(String role),False,,NULL
7,AccessibleRole,4,AccessibleRole getAccessibleRole(AccessibleRole role),False,,NULL
7,AccessibleRole,5,"AccessibleRole getAccessibleRole(int role, int index)",False,,NULL
8,AccessibleState,1,AccessibleState.ACTIVE,False,,NULL
8,AccessibleState,2,AccessibleState.ARMED,False,,NULL
8,AccessibleState,3,AccessibleState.BUSY,False,,NULL
8,AccessibleState,4,AccessibleState.CHECKED,False,,NULL
8,AccessibleState,5,AccessibleState.EDITABLE,False,,NULL
9,AccessibleStateSet,1,boolean add(E e),False,,NULL
9,AccessibleStateSet,2,boolean addAll(Collection<? extends E> c),False,,NULL
9,AccessibleStateSet,3,void clear(),True,Removes all the states from the current state set.,"

clear
public void clear()
Removes all the states from the current state set.

"
9,AccessibleStateSet,4,boolean contains(Object o),False,,NULL
9,AccessibleStateSet,5,boolean containsAll(Collection<?> c),False,,NULL
10,AccessibleTextSequence,1,int getEndIndex(),False,,NULL
10,AccessibleTextSequence,2,int getStartIndex(),False,,NULL
10,AccessibleTextSequence,3,int getTextLength(),False,,NULL
10,AccessibleTextSequence,4,String getText(),False,,NULL
10,AccessibleTextSequence,5,"String getText(int start, int end)",False,,NULL
