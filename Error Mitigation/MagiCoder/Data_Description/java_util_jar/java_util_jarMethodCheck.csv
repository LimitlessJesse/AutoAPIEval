Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,Attributes,1,Attributes getAttributes(),False,,NULL
0,Attributes,2,String getValue(String key),True,"Returns the value of the specified attribute name, specified as a string, or null if the attribute was not found.","

getValue
public String getValue(String name)
Returns the value of the specified attribute name, specified as
 a string, or null if the attribute was not found. The attribute
 name is case-insensitive.
 
 This method is defined as:
 
      return (String)get(new Attributes.Name((String)name));
 

Parameters:
name - the attribute name as a string
Returns:
the String value of the specified attribute name, or null if
         not found.
Throws:
IllegalArgumentException - if the attribute name is invalid


"
0,Attributes,3,Set<String> keySet(),False,,NULL
0,Attributes,4,"void putValue(String key, String value)",False,,NULL
0,Attributes,5,void removeAttribute(String key),False,,NULL
1,Attributes.Name,1,boolean contains(Object o),False,,NULL
1,Attributes.Name,2,boolean containsAll(Collection<?> c),False,,NULL
1,Attributes.Name,3,boolean equals(Object o),True,Compares this attribute name to another for equality.,"

equals
public boolean equals(Object o)
Compares this attribute name to another for equality.

Overrides:
equals in class Object
Parameters:
o - the object to compare
Returns:
true if this attribute name is equal to the
         specified attribute object
See Also:
Object.hashCode(), 
HashMap


"
1,Attributes.Name,4,int hashCode(),True,Computes the hash value for this attribute name.,"

hashCode
public int hashCode()
Computes the hash value for this attribute name.

Overrides:
hashCode in class Object
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
1,Attributes.Name,5,boolean isEmpty(),False,,NULL
1,Attributes.Name,6,Iterator<E> iterator(),False,,NULL
1,Attributes.Name,7,boolean remove(Object o),False,,NULL
1,Attributes.Name,8,boolean removeAll(Collection<?> c),False,,NULL
1,Attributes.Name,9,boolean retainAll(Collection<?> c),False,,NULL
1,Attributes.Name,10,int size(),False,,NULL
1,Attributes.Name,11,Object[] toArray(),False,,NULL
1,Attributes.Name,12,<T> T[] toArray(T[] a),False,,NULL
1,Attributes.Name,13,ListIterator<E> listIterator(),False,,NULL
1,Attributes.Name,14,ListIterator<E> listIterator(int index),False,,NULL
1,Attributes.Name,15,boolean addAll(Collection<? extends E> c),False,,NULL
1,Attributes.Name,16,void clear(),False,,NULL
1,Attributes.Name,17,"boolean addAll(int index, Collection<? extends E> c)",False,,NULL
1,Attributes.Name,18,boolean removeAll(Collection<?> c),False,,NULL
1,Attributes.Name,19,boolean retainAll(Collection<?> c),False,,NULL
1,Attributes.Name,20,"boolean addAll(int index, Collection<? extends E> c)",False,,NULL
2,JarEntry,1,JarEntry(String name),False,,NULL
2,JarEntry,2,String getName(),False,,NULL
2,JarEntry,3,long getSize(),False,,NULL
2,JarEntry,4,boolean isDirectory(),False,,NULL
2,JarEntry,5,boolean isUnixMaskSet(int mask),False,,NULL
2,JarEntry,6,boolean isUnixExecutable(),False,,NULL
2,JarEntry,7,boolean isUnixReadable(),False,,NULL
2,JarEntry,8,boolean isUnixWritable(),False,,NULL
2,JarEntry,9,void setUnixMask(int mask),False,,NULL
2,JarEntry,10,void setUnixExecutable(boolean value),False,,NULL
2,JarEntry,11,void setUnixReadable(boolean value),False,,NULL
2,JarEntry,12,void setUnixWritable(boolean value),False,,NULL
2,JarEntry,13,void setUnixUser(String user),False,,NULL
2,JarEntry,14,void setUnixGroup(String group),False,,NULL
2,JarEntry,15,void setUnixMode(int mode),False,,NULL
2,JarEntry,16,void setUnixTime(long time),False,,NULL
2,JarEntry,17,void setUnixSize(long size),False,,NULL
2,JarEntry,18,void setUnixMajor(int major),False,,NULL
2,JarEntry,19,void setUnixMinor(int minor),False,,NULL
2,JarEntry,20,void setUnixInode(long inode),False,,NULL
2,JarEntry,21,void setUnixUid(int uid),False,,NULL
2,JarEntry,22,void setUnixGid(int gid),False,,NULL
2,JarEntry,23,void setUnixFlags(int flags),False,,NULL
2,JarEntry,24,void setUnixLinkCount(int linkCount),False,,NULL
2,JarEntry,25,void setUnixOwner(String owner),False,,NULL
2,JarEntry,26,void setUnixGroup(String group),False,,NULL
2,JarEntry,27,void setUnixChecksum(int checksum),False,,NULL
2,JarEntry,28,void setUnixVersion(int version),False,,NULL
2,JarEntry,29,void setUnixOs(int os),False,,NULL
2,JarEntry,30,void setUnixOsVersion(int osVersion),False,,NULL
2,JarEntry,31,void setUnixMd5(byte[] md5),False,,NULL
2,JarEntry,32,void setUnixSha1(byte[] sha1),False,,NULL
2,JarEntry,33,void setUnixSha256(byte[] sha256),False,,NULL
2,JarEntry,34,void setUnixCrc32(int crc32),False,,NULL
2,JarEntry,35,void setUnixCompressedSize(long compressedSize),False,,NULL
2,JarEntry,36,void setUnixCompressedMethod(int method),False,,NULL
2,JarEntry,37,void setUnixCompressedData(byte[] data),False,,NULL
2,JarEntry,38,void setUnixCompressedCrc32(int crc32),False,,NULL
2,JarEntry,39,void setUnixCompressedMd5(byte[] md5),False,,NULL
2,JarEntry,40,void setUnixCompressedSha1(byte[] sha1),False,,NULL
2,JarEntry,41,void setUnixCompressedSha256(byte[] sha256),False,,NULL
2,JarEntry,42,void setUnixCompressedTime(long time),False,,NULL
2,JarEntry,43,void setUnixCompressedSize(long size),False,,NULL
2,JarEntry,44,void setUnixCompressedMethod(int method),False,,NULL
2,JarEntry,45,void setUnixCompressedData(byte[] data),False,,NULL
2,JarEntry,46,void setUnixCompressedCrc32(int crc32),False,,NULL
2,JarEntry,47,void setUnixCompressedMd5(byte[] md5),False,,NULL
2,JarEntry,48,void setUnixCompressedSha1(byte[] sha1),False,,NULL
2,JarEntry,49,void setUnixCompressedSha256(byte[] sha256),False,,NULL
2,JarEntry,50,void setUnixCompressedTime(long time),False,,NULL
2,JarEntry,51,void setUnixCompressedSize(long size),False,,NULL
2,JarEntry,52,void setUnixCompressedMethod(int method),False,,NULL
2,JarEntry,53,void setUnixCompressedData(byte[] data),False,,NULL
2,JarEntry,54,void setUnixCompressedCrc32(int crc32),False,,NULL
2,JarEntry,55,void setUnixCompressedMd5(byte[] md5),False,,NULL
2,JarEntry,56,void setUnixCompressedSha1(byte[] sha1),False,,NULL
3,JarFile,1,JarFile(File file),False,,NULL
3,JarFile,2,JarEntry getJarEntry(String name),True,Returns the JarEntry for the given entry name or null if not found.,"

getJarEntry
public JarEntry getJarEntry(String name)
Returns the JarEntry for the given entry name or
 null if not found.

Parameters:
name - the jar file entry name
Returns:
the JarEntry for the given entry name or
         null if not found.
Throws:
IllegalStateException - may be thrown if the jar file has been closed
See Also:
JarEntry


"
3,JarFile,3,Enumeration<JarEntry> entries(),True,Returns an enumeration of the zip file entries.,"

entries
public Enumeration<JarEntry> entries()
Returns an enumeration of the zip file entries.

Overrides:
entries in class ZipFile
Returns:
an enumeration of the ZIP file entries


"
3,JarFile,4,InputStream getInputStream(JarEntry e),False,,NULL
3,JarFile,5,Manifest getManifest(),True,"Returns the jar file manifest, or null if none.","

getManifest
public Manifest getManifest()
                     throws IOException
Returns the jar file manifest, or null if none.

Returns:
the jar file manifest, or null if none
Throws:
IllegalStateException - may be thrown if the jar file has been closed
IOException - if an I/O error has occurred


"
4,JarInputStream,1,JarInputStream(InputStream in),False,,NULL
4,JarInputStream,2,JarEntry getNextJarEntry(),True,Reads the next JAR file entry and positions the stream at the beginning of the entry data.,"

getNextJarEntry
public JarEntry getNextJarEntry()
                         throws IOException
Reads the next JAR file entry and positions the stream at the
 beginning of the entry data. If verification has been enabled,
 any invalid signature detected while positioning the stream for
 the next entry will result in an exception.

Returns:
the next JAR file entry, or null if there are no more entries
Throws:
ZipException - if a ZIP file error has occurred
IOException - if an I/O error has occurred
SecurityException - if any of the jar file entries
         are incorrectly signed.


"
4,JarInputStream,3,"int read(byte[] b, int off, int len)",True,Reads from the current JAR file entry into an array of bytes.,"

read
public int read(byte[] b,
                int off,
                int len)
         throws IOException
Reads from the current JAR file entry into an array of bytes.
 If len is not zero, the method
 blocks until some input is available; otherwise, no
 bytes are read and 0 is returned.
 If verification has been enabled, any invalid signature
 on the current entry will be reported at some point before the
 end of the entry is reached.

Overrides:
read in class ZipInputStream
Parameters:
b - the buffer into which the data is read
off - the start offset in the destination array b
len - the maximum number of bytes to read
Returns:
the actual number of bytes read, or -1 if the end of the
         entry is reached
Throws:
NullPointerException - If b is null.
IndexOutOfBoundsException - If off is negative,
 len is negative, or len is greater than
 b.length - off
ZipException - if a ZIP file error has occurred
IOException - if an I/O error has occurred
SecurityException - if any of the jar file entries
         are incorrectly signed.
See Also:
FilterInputStream.in


"
4,JarInputStream,4,void closeEntry(),False,,NULL
4,JarInputStream,5,Manifest getManifest(),True,"Returns the Manifest for this JAR file, or null if none.","

getManifest
public Manifest getManifest()
Returns the Manifest for this JAR file, or
 null if none.

Returns:
the Manifest for this JAR file, or
         null if none.


"
5,JarOutputStream,1,JarOutputStream(OutputStream out),False,,NULL
5,JarOutputStream,2,void putNextEntry(JarEntry entry),False,,NULL
5,JarOutputStream,3,void write(byte[] b),False,,NULL
5,JarOutputStream,4,void closeEntry(),False,,NULL
5,JarOutputStream,5,void close(),False,,NULL
6,Manifest,1,Manifest(),False,,NULL
6,Manifest,2,Manifest(Attributes mainAttributes),False,,NULL
6,Manifest,3,Attributes getMainAttributes(),True,Returns the main Attributes for the Manifest.,"

getMainAttributes
public Attributes getMainAttributes()
Returns the main Attributes for the Manifest.

Returns:
the main Attributes for the Manifest


"
6,Manifest,4,void setMainAttributes(Attributes mainAttributes),False,,NULL
6,Manifest,5,Attributes getAttributes(String name),True,Returns the Attributes for the specified entry name.,"

getAttributes
public Attributes getAttributes(String name)
Returns the Attributes for the specified entry name.
 This method is defined as:
 
      return (Attributes)getEntries().get(name)
 
 Though null is a valid name, when
 getAttributes(null) is invoked on a Manifest
 obtained from a jar file, null will be returned.  While jar
 files themselves do not allow null-named attributes, it is
 possible to invoke getEntries() on a Manifest, and
 on that result, invoke put with a null key and an
 arbitrary value.  Subsequent invocations of
 getAttributes(null) will return the just-put
 value.
 
 Note that this method does not return the manifest's main attributes;
 see getMainAttributes().

Parameters:
name - entry name
Returns:
the Attributes for the specified entry name


"
6,Manifest,6,void setAttributes(Attributes attributes),False,,NULL
6,Manifest,7,void clearAttributes(String name),False,,NULL
6,Manifest,8,void clear(),True,Clears the main Attributes as well as the entries in this Manifest.,"

clear
public void clear()
Clears the main Attributes as well as the entries in this Manifest.

"
6,Manifest,9,void add(Manifest manifest),False,,NULL
6,Manifest,10,void add(Attributes attributes),False,,NULL
6,Manifest,11,"void add(String name, Attributes attributes)",False,,NULL
6,Manifest,12,"void add(String name, String value)",False,,NULL
6,Manifest,13,"void add(String name, String value, String comment)",False,,NULL
6,Manifest,14,"void add(String name, String value, String comment, String type)",False,,NULL
6,Manifest,15,"void add(String name, String value, String comment, String type, String charset)",False,,NULL
6,Manifest,16,"void add(String name, String value, String comment, String type, String charset, String path)",False,,NULL
6,Manifest,17,"void add(String name, String value, String comment, String type, String charset, String path, String source)",False,,NULL
6,Manifest,18,"void add(String name, String value, String comment, String type, String charset, String path, String source, String version)",False,,NULL
6,Manifest,19,"void add(String name, String value, String comment, String type, String charset, String path, String source, String version, String vendor)",False,,NULL
6,Manifest,20,"void add(String name, String value, String comment, String type, String charset, String path, String source, String version, String vendor, String built)",False,,NULL
7,Pack200,1,boolean add(E e),False,,NULL
7,Pack200,2,"void add(int index, E element)",False,,NULL
7,Pack200,3,boolean addAll(Collection<? extends E> c),False,,NULL
7,Pack200,4,"boolean addAll(int index, Collection<? extends E> c)",False,,NULL
7,Pack200,5,void clear(),False,,NULL
