Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DescriptorSupport,1,boolean isReadOnly(String attribute),False,,NULL
0,DescriptorSupport,2,boolean isWritable(String attribute),False,,NULL
0,DescriptorSupport,3,boolean isIs(String attribute),False,,NULL
0,DescriptorSupport,4,boolean isIsQueryable(String attribute),False,,NULL
0,DescriptorSupport,5,boolean isIsWritable(String attribute),False,,NULL
0,DescriptorSupport,6,boolean isIsReadOnly(String attribute),False,,NULL
0,DescriptorSupport,7,boolean isIsQueryable(String attribute),False,,NULL
0,DescriptorSupport,8,boolean isIsWritable(String attribute),False,,NULL
0,DescriptorSupport,9,boolean isIsReadOnly(String attribute),False,,NULL
0,DescriptorSupport,10,boolean isIsQueryable(String attribute),False,,NULL
0,DescriptorSupport,11,boolean isIsWritable(String attribute),False,,NULL
0,DescriptorSupport,12,boolean isIsReadOnly(String attribute),False,,NULL
0,DescriptorSupport,13,boolean isIsQueryable(String attribute),False,,NULL
0,DescriptorSupport,14,boolean isIsWritable(String attribute),False,,NULL
0,DescriptorSupport,15,boolean isIsReadOnly(String attribute),False,,NULL
1,ModelMBeanAttributeInfo,1,String getName(),False,,NULL
1,ModelMBeanAttributeInfo,2,String getDescription(),False,,NULL
1,ModelMBeanAttributeInfo,3,String getType(),False,,NULL
1,ModelMBeanAttributeInfo,4,boolean isReadable(),False,,NULL
1,ModelMBeanAttributeInfo,5,boolean isWritable(),False,,NULL
1,ModelMBeanAttributeInfo,6,boolean isIs(),False,,NULL
1,ModelMBeanAttributeInfo,7,String getSetMethod(),False,,NULL
1,ModelMBeanAttributeInfo,8,String getGetMethod(),False,,NULL
1,ModelMBeanAttributeInfo,9,String getAdderMethod(),False,,NULL
1,ModelMBeanAttributeInfo,10,String getRemoverMethod(),False,,NULL
1,ModelMBeanAttributeInfo,11,String getCyclerMethod(),False,,NULL
1,ModelMBeanAttributeInfo,12,String getNotifier(),False,,NULL
1,ModelMBeanAttributeInfo,13,String getDescriptor(),False,,NULL
1,ModelMBeanAttributeInfo,14,String getReferenceType(),False,,NULL
1,ModelMBeanAttributeInfo,15,String getDefaultValue(),False,,NULL
1,ModelMBeanAttributeInfo,16,String getMaxValue(),False,,NULL
1,ModelMBeanAttributeInfo,17,String getMinValue(),False,,NULL
1,ModelMBeanAttributeInfo,18,String getTimeValue(),False,,NULL
1,ModelMBeanAttributeInfo,19,String getUnitValue(),False,,NULL
1,ModelMBeanAttributeInfo,20,String getValue(),False,,NULL
1,ModelMBeanAttributeInfo,21,String getValueType(),False,,NULL
1,ModelMBeanAttributeInfo,22,String getValueModel(),False,,NULL
1,ModelMBeanAttributeInfo,23,String getValueConstraint(),False,,NULL
1,ModelMBeanAttributeInfo,24,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,25,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,26,String getValueEditor(),False,,NULL
1,ModelMBeanAttributeInfo,27,String getValueConstraints(),False,,NULL
1,ModelMBeanAttributeInfo,28,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,29,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,30,String getValueEditor(),False,,NULL
1,ModelMBeanAttributeInfo,31,String getValueConstraints(),False,,NULL
1,ModelMBeanAttributeInfo,32,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,33,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,34,String getValueEditor(),False,,NULL
1,ModelMBeanAttributeInfo,35,String getValueConstraints(),False,,NULL
1,ModelMBeanAttributeInfo,36,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,37,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,38,String getValueEditor(),False,,NULL
1,ModelMBeanAttributeInfo,39,String getValueConstraints(),False,,NULL
1,ModelMBeanAttributeInfo,40,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,41,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,42,String getValueEditor(),False,,NULL
1,ModelMBeanAttributeInfo,43,String getValueConstraints(),False,,NULL
1,ModelMBeanAttributeInfo,44,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,45,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,46,String getValueEditor(),False,,NULL
1,ModelMBeanAttributeInfo,47,String getValueConstraints(),False,,NULL
1,ModelMBeanAttributeInfo,48,String getValueFormat(),False,,NULL
1,ModelMBeanAttributeInfo,49,String getValueTranslator(),False,,NULL
1,ModelMBeanAttributeInfo,50,String getValueEditor(),False,,NULL
2,ModelMBeanConstructorInfo,1,"ModelMBeanConstructorInfo(String name, String signature, String[] exceptions)",False,,NULL
2,ModelMBeanConstructorInfo,2,String getName(),False,,NULL
2,ModelMBeanConstructorInfo,3,String getSignature(),False,,NULL
2,ModelMBeanConstructorInfo,4,String[] getExceptions(),False,,NULL
2,ModelMBeanConstructorInfo,5,boolean equals(Object obj),False,,NULL
3,ModelMBeanInfoSupport,1,ModelMBeanInfoSupport(),False,,NULL
3,ModelMBeanInfoSupport,2,"ModelMBeanInfoSupport(String name, String description)",False,,NULL
3,ModelMBeanInfoSupport,3,void setObjectName(ObjectName name),False,,NULL
3,ModelMBeanInfoSupport,4,ObjectName getObjectName(),False,,NULL
3,ModelMBeanInfoSupport,5,void setDescription(String description),False,,NULL
3,ModelMBeanInfoSupport,6,String getDescription(),False,,NULL
3,ModelMBeanInfoSupport,7,void setModelMBean(ModelMBean modelMBean),False,,NULL
3,ModelMBeanInfoSupport,8,ModelMBean getModelMBean(),False,,NULL
3,ModelMBeanInfoSupport,9,void setMBeanParameters(MBeanParameterInfo[] params),False,,NULL
3,ModelMBeanInfoSupport,10,MBeanParameterInfo[] getMBeanParameters(),False,,NULL
3,ModelMBeanInfoSupport,11,void setMBeanConstructors(MBeanConstructorInfo[] constructors),False,,NULL
3,ModelMBeanInfoSupport,12,MBeanConstructorInfo[] getMBeanConstructors(),False,,NULL
3,ModelMBeanInfoSupport,13,void setMBeanOperations(MBeanOperationInfo[] operations),False,,NULL
3,ModelMBeanInfoSupport,14,MBeanOperationInfo[] getMBeanOperations(),False,,NULL
3,ModelMBeanInfoSupport,15,void setMBeanAttributes(MBeanAttributeInfo[] attributes),False,,NULL
3,ModelMBeanInfoSupport,16,MBeanAttributeInfo[] getMBeanAttributes(),False,,NULL
3,ModelMBeanInfoSupport,17,void setNotifications(MBeanNotificationInfo[] notifications),False,,NULL
3,ModelMBeanInfoSupport,18,MBeanNotificationInfo[] getNotifications(),False,,NULL
3,ModelMBeanInfoSupport,19,"void setDefaultValues(Map<String, Object> defaultValues)",False,,NULL
3,ModelMBeanInfoSupport,20,"Map<String, Object> getDefaultValues()",False,,NULL
3,ModelMBeanInfoSupport,21,"void setDefaultValue(String attribute, Object value)",False,,NULL
3,ModelMBeanInfoSupport,22,Object getDefaultValue(String attribute),False,,NULL
3,ModelMBeanInfoSupport,23,"void setDefaultValue(String attribute, Object value)",False,,NULL
3,ModelMBeanInfoSupport,24,Object getDefaultValue(String attribute),False,,NULL
3,ModelMBeanInfoSupport,25,"void setDefaultValue(String attribute, Object value)",False,,NULL
3,ModelMBeanInfoSupport,26,Object getDefaultValue(String attribute),False,,NULL
4,ModelMBeanNotificationInfo,1,"ModelMBeanNotificationInfo(String notificationType, String description, String[] interest, String mbeanName)",False,,NULL
4,ModelMBeanNotificationInfo,2,String getNotificationType(),False,,NULL
4,ModelMBeanNotificationInfo,3,String getDescription(),False,,NULL
4,ModelMBeanNotificationInfo,4,String[] getInterest(),False,,NULL
4,ModelMBeanNotificationInfo,5,String getMBeanName(),False,,NULL
5,ModelMBeanOperationInfo,1,String getDescription(),False,,NULL
5,ModelMBeanOperationInfo,2,String getName(),False,,NULL
5,ModelMBeanOperationInfo,3,String[] getSignature(),False,,NULL
5,ModelMBeanOperationInfo,4,String[] getReturnTypes(),False,,NULL
5,ModelMBeanOperationInfo,5,String[] getParameterTypes(),False,,NULL
6,RequiredModelMBean,1,boolean isModelMBean(),False,,NULL
6,RequiredModelMBean,2,ObjectName getObjectName(),False,,NULL
6,RequiredModelMBean,3,MBeanInfo getMBeanInfo(),True,"Returns the attributes, operations, constructors and notifications that this RequiredModelMBean exposes for management.","

getMBeanInfo
public MBeanInfo getMBeanInfo()
Returns the attributes, operations, constructors and notifications
 that this RequiredModelMBean exposes for management.

Specified by:
getMBeanInfo in interface DynamicMBean
Returns:
An instance of ModelMBeanInfo allowing retrieval all
          attributes, operations, and Notifications of this MBean.


"
6,RequiredModelMBean,4,void setAttribute(Attribute attribute),True,Sets the value of a specific attribute of a named ModelMBean.,"

setAttribute
public void setAttribute(Attribute attribute)
                  throws AttributeNotFoundException,
                         InvalidAttributeValueException,
                         MBeanException,
                         ReflectionException
Sets the value of a specific attribute of a named ModelMBean.

 If the 'setMethod' field of the attribute's descriptor
 contains the name of a valid operation descriptor, then the
 method described by the operation descriptor is executed.
 In this implementation, the operation descriptor must be specified
 correctly and assigned to the modelMBeanInfo so that the 'setMethod'
 works correctly.
 The response from the method is set as the value of the attribute
 in the descriptor.

 If currencyTimeLimit is > 0, then the new value for the
 attribute is cached in the attribute descriptor's
 'value' field and the 'lastUpdatedTimeStamp' field is set to
 the current time stamp.

 If the persist field of the attribute's descriptor is not null
 then Persistence policy from the attribute descriptor is used to
 guide storing the attribute in a persistent store.
 Store the MBean if 'persistPolicy' field is:
 
 != ""never""
 = ""always""
 = ""onUpdate""
 = ""onTimer"" and now > 'lastPersistTime' + 'persistPeriod'
 = ""NoMoreOftenThan"" and now > 'lastPersistTime' +
         'persistPeriod'

 Do not store the MBean if 'persistPolicy' field is:
 
 = ""never""
 = = ""onTimer"" && now < 'lastPersistTime' + 'persistPeriod'
 = ""onUnregister""
 = = ""NoMoreOftenThan"" and now < 'lastPersistTime' +
        'persistPeriod'

The ModelMBeanInfo of the Model MBean is stored in a file.

Specified by:
setAttribute in interface DynamicMBean
Parameters:
attribute - The Attribute instance containing the name of
        the attribute to be set and the value it is to be set to.
Throws:
AttributeNotFoundException - The specified attribute is
   not accessible in the MBean.
   The following cases may result in an AttributeNotFoundException:
   
 No ModelMBeanAttributeInfo is found for the specified
          attribute.
 The ModelMBeanAttributeInfo's isWritable method returns
          'false'.

InvalidAttributeValueException - No descriptor is defined
   for the specified attribute.
MBeanException - Wraps one of the following Exceptions:
   
 An Exception thrown by the managed object's setter.
 A ServiceNotFoundException if a setMethod field is
          defined in the descriptor for the attribute and the managed
          resource is null; or if no setMethod field is defined and
          caching is not enabled for the attribute.
          Note that if there is no getMethod field either, then caching
          is automatically enabled.
 InvalidTargetObjectTypeException The 'targetType'
          field value is not 'objectReference'.
 An Exception thrown by the managed object's getter.

ReflectionException - Wraps an Exception
   thrown while trying to invoke the setter.
RuntimeOperationsException - Wraps an
   IllegalArgumentException: The attribute in parameter is
   null.
See Also:
getAttribute(java.lang.String)


"
6,RequiredModelMBean,5,Object getAttribute(String attribute),True,Returns the value of a specific attribute defined for this ModelMBean.,"

getAttribute
public Object getAttribute(String attrName)
                    throws AttributeNotFoundException,
                           MBeanException,
                           ReflectionException
Returns the value of a specific attribute defined for this
 ModelMBean.
 The last value returned by an attribute may be cached in the
 attribute's descriptor.
 The valid value will be in the 'value' field if there is one.
 If the 'currencyTimeLimit' field in the descriptor is:
 
 <0 Then the value is not cached and is never valid.
       The getter method is invoked for the attribute.
       The 'value' and 'lastUpdatedTimeStamp' fields are cleared.
 =0 Then the value is always cached and always valid.
       The 'value' field is returned. If there is no'value' field
       then the getter method is invoked for the attribute.
       The 'lastUpdatedTimeStamp' field and `value' fields are set
       to the attribute's value and the current time stamp.
 >0 Represents the number of seconds that the 'value'
       field is valid.
       The 'value' field is no longer valid when
       'lastUpdatedTimeStamp' + 'currencyTimeLimit' > Now.
   
When 'value' is valid, 'value' is returned.
When 'value' is no longer valid then the getter
            method is invoked for the attribute.
            The 'lastUpdatedTimeStamp' field and `value' fields
            are updated.


Note: because of inconsistencies in previous versions of
 this specification, it is recommended not to use negative or zero
 values for currencyTimeLimit.  To indicate that a
 cached value is never valid, omit the
 currencyTimeLimit field.  To indicate that it is
 always valid, use a very large number for this field.
If the 'getMethod' field contains the name of a valid
 operation descriptor, then the method described by the
 operation descriptor is executed.  The response from the
 method is returned as the value of the attribute.  If the
 operation fails or the returned value is not compatible with
 the declared type of the attribute, an exception will be thrown.
If no 'getMethod' field is defined then the default value of the
 attribute is returned. If the returned value is not compatible with
 the declared type of the attribute, an exception will be thrown.
The declared type of the attribute is the String returned by
 MBeanAttributeInfo.getType().  A value is compatible
 with this type if one of the following is true:
 
the value is null;
the declared name is a primitive type name (such as ""int"")
     and the value is an instance of the corresponding wrapper
     type (such as java.lang.Integer);
the name of the value's class is identical to the declared name;
the declared name can be loaded by the value's class loader and
     produces a class to which the value can be assigned.

In this implementation, in every case where the getMethod needs to
 be called, because the method is invoked through the standard ""invoke""
 method and thus needs operationInfo, an operation must be specified
 for that getMethod so that the invocation works correctly.

Specified by:
getAttribute in interface DynamicMBean
Parameters:
attrName - A String specifying the name of the
 attribute to be retrieved. It must match the name of a
 ModelMBeanAttributeInfo.
Returns:
The value of the retrieved attribute from the
 descriptor 'value' field or from the invocation of the
 operation in the 'getMethod' field of the descriptor.
Throws:
AttributeNotFoundException - The specified attribute is
    not accessible in the MBean.
    The following cases may result in an AttributeNotFoundException:
    
 No ModelMBeanInfo was found for the Model MBean.
 No ModelMBeanAttributeInfo was found for the specified
           attribute name.
 The ModelMBeanAttributeInfo isReadable method returns
           'false'.

MBeanException - Wraps one of the following Exceptions:
    
 InvalidAttributeValueException: A wrong value type
           was received from the attribute's getter method or
           no 'getMethod' field defined in the descriptor for
           the attribute and no default value exists.
 ServiceNotFoundException: No
           ModelMBeanOperationInfo defined for the attribute's
           getter method or no descriptor associated with the
           ModelMBeanOperationInfo or the managed resource is
           null.
 InvalidTargetObjectTypeException The 'targetType'
           field value is not 'objectReference'.
 An Exception thrown by the managed object's getter.

ReflectionException - Wraps an Exception
    thrown while trying to invoke the getter.
RuntimeOperationsException - Wraps an
    IllegalArgumentException: The attribute name in
    parameter is null.
See Also:
setAttribute(javax.management.Attribute)


"
