Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,Binder,1,"void setProperty(String name, Object value)",True,Set the particular property in the underlying implementation of Binder.,"

setProperty
public abstract void setProperty(String name,
                                 Object value)
                          throws PropertyException
Set the particular property in the underlying implementation of
 Binder.  This method can only be used to set one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to set an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to be set. This value can either
              be specified using one of the constant fields or a user
              supplied string.
value - the value of the property to be set
Throws:
PropertyException - when there is an error processing the given
                            property or value
IllegalArgumentException - If the name parameter is null


"
0,Binder,2,Object getProperty(String name),True,Get the particular property in the underlying implementation of Binder.,"

getProperty
public abstract Object getProperty(String name)
                            throws PropertyException
Get the particular property in the underlying implementation of
 Binder.  This method can only
 be used to get one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to get an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to retrieve
Returns:
the value of the requested property
Throws:
PropertyException - when there is an error retrieving the given property or value
      property name
IllegalArgumentException - If the name parameter is null


"
0,Binder,3,"void setProperty(String name, Object value)",True,Set the particular property in the underlying implementation of Binder.,"

setProperty
public abstract void setProperty(String name,
                                 Object value)
                          throws PropertyException
Set the particular property in the underlying implementation of
 Binder.  This method can only be used to set one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to set an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to be set. This value can either
              be specified using one of the constant fields or a user
              supplied string.
value - the value of the property to be set
Throws:
PropertyException - when there is an error processing the given
                            property or value
IllegalArgumentException - If the name parameter is null


"
0,Binder,4,Object getProperty(String name),True,Get the particular property in the underlying implementation of Binder.,"

getProperty
public abstract Object getProperty(String name)
                            throws PropertyException
Get the particular property in the underlying implementation of
 Binder.  This method can only
 be used to get one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to get an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to retrieve
Returns:
the value of the requested property
Throws:
PropertyException - when there is an error retrieving the given property or value
      property name
IllegalArgumentException - If the name parameter is null


"
0,Binder,5,"void setProperty(String name, Object value)",True,Set the particular property in the underlying implementation of Binder.,"

setProperty
public abstract void setProperty(String name,
                                 Object value)
                          throws PropertyException
Set the particular property in the underlying implementation of
 Binder.  This method can only be used to set one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to set an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to be set. This value can either
              be specified using one of the constant fields or a user
              supplied string.
value - the value of the property to be set
Throws:
PropertyException - when there is an error processing the given
                            property or value
IllegalArgumentException - If the name parameter is null


"
0,Binder,6,Object getProperty(String name),True,Get the particular property in the underlying implementation of Binder.,"

getProperty
public abstract Object getProperty(String name)
                            throws PropertyException
Get the particular property in the underlying implementation of
 Binder.  This method can only
 be used to get one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to get an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to retrieve
Returns:
the value of the requested property
Throws:
PropertyException - when there is an error retrieving the given property or value
      property name
IllegalArgumentException - If the name parameter is null


"
0,Binder,7,"void setProperty(String name, Object value)",True,Set the particular property in the underlying implementation of Binder.,"

setProperty
public abstract void setProperty(String name,
                                 Object value)
                          throws PropertyException
Set the particular property in the underlying implementation of
 Binder.  This method can only be used to set one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to set an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to be set. This value can either
              be specified using one of the constant fields or a user
              supplied string.
value - the value of the property to be set
Throws:
PropertyException - when there is an error processing the given
                            property or value
IllegalArgumentException - If the name parameter is null


"
0,Binder,8,Object getProperty(String name),True,Get the particular property in the underlying implementation of Binder.,"

getProperty
public abstract Object getProperty(String name)
                            throws PropertyException
Get the particular property in the underlying implementation of
 Binder.  This method can only
 be used to get one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to get an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to retrieve
Returns:
the value of the requested property
Throws:
PropertyException - when there is an error retrieving the given property or value
      property name
IllegalArgumentException - If the name parameter is null


"
0,Binder,9,"void setProperty(String name, Object value)",True,Set the particular property in the underlying implementation of Binder.,"

setProperty
public abstract void setProperty(String name,
                                 Object value)
                          throws PropertyException
Set the particular property in the underlying implementation of
 Binder.  This method can only be used to set one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to set an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to be set. This value can either
              be specified using one of the constant fields or a user
              supplied string.
value - the value of the property to be set
Throws:
PropertyException - when there is an error processing the given
                            property or value
IllegalArgumentException - If the name parameter is null


"
0,Binder,10,Object getProperty(String name),True,Get the particular property in the underlying implementation of Binder.,"

getProperty
public abstract Object getProperty(String name)
                            throws PropertyException
Get the particular property in the underlying implementation of
 Binder.  This method can only
 be used to get one of
 the standard JAXB defined unmarshal/marshal properties
 or a provider specific property for binder, unmarshal or marshal.
 Attempting to get an undefined property will result in
 a PropertyException being thrown.  See
 Supported Unmarshal Properties
 and
 Supported Marshal Properties.

Parameters:
name - the name of the property to retrieve
Returns:
the value of the requested property
Throws:
PropertyException - when there is an error retrieving the given property or value
      property name
IllegalArgumentException - If the name parameter is null


"
1,DatatypeConverter,1,parseDateTime(String s),False,,NULL
1,DatatypeConverter,2,parseDuration(String s),False,,NULL
1,DatatypeConverter,3,parseTime(String s),False,,NULL
1,DatatypeConverter,4,printDateTime(Date date),False,,NULL
1,DatatypeConverter,5,printDuration(Duration duration),False,,NULL
1,DatatypeConverter,6,printTime(Duration duration),False,,NULL
1,DatatypeConverter,7,parseBase64Binary(String s),False,,NULL
1,DatatypeConverter,8,printBase64Binary(byte[] bytes),False,,NULL
1,DatatypeConverter,9,parseHexBinary(String s),False,,NULL
1,DatatypeConverter,10,printHexBinary(byte[] bytes),False,,NULL
2,JAXB,1,JAXBContext createJAXBContext(Class... classes),False,,NULL
2,JAXB,2,Unmarshaller createUnmarshaller(),False,,NULL
2,JAXB,3,Marshaller createMarshaller(),False,,NULL
2,JAXB,4,Validator createValidator(),False,,NULL
2,JAXB,5,boolean isBound(Class<?> clazz),False,,NULL
3,JAXBContext,1,JAXBContext createNewInstance(Class<?>... classes),False,,NULL
3,JAXBContext,2,JAXBContext createContext(Class<?>... classes),False,,NULL
3,JAXBContext,3,Unmarshaller createUnmarshaller(),True,Create an Unmarshaller object that can be used to convert XML data into a java content tree.,"

createUnmarshaller
public abstract Unmarshaller createUnmarshaller()
                                         throws JAXBException
Create an Unmarshaller object that can be used to convert XML
 data into a java content tree.

Returns:
an Unmarshaller object
Throws:
JAXBException - if an error was encountered while creating the
                       Unmarshaller object


"
3,JAXBContext,4,Marshaller createMarshaller(),True,Create a Marshaller object that can be used to convert a java content tree into XML data.,"

createMarshaller
public abstract Marshaller createMarshaller()
                                     throws JAXBException
Create a Marshaller object that can be used to convert a
 java content tree into XML data.

Returns:
a Marshaller object
Throws:
JAXBException - if an error was encountered while creating the
                       Marshaller object


"
3,JAXBContext,5,Validator createValidator(),True,Deprecated. since JAXB2.0,"

createValidator
public abstract Validator createValidator()
                                   throws JAXBException
Deprecated. since JAXB2.0
Validator has been made optional and deprecated in JAXB 2.0.  Please
 refer to the javadoc for Validator for more detail.
 
 Create a Validator object that can be used to validate a
 java content tree against its source schema.

Returns:
a Validator object
Throws:
JAXBException - if an error was encountered while creating the
                       Validator object


"
4,JAXBElement,1,boolean equals(Object obj),False,,NULL
4,JAXBElement,2,int hashCode(),False,,NULL
4,JAXBElement,3,String toString(),False,,NULL
4,JAXBElement,4,E getValue(),False,,NULL
4,JAXBElement,5,void setValue(E value),False,,NULL
5,JAXBElement.GlobalScope,1,boolean equals(Object obj),False,,NULL
5,JAXBElement.GlobalScope,2,int hashCode(),False,,NULL
5,JAXBElement.GlobalScope,3,String toString(),False,,NULL
5,JAXBElement.GlobalScope,4,E getValue(),False,,NULL
5,JAXBElement.GlobalScope,5,void setValue(E value),False,,NULL
6,JAXBIntrospector,1,"<T> T unmarshal(Source source, Class<T> resultClass)",False,,NULL
6,JAXBIntrospector,2,"<T> T unmarshal(Source source, Class<T> resultClass, Unmarshaller unmarshaller)",False,,NULL
6,JAXBIntrospector,3,"<T> T unmarshal(Source source, Class<T> resultClass, Unmarshaller unmarshaller, Validator validator)",False,,NULL
6,JAXBIntrospector,4,"<T> T unmarshal(Source source, Class<T> resultClass, Validator validator)",False,,NULL
6,JAXBIntrospector,5,"<T> T unmarshal(Source source, Class<T> resultClass, Validator validator, Unmarshaller unmarshaller)",False,,NULL
7,JAXBPermission,1,boolean equals(Object obj),False,,NULL
7,JAXBPermission,2,int hashCode(),False,,NULL
7,JAXBPermission,3,String getActions(),False,,NULL
7,JAXBPermission,4,String getName(),False,,NULL
7,JAXBPermission,5,String toString(),False,,NULL
8,Marshaller.Listener,1,void beforeMarshal(Object source),True,Callback method invoked before marshalling from source to XML.,"

beforeMarshal
public void beforeMarshal(Object source)

 Callback method invoked before marshalling from source to XML.
 

 This method is invoked just before marshalling process starts to marshal source.
 Note that if the class of source defines its own beforeMarshal method,
 the class specific callback method is invoked just before this method is invoked.

Parameters:
source - instance of JAXB mapped class prior to marshalling from it.


"
8,Marshaller.Listener,2,void afterMarshal(Object source),True,Callback method invoked after marshalling source to XML.,"

afterMarshal
public void afterMarshal(Object source)

 Callback method invoked after marshalling source to XML.
 

 This method is invoked after source and all its descendants have been marshalled.
 Note that if the class of source defines its own afterMarshal method,
 the class specific callback method is invoked just before this method is invoked.

Parameters:
source - instance of JAXB mapped class after marshalling it.


"
8,Marshaller.Listener,3,"void beforeMarshal(Object source, Object parent)",False,,NULL
8,Marshaller.Listener,4,"void afterMarshal(Object source, Object parent)",False,,NULL
8,Marshaller.Listener,5,"void beforeMarshal(Object source, Object parent, int index)",False,,NULL
9,SchemaOutputResolver,1,"abstract Output resolveOutput(String namespaceUri, String suggestedFileName)",False,,NULL
9,SchemaOutputResolver,2,"abstract boolean writeSchema(Schema schema, Output output)",False,,NULL
9,SchemaOutputResolver,3,"abstract boolean writeSchema(Schema schema, String namespaceUri, Output output)",False,,NULL
9,SchemaOutputResolver,4,"abstract boolean writeSchema(Schema schema, String namespaceUri, String suggestedFileName, Output output)",False,,NULL
9,SchemaOutputResolver,5,"abstract boolean writeSchema(Schema schema, String namespaceUri, String suggestedFileName, String encoding, Output output)",False,,NULL
10,Unmarshaller.Listener,1,"void beforeUnmarshal(Object target, Object parent)",True,Callback method invoked before unmarshalling into target.,"

beforeUnmarshal
public void beforeUnmarshal(Object target,
                            Object parent)

 Callback method invoked before unmarshalling into target.
 

 This method is invoked immediately after target was created and
 before the unmarshalling of this object begins. Note that
 if the class of target defines its own beforeUnmarshal method,
 the class specific callback method is invoked before this method is invoked.

Parameters:
target - non-null instance of JAXB mapped class prior to unmarshalling into it.
parent - instance of JAXB mapped class that will eventually reference target.
               null when target is root element.


"
10,Unmarshaller.Listener,2,"void afterUnmarshal(Object target, Object parent)",True,Callback method invoked after unmarshalling XML data into target.,"

afterUnmarshal
public void afterUnmarshal(Object target,
                           Object parent)

 Callback method invoked after unmarshalling XML data into target.
 

 This method is invoked after all the properties (except IDREF) are unmarshalled into target,
 but before target is set into its parent object.
 Note that if the class of target defines its own afterUnmarshal method,
 the class specific callback method is invoked before this method is invoked.

Parameters:
target - non-null instance of JAXB mapped class prior to unmarshalling into it.
parent - instance of JAXB mapped class that will reference target.
               null when target is root element.


"
10,Unmarshaller.Listener,3,void onUnmarshalError(UnmarshalException e),False,,NULL
10,Unmarshaller.Listener,4,void onUnmarshalWarning(UnmarshalWarning warning),False,,NULL
10,Unmarshaller.Listener,5,void onUnmarshalRoot(Object root),False,,NULL
