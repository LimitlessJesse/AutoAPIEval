Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DSAGenParameterSpec,1,"DSAGenParameterSpec(int keySize, int certainty)",False,,NULL
0,DSAGenParameterSpec,2,int getKeySize(),False,,NULL
0,DSAGenParameterSpec,3,int getCertainty(),False,,NULL
0,DSAGenParameterSpec,4,boolean equals(Object obj),False,,NULL
0,DSAGenParameterSpec,5,int hashCode(),False,,NULL
1,DSAParameterSpec,1,"DSAParameterSpec(BigInteger p, BigInteger q, BigInteger g)",False,,NULL
1,DSAParameterSpec,2,BigInteger getG(),True,Returns the base g.,"

getG
public BigInteger getG()
Returns the base g.

Specified by:
getG in interface DSAParams
Returns:
the base g.


"
1,DSAParameterSpec,3,BigInteger getP(),True,Returns the prime p.,"

getP
public BigInteger getP()
Returns the prime p.

Specified by:
getP in interface DSAParams
Returns:
the prime p.


"
1,DSAParameterSpec,4,BigInteger getQ(),True,Returns the sub-prime q.,"

getQ
public BigInteger getQ()
Returns the sub-prime q.

Specified by:
getQ in interface DSAParams
Returns:
the sub-prime q.


"
1,DSAParameterSpec,5,int getL(),False,,NULL
1,DSAParameterSpec,6,boolean equals(Object obj),False,,NULL
1,DSAParameterSpec,7,int hashCode(),False,,NULL
1,DSAParameterSpec,8,String toString(),False,,NULL
2,DSAPrivateKeySpec,1,"DSAPrivateKeySpec(BigInteger x, BigInteger p, BigInteger q, BigInteger g)",False,,NULL
2,DSAPrivateKeySpec,2,BigInteger getX(),True,Returns the private key x.,"

getX
public BigInteger getX()
Returns the private key x.

Returns:
the private key x.


"
2,DSAPrivateKeySpec,3,BigInteger getP(),True,Returns the prime p.,"

getP
public BigInteger getP()
Returns the prime p.

Returns:
the prime p.


"
2,DSAPrivateKeySpec,4,BigInteger getQ(),True,Returns the sub-prime q.,"

getQ
public BigInteger getQ()
Returns the sub-prime q.

Returns:
the sub-prime q.


"
2,DSAPrivateKeySpec,5,BigInteger getG(),True,Returns the base g.,"

getG
public BigInteger getG()
Returns the base g.

Returns:
the base g.


"
3,DSAPublicKeySpec,1,"DSAPublicKeySpec(BigInteger s, BigInteger p, BigInteger q, BigInteger g)",False,,NULL
3,DSAPublicKeySpec,2,BigInteger getG(),True,Returns the base g.,"

getG
public BigInteger getG()
Returns the base g.

Returns:
the base g.


"
3,DSAPublicKeySpec,3,BigInteger getP(),True,Returns the prime p.,"

getP
public BigInteger getP()
Returns the prime p.

Returns:
the prime p.


"
3,DSAPublicKeySpec,4,BigInteger getQ(),True,Returns the sub-prime q.,"

getQ
public BigInteger getQ()
Returns the sub-prime q.

Returns:
the sub-prime q.


"
3,DSAPublicKeySpec,5,BigInteger getS(),False,,NULL
4,ECFieldF2m,1,"ECFieldF2m(int m, int n)",False,,NULL
4,ECFieldF2m,2,int getM(),True,Returns the value m of this characteristic 2 finite field.,"

getM
public int getM()
Returns the value m of this characteristic
 2 finite field.

Returns:
m with 2^m being the
 number of elements.


"
4,ECFieldF2m,3,int getN(),False,,NULL
4,ECFieldF2m,4,ECFieldF2m getField(),False,,NULL
4,ECFieldF2m,5,ECFieldF2mParams getParams(),False,,NULL
5,ECFieldFp,1,ECFieldFp(BigInteger p),False,,NULL
5,ECFieldFp,2,BigInteger getP(),True,Returns the prime p of this prime finite field.,"

getP
public BigInteger getP()
Returns the prime p of this prime finite field.

Returns:
the prime.


"
5,ECFieldFp,3,ECFieldFp getField(),False,,NULL
5,ECFieldFp,4,ECFieldFp getField(BigInteger p),False,,NULL
5,ECFieldFp,5,ECFieldFp getField(int bits),False,,NULL
6,ECGenParameterSpec,1,ECGenParameterSpec(String algorithm),False,,NULL
6,ECGenParameterSpec,2,String getAlgorithm(),False,,NULL
6,ECGenParameterSpec,3,ECGenParameterSpec(String algorithm),False,,NULL
6,ECGenParameterSpec,4,String getAlgorithm(),False,,NULL
6,ECGenParameterSpec,5,ECGenParameterSpec(String algorithm),False,,NULL
6,ECGenParameterSpec,6,String getAlgorithm(),False,,NULL
6,ECGenParameterSpec,7,ECGenParameterSpec(String algorithm),False,,NULL
6,ECGenParameterSpec,8,String getAlgorithm(),False,,NULL
6,ECGenParameterSpec,9,ECGenParameterSpec(String algorithm),False,,NULL
6,ECGenParameterSpec,10,String getAlgorithm(),False,,NULL
7,ECParameterSpec,1,"ECParameterSpec(BigInteger p, BigInteger a, BigInteger b, BigInteger g, BigInteger n, BigInteger h)",False,,NULL
7,ECParameterSpec,2,BigInteger getA(),False,,NULL
7,ECParameterSpec,3,BigInteger getB(),False,,NULL
7,ECParameterSpec,4,BigInteger getG(),False,,NULL
7,ECParameterSpec,5,BigInteger getN(),False,,NULL
7,ECParameterSpec,6,BigInteger getH(),False,,NULL
7,ECParameterSpec,7,BigInteger getP(),False,,NULL
7,ECParameterSpec,8,ECParameterSpec getParams(),False,,NULL
7,ECParameterSpec,9,ECParameterSpec getSpec(),False,,NULL
7,ECParameterSpec,10,ECParameterSpec getParameterSpec(),False,,NULL
8,ECPoint,1,ECPoint(byte[] w),False,,NULL
8,ECPoint,2,"ECPoint(BigInteger x, BigInteger y)",False,,NULL
8,ECPoint,3,"ECPoint(ECFieldElement x, ECFieldElement y)",False,,NULL
8,ECPoint,4,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity)",False,,NULL
8,ECPoint,5,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid)",False,,NULL
8,ECPoint,6,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid, boolean isInfinityOrValid)",False,,NULL
8,ECPoint,7,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid, boolean isInfinityOrValid, boolean isValidOrInfinity)",False,,NULL
8,ECPoint,8,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid, boolean isInfinityOrValid, boolean isValidOrInfinity, boolean isInfinityOrValidOrValid)",False,,NULL
8,ECPoint,9,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid, boolean isInfinityOrValid, boolean isValidOrInfinity, boolean isInfinityOrValidOrValid, boolean isValidOrInfinityOrValidOrInfinity)",False,,NULL
8,ECPoint,10,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid, boolean isInfinityOrValid, boolean isValidOrInfinity, boolean isInfinityOrValidOrValid, boolean isValidOrInfinityOrValidOrInfinity, boolean isInfinityOrValidOrValidOrInfinityOrValidOrInfinity)",False,,NULL
8,ECPoint,11,"ECPoint(ECFieldElement x, ECFieldElement y, boolean isInfinity, boolean isValid, boolean isInfinityOrValid, boolean isValidOrInfinity, boolean isInfinityOrValidOrValid, boolean isValidOrInfinityOrValidOrInfinity, boolean isInfinityOrValidOrValidOrInfinityOrValidOrInfinity, boolean isValidOrInfinityOrValidOrInfinityOrValidOrValidOrInfinityOrValidOrInfinityOrValidOrInfinity)",False,,NULL
9,ECPrivateKeySpec,1,"ECPrivateKeySpec(BigInteger s, ECParameterSpec spec)",False,,NULL
9,ECPrivateKeySpec,2,BigInteger getS(),True,Returns the private value S.,"

getS
public BigInteger getS()
Returns the private value S.

Returns:
the private value S.


"
9,ECPrivateKeySpec,3,ECParameterSpec getParams(),True,Returns the associated elliptic curve domain parameters.,"

getParams
public ECParameterSpec getParams()
Returns the associated elliptic curve domain
 parameters.

Returns:
the EC domain parameters.


"
9,ECPrivateKeySpec,4,boolean equals(Object obj),False,,NULL
9,ECPrivateKeySpec,5,int hashCode(),False,,NULL
10,ECPublicKeySpec,1,"ECPublicKeySpec(ECPoint w, ECParameterSpec spec)",False,,NULL
10,ECPublicKeySpec,2,ECPoint getW(),True,Returns the public point W.,"

getW
public ECPoint getW()
Returns the public point W.

Returns:
the public point W.


"
10,ECPublicKeySpec,3,ECParameterSpec getParams(),True,Returns the associated elliptic curve domain parameters.,"

getParams
public ECParameterSpec getParams()
Returns the associated elliptic curve domain
 parameters.

Returns:
the EC domain parameters.


"
10,ECPublicKeySpec,4,boolean equals(Object obj),False,,NULL
10,ECPublicKeySpec,5,int hashCode(),False,,NULL
11,EllipticCurve,1,"EllipticCurveSpec(BigInteger a, BigInteger b, BigInteger field)",False,,NULL
11,EllipticCurve,2,BigInteger getA(),True,Returns the first coefficient a of the elliptic curve.,"

getA
public BigInteger getA()
Returns the first coefficient a of the
 elliptic curve.

Returns:
the first coefficient a.


"
11,EllipticCurve,3,BigInteger getB(),True,Returns the second coefficient b of the elliptic curve.,"

getB
public BigInteger getB()
Returns the second coefficient b of the
 elliptic curve.

Returns:
the second coefficient b.


"
11,EllipticCurve,4,BigInteger getField(),False,,NULL
11,EllipticCurve,5,boolean equals(Object obj),True,Compares this elliptic curve for equality with the specified object.,"

equals
public boolean equals(Object obj)
Compares this elliptic curve for equality with the
 specified object.

Overrides:
equals in class Object
Parameters:
obj - the object to be compared.
Returns:
true if obj is an instance of
 EllipticCurve and the field, A, and B match, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
11,EllipticCurve,6,int hashCode(),True,Returns a hash code value for this elliptic curve.,"

hashCode
public int hashCode()
Returns a hash code value for this elliptic curve.

Overrides:
hashCode in class Object
Returns:
a hash code value computed from the hash codes of the field, A,
 and B, as follows:
 
     (field.hashCode() << 6) + (a.hashCode() << 4) + (b.hashCode() << 2)
 
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
12,EncodedKeySpec,1,EncodedKeySpec(byte[] encodedKey),False,,NULL
12,EncodedKeySpec,2,byte[] getEncoded(),True,Returns the encoded key.,"

getEncoded
public byte[] getEncoded()
Returns the encoded key.

Returns:
the encoded key. Returns a new array each time
 this method is called.


"
12,EncodedKeySpec,3,String getFormat(),True,Returns the name of the encoding format associated with this key specification.,"

getFormat
public abstract String getFormat()
Returns the name of the encoding format associated with this
 key specification.

 If the opaque representation of a key
 (see Key) can be transformed
 (see KeyFactory)
 into this key specification (or a subclass of it),
 getFormat called
 on the opaque key returns the same value as the
 getFormat method
 of this key specification.

Returns:
a string representation of the encoding format.


"
12,EncodedKeySpec,4,boolean isEncrypted(),False,,NULL
12,EncodedKeySpec,5,void setEncoded(byte[] encodedKey),False,,NULL
12,EncodedKeySpec,6,void setFormat(String format),False,,NULL
12,EncodedKeySpec,7,void setEncrypted(boolean isEncrypted),False,,NULL
13,MGF1ParameterSpec,1,"MGF1ParameterSpec(int hashAlgorithm, byte[] salt)",False,,NULL
13,MGF1ParameterSpec,2,int getHashAlgorithm(),False,,NULL
13,MGF1ParameterSpec,3,byte[] getSalt(),False,,NULL
13,MGF1ParameterSpec,4,void setHashAlgorithm(int hashAlgorithm),False,,NULL
13,MGF1ParameterSpec,5,void setSalt(byte[] salt),False,,NULL
14,PKCS8EncodedKeySpec,1,PKCS8EncodedKeySpec(byte[] encoded),False,,NULL
14,PKCS8EncodedKeySpec,2,byte[] getEncoded(),True,"Returns the key bytes, encoded according to the PKCS #8 standard.","

getEncoded
public byte[] getEncoded()
Returns the key bytes, encoded according to the PKCS #8 standard.

Overrides:
getEncoded in class EncodedKeySpec
Returns:
the PKCS #8 encoding of the key. Returns a new array
 each time this method is called.


"
14,PKCS8EncodedKeySpec,3,String getFormat(),True,Returns the name of the encoding format associated with this key specification.,"

getFormat
public final String getFormat()
Returns the name of the encoding format associated with this
 key specification.

Specified by:
getFormat in class EncodedKeySpec
Returns:
the string ""PKCS#8"".


"
14,PKCS8EncodedKeySpec,4,AlgorithmParameterSpec getParams(),False,,NULL
14,PKCS8EncodedKeySpec,5,"KeySpec getKeySpec(PrivateKey key, Class keySpec)",False,,NULL
15,PSSParameterSpec,1,"PSSParameterSpec(int saltLength, int trailingDigitCount)",False,,NULL
15,PSSParameterSpec,2,int getSaltLength(),True,Returns the salt length in bytes.,"

getSaltLength
public int getSaltLength()
Returns the salt length in bytes.

Returns:
the salt length


"
15,PSSParameterSpec,3,int getTrailingDigitCount(),False,,NULL
15,PSSParameterSpec,4,boolean equals(Object obj),False,,NULL
15,PSSParameterSpec,5,int hashCode(),False,,NULL
16,RSAKeyGenParameterSpec,1,BigInteger getPublicExponent(),True,Returns the public-exponent value.,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public-exponent value.

Returns:
the public-exponent value.


"
16,RSAKeyGenParameterSpec,2,int getKeysize(),True,Returns the keysize.,"

getKeysize
public int getKeysize()
Returns the keysize.

Returns:
the keysize.


"
16,RSAKeyGenParameterSpec,3,BigInteger getPrimeP(),False,,NULL
16,RSAKeyGenParameterSpec,4,BigInteger getPrimeQ(),False,,NULL
16,RSAKeyGenParameterSpec,5,BigInteger getPrimeExponentP(),False,,NULL
16,RSAKeyGenParameterSpec,6,BigInteger getPrimeExponentQ(),False,,NULL
16,RSAKeyGenParameterSpec,7,BigInteger getCrtCoefficient(),False,,NULL
16,RSAKeyGenParameterSpec,8,BigInteger getPrimeP(),False,,NULL
16,RSAKeyGenParameterSpec,9,BigInteger getPrimeQ(),False,,NULL
16,RSAKeyGenParameterSpec,10,BigInteger getPrimeExponentP(),False,,NULL
16,RSAKeyGenParameterSpec,11,BigInteger getPrimeExponentQ(),False,,NULL
16,RSAKeyGenParameterSpec,12,BigInteger getCrtCoefficient(),False,,NULL
17,RSAMultiPrimePrivateCrtKeySpec,1,"RSAMultiPrimePrivateCrtKeySpec(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger primeP, BigInteger primeQ, BigInteger primeExponentP, BigInteger primeExponentQ, BigInteger crtCoefficient)",False,,NULL
17,RSAMultiPrimePrivateCrtKeySpec,2,BigInteger getModulus(),False,,NULL
17,RSAMultiPrimePrivateCrtKeySpec,3,BigInteger getPublicExponent(),True,Returns the public exponent.,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public exponent.

Returns:
the public exponent.


"
17,RSAMultiPrimePrivateCrtKeySpec,4,BigInteger getPrivateExponent(),False,,NULL
17,RSAMultiPrimePrivateCrtKeySpec,5,BigInteger getPrimeP(),True,Returns the primeP.,"

getPrimeP
public BigInteger getPrimeP()
Returns the primeP.

Returns:
the primeP.


"
17,RSAMultiPrimePrivateCrtKeySpec,6,BigInteger getPrimeQ(),True,Returns the primeQ.,"

getPrimeQ
public BigInteger getPrimeQ()
Returns the primeQ.

Returns:
the primeQ.


"
17,RSAMultiPrimePrivateCrtKeySpec,7,BigInteger getPrimeExponentP(),True,Returns the primeExponentP.,"

getPrimeExponentP
public BigInteger getPrimeExponentP()
Returns the primeExponentP.

Returns:
the primeExponentP.


"
17,RSAMultiPrimePrivateCrtKeySpec,8,BigInteger getPrimeExponentQ(),True,Returns the primeExponentQ.,"

getPrimeExponentQ
public BigInteger getPrimeExponentQ()
Returns the primeExponentQ.

Returns:
the primeExponentQ.


"
17,RSAMultiPrimePrivateCrtKeySpec,9,BigInteger getCrtCoefficient(),True,Returns the crtCoefficient.,"

getCrtCoefficient
public BigInteger getCrtCoefficient()
Returns the crtCoefficient.

Returns:
the crtCoefficient.


"
18,RSAOtherPrimeInfo,1,BigInteger getCoefficient(),False,,NULL
18,RSAOtherPrimeInfo,2,BigInteger getExponent(),True,Returns the prime's exponent.,"

getExponent
public final BigInteger getExponent()
Returns the prime's exponent.

Returns:
the primeExponent.


"
18,RSAOtherPrimeInfo,3,BigInteger getPrime(),True,Returns the prime.,"

getPrime
public final BigInteger getPrime()
Returns the prime.

Returns:
the prime.


"
18,RSAOtherPrimeInfo,4,BigInteger getPrimitive(),False,,NULL
18,RSAOtherPrimeInfo,5,BigInteger getRM(),False,,NULL
19,RSAPrivateCrtKeySpec,1,"RSAPrivateCrtKeySpec(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger primeP, BigInteger primeQ, BigInteger primeExponentP, BigInteger primeExponentQ, BigInteger crtCoefficient)",False,,NULL
19,RSAPrivateCrtKeySpec,2,BigInteger getModulus(),False,,NULL
19,RSAPrivateCrtKeySpec,3,BigInteger getPublicExponent(),True,Returns the public exponent.,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public exponent.

Returns:
the public exponent


"
19,RSAPrivateCrtKeySpec,4,BigInteger getPrivateExponent(),False,,NULL
19,RSAPrivateCrtKeySpec,5,BigInteger getPrimeP(),True,Returns the primeP.,"

getPrimeP
public BigInteger getPrimeP()
Returns the primeP.

Returns:
the primeP


"
19,RSAPrivateCrtKeySpec,6,BigInteger getPrimeQ(),True,Returns the primeQ.,"

getPrimeQ
public BigInteger getPrimeQ()
Returns the primeQ.

Returns:
the primeQ


"
19,RSAPrivateCrtKeySpec,7,BigInteger getPrimeExponentP(),True,Returns the primeExponentP.,"

getPrimeExponentP
public BigInteger getPrimeExponentP()
Returns the primeExponentP.

Returns:
the primeExponentP


"
19,RSAPrivateCrtKeySpec,8,BigInteger getPrimeExponentQ(),True,Returns the primeExponentQ.,"

getPrimeExponentQ
public BigInteger getPrimeExponentQ()
Returns the primeExponentQ.

Returns:
the primeExponentQ


"
19,RSAPrivateCrtKeySpec,9,BigInteger getCrtCoefficient(),True,Returns the crtCoefficient.,"

getCrtCoefficient
public BigInteger getCrtCoefficient()
Returns the crtCoefficient.

Returns:
the crtCoefficient


"
20,RSAPrivateKeySpec,1,"RSAPrivateKeySpec(BigInteger modulus, BigInteger privateExponent)",False,,NULL
20,RSAPrivateKeySpec,2,BigInteger getModulus(),True,Returns the modulus.,"

getModulus
public BigInteger getModulus()
Returns the modulus.

Returns:
the modulus


"
20,RSAPrivateKeySpec,3,BigInteger getPrivateExponent(),True,Returns the private exponent.,"

getPrivateExponent
public BigInteger getPrivateExponent()
Returns the private exponent.

Returns:
the private exponent


"
20,RSAPrivateKeySpec,4,int hashCode(),False,,NULL
20,RSAPrivateKeySpec,5,boolean equals(Object obj),False,,NULL
21,RSAPublicKeySpec,1,"RSAPublicKeySpec(BigInteger modulus, BigInteger publicExponent)",False,,NULL
21,RSAPublicKeySpec,2,BigInteger getModulus(),True,Returns the modulus.,"

getModulus
public BigInteger getModulus()
Returns the modulus.

Returns:
the modulus


"
21,RSAPublicKeySpec,3,BigInteger getPublicExponent(),True,Returns the public exponent.,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public exponent.

Returns:
the public exponent


"
21,RSAPublicKeySpec,4,int hashCode(),False,,NULL
21,RSAPublicKeySpec,5,boolean equals(Object obj),False,,NULL
22,X509EncodedKeySpec,1,X509EncodedKeySpec(byte[] encoded),False,,NULL
22,X509EncodedKeySpec,2,byte[] getEncoded(),True,"Returns the key bytes, encoded according to the X.509 standard.","

getEncoded
public byte[] getEncoded()
Returns the key bytes, encoded according to the X.509 standard.

Overrides:
getEncoded in class EncodedKeySpec
Returns:
the X.509 encoding of the key. Returns a new array
 each time this method is called.


"
22,X509EncodedKeySpec,3,String getFormat(),True,Returns the name of the encoding format associated with this key specification.,"

getFormat
public final String getFormat()
Returns the name of the encoding format associated with this
 key specification.

Specified by:
getFormat in class EncodedKeySpec
Returns:
the string ""X.509"".


"
22,X509EncodedKeySpec,4,KeySpec getKeySpec(),False,,NULL
22,X509EncodedKeySpec,5,PublicKey getPublicKey(),False,,NULL
22,X509EncodedKeySpec,6,PrivateKey getPrivateKey(),False,,NULL
22,X509EncodedKeySpec,7,AlgorithmParameterSpec getParams(),False,,NULL
22,X509EncodedKeySpec,8,AlgorithmParameterSpec getAlgorithmParameters(),False,,NULL
22,X509EncodedKeySpec,9,AlgorithmParameterSpec getAlgorithmParameterSpec(),False,,NULL
22,X509EncodedKeySpec,10,AlgorithmParameterSpec getAlgorithmParameterSpecs(),False,,NULL
22,X509EncodedKeySpec,11,AlgorithmParameterSpec getAlgorithmParameterSpecification(),False,,NULL
22,X509EncodedKeySpec,12,AlgorithmParameterSpec getAlgorithmParameterSpecifications(),False,,NULL
22,X509EncodedKeySpec,13,AlgorithmParameterSpec getAlgorithmParameterSpecification(),False,,NULL
22,X509EncodedKeySpec,14,AlgorithmParameterSpec getAlgorithmParameterSpecifications(),False,,NULL
22,X509EncodedKeySpec,15,AlgorithmParameterSpec getAlgorithmParameterSpecification(),False,,NULL
22,X509EncodedKeySpec,16,AlgorithmParameterSpec getAlgorithmParameterSpecifications(),False,,NULL
22,X509EncodedKeySpec,17,AlgorithmParameterSpec getAlgorithmParameterSpecification(),False,,NULL
22,X509EncodedKeySpec,18,AlgorithmParameterSpec getAlgorithmParameterSpecifications(),False,,NULL
22,X509EncodedKeySpec,19,AlgorithmParameterSpec getAlgorithmParameterSpecification(),False,,NULL
22,X509EncodedKeySpec,20,AlgorithmParameterSpec getAlgorithmParameterSpecifications(),False,,NULL
