Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,HandlerBase,1,"void characters(char[] ch, int start, int length)",True,Deprecated.,"

characters
public void characters(char[] ch,
                       int start,
                       int length)
                throws SAXException
Deprecated. 
Receive notification of character data inside an element.

 By default, do nothing.  Application writers may override this
 method to take specific actions for each chunk of character data
 (such as adding the data to a node or buffer, or printing it to
 a file).

Specified by:
characters in interface DocumentHandler
Parameters:
ch - The characters.
start - The start position in the character array.
length - The number of characters to use from the
               character array.
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.characters(char[], int, int)


"
0,HandlerBase,2,void endDocument(),True,Deprecated.,"

endDocument
public void endDocument()
                 throws SAXException
Deprecated. 
Receive notification of the end of the document.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the end
 of a document (such as finalising a tree or closing an output
 file).

Specified by:
endDocument in interface DocumentHandler
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.endDocument()


"
0,HandlerBase,3,"void endElement(String uri, String localName, String qName)",False,,NULL
0,HandlerBase,4,void startDocument(),True,Deprecated.,"

startDocument
public void startDocument()
                   throws SAXException
Deprecated. 
Receive notification of the beginning of the document.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the beginning
 of a document (such as allocating the root node of a tree or
 creating an output file).

Specified by:
startDocument in interface DocumentHandler
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.startDocument()


"
0,HandlerBase,5,"void startElement(String uri, String localName, String qName, Attributes attributes)",False,,NULL
1,InputSource,1,InputSource(Reader reader),False,,NULL
1,InputSource,2,InputSource(InputStream stream),False,,NULL
1,InputSource,3,InputSource(String systemId),False,,NULL
1,InputSource,4,InputSource(URL url),False,,NULL
1,InputSource,5,InputSource(File file),False,,NULL
1,InputSource,6,"InputSource(String publicId, String systemId)",False,,NULL
1,InputSource,7,void setCharacterStream(Reader characterStream),True,Set the character stream for this input source.,"

setCharacterStream
public void setCharacterStream(Reader characterStream)
Set the character stream for this input source.

 If there is a character stream specified, the SAX parser
 will ignore any byte stream and will not attempt to open
 a URI connection to the system identifier.

Parameters:
characterStream - The character stream containing the
        XML document or other entity.
See Also:
getCharacterStream(), 
Reader


"
1,InputSource,8,void setByteStream(InputStream byteStream),True,Set the byte stream for this input source.,"

setByteStream
public void setByteStream(InputStream byteStream)
Set the byte stream for this input source.

 The SAX parser will ignore this if there is also a character
 stream specified, but it will use a byte stream in preference
 to opening a URI connection itself.
If the application knows the character encoding of the
 byte stream, it should set it with the setEncoding method.

Parameters:
byteStream - A byte stream containing an XML document or
        other entity.
See Also:
setEncoding(java.lang.String), 
getByteStream(), 
getEncoding(), 
InputStream


"
1,InputSource,9,void setString(String string),False,,NULL
1,InputSource,10,void setPublicId(String publicId),True,Set the public identifier for this input source.,"

setPublicId
public void setPublicId(String publicId)
Set the public identifier for this input source.

 The public identifier is always optional: if the application
 writer includes one, it will be provided as part of the
 location information.

Parameters:
publicId - The public identifier as a string.
See Also:
getPublicId(), 
Locator.getPublicId(), 
SAXParseException.getPublicId()


"
1,InputSource,11,void setSystemId(String systemId),True,Set the system identifier for this input source.,"

setSystemId
public void setSystemId(String systemId)
Set the system identifier for this input source.

 The system identifier is optional if there is a byte stream
 or a character stream, but it is still useful to provide one,
 since the application can use it to resolve relative URIs
 and can include it in error messages and warnings (the parser
 will attempt to open a connection to the URI only if
 there is no byte stream or character stream specified).
If the application knows the character encoding of the
 object pointed to by the system identifier, it can register
 the encoding using the setEncoding method.
If the system identifier is a URL, it must be fully
 resolved (it may not be a relative URL).

Parameters:
systemId - The system identifier as a string.
See Also:
setEncoding(java.lang.String), 
getSystemId(), 
Locator.getSystemId(), 
SAXParseException.getSystemId()


"
1,InputSource,12,Reader getCharacterStream(),True,Get the character stream for this input source.,"

getCharacterStream
public Reader getCharacterStream()
Get the character stream for this input source.

Returns:
The character stream, or null if none was supplied.
See Also:
setCharacterStream(java.io.Reader)


"
1,InputSource,13,InputStream getByteStream(),True,Get the byte stream for this input source.,"

getByteStream
public InputStream getByteStream()
Get the byte stream for this input source.

 The getEncoding method will return the character
 encoding for this byte stream, or null if unknown.

Returns:
The byte stream, or null if none was supplied.
See Also:
getEncoding(), 
setByteStream(java.io.InputStream)


"
1,InputSource,14,String getString(),False,,NULL
1,InputSource,15,String getPublicId(),True,Get the public identifier for this input source.,"

getPublicId
public String getPublicId()
Get the public identifier for this input source.

Returns:
The public identifier, or null if none was supplied.
See Also:
setPublicId(java.lang.String)


"
1,InputSource,16,String getSystemId(),True,Get the system identifier for this input source.,"

getSystemId
public String getSystemId()
Get the system identifier for this input source.

 The getEncoding method will return the character encoding
 of the object pointed to, or null if unknown.
If the system ID is a URL, it will be fully resolved.

Returns:
The system identifier, or null if none was supplied.
See Also:
setSystemId(java.lang.String), 
getEncoding()


"
1,InputSource,17,boolean getCertificates(),False,,NULL
1,InputSource,18,void setCertificates(Certificate[] certificates),False,,NULL
1,InputSource,19,Certificate[] getCertificates(),False,,NULL
1,InputSource,20,void setCertificates(Certificate[] certificates),False,,NULL
1,InputSource,21,Certificate[] getCertificates(),False,,NULL
1,InputSource,22,void setCertificates(Certificate[] certificates),False,,NULL
1,InputSource,23,Certificate[] getCertificates(),False,,NULL
1,InputSource,24,void setCertificates(Certificate[] certificates),False,,NULL
1,InputSource,25,Certificate[] getCertificates(),False,,NULL
