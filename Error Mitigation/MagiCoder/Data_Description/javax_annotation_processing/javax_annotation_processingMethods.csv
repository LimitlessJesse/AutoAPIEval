ClassName,Method,Return Type,Description,Full Description
AbstractProcessor,"getCompletions(Element element, AnnotationMirror annotation, ExecutableElement member, String userText)",Iterable<? extends Completion>,Returns an empty iterable of completions.,"

getCompletions
public Iterable<? extends Completion> getCompletions(Element element,
                                                     AnnotationMirror annotation,
                                                     ExecutableElement member,
                                                     String userText)
Returns an empty iterable of completions.

Specified by:
getCompletions in interface Processor
Parameters:
element - the element being annotated
annotation - the (perhaps partial) annotation being
                   applied to the element
member - the annotation member to return possible completions for
userText - source code text to be completed
Returns:
suggested completions to the annotation


"
AbstractProcessor,getSupportedAnnotationTypes(),Set<String>,"If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the same set of strings as the annotation.","

getSupportedAnnotationTypes
public Set<String> getSupportedAnnotationTypes()
If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the
 same set of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

Specified by:
getSupportedAnnotationTypes in interface Processor
Returns:
the names of the annotation types supported by this
 processor, or an empty set if none
See Also:
SupportedAnnotationTypes


"
AbstractProcessor,getSupportedOptions(),Set<String>,"If the processor class is annotated with SupportedOptions, return an unmodifiable set with the same set of strings as the annotation.","

getSupportedOptions
public Set<String> getSupportedOptions()
If the processor class is annotated with SupportedOptions, return an unmodifiable set with the same set
 of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

Specified by:
getSupportedOptions in interface Processor
Returns:
the options recognized by this processor, or an empty
 set if none
See Also:
SupportedOptions


"
AbstractProcessor,getSupportedSourceVersion(),SourceVersion,"If the processor class is annotated with SupportedSourceVersion, return the source version in the annotation.","

getSupportedSourceVersion
public SourceVersion getSupportedSourceVersion()
If the processor class is annotated with SupportedSourceVersion, return the source version in the
 annotation.  If the class is not so annotated, SourceVersion.RELEASE_6 is returned.

Specified by:
getSupportedSourceVersion in interface Processor
Returns:
the latest source version supported by this processor
See Also:
SupportedSourceVersion, 
ProcessingEnvironment.getSourceVersion()


"
AbstractProcessor,init(ProcessingEnvironment processingEnv),void,Initializes the processor with the processing environment by setting the processingEnv field to the value of the processingEnv argument.,"

init
public void init(ProcessingEnvironment processingEnv)
Initializes the processor with the processing environment by
 setting the processingEnv field to the value of the
 processingEnv argument.  An IllegalStateException will be thrown if this method is called
 more than once on the same object.

Specified by:
init in interface Processor
Parameters:
processingEnv - environment to access facilities the tool framework
 provides to the processor
Throws:
IllegalStateException - if this method is called more than once.


"
AbstractProcessor,isInitialized(),protected boolean,"Returns true if this object has been initialized, false otherwise.","

isInitialized
protected boolean isInitialized()
Returns true if this object has been initialized, false otherwise.

Returns:
true if this object has been initialized,
 false otherwise.


"
AbstractProcessor,"process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)",abstract boolean,Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor.,"

process
public abstract boolean process(Set<? extends TypeElement> annotations,
                                RoundEnvironment roundEnv)
Processes a set of annotation types on type elements
 originating from the prior round and returns whether or not
 these annotation types are claimed by this processor.  If true is returned, the annotation types are claimed and subsequent
 processors will not be asked to process them; if false
 is returned, the annotation types are unclaimed and subsequent
 processors may be asked to process them.  A processor may
 always return the same boolean value or may vary the result
 based on chosen criteria.

 The input set will be empty if the processor supports ""*"" and the root elements have no annotations.  A Processor must gracefully handle an empty set of annotations.

Specified by:
process in interface Processor
Parameters:
annotations - the annotation types requested to be processed
roundEnv - environment for information about the current and prior round
Returns:
whether or not the set of annotation types are claimed by this processor


"
Completions,of(String value),static Completion,Returns a completion of the value and an empty message,"

of
public static Completion of(String value)
Returns a completion of the value and an empty message

Parameters:
value - the text of the completion
Returns:
a completion of the value and an empty message


"
Completions,"of(String value, String message)",static Completion,Returns a completion of the value and message.,"

of
public static Completion of(String value,
                            String message)
Returns a completion of the value and message.

Parameters:
value - the text of the completion
message - a message about the completion
Returns:
a completion of the provided value and message


"
