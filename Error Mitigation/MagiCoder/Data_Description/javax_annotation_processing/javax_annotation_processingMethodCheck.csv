Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,AbstractProcessor,1,"boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)",True,Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor.,"

process
public abstract boolean process(Set<? extends TypeElement> annotations,
                                RoundEnvironment roundEnv)
Processes a set of annotation types on type elements
 originating from the prior round and returns whether or not
 these annotation types are claimed by this processor.  If true is returned, the annotation types are claimed and subsequent
 processors will not be asked to process them; if false
 is returned, the annotation types are unclaimed and subsequent
 processors may be asked to process them.  A processor may
 always return the same boolean value or may vary the result
 based on chosen criteria.

 The input set will be empty if the processor supports ""*"" and the root elements have no annotations.  A Processor must gracefully handle an empty set of annotations.

Specified by:
process in interface Processor
Parameters:
annotations - the annotation types requested to be processed
roundEnv - environment for information about the current and prior round
Returns:
whether or not the set of annotation types are claimed by this processor


"
0,AbstractProcessor,2,Set<String> getSupportedAnnotationTypes(),True,"If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the same set of strings as the annotation.","

getSupportedAnnotationTypes
public Set<String> getSupportedAnnotationTypes()
If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the
 same set of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

Specified by:
getSupportedAnnotationTypes in interface Processor
Returns:
the names of the annotation types supported by this
 processor, or an empty set if none
See Also:
SupportedAnnotationTypes


"
0,AbstractProcessor,3,SourceVersion getSupportedSourceVersion(),True,"If the processor class is annotated with SupportedSourceVersion, return the source version in the annotation.","

getSupportedSourceVersion
public SourceVersion getSupportedSourceVersion()
If the processor class is annotated with SupportedSourceVersion, return the source version in the
 annotation.  If the class is not so annotated, SourceVersion.RELEASE_6 is returned.

Specified by:
getSupportedSourceVersion in interface Processor
Returns:
the latest source version supported by this processor
See Also:
SupportedSourceVersion, 
ProcessingEnvironment.getSourceVersion()


"
0,AbstractProcessor,4,"boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)",True,Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor.,"

process
public abstract boolean process(Set<? extends TypeElement> annotations,
                                RoundEnvironment roundEnv)
Processes a set of annotation types on type elements
 originating from the prior round and returns whether or not
 these annotation types are claimed by this processor.  If true is returned, the annotation types are claimed and subsequent
 processors will not be asked to process them; if false
 is returned, the annotation types are unclaimed and subsequent
 processors may be asked to process them.  A processor may
 always return the same boolean value or may vary the result
 based on chosen criteria.

 The input set will be empty if the processor supports ""*"" and the root elements have no annotations.  A Processor must gracefully handle an empty set of annotations.

Specified by:
process in interface Processor
Parameters:
annotations - the annotation types requested to be processed
roundEnv - environment for information about the current and prior round
Returns:
whether or not the set of annotation types are claimed by this processor


"
0,AbstractProcessor,5,Set<String> getSupportedAnnotationTypes(),True,"If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the same set of strings as the annotation.","

getSupportedAnnotationTypes
public Set<String> getSupportedAnnotationTypes()
If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the
 same set of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

Specified by:
getSupportedAnnotationTypes in interface Processor
Returns:
the names of the annotation types supported by this
 processor, or an empty set if none
See Also:
SupportedAnnotationTypes


"
0,AbstractProcessor,6,SourceVersion getSupportedSourceVersion(),True,"If the processor class is annotated with SupportedSourceVersion, return the source version in the annotation.","

getSupportedSourceVersion
public SourceVersion getSupportedSourceVersion()
If the processor class is annotated with SupportedSourceVersion, return the source version in the
 annotation.  If the class is not so annotated, SourceVersion.RELEASE_6 is returned.

Specified by:
getSupportedSourceVersion in interface Processor
Returns:
the latest source version supported by this processor
See Also:
SupportedSourceVersion, 
ProcessingEnvironment.getSourceVersion()


"
0,AbstractProcessor,7,"boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)",True,Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor.,"

process
public abstract boolean process(Set<? extends TypeElement> annotations,
                                RoundEnvironment roundEnv)
Processes a set of annotation types on type elements
 originating from the prior round and returns whether or not
 these annotation types are claimed by this processor.  If true is returned, the annotation types are claimed and subsequent
 processors will not be asked to process them; if false
 is returned, the annotation types are unclaimed and subsequent
 processors may be asked to process them.  A processor may
 always return the same boolean value or may vary the result
 based on chosen criteria.

 The input set will be empty if the processor supports ""*"" and the root elements have no annotations.  A Processor must gracefully handle an empty set of annotations.

Specified by:
process in interface Processor
Parameters:
annotations - the annotation types requested to be processed
roundEnv - environment for information about the current and prior round
Returns:
whether or not the set of annotation types are claimed by this processor


"
0,AbstractProcessor,8,Set<String> getSupportedAnnotationTypes(),True,"If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the same set of strings as the annotation.","

getSupportedAnnotationTypes
public Set<String> getSupportedAnnotationTypes()
If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the
 same set of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

Specified by:
getSupportedAnnotationTypes in interface Processor
Returns:
the names of the annotation types supported by this
 processor, or an empty set if none
See Also:
SupportedAnnotationTypes


"
0,AbstractProcessor,9,SourceVersion getSupportedSourceVersion(),True,"If the processor class is annotated with SupportedSourceVersion, return the source version in the annotation.","

getSupportedSourceVersion
public SourceVersion getSupportedSourceVersion()
If the processor class is annotated with SupportedSourceVersion, return the source version in the
 annotation.  If the class is not so annotated, SourceVersion.RELEASE_6 is returned.

Specified by:
getSupportedSourceVersion in interface Processor
Returns:
the latest source version supported by this processor
See Also:
SupportedSourceVersion, 
ProcessingEnvironment.getSourceVersion()


"
0,AbstractProcessor,10,"boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)",True,Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor.,"

process
public abstract boolean process(Set<? extends TypeElement> annotations,
                                RoundEnvironment roundEnv)
Processes a set of annotation types on type elements
 originating from the prior round and returns whether or not
 these annotation types are claimed by this processor.  If true is returned, the annotation types are claimed and subsequent
 processors will not be asked to process them; if false
 is returned, the annotation types are unclaimed and subsequent
 processors may be asked to process them.  A processor may
 always return the same boolean value or may vary the result
 based on chosen criteria.

 The input set will be empty if the processor supports ""*"" and the root elements have no annotations.  A Processor must gracefully handle an empty set of annotations.

Specified by:
process in interface Processor
Parameters:
annotations - the annotation types requested to be processed
roundEnv - environment for information about the current and prior round
Returns:
whether or not the set of annotation types are claimed by this processor


"
1,Completions,1,boolean add(E e),False,,NULL
1,Completions,2,"void add(int index, E element)",False,,NULL
1,Completions,3,boolean addAll(Collection<? extends E> c),False,,NULL
1,Completions,4,"boolean addAll(int index, Collection<? extends E> c)",False,,NULL
1,Completions,5,void clear(),False,,NULL
