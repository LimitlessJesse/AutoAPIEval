Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,AlphaComposite,1,"AlphaComposite getInstance(int rule, float alpha)",True,Creates an AlphaComposite object with the specified rule and the constant alpha to multiply with the alpha of the source.
0,AlphaComposite,2,"AlphaComposite getInstance(int rule, float srcAlpha, float dstAlpha)",False,NULL
0,AlphaComposite,3,"AlphaComposite getInstance(int rule, AlphaComposite src, AlphaComposite dst)",False,NULL
0,AlphaComposite,4,"AlphaComposite getInstance(int rule, AlphaComposite src, float dstAlpha)",False,NULL
0,AlphaComposite,5,"AlphaComposite getInstance(int rule, float srcAlpha, AlphaComposite dst)",False,NULL
1,AWTEvent,1,"AWTEvent(Object source, int id)",False,NULL
1,AWTEvent,2,Object getSource(),False,NULL
1,AWTEvent,3,int getID(),True,Returns the event type.
1,AWTEvent,4,void consume(),True,"Consumes this event, if this event can be consumed."
1,AWTEvent,5,boolean isConsumed(),True,Returns whether this event has been consumed.
2,AWTEventMulticaster,1,void addListener(AWTEventListener listener),False,NULL
2,AWTEventMulticaster,2,void removeListener(AWTEventListener listener),False,NULL
2,AWTEventMulticaster,3,void dispatchEvent(AWTEvent event),False,NULL
2,AWTEventMulticaster,4,"void dispatchEvent(AWTEvent event, Object arg)",False,NULL
2,AWTEventMulticaster,5,"void dispatchEvent(AWTEvent event, AWTEventMulticaster source)",False,NULL
3,AWTKeyStroke,1,"AWTKeyStroke.getAWTKeyStroke(int keyCode, int modifiers)",False,NULL
3,AWTKeyStroke,2,AWTKeyStroke.getAWTKeyStroke(String keyStroke),False,NULL
3,AWTKeyStroke,3,"AWTKeyStroke.getAWTKeyStroke(char keyChar, int modifiers)",False,NULL
3,AWTKeyStroke,4,"AWTKeyStroke.getAWTKeyStroke(String keyStroke, int modifiers)",False,NULL
3,AWTKeyStroke,5,AWTKeyStroke.getAWTKeyStroke(char keyChar),False,NULL
4,AWTPermission,1,boolean implies(Permission p),False,NULL
4,AWTPermission,2,boolean equals(Object obj),False,NULL
4,AWTPermission,3,int hashCode(),False,NULL
4,AWTPermission,4,String getActions(),False,NULL
4,AWTPermission,5,String toString(),False,NULL
5,BasicStroke,1,"BasicStroke(float width, int cap, int join)",False,NULL
5,BasicStroke,2,"BasicStroke(float width, int cap, int join, float miterlimit, float[] dash, float dash_phase)",False,NULL
5,BasicStroke,3,float getLineWidth(),True,Returns the line width.
5,BasicStroke,4,int getEndCap(),True,Returns the end cap style.
5,BasicStroke,5,int getLineJoin(),True,Returns the line join style.
5,BasicStroke,6,float getMiterLimit(),True,Returns the limit of miter joins.
5,BasicStroke,7,float[] getDashArray(),True,Returns the array representing the lengths of the dash segments.
5,BasicStroke,8,float getDashPhase(),True,Returns the current dash phase.
5,BasicStroke,9,boolean equals(Object obj),True,"Tests if a specified object is equal to this BasicStroke by first testing if it is a BasicStroke and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this BasicStroke."
5,BasicStroke,10,int hashCode(),True,Returns the hashcode for this stroke.
6,BorderLayout,1,"void addLayoutComponent(String name, Component comp)",True,"Deprecated. replaced by addLayoutComponent(Component, Object)."
6,BorderLayout,2,"Component add(String name, Component comp)",False,NULL
6,BorderLayout,3,"void addLayoutComponent(Component comp, Object constraints)",True,"Adds the specified component to the layout, using the specified constraint object."
6,BorderLayout,4,"void addLayoutComponent(String name, Component comp, int width, int height)",False,NULL
6,BorderLayout,5,"void addLayoutComponent(Component comp, Object constraints, int width, int height)",False,NULL
7,BufferCapabilities,1,boolean isDoubleBuffered(),False,NULL
7,BufferCapabilities,2,boolean isPageBuffered(),False,NULL
7,BufferCapabilities,3,boolean isSwapGroupBuffered(),False,NULL
7,BufferCapabilities,4,boolean isTiling(),False,NULL
7,BufferCapabilities,5,boolean isVolatile(),False,NULL
8,BufferCapabilities.FlipContents,1,boolean isDoubleBuffered(),False,NULL
8,BufferCapabilities.FlipContents,2,boolean isPageFlipping(),False,NULL
8,BufferCapabilities.FlipContents,3,boolean isSwapControl(),False,NULL
8,BufferCapabilities.FlipContents,4,boolean isPageFlipping(),False,NULL
8,BufferCapabilities.FlipContents,5,boolean isPageFlipping(),False,NULL
9,Button,1,Button(String label),False,NULL
9,Button,2,void setLabel(String label),True,Sets the button's label to be the specified string.
9,Button,3,String getLabel(),True,Gets the label of this button.
9,Button,4,void setEnabled(boolean b),False,NULL
9,Button,5,boolean isEnabled(),False,NULL
10,Canvas,1,void update(Graphics g),True,Updates this canvas.
10,Canvas,2,void paint(Graphics g),True,Paints this canvas.
10,Canvas,3,"void paint(Graphics g, ImageObserver io)",False,NULL
10,Canvas,4,"void update(Graphics g, ImageObserver io)",False,NULL
10,Canvas,5,void paintComponent(Graphics g),False,NULL
11,CardLayout,1,"void addLayoutComponent(String name, Component comp)",True,"Deprecated. replaced by addLayoutComponent(Component, Object)."
11,CardLayout,2,"void addLayoutComponent(Component comp, Object constraints)",True,Adds the specified component to this card layout's internal table of names.
11,CardLayout,3,void first(Container target),True,Flips to the first card of the container.
11,CardLayout,4,void last(Container target),True,Flips to the last card of the container.
11,CardLayout,5,void next(Container target),True,Flips to the next card of the specified container.
11,CardLayout,6,void previous(Container target),True,Flips to the previous card of the specified container.
11,CardLayout,7,void removeLayoutComponent(Component comp),True,Removes the specified component from the layout.
11,CardLayout,8,"void show(Container parent, String name)",True,"Flips to the component that was added to this layout with the specified name, using addLayoutComponent."
11,CardLayout,9,"void show(Container parent, Component comp)",False,NULL
11,CardLayout,10,"void addLayoutComponent(String name, Component comp)",True,"Deprecated. replaced by addLayoutComponent(Component, Object)."
12,Checkbox,1,Checkbox(String label),False,NULL
12,Checkbox,2,"Checkbox(String label, boolean state)",False,NULL
12,Checkbox,3,void setState(boolean b),True,Sets the state of this check box to the specified state.
12,Checkbox,4,boolean getState(),True,"Determines whether this check box is in the ""on"" or ""off"" state."
12,Checkbox,5,void toggle(),False,NULL
13,CheckboxGroup,1,boolean add(E e),False,NULL
13,CheckboxGroup,2,boolean addAll(Collection<? extends E> c),False,NULL
13,CheckboxGroup,3,void clear(),False,NULL
13,CheckboxGroup,4,boolean contains(Object o),False,NULL
13,CheckboxGroup,5,boolean containsAll(Collection<?> c),False,NULL
13,CheckboxGroup,6,boolean equals(Object o),False,NULL
13,CheckboxGroup,7,E get(int index),False,NULL
13,CheckboxGroup,8,int indexOf(Object o),False,NULL
13,CheckboxGroup,9,boolean isEmpty(),False,NULL
13,CheckboxGroup,10,Iterator<E> iterator(),False,NULL
13,CheckboxGroup,11,int lastIndexOf(Object o),False,NULL
13,CheckboxGroup,12,ListIterator<E> listIterator(),False,NULL
13,CheckboxGroup,13,ListIterator<E> listIterator(int index),False,NULL
13,CheckboxGroup,14,boolean remove(Object o),False,NULL
13,CheckboxGroup,15,E remove(int index),False,NULL
13,CheckboxGroup,16,boolean removeAll(Collection<?> c),False,NULL
13,CheckboxGroup,17,boolean retainAll(Collection<?> c),False,NULL
13,CheckboxGroup,18,"E set(int index, E element)",False,NULL
13,CheckboxGroup,19,int size(),False,NULL
13,CheckboxGroup,20,"List<E> subList(int fromIndex, int toIndex)",False,NULL
13,CheckboxGroup,21,Object[] toArray(),False,NULL
13,CheckboxGroup,22,<T> T[] toArray(T[] a),False,NULL
13,CheckboxGroup,23,String toString(),True,"Returns a string representation of this check box group, including the value of its current selection."
14,CheckboxMenuItem,1,CheckboxMenuItem(String label),False,NULL
14,CheckboxMenuItem,2,void setState(boolean b),True,Sets this check box menu item to the specified state.
14,CheckboxMenuItem,3,boolean getState(),True,"Determines whether the state of this check box menu item is ""on"" or ""off."""
14,CheckboxMenuItem,4,void setCheckbox(boolean b),False,NULL
14,CheckboxMenuItem,5,boolean getCheckbox(),False,NULL
15,Choice,1,boolean add(E e),False,NULL
15,Choice,2,void addItem(String item),True,Obsolete as of Java 2 platform v1.1.
15,Choice,3,void addItemListener(ItemListener l),True,Adds the specified item listener to receive item events from this Choice menu.
15,Choice,4,void removeItemListener(ItemListener l),True,Removes the specified item listener so that it no longer receives item events from this Choice menu.
15,Choice,5,String getItem(int index),True,Gets the string at the specified index in this Choice menu.
16,Color,1,Color(int rgb),False,NULL
16,Color,2,"Color(int rgba, boolean hasalpha)",False,NULL
16,Color,3,"Color(float r, float g, float b)",False,NULL
16,Color,4,"Color(float r, float g, float b, float a)",False,NULL
16,Color,5,Color(int argb),False,NULL
16,Color,6,"Color(int argb, boolean hasalpha)",False,NULL
16,Color,7,int getRGB(),True,Returns the RGB value representing the color in the default sRGB ColorModel.
16,Color,8,int getRGB(ColorSpace cs),False,NULL
16,Color,9,int getAlpha(),True,Returns the alpha component in the range 0-255.
16,Color,10,int getBlue(),True,Returns the blue component in the range 0-255 in the default sRGB space.
16,Color,11,int getGreen(),True,Returns the green component in the range 0-255 in the default sRGB space.
16,Color,12,int getRed(),True,Returns the red component in the range 0-255 in the default sRGB space.
16,Color,13,Color brighter(),True,Creates a new Color that is a brighter version of this Color.
16,Color,14,Color darker(),True,Creates a new Color that is a darker version of this Color.
16,Color,15,Color brighter(float f),False,NULL
16,Color,16,Color darker(float f),False,NULL
16,Color,17,Color brighter(Color c),False,NULL
16,Color,18,Color darker(Color c),False,NULL
16,Color,19,"Color interpolate(Color c1, Color c2, float f)",False,NULL
16,Color,20,"Color mix(Color c1, Color c2, float f)",False,NULL
16,Color,21,Color brighter(float f),False,NULL
16,Color,22,Color darker(float f),False,NULL
16,Color,23,Color brighter(Color c),False,NULL
16,Color,24,Color darker(Color c),False,NULL
16,Color,25,"Color interpolate(Color c1, Color c2, float f)",False,NULL
16,Color,26,"Color mix(Color c1, Color c2, float f)",False,NULL
17,Component,1,void addNotify(),True,Makes this Component displayable by connecting it to a native screen resource.
17,Component,2,void removeNotify(),True,Makes this Component undisplayable by destroying it native screen resource.
17,Component,3,void paint(Graphics g),True,Paints this component.
17,Component,4,void update(Graphics g),True,Updates this component.
17,Component,5,void repaint(),True,Repaints this component.
18,ComponentOrientation,1,getComponentOrientation(),False,NULL
18,ComponentOrientation,2,getItemOrientation(),False,NULL
18,ComponentOrientation,3,getMirrorOrientation(),False,NULL
18,ComponentOrientation,4,getOrientation(),False,NULL
18,ComponentOrientation,5,getOrientation(int orientation),False,NULL
19,Container,1,Component add(Component comp),True,Appends the specified component to the end of this container.
19,Container,2,"Component add(Component comp, Object constraints)",False,NULL
19,Container,3,"Component add(String name, Component comp)",True,Adds the specified component to this container.
19,Container,4,Component[] getComponents(),True,Gets all the components in this container.
19,Container,5,int getComponentCount(),True,Gets the number of components in this panel.
19,Container,6,Component getComponent(int index),True,Gets the nth component in this container.
19,Container,7,Component getComponent(String name),False,NULL
19,Container,8,void remove(int index),True,"Removes the component, specified by index, from this container."
19,Container,9,void remove(Component comp),True,Removes the specified component from this container.
19,Container,10,void removeAll(),True,Removes all the components from this container.
19,Container,11,void setLayout(LayoutManager mgr),True,Sets the layout manager for this container.
19,Container,12,void validate(),True,Validates this container and all of its subcomponents.
19,Container,13,void addNotify(),True,Makes this Container displayable by connecting it to a native screen resource.
19,Container,14,void removeNotify(),True,Makes this Container undisplayable by removing its connection to its native screen resource.
19,Container,15,void paint(Graphics g),True,Paints the container.
19,Container,16,void update(Graphics g),True,Updates the container.
19,Container,17,void repaint(),False,NULL
19,Container,18,void repaint(long tm),False,NULL
19,Container,19,"void repaint(int x, int y, int width, int height)",False,NULL
19,Container,20,void setCursor(Cursor cursor),False,NULL
19,Container,21,void setBackground(Color bg),False,NULL
19,Container,22,void setForeground(Color fg),False,NULL
19,Container,23,void setFont(Font font),True,Sets the font of this container.
19,Container,24,void setSize(Dimension d),False,NULL
19,Container,25,"void setSize(int width, int height)",False,NULL
19,Container,26,void setPreferredSize(Dimension preferredSize),False,NULL
19,Container,27,void setPreferredSize(Dimension preferredSize),False,NULL
19,Container,28,void setMinimumSize(Dimension minSize),False,NULL
19,Container,29,void setMaximumSize(Dimension maxSize),False,NULL
19,Container,30,void setLayout(LayoutManager mgr),True,Sets the layout manager for this container.
19,Container,31,void setVisible(boolean b),False,NULL
19,Container,32,void setEnabled(boolean b),False,NULL
19,Container,33,void setFocusable(boolean b),False,NULL
19,Container,34,void setFocusTraversalKeysEnabled(boolean b),False,NULL
19,Container,35,void setComponentOrientation(ComponentOrientation cOrientation),False,NULL
19,Container,36,void setDoubleBuffered(boolean b),False,NULL
19,Container,37,void setOpaque(boolean b),False,NULL
19,Container,38,void setBorder(Border b),False,NULL
19,Container,39,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,40,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,41,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,42,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,43,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,44,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,45,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,46,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,47,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,48,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,49,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,50,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,51,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,52,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,53,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,54,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,55,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,56,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,57,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,58,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,59,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,60,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,61,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,62,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,63,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,64,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
19,Container,65,"void setComponentZOrder(Component child, int index)",True,Moves the specified component to the specified z-order index in the container.
20,ContainerOrderFocusTraversalPolicy,1,boolean isFocusTraversable(Component c),False,NULL
20,ContainerOrderFocusTraversalPolicy,2,Component getDefaultComponent(Container aContainer),True,Returns the default Component to focus.
20,ContainerOrderFocusTraversalPolicy,3,"Component getComponentAfter(Container aContainer, Component aComponent)",True,Returns the Component that should receive the focus after aComponent.
20,ContainerOrderFocusTraversalPolicy,4,"Component getComponentBefore(Container aContainer, Component aComponent)",True,Returns the Component that should receive the focus before aComponent.
20,ContainerOrderFocusTraversalPolicy,5,Component getFirstComponent(Container aContainer),True,Returns the first Component in the traversal cycle.
20,ContainerOrderFocusTraversalPolicy,6,Component getLastComponent(Container aContainer),True,Returns the last Component in the traversal cycle.
20,ContainerOrderFocusTraversalPolicy,7,Component getDefaultComponent(Container aContainer),True,Returns the default Component to focus.
20,ContainerOrderFocusTraversalPolicy,8,int getComponentCount(Container aContainer),False,NULL
20,ContainerOrderFocusTraversalPolicy,9,"Component getComponent(Container aContainer, int index)",False,NULL
20,ContainerOrderFocusTraversalPolicy,10,void addComponentListener(ComponentListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,11,void removeComponentListener(ComponentListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,12,void addFocusListener(FocusListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,13,void removeFocusListener(FocusListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,14,void addKeyListener(KeyListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,15,void removeKeyListener(KeyListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,16,void addMouseListener(MouseListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,17,void removeMouseListener(MouseListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,18,void addMouseMotionListener(MouseMotionListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,19,void removeMouseMotionListener(MouseMotionListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,20,void addMouseWheelListener(MouseWheelListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,21,void removeMouseWheelListener(MouseWheelListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,22,"void addAWTEventListener(AWTEventListener listener, AWTEvent.EventMask mask)",False,NULL
20,ContainerOrderFocusTraversalPolicy,23,void removeAWTEventListener(AWTEventListener listener),False,NULL
20,ContainerOrderFocusTraversalPolicy,24,void addHierarchyBoundsListener(HierarchyBoundsListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,25,void removeHierarchyBoundsListener(HierarchyBoundsListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,26,void addHierarchyChangeListener(HierarchyChangeListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,27,void removeHierarchyChangeListener(HierarchyChangeListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,28,void addHierarchyBoundsListener(HierarchyBoundsListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,29,void removeHierarchyBoundsListener(HierarchyBoundsListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,30,void addHierarchyChangeListener(HierarchyChangeListener l),False,NULL
20,ContainerOrderFocusTraversalPolicy,31,void removeHierarchyChangeListener(HierarchyChangeListener l),False,NULL
21,Cursor,1,Cursor(int type),False,NULL
21,Cursor,2,"Cursor(Image image, int hotSpotX, int hotSpotY)",False,NULL
21,Cursor,3,"Cursor(Image image, Point hotSpot)",False,NULL
21,Cursor,4,"Cursor(Image image, int hotSpotX, int hotSpotY, int type)",False,NULL
21,Cursor,5,"Cursor(Image image, Point hotSpot, int type)",False,NULL
22,DefaultFocusTraversalPolicy,1,boolean getFirstComponent(Container aContainer),False,NULL
22,DefaultFocusTraversalPolicy,2,boolean getLastComponent(Container aContainer),False,NULL
22,DefaultFocusTraversalPolicy,3,Component getDefaultComponent(Container aContainer),False,NULL
22,DefaultFocusTraversalPolicy,4,"Component getComponentAfter(Container aContainer, Component aComponent)",False,NULL
22,DefaultFocusTraversalPolicy,5,"Component getComponentBefore(Container aContainer, Component aComponent)",False,NULL
23,DefaultKeyboardFocusManager,1,void addKeyEventDispatcher(KeyEventDispatcher ked),False,NULL
23,DefaultKeyboardFocusManager,2,void addKeyEventPostProcessor(KeyEventPostProcessor kp),False,NULL
23,DefaultKeyboardFocusManager,3,void addWindowFocusListener(WindowFocusListener l),False,NULL
23,DefaultKeyboardFocusManager,4,void dispatchEvent(KeyEvent e),False,NULL
23,DefaultKeyboardFocusManager,5,void dispatchEvent(WindowEvent e),False,NULL
23,DefaultKeyboardFocusManager,6,void removeKeyEventDispatcher(KeyEventDispatcher ked),False,NULL
23,DefaultKeyboardFocusManager,7,void removeKeyEventPostProcessor(KeyEventPostProcessor kp),False,NULL
23,DefaultKeyboardFocusManager,8,void removeWindowFocusListener(WindowFocusListener l),False,NULL
23,DefaultKeyboardFocusManager,9,void setDefaultFocusOwner(Component focusOwner),False,NULL
23,DefaultKeyboardFocusManager,10,void setFocusManagerDelegate(FocusManager delegate),False,NULL
23,DefaultKeyboardFocusManager,11,"void setFocusTraversalKeys(int nextKey, int previousKey)",False,NULL
23,DefaultKeyboardFocusManager,12,void setFocusTraversalPolicy(FocusTraversalPolicy policy),False,NULL
23,DefaultKeyboardFocusManager,13,void setGlobalFocusCycleManager(FocusCycleManager manager),False,NULL
23,DefaultKeyboardFocusManager,14,"void setWindowFocusTraversalKeys(int nextKey, int previousKey)",False,NULL
23,DefaultKeyboardFocusManager,15,void setWindowFocusTraversalPolicy(FocusTraversalPolicy policy),False,NULL
24,Desktop,1,boolean isSupported(URI uri),False,NULL
24,Desktop,2,void browse(URI uri),True,Launches the default browser to display a URI.
24,Desktop,3,void mail(URI mailto),True,"Launches the mail composing window of the user default mail client, filling the message fields specified by a mailto: URI."
24,Desktop,4,void edit(File file),True,Launches the associated editor application and opens a file for editing.
24,Desktop,5,void print(File file),True,"Prints a file with the native desktop printing facility, using the associated application's print command."
25,Dialog,1,"Dialog(Frame owner, String title, boolean modal)",False,NULL
25,Dialog,2,"void setLocation(int x, int y)",False,NULL
25,Dialog,3,"void setSize(int width, int height)",False,NULL
25,Dialog,4,void setVisible(boolean b),True,Shows or hides this Dialog depending on the value of parameter b.
25,Dialog,5,void dispose(),False,NULL
26,Dimension,1,Dimension(),False,NULL
26,Dimension,2,"Dimension(int width, int height)",False,NULL
26,Dimension,3,int getWidth(),False,NULL
26,Dimension,4,int getHeight(),False,NULL
26,Dimension,5,"void setSize(int width, int height)",True,Sets the size of this Dimension object to the specified width and height.
27,DisplayMode,1,DisplayMode getDisplayMode(),False,NULL
27,DisplayMode,2,int getHeight(),True,"Returns the height of the display, in pixels."
27,DisplayMode,3,int getRefreshRate(),True,"Returns the refresh rate of the display, in hertz."
27,DisplayMode,4,int getWidth(),True,"Returns the width of the display, in pixels."
27,DisplayMode,5,int getBitDepth(),True,"Returns the bit depth of the display, in bits per pixel."
28,Event,1,boolean add(E e),False,NULL
28,Event,2,"void add(int index, E element)",False,NULL
28,Event,3,boolean addAll(Collection<? extends E> c),False,NULL
28,Event,4,"boolean addAll(int index, Collection<? extends E> c)",False,NULL
28,Event,5,void clear(),False,NULL
29,EventQueue,1,"void addAWTEventListener(AWTEventListener listener, AWTEvent.EventClass eventClass)",False,NULL
29,EventQueue,2,void dispatchEvent(AWTEvent event),True,Dispatches an event.
29,EventQueue,3,void dispatchEvent(EventObject event),False,NULL
29,EventQueue,4,void dispatchEvent(Object event),False,NULL
29,EventQueue,5,void invokeAndWait(Runnable runnable),True,Causes runnable to have its run method called in the dispatch thread of the system EventQueue.
30,FileDialog,1,FileDialog(Frame owner),False,NULL
30,FileDialog,2,void setDirectory(String directory),True,Sets the directory of this file dialog window to be the specified directory.
30,FileDialog,3,String getDirectory(),True,Gets the directory of this file dialog.
30,FileDialog,4,void setFile(String file),True,Sets the selected file for this file dialog window to be the specified file.
30,FileDialog,5,String getFile(),True,Gets the selected file of this file dialog.
30,FileDialog,6,void setFilenameFilter(FilenameFilter filter),True,Sets the filename filter for this file dialog window to the specified filter.
30,FileDialog,7,void setVisible(boolean b),False,NULL
30,FileDialog,8,void dispose(),False,NULL
30,FileDialog,9,String[] getFileNames(),False,NULL
30,FileDialog,10,String getPath(),False,NULL
31,FlowLayout,1,FlowLayout(),False,NULL
31,FlowLayout,2,"addLayoutComponent(String name, Component comp)",False,NULL
31,FlowLayout,3,getAlignment(),False,NULL
31,FlowLayout,4,getHgap(),False,NULL
31,FlowLayout,5,getVgap(),False,NULL
31,FlowLayout,6,setAlignment(int alignment),False,NULL
31,FlowLayout,7,setHgap(int hgap),False,NULL
31,FlowLayout,8,setVgap(int vgap),False,NULL
31,FlowLayout,9,layoutContainer(Container target),False,NULL
31,FlowLayout,10,"addLayoutComponent(Component comp, Object constraints)",False,NULL
31,FlowLayout,11,removeLayoutComponent(Component comp),False,NULL
31,FlowLayout,12,preferredLayoutSize(Container target),False,NULL
31,FlowLayout,13,minimumLayoutSize(Container target),False,NULL
31,FlowLayout,14,maximumLayoutSize(Container target),False,NULL
31,FlowLayout,15,getLayoutAlignmentX(Container target),False,NULL
31,FlowLayout,16,getLayoutAlignmentY(Container target),False,NULL
31,FlowLayout,17,invalidateLayout(Container target),False,NULL
31,FlowLayout,18,"addLayoutComponent(String name, Component comp, int index)",False,NULL
31,FlowLayout,19,"addLayoutComponent(Component comp, Object constraints, int index)",False,NULL
31,FlowLayout,20,"addLayoutComponent(String name, Component comp, Object constraints)",False,NULL
31,FlowLayout,21,"addLayoutComponent(String name, Component comp, Object constraints, int index)",False,NULL
32,FocusTraversalPolicy,1,"abstract boolean getCycleRoot(Container focusCycleRoot, JComponent aComponent)",False,NULL
32,FocusTraversalPolicy,2,abstract Component getDefaultComponent(Container focusCycleRoot),False,NULL
32,FocusTraversalPolicy,3,"abstract Component getComponentAfter(Container focusCycleRoot, Component aComponent)",False,NULL
32,FocusTraversalPolicy,4,"abstract Component getComponentBefore(Container focusCycleRoot, Component aComponent)",False,NULL
32,FocusTraversalPolicy,5,abstract Component getFirstComponent(Container focusCycleRoot),False,NULL
32,FocusTraversalPolicy,6,abstract Component getLastComponent(Container focusCycleRoot),False,NULL
32,FocusTraversalPolicy,7,abstract Component getDefaultComponent(Container focusCycleRoot),False,NULL
32,FocusTraversalPolicy,8,abstract void install(Container focusCycleRoot),False,NULL
32,FocusTraversalPolicy,9,abstract void uninstall(Container focusCycleRoot),False,NULL
32,FocusTraversalPolicy,10,"abstract void focusCycleStarted(Container focusCycleRoot, FocusTraversalPolicy aPolicy)",False,NULL
32,FocusTraversalPolicy,11,"abstract void focusCycleEnded(Container focusCycleRoot, FocusTraversalPolicy aPolicy)",False,NULL
32,FocusTraversalPolicy,12,"abstract void focusCycleDirectionChanged(Container focusCycleRoot, FocusTraversalPolicy aPolicy, int direction)",False,NULL
32,FocusTraversalPolicy,13,"abstract void focusCycleComponentChanged(Container focusCycleRoot, FocusTraversalPolicy aPolicy, Component aComponent)",False,NULL
32,FocusTraversalPolicy,14,"abstract void focusCycleComponentChanged(Container focusCycleRoot, FocusTraversalPolicy aPolicy, Component aComponent, int direction)",False,NULL
32,FocusTraversalPolicy,15,"abstract void focusCycleComponentChanged(Container focusCycleRoot, FocusTraversalPolicy aPolicy, Component aComponent, int direction, boolean aTemporary)",False,NULL
33,Font,1,"Font(String name, int style, int size)",False,NULL
33,Font,2,"Font(String name, int style, int size, int transform)",False,NULL
33,Font,3,String getName(),True,Returns the logical name of this Font.
33,Font,4,int getStyle(),True,Returns the style of this Font.
33,Font,5,int getSize(),True,"Returns the point size of this Font, rounded to an integer."
33,Font,6,int getTransform(),False,NULL
33,Font,7,Font deriveFont(int style),True,Creates a new Font object by replicating the current Font object and applying a new style to it.
33,Font,8,Font deriveFont(float size),True,Creates a new Font object by replicating the current Font object and applying a new size to it.
33,Font,9,"Font deriveFont(int style, float size)",True,Creates a new Font object by replicating this Font object and applying a new style and size.
33,Font,10,"Font deriveFont(int style, int size)",False,NULL
33,Font,11,"Font deriveFont(int style, int size, int transform)",False,NULL
33,Font,12,"Font deriveFont(float size, int transform)",False,NULL
33,Font,13,"Font deriveFont(int style, float size, int transform)",False,NULL
33,Font,14,"Font deriveFont(int style, int size, int transform)",False,NULL
33,Font,15,"Font deriveFont(float size, int style, int transform)",False,NULL
33,Font,16,"Font deriveFont(int style, float size, int transform)",False,NULL
33,Font,17,"Font deriveFont(int style, int size, int transform, boolean isBold, boolean isItalic)",False,NULL
33,Font,18,"Font deriveFont(float size, int style, int transform, boolean isBold, boolean isItalic)",False,NULL
33,Font,19,"Font deriveFont(int style, float size, int transform, boolean isBold, boolean isItalic)",False,NULL
33,Font,20,"Font deriveFont(float size, int style, int transform, boolean isBold, boolean isItalic)",False,NULL
34,FontMetrics,1,int getAscent(),True,Determines the font ascent of the Font described by this FontMetrics object.
34,FontMetrics,2,int getDescent(),True,Determines the font descent of the Font described by this FontMetrics object.
34,FontMetrics,3,int getHeight(),True,Gets the standard height of a line of text in this font.
34,FontMetrics,4,int stringWidth(String s),True,Returns the total advance width for showing the specified String in this Font.
34,FontMetrics,5,int charWidth(char c),True,Returns the advance width of the specified character in this Font.
35,Frame,1,Frame(),False,NULL
35,Frame,2,"void setSize(int width, int height)",False,NULL
35,Frame,3,void setVisible(boolean b),False,NULL
35,Frame,4,void add(Component comp),False,NULL
35,Frame,5,void setLayout(LayoutManager mgr),False,NULL
36,GradientPaint,1,"GradientPaint(float x1, float y1, Color color1, float x2, float y2, Color color2)",False,NULL
36,GradientPaint,2,"GradientPaint(float x1, float y1, Color color1, float x2, float y2, Color color2, boolean cycle)",False,NULL
36,GradientPaint,3,Color getColor1(),True,Returns the color C1 anchored by the point P1.
36,GradientPaint,4,Color getColor2(),True,Returns the color C2 anchored by the point P2.
36,GradientPaint,5,float getPoint1(),False,NULL
36,GradientPaint,6,float getPoint2(),False,NULL
36,GradientPaint,7,float getPoint3(),False,NULL
36,GradientPaint,8,float getPoint4(),False,NULL
36,GradientPaint,9,boolean isCycle(),False,NULL
37,Graphics,1,"void drawArc(int x, int y, int width, int height, int startAngle, int arcAngle)",True,Draws the outline of a circular or elliptical arc covering the specified rectangle.
37,Graphics,2,"void drawImage(Image img, int x, int y, ImageObserver observer)",False,NULL
37,Graphics,3,"void drawLine(int x1, int y1, int x2, int y2)",True,"Draws a line, using the current color, between the points (x1, y1) and (x2, y2) in this graphics context's coordinate system."
37,Graphics,4,"void drawOval(int x, int y, int width, int height)",True,Draws the outline of an oval.
37,Graphics,5,"void drawPolygon(int[] xPoints, int[] yPoints, int nPoints)",True,Draws a closed polygon defined by arrays of x and y coordinates.
38,Graphics2D,1,"void clipRect(int x, int y, int width, int height)",False,NULL
38,Graphics2D,2,"void drawLine(int x1, int y1, int x2, int y2)",False,NULL
38,Graphics2D,3,"void drawRect(int x, int y, int width, int height)",False,NULL
38,Graphics2D,4,"void drawOval(int x, int y, int width, int height)",False,NULL
38,Graphics2D,5,"void drawString(String str, int x, int y)",True,"Renders the text of the specified String, using the current text attribute state in the Graphics2D context."
39,GraphicsConfigTemplate,1,GraphicsConfigTemplate getInstance(),False,NULL
39,GraphicsConfigTemplate,2,GraphicsConfiguration getGraphicsConfiguration(),False,NULL
39,GraphicsConfigTemplate,3,GraphicsConfiguration getGraphicsConfiguration(int screen),False,NULL
39,GraphicsConfigTemplate,4,GraphicsConfiguration getBestConfiguration(int screen),False,NULL
39,GraphicsConfigTemplate,5,"GraphicsConfiguration getBestConfiguration(int screen, int width, int height)",False,NULL
40,GraphicsConfiguration,1,GraphicsConfiguration getDeviceConfiguration(),False,NULL
40,GraphicsConfiguration,2,Rectangle getBounds(),True,Returns the bounds of the GraphicsConfiguration in the device coordinates.
40,GraphicsConfiguration,3,GraphicsDevice getDevice(),True,Returns the GraphicsDevice associated with this GraphicsConfiguration.
40,GraphicsConfiguration,4,boolean isFullScreen(),False,NULL
40,GraphicsConfiguration,5,boolean isBitBltCapable(),False,NULL
41,GraphicsDevice,1,GraphicsDevice getDefaultConfiguration(),False,NULL
41,GraphicsDevice,2,GraphicsConfiguration[] getConfigurations(),True,Returns all of the GraphicsConfiguration objects associated with this GraphicsDevice.
41,GraphicsDevice,3,"GraphicsConfiguration getBestConfiguration(Rectangle targetBounds, GraphicsConfiguration[] configurations)",False,NULL
41,GraphicsDevice,4,"GraphicsConfiguration getBestConfiguration(Rectangle targetBounds, GraphicsConfiguration[] configurations, int typeHint)",False,NULL
41,GraphicsDevice,5,GraphicsConfiguration getDefaultConfiguration(Rectangle targetBounds),False,NULL
42,GraphicsEnvironment,1,GraphicsEnvironment getLocalGraphicsEnvironment(),True,Returns the local GraphicsEnvironment.
42,GraphicsEnvironment,2,GraphicsDevice[] getScreenDevices(),True,Returns an array of all of the screen GraphicsDevice objects.
42,GraphicsEnvironment,3,GraphicsDevice getDefaultScreenDevice(),True,Returns the default screen GraphicsDevice.
42,GraphicsEnvironment,4,Font[] getAllFonts(),True,Returns an array containing a one-point size instance of all fonts available in this GraphicsEnvironment.
42,GraphicsEnvironment,5,Font getFont(String fontName),False,NULL
43,GridBagConstraints,1,void gridwidth,False,NULL
43,GridBagConstraints,2,void gridheight,False,NULL
43,GridBagConstraints,3,void weightx,False,NULL
43,GridBagConstraints,4,void weighty,False,NULL
43,GridBagConstraints,5,void fill,False,NULL
43,GridBagConstraints,6,void anchor,False,NULL
43,GridBagConstraints,7,void insets,False,NULL
43,GridBagConstraints,8,void ipadx,False,NULL
43,GridBagConstraints,9,void ipady,False,NULL
43,GridBagConstraints,10,void gridx,False,NULL
43,GridBagConstraints,11,void gridy,False,NULL
44,GridBagLayout,1,"void addLayoutComponent(Component comp, Object constraints)",True,"Adds the specified component to the layout, using the specified constraints object."
44,GridBagLayout,2,"void addLayoutComponent(String name, Component comp)",True,"Has no effect, since this layout manager does not use a per-component string."
44,GridBagLayout,3,"void addLayoutComponent(Component comp, Object constraints, int index)",False,NULL
44,GridBagLayout,4,"void addLayoutComponent(String name, Component comp, int index)",False,NULL
44,GridBagLayout,5,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height)",False,NULL
44,GridBagLayout,6,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height)",False,NULL
44,GridBagLayout,7,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight)",False,NULL
44,GridBagLayout,8,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight)",False,NULL
44,GridBagLayout,9,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight)",False,NULL
44,GridBagLayout,10,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight)",False,NULL
44,GridBagLayout,11,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY)",False,NULL
44,GridBagLayout,12,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY)",False,NULL
44,GridBagLayout,13,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor)",False,NULL
44,GridBagLayout,14,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor)",False,NULL
44,GridBagLayout,15,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill)",False,NULL
44,GridBagLayout,16,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill)",False,NULL
44,GridBagLayout,17,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle)",False,NULL
44,GridBagLayout,18,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle)",False,NULL
44,GridBagLayout,19,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex)",False,NULL
44,GridBagLayout,20,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex)",False,NULL
44,GridBagLayout,21,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY)",False,NULL
44,GridBagLayout,22,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY)",False,NULL
44,GridBagLayout,23,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY, int baseline)",False,NULL
44,GridBagLayout,24,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY, int baseline)",False,NULL
44,GridBagLayout,25,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY, int baseline, int visible)",False,NULL
44,GridBagLayout,26,"void addLayoutComponent(Component comp, Object constraints, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY, int baseline, int visible)",False,NULL
44,GridBagLayout,27,"void addLayoutComponent(String name, Component comp, int x, int y, int width, int height, int maxWidth, int maxHeight, int minWidth, int minHeight, int weightX, int weightY, int anchor, int fill, int layoutStyle, int layoutStyleIndex, int alignmentX, int alignmentY, int baseline, int visible, int groupIndex)",False,NULL
45,GridBagLayoutInfo,1,GridBagLayoutInfo(),False,NULL
45,GridBagLayoutInfo,2,"void addLayoutComponent(String name, Component comp)",False,NULL
45,GridBagLayoutInfo,3,"void addLayoutComponent(Component comp, Object constraints)",False,NULL
45,GridBagLayoutInfo,4,"void addLayoutComponent(String name, Component comp, int width, int height)",False,NULL
45,GridBagLayoutInfo,5,"void addLayoutComponent(Component comp, Object constraints, int width, int height)",False,NULL
46,GridLayout,1,"GridLayout(int rows, int cols)",False,NULL
46,GridLayout,2,"GridLayout(int rows, int cols, int hgap, int vgap)",False,NULL
46,GridLayout,3,void setRows(int rows),True,Sets the number of rows in this layout to the specified value.
46,GridLayout,4,void setColumns(int cols),True,Sets the number of columns in this layout to the specified value.
46,GridLayout,5,void setHgap(int hgap),True,Sets the horizontal gap between components to the specified value.
46,GridLayout,6,void setVgap(int vgap),True,Sets the vertical gap between components to the specified value.
46,GridLayout,7,void setLayout(LayoutManager mgr),False,NULL
46,GridLayout,8,"void addLayoutComponent(String name, Component comp)",True,Adds the specified component with the specified name to the layout.
46,GridLayout,9,void removeLayoutComponent(Component comp),True,Removes the specified component from the layout.
46,GridLayout,10,Dimension preferredLayoutSize(Container parent),True,Determines the preferred size of the container argument using this grid layout.
46,GridLayout,11,Dimension minimumLayoutSize(Container parent),True,Determines the minimum size of the container argument using this grid layout.
46,GridLayout,12,void layoutContainer(Container parent),True,Lays out the specified container using this layout.
46,GridLayout,13,"void addLayoutComponent(Component comp, Object constraints)",False,NULL
46,GridLayout,14,"void removeLayoutComponent(Component comp, Object constraints)",False,NULL
46,GridLayout,15,"void addLayoutComponent(String name, Component comp, int index)",False,NULL
46,GridLayout,16,"void removeLayoutComponent(Component comp, int index)",False,NULL
46,GridLayout,17,"void addLayoutComponent(String name, Component comp, Object constraints)",False,NULL
46,GridLayout,18,"void removeLayoutComponent(Component comp, Object constraints)",False,NULL
46,GridLayout,19,"void addLayoutComponent(String name, Component comp, int index)",False,NULL
46,GridLayout,20,"void removeLayoutComponent(Component comp, int index)",False,NULL
47,Image,1,int getHeight(ImageObserver observer),True,Determines the height of the image.
47,Image,2,int getWidth(ImageObserver observer),True,Determines the width of the image.
47,Image,3,Object getProperty(String name),False,NULL
47,Image,4,boolean getPropertyNames(String[] names),False,NULL
47,Image,5,"boolean getPropertyUpdate(String name, ImageObserver observer)",False,NULL
48,ImageCapabilities,1,boolean isAccelerated(),True,Returns true if the object whose capabilities are encapsulated in this ImageCapabilities can be or is accelerated.
48,ImageCapabilities,2,boolean isAlphaPremultiplied(),False,NULL
48,ImageCapabilities,3,boolean isAlphaOnly(),False,NULL
48,ImageCapabilities,4,boolean isAnimated(),False,NULL
48,ImageCapabilities,5,boolean isBaselineResolution(),False,NULL
48,ImageCapabilities,6,boolean isBuffered(),False,NULL
48,ImageCapabilities,7,boolean isEnhanced(),False,NULL
48,ImageCapabilities,8,boolean isFloppy(),False,NULL
48,ImageCapabilities,9,boolean isIndexColorModel(),False,NULL
48,ImageCapabilities,10,boolean isMask(),False,NULL
48,ImageCapabilities,11,boolean isReadOnly(),False,NULL
48,ImageCapabilities,12,boolean isVolatile(),False,NULL
48,ImageCapabilities,13,boolean isWritable(),False,NULL
48,ImageCapabilities,14,boolean isWritableRaster(),False,NULL
48,ImageCapabilities,15,boolean isWritableRenderingHints(),False,NULL
48,ImageCapabilities,16,boolean isWritableTile(),False,NULL
48,ImageCapabilities,17,boolean isWritableTileCache(),False,NULL
48,ImageCapabilities,18,boolean isWritableVolatileImage(),False,NULL
48,ImageCapabilities,19,boolean isWritableVolatileImage(boolean b),False,NULL
48,ImageCapabilities,20,"boolean isWritableVolatileImage(boolean b, boolean c)",False,NULL
49,Insets,1,int getTop(),False,NULL
49,Insets,2,int getLeft(),False,NULL
49,Insets,3,int getBottom(),False,NULL
49,Insets,4,int getRight(),False,NULL
49,Insets,5,"void set(int top, int left, int bottom, int right)",True,"Set top, left, bottom, and right to the specified values"
50,JobAttributes,1,void setCopies(int copies),True,Specifies the number of copies the application should render for jobs using these attributes.
50,JobAttributes,2,int getCopies(),True,Returns the number of copies the application should render for jobs using these attributes.
50,JobAttributes,3,void setMediaPrintQuality(int mediaPrintQuality),False,NULL
50,JobAttributes,4,int getMediaPrintQuality(),False,NULL
50,JobAttributes,5,void setMediaPrintType(int mediaPrintType),False,NULL
50,JobAttributes,6,int getMediaPrintType(),False,NULL
50,JobAttributes,7,void setMediaSize(int mediaSize),False,NULL
50,JobAttributes,8,int getMediaSize(),False,NULL
50,JobAttributes,9,void setMediaType(int mediaType),False,NULL
50,JobAttributes,10,int getMediaType(),False,NULL
50,JobAttributes,11,void setOrientation(int orientation),False,NULL
50,JobAttributes,12,int getOrientation(),False,NULL
50,JobAttributes,13,void setPageRanges(int[] pageRanges),False,NULL
50,JobAttributes,14,int[] getPageRanges(),False,NULL
50,JobAttributes,15,void setPrinterName(String printerName),False,NULL
50,JobAttributes,16,String getPrinterName(),False,NULL
50,JobAttributes,17,void setResolution(int resolution),False,NULL
50,JobAttributes,18,int getResolution(),False,NULL
50,JobAttributes,19,void setSides(int sides),False,NULL
50,JobAttributes,20,int getSides(),False,NULL
51,JobAttributes.DefaultSelectionType,1,final DefaultSelectionType DEFAULT,False,NULL
51,JobAttributes.DefaultSelectionType,2,final DefaultSelectionType SELECTED,False,NULL
51,JobAttributes.DefaultSelectionType,3,final DefaultSelectionType UNSELECTED,False,NULL
51,JobAttributes.DefaultSelectionType,4,final DefaultSelectionType UNSELECTABLE,False,NULL
51,JobAttributes.DefaultSelectionType,5,final DefaultSelectionType UNSELECTED_UNSELECTABLE,False,NULL
52,JobAttributes.DestinationType,1,DestinationType getDestinationType(String name),False,NULL
52,JobAttributes.DestinationType,2,DestinationType[] getDestinationTypes(),False,NULL
52,JobAttributes.DestinationType,3,DestinationType valueOf(String name),False,NULL
52,JobAttributes.DestinationType,4,String getName(),False,NULL
52,JobAttributes.DestinationType,5,String toString(),True,Returns a string representation of the object.
53,JobAttributes.DialogType,1,DialogType.getDialogType(String name),False,NULL
53,JobAttributes.DialogType,2,DialogType.getDialogType(int ordinal),False,NULL
53,JobAttributes.DialogType,3,DialogType.getName(),False,NULL
53,JobAttributes.DialogType,4,DialogType.getOrdinal(),False,NULL
53,JobAttributes.DialogType,5,DialogType.values(),False,NULL
54,JobAttributes.MultipleDocumentHandlingType,1,MultipleDocumentHandlingType.COPY_ON_OPEN,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,2,MultipleDocumentHandlingType.COPY_ON_PRINT,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,3,MultipleDocumentHandlingType.COPY_ON_CLOSE,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,4,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,5,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE_OR_OPEN,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,6,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE_OR_OPEN_OR_SAVE,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,7,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE_OR_OPEN_OR_SAVE_OR_CLOSE,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,8,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE_OR_OPEN_OR_SAVE_OR_CLOSE_OR_OPEN,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,9,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE_OR_OPEN_OR_SAVE_OR_CLOSE_OR_OPEN_OR_SAVE,False,NULL
54,JobAttributes.MultipleDocumentHandlingType,10,MultipleDocumentHandlingType.COPY_ON_PRINT_OR_CLOSE_OR_OPEN_OR_SAVE_OR_CLOSE_OR_OPEN_OR_SAVE_OR_CLOSE,False,NULL
55,JobAttributes.SidesType,1,SidesType getInstance(String name),False,NULL
55,JobAttributes.SidesType,2,SidesType[] values(),False,NULL
55,JobAttributes.SidesType,3,SidesType valueOf(String name),False,NULL
55,JobAttributes.SidesType,4,String getName(),False,NULL
55,JobAttributes.SidesType,5,String toString(),True,Returns a string representation of the object.
56,KeyboardFocusManager,1,void addKeyEventDispatcher(KeyEventDispatcher ked),True,Adds a KeyEventDispatcher to this KeyboardFocusManager's dispatcher chain.
56,KeyboardFocusManager,2,void addWindowFocusListener(WindowFocusListener l),False,NULL
56,KeyboardFocusManager,3,void dispatchEvent(KeyEvent e),False,NULL
56,KeyboardFocusManager,4,void dispatchEvent(WindowEvent e),False,NULL
56,KeyboardFocusManager,5,KeyEventDispatcher[] getDispatchers(),False,NULL
56,KeyboardFocusManager,6,WindowFocusListener[] getListeners(),False,NULL
56,KeyboardFocusManager,7,void removeKeyEventDispatcher(KeyEventDispatcher ked),True,Removes a KeyEventDispatcher which was previously added to this KeyboardFocusManager's dispatcher chain.
56,KeyboardFocusManager,8,void removeWindowFocusListener(WindowFocusListener l),False,NULL
56,KeyboardFocusManager,9,void setCurrentKeyEventDispatcher(KeyEventDispatcher ked),False,NULL
56,KeyboardFocusManager,10,"void setDefaultFocusTraversalKeys(int direction, int keyCode)",False,NULL
56,KeyboardFocusManager,11,void setFocusManager(FocusManager fm),False,NULL
56,KeyboardFocusManager,12,"void setFocusTraversalKeys(int direction, int keyCode)",False,NULL
56,KeyboardFocusManager,13,"void setGlobalFocusTraversalKeys(int direction, int keyCode)",False,NULL
56,KeyboardFocusManager,14,"void setWindowFocusTraversalKeys(int direction, int keyCode)",False,NULL
56,KeyboardFocusManager,15,"void updateFocusTraversalKeys(int direction, int keyCode)",False,NULL
56,KeyboardFocusManager,16,"void updateWindowFocusTraversalKeys(int direction, int keyCode)",False,NULL
57,Label,1,void setAlignment(int alignment),True,Sets the alignment for this label to the specified alignment.
57,Label,2,void setText(String text),True,Sets the text for this label to the specified text.
57,Label,3,void setIcon(Icon icon),False,NULL
57,Label,4,void setIconTextGap(int gap),False,NULL
57,Label,5,void setLabelFor(Component labelFor),False,NULL
58,LinearGradientPaint,1,"LinearGradientPaint(float x1, float y1, float x2, float y2, Color[] colors, float[] fractions)",False,NULL
58,LinearGradientPaint,2,"LinearGradientPaint(float x1, float y1, float x2, float y2, Color color1, Color color2)",False,NULL
58,LinearGradientPaint,3,Color[] getColors(),False,NULL
58,LinearGradientPaint,4,float[] getFractions(),False,NULL
58,LinearGradientPaint,5,float getStartPointX(),False,NULL
58,LinearGradientPaint,6,float getStartPointY(),False,NULL
58,LinearGradientPaint,7,float getEndPointX(),False,NULL
58,LinearGradientPaint,8,float getEndPointY(),False,NULL
58,LinearGradientPaint,9,"PaintContext createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints)",True,Creates and returns a PaintContext used to generate a linear color gradient pattern.
58,LinearGradientPaint,10,"PaintContext createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints, int rule)",False,NULL
59,List,1,boolean add(E e),False,NULL
59,List,2,"void add(int index, E element)",False,NULL
59,List,3,boolean addAll(Collection<? extends E> c),False,NULL
59,List,4,void clear(),True,"Deprecated. As of JDK version 1.1, replaced by removeAll()."
59,List,5,boolean contains(Object o),False,NULL
60,MediaTracker,1,boolean add(E e),False,NULL
60,MediaTracker,2,"boolean add(int index, E element)",False,NULL
60,MediaTracker,3,void clear(),False,NULL
60,MediaTracker,4,boolean contains(Object o),False,NULL
60,MediaTracker,5,E get(int index),False,NULL
60,MediaTracker,6,int indexOf(Object o),False,NULL
60,MediaTracker,7,boolean isAlive(),False,NULL
60,MediaTracker,8,int waitForAll(),False,NULL
60,MediaTracker,9,"int waitForID(int id, long timeout)",False,NULL
60,MediaTracker,10,int waitForID(int id),False,NULL
60,MediaTracker,11,int getStatus(int id),False,NULL
60,MediaTracker,12,int getTotalSize(),False,NULL
60,MediaTracker,13,int getNumberOfImagesLoaded(),False,NULL
60,MediaTracker,14,int getNumberOfMediaFailed(),False,NULL
60,MediaTracker,15,int getNumberOfMediaLoaded(),False,NULL
60,MediaTracker,16,int getNumberOfMediaStarted(),False,NULL
60,MediaTracker,17,int getNumberOfMediaComplete(),False,NULL
60,MediaTracker,18,int getNumberOfMediaAborted(),False,NULL
60,MediaTracker,19,int getNumberOfMediaErrors(),False,NULL
60,MediaTracker,20,int getNumberOfMediaStarted(),False,NULL
60,MediaTracker,21,int getNumberOfMediaComplete(),False,NULL
60,MediaTracker,22,int getNumberOfMediaAborted(),False,NULL
60,MediaTracker,23,int getNumberOfMediaErrors(),False,NULL
60,MediaTracker,24,int getNumberOfMediaStarted(),False,NULL
60,MediaTracker,25,int getNumberOfMediaComplete(),False,NULL
60,MediaTracker,26,int getNumberOfMediaAborted(),False,NULL
60,MediaTracker,27,int getNumberOfMediaErrors(),False,NULL
60,MediaTracker,28,int getNumberOfMediaStarted(),False,NULL
60,MediaTracker,29,int getNumberOfMediaComplete(),False,NULL
60,MediaTracker,30,int getNumberOfMediaAborted(),False,NULL
60,MediaTracker,31,int getNumberOfMediaErrors(),False,NULL
60,MediaTracker,32,int getNumberOfMediaStarted(),False,NULL
60,MediaTracker,33,int getNumberOfMediaComplete(),False,NULL
60,MediaTracker,34,int getNumberOfMediaAborted(),False,NULL
60,MediaTracker,35,int getNumberOfMediaErrors(),False,NULL
61,Menu,1,MenuBar(),False,NULL
61,Menu,2,add(Menu m),False,NULL
61,Menu,3,remove(Menu m),False,NULL
61,Menu,4,getMenuCount(),False,NULL
61,Menu,5,getMenu(int index),False,NULL
62,MenuBar,1,MenuBar(),False,NULL
62,MenuBar,2,void add(Menu menu),False,NULL
62,MenuBar,3,Menu getMenu(int index),True,Gets the specified menu.
62,MenuBar,4,int getMenuCount(),True,Gets the number of menus on the menu bar.
62,MenuBar,5,void remove(int index),True,Removes the menu located at the specified index from this menu bar.
63,MenuComponent,1,boolean add(E e),False,NULL
63,MenuComponent,2,boolean addAll(Collection<? extends E> c),False,NULL
63,MenuComponent,3,void clear(),False,NULL
63,MenuComponent,4,boolean contains(Object o),False,NULL
63,MenuComponent,5,boolean containsAll(Collection<?> c),False,NULL
64,MenuItem,1,boolean add(E e),False,NULL
64,MenuItem,2,boolean addAll(Collection<? extends E> c),False,NULL
64,MenuItem,3,void addActionListener(ActionListener l),True,Adds the specified action listener to receive action events from this menu item.
64,MenuItem,4,void addNotify(),True,Creates the menu item's peer.
64,MenuItem,5,void addNotify(),True,Creates the menu item's peer.
65,MenuShortcut,1,MenuShortcut(String shortcut),False,NULL
65,MenuShortcut,2,String getShortcut(),False,NULL
65,MenuShortcut,3,void setShortcut(String shortcut),False,NULL
65,MenuShortcut,4,boolean equals(Object obj),True,Returns whether this MenuShortcut is the same as another: equality is defined to mean that both MenuShortcuts use the same key and both either use or don't use the SHIFT key.
65,MenuShortcut,5,int hashCode(),True,Returns the hashcode for this MenuShortcut.
66,MouseInfo,1,int getPointerInfo().getLocation().x,False,NULL
66,MouseInfo,2,int getPointerInfo().getLocation().y,False,NULL
66,MouseInfo,3,int getNumberOfButtons(),True,Returns the number of buttons on the mouse.
66,MouseInfo,4,boolean isButtonPressed(int button),False,NULL
66,MouseInfo,5,boolean isButtonDown(int button),False,NULL
67,MultipleGradientPaint,1,"MultipleGradientPaint(float[] fractions, Color[] colors, CycleMethod cycleMethod)",False,NULL
67,MultipleGradientPaint,2,"MultipleGradientPaint(float[] fractions, Color[] colors, CycleMethod cycleMethod, Transform transform)",False,NULL
67,MultipleGradientPaint,3,"MultipleGradientPaint(float[] fractions, Color[] colors, CycleMethod cycleMethod, AffineTransform transform)",False,NULL
67,MultipleGradientPaint,4,"MultipleGradientPaint(float[] fractions, Color[] colors, CycleMethod cycleMethod, Point2D startPoint, Point2D endPoint)",False,NULL
67,MultipleGradientPaint,5,"MultipleGradientPaint(float[] fractions, Color[] colors, CycleMethod cycleMethod, Point2D startPoint, Point2D endPoint, Transform transform)",False,NULL
67,MultipleGradientPaint,6,"MultipleGradientPaint(float[] fractions, Color[] colors, CycleMethod cycleMethod, Point2D startPoint, Point2D endPoint, AffineTransform transform)",False,NULL
68,PageAttributes,1,boolean equals(Object obj),True,Determines whether two PageAttributes are equal to each other.
68,PageAttributes,2,int hashCode(),True,Returns a hash code value for this PageAttributes.
68,PageAttributes,3,Object clone(),True,Creates and returns a copy of this PageAttributes.
68,PageAttributes,4,PageAttributes getMedia(),False,NULL
68,PageAttributes,5,PageAttributes getMediaType(),False,NULL
68,PageAttributes,6,PageAttributes getOrientation(),False,NULL
68,PageAttributes,7,PageAttributes getCollation(),False,NULL
68,PageAttributes,8,PageAttributes getCopies(),False,NULL
68,PageAttributes,9,PageAttributes getDuplex(),False,NULL
68,PageAttributes,10,PageAttributes getFinishings(),False,NULL
68,PageAttributes,11,PageAttributes getMediaSize(),False,NULL
68,PageAttributes,12,PageAttributes getMediaSizeName(),False,NULL
68,PageAttributes,13,PageAttributes getMediaSizeName(String name),False,NULL
68,PageAttributes,14,"PageAttributes getMediaSizeName(String name, String name)",False,NULL
68,PageAttributes,15,"PageAttributes getMediaSizeName(String name, String name, String name)",False,NULL
68,PageAttributes,16,"PageAttributes getMediaSizeName(String name, String name, String name, String name)",False,NULL
68,PageAttributes,17,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,18,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,19,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,20,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,21,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,22,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,23,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,24,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,25,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,26,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,27,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,28,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,29,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,30,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,31,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,32,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,33,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,34,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,35,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,36,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
68,PageAttributes,37,"PageAttributes getMediaSizeName(String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name, String name)",False,NULL
69,PageAttributes.ColorType,1,ColorType getColorType(),False,NULL
69,PageAttributes.ColorType,2,ColorType getColorType(int index),False,NULL
69,PageAttributes.ColorType,3,int getColorTypeCount(),False,NULL
69,PageAttributes.ColorType,4,boolean isColorTypeSupported(ColorType colorType),False,NULL
69,PageAttributes.ColorType,5,boolean isColorTypeSupported(int index),False,NULL
70,PageAttributes.MediaType,1,"MediaType(String name, String vendor, String version)",False,NULL
70,PageAttributes.MediaType,2,String getName(),False,NULL
70,PageAttributes.MediaType,3,String getVendor(),False,NULL
70,PageAttributes.MediaType,4,String getVersion(),False,NULL
70,PageAttributes.MediaType,5,boolean equals(Object obj),False,NULL
70,PageAttributes.MediaType,6,int hashCode(),True,Returns a hash code value for the object.
70,PageAttributes.MediaType,7,String toString(),True,Returns a string representation of the object.
71,PageAttributes.OrientationRequestedType,1,OrientationRequestedType getOrientationRequested(),False,NULL
71,PageAttributes.OrientationRequestedType,2,boolean isOrientationRequested(),False,NULL
71,PageAttributes.OrientationRequestedType,3,boolean isOrientationRequested(int orientation),False,NULL
71,PageAttributes.OrientationRequestedType,4,boolean isOrientationRequested(OrientationRequestedType orientation),False,NULL
71,PageAttributes.OrientationRequestedType,5,boolean isOrientationRequested(String orientation),False,NULL
72,PageAttributes.OriginType,1,OriginType getDefaultOriginType(),False,NULL
72,PageAttributes.OriginType,2,OriginType getOriginType(int originType),False,NULL
72,PageAttributes.OriginType,3,int getOriginType(OriginType originType),False,NULL
72,PageAttributes.OriginType,4,boolean isSupported(int originType),False,NULL
72,PageAttributes.OriginType,5,boolean isSupported(OriginType originType),False,NULL
73,PageAttributes.PrintQualityType,1,PrintQualityType.DRAFT,False,NULL
73,PageAttributes.PrintQualityType,2,PrintQualityType.NORMAL,False,NULL
73,PageAttributes.PrintQualityType,3,PrintQualityType.PHOTOGRAPHIC,False,NULL
73,PageAttributes.PrintQualityType,4,PrintQualityType.VALUE_OF(String name),False,NULL
73,PageAttributes.PrintQualityType,5,PrintQualityType.values(),False,NULL
74,Panel,1,void add(Component comp),False,NULL
74,Panel,2,"void add(Component comp, Object constraints)",False,NULL
74,Panel,3,"void add(Component comp, Object constraints, int index)",False,NULL
74,Panel,4,"void add(Component comp, Object constraints, int index, int width, int height)",False,NULL
74,Panel,5,"void add(Component comp, Object constraints, int index, double weightx, double weighty)",False,NULL
75,Point,1,int x,False,NULL
75,Point,2,int y,False,NULL
75,Point,3,"void setLocation(int x, int y)",True,Changes the point to have the specified location.
75,Point,4,void setLocation(Point p),True,Sets the location of the point to the specified location.
75,Point,5,"void translate(int x, int y)",True,"Translates this point, at location (x,y), by dx along the x axis and dy along the y axis so that it now represents the point (x+dx,y+dy)."
76,PointerInfo,1,PointerInfo getPointerInfo(),False,NULL
76,PointerInfo,2,Point getLocation(),True,Returns the Point that represents the coordinates of the pointer on the screen.
76,PointerInfo,3,Rectangle getBounds(),False,NULL
76,PointerInfo,4,boolean isVisible(),False,NULL
76,PointerInfo,5,boolean isValid(),False,NULL
77,Polygon,1,"boolean addPoint(int x, int y)",False,NULL
77,Polygon,2,int[] getXPoints(),False,NULL
77,Polygon,3,int[] getYPoints(),False,NULL
77,Polygon,4,int npoints(),False,NULL
77,Polygon,5,"void setPolygon(int[] xpoints, int[] ypoints, int npoints)",False,NULL
78,PopupMenu,1,boolean add(E e),False,NULL
78,PopupMenu,2,void addSeparator(),False,NULL
78,PopupMenu,3,void add(String label),False,NULL
78,PopupMenu,4,"void add(String label, ActionListener listener)",False,NULL
78,PopupMenu,5,void remove(int index),False,NULL
79,PrintJob,1,"PrintJob(Graphics graphics, PageFormat pageFormat, int dialogType)",False,NULL
79,PrintJob,2,void end(),True,Ends the print job and does any necessary cleanup.
79,PrintJob,3,"void print(Graphics graphics, PageFormat pageFormat, int pageIndex)",False,NULL
79,PrintJob,4,void setJobName(String jobName),False,NULL
79,PrintJob,5,void setPrintService(PrintService printService),False,NULL
80,RadialGradientPaint,1,"RadialGradientPaint(float focusX, float focusY, float focusRadius, float[] fractions, Color[] colors)",False,NULL
80,RadialGradientPaint,2,"RadialGradientPaint(float focusX, float focusY, float focusRadius, float[] fractions, Color[] colors, CycleMethod cycleMethod)",False,NULL
80,RadialGradientPaint,3,float getFocusX(),False,NULL
80,RadialGradientPaint,4,float getFocusY(),False,NULL
80,RadialGradientPaint,5,float getFocusRadius(),False,NULL
80,RadialGradientPaint,6,float[] getFractions(),False,NULL
80,RadialGradientPaint,7,Color[] getColors(),False,NULL
80,RadialGradientPaint,8,CycleMethod getCycleMethod(),False,NULL
80,RadialGradientPaint,9,"PaintContext createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints)",True,Creates and returns a PaintContext used to generate a circular radial color gradient pattern.
80,RadialGradientPaint,10,"PaintContext createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints, int rule)",False,NULL
81,Rectangle,1,int getX(),False,NULL
81,Rectangle,2,int getY(),False,NULL
81,Rectangle,3,int getWidth(),False,NULL
81,Rectangle,4,int getHeight(),False,NULL
81,Rectangle,5,"void setRect(int x, int y, int w, int h)",False,NULL
82,RenderingHints,1,boolean contains(Object o),False,NULL
82,RenderingHints,2,boolean containsAll(Collection<?> c),False,NULL
82,RenderingHints,3,boolean remove(Object o),False,NULL
82,RenderingHints,4,boolean removeAll(Collection<?> c),False,NULL
82,RenderingHints,5,boolean retainAll(Collection<?> c),False,NULL
83,RenderingHints.Key,1,RenderingHints.Key.ALPHA_INTERPOLATION,False,NULL
83,RenderingHints.Key,2,RenderingHints.Key.ANTIALIASING,False,NULL
83,RenderingHints.Key,3,RenderingHints.Key.COLOR_RENDERING,False,NULL
83,RenderingHints.Key,4,RenderingHints.Key.DITHERING,False,NULL
83,RenderingHints.Key,5,RenderingHints.Key.FRACTIONALMETRICS,False,NULL
83,RenderingHints.Key,6,RenderingHints.Key.INTERPOLATION,False,NULL
83,RenderingHints.Key,7,RenderingHints.Key.KEY_ANTIALIASING,False,NULL
83,RenderingHints.Key,8,RenderingHints.Key.KEY_COLOR_RENDERING,False,NULL
83,RenderingHints.Key,9,RenderingHints.Key.KEY_DITHERING,False,NULL
83,RenderingHints.Key,10,RenderingHints.Key.KEY_FRACTIONALMETRICS,False,NULL
83,RenderingHints.Key,11,RenderingHints.Key.KEY_INTERPOLATION,False,NULL
83,RenderingHints.Key,12,RenderingHints.Key.KEY_RENDERING,False,NULL
83,RenderingHints.Key,13,RenderingHints.Key.KEY_STROKE_CONTROL,False,NULL
83,RenderingHints.Key,14,RenderingHints.Key.KEY_TEXT_ANTIALIASING,False,NULL
83,RenderingHints.Key,15,RenderingHints.Key.RENDERING,False,NULL
83,RenderingHints.Key,16,RenderingHints.Key.STROKE_CONTROL,False,NULL
83,RenderingHints.Key,17,RenderingHints.Key.TEXT_ANTIALIASING,False,NULL
84,Robot,1,void keyPress(int keycode),True,Presses a given key.
84,Robot,2,void keyRelease(int keycode),True,Releases a given key.
84,Robot,3,void mousePress(int buttons),True,Presses one or more mouse buttons.
84,Robot,4,void mouseRelease(int buttons),True,Releases one or more mouse buttons.
84,Robot,5,"void mouseMove(int x, int y)",True,Moves mouse pointer to given screen coordinates.
84,Robot,6,void delay(int time),True,Sleeps for the specified time.
84,Robot,7,void mouseWheel(int wheelAmt),True,Rotates the scroll wheel on wheel-equipped mice.
84,Robot,8,"void mouseDrag(InputEvent origin, InputEvent destination)",False,NULL
84,Robot,9,"void mouseDrag(InputEvent origin, InputEvent destination, int button)",False,NULL
84,Robot,10,void mousePress(InputEvent e),False,NULL
84,Robot,11,void mouseRelease(InputEvent e),False,NULL
84,Robot,12,void mouseMove(InputEvent e),False,NULL
84,Robot,13,void keyPress(InputEvent e),False,NULL
84,Robot,14,void keyRelease(InputEvent e),False,NULL
84,Robot,15,void mouseWheel(InputEvent e),False,NULL
84,Robot,16,"void mousePress(int x, int y, int button)",False,NULL
84,Robot,17,"void mouseRelease(int x, int y, int button)",False,NULL
84,Robot,18,"void mouseMove(int x, int y)",True,Moves mouse pointer to given screen coordinates.
84,Robot,19,"void keyPress(int keycode, int modifiers)",False,NULL
84,Robot,20,"void keyRelease(int keycode, int modifiers)",False,NULL
84,Robot,21,"void mousePress(int x, int y, int button, int modifiers)",False,NULL
84,Robot,22,"void mouseRelease(int x, int y, int button, int modifiers)",False,NULL
84,Robot,23,"void mouseMove(int x, int y, int modifiers)",False,NULL
84,Robot,24,"void keyPress(int keycode, int modifiers, int when)",False,NULL
84,Robot,25,"void keyRelease(int keycode, int modifiers, int when)",False,NULL
84,Robot,26,"void mousePress(int x, int y, int button, int modifiers, int when)",False,NULL
84,Robot,27,"void mouseRelease(int x, int y, int button, int modifiers, int when)",False,NULL
84,Robot,28,"void mouseMove(int x, int y, int modifiers, int when)",False,NULL
84,Robot,29,"void mousePress(int x, int y, int button, int modifiers, int when, int delay)",False,NULL
84,Robot,30,"void mouseRelease(int x, int y, int button, int modifiers, int when, int delay)",False,NULL
84,Robot,31,"void mouseMove(int x, int y, int modifiers, int when, int delay)",False,NULL
84,Robot,32,"void keyPress(int keycode, int modifiers, int when, int delay)",False,NULL
84,Robot,33,"void keyRelease(int keycode, int modifiers, int when, int delay)",False,NULL
84,Robot,34,"void mousePress(int x, int y, int button, int modifiers, int when, int delay)",False,NULL
84,Robot,35,"void mouseRelease(int x, int y, int button, int modifiers, int when, int delay)",False,NULL
84,Robot,36,"void mouseMove(int x, int y, int modifiers, int when, int delay)",False,NULL
84,Robot,37,"void mousePress(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,38,"void mouseRelease(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,39,"void mouseMove(int x, int y, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,40,"void keyPress(int keycode, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,41,"void keyRelease(int keycode, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,42,"void mousePress(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,43,"void mouseRelease(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,44,"void mouseMove(int x, int y, int modifiers, int when, int delay, int xOrigin, int yOrigin)",False,NULL
84,Robot,45,"void mousePress(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
84,Robot,46,"void mouseRelease(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
84,Robot,47,"void mouseMove(int x, int y, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
84,Robot,48,"void keyPress(int keycode, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
84,Robot,49,"void keyRelease(int keycode, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
84,Robot,50,"void mousePress(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
84,Robot,51,"void mouseRelease(int x, int y, int button, int modifiers, int when, int delay, int xOrigin, int yOrigin, int xRoot, int yRoot)",False,NULL
85,Scrollbar,1,"Scrollbar(int orientation, int value, int extent, int min, int max)",False,NULL
85,Scrollbar,2,int getBlockIncrement(),True,Gets the block increment of this scroll bar.
85,Scrollbar,3,int getMaximum(),True,Gets the maximum value of this scroll bar.
85,Scrollbar,4,int getMinimum(),True,Gets the minimum value of this scroll bar.
85,Scrollbar,5,int getValue(),True,Gets the current value of this scroll bar.
85,Scrollbar,6,void setBlockIncrement(int blockIncrement),True,Sets the block increment for this scroll bar.
85,Scrollbar,7,void setMaximum(int maximum),True,Sets the maximum value of this scroll bar.
85,Scrollbar,8,void setMinimum(int minimum),True,Sets the minimum value of this scroll bar.
85,Scrollbar,9,void setValue(int value),True,Sets the value of this scroll bar to the specified value.
85,Scrollbar,10,void addAdjustmentListener(AdjustmentListener l),True,Adds the specified adjustment listener to receive instances of AdjustmentEvent from this scroll bar.
85,Scrollbar,11,void removeAdjustmentListener(AdjustmentListener l),True,Removes the specified adjustment listener so that it no longer receives instances of AdjustmentEvent from this scroll bar.
85,Scrollbar,12,void setUnitIncrement(int unitIncrement),True,Sets the unit increment for this scroll bar.
85,Scrollbar,13,int getUnitIncrement(),True,Gets the unit increment for this scrollbar.
85,Scrollbar,14,int getVisibleAmount(),True,Gets the visible amount of this scroll bar.
85,Scrollbar,15,void setVisibleAmount(int visibleAmount),True,Sets the visible amount of this scroll bar.
86,ScrollPane,1,ScrollPane(),False,NULL
86,ScrollPane,2,void setViewportView(Component view),False,NULL
86,ScrollPane,3,void setHorizontalScrollBarPolicy(int policy),False,NULL
86,ScrollPane,4,void setVerticalScrollBarPolicy(int policy),False,NULL
86,ScrollPane,5,void setPreferredSize(Dimension preferredSize),False,NULL
87,ScrollPaneAdjustable,1,int getBlockIncrement(),True,Gets the block value increment for the adjustable object.
87,ScrollPaneAdjustable,2,int getMaximum(),True,Gets the maximum value of the adjustable object.
87,ScrollPaneAdjustable,3,int getMinimum(),True,Gets the minimum value of the adjustable object.
87,ScrollPaneAdjustable,4,int getUnitIncrement(),True,Gets the unit value increment for the adjustable object.
87,ScrollPaneAdjustable,5,int getValue(),True,Gets the current value of the adjustable object.
88,SplashScreen,1,boolean isVisible(),True,Determines whether the splash screen is visible.
88,SplashScreen,2,void close(),True,"Hides the splash screen, closes the window, and releases all associated resources."
88,SplashScreen,3,BufferedImage getImage(),False,NULL
88,SplashScreen,4,Rectangle getBounds(),True,Returns the bounds of the splash screen window as a Rectangle.
88,SplashScreen,5,Graphics2D createGraphics(),True,"Creates a graphics context (as a Graphics2D object) for the splash screen overlay image, which allows you to draw over the splash screen."
89,SystemColor,1,Color getControl(),False,NULL
89,SystemColor,2,Color getControlHighlight(),False,NULL
89,SystemColor,3,Color getControlLtHighlight(),False,NULL
89,SystemColor,4,Color getControlShadow(),False,NULL
89,SystemColor,5,Color getDesktop(),False,NULL
89,SystemColor,6,Color getHighlight(),False,NULL
89,SystemColor,7,Color getInfo(),False,NULL
89,SystemColor,8,Color getInfoText(),False,NULL
89,SystemColor,9,Color getMenu(),False,NULL
89,SystemColor,10,Color getMenuText(),False,NULL
89,SystemColor,11,Color getScrollbar(),False,NULL
89,SystemColor,12,Color getShadow(),False,NULL
89,SystemColor,13,Color getText(),False,NULL
89,SystemColor,14,Color getTextHighlight(),False,NULL
89,SystemColor,15,Color getTextInactiveText(),False,NULL
89,SystemColor,16,Color getWindow(),False,NULL
89,SystemColor,17,Color getWindowBorder(),False,NULL
89,SystemColor,18,Color getWindowText(),False,NULL
90,SystemTray,1,boolean isSupported(),True,Returns whether the system tray is supported on the current platform.
90,SystemTray,2,TrayIcon[] getTrayIcons(),True,Returns an array of all icons added to the tray by this application.
90,SystemTray,3,void setTrayIcon(TrayIcon trayIcon),False,NULL
90,SystemTray,4,void remove(TrayIcon trayIcon),True,Removes the specified TrayIcon from the SystemTray.
90,SystemTray,5,void add(TrayIcon trayIcon),True,Adds a TrayIcon to the SystemTray.
91,TextArea,1,void append(String str),True,Appends the given text to the text area's current text.
91,TextArea,2,"void setBounds(int x, int y, int width, int height)",False,NULL
91,TextArea,3,void setColumns(int columns),True,Sets the number of columns for this text area.
91,TextArea,4,void setRows(int rows),True,Sets the number of rows for this text area.
91,TextArea,5,void setEditable(boolean b),False,NULL
92,TextComponent,1,boolean add(E e),False,NULL
92,TextComponent,2,"void add(int index, E element)",False,NULL
92,TextComponent,3,boolean addAll(Collection<? extends E> c),False,NULL
92,TextComponent,4,"boolean addAll(int index, Collection<? extends E> c)",False,NULL
92,TextComponent,5,void clear(),False,NULL
93,TextField,1,TextField(),False,NULL
93,TextField,2,void setColumns(int columns),True,Sets the number of columns in this text field.
93,TextField,3,int getColumns(),True,Gets the number of columns in this text field.
93,TextField,4,void setEchoChar(char echoChar),True,Sets the echo character for this text field.
93,TextField,5,char getEchoChar(),True,Gets the character that is to be used for echoing.
93,TextField,6,void setEditable(boolean b),False,NULL
93,TextField,7,boolean isEditable(),False,NULL
93,TextField,8,void setText(String text),True,Sets the text that is presented by this text component to be the specified text.
93,TextField,9,String getText(),False,NULL
93,TextField,10,void setCaretPosition(int caretPosition),False,NULL
93,TextField,11,int getCaretPosition(),False,NULL
93,TextField,12,void setSelectionStart(int selectionStart),False,NULL
93,TextField,13,int getSelectionStart(),False,NULL
93,TextField,14,void setSelectionEnd(int selectionEnd),False,NULL
93,TextField,15,int getSelectionEnd(),False,NULL
93,TextField,16,void setActionCommand(String actionCommand),False,NULL
93,TextField,17,String getActionCommand(),False,NULL
93,TextField,18,void setActionListener(ActionListener l),False,NULL
93,TextField,19,ActionListener getActionListener(),False,NULL
93,TextField,20,"void setBounds(int x, int y, int width, int height)",False,NULL
93,TextField,21,void setBounds(Rectangle r),False,NULL
93,TextField,22,void setFont(Font font),False,NULL
93,TextField,23,Font getFont(),False,NULL
93,TextField,24,void setForeground(Color c),False,NULL
93,TextField,25,Color getForeground(),False,NULL
93,TextField,26,void setBackground(Color c),False,NULL
93,TextField,27,Color getBackground(),False,NULL
93,TextField,28,void setEnabled(boolean b),False,NULL
93,TextField,29,boolean isEnabled(),False,NULL
93,TextField,30,void setVisible(boolean b),False,NULL
93,TextField,31,boolean isVisible(),False,NULL
93,TextField,32,void setFocusable(boolean b),False,NULL
93,TextField,33,boolean isFocusable(),False,NULL
93,TextField,34,void setFocusTraversalKeysEnabled(boolean b),False,NULL
93,TextField,35,boolean isFocusTraversalKeysEnabled(),False,NULL
93,TextField,36,void setComponentOrientation(ComponentOrientation orientation),False,NULL
93,TextField,37,ComponentOrientation getComponentOrientation(),False,NULL
93,TextField,38,void setToolTipText(String toolTipText),False,NULL
93,TextField,39,String getToolTipText(),False,NULL
93,TextField,40,void setName(String name),False,NULL
93,TextField,41,String getName(),False,NULL
93,TextField,42,void setLabel(String label),False,NULL
93,TextField,43,String getLabel(),False,NULL
93,TextField,44,void setLabelFor(String labelFor),False,NULL
93,TextField,45,String getLabelFor(),False,NULL
93,TextField,46,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,47,LabelTable getLabelTable(),False,NULL
93,TextField,48,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,49,LabelTable getLabelTable(),False,NULL
93,TextField,50,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,51,LabelTable getLabelTable(),False,NULL
93,TextField,52,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,53,LabelTable getLabelTable(),False,NULL
93,TextField,54,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,55,LabelTable getLabelTable(),False,NULL
93,TextField,56,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,57,LabelTable getLabelTable(),False,NULL
93,TextField,58,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,59,LabelTable getLabelTable(),False,NULL
93,TextField,60,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,61,LabelTable getLabelTable(),False,NULL
93,TextField,62,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,63,LabelTable getLabelTable(),False,NULL
93,TextField,64,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,65,LabelTable getLabelTable(),False,NULL
93,TextField,66,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,67,LabelTable getLabelTable(),False,NULL
93,TextField,68,void setLabelTable(LabelTable labelTable),False,NULL
93,TextField,69,LabelTable getLabelTable(),False,NULL
94,TexturePaint,1,"TexturePaint(BufferedImage image, Rectangle2D texRect)",False,NULL
94,TexturePaint,2,"TexturePaint(BufferedImage image, Rectangle2D texRect, TexturePaint.Transform tx)",False,NULL
94,TexturePaint,3,BufferedImage getImage(),True,Returns the BufferedImage texture used to fill the shapes.
94,TexturePaint,4,Rectangle2D getTextureRect(),False,NULL
94,TexturePaint,5,TexturePaint.Transform getTransform(),False,NULL
95,Toolkit,1,Dimension getScreenSize(),True,Gets the size of the screen.
95,Toolkit,2,Rectangle getScreenRect(),False,NULL
95,Toolkit,3,GraphicsConfiguration[] getScreenConfigurations(),False,NULL
95,Toolkit,4,void beep(),True,Emits an audio beep depending on native system settings and hardware capabilities.
95,Toolkit,5,"void showSystemEvent(String title, String message)",False,NULL
95,Toolkit,6,void openWindows(),False,NULL
95,Toolkit,7,void openWindows(Frame f),False,NULL
95,Toolkit,8,"void openWindows(Frame f, String title)",False,NULL
95,Toolkit,9,"void openWindows(Frame f, String title, int x, int y, int w, int h)",False,NULL
95,Toolkit,10,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type)",False,NULL
95,Toolkit,11,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable)",False,NULL
95,Toolkit,12,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal)",False,NULL
95,Toolkit,13,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront)",False,NULL
95,Toolkit,14,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify)",False,NULL
95,Toolkit,15,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate)",False,NULL
95,Toolkit,16,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable)",False,NULL
95,Toolkit,17,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu)",False,NULL
95,Toolkit,18,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar)",False,NULL
95,Toolkit,19,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar)",False,NULL
95,Toolkit,20,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated)",False,NULL
95,Toolkit,21,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked)",False,NULL
95,Toolkit,22,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive)",False,NULL
95,Toolkit,23,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive, boolean isModalType)",False,NULL
95,Toolkit,24,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive, boolean isModalType, boolean isModalTransparencyType)",False,NULL
95,Toolkit,25,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive, boolean isModalType, boolean isModalTransparencyType, boolean isModalFullScreenType)",False,NULL
95,Toolkit,26,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive, boolean isModalType, boolean isModalTransparencyType, boolean isModalFullScreenType, boolean isModalFullScreenBlocked)",False,NULL
95,Toolkit,27,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive, boolean isModalType, boolean isModalTransparencyType, boolean isModalFullScreenType, boolean isModalFullScreenBlocked, boolean isModalFullScreenExclusive)",False,NULL
95,Toolkit,28,"void openWindows(Frame f, String title, int x, int y, int w, int h, int type, boolean resizable, boolean modal, boolean closeToFront, boolean iconify, boolean decorate, boolean focusable, boolean hasPopupMenu, boolean hasMenuBar, boolean hasToolBar, boolean isUndecorated, boolean isModalBlocked, boolean isModalExclusive, boolean isModalType, boolean isModalTransparencyType, boolean isModalFullScreenType, boolean isModalFullScreenBlocked, boolean isModalFullScreenExclusive, boolean isModalFullScreenType)",False,NULL
96,TrayIcon,1,TrayIcon(Image image),False,NULL
96,TrayIcon,2,"void displayMessage(String caption, String text, TrayIcon.MessageType type)",True,Displays a popup message near the tray icon.
96,TrayIcon,3,void setImage(Image image),True,Sets the image for this TrayIcon.
96,TrayIcon,4,void setToolTip(String tooltip),True,Sets the tooltip string for this TrayIcon.
96,TrayIcon,5,void setPopupMenu(PopupMenu popup),True,Sets the popup menu for this TrayIcon.
97,Window,1,Window(),False,NULL
97,Window,2,void setTitle(String title),False,NULL
97,Window,3,"void setSize(int width, int height)",True,Resizes this component so that it has width width and height height.
97,Window,4,"void setLocation(int x, int y)",True,Moves this component to a new location.
97,Window,5,void setVisible(boolean b),True,Shows or hides this Window depending on the value of parameter b.
97,Window,6,void dispose(),True,"Releases all of the native screen resources used by this Window, its subcomponents, and all of its owned children."
97,Window,7,void add(Component comp),False,NULL
97,Window,8,void remove(Component comp),False,NULL
97,Window,9,void repaint(),False,NULL
97,Window,10,void update(Graphics g),False,NULL
97,Window,11,void paint(Graphics g),True,Paints the container.
97,Window,12,void setBackground(Color c),True,Sets the background color of this window.
97,Window,13,void setForeground(Color c),False,NULL
97,Window,14,void setFont(Font f),False,NULL
97,Window,15,void setCursor(Cursor c),True,Set the cursor image to a specified cursor.
97,Window,16,void setIconImages(List<Image> images),False,NULL
97,Window,17,void setAlwaysOnTop(boolean b),True,Sets whether this window should always be above other windows.
97,Window,18,void setOpacity(float opacity),True,Sets the opacity of the window.
97,Window,19,void setFocusableWindowState(boolean focusable),True,Sets whether this Window can become the focused Window if it meets the other requirements outlined in isFocusableWindow.
97,Window,20,"void setFocusableWindowState(boolean focusable, Rectangle bounds)",False,NULL
97,Window,21,void setMinimumSize(Dimension size),True,Sets the minimum size of this window to a constant value.
97,Window,22,void setMaximumSize(Dimension size),False,NULL
97,Window,23,void setPreferredSize(Dimension size),False,NULL
97,Window,24,void setResizable(boolean resizable),False,NULL
97,Window,25,void setLayout(LayoutManager mgr),False,NULL
97,Window,26,"void setLayout(LayoutManager mgr, Dimension preferredSize)",False,NULL
97,Window,27,"void setLayout(LayoutManager mgr, Insets insets)",False,NULL
97,Window,28,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets)",False,NULL
97,Window,29,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment)",False,NULL
97,Window,30,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults)",False,NULL
97,Window,31,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties)",False,NULL
97,Window,32,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing)",False,NULL
97,Window,33,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing)",False,NULL
97,Window,34,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing)",False,NULL
97,Window,35,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing)",False,NULL
97,Window,36,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing)",False,NULL
97,Window,37,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing)",False,NULL
97,Window,38,"void setLayout(LayoutManager mgr, Dimension preferredSize, Insets insets, int alignment, boolean useDefaults, boolean useParentProperties, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing, boolean useParentPropertiesForSizing)",False,NULL
