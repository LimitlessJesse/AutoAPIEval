ClassName,Method,Return Type,Description
AlphaComposite,"createContext(ColorModel srcColorModel, ColorModel dstColorModel, RenderingHints hints)",CompositeContext,Creates a context for the compositing operation.
AlphaComposite,derive(float alpha),AlphaComposite,Returns a similar AlphaComposite object that uses the specified alpha value.
AlphaComposite,derive(int rule),AlphaComposite,Returns a similar AlphaComposite object that uses the specified compositing rule.
AlphaComposite,equals(Object obj),boolean,Determines whether the specified object is equal to this AlphaComposite.
AlphaComposite,getAlpha(),float,Returns the alpha value of this AlphaComposite.
AlphaComposite,getInstance(int rule),static AlphaComposite,Creates an AlphaComposite object with the specified rule.
AlphaComposite,"getInstance(int rule, float alpha)",static AlphaComposite,Creates an AlphaComposite object with the specified rule and the constant alpha to multiply with the alpha of the source.
AlphaComposite,getRule(),int,Returns the compositing rule of this AlphaComposite.
AlphaComposite,hashCode(),int,Returns the hashcode for this composite.
AWTEvent,consume(),protected void,"Consumes this event, if this event can be consumed."
AWTEvent,getID(),int,Returns the event type.
AWTEvent,isConsumed(),protected boolean,Returns whether this event has been consumed.
AWTEvent,paramString(),String,Returns a string representing the state of this Event.
AWTEvent,setSource(Object newSource),void,Retargets an event to a new source.
AWTEvent,toString(),String,Returns a String representation of this object.
AWTEventMulticaster,actionPerformed(ActionEvent e),void,Handles the actionPerformed event by invoking the actionPerformed methods on listener-a and listener-b.
AWTEventMulticaster,"add(ActionListener a, ActionListener b)",static ActionListener,Adds action-listener-a with action-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(AdjustmentListener a, AdjustmentListener b)",static AdjustmentListener,Adds adjustment-listener-a with adjustment-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(ComponentListener a, ComponentListener b)",static ComponentListener,Adds component-listener-a with component-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(ContainerListener a, ContainerListener b)",static ContainerListener,Adds container-listener-a with container-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(FocusListener a, FocusListener b)",static FocusListener,Adds focus-listener-a with focus-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(HierarchyBoundsListener a, HierarchyBoundsListener b)",static HierarchyBoundsListener,Adds hierarchy-bounds-listener-a with hierarchy-bounds-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(HierarchyListener a, HierarchyListener b)",static HierarchyListener,Adds hierarchy-listener-a with hierarchy-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(InputMethodListener a, InputMethodListener b)",static InputMethodListener,Adds input-method-listener-a with input-method-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(ItemListener a, ItemListener b)",static ItemListener,Adds item-listener-a with item-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(KeyListener a, KeyListener b)",static KeyListener,Adds key-listener-a with key-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(MouseListener a, MouseListener b)",static MouseListener,Adds mouse-listener-a with mouse-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(MouseMotionListener a, MouseMotionListener b)",static MouseMotionListener,Adds mouse-motion-listener-a with mouse-motion-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(MouseWheelListener a, MouseWheelListener b)",static MouseWheelListener,Adds mouse-wheel-listener-a with mouse-wheel-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(TextListener a, TextListener b)",static TextListener,NULL
AWTEventMulticaster,"add(WindowFocusListener a, WindowFocusListener b)",static WindowFocusListener,Adds window-focus-listener-a with window-focus-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(WindowListener a, WindowListener b)",static WindowListener,Adds window-listener-a with window-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"add(WindowStateListener a, WindowStateListener b)",static WindowStateListener,Adds window-state-listener-a with window-state-listener-b and returns the resulting multicast listener.
AWTEventMulticaster,"addInternal(EventListener a, EventListener b)",protected static EventListener,Returns the resulting multicast listener from adding listener-a and listener-b together.
AWTEventMulticaster,adjustmentValueChanged(AdjustmentEvent e),void,Handles the adjustmentValueChanged event by invoking the adjustmentValueChanged methods on listener-a and listener-b.
AWTEventMulticaster,ancestorMoved(HierarchyEvent e),void,Handles the ancestorMoved event by invoking the ancestorMoved methods on listener-a and listener-b.
AWTEventMulticaster,ancestorResized(HierarchyEvent e),void,Handles the ancestorResized event by invoking the ancestorResized methods on listener-a and listener-b.
AWTEventMulticaster,caretPositionChanged(InputMethodEvent e),void,Handles the caretPositionChanged event by invoking the caretPositionChanged methods on listener-a and listener-b.
AWTEventMulticaster,componentAdded(ContainerEvent e),void,Handles the componentAdded container event by invoking the componentAdded methods on listener-a and listener-b.
AWTEventMulticaster,componentHidden(ComponentEvent e),void,Handles the componentHidden event by invoking the componentHidden methods on listener-a and listener-b.
AWTEventMulticaster,componentMoved(ComponentEvent e),void,Handles the componentMoved event by invoking the componentMoved methods on listener-a and listener-b.
AWTEventMulticaster,componentRemoved(ContainerEvent e),void,Handles the componentRemoved container event by invoking the componentRemoved methods on listener-a and listener-b.
AWTEventMulticaster,componentResized(ComponentEvent e),void,Handles the componentResized event by invoking the componentResized methods on listener-a and listener-b.
AWTEventMulticaster,componentShown(ComponentEvent e),void,Handles the componentShown event by invoking the componentShown methods on listener-a and listener-b.
AWTEventMulticaster,focusGained(FocusEvent e),void,Handles the focusGained event by invoking the focusGained methods on listener-a and listener-b.
AWTEventMulticaster,focusLost(FocusEvent e),void,Handles the focusLost event by invoking the focusLost methods on listener-a and listener-b.
AWTEventMulticaster,"getListeners(EventListener l, Class<T> listenerType)",static <T extends EventListener>T[],Returns an array of all the objects chained as FooListeners by the specified java.util.EventListener.
AWTEventMulticaster,hierarchyChanged(HierarchyEvent e),void,Handles the hierarchyChanged event by invoking the hierarchyChanged methods on listener-a and listener-b.
AWTEventMulticaster,inputMethodTextChanged(InputMethodEvent e),void,Handles the inputMethodTextChanged event by invoking the inputMethodTextChanged methods on listener-a and listener-b.
AWTEventMulticaster,itemStateChanged(ItemEvent e),void,Handles the itemStateChanged event by invoking the itemStateChanged methods on listener-a and listener-b.
AWTEventMulticaster,keyPressed(KeyEvent e),void,Handles the keyPressed event by invoking the keyPressed methods on listener-a and listener-b.
AWTEventMulticaster,keyReleased(KeyEvent e),void,Handles the keyReleased event by invoking the keyReleased methods on listener-a and listener-b.
AWTEventMulticaster,keyTyped(KeyEvent e),void,Handles the keyTyped event by invoking the keyTyped methods on listener-a and listener-b.
AWTEventMulticaster,mouseClicked(MouseEvent e),void,Handles the mouseClicked event by invoking the mouseClicked methods on listener-a and listener-b.
AWTEventMulticaster,mouseDragged(MouseEvent e),void,Handles the mouseDragged event by invoking the mouseDragged methods on listener-a and listener-b.
AWTEventMulticaster,mouseEntered(MouseEvent e),void,Handles the mouseEntered event by invoking the mouseEntered methods on listener-a and listener-b.
AWTEventMulticaster,mouseExited(MouseEvent e),void,Handles the mouseExited event by invoking the mouseExited methods on listener-a and listener-b.
AWTEventMulticaster,mouseMoved(MouseEvent e),void,Handles the mouseMoved event by invoking the mouseMoved methods on listener-a and listener-b.
AWTEventMulticaster,mousePressed(MouseEvent e),void,Handles the mousePressed event by invoking the mousePressed methods on listener-a and listener-b.
AWTEventMulticaster,mouseReleased(MouseEvent e),void,Handles the mouseReleased event by invoking the mouseReleased methods on listener-a and listener-b.
AWTEventMulticaster,mouseWheelMoved(MouseWheelEvent e),void,Handles the mouseWheelMoved event by invoking the mouseWheelMoved methods on listener-a and listener-b.
AWTEventMulticaster,"remove(ActionListener l, ActionListener oldl)",static ActionListener,Removes the old action-listener from action-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(AdjustmentListener l, AdjustmentListener oldl)",static AdjustmentListener,Removes the old adjustment-listener from adjustment-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(ComponentListener l, ComponentListener oldl)",static ComponentListener,Removes the old component-listener from component-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(ContainerListener l, ContainerListener oldl)",static ContainerListener,Removes the old container-listener from container-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,remove(EventListener oldl),protected EventListener,Removes a listener from this multicaster.
AWTEventMulticaster,"remove(FocusListener l, FocusListener oldl)",static FocusListener,Removes the old focus-listener from focus-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(HierarchyBoundsListener l, HierarchyBoundsListener oldl)",static HierarchyBoundsListener,Removes the old hierarchy-bounds-listener from hierarchy-bounds-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(HierarchyListener l, HierarchyListener oldl)",static HierarchyListener,Removes the old hierarchy-listener from hierarchy-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(InputMethodListener l, InputMethodListener oldl)",static InputMethodListener,Removes the old input-method-listener from input-method-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(ItemListener l, ItemListener oldl)",static ItemListener,Removes the old item-listener from item-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(KeyListener l, KeyListener oldl)",static KeyListener,Removes the old key-listener from key-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(MouseListener l, MouseListener oldl)",static MouseListener,Removes the old mouse-listener from mouse-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(MouseMotionListener l, MouseMotionListener oldl)",static MouseMotionListener,Removes the old mouse-motion-listener from mouse-motion-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(MouseWheelListener l, MouseWheelListener oldl)",static MouseWheelListener,Removes the old mouse-wheel-listener from mouse-wheel-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(TextListener l, TextListener oldl)",static TextListener,NULL
AWTEventMulticaster,"remove(WindowFocusListener l, WindowFocusListener oldl)",static WindowFocusListener,Removes the old window-focus-listener from window-focus-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(WindowListener l, WindowListener oldl)",static WindowListener,Removes the old window-listener from window-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"remove(WindowStateListener l, WindowStateListener oldl)",static WindowStateListener,Removes the old window-state-listener from window-state-listener-l and returns the resulting multicast listener.
AWTEventMulticaster,"removeInternal(EventListener l, EventListener oldl)",protected static EventListener,Returns the resulting multicast listener after removing the old listener from listener-l.
AWTEventMulticaster,"save(ObjectOutputStream s, String k, EventListener l)",protected static void,NULL
AWTEventMulticaster,"saveInternal(ObjectOutputStream s, String k)",protected void,NULL
AWTEventMulticaster,textValueChanged(TextEvent e),void,Invoked when the value of the text has changed.
AWTEventMulticaster,windowActivated(WindowEvent e),void,Handles the windowActivated event by invoking the windowActivated methods on listener-a and listener-b.
AWTEventMulticaster,windowClosed(WindowEvent e),void,Handles the windowClosed event by invoking the windowClosed methods on listener-a and listener-b.
AWTEventMulticaster,windowClosing(WindowEvent e),void,Handles the windowClosing event by invoking the windowClosing methods on listener-a and listener-b.
AWTEventMulticaster,windowDeactivated(WindowEvent e),void,Handles the windowDeactivated event by invoking the windowDeactivated methods on listener-a and listener-b.
AWTEventMulticaster,windowDeiconified(WindowEvent e),void,Handles the windowDeiconfied event by invoking the windowDeiconified methods on listener-a and listener-b.
AWTEventMulticaster,windowGainedFocus(WindowEvent e),void,Handles the windowGainedFocus event by invoking the windowGainedFocus methods on listener-a and listener-b.
AWTEventMulticaster,windowIconified(WindowEvent e),void,Handles the windowIconified event by invoking the windowIconified methods on listener-a and listener-b.
AWTEventMulticaster,windowLostFocus(WindowEvent e),void,Handles the windowLostFocus event by invoking the windowLostFocus methods on listener-a and listener-b.
AWTEventMulticaster,windowOpened(WindowEvent e),void,Handles the windowOpened event by invoking the windowOpened methods on listener-a and listener-b.
AWTEventMulticaster,windowStateChanged(WindowEvent e),void,Handles the windowStateChanged event by invoking the windowStateChanged methods on listener-a and listener-b.
AWTKeyStroke,equals(Object anObject),boolean,Returns true if this object is identical to the specified object.
AWTKeyStroke,getAWTKeyStroke(char keyChar),static AWTKeyStroke,Returns a shared instance of an AWTKeyStroke that represents a KEY_TYPED event for the specified character.
AWTKeyStroke,"getAWTKeyStroke(Character keyChar, int modifiers)",static AWTKeyStroke,Returns a shared instance of an AWTKeyStroke that represents a KEY_TYPED event for the specified Character object and a set of modifiers.
AWTKeyStroke,"getAWTKeyStroke(int keyCode, int modifiers)",static AWTKeyStroke,"Returns a shared instance of an AWTKeyStroke, given a numeric key code and a set of modifiers."
AWTKeyStroke,"getAWTKeyStroke(int keyCode, int modifiers, boolean onKeyRelease)",static AWTKeyStroke,"Returns a shared instance of an AWTKeyStroke, given a numeric key code and a set of modifiers, specifying whether the key is activated when it is pressed or released."
AWTKeyStroke,getAWTKeyStroke(String s),static AWTKeyStroke,Parses a string and returns an AWTKeyStroke.
AWTKeyStroke,getAWTKeyStrokeForEvent(KeyEvent anEvent),static AWTKeyStroke,Returns an AWTKeyStroke which represents the stroke which generated a given KeyEvent.
AWTKeyStroke,getKeyChar(),char,Returns the character for this AWTKeyStroke.
AWTKeyStroke,getKeyCode(),int,Returns the numeric key code for this AWTKeyStroke.
AWTKeyStroke,getKeyEventType(),int,Returns the type of KeyEvent which corresponds to this AWTKeyStroke.
AWTKeyStroke,getModifiers(),int,Returns the modifier keys for this AWTKeyStroke.
AWTKeyStroke,hashCode(),int,"Returns a numeric value for this object that is likely to be unique, making it a good choice as the index value in a hash table."
AWTKeyStroke,isOnKeyRelease(),boolean,Returns whether this AWTKeyStroke represents a key release.
AWTKeyStroke,readResolve(),protected Object,Returns a cached instance of AWTKeyStroke (or a subclass of AWTKeyStroke) which is equal to this instance.
AWTKeyStroke,registerSubclass(Class<?> subclass),protected static void,Registers a new class which the factory methods in AWTKeyStroke will use when generating new instances of AWTKeyStrokes.
AWTKeyStroke,toString(),String,Returns a string that displays and identifies this object's properties.
BasicStroke,createStrokedShape(Shape s),Shape,Returns a Shape whose interior defines the stroked outline of a specified Shape.
BasicStroke,equals(Object obj),boolean,"Tests if a specified object is equal to this BasicStroke by first testing if it is a BasicStroke and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this BasicStroke."
BasicStroke,getDashArray(),float[],Returns the array representing the lengths of the dash segments.
BasicStroke,getDashPhase(),float,Returns the current dash phase.
BasicStroke,getEndCap(),int,Returns the end cap style.
BasicStroke,getLineJoin(),int,Returns the line join style.
BasicStroke,getLineWidth(),float,Returns the line width.
BasicStroke,getMiterLimit(),float,Returns the limit of miter joins.
BasicStroke,hashCode(),int,Returns the hashcode for this stroke.
BorderLayout,"addLayoutComponent(Component comp, Object constraints)",void,"Adds the specified component to the layout, using the specified constraint object."
BorderLayout,"addLayoutComponent(String name, Component comp)",void,"Deprecated. replaced by addLayoutComponent(Component, Object)."
BorderLayout,getConstraints(Component comp),Object,Gets the constraints for the specified component
BorderLayout,getHgap(),int,Returns the horizontal gap between components.
BorderLayout,getLayoutAlignmentX(Container parent),float,Returns the alignment along the x axis.
BorderLayout,getLayoutAlignmentY(Container parent),float,Returns the alignment along the y axis.
BorderLayout,"getLayoutComponent(Container target, Object constraints)",Component,Returns the component that corresponds to the given constraint location based on the target Container's component orientation.
BorderLayout,getLayoutComponent(Object constraints),Component,Gets the component that was added using the given constraint
BorderLayout,getVgap(),int,Returns the vertical gap between components.
BorderLayout,invalidateLayout(Container target),void,"Invalidates the layout, indicating that if the layout manager has cached information it should be discarded."
BorderLayout,layoutContainer(Container target),void,Lays out the container argument using this border layout.
BorderLayout,maximumLayoutSize(Container target),Dimension,Returns the maximum dimensions for this layout given the components in the specified target container.
BorderLayout,minimumLayoutSize(Container target),Dimension,Determines the minimum size of the target container using this layout manager.
BorderLayout,preferredLayoutSize(Container target),Dimension,"Determines the preferred size of the target container using this layout manager, based on the components in the container."
BorderLayout,removeLayoutComponent(Component comp),void,Removes the specified component from this border layout.
BorderLayout,setHgap(int hgap),void,Sets the horizontal gap between components.
BorderLayout,setVgap(int vgap),void,Sets the vertical gap between components.
BorderLayout,toString(),String,Returns a string representation of the state of this border layout.
BufferCapabilities,clone(),Object,Creates and returns a copy of this object.
BufferCapabilities,getBackBufferCapabilities(),ImageCapabilities,NULL
BufferCapabilities,getFlipContents(),BufferCapabilities.FlipContents,NULL
BufferCapabilities,getFrontBufferCapabilities(),ImageCapabilities,NULL
BufferCapabilities,isFullScreenRequired(),boolean,NULL
BufferCapabilities,isMultiBufferAvailable(),boolean,NULL
BufferCapabilities,isPageFlipping(),boolean,NULL
BufferCapabilities.FlipContents,hashCode(),int,Returns a hash code value for the object.
BufferCapabilities.FlipContents,toString(),String,Returns a string representation of the object.
Button,addActionListener(ActionListener l),void,Adds the specified action listener to receive action events from this button.
Button,addNotify(),void,Creates the peer of the button.
Button,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Button.
Button,getActionCommand(),String,Returns the command name of the action event fired by this button.
Button,getActionListeners(),ActionListener[],Returns an array of all the action listeners registered on this button.
Button,getLabel(),String,Gets the label of this button.
Button,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Button.
Button,paramString(),protected String,Returns a string representing the state of this Button.
Button,processActionEvent(ActionEvent e),protected void,Processes action events occurring on this button by dispatching them to any registered ActionListener objects.
Button,processEvent(AWTEvent e),protected void,Processes events on this button.
Button,removeActionListener(ActionListener l),void,Removes the specified action listener so that it no longer receives action events from this button.
Button,setActionCommand(String command),void,Sets the command name for the action event fired by this button.
Button,setLabel(String label),void,Sets the button's label to be the specified string.
Canvas,addNotify(),void,Creates the peer of the canvas.
Canvas,createBufferStrategy(int numBuffers),void,Creates a new strategy for multi-buffering on this component.
Canvas,"createBufferStrategy(int numBuffers, BufferCapabilities caps)",void,Creates a new strategy for multi-buffering on this component with the required buffer capabilities.
Canvas,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Canvas.
Canvas,getBufferStrategy(),BufferStrategy,Returns the BufferStrategy used by this component.
Canvas,paint(Graphics g),void,Paints this canvas.
Canvas,update(Graphics g),void,Updates this canvas.
CardLayout,"addLayoutComponent(Component comp, Object constraints)",void,Adds the specified component to this card layout's internal table of names.
CardLayout,"addLayoutComponent(String name, Component comp)",void,"Deprecated. replaced by addLayoutComponent(Component, Object)."
CardLayout,first(Container parent),void,Flips to the first card of the container.
CardLayout,getHgap(),int,Gets the horizontal gap between components.
CardLayout,getLayoutAlignmentX(Container parent),float,Returns the alignment along the x axis.
CardLayout,getLayoutAlignmentY(Container parent),float,Returns the alignment along the y axis.
CardLayout,getVgap(),int,Gets the vertical gap between components.
CardLayout,invalidateLayout(Container target),void,"Invalidates the layout, indicating that if the layout manager has cached information it should be discarded."
CardLayout,last(Container parent),void,Flips to the last card of the container.
CardLayout,layoutContainer(Container parent),void,Lays out the specified container using this card layout.
CardLayout,maximumLayoutSize(Container target),Dimension,Returns the maximum dimensions for this layout given the components in the specified target container.
CardLayout,minimumLayoutSize(Container parent),Dimension,Calculates the minimum size for the specified panel.
CardLayout,next(Container parent),void,Flips to the next card of the specified container.
CardLayout,preferredLayoutSize(Container parent),Dimension,Determines the preferred size of the container argument using this card layout.
CardLayout,previous(Container parent),void,Flips to the previous card of the specified container.
CardLayout,removeLayoutComponent(Component comp),void,Removes the specified component from the layout.
CardLayout,setHgap(int hgap),void,Sets the horizontal gap between components.
CardLayout,setVgap(int vgap),void,Sets the vertical gap between components.
CardLayout,"show(Container parent, String name)",void,"Flips to the component that was added to this layout with the specified name, using addLayoutComponent."
CardLayout,toString(),String,Returns a string representation of the state of this card layout.
Checkbox,addItemListener(ItemListener l),void,Adds the specified item listener to receive item events from this check box.
Checkbox,addNotify(),void,Creates the peer of the Checkbox.
Checkbox,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Checkbox.
Checkbox,getCheckboxGroup(),CheckboxGroup,Determines this check box's group.
Checkbox,getItemListeners(),ItemListener[],Returns an array of all the item listeners registered on this checkbox.
Checkbox,getLabel(),String,Gets the label of this check box.
Checkbox,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Checkbox.
Checkbox,getSelectedObjects(),Object[],Returns an array (length 1) containing the checkbox label or null if the checkbox is not selected.
Checkbox,getState(),boolean,"Determines whether this check box is in the ""on"" or ""off"" state."
Checkbox,paramString(),protected String,Returns a string representing the state of this Checkbox.
Checkbox,processEvent(AWTEvent e),protected void,Processes events on this check box.
Checkbox,processItemEvent(ItemEvent e),protected void,Processes item events occurring on this check box by dispatching them to any registered ItemListener objects.
Checkbox,removeItemListener(ItemListener l),void,Removes the specified item listener so that the item listener no longer receives item events from this check box.
Checkbox,setCheckboxGroup(CheckboxGroup g),void,Sets this check box's group to the specified check box group.
Checkbox,setLabel(String label),void,Sets this check box's label to be the string argument.
Checkbox,setState(boolean state),void,Sets the state of this check box to the specified state.
CheckboxGroup,getCurrent(),Checkbox,"Deprecated. As of JDK version 1.1, replaced by getSelectedCheckbox()."
CheckboxGroup,getSelectedCheckbox(),Checkbox,Gets the current choice from this check box group.
CheckboxGroup,setCurrent(Checkbox box),void,"Deprecated. As of JDK version 1.1, replaced by setSelectedCheckbox(Checkbox)."
CheckboxGroup,setSelectedCheckbox(Checkbox box),void,Sets the currently selected check box in this group to be the specified check box.
CheckboxGroup,toString(),String,"Returns a string representation of this check box group, including the value of its current selection."
CheckboxMenuItem,addItemListener(ItemListener l),void,Adds the specified item listener to receive item events from this check box menu item.
CheckboxMenuItem,addNotify(),void,Creates the peer of the checkbox item.
CheckboxMenuItem,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this CheckboxMenuItem.
CheckboxMenuItem,getItemListeners(),ItemListener[],Returns an array of all the item listeners registered on this checkbox menuitem.
CheckboxMenuItem,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this CheckboxMenuItem.
CheckboxMenuItem,getSelectedObjects(),Object[],Returns the an array (length 1) containing the checkbox menu item label or null if the checkbox is not selected.
CheckboxMenuItem,getState(),boolean,"Determines whether the state of this check box menu item is ""on"" or ""off."""
CheckboxMenuItem,paramString(),String,Returns a string representing the state of this CheckBoxMenuItem.
CheckboxMenuItem,processEvent(AWTEvent e),protected void,Processes events on this check box menu item.
CheckboxMenuItem,processItemEvent(ItemEvent e),protected void,Processes item events occurring on this check box menu item by dispatching them to any registered ItemListener objects.
CheckboxMenuItem,removeItemListener(ItemListener l),void,Removes the specified item listener so that it no longer receives item events from this check box menu item.
CheckboxMenuItem,setState(boolean b),void,Sets this check box menu item to the specified state.
Choice,add(String item),void,Adds an item to this Choice menu.
Choice,addItem(String item),void,Obsolete as of Java 2 platform v1.1.
Choice,addItemListener(ItemListener l),void,Adds the specified item listener to receive item events from this Choice menu.
Choice,addNotify(),void,Creates the Choice's peer.
Choice,countItems(),int,"Deprecated. As of JDK version 1.1, replaced by getItemCount()."
Choice,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Choice.
Choice,getItem(int index),String,Gets the string at the specified index in this Choice menu.
Choice,getItemCount(),int,Returns the number of items in this Choice menu.
Choice,getItemListeners(),ItemListener[],Returns an array of all the item listeners registered on this choice.
Choice,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Choice.
Choice,getSelectedIndex(),int,Returns the index of the currently selected item.
Choice,getSelectedItem(),String,Gets a representation of the current choice as a string.
Choice,getSelectedObjects(),Object[],Returns an array (length 1) containing the currently selected item.
Choice,"insert(String item, int index)",void,Inserts the item into this choice at the specified position.
Choice,paramString(),protected String,Returns a string representing the state of this Choice menu.
Choice,processEvent(AWTEvent e),protected void,Processes events on this choice.
Choice,processItemEvent(ItemEvent e),protected void,Processes item events occurring on this Choice menu by dispatching them to any registered ItemListener objects.
Choice,remove(int position),void,Removes an item from the choice menu at the specified position.
Choice,remove(String item),void,Removes the first occurrence of item from the Choice menu.
Choice,removeAll(),void,Removes all items from the choice menu.
Choice,removeItemListener(ItemListener l),void,Removes the specified item listener so that it no longer receives item events from this Choice menu.
Choice,select(int pos),void,Sets the selected item in this Choice menu to be the item at the specified position.
Choice,select(String str),void,Sets the selected item in this Choice menu to be the item whose name is equal to the specified string.
Color,brighter(),Color,Creates a new Color that is a brighter version of this Color.
Color,"createContext(ColorModel cm, Rectangle r, Rectangle2D r2d, AffineTransform xform, RenderingHints hints)",PaintContext,Creates and returns a PaintContext used to generate a solid color field pattern.
Color,darker(),Color,Creates a new Color that is a darker version of this Color.
Color,decode(String nm),static Color,Converts a String to an integer and returns the specified opaque Color.
Color,equals(Object obj),boolean,Determines whether another object is equal to this Color.
Color,getAlpha(),int,Returns the alpha component in the range 0-255.
Color,getBlue(),int,Returns the blue component in the range 0-255 in the default sRGB space.
Color,getColor(String nm),static Color,Finds a color in the system properties.
Color,"getColor(String nm, Color v)",static Color,Finds a color in the system properties.
Color,"getColor(String nm, int v)",static Color,Finds a color in the system properties.
Color,"getColorComponents(ColorSpace cspace, float[] compArray)",float[],Returns a float array containing only the color components of the Color in the ColorSpace specified by the cspace parameter.
Color,getColorComponents(float[] compArray),float[],"Returns a float array containing only the color components of the Color, in the ColorSpace of the Color."
Color,getColorSpace(),ColorSpace,Returns the ColorSpace of this Color.
Color,"getComponents(ColorSpace cspace, float[] compArray)",float[],"Returns a float array containing the color and alpha components of the Color, in the ColorSpace specified by the cspace parameter."
Color,getComponents(float[] compArray),float[],"Returns a float array containing the color and alpha components of the Color, in the ColorSpace of the Color."
Color,getGreen(),int,Returns the green component in the range 0-255 in the default sRGB space.
Color,"getHSBColor(float h, float s, float b)",static Color,Creates a Color object based on the specified values for the HSB color model.
Color,getRed(),int,Returns the red component in the range 0-255 in the default sRGB space.
Color,getRGB(),int,Returns the RGB value representing the color in the default sRGB ColorModel.
Color,getRGBColorComponents(float[] compArray),float[],"Returns a float array containing only the color components of the Color, in the default sRGB color space."
Color,getRGBComponents(float[] compArray),float[],"Returns a float array containing the color and alpha components of the Color, as represented in the default sRGB color space."
Color,getTransparency(),int,Returns the transparency mode for this Color.
Color,hashCode(),int,Computes the hash code for this Color.
Color,"HSBtoRGB(float hue, float saturation, float brightness)",static int,"Converts the components of a color, as specified by the HSB model, to an equivalent set of values for the default RGB model."
Color,"RGBtoHSB(int r, int g, int b, float[] hsbvals)",static float[],"Converts the components of a color, as specified by the default RGB model, to an equivalent set of values for hue, saturation, and brightness that are the three components of the HSB model."
Color,toString(),String,Returns a string representation of this Color.
Component,"action(Event evt, Object what)",boolean,"Deprecated. As of JDK version 1.1, should register this component as ActionListener on component which fires action events."
Component,add(PopupMenu popup),void,Adds the specified popup menu to the component.
Component,addComponentListener(ComponentListener l),void,Adds the specified component listener to receive component events from this component.
Component,addFocusListener(FocusListener l),void,Adds the specified focus listener to receive focus events from this component when this component gains input focus.
Component,addHierarchyBoundsListener(HierarchyBoundsListener l),void,Adds the specified hierarchy bounds listener to receive hierarchy bounds events from this component when the hierarchy to which this container belongs changes.
Component,addHierarchyListener(HierarchyListener l),void,Adds the specified hierarchy listener to receive hierarchy changed events from this component when the hierarchy to which this container belongs changes.
Component,addInputMethodListener(InputMethodListener l),void,Adds the specified input method listener to receive input method events from this component.
Component,addKeyListener(KeyListener l),void,Adds the specified key listener to receive key events from this component.
Component,addMouseListener(MouseListener l),void,Adds the specified mouse listener to receive mouse events from this component.
Component,addMouseMotionListener(MouseMotionListener l),void,Adds the specified mouse motion listener to receive mouse motion events from this component.
Component,addMouseWheelListener(MouseWheelListener l),void,Adds the specified mouse wheel listener to receive mouse wheel events from this component.
Component,addNotify(),void,Makes this Component displayable by connecting it to a native screen resource.
Component,addPropertyChangeListener(PropertyChangeListener listener),void,Adds a PropertyChangeListener to the listener list.
Component,"addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Adds a PropertyChangeListener to the listener list for a specific property.
Component,applyComponentOrientation(ComponentOrientation orientation),void,Sets the ComponentOrientation property of this component and all components contained within it.
Component,areFocusTraversalKeysSet(int id),boolean,Returns whether the Set of focus traversal keys for the given focus traversal operation has been explicitly defined for this Component.
Component,bounds(),Rectangle,"Deprecated. As of JDK version 1.1, replaced by getBounds()."
Component,"checkImage(Image image, ImageObserver observer)",int,Returns the status of the construction of a screen representation of the specified image.
Component,"checkImage(Image image, int width, int height, ImageObserver observer)",int,Returns the status of the construction of a screen representation of the specified image.
Component,"coalesceEvents(AWTEvent existingEvent, AWTEvent newEvent)",protected AWTEvent,Potentially coalesce an event being posted with an existing event.
Component,"contains(int x, int y)",boolean,"Checks whether this component ""contains"" the specified point, where x and y are defined to be relative to the coordinate system of this component."
Component,contains(Point p),boolean,"Checks whether this component ""contains"" the specified point, where the point's x and y coordinates are defined to be relative to the coordinate system of this component."
Component,createImage(ImageProducer producer),Image,Creates an image from the specified image producer.
Component,"createImage(int width, int height)",Image,Creates an off-screen drawable image to be used for double buffering.
Component,"createVolatileImage(int width, int height)",VolatileImage,Creates a volatile off-screen drawable image to be used for double buffering.
Component,"createVolatileImage(int width, int height, ImageCapabilities caps)",VolatileImage,"Creates a volatile off-screen drawable image, with the given capabilities."
Component,deliverEvent(Event e),void,"Deprecated. As of JDK version 1.1, replaced by dispatchEvent(AWTEvent e)."
Component,disable(),void,"Deprecated. As of JDK version 1.1, replaced by setEnabled(boolean)."
Component,disableEvents(long eventsToDisable),protected void,Disables the events defined by the specified event mask parameter from being delivered to this component.
Component,dispatchEvent(AWTEvent e),void,Dispatches an event to this component or one of its sub components.
Component,doLayout(),void,Prompts the layout manager to lay out this component.
Component,enable(),void,"Deprecated. As of JDK version 1.1, replaced by setEnabled(boolean)."
Component,enable(boolean b),void,"Deprecated. As of JDK version 1.1, replaced by setEnabled(boolean)."
Component,enableEvents(long eventsToEnable),protected void,Enables the events defined by the specified event mask parameter to be delivered to this component.
Component,enableInputMethods(boolean enable),void,Enables or disables input method support for this component.
Component,"firePropertyChange(String propertyName, boolean oldValue, boolean newValue)",protected void,Support for reporting bound property changes for boolean properties.
Component,"firePropertyChange(String propertyName, byte oldValue, byte newValue)",void,Reports a bound property change.
Component,"firePropertyChange(String propertyName, char oldValue, char newValue)",void,Reports a bound property change.
Component,"firePropertyChange(String propertyName, double oldValue, double newValue)",void,Reports a bound property change.
Component,"firePropertyChange(String propertyName, float oldValue, float newValue)",void,Reports a bound property change.
Component,"firePropertyChange(String propertyName, int oldValue, int newValue)",protected void,Support for reporting bound property changes for integer properties.
Component,"firePropertyChange(String propertyName, long oldValue, long newValue)",void,Reports a bound property change.
Component,"firePropertyChange(String propertyName, Object oldValue, Object newValue)",protected void,Support for reporting bound property changes for Object properties.
Component,"firePropertyChange(String propertyName, short oldValue, short newValue)",void,Reports a bound property change.
Component,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Component.
Component,getAlignmentX(),float,Returns the alignment along the x axis.
Component,getAlignmentY(),float,Returns the alignment along the y axis.
Component,getBackground(),Color,Gets the background color of this component.
Component,"getBaseline(int width, int height)",int,Returns the baseline.
Component,getBaselineResizeBehavior(),Component.BaselineResizeBehavior,Returns an enum indicating how the baseline of the component changes as the size changes.
Component,getBounds(),Rectangle,Gets the bounds of this component in the form of a Rectangle object.
Component,getBounds(Rectangle rv),Rectangle,"Stores the bounds of this component into ""return value"" rv and return rv."
Component,getColorModel(),ColorModel,Gets the instance of ColorModel used to display the component on the output device.
Component,"getComponentAt(int x, int y)",Component,"Determines if this component or one of its immediate subcomponents contains the (x, y) location, and if so, returns the containing component."
Component,getComponentAt(Point p),Component,Returns the component or subcomponent that contains the specified point.
Component,getComponentListeners(),ComponentListener[],Returns an array of all the component listeners registered on this component.
Component,getComponentOrientation(),ComponentOrientation,Retrieves the language-sensitive orientation that is to be used to order the elements or text within this component.
Component,getCursor(),Cursor,Gets the cursor set in the component.
Component,getDropTarget(),DropTarget,Gets the DropTarget associated with this Component.
Component,getFocusCycleRootAncestor(),Container,Returns the Container which is the focus cycle root of this Component's focus traversal cycle.
Component,getFocusListeners(),FocusListener[],Returns an array of all the focus listeners registered on this component.
Component,getFocusTraversalKeys(int id),Set<AWTKeyStroke>,Returns the Set of focus traversal keys for a given traversal operation for this Component.
Component,getFocusTraversalKeysEnabled(),boolean,Returns whether focus traversal keys are enabled for this Component.
Component,getFont(),Font,Gets the font of this component.
Component,getFontMetrics(Font font),FontMetrics,Gets the font metrics for the specified font.
Component,getForeground(),Color,Gets the foreground color of this component.
Component,getGraphics(),Graphics,Creates a graphics context for this component.
Component,getGraphicsConfiguration(),GraphicsConfiguration,Gets the GraphicsConfiguration associated with this Component.
Component,getHeight(),int,Returns the current height of this component.
Component,getHierarchyBoundsListeners(),HierarchyBoundsListener[],Returns an array of all the hierarchy bounds listeners registered on this component.
Component,getHierarchyListeners(),HierarchyListener[],Returns an array of all the hierarchy listeners registered on this component.
Component,getIgnoreRepaint(),boolean,NULL
Component,getInputContext(),InputContext,Gets the input context used by this component for handling the communication with input methods when text is entered in this component.
Component,getInputMethodListeners(),InputMethodListener[],Returns an array of all the input method listeners registered on this component.
Component,getInputMethodRequests(),InputMethodRequests,Gets the input method request handler which supports requests from input methods for this component.
Component,getKeyListeners(),KeyListener[],Returns an array of all the key listeners registered on this component.
Component,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Component.
Component,getLocale(),Locale,Gets the locale of this component.
Component,getLocation(),Point,Gets the location of this component in the form of a point specifying the component's top-left corner.
Component,getLocation(Point rv),Point,"Stores the x,y origin of this component into ""return value"" rv and return rv."
Component,getLocationOnScreen(),Point,Gets the location of this component in the form of a point specifying the component's top-left corner in the screen's coordinate space.
Component,getMaximumSize(),Dimension,Gets the maximum size of this component.
Component,getMinimumSize(),Dimension,Gets the minimum size of this component.
Component,getMouseListeners(),MouseListener[],Returns an array of all the mouse listeners registered on this component.
Component,getMouseMotionListeners(),MouseMotionListener[],Returns an array of all the mouse motion listeners registered on this component.
Component,getMousePosition(),Point,"Returns the position of the mouse pointer in this Component's coordinate space if the Component is directly under the mouse pointer, otherwise returns null."
Component,getMouseWheelListeners(),MouseWheelListener[],Returns an array of all the mouse wheel listeners registered on this component.
Component,getName(),String,Gets the name of the component.
Component,getParent(),Container,Gets the parent of this component.
Component,getPeer(),java.awt.peer.ComponentPeer,"Deprecated. As of JDK version 1.1, programs should not directly manipulate peers; replaced by boolean isDisplayable()."
Component,getPreferredSize(),Dimension,Gets the preferred size of this component.
Component,getPropertyChangeListeners(),PropertyChangeListener[],Returns an array of all the property change listeners registered on this component.
Component,getPropertyChangeListeners(String propertyName),PropertyChangeListener[],Returns an array of all the listeners which have been associated with the named property.
Component,getSize(),Dimension,Returns the size of this component in the form of a Dimension object.
Component,getSize(Dimension rv),Dimension,"Stores the width/height of this component into ""return value"" rv and return rv."
Component,getToolkit(),Toolkit,Gets the toolkit of this component.
Component,getTreeLock(),Object,Gets this component's locking object (the object that owns the thread synchronization monitor) for AWT component-tree and layout operations.
Component,getWidth(),int,Returns the current width of this component.
Component,getX(),int,Returns the current x coordinate of the components origin.
Component,getY(),int,Returns the current y coordinate of the components origin.
Component,"gotFocus(Event evt, Object what)",boolean,"Deprecated. As of JDK version 1.1, replaced by processFocusEvent(FocusEvent)."
Component,handleEvent(Event evt),boolean,Deprecated. As of JDK version 1.1 replaced by processEvent(AWTEvent).
Component,hasFocus(),boolean,Returns true if this Component is the focus owner.
Component,hide(),void,"Deprecated. As of JDK version 1.1, replaced by setVisible(boolean)."
Component,"imageUpdate(Image img, int infoflags, int x, int y, int w, int h)",boolean,Repaints the component when the image has changed.
Component,"inside(int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by contains(int, int)."
Component,invalidate(),void,Invalidates this component and its ancestors.
Component,isBackgroundSet(),boolean,Returns whether the background color has been explicitly set for this Component.
Component,isCursorSet(),boolean,Returns whether the cursor has been explicitly set for this Component.
Component,isDisplayable(),boolean,Determines whether this component is displayable.
Component,isDoubleBuffered(),boolean,"Returns true if this component is painted to an offscreen image (""buffer"") that's copied to the screen later."
Component,isEnabled(),boolean,Determines whether this component is enabled.
Component,isFocusable(),boolean,Returns whether this Component can be focused.
Component,isFocusCycleRoot(Container container),boolean,Returns whether the specified Container is the focus cycle root of this Component's focus traversal cycle.
Component,isFocusOwner(),boolean,Returns true if this Component is the focus owner.
Component,isFocusTraversable(),boolean,"Deprecated. As of 1.4, replaced by isFocusable()."
Component,isFontSet(),boolean,Returns whether the font has been explicitly set for this Component.
Component,isForegroundSet(),boolean,Returns whether the foreground color has been explicitly set for this Component.
Component,isLightweight(),boolean,A lightweight component doesn't have a native toolkit peer.
Component,isMaximumSizeSet(),boolean,Returns true if the maximum size has been set to a non-null value otherwise returns false.
Component,isMinimumSizeSet(),boolean,Returns whether or not setMinimumSize has been invoked with a non-null value.
Component,isOpaque(),boolean,"Returns true if this component is completely opaque, returns false by default."
Component,isPreferredSizeSet(),boolean,Returns true if the preferred size has been set to a non-null value otherwise returns false.
Component,isShowing(),boolean,Determines whether this component is showing on screen.
Component,isValid(),boolean,Determines whether this component is valid.
Component,isVisible(),boolean,Determines whether this component should be visible when its parent is visible.
Component,"keyDown(Event evt, int key)",boolean,"Deprecated. As of JDK version 1.1, replaced by processKeyEvent(KeyEvent)."
Component,"keyUp(Event evt, int key)",boolean,"Deprecated. As of JDK version 1.1, replaced by processKeyEvent(KeyEvent)."
Component,layout(),void,"Deprecated. As of JDK version 1.1, replaced by doLayout()."
Component,list(),void,Prints a listing of this component to the standard system output stream System.out.
Component,list(PrintStream out),void,Prints a listing of this component to the specified output stream.
Component,"list(PrintStream out, int indent)",void,"Prints out a list, starting at the specified indentation, to the specified print stream."
Component,list(PrintWriter out),void,Prints a listing to the specified print writer.
Component,"list(PrintWriter out, int indent)",void,"Prints out a list, starting at the specified indentation, to the specified print writer."
Component,"locate(int x, int y)",Component,"Deprecated. As of JDK version 1.1, replaced by getComponentAt(int, int)."
Component,location(),Point,"Deprecated. As of JDK version 1.1, replaced by getLocation()."
Component,"lostFocus(Event evt, Object what)",boolean,"Deprecated. As of JDK version 1.1, replaced by processFocusEvent(FocusEvent)."
Component,minimumSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize()."
Component,"mouseDown(Event evt, int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent)."
Component,"mouseDrag(Event evt, int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by processMouseMotionEvent(MouseEvent)."
Component,"mouseEnter(Event evt, int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent)."
Component,"mouseExit(Event evt, int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent)."
Component,"mouseMove(Event evt, int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by processMouseMotionEvent(MouseEvent)."
Component,"mouseUp(Event evt, int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent)."
Component,"move(int x, int y)",void,"Deprecated. As of JDK version 1.1, replaced by setLocation(int, int)."
Component,nextFocus(),void,"Deprecated. As of JDK version 1.1, replaced by transferFocus()."
Component,paint(Graphics g),void,Paints this component.
Component,paintAll(Graphics g),void,Paints this component and all of its subcomponents.
Component,paramString(),protected String,Returns a string representing the state of this component.
Component,postEvent(Event e),boolean,"Deprecated. As of JDK version 1.1, replaced by dispatchEvent(AWTEvent)."
Component,preferredSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize()."
Component,"prepareImage(Image image, ImageObserver observer)",boolean,Prepares an image for rendering on this component.
Component,"prepareImage(Image image, int width, int height, ImageObserver observer)",boolean,Prepares an image for rendering on this component at the specified width and height.
Component,print(Graphics g),void,Prints this component.
Component,printAll(Graphics g),void,Prints this component and all of its subcomponents.
Component,processComponentEvent(ComponentEvent e),protected void,Processes component events occurring on this component by dispatching them to any registered ComponentListener objects.
Component,processEvent(AWTEvent e),protected void,Processes events occurring on this component.
Component,processFocusEvent(FocusEvent e),protected void,Processes focus events occurring on this component by dispatching them to any registered FocusListener objects.
Component,processHierarchyBoundsEvent(HierarchyEvent e),protected void,Processes hierarchy bounds events occurring on this component by dispatching them to any registered HierarchyBoundsListener objects.
Component,processHierarchyEvent(HierarchyEvent e),protected void,Processes hierarchy events occurring on this component by dispatching them to any registered HierarchyListener objects.
Component,processInputMethodEvent(InputMethodEvent e),protected void,Processes input method events occurring on this component by dispatching them to any registered InputMethodListener objects.
Component,processKeyEvent(KeyEvent e),protected void,Processes key events occurring on this component by dispatching them to any registered KeyListener objects.
Component,processMouseEvent(MouseEvent e),protected void,Processes mouse events occurring on this component by dispatching them to any registered MouseListener objects.
Component,processMouseMotionEvent(MouseEvent e),protected void,Processes mouse motion events occurring on this component by dispatching them to any registered MouseMotionListener objects.
Component,processMouseWheelEvent(MouseWheelEvent e),protected void,Processes mouse wheel events occurring on this component by dispatching them to any registered MouseWheelListener objects.
Component,remove(MenuComponent popup),void,Removes the specified popup menu from the component.
Component,removeComponentListener(ComponentListener l),void,Removes the specified component listener so that it no longer receives component events from this component.
Component,removeFocusListener(FocusListener l),void,Removes the specified focus listener so that it no longer receives focus events from this component.
Component,removeHierarchyBoundsListener(HierarchyBoundsListener l),void,Removes the specified hierarchy bounds listener so that it no longer receives hierarchy bounds events from this component.
Component,removeHierarchyListener(HierarchyListener l),void,Removes the specified hierarchy listener so that it no longer receives hierarchy changed events from this component.
Component,removeInputMethodListener(InputMethodListener l),void,Removes the specified input method listener so that it no longer receives input method events from this component.
Component,removeKeyListener(KeyListener l),void,Removes the specified key listener so that it no longer receives key events from this component.
Component,removeMouseListener(MouseListener l),void,Removes the specified mouse listener so that it no longer receives mouse events from this component.
Component,removeMouseMotionListener(MouseMotionListener l),void,Removes the specified mouse motion listener so that it no longer receives mouse motion events from this component.
Component,removeMouseWheelListener(MouseWheelListener l),void,Removes the specified mouse wheel listener so that it no longer receives mouse wheel events from this component.
Component,removeNotify(),void,Makes this Component undisplayable by destroying it native screen resource.
Component,removePropertyChangeListener(PropertyChangeListener listener),void,Removes a PropertyChangeListener from the listener list.
Component,"removePropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Removes a PropertyChangeListener from the listener list for a specific property.
Component,repaint(),void,Repaints this component.
Component,"repaint(int x, int y, int width, int height)",void,Repaints the specified rectangle of this component.
Component,repaint(long tm),void,Repaints the component.
Component,"repaint(long tm, int x, int y, int width, int height)",void,Repaints the specified rectangle of this component within tm milliseconds.
Component,requestFocus(),void,"Requests that this Component get the input focus, and that this Component's top-level ancestor become the focused Window."
Component,requestFocus(boolean temporary),protected boolean,"Requests that this Component get the input focus, and that this Component's top-level ancestor become the focused Window."
Component,requestFocusInWindow(),boolean,"Requests that this Component get the input focus, if this Component's top-level ancestor is already the focused Window."
Component,requestFocusInWindow(boolean temporary),protected boolean,"Requests that this Component get the input focus, if this Component's top-level ancestor is already the focused Window."
Component,"reshape(int x, int y, int width, int height)",void,"Deprecated. As of JDK version 1.1, replaced by setBounds(int, int, int, int)."
Component,resize(Dimension d),void,"Deprecated. As of JDK version 1.1, replaced by setSize(Dimension)."
Component,"resize(int width, int height)",void,"Deprecated. As of JDK version 1.1, replaced by setSize(int, int)."
Component,revalidate(),void,Revalidates the component hierarchy up to the nearest validate root.
Component,setBackground(Color c),void,Sets the background color of this component.
Component,"setBounds(int x, int y, int width, int height)",void,Moves and resizes this component.
Component,setBounds(Rectangle r),void,Moves and resizes this component to conform to the new bounding rectangle r.
Component,setComponentOrientation(ComponentOrientation o),void,Sets the language-sensitive orientation that is to be used to order the elements or text within this component.
Component,setCursor(Cursor cursor),void,Sets the cursor image to the specified cursor.
Component,setDropTarget(DropTarget dt),void,Associate a DropTarget with this component.
Component,setEnabled(boolean b),void,"Enables or disables this component, depending on the value of the parameter b."
Component,setFocusable(boolean focusable),void,Sets the focusable state of this Component to the specified value.
Component,"setFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)",void,Sets the focus traversal keys for a given traversal operation for this Component.
Component,setFocusTraversalKeysEnabled(boolean focusTraversalKeysEnabled),void,Sets whether focus traversal keys are enabled for this Component.
Component,setFont(Font f),void,Sets the font of this component.
Component,setForeground(Color c),void,Sets the foreground color of this component.
Component,setIgnoreRepaint(boolean ignoreRepaint),void,Sets whether or not paint messages received from the operating system should be ignored.
Component,setLocale(Locale l),void,Sets the locale of this component.
Component,"setLocation(int x, int y)",void,Moves this component to a new location.
Component,setLocation(Point p),void,Moves this component to a new location.
Component,setMaximumSize(Dimension maximumSize),void,Sets the maximum size of this component to a constant value.
Component,setMinimumSize(Dimension minimumSize),void,Sets the minimum size of this component to a constant value.
Component,setName(String name),void,Sets the name of the component to the specified string.
Component,setPreferredSize(Dimension preferredSize),void,Sets the preferred size of this component to a constant value.
Component,setSize(Dimension d),void,Resizes this component so that it has width d.width and height d.height.
Component,"setSize(int width, int height)",void,Resizes this component so that it has width width and height height.
Component,setVisible(boolean b),void,Shows or hides this component depending on the value of parameter b.
Component,show(),void,"Deprecated. As of JDK version 1.1, replaced by setVisible(boolean)."
Component,show(boolean b),void,"Deprecated. As of JDK version 1.1, replaced by setVisible(boolean)."
Component,size(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getSize()."
Component,toString(),String,Returns a string representation of this component and its values.
Component,transferFocus(),void,"Transfers the focus to the next component, as though this Component were the focus owner."
Component,transferFocusBackward(),void,"Transfers the focus to the previous component, as though this Component were the focus owner."
Component,transferFocusUpCycle(),void,Transfers the focus up one focus traversal cycle.
Component,update(Graphics g),void,Updates this component.
Component,validate(),void,Validates this component.
ComponentOrientation,getOrientation(Locale locale),static ComponentOrientation,Returns the orientation that is appropriate for the given locale.
ComponentOrientation,getOrientation(ResourceBundle bdl),static ComponentOrientation,"Deprecated. As of J2SE 1.4, use getOrientation(java.util.Locale)."
ComponentOrientation,isHorizontal(),boolean,"Are lines horizontal? This will return true for horizontal, left-to-right writing systems such as Roman."
ComponentOrientation,isLeftToRight(),boolean,"HorizontalLines: Do items run left-to-right? Vertical Lines: Do lines run left-to-right? This will return true for horizontal, left-to-right writing systems such as Roman."
Container,add(Component comp),Component,Appends the specified component to the end of this container.
Container,"add(Component comp, int index)",Component,Adds the specified component to this container at the given position.
Container,"add(Component comp, Object constraints)",void,Adds the specified component to the end of this container.
Container,"add(Component comp, Object constraints, int index)",void,Adds the specified component to this container with the specified constraints at the specified index.
Container,"add(String name, Component comp)",Component,Adds the specified component to this container.
Container,addContainerListener(ContainerListener l),void,Adds the specified container listener to receive container events from this container.
Container,"addImpl(Component comp, Object constraints, int index)",protected void,Adds the specified component to this container at the specified index.
Container,addNotify(),void,Makes this Container displayable by connecting it to a native screen resource.
Container,addPropertyChangeListener(PropertyChangeListener listener),void,Adds a PropertyChangeListener to the listener list.
Container,"addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Adds a PropertyChangeListener to the listener list for a specific property.
Container,applyComponentOrientation(ComponentOrientation o),void,Sets the ComponentOrientation property of this container and all components contained within it.
Container,areFocusTraversalKeysSet(int id),boolean,Returns whether the Set of focus traversal keys for the given focus traversal operation has been explicitly defined for this Container.
Container,countComponents(),int,"Deprecated. As of JDK version 1.1, replaced by getComponentCount()."
Container,deliverEvent(Event e),void,"Deprecated. As of JDK version 1.1, replaced by dispatchEvent(AWTEvent e)"
Container,doLayout(),void,Causes this container to lay out its components.
Container,"findComponentAt(int x, int y)",Component,Locates the visible child component that contains the specified position.
Container,findComponentAt(Point p),Component,Locates the visible child component that contains the specified point.
Container,getAlignmentX(),float,Returns the alignment along the x axis.
Container,getAlignmentY(),float,Returns the alignment along the y axis.
Container,getComponent(int n),Component,Gets the nth component in this container.
Container,"getComponentAt(int x, int y)",Component,"Locates the component that contains the x,y position."
Container,getComponentAt(Point p),Component,Gets the component that contains the specified point.
Container,getComponentCount(),int,Gets the number of components in this panel.
Container,getComponents(),Component[],Gets all the components in this container.
Container,getComponentZOrder(Component comp),int,Returns the z-order index of the component inside the container.
Container,getContainerListeners(),ContainerListener[],Returns an array of all the container listeners registered on this container.
Container,getFocusTraversalKeys(int id),Set<AWTKeyStroke>,Returns the Set of focus traversal keys for a given traversal operation for this Container.
Container,getFocusTraversalPolicy(),FocusTraversalPolicy,"Returns the focus traversal policy that will manage keyboard traversal of this Container's children, or null if this Container is not a focus cycle root."
Container,getInsets(),Insets,"Determines the insets of this container, which indicate the size of the container's border."
Container,getLayout(),LayoutManager,Gets the layout manager for this container.
Container,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Container.
Container,getMaximumSize(),Dimension,Returns the maximum size of this container.
Container,getMinimumSize(),Dimension,Returns the minimum size of this container.
Container,getMousePosition(boolean allowChildren),Point,"Returns the position of the mouse pointer in this Container's coordinate space if the Container is under the mouse pointer, otherwise returns null."
Container,getPreferredSize(),Dimension,Returns the preferred size of this container.
Container,insets(),Insets,"Deprecated. As of JDK version 1.1, replaced by getInsets()."
Container,invalidate(),void,Invalidates the container.
Container,isAncestorOf(Component c),boolean,Checks if the component is contained in the component hierarchy of this container.
Container,isFocusCycleRoot(),boolean,Returns whether this Container is the root of a focus traversal cycle.
Container,isFocusCycleRoot(Container container),boolean,Returns whether the specified Container is the focus cycle root of this Container's focus traversal cycle.
Container,isFocusTraversalPolicyProvider(),boolean,Returns whether this container provides focus traversal policy.
Container,isFocusTraversalPolicySet(),boolean,Returns whether the focus traversal policy has been explicitly set for this Container.
Container,isValidateRoot(),boolean,Indicates if this container is a validate root.
Container,layout(),void,"Deprecated. As of JDK version 1.1, replaced by doLayout()."
Container,"list(PrintStream out, int indent)",void,Prints a listing of this container to the specified output stream.
Container,"list(PrintWriter out, int indent)",void,"Prints out a list, starting at the specified indentation, to the specified print writer."
Container,"locate(int x, int y)",Component,"Deprecated. As of JDK version 1.1, replaced by getComponentAt(int, int)."
Container,minimumSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize()."
Container,paint(Graphics g),void,Paints the container.
Container,paintComponents(Graphics g),void,Paints each of the components in this container.
Container,paramString(),protected String,Returns a string representing the state of this Container.
Container,preferredSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize()."
Container,print(Graphics g),void,Prints the container.
Container,printComponents(Graphics g),void,Prints each of the components in this container.
Container,processContainerEvent(ContainerEvent e),protected void,Processes container events occurring on this container by dispatching them to any registered ContainerListener objects.
Container,processEvent(AWTEvent e),protected void,Processes events on this container.
Container,remove(Component comp),void,Removes the specified component from this container.
Container,remove(int index),void,"Removes the component, specified by index, from this container."
Container,removeAll(),void,Removes all the components from this container.
Container,removeContainerListener(ContainerListener l),void,Removes the specified container listener so it no longer receives container events from this container.
Container,removeNotify(),void,Makes this Container undisplayable by removing its connection to its native screen resource.
Container,"setComponentZOrder(Component comp, int index)",void,Moves the specified component to the specified z-order index in the container.
Container,setFocusCycleRoot(boolean focusCycleRoot),void,Sets whether this Container is the root of a focus traversal cycle.
Container,"setFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)",void,Sets the focus traversal keys for a given traversal operation for this Container.
Container,setFocusTraversalPolicy(FocusTraversalPolicy policy),void,"Sets the focus traversal policy that will manage keyboard traversal of this Container's children, if this Container is a focus cycle root."
Container,setFocusTraversalPolicyProvider(boolean provider),void,Sets whether this container will be used to provide focus traversal policy.
Container,setFont(Font f),void,Sets the font of this container.
Container,setLayout(LayoutManager mgr),void,Sets the layout manager for this container.
Container,transferFocusDownCycle(),void,Transfers the focus down one focus traversal cycle.
Container,update(Graphics g),void,Updates the container.
Container,validate(),void,Validates this container and all of its subcomponents.
Container,validateTree(),protected void,Recursively descends the container tree and recomputes the layout for any subtrees marked as needing it (those marked as invalid).
ContainerOrderFocusTraversalPolicy,accept(Component aComponent),protected boolean,Determines whether a Component is an acceptable choice as the new focus owner.
ContainerOrderFocusTraversalPolicy,"getComponentAfter(Container aContainer, Component aComponent)",Component,Returns the Component that should receive the focus after aComponent.
ContainerOrderFocusTraversalPolicy,"getComponentBefore(Container aContainer, Component aComponent)",Component,Returns the Component that should receive the focus before aComponent.
ContainerOrderFocusTraversalPolicy,getDefaultComponent(Container aContainer),Component,Returns the default Component to focus.
ContainerOrderFocusTraversalPolicy,getFirstComponent(Container aContainer),Component,Returns the first Component in the traversal cycle.
ContainerOrderFocusTraversalPolicy,getImplicitDownCycleTraversal(),boolean,Returns whether this ContainerOrderFocusTraversalPolicy transfers focus down-cycle implicitly.
ContainerOrderFocusTraversalPolicy,getLastComponent(Container aContainer),Component,Returns the last Component in the traversal cycle.
ContainerOrderFocusTraversalPolicy,setImplicitDownCycleTraversal(boolean implicitDownCycleTraversal),void,Sets whether this ContainerOrderFocusTraversalPolicy transfers focus down-cycle implicitly.
Cursor,getDefaultCursor(),static Cursor,Return the system default cursor.
Cursor,getName(),String,Returns the name of this cursor.
Cursor,getPredefinedCursor(int type),static Cursor,Returns a cursor object with the specified predefined type.
Cursor,getSystemCustomCursor(String name),static Cursor,Returns a system-specific custom cursor object matching the specified name.
Cursor,getType(),int,Returns the type for this cursor.
Cursor,toString(),String,Returns a string representation of this cursor.
DefaultFocusTraversalPolicy,accept(Component aComponent),protected boolean,Determines whether a Component is an acceptable choice as the new focus owner.
DefaultKeyboardFocusManager,"dequeueKeyEvents(long after, Component untilFocused)",protected void,Releases for normal dispatching to the current focus owner all KeyEvents which were enqueued because of a call to enqueueKeyEvents with the same timestamp and Component.
DefaultKeyboardFocusManager,discardKeyEvents(Component comp),protected void,"Discards all KeyEvents which were enqueued because of one or more calls to enqueueKeyEvents with the specified Component, or one of its descendants."
DefaultKeyboardFocusManager,dispatchEvent(AWTEvent e),boolean,This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf.
DefaultKeyboardFocusManager,dispatchKeyEvent(KeyEvent e),boolean,"Called by dispatchEvent if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered."
DefaultKeyboardFocusManager,downFocusCycle(Container aContainer),void,Moves the focus down one focus traversal cycle.
DefaultKeyboardFocusManager,"enqueueKeyEvents(long after, Component untilFocused)",protected void,Delays dispatching of KeyEvents until the specified Component becomes the focus owner.
DefaultKeyboardFocusManager,focusNextComponent(Component aComponent),void,"Focuses the Component after aComponent, typically based on a FocusTraversalPolicy."
DefaultKeyboardFocusManager,focusPreviousComponent(Component aComponent),void,"Focuses the Component before aComponent, typically based on a FocusTraversalPolicy."
DefaultKeyboardFocusManager,postProcessKeyEvent(KeyEvent e),boolean,This method will be called by dispatchKeyEvent.
DefaultKeyboardFocusManager,"processKeyEvent(Component focusedComponent, KeyEvent e)",void,This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent.
DefaultKeyboardFocusManager,upFocusCycle(Component aComponent),void,Moves the focus up one focus traversal cycle.
Desktop,browse(URI uri),void,Launches the default browser to display a URI.
Desktop,edit(File file),void,Launches the associated editor application and opens a file for editing.
Desktop,getDesktop(),static Desktop,Returns the Desktop instance of the current browser context.
Desktop,isDesktopSupported(),static boolean,Tests whether this class is supported on the current platform.
Desktop,isSupported(Desktop.Action action),boolean,Tests whether an action is supported on the current platform.
Desktop,mail(),void,Launches the mail composing window of the user default mail client.
Desktop,mail(URI mailtoURI),void,"Launches the mail composing window of the user default mail client, filling the message fields specified by a mailto: URI."
Desktop,open(File file),void,Launches the associated application to open the file.
Desktop,print(File file),void,"Prints a file with the native desktop printing facility, using the associated application's print command."
Dialog,addNotify(),void,Makes this Dialog displayable by connecting it to a native screen resource.
Dialog,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Dialog.
Dialog,getModalityType(),Dialog.ModalityType,Returns the modality type of this dialog.
Dialog,getTitle(),String,Gets the title of the dialog.
Dialog,hide(),void,"Deprecated. As of JDK version 1.5, replaced by setVisible(boolean)."
Dialog,isModal(),boolean,Indicates whether the dialog is modal.
Dialog,isResizable(),boolean,Indicates whether this dialog is resizable by the user.
Dialog,isUndecorated(),boolean,Indicates whether this dialog is undecorated.
Dialog,paramString(),protected String,Returns a string representing the state of this dialog.
Dialog,setBackground(Color bgColor),void,Sets the background color of this window.
Dialog,setModal(boolean modal),void,Specifies whether this dialog should be modal.
Dialog,setModalityType(Dialog.ModalityType type),void,Sets the modality type for this dialog.
Dialog,setOpacity(float opacity),void,Sets the opacity of the window.
Dialog,setResizable(boolean resizable),void,Sets whether this dialog is resizable by the user.
Dialog,setShape(Shape shape),void,Sets the shape of the window.
Dialog,setTitle(String title),void,Sets the title of the Dialog.
Dialog,setUndecorated(boolean undecorated),void,Disables or enables decorations for this dialog.
Dialog,setVisible(boolean b),void,Shows or hides this Dialog depending on the value of parameter b.
Dialog,show(),void,"Deprecated. As of JDK version 1.5, replaced by setVisible(boolean)."
Dialog,toBack(),void,"If this Window is visible, sends this Window to the back and may cause it to lose focus or activation if it is the focused or active Window."
Dimension,equals(Object obj),boolean,Checks whether two dimension objects have equal values.
Dimension,getHeight(),double,Returns the height of this Dimension in double precision.
Dimension,getSize(),Dimension,Gets the size of this Dimension object.
Dimension,getWidth(),double,Returns the width of this Dimension in double precision.
Dimension,hashCode(),int,Returns the hash code for this Dimension.
Dimension,setSize(Dimension d),void,Sets the size of this Dimension object to the specified size.
Dimension,"setSize(double width, double height)",void,Sets the size of this Dimension object to the specified width and height in double precision.
Dimension,"setSize(int width, int height)",void,Sets the size of this Dimension object to the specified width and height.
Dimension,toString(),String,Returns a string representation of the values of this Dimension object's height and width fields.
DisplayMode,equals(DisplayMode dm),boolean,Returns whether the two display modes are equal.
DisplayMode,equals(Object dm),boolean,"Indicates whether some other object is ""equal to"" this one."
DisplayMode,getBitDepth(),int,"Returns the bit depth of the display, in bits per pixel."
DisplayMode,getHeight(),int,"Returns the height of the display, in pixels."
DisplayMode,getRefreshRate(),int,"Returns the refresh rate of the display, in hertz."
DisplayMode,getWidth(),int,"Returns the width of the display, in pixels."
DisplayMode,hashCode(),int,Returns a hash code value for the object.
Event,controlDown(),boolean,NOTE: The Event class is obsolete and is available only for backwards compatibility.
Event,metaDown(),boolean,NOTE: The Event class is obsolete and is available only for backwards compatibility.
Event,paramString(),protected String,NOTE: The Event class is obsolete and is available only for backwards compatibility.
Event,shiftDown(),boolean,NOTE: The Event class is obsolete and is available only for backwards compatibility.
Event,toString(),String,NOTE: The Event class is obsolete and is available only for backwards compatibility.
Event,"translate(int dx, int dy)",void,NOTE: The Event class is obsolete and is available only for backwards compatibility.
EventQueue,createSecondaryLoop(),SecondaryLoop,Creates a new secondary loop associated with this event queue.
EventQueue,dispatchEvent(AWTEvent event),protected void,Dispatches an event.
EventQueue,getCurrentEvent(),static AWTEvent,Returns the the event currently being dispatched by the EventQueue associated with the calling thread.
EventQueue,getMostRecentEventTime(),static long,"Returns the timestamp of the most recent event that had a timestamp, and that was dispatched from the EventQueue associated with the calling thread."
EventQueue,getNextEvent(),AWTEvent,Removes an event from the EventQueue and returns it.
EventQueue,invokeAndWait(Runnable runnable),static void,Causes runnable to have its run method called in the dispatch thread of the system EventQueue.
EventQueue,invokeLater(Runnable runnable),static void,Causes runnable to have its run method called in the dispatch thread of the system EventQueue.
EventQueue,isDispatchThread(),static boolean,Returns true if the calling thread is the current AWT EventQueue's dispatch thread.
EventQueue,peekEvent(),AWTEvent,Returns the first event on the EventQueue without removing it.
EventQueue,peekEvent(int id),AWTEvent,"Returns the first event with the specified id, if any."
EventQueue,pop(),protected void,Stops dispatching events using this EventQueue.
EventQueue,postEvent(AWTEvent theEvent),void,Posts a 1.1-style event to the EventQueue.
EventQueue,push(EventQueue newEventQueue),void,Replaces the existing EventQueue with the specified one.
FileDialog,addNotify(),void,Creates the file dialog's peer.
FileDialog,getDirectory(),String,Gets the directory of this file dialog.
FileDialog,getFile(),String,Gets the selected file of this file dialog.
FileDialog,getFilenameFilter(),FilenameFilter,Determines this file dialog's filename filter.
FileDialog,getFiles(),File[],Returns files that the user selects.
FileDialog,getMode(),int,Indicates whether this file dialog box is for loading from a file or for saving to a file.
FileDialog,isMultipleMode(),boolean,Returns whether the file dialog allows the multiple file selection.
FileDialog,paramString(),protected String,Returns a string representing the state of this FileDialog window.
FileDialog,setDirectory(String dir),void,Sets the directory of this file dialog window to be the specified directory.
FileDialog,setFile(String file),void,Sets the selected file for this file dialog window to be the specified file.
FileDialog,setFilenameFilter(FilenameFilter filter),void,Sets the filename filter for this file dialog window to the specified filter.
FileDialog,setMode(int mode),void,Sets the mode of the file dialog.
FileDialog,setMultipleMode(boolean enable),void,Enables or disables multiple file selection for the file dialog.
FlowLayout,"addLayoutComponent(String name, Component comp)",void,Adds the specified component to the layout.
FlowLayout,getAlignment(),int,Gets the alignment for this layout.
FlowLayout,getAlignOnBaseline(),boolean,Returns true if components are to be vertically aligned along their baseline.
FlowLayout,getHgap(),int,Gets the horizontal gap between components and between the components and the borders of the Container
FlowLayout,getVgap(),int,Gets the vertical gap between components and between the components and the borders of the Container.
FlowLayout,layoutContainer(Container target),void,Lays out the container.
FlowLayout,minimumLayoutSize(Container target),Dimension,Returns the minimum dimensions needed to layout the visible components contained in the specified target container.
FlowLayout,preferredLayoutSize(Container target),Dimension,Returns the preferred dimensions for this layout given the visible components in the specified target container.
FlowLayout,removeLayoutComponent(Component comp),void,Removes the specified component from the layout.
FlowLayout,setAlignment(int align),void,Sets the alignment for this layout.
FlowLayout,setAlignOnBaseline(boolean alignOnBaseline),void,Sets whether or not components should be vertically aligned along their baseline.
FlowLayout,setHgap(int hgap),void,Sets the horizontal gap between components and between the components and the borders of the Container.
FlowLayout,setVgap(int vgap),void,Sets the vertical gap between components and between the components and the borders of the Container.
FlowLayout,toString(),String,Returns a string representation of this FlowLayout object and its values.
FocusTraversalPolicy,"getComponentAfter(Container aContainer, Component aComponent)",abstract Component,Returns the Component that should receive the focus after aComponent.
FocusTraversalPolicy,"getComponentBefore(Container aContainer, Component aComponent)",abstract Component,Returns the Component that should receive the focus before aComponent.
FocusTraversalPolicy,getDefaultComponent(Container aContainer),abstract Component,Returns the default Component to focus.
FocusTraversalPolicy,getFirstComponent(Container aContainer),abstract Component,Returns the first Component in the traversal cycle.
FocusTraversalPolicy,getInitialComponent(Window window),Component,Returns the Component that should receive the focus when a Window is made visible for the first time.
FocusTraversalPolicy,getLastComponent(Container aContainer),abstract Component,Returns the last Component in the traversal cycle.
Font,canDisplay(char c),boolean,Checks if this Font has a glyph for the specified character.
Font,canDisplay(int codePoint),boolean,Checks if this Font has a glyph for the specified character.
Font,"canDisplayUpTo(char[] text, int start, int limit)",int,Indicates whether or not this Font can display the characters in the specified text starting at start and ending at limit.
Font,"canDisplayUpTo(CharacterIterator iter, int start, int limit)",int,Indicates whether or not this Font can display the text specified by the iter starting at start and ending at limit.
Font,canDisplayUpTo(String str),int,Indicates whether or not this Font can display a specified String.
Font,"createFont(int fontFormat, File fontFile)",static Font,Returns a new Font using the specified font type and the specified font file.
Font,"createFont(int fontFormat, InputStream fontStream)",static Font,Returns a new Font using the specified font type and input data.
Font,"createGlyphVector(FontRenderContext frc, char[] chars)",GlyphVector,Creates a GlyphVector by mapping characters to glyphs one-to-one based on the Unicode cmap in this Font.
Font,"createGlyphVector(FontRenderContext frc, CharacterIterator ci)",GlyphVector,Creates a GlyphVector by mapping the specified characters to glyphs one-to-one based on the Unicode cmap in this Font.
Font,"createGlyphVector(FontRenderContext frc, int[] glyphCodes)",GlyphVector,Creates a GlyphVector by mapping characters to glyphs one-to-one based on the Unicode cmap in this Font.
Font,"createGlyphVector(FontRenderContext frc, String str)",GlyphVector,Creates a GlyphVector by mapping characters to glyphs one-to-one based on the Unicode cmap in this Font.
Font,decode(String str),static Font,Returns the Font that the str argument describes.
Font,deriveFont(AffineTransform trans),Font,Creates a new Font object by replicating the current Font object and applying a new transform to it.
Font,deriveFont(float size),Font,Creates a new Font object by replicating the current Font object and applying a new size to it.
Font,deriveFont(int style),Font,Creates a new Font object by replicating the current Font object and applying a new style to it.
Font,"deriveFont(int style, AffineTransform trans)",Font,Creates a new Font object by replicating this Font object and applying a new style and transform.
Font,"deriveFont(int style, float size)",Font,Creates a new Font object by replicating this Font object and applying a new style and size.
Font,"deriveFont(Map<? extends AttributedCharacterIterator.Attribute,?> attributes)",Font,Creates a new Font object by replicating the current Font object and applying a new set of font attributes to it.
Font,equals(Object obj),boolean,Compares this Font object to the specified Object.
Font,getAttributes(),"Map<TextAttribute,?>",Returns a map of font attributes available in this Font.
Font,getAvailableAttributes(),AttributedCharacterIterator.Attribute[],Returns the keys of all the attributes supported by this Font.
Font,getBaselineFor(char c),byte,Returns the baseline appropriate for displaying this character.
Font,getFamily(),String,Returns the family name of this Font.
Font,getFamily(Locale l),String,"Returns the family name of this Font, localized for the specified locale."
Font,"getFont(Map<? extends AttributedCharacterIterator.Attribute,?> attributes)",static Font,Returns a Font appropriate to the attributes.
Font,getFont(String nm),static Font,Returns a Font object from the system properties list.
Font,"getFont(String nm, Font font)",static Font,Gets the specified Font from the system properties list.
Font,getFontName(),String,Returns the font face name of this Font.
Font,getFontName(Locale l),String,"Returns the font face name of the Font, localized for the specified locale."
Font,getItalicAngle(),float,Returns the italic angle of this Font.
Font,"getLineMetrics(char[] chars, int beginIndex, int limit, FontRenderContext frc)",LineMetrics,Returns a LineMetrics object created with the specified arguments.
Font,"getLineMetrics(CharacterIterator ci, int beginIndex, int limit, FontRenderContext frc)",LineMetrics,Returns a LineMetrics object created with the specified arguments.
Font,"getLineMetrics(String str, FontRenderContext frc)",LineMetrics,Returns a LineMetrics object created with the specified String and FontRenderContext.
Font,"getLineMetrics(String str, int beginIndex, int limit, FontRenderContext frc)",LineMetrics,Returns a LineMetrics object created with the specified arguments.
Font,getMaxCharBounds(FontRenderContext frc),Rectangle2D,Returns the bounds for the character with the maximum bounds as defined in the specified FontRenderContext.
Font,getMissingGlyphCode(),int,Returns the glyphCode which is used when this Font does not have a glyph for a specified unicode code point.
Font,getName(),String,Returns the logical name of this Font.
Font,getNumGlyphs(),int,Returns the number of glyphs in this Font.
Font,getPeer(),java.awt.peer.FontPeer,Deprecated. Font rendering is now platform independent.
Font,getPSName(),String,Returns the postscript name of this Font.
Font,getSize(),int,"Returns the point size of this Font, rounded to an integer."
Font,getSize2D(),float,Returns the point size of this Font in float value.
Font,"getStringBounds(char[] chars, int beginIndex, int limit, FontRenderContext frc)",Rectangle2D,Returns the logical bounds of the specified array of characters in the specified FontRenderContext.
Font,"getStringBounds(CharacterIterator ci, int beginIndex, int limit, FontRenderContext frc)",Rectangle2D,Returns the logical bounds of the characters indexed in the specified CharacterIterator in the specified FontRenderContext.
Font,"getStringBounds(String str, FontRenderContext frc)",Rectangle2D,Returns the logical bounds of the specified String in the specified FontRenderContext.
Font,"getStringBounds(String str, int beginIndex, int limit, FontRenderContext frc)",Rectangle2D,Returns the logical bounds of the specified String in the specified FontRenderContext.
Font,getStyle(),int,Returns the style of this Font.
Font,getTransform(),AffineTransform,Returns a copy of the transform associated with this Font.
Font,hashCode(),int,Returns a hashcode for this Font.
Font,hasLayoutAttributes(),boolean,Return true if this Font contains attributes that require extra layout processing.
Font,hasUniformLineMetrics(),boolean,Checks whether or not this Font has uniform line metrics.
Font,isBold(),boolean,Indicates whether or not this Font object's style is BOLD.
Font,isItalic(),boolean,Indicates whether or not this Font object's style is ITALIC.
Font,isPlain(),boolean,Indicates whether or not this Font object's style is PLAIN.
Font,isTransformed(),boolean,Indicates whether or not this Font object has a transform that affects its size in addition to the Size attribute.
Font,"layoutGlyphVector(FontRenderContext frc, char[] text, int start, int limit, int flags)",GlyphVector,"Returns a new GlyphVector object, performing full layout of the text if possible."
Font,toString(),String,Converts this Font object to a String representation.
FontMetrics,"bytesWidth(byte[] data, int off, int len)",int,Returns the total advance width for showing the specified array of bytes in this Font.
FontMetrics,"charsWidth(char[] data, int off, int len)",int,Returns the total advance width for showing the specified array of characters in this Font.
FontMetrics,charWidth(char ch),int,Returns the advance width of the specified character in this Font.
FontMetrics,charWidth(int codePoint),int,Returns the advance width of the specified character in this Font.
FontMetrics,getAscent(),int,Determines the font ascent of the Font described by this FontMetrics object.
FontMetrics,getDescent(),int,Determines the font descent of the Font described by this FontMetrics object.
FontMetrics,getFont(),Font,Gets the Font described by this FontMetrics object.
FontMetrics,getFontRenderContext(),FontRenderContext,Gets the FontRenderContext used by this FontMetrics object to measure text.
FontMetrics,getHeight(),int,Gets the standard height of a line of text in this font.
FontMetrics,getLeading(),int,Determines the standard leading of the Font described by this FontMetrics object.
FontMetrics,"getLineMetrics(char[] chars, int beginIndex, int limit, Graphics context)",LineMetrics,Returns the LineMetrics object for the specified character array in the specified Graphics context.
FontMetrics,"getLineMetrics(CharacterIterator ci, int beginIndex, int limit, Graphics context)",LineMetrics,Returns the LineMetrics object for the specified CharacterIterator in the specified Graphics context.
FontMetrics,"getLineMetrics(String str, Graphics context)",LineMetrics,Returns the LineMetrics object for the specified String in the specified Graphics context.
FontMetrics,"getLineMetrics(String str, int beginIndex, int limit, Graphics context)",LineMetrics,Returns the LineMetrics object for the specified String in the specified Graphics context.
FontMetrics,getMaxAdvance(),int,Gets the maximum advance width of any character in this Font.
FontMetrics,getMaxAscent(),int,Determines the maximum ascent of the Font described by this FontMetrics object.
FontMetrics,getMaxCharBounds(Graphics context),Rectangle2D,Returns the bounds for the character with the maximum bounds in the specified Graphics context.
FontMetrics,getMaxDecent(),int,"Deprecated. As of JDK version 1.1.1, replaced by getMaxDescent()."
FontMetrics,getMaxDescent(),int,Determines the maximum descent of the Font described by this FontMetrics object.
FontMetrics,"getStringBounds(char[] chars, int beginIndex, int limit, Graphics context)",Rectangle2D,Returns the bounds of the specified array of characters in the specified Graphics context.
FontMetrics,"getStringBounds(CharacterIterator ci, int beginIndex, int limit, Graphics context)",Rectangle2D,Returns the bounds of the characters indexed in the specified CharacterIterator in the specified Graphics context.
FontMetrics,"getStringBounds(String str, Graphics context)",Rectangle2D,Returns the bounds of the specified String in the specified Graphics context.
FontMetrics,"getStringBounds(String str, int beginIndex, int limit, Graphics context)",Rectangle2D,Returns the bounds of the specified String in the specified Graphics context.
FontMetrics,getWidths(),int[],Gets the advance widths of the first 256 characters in the Font.
FontMetrics,hasUniformLineMetrics(),boolean,Checks to see if the Font has uniform line metrics.
FontMetrics,stringWidth(String str),int,Returns the total advance width for showing the specified String in this Font.
FontMetrics,toString(),String,Returns a representation of this FontMetrics object's values as a String.
Frame,addNotify(),void,Makes this Frame displayable by connecting it to a native screen resource.
Frame,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Frame.
Frame,getCursorType(),int,"Deprecated. As of JDK version 1.1, replaced by Component.getCursor()."
Frame,getExtendedState(),int,Gets the state of this frame.
Frame,getFrames(),static Frame[],Returns an array of all Frames created by this application.
Frame,getIconImage(),Image,Returns the image to be displayed as the icon for this frame.
Frame,getMaximizedBounds(),Rectangle,Gets maximized bounds for this frame.
Frame,getMenuBar(),MenuBar,Gets the menu bar for this frame.
Frame,getState(),int,Gets the state of this frame (obsolete).
Frame,getTitle(),String,Gets the title of the frame.
Frame,isResizable(),boolean,Indicates whether this frame is resizable by the user.
Frame,isUndecorated(),boolean,Indicates whether this frame is undecorated.
Frame,paramString(),protected String,Returns a string representing the state of this Frame.
Frame,remove(MenuComponent m),void,Removes the specified menu bar from this frame.
Frame,removeNotify(),void,Makes this Frame undisplayable by removing its connection to its native screen resource.
Frame,setBackground(Color bgColor),void,Sets the background color of this window.
Frame,setCursor(int cursorType),void,"Deprecated. As of JDK version 1.1, replaced by Component.setCursor(Cursor)."
Frame,setExtendedState(int state),void,Sets the state of this frame.
Frame,setIconImage(Image image),void,Sets the image to be displayed as the icon for this window.
Frame,setMaximizedBounds(Rectangle bounds),void,Sets the maximized bounds for this frame.
Frame,setMenuBar(MenuBar mb),void,Sets the menu bar for this frame to the specified menu bar.
Frame,setOpacity(float opacity),void,Sets the opacity of the window.
Frame,setResizable(boolean resizable),void,Sets whether this frame is resizable by the user.
Frame,setShape(Shape shape),void,Sets the shape of the window.
Frame,setState(int state),void,Sets the state of this frame (obsolete).
Frame,setTitle(String title),void,Sets the title for this frame to the specified string.
Frame,setUndecorated(boolean undecorated),void,Disables or enables decorations for this frame.
GradientPaint,"createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints)",PaintContext,Creates and returns a PaintContext used to generate a linear color gradient pattern.
GradientPaint,getColor1(),Color,Returns the color C1 anchored by the point P1.
GradientPaint,getColor2(),Color,Returns the color C2 anchored by the point P2.
GradientPaint,getPoint1(),Point2D,Returns a copy of the point P1 that anchors the first color.
GradientPaint,getPoint2(),Point2D,Returns a copy of the point P2 which anchors the second color.
GradientPaint,getTransparency(),int,Returns the transparency mode for this GradientPaint.
GradientPaint,isCyclic(),boolean,Returns true if the gradient cycles repeatedly between the two colors C1 and C2.
Graphics,"clearRect(int x, int y, int width, int height)",abstract void,Clears the specified rectangle by filling it with the background color of the current drawing surface.
Graphics,"clipRect(int x, int y, int width, int height)",abstract void,Intersects the current clip with the specified rectangle.
Graphics,"copyArea(int x, int y, int width, int height, int dx, int dy)",abstract void,Copies an area of the component by a distance specified by dx and dy.
Graphics,create(),abstract Graphics,Creates a new Graphics object that is a copy of this Graphics object.
Graphics,"create(int x, int y, int width, int height)",Graphics,"Creates a new Graphics object based on this Graphics object, but with a new translation and clip area."
Graphics,dispose(),abstract void,Disposes of this graphics context and releases any system resources that it is using.
Graphics,"draw3DRect(int x, int y, int width, int height, boolean raised)",void,Draws a 3-D highlighted outline of the specified rectangle.
Graphics,"drawArc(int x, int y, int width, int height, int startAngle, int arcAngle)",abstract void,Draws the outline of a circular or elliptical arc covering the specified rectangle.
Graphics,"drawBytes(byte[] data, int offset, int length, int x, int y)",void,"Draws the text given by the specified byte array, using this graphics context's current font and color."
Graphics,"drawChars(char[] data, int offset, int length, int x, int y)",void,"Draws the text given by the specified character array, using this graphics context's current font and color."
Graphics,"drawImage(Image img, int x, int y, Color bgcolor, ImageObserver observer)",abstract boolean,Draws as much of the specified image as is currently available.
Graphics,"drawImage(Image img, int x, int y, ImageObserver observer)",abstract boolean,Draws as much of the specified image as is currently available.
Graphics,"drawImage(Image img, int x, int y, int width, int height, Color bgcolor, ImageObserver observer)",abstract boolean,Draws as much of the specified image as has already been scaled to fit inside the specified rectangle.
Graphics,"drawImage(Image img, int x, int y, int width, int height, ImageObserver observer)",abstract boolean,Draws as much of the specified image as has already been scaled to fit inside the specified rectangle.
Graphics,"drawImage(Image img, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, Color bgcolor, ImageObserver observer)",abstract boolean,"Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface."
Graphics,"drawImage(Image img, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer)",abstract boolean,"Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface."
Graphics,"drawLine(int x1, int y1, int x2, int y2)",abstract void,"Draws a line, using the current color, between the points (x1, y1) and (x2, y2) in this graphics context's coordinate system."
Graphics,"drawOval(int x, int y, int width, int height)",abstract void,Draws the outline of an oval.
Graphics,"drawPolygon(int[] xPoints, int[] yPoints, int nPoints)",abstract void,Draws a closed polygon defined by arrays of x and y coordinates.
Graphics,drawPolygon(Polygon p),void,Draws the outline of a polygon defined by the specified Polygon object.
Graphics,"drawPolyline(int[] xPoints, int[] yPoints, int nPoints)",abstract void,Draws a sequence of connected lines defined by arrays of x and y coordinates.
Graphics,"drawRect(int x, int y, int width, int height)",void,Draws the outline of the specified rectangle.
Graphics,"drawRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight)",abstract void,Draws an outlined round-cornered rectangle using this graphics context's current color.
Graphics,"drawString(AttributedCharacterIterator iterator, int x, int y)",abstract void,Renders the text of the specified iterator applying its attributes in accordance with the specification of the TextAttribute class.
Graphics,"drawString(String str, int x, int y)",abstract void,"Draws the text given by the specified string, using this graphics context's current font and color."
Graphics,"fill3DRect(int x, int y, int width, int height, boolean raised)",void,Paints a 3-D highlighted rectangle filled with the current color.
Graphics,"fillArc(int x, int y, int width, int height, int startAngle, int arcAngle)",abstract void,Fills a circular or elliptical arc covering the specified rectangle.
Graphics,"fillOval(int x, int y, int width, int height)",abstract void,Fills an oval bounded by the specified rectangle with the current color.
Graphics,"fillPolygon(int[] xPoints, int[] yPoints, int nPoints)",abstract void,Fills a closed polygon defined by arrays of x and y coordinates.
Graphics,fillPolygon(Polygon p),void,Fills the polygon defined by the specified Polygon object with the graphics context's current color.
Graphics,"fillRect(int x, int y, int width, int height)",abstract void,Fills the specified rectangle.
Graphics,"fillRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight)",abstract void,Fills the specified rounded corner rectangle with the current color.
Graphics,finalize(),void,Disposes of this graphics context once it is no longer referenced.
Graphics,getClip(),abstract Shape,Gets the current clipping area.
Graphics,getClipBounds(),abstract Rectangle,Returns the bounding rectangle of the current clipping area.
Graphics,getClipBounds(Rectangle r),Rectangle,Returns the bounding rectangle of the current clipping area.
Graphics,getClipRect(),Rectangle,"Deprecated. As of JDK version 1.1, replaced by getClipBounds()."
Graphics,getColor(),abstract Color,Gets this graphics context's current color.
Graphics,getFont(),abstract Font,Gets the current font.
Graphics,getFontMetrics(),FontMetrics,Gets the font metrics of the current font.
Graphics,getFontMetrics(Font f),abstract FontMetrics,Gets the font metrics for the specified font.
Graphics,"hitClip(int x, int y, int width, int height)",boolean,Returns true if the specified rectangular area might intersect the current clipping area.
Graphics,"setClip(int x, int y, int width, int height)",abstract void,Sets the current clip to the rectangle specified by the given coordinates.
Graphics,setClip(Shape clip),abstract void,Sets the current clipping area to an arbitrary clip shape.
Graphics,setColor(Color c),abstract void,Sets this graphics context's current color to the specified color.
Graphics,setFont(Font font),abstract void,Sets this graphics context's font to the specified font.
Graphics,setPaintMode(),abstract void,Sets the paint mode of this graphics context to overwrite the destination with this graphics context's current color.
Graphics,setXORMode(Color c1),abstract void,Sets the paint mode of this graphics context to alternate between this graphics context's current color and the new specified color.
Graphics,toString(),String,Returns a String object representing this Graphics object's value.
Graphics,"translate(int x, int y)",abstract void,"Translates the origin of the graphics context to the point (x, y) in the current coordinate system."
Graphics2D,"addRenderingHints(Map<?,?> hints)",abstract void,Sets the values of an arbitrary number of preferences for the rendering algorithms.
Graphics2D,clip(Shape s),abstract void,Intersects the current Clip with the interior of the specified Shape and sets the Clip to the resulting intersection.
Graphics2D,draw(Shape s),abstract void,Strokes the outline of a Shape using the settings of the current Graphics2D context.
Graphics2D,"draw3DRect(int x, int y, int width, int height, boolean raised)",void,Draws a 3-D highlighted outline of the specified rectangle.
Graphics2D,"drawGlyphVector(GlyphVector g, float x, float y)",abstract void,Renders the text of the specified GlyphVector using the Graphics2D context's rendering attributes.
Graphics2D,"drawImage(BufferedImage img, BufferedImageOp op, int x, int y)",abstract void,Renders a BufferedImage that is filtered with a BufferedImageOp.
Graphics2D,"drawImage(Image img, AffineTransform xform, ImageObserver obs)",abstract boolean,"Renders an image, applying a transform from image space into user space before drawing."
Graphics2D,"drawRenderableImage(RenderableImage img, AffineTransform xform)",abstract void,"Renders a RenderableImage, applying a transform from image space into user space before drawing."
Graphics2D,"drawRenderedImage(RenderedImage img, AffineTransform xform)",abstract void,"Renders a RenderedImage, applying a transform from image space into user space before drawing."
Graphics2D,"drawString(AttributedCharacterIterator iterator, float x, float y)",abstract void,Renders the text of the specified iterator applying its attributes in accordance with the specification of the TextAttribute class.
Graphics2D,"drawString(AttributedCharacterIterator iterator, int x, int y)",abstract void,Renders the text of the specified iterator applying its attributes in accordance with the specification of the TextAttribute class.
Graphics2D,"drawString(String str, float x, float y)",abstract void,"Renders the text specified by the specified String, using the current text attribute state in the Graphics2D context."
Graphics2D,"drawString(String str, int x, int y)",abstract void,"Renders the text of the specified String, using the current text attribute state in the Graphics2D context."
Graphics2D,fill(Shape s),abstract void,Fills the interior of a Shape using the settings of the Graphics2D context.
Graphics2D,"fill3DRect(int x, int y, int width, int height, boolean raised)",void,Paints a 3-D highlighted rectangle filled with the current color.
Graphics2D,getBackground(),abstract Color,Returns the background color used for clearing a region.
Graphics2D,getComposite(),abstract Composite,Returns the current Composite in the Graphics2D context.
Graphics2D,getDeviceConfiguration(),abstract GraphicsConfiguration,Returns the device configuration associated with this Graphics2D.
Graphics2D,getFontRenderContext(),abstract FontRenderContext,Get the rendering context of the Font within this Graphics2D context.
Graphics2D,getPaint(),abstract Paint,Returns the current Paint of the Graphics2D context.
Graphics2D,getRenderingHint(RenderingHints.Key hintKey),abstract Object,Returns the value of a single preference for the rendering algorithms.
Graphics2D,getRenderingHints(),abstract RenderingHints,Gets the preferences for the rendering algorithms.
Graphics2D,getStroke(),abstract Stroke,Returns the current Stroke in the Graphics2D context.
Graphics2D,getTransform(),abstract AffineTransform,Returns a copy of the current Transform in the Graphics2D context.
Graphics2D,"hit(Rectangle rect, Shape s, boolean onStroke)",abstract boolean,"Checks whether or not the specified Shape intersects the specified Rectangle, which is in device space."
Graphics2D,rotate(double theta),abstract void,Concatenates the current Graphics2DTransform with a rotation transform.
Graphics2D,"rotate(double theta, double x, double y)",abstract void,Concatenates the current Graphics2DTransform with a translated rotation transform.
Graphics2D,"scale(double sx, double sy)",abstract void,Concatenates the current Graphics2DTransform with a scaling transformation Subsequent rendering is resized according to the specified scaling factors relative to the previous scaling.
Graphics2D,setBackground(Color color),abstract void,Sets the background color for the Graphics2D context.
Graphics2D,setComposite(Composite comp),abstract void,Sets the Composite for the Graphics2D context.
Graphics2D,setPaint(Paint paint),abstract void,Sets the Paint attribute for the Graphics2D context.
Graphics2D,"setRenderingHint(RenderingHints.Key hintKey, Object hintValue)",abstract void,Sets the value of a single preference for the rendering algorithms.
Graphics2D,"setRenderingHints(Map<?,?> hints)",abstract void,Replaces the values of all preferences for the rendering algorithms with the specified hints.
Graphics2D,setStroke(Stroke s),abstract void,Sets the Stroke for the Graphics2D context.
Graphics2D,setTransform(AffineTransform Tx),abstract void,Overwrites the Transform in the Graphics2D context.
Graphics2D,"shear(double shx, double shy)",abstract void,Concatenates the current Graphics2DTransform with a shearing transform.
Graphics2D,transform(AffineTransform Tx),abstract void,Composes an AffineTransform object with the Transform in this Graphics2D according to the rule last-specified-first-applied.
Graphics2D,"translate(double tx, double ty)",abstract void,Concatenates the current Graphics2D Transform with a translation transform.
Graphics2D,"translate(int x, int y)",abstract void,"Translates the origin of the Graphics2D context to the point (x, y) in the current coordinate system."
GraphicsConfigTemplate,getBestConfiguration(GraphicsConfiguration[] gc),abstract GraphicsConfiguration,"Returns the ""best"" configuration possible that passes the criteria defined in the GraphicsConfigTemplate."
GraphicsConfigTemplate,isGraphicsConfigSupported(GraphicsConfiguration gc),abstract boolean,Returns a boolean indicating whether or not the specified GraphicsConfiguration can be used to create a drawing surface that supports the indicated features.
GraphicsConfiguration,"createCompatibleImage(int width, int height)",BufferedImage,Returns a BufferedImage with a data layout and color model compatible with this GraphicsConfiguration.
GraphicsConfiguration,"createCompatibleImage(int width, int height, int transparency)",BufferedImage,Returns a BufferedImage that supports the specified transparency and has a data layout and color model compatible with this GraphicsConfiguration.
GraphicsConfiguration,"createCompatibleVolatileImage(int width, int height)",VolatileImage,Returns a VolatileImage with a data layout and color model compatible with this GraphicsConfiguration.
GraphicsConfiguration,"createCompatibleVolatileImage(int width, int height, ImageCapabilities caps)",VolatileImage,"Returns a VolatileImage with a data layout and color model compatible with this GraphicsConfiguration, using the specified image capabilities."
GraphicsConfiguration,"createCompatibleVolatileImage(int width, int height, ImageCapabilities caps, int transparency)",VolatileImage,"Returns a VolatileImage with a data layout and color model compatible with this GraphicsConfiguration, using the specified image capabilities and transparency value."
GraphicsConfiguration,"createCompatibleVolatileImage(int width, int height, int transparency)",VolatileImage,Returns a VolatileImage with a data layout and color model compatible with this GraphicsConfiguration.
GraphicsConfiguration,getBounds(),abstract Rectangle,Returns the bounds of the GraphicsConfiguration in the device coordinates.
GraphicsConfiguration,getBufferCapabilities(),BufferCapabilities,Returns the buffering capabilities of this GraphicsConfiguration.
GraphicsConfiguration,getColorModel(),abstract ColorModel,Returns the ColorModel associated with this GraphicsConfiguration.
GraphicsConfiguration,getColorModel(int transparency),abstract ColorModel,Returns the ColorModel associated with this GraphicsConfiguration that supports the specified transparency.
GraphicsConfiguration,getDefaultTransform(),abstract AffineTransform,Returns the default AffineTransform for this GraphicsConfiguration.
GraphicsConfiguration,getDevice(),abstract GraphicsDevice,Returns the GraphicsDevice associated with this GraphicsConfiguration.
GraphicsConfiguration,getImageCapabilities(),ImageCapabilities,Returns the image capabilities of this GraphicsConfiguration.
GraphicsConfiguration,getNormalizingTransform(),abstract AffineTransform,Returns a AffineTransform that can be concatenated with the default AffineTransform of a GraphicsConfiguration so that 72 units in user space equals 1 inch in device space.
GraphicsConfiguration,isTranslucencyCapable(),boolean,Returns whether this GraphicsConfiguration supports the PERPIXEL_TRANSLUCENT kind of translucency.
GraphicsDevice,getAvailableAcceleratedMemory(),int,This method returns the number of bytes available in accelerated memory on this device.
GraphicsDevice,getBestConfiguration(GraphicsConfigTemplate gct),GraphicsConfiguration,"Returns the ""best"" configuration possible that passes the criteria defined in the GraphicsConfigTemplate."
GraphicsDevice,getConfigurations(),abstract GraphicsConfiguration[],Returns all of the GraphicsConfiguration objects associated with this GraphicsDevice.
GraphicsDevice,getDefaultConfiguration(),abstract GraphicsConfiguration,Returns the default GraphicsConfiguration associated with this GraphicsDevice.
GraphicsDevice,getDisplayMode(),DisplayMode,Returns the current display mode of this GraphicsDevice.
GraphicsDevice,getDisplayModes(),DisplayMode[],Returns all display modes available for this GraphicsDevice.
GraphicsDevice,getFullScreenWindow(),Window,Returns the Window object representing the full-screen window if the device is in full-screen mode.
GraphicsDevice,getIDstring(),abstract String,Returns the identification string associated with this GraphicsDevice.
GraphicsDevice,getType(),abstract int,Returns the type of this GraphicsDevice.
GraphicsDevice,isDisplayChangeSupported(),boolean,Returns true if this GraphicsDevice supports low-level display changes.
GraphicsDevice,isFullScreenSupported(),boolean,Returns true if this GraphicsDevice supports full-screen exclusive mode.
GraphicsDevice,isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency translucencyKind),boolean,Returns whether the given level of translucency is supported by this graphics device.
GraphicsDevice,setDisplayMode(DisplayMode dm),void,Sets the display mode of this graphics device.
GraphicsDevice,setFullScreenWindow(Window w),void,"Enter full-screen mode, or return to windowed mode."
GraphicsEnvironment,createGraphics(BufferedImage img),abstract Graphics2D,Returns a Graphics2D object for rendering into the specified BufferedImage.
GraphicsEnvironment,getAllFonts(),abstract Font[],Returns an array containing a one-point size instance of all fonts available in this GraphicsEnvironment.
GraphicsEnvironment,getAvailableFontFamilyNames(),abstract String[],"Returns an array containing the names of all font families in this GraphicsEnvironment localized for the default locale, as returned by Locale.getDefault()."
GraphicsEnvironment,getAvailableFontFamilyNames(Locale l),abstract String[],Returns an array containing the names of all font families in this GraphicsEnvironment localized for the specified locale.
GraphicsEnvironment,getCenterPoint(),Point,Returns the Point where Windows should be centered.
GraphicsEnvironment,getDefaultScreenDevice(),abstract GraphicsDevice,Returns the default screen GraphicsDevice.
GraphicsEnvironment,getLocalGraphicsEnvironment(),static GraphicsEnvironment,Returns the local GraphicsEnvironment.
GraphicsEnvironment,getMaximumWindowBounds(),Rectangle,Returns the maximum bounds for centered Windows.
GraphicsEnvironment,getScreenDevices(),abstract GraphicsDevice[],Returns an array of all of the screen GraphicsDevice objects.
GraphicsEnvironment,isHeadless(),static boolean,"Tests whether or not a display, keyboard, and mouse can be supported in this environment."
GraphicsEnvironment,isHeadlessInstance(),boolean,"Returns whether or not a display, keyboard, and mouse can be supported in this graphics environment."
GraphicsEnvironment,preferLocaleFonts(),void,Indicates a preference for locale-specific fonts in the mapping of logical fonts to physical fonts.
GraphicsEnvironment,preferProportionalFonts(),void,Indicates a preference for proportional over non-proportional (e.g.
GraphicsEnvironment,registerFont(Font font),boolean,Registers a created Fontin this GraphicsEnvironment.
GridBagConstraints,clone(),Object,Creates a copy of this grid bag constraint.
GridBagLayout,"addLayoutComponent(Component comp, Object constraints)",void,"Adds the specified component to the layout, using the specified constraints object."
GridBagLayout,"addLayoutComponent(String name, Component comp)",void,"Has no effect, since this layout manager does not use a per-component string."
GridBagLayout,"adjustForGravity(GridBagConstraints constraints, Rectangle r)",protected void,"Adjusts the x, y, width, and height fields to the correct values depending on the constraint geometry and pads."
GridBagLayout,"AdjustForGravity(GridBagConstraints constraints, Rectangle r)",protected void,This method is obsolete and supplied for backwards compatibility only; new code should call adjustForGravity instead.
GridBagLayout,arrangeGrid(Container parent),protected void,Lays out the grid.
GridBagLayout,ArrangeGrid(Container parent),protected void,This method is obsolete and supplied for backwards compatibility only; new code should call arrangeGrid instead.
GridBagLayout,getConstraints(Component comp),GridBagConstraints,Gets the constraints for the specified component.
GridBagLayout,getLayoutAlignmentX(Container parent),float,Returns the alignment along the x axis.
GridBagLayout,getLayoutAlignmentY(Container parent),float,Returns the alignment along the y axis.
GridBagLayout,getLayoutDimensions(),int[][],Determines column widths and row heights for the layout grid.
GridBagLayout,"getLayoutInfo(Container parent, int sizeflag)",protected GridBagLayoutInfo,Fills in an instance of GridBagLayoutInfo for the current set of managed children.
GridBagLayout,"GetLayoutInfo(Container parent, int sizeflag)",protected GridBagLayoutInfo,This method is obsolete and supplied for backwards compatibility only; new code should call getLayoutInfo instead.
GridBagLayout,getLayoutOrigin(),Point,"Determines the origin of the layout area, in the graphics coordinate space of the target container."
GridBagLayout,getLayoutWeights(),double[][],Determines the weights of the layout grid's columns and rows.
GridBagLayout,"getMinSize(Container parent, GridBagLayoutInfo info)",protected Dimension,Figures out the minimum size of the parent based on the information from getLayoutInfo.
GridBagLayout,"GetMinSize(Container parent, GridBagLayoutInfo info)",protected Dimension,This method is obsolete and supplied for backwards compatibility only; new code should call getMinSize instead.
GridBagLayout,invalidateLayout(Container target),void,"Invalidates the layout, indicating that if the layout manager has cached information it should be discarded."
GridBagLayout,layoutContainer(Container parent),void,Lays out the specified container using this grid bag layout.
GridBagLayout,"location(int x, int y)",Point,"Determines which cell in the layout grid contains the point specified by (x, y)."
GridBagLayout,lookupConstraints(Component comp),protected GridBagConstraints,Retrieves the constraints for the specified component.
GridBagLayout,maximumLayoutSize(Container target),Dimension,Returns the maximum dimensions for this layout given the components in the specified target container.
GridBagLayout,minimumLayoutSize(Container parent),Dimension,Determines the minimum size of the parent container using this grid bag layout.
GridBagLayout,preferredLayoutSize(Container parent),Dimension,Determines the preferred size of the parent container using this grid bag layout.
GridBagLayout,removeLayoutComponent(Component comp),void,Removes the specified component from this layout.
GridBagLayout,"setConstraints(Component comp, GridBagConstraints constraints)",void,Sets the constraints for the specified component in this layout.
GridBagLayout,toString(),String,Returns a string representation of this grid bag layout's values.
GridLayout,"addLayoutComponent(String name, Component comp)",void,Adds the specified component with the specified name to the layout.
GridLayout,getColumns(),int,Gets the number of columns in this layout.
GridLayout,getHgap(),int,Gets the horizontal gap between components.
GridLayout,getRows(),int,Gets the number of rows in this layout.
GridLayout,getVgap(),int,Gets the vertical gap between components.
GridLayout,layoutContainer(Container parent),void,Lays out the specified container using this layout.
GridLayout,minimumLayoutSize(Container parent),Dimension,Determines the minimum size of the container argument using this grid layout.
GridLayout,preferredLayoutSize(Container parent),Dimension,Determines the preferred size of the container argument using this grid layout.
GridLayout,removeLayoutComponent(Component comp),void,Removes the specified component from the layout.
GridLayout,setColumns(int cols),void,Sets the number of columns in this layout to the specified value.
GridLayout,setHgap(int hgap),void,Sets the horizontal gap between components to the specified value.
GridLayout,setRows(int rows),void,Sets the number of rows in this layout to the specified value.
GridLayout,setVgap(int vgap),void,Sets the vertical gap between components to the specified value.
GridLayout,toString(),String,Returns the string representation of this grid layout's values.
Image,flush(),void,Flushes all reconstructable resources being used by this Image object.
Image,getAccelerationPriority(),float,Returns the current value of the acceleration priority hint.
Image,getCapabilities(GraphicsConfiguration gc),ImageCapabilities,Returns an ImageCapabilities object which can be inquired as to the capabilities of this Image on the specified GraphicsConfiguration.
Image,getGraphics(),abstract Graphics,Creates a graphics context for drawing to an off-screen image.
Image,getHeight(ImageObserver observer),abstract int,Determines the height of the image.
Image,"getProperty(String name, ImageObserver observer)",abstract Object,Gets a property of this image by name.
Image,"getScaledInstance(int width, int height, int hints)",Image,Creates a scaled version of this image.
Image,getSource(),abstract ImageProducer,Gets the object that produces the pixels for the image.
Image,getWidth(ImageObserver observer),abstract int,Determines the width of the image.
Image,setAccelerationPriority(float priority),void,Sets a hint for this image about how important acceleration is.
ImageCapabilities,clone(),Object,Creates and returns a copy of this object.
ImageCapabilities,isAccelerated(),boolean,Returns true if the object whose capabilities are encapsulated in this ImageCapabilities can be or is accelerated.
ImageCapabilities,isTrueVolatile(),boolean,Returns true if the VolatileImage described by this ImageCapabilities can lose its surfaces.
Insets,clone(),Object,Create a copy of this object.
Insets,equals(Object obj),boolean,Checks whether two insets objects are equal.
Insets,hashCode(),int,Returns the hash code for this Insets.
Insets,"set(int top, int left, int bottom, int right)",void,"Set top, left, bottom, and right to the specified values"
Insets,toString(),String,Returns a string representation of this Insets object.
JobAttributes,clone(),Object,Creates and returns a copy of this JobAttributes.
JobAttributes,equals(Object obj),boolean,Determines whether two JobAttributes are equal to each other.
JobAttributes,getCopies(),int,Returns the number of copies the application should render for jobs using these attributes.
JobAttributes,getDefaultSelection(),JobAttributes.DefaultSelectionType,"Specifies whether, for jobs using these attributes, the application should print all pages, the range specified by the return value of getPageRanges, or the current selection."
JobAttributes,getDestination(),JobAttributes.DestinationType,Specifies whether output will be to a printer or a file for jobs using these attributes.
JobAttributes,getDialog(),JobAttributes.DialogType,"Returns whether, for jobs using these attributes, the user should see a print dialog in which to modify the print settings, and which type of print dialog should be displayed."
JobAttributes,getFileName(),String,Specifies the file name for the output file for jobs using these attributes.
JobAttributes,getFromPage(),int,"Returns, for jobs using these attributes, the first page to be printed, if a range of pages is to be printed."
JobAttributes,getMaxPage(),int,Specifies the maximum value the user can specify as the last page to be printed for jobs using these attributes.
JobAttributes,getMinPage(),int,Specifies the minimum value the user can specify as the first page to be printed for jobs using these attributes.
JobAttributes,getMultipleDocumentHandling(),JobAttributes.MultipleDocumentHandlingType,"Specifies the handling of multiple copies, including collation, for jobs using these attributes."
JobAttributes,getPageRanges(),int[][],"Specifies, for jobs using these attributes, the ranges of pages to be printed, if a range of pages is to be printed."
JobAttributes,getPrinter(),String,Returns the destination printer for jobs using these attributes.
JobAttributes,getSides(),JobAttributes.SidesType,Returns how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes.
JobAttributes,getToPage(),int,"Returns, for jobs using these attributes, the last page (inclusive) to be printed, if a range of pages is to be printed."
JobAttributes,hashCode(),int,Returns a hash code value for this JobAttributes.
JobAttributes,set(JobAttributes obj),void,Sets all of the attributes of this JobAttributes to the same values as the attributes of obj.
JobAttributes,setCopies(int copies),void,Specifies the number of copies the application should render for jobs using these attributes.
JobAttributes,setCopiesToDefault(),void,Sets the number of copies the application should render for jobs using these attributes to the default.
JobAttributes,setDefaultSelection(JobAttributes.DefaultSelectionType defaultSelection),void,"Specifies whether, for jobs using these attributes, the application should print all pages, the range specified by the return value of getPageRanges, or the current selection."
JobAttributes,setDestination(JobAttributes.DestinationType destination),void,Specifies whether output will be to a printer or a file for jobs using these attributes.
JobAttributes,setDialog(JobAttributes.DialogType dialog),void,"Specifies whether, for jobs using these attributes, the user should see a print dialog in which to modify the print settings, and which type of print dialog should be displayed."
JobAttributes,setFileName(String fileName),void,Specifies the file name for the output file for jobs using these attributes.
JobAttributes,setFromPage(int fromPage),void,"Specifies, for jobs using these attributes, the first page to be printed, if a range of pages is to be printed."
JobAttributes,setMaxPage(int maxPage),void,Specifies the maximum value the user can specify as the last page to be printed for jobs using these attributes.
JobAttributes,setMinPage(int minPage),void,Specifies the minimum value the user can specify as the first page to be printed for jobs using these attributes.
JobAttributes,setMultipleDocumentHandling(JobAttributes.MultipleDocumentHandlingType multipleDocumentHandling),void,"Specifies the handling of multiple copies, including collation, for jobs using these attributes."
JobAttributes,setMultipleDocumentHandlingToDefault(),void,"Sets the handling of multiple copies, including collation, for jobs using these attributes to the default."
JobAttributes,setPageRanges(int[][] pageRanges),void,"Specifies, for jobs using these attributes, the ranges of pages to be printed, if a range of pages is to be printed."
JobAttributes,setPrinter(String printer),void,Specifies the destination printer for jobs using these attributes.
JobAttributes,setSides(JobAttributes.SidesType sides),void,Specifies how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes.
JobAttributes,setSidesToDefault(),void,Sets how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes to the default.
JobAttributes,setToPage(int toPage),void,"Specifies, for jobs using these attributes, the last page (inclusive) to be printed, if a range of pages is to be printed."
JobAttributes,toString(),String,Returns a string representation of this JobAttributes.
JobAttributes.DefaultSelectionType,hashCode(),int,Returns a hash code value for the object.
JobAttributes.DefaultSelectionType,toString(),String,Returns a string representation of the object.
JobAttributes.DestinationType,hashCode(),int,Returns a hash code value for the object.
JobAttributes.DestinationType,toString(),String,Returns a string representation of the object.
JobAttributes.DialogType,hashCode(),int,Returns a hash code value for the object.
JobAttributes.DialogType,toString(),String,Returns a string representation of the object.
JobAttributes.MultipleDocumentHandlingType,hashCode(),int,Returns a hash code value for the object.
JobAttributes.MultipleDocumentHandlingType,toString(),String,Returns a string representation of the object.
JobAttributes.SidesType,hashCode(),int,Returns a hash code value for the object.
JobAttributes.SidesType,toString(),String,Returns a string representation of the object.
KeyboardFocusManager,addKeyEventDispatcher(KeyEventDispatcher dispatcher),void,Adds a KeyEventDispatcher to this KeyboardFocusManager's dispatcher chain.
KeyboardFocusManager,addKeyEventPostProcessor(KeyEventPostProcessor processor),void,Adds a KeyEventPostProcessor to this KeyboardFocusManager's post- processor chain.
KeyboardFocusManager,addPropertyChangeListener(PropertyChangeListener listener),void,Adds a PropertyChangeListener to the listener list.
KeyboardFocusManager,"addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Adds a PropertyChangeListener to the listener list for a specific property.
KeyboardFocusManager,"addVetoableChangeListener(String propertyName, VetoableChangeListener listener)",void,Adds a VetoableChangeListener to the listener list for a specific property.
KeyboardFocusManager,addVetoableChangeListener(VetoableChangeListener listener),void,Adds a VetoableChangeListener to the listener list.
KeyboardFocusManager,clearFocusOwner(),void,"Clears the focus owner at both the Java and native levels if the focus owner exists and resides in the same context as the calling thread, otherwise the method returns silently."
KeyboardFocusManager,clearGlobalFocusOwner(),void,Clears the global focus owner at both the Java and native levels.
KeyboardFocusManager,"dequeueKeyEvents(long after, Component untilFocused)",protected abstract void,Called by the AWT to notify the KeyboardFocusManager that it should cancel delayed dispatching of KeyEvents.
KeyboardFocusManager,discardKeyEvents(Component comp),protected abstract void,Called by the AWT to notify the KeyboardFocusManager that it should cancel delayed dispatching of KeyEvents.
KeyboardFocusManager,dispatchEvent(AWTEvent e),abstract boolean,This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf.
KeyboardFocusManager,dispatchKeyEvent(KeyEvent e),abstract boolean,"Typically this method will be called by dispatchEvent if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered."
KeyboardFocusManager,downFocusCycle(),void,"Moves the focus down one focus traversal cycle from the current focus owner, if and only if the current focus owner is a Container that is a focus cycle root."
KeyboardFocusManager,downFocusCycle(Container aContainer),abstract void,Moves the focus down one focus traversal cycle.
KeyboardFocusManager,"enqueueKeyEvents(long after, Component untilFocused)",protected abstract void,Called by the AWT to notify the KeyboardFocusManager that it should delay dispatching of KeyEvents until the specified Component becomes the focus owner.
KeyboardFocusManager,"firePropertyChange(String propertyName, Object oldValue, Object newValue)",protected void,Fires a PropertyChangeEvent in response to a change in a bound property.
KeyboardFocusManager,"fireVetoableChange(String propertyName, Object oldValue, Object newValue)",protected void,Fires a PropertyChangeEvent in response to a change in a vetoable property.
KeyboardFocusManager,focusNextComponent(),void,Focuses the Component after the current focus owner.
KeyboardFocusManager,focusNextComponent(Component aComponent),abstract void,"Focuses the Component after aComponent, typically based on a FocusTraversalPolicy."
KeyboardFocusManager,focusPreviousComponent(),void,Focuses the Component before the current focus owner.
KeyboardFocusManager,focusPreviousComponent(Component aComponent),abstract void,"Focuses the Component before aComponent, typically based on a FocusTraversalPolicy."
KeyboardFocusManager,getActiveWindow(),Window,"Returns the active Window, if the active Window is in the same context as the calling thread."
KeyboardFocusManager,getCurrentFocusCycleRoot(),Container,"Returns the current focus cycle root, if the current focus cycle root is in the same context as the calling thread."
KeyboardFocusManager,getCurrentKeyboardFocusManager(),static KeyboardFocusManager,Returns the current KeyboardFocusManager instance for the calling thread's context.
KeyboardFocusManager,getDefaultFocusTraversalKeys(int id),Set<AWTKeyStroke>,Returns a Set of default focus traversal keys for a given traversal operation.
KeyboardFocusManager,getDefaultFocusTraversalPolicy(),FocusTraversalPolicy,Returns the default FocusTraversalPolicy.
KeyboardFocusManager,getFocusedWindow(),Window,"Returns the focused Window, if the focused Window is in the same context as the calling thread."
KeyboardFocusManager,getFocusOwner(),Component,"Returns the focus owner, if the focus owner is in the same context as the calling thread."
KeyboardFocusManager,getGlobalActiveWindow(),protected Window,"Returns the active Window, even if the calling thread is in a different context than the active Window."
KeyboardFocusManager,getGlobalCurrentFocusCycleRoot(),protected Container,"Returns the current focus cycle root, even if the calling thread is in a different context than the current focus cycle root."
KeyboardFocusManager,getGlobalFocusedWindow(),protected Window,"Returns the focused Window, even if the calling thread is in a different context than the focused Window."
KeyboardFocusManager,getGlobalFocusOwner(),protected Component,"Returns the focus owner, even if the calling thread is in a different context than the focus owner."
KeyboardFocusManager,getGlobalPermanentFocusOwner(),protected Component,"Returns the permanent focus owner, even if the calling thread is in a different context than the permanent focus owner."
KeyboardFocusManager,getKeyEventDispatchers(),protected List<KeyEventDispatcher>,Returns this KeyboardFocusManager's KeyEventDispatcher chain as a List.
KeyboardFocusManager,getKeyEventPostProcessors(),protected List<KeyEventPostProcessor>,Returns this KeyboardFocusManager's KeyEventPostProcessor chain as a List.
KeyboardFocusManager,getPermanentFocusOwner(),Component,"Returns the permanent focus owner, if the permanent focus owner is in the same context as the calling thread."
KeyboardFocusManager,getPropertyChangeListeners(),PropertyChangeListener[],Returns an array of all the property change listeners registered on this keyboard focus manager.
KeyboardFocusManager,getPropertyChangeListeners(String propertyName),PropertyChangeListener[],Returns an array of all the PropertyChangeListeners associated with the named property.
KeyboardFocusManager,getVetoableChangeListeners(),VetoableChangeListener[],Returns an array of all the vetoable change listeners registered on this keyboard focus manager.
KeyboardFocusManager,getVetoableChangeListeners(String propertyName),VetoableChangeListener[],Returns an array of all the VetoableChangeListeners associated with the named property.
KeyboardFocusManager,postProcessKeyEvent(KeyEvent e),abstract boolean,This method will be called by dispatchKeyEvent.
KeyboardFocusManager,"processKeyEvent(Component focusedComponent, KeyEvent e)",abstract void,This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent.
KeyboardFocusManager,"redispatchEvent(Component target, AWTEvent e)",void,"Redispatches an AWTEvent in such a way that the AWT event dispatcher will not recursively request that the KeyboardFocusManager, or any installed KeyEventDispatchers, dispatch the event again."
KeyboardFocusManager,removeKeyEventDispatcher(KeyEventDispatcher dispatcher),void,Removes a KeyEventDispatcher which was previously added to this KeyboardFocusManager's dispatcher chain.
KeyboardFocusManager,removeKeyEventPostProcessor(KeyEventPostProcessor processor),void,Removes a previously added KeyEventPostProcessor from this KeyboardFocusManager's post-processor chain.
KeyboardFocusManager,removePropertyChangeListener(PropertyChangeListener listener),void,Removes a PropertyChangeListener from the listener list.
KeyboardFocusManager,"removePropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Removes a PropertyChangeListener from the listener list for a specific property.
KeyboardFocusManager,"removeVetoableChangeListener(String propertyName, VetoableChangeListener listener)",void,Removes a VetoableChangeListener from the listener list for a specific property.
KeyboardFocusManager,removeVetoableChangeListener(VetoableChangeListener listener),void,Removes a VetoableChangeListener from the listener list.
KeyboardFocusManager,setCurrentKeyboardFocusManager(KeyboardFocusManager newManager),static void,Sets the current KeyboardFocusManager instance for the calling thread's context.
KeyboardFocusManager,"setDefaultFocusTraversalKeys(int id, Set<? extends AWTKeyStroke> keystrokes)",void,Sets the default focus traversal keys for a given traversal operation.
KeyboardFocusManager,setDefaultFocusTraversalPolicy(FocusTraversalPolicy defaultPolicy),void,Sets the default FocusTraversalPolicy.
KeyboardFocusManager,setGlobalActiveWindow(Window activeWindow),protected void,Sets the active Window.
KeyboardFocusManager,setGlobalCurrentFocusCycleRoot(Container newFocusCycleRoot),void,Sets the current focus cycle root.
KeyboardFocusManager,setGlobalFocusedWindow(Window focusedWindow),protected void,Sets the focused Window.
KeyboardFocusManager,setGlobalFocusOwner(Component focusOwner),protected void,Sets the focus owner.
KeyboardFocusManager,setGlobalPermanentFocusOwner(Component permanentFocusOwner),protected void,Sets the permanent focus owner.
KeyboardFocusManager,upFocusCycle(),void,Moves the focus up one focus traversal cycle from the current focus owner.
KeyboardFocusManager,upFocusCycle(Component aComponent),abstract void,Moves the focus up one focus traversal cycle.
Label,addNotify(),void,Creates the peer for this label.
Label,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Label.
Label,getAlignment(),int,Gets the current alignment of this label.
Label,getText(),String,Gets the text of this label.
Label,paramString(),protected String,Returns a string representing the state of this Label.
Label,setAlignment(int alignment),void,Sets the alignment for this label to the specified alignment.
Label,setText(String text),void,Sets the text for this label to the specified text.
LinearGradientPaint,"createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform transform, RenderingHints hints)",PaintContext,Creates and returns a PaintContext used to generate a linear color gradient pattern.
LinearGradientPaint,getEndPoint(),Point2D,Returns a copy of the end point of the gradient axis.
LinearGradientPaint,getStartPoint(),Point2D,Returns a copy of the start point of the gradient axis.
List,add(String item),void,Adds the specified item to the end of scrolling list.
List,"add(String item, int index)",void,Adds the specified item to the the scrolling list at the position indicated by the index.
List,addActionListener(ActionListener l),void,Adds the specified action listener to receive action events from this list.
List,addItem(String item),void,Deprecated. replaced by add(String).
List,"addItem(String item, int index)",void,"Deprecated. replaced by add(String, int)."
List,addItemListener(ItemListener l),void,Adds the specified item listener to receive item events from this list.
List,addNotify(),void,Creates the peer for the list.
List,allowsMultipleSelections(),boolean,"Deprecated. As of JDK version 1.1, replaced by isMultipleMode()."
List,clear(),void,"Deprecated. As of JDK version 1.1, replaced by removeAll()."
List,countItems(),int,"Deprecated. As of JDK version 1.1, replaced by getItemCount()."
List,delItem(int position),void,Deprecated. replaced by remove(String) and remove(int).
List,"delItems(int start, int end)",void,"Deprecated. As of JDK version 1.1, Not for public use in the future. This method is expected to be retained only as a package private method."
List,deselect(int index),void,Deselects the item at the specified index.
List,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this List.
List,getActionListeners(),ActionListener[],Returns an array of all the action listeners registered on this list.
List,getItem(int index),String,Gets the item associated with the specified index.
List,getItemCount(),int,Gets the number of items in the list.
List,getItemListeners(),ItemListener[],Returns an array of all the item listeners registered on this list.
List,getItems(),String[],Gets the items in the list.
List,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this List.
List,getMinimumSize(),Dimension,Determines the minimum size of this scrolling list.
List,getMinimumSize(int rows),Dimension,Gets the minimum dimensions for a list with the specified number of rows.
List,getPreferredSize(),Dimension,Gets the preferred size of this scrolling list.
List,getPreferredSize(int rows),Dimension,Gets the preferred dimensions for a list with the specified number of rows.
List,getRows(),int,Gets the number of visible lines in this list.
List,getSelectedIndex(),int,"Gets the index of the selected item on the list,"
List,getSelectedIndexes(),int[],Gets the selected indexes on the list.
List,getSelectedItem(),String,Gets the selected item on this scrolling list.
List,getSelectedItems(),String[],Gets the selected items on this scrolling list.
List,getSelectedObjects(),Object[],Gets the selected items on this scrolling list in an array of Objects.
List,getVisibleIndex(),int,Gets the index of the item that was last made visible by the method makeVisible.
List,isIndexSelected(int index),boolean,Determines if the specified item in this scrolling list is selected.
List,isMultipleMode(),boolean,Determines whether this list allows multiple selections.
List,isSelected(int index),boolean,"Deprecated. As of JDK version 1.1, replaced by isIndexSelected(int)."
List,makeVisible(int index),void,Makes the item at the specified index visible.
List,minimumSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize()."
List,minimumSize(int rows),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize(int)."
List,paramString(),protected String,Returns the parameter string representing the state of this scrolling list.
List,preferredSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize()."
List,preferredSize(int rows),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize(int)."
List,processActionEvent(ActionEvent e),protected void,Processes action events occurring on this component by dispatching them to any registered ActionListener objects.
List,processEvent(AWTEvent e),protected void,Processes events on this scrolling list.
List,processItemEvent(ItemEvent e),protected void,Processes item events occurring on this list by dispatching them to any registered ItemListener objects.
List,remove(int position),void,Removes the item at the specified position from this scrolling list.
List,remove(String item),void,Removes the first occurrence of an item from the list.
List,removeActionListener(ActionListener l),void,Removes the specified action listener so that it no longer receives action events from this list.
List,removeAll(),void,Removes all items from this list.
List,removeItemListener(ItemListener l),void,Removes the specified item listener so that it no longer receives item events from this list.
List,removeNotify(),void,Removes the peer for this list.
List,"replaceItem(String newValue, int index)",void,Replaces the item at the specified index in the scrolling list with the new string.
List,select(int index),void,Selects the item at the specified index in the scrolling list.
List,setMultipleMode(boolean b),void,Sets the flag that determines whether this list allows multiple selections.
List,setMultipleSelections(boolean b),void,"Deprecated. As of JDK version 1.1, replaced by setMultipleMode(boolean)."
MediaTracker,"addImage(Image image, int id)",void,Adds an image to the list of images being tracked by this media tracker.
MediaTracker,"addImage(Image image, int id, int w, int h)",void,Adds a scaled image to the list of images being tracked by this media tracker.
MediaTracker,checkAll(),boolean,Checks to see if all images being tracked by this media tracker have finished loading.
MediaTracker,checkAll(boolean load),boolean,Checks to see if all images being tracked by this media tracker have finished loading.
MediaTracker,checkID(int id),boolean,Checks to see if all images tracked by this media tracker that are tagged with the specified identifier have finished loading.
MediaTracker,"checkID(int id, boolean load)",boolean,Checks to see if all images tracked by this media tracker that are tagged with the specified identifier have finished loading.
MediaTracker,getErrorsAny(),Object[],Returns a list of all media that have encountered an error.
MediaTracker,getErrorsID(int id),Object[],Returns a list of media with the specified ID that have encountered an error.
MediaTracker,isErrorAny(),boolean,Checks the error status of all of the images.
MediaTracker,isErrorID(int id),boolean,Checks the error status of all of the images tracked by this media tracker with the specified identifier.
MediaTracker,removeImage(Image image),void,Removes the specified image from this media tracker.
MediaTracker,"removeImage(Image image, int id)",void,Removes the specified image from the specified tracking ID of this media tracker.
MediaTracker,"removeImage(Image image, int id, int width, int height)",void,"Removes the specified image with the specified width, height, and ID from this media tracker."
MediaTracker,statusAll(boolean load),int,Calculates and returns the bitwise inclusive OR of the status of all media that are tracked by this media tracker.
MediaTracker,"statusID(int id, boolean load)",int,Calculates and returns the bitwise inclusive OR of the status of all media with the specified identifier that are tracked by this media tracker.
MediaTracker,waitForAll(),void,Starts loading all images tracked by this media tracker.
MediaTracker,waitForAll(long ms),boolean,Starts loading all images tracked by this media tracker.
MediaTracker,waitForID(int id),void,Starts loading all images tracked by this media tracker with the specified identifier.
MediaTracker,"waitForID(int id, long ms)",boolean,Starts loading all images tracked by this media tracker with the specified identifier.
Menu,add(MenuItem mi),MenuItem,Adds the specified menu item to this menu.
Menu,add(String label),void,Adds an item with the specified label to this menu.
Menu,addNotify(),void,Creates the menu's peer.
Menu,addSeparator(),void,"Adds a separator line, or a hypen, to the menu at the current position."
Menu,countItems(),int,"Deprecated. As of JDK version 1.1, replaced by getItemCount()."
Menu,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Menu.
Menu,getItem(int index),MenuItem,Gets the item located at the specified index of this menu.
Menu,getItemCount(),int,Get the number of items in this menu.
Menu,"insert(MenuItem menuitem, int index)",void,Inserts a menu item into this menu at the specified position.
Menu,"insert(String label, int index)",void,Inserts a menu item with the specified label into this menu at the specified position.
Menu,insertSeparator(int index),void,Inserts a separator at the specified position.
Menu,isTearOff(),boolean,Indicates whether this menu is a tear-off menu.
Menu,paramString(),String,Returns a string representing the state of this Menu.
Menu,remove(int index),void,Removes the menu item at the specified index from this menu.
Menu,remove(MenuComponent item),void,Removes the specified menu item from this menu.
Menu,removeAll(),void,Removes all items from this menu.
Menu,removeNotify(),void,Removes the menu's peer.
MenuBar,add(Menu m),Menu,Adds the specified menu to the menu bar.
MenuBar,addNotify(),void,Creates the menu bar's peer.
MenuBar,countMenus(),int,"Deprecated. As of JDK version 1.1, replaced by getMenuCount()."
MenuBar,deleteShortcut(MenuShortcut s),void,Deletes the specified menu shortcut.
MenuBar,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this MenuBar.
MenuBar,getHelpMenu(),Menu,Gets the help menu on the menu bar.
MenuBar,getMenu(int i),Menu,Gets the specified menu.
MenuBar,getMenuCount(),int,Gets the number of menus on the menu bar.
MenuBar,getShortcutMenuItem(MenuShortcut s),MenuItem,"Gets the instance of MenuItem associated with the specified MenuShortcut object, or null if none of the menu items being managed by this menu bar is associated with the specified menu shortcut."
MenuBar,remove(int index),void,Removes the menu located at the specified index from this menu bar.
MenuBar,remove(MenuComponent m),void,Removes the specified menu component from this menu bar.
MenuBar,removeNotify(),void,Removes the menu bar's peer.
MenuBar,setHelpMenu(Menu m),void,Sets the specified menu to be this menu bar's help menu.
MenuBar,shortcuts(),Enumeration<MenuShortcut>,Gets an enumeration of all menu shortcuts this menu bar is managing.
MenuComponent,dispatchEvent(AWTEvent e),void,Delivers an event to this component or one of its sub components.
MenuComponent,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this MenuComponent.
MenuComponent,getFont(),Font,Gets the font used for this menu component.
MenuComponent,getName(),String,Gets the name of the menu component.
MenuComponent,getParent(),MenuContainer,Returns the parent container for this menu component.
MenuComponent,getPeer(),java.awt.peer.MenuComponentPeer,"Deprecated. As of JDK version 1.1, programs should not directly manipulate peers."
MenuComponent,getTreeLock(),protected Object,Gets this component's locking object (the object that owns the thread synchronization monitor) for AWT component-tree and layout operations.
MenuComponent,paramString(),protected String,Returns a string representing the state of this MenuComponent.
MenuComponent,postEvent(Event evt),boolean,"Deprecated. As of JDK version 1.1, replaced by dispatchEvent."
MenuComponent,processEvent(AWTEvent e),protected void,Processes events occurring on this menu component.
MenuComponent,removeNotify(),void,Removes the menu component's peer.
MenuComponent,setFont(Font f),void,Sets the font to be used for this menu component to the specified font.
MenuComponent,setName(String name),void,Sets the name of the component to the specified string.
MenuComponent,toString(),String,Returns a representation of this menu component as a string.
MenuItem,addActionListener(ActionListener l),void,Adds the specified action listener to receive action events from this menu item.
MenuItem,addNotify(),void,Creates the menu item's peer.
MenuItem,deleteShortcut(),void,Delete any MenuShortcut object associated with this menu item.
MenuItem,disable(),void,"Deprecated. As of JDK version 1.1, replaced by setEnabled(boolean)."
MenuItem,disableEvents(long eventsToDisable),protected void,Disables event delivery to this menu item for events defined by the specified event mask parameter.
MenuItem,enable(),void,"Deprecated. As of JDK version 1.1, replaced by setEnabled(boolean)."
MenuItem,enable(boolean b),void,"Deprecated. As of JDK version 1.1, replaced by setEnabled(boolean)."
MenuItem,enableEvents(long eventsToEnable),protected void,Enables event delivery to this menu item for events to be defined by the specified event mask parameter
MenuItem,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this MenuItem.
MenuItem,getActionCommand(),String,Gets the command name of the action event that is fired by this menu item.
MenuItem,getActionListeners(),ActionListener[],Returns an array of all the action listeners registered on this menu item.
MenuItem,getLabel(),String,Gets the label for this menu item.
MenuItem,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this MenuItem.
MenuItem,getShortcut(),MenuShortcut,"Get the MenuShortcut object associated with this menu item,"
MenuItem,isEnabled(),boolean,Checks whether this menu item is enabled.
MenuItem,paramString(),String,Returns a string representing the state of this MenuItem.
MenuItem,processActionEvent(ActionEvent e),protected void,"Processes action events occurring on this menu item, by dispatching them to any registered ActionListener objects."
MenuItem,processEvent(AWTEvent e),protected void,Processes events on this menu item.
MenuItem,removeActionListener(ActionListener l),void,Removes the specified action listener so it no longer receives action events from this menu item.
MenuItem,setActionCommand(String command),void,Sets the command name of the action event that is fired by this menu item.
MenuItem,setEnabled(boolean b),void,Sets whether or not this menu item can be chosen.
MenuItem,setLabel(String label),void,Sets the label for this menu item to the specified label.
MenuItem,setShortcut(MenuShortcut s),void,Set the MenuShortcut object associated with this menu item.
MenuShortcut,equals(MenuShortcut s),boolean,Returns whether this MenuShortcut is the same as another: equality is defined to mean that both MenuShortcuts use the same key and both either use or don't use the SHIFT key.
MenuShortcut,equals(Object obj),boolean,Returns whether this MenuShortcut is the same as another: equality is defined to mean that both MenuShortcuts use the same key and both either use or don't use the SHIFT key.
MenuShortcut,getKey(),int,Returns the raw keycode of this MenuShortcut.
MenuShortcut,hashCode(),int,Returns the hashcode for this MenuShortcut.
MenuShortcut,paramString(),protected String,Returns the parameter string representing the state of this MenuShortcut.
MenuShortcut,toString(),String,Returns an internationalized description of the MenuShortcut.
MenuShortcut,usesShiftModifier(),boolean,Returns whether this MenuShortcut must be invoked using the SHIFT key.
MouseInfo,getNumberOfButtons(),static int,Returns the number of buttons on the mouse.
MouseInfo,getPointerInfo(),static PointerInfo,Returns a PointerInfo instance that represents the current location of the mouse pointer.
MultipleGradientPaint,getColors(),Color[],Returns a copy of the array of colors used by this gradient.
MultipleGradientPaint,getColorSpace(),MultipleGradientPaint.ColorSpaceType,Returns the enumerated type which specifies color space for interpolation.
MultipleGradientPaint,getCycleMethod(),MultipleGradientPaint.CycleMethod,Returns the enumerated type which specifies cycling behavior.
MultipleGradientPaint,getFractions(),float[],Returns a copy of the array of floats used by this gradient to calculate color distribution.
MultipleGradientPaint,getTransform(),AffineTransform,Returns a copy of the transform applied to the gradient.
MultipleGradientPaint,getTransparency(),int,Returns the transparency mode for this Paint object.
PageAttributes,clone(),Object,Creates and returns a copy of this PageAttributes.
PageAttributes,equals(Object obj),boolean,Determines whether two PageAttributes are equal to each other.
PageAttributes,getColor(),PageAttributes.ColorType,Returns whether pages using these attributes will be rendered in color or monochrome.
PageAttributes,getMedia(),PageAttributes.MediaType,Returns the paper size for pages using these attributes.
PageAttributes,getOrientationRequested(),PageAttributes.OrientationRequestedType,Returns the print orientation for pages using these attributes.
PageAttributes,getOrigin(),PageAttributes.OriginType,"Returns whether drawing at (0, 0) to pages using these attributes draws at the upper-left corner of the physical page, or at the upper-left corner of the printable area."
PageAttributes,getPrinterResolution(),int[],Returns the print resolution for pages using these attributes.
PageAttributes,getPrintQuality(),PageAttributes.PrintQualityType,Returns the print quality for pages using these attributes.
PageAttributes,hashCode(),int,Returns a hash code value for this PageAttributes.
PageAttributes,set(PageAttributes obj),void,Sets all of the attributes of this PageAttributes to the same values as the attributes of obj.
PageAttributes,setColor(PageAttributes.ColorType color),void,Specifies whether pages using these attributes will be rendered in color or monochrome.
PageAttributes,setMedia(PageAttributes.MediaType media),void,Specifies the desired paper size for pages using these attributes.
PageAttributes,setMediaToDefault(),void,Sets the paper size for pages using these attributes to the default size for the default locale.
PageAttributes,setOrientationRequested(int orientationRequested),void,Specifies the print orientation for pages using these attributes.
PageAttributes,setOrientationRequested(PageAttributes.OrientationRequestedType orientationRequested),void,Specifies the print orientation for pages using these attributes.
PageAttributes,setOrientationRequestedToDefault(),void,Sets the print orientation for pages using these attributes to the default.
PageAttributes,setOrigin(PageAttributes.OriginType origin),void,"Specifies whether drawing at (0, 0) to pages using these attributes draws at the upper-left corner of the physical page, or at the upper-left corner of the printable area."
PageAttributes,setPrinterResolution(int printerResolution),void,Specifies the desired cross feed and feed print resolutions in dots per inch for pages using these attributes.
PageAttributes,setPrinterResolution(int[] printerResolution),void,Specifies the desired print resolution for pages using these attributes.
PageAttributes,setPrinterResolutionToDefault(),void,Sets the printer resolution for pages using these attributes to the default.
PageAttributes,setPrintQuality(int printQuality),void,Specifies the print quality for pages using these attributes.
PageAttributes,setPrintQuality(PageAttributes.PrintQualityType printQuality),void,Specifies the print quality for pages using these attributes.
PageAttributes,setPrintQualityToDefault(),void,Sets the print quality for pages using these attributes to the default.
PageAttributes,toString(),String,Returns a string representation of this PageAttributes.
PageAttributes.ColorType,hashCode(),int,Returns a hash code value for the object.
PageAttributes.ColorType,toString(),String,Returns a string representation of the object.
PageAttributes.MediaType,hashCode(),int,Returns a hash code value for the object.
PageAttributes.MediaType,toString(),String,Returns a string representation of the object.
PageAttributes.OrientationRequestedType,hashCode(),int,Returns a hash code value for the object.
PageAttributes.OrientationRequestedType,toString(),String,Returns a string representation of the object.
PageAttributes.OriginType,hashCode(),int,Returns a hash code value for the object.
PageAttributes.OriginType,toString(),String,Returns a string representation of the object.
PageAttributes.PrintQualityType,hashCode(),int,Returns a hash code value for the object.
PageAttributes.PrintQualityType,toString(),String,Returns a string representation of the object.
Panel,addNotify(),void,Creates the Panel's peer.
Panel,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Panel.
Point,equals(Object obj),boolean,Determines whether or not two points are equal.
Point,getLocation(),Point,Returns the location of this point.
Point,getX(),double,Returns the X coordinate of this Point2D in double precision.
Point,getY(),double,Returns the Y coordinate of this Point2D in double precision.
Point,"move(int x, int y)",void,"Moves this point to the specified location in the (x,y) coordinate plane."
Point,"setLocation(double x, double y)",void,Sets the location of this point to the specified double coordinates.
Point,"setLocation(int x, int y)",void,Changes the point to have the specified location.
Point,setLocation(Point p),void,Sets the location of the point to the specified location.
Point,toString(),String,"Returns a string representation of this point and its location in the (x,y) coordinate space."
Point,"translate(int dx, int dy)",void,"Translates this point, at location (x,y), by dx along the x axis and dy along the y axis so that it now represents the point (x+dx,y+dy)."
PointerInfo,getDevice(),GraphicsDevice,Returns the GraphicsDevice where the mouse pointer was at the moment this PointerInfo was created.
PointerInfo,getLocation(),Point,Returns the Point that represents the coordinates of the pointer on the screen.
Polygon,"addPoint(int x, int y)",void,Appends the specified coordinates to this Polygon.
Polygon,"contains(double x, double y)",boolean,"Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness."
Polygon,"contains(double x, double y, double w, double h)",boolean,Tests if the interior of the Shape entirely contains the specified rectangular area.
Polygon,"contains(int x, int y)",boolean,Determines whether the specified coordinates are inside this Polygon.
Polygon,contains(Point p),boolean,Determines whether the specified Point is inside this Polygon.
Polygon,contains(Point2D p),boolean,"Tests if a specified Point2D is inside the boundary of the Shape, as described by the definition of insideness."
Polygon,contains(Rectangle2D r),boolean,Tests if the interior of the Shape entirely contains the specified Rectangle2D.
Polygon,getBoundingBox(),Rectangle,"Deprecated. As of JDK version 1.1, replaced by getBounds()."
Polygon,getBounds(),Rectangle,Gets the bounding box of this Polygon.
Polygon,getBounds2D(),Rectangle2D,Returns a high precision and more accurate bounding box of the Shape than the getBounds method.
Polygon,getPathIterator(AffineTransform at),PathIterator,Returns an iterator object that iterates along the boundary of this Polygon and provides access to the geometry of the outline of this Polygon.
Polygon,"getPathIterator(AffineTransform at, double flatness)",PathIterator,Returns an iterator object that iterates along the boundary of the Shape and provides access to the geometry of the outline of the Shape.
Polygon,"inside(int x, int y)",boolean,"Deprecated. As of JDK version 1.1, replaced by contains(int, int)."
Polygon,"intersects(double x, double y, double w, double h)",boolean,Tests if the interior of the Shape intersects the interior of a specified rectangular area.
Polygon,intersects(Rectangle2D r),boolean,Tests if the interior of the Shape intersects the interior of a specified Rectangle2D.
Polygon,invalidate(),void,Invalidates or flushes any internally-cached data that depends on the vertex coordinates of this Polygon.
Polygon,reset(),void,Resets this Polygon object to an empty polygon.
Polygon,"translate(int deltaX, int deltaY)",void,Translates the vertices of the Polygon by deltaX along the x axis and by deltaY along the y axis.
PopupMenu,addNotify(),void,Creates the popup menu's peer.
PopupMenu,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this PopupMenu.
PopupMenu,getParent(),MenuContainer,Returns the parent container for this menu component.
PopupMenu,"show(Component origin, int x, int y)",void,"Shows the popup menu at the x, y position relative to an origin component."
PrintJob,end(),abstract void,Ends the print job and does any necessary cleanup.
PrintJob,finalize(),void,Ends this print job once it is no longer referenced.
PrintJob,getGraphics(),abstract Graphics,Gets a Graphics object that will draw to the next page.
PrintJob,getPageDimension(),abstract Dimension,Returns the dimensions of the page in pixels.
PrintJob,getPageResolution(),abstract int,Returns the resolution of the page in pixels per inch.
PrintJob,lastPageFirst(),abstract boolean,Returns true if the last page will be printed first.
RadialGradientPaint,"createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform transform, RenderingHints hints)",PaintContext,Creates and returns a PaintContext used to generate a circular radial color gradient pattern.
RadialGradientPaint,getCenterPoint(),Point2D,Returns a copy of the center point of the radial gradient.
RadialGradientPaint,getFocusPoint(),Point2D,Returns a copy of the focus point of the radial gradient.
RadialGradientPaint,getRadius(),float,Returns the radius of the circle defining the radial gradient.
Rectangle,"add(int newx, int newy)",void,"Adds a point, specified by the integer arguments newx,newy to the bounds of this Rectangle."
Rectangle,add(Point pt),void,Adds the specified Point to the bounds of this Rectangle.
Rectangle,add(Rectangle r),void,Adds a Rectangle to this Rectangle.
Rectangle,"contains(int x, int y)",boolean,"Checks whether or not this Rectangle contains the point at the specified location (x,y)."
Rectangle,"contains(int X, int Y, int W, int H)",boolean,"Checks whether this Rectangle entirely contains the Rectangle at the specified location (X,Y) with the specified dimensions (W,H)."
Rectangle,contains(Point p),boolean,Checks whether or not this Rectangle contains the specified Point.
Rectangle,contains(Rectangle r),boolean,Checks whether or not this Rectangle entirely contains the specified Rectangle.
Rectangle,createIntersection(Rectangle2D r),Rectangle2D,Returns a new Rectangle2D object representing the intersection of this Rectangle2D with the specified Rectangle2D.
Rectangle,createUnion(Rectangle2D r),Rectangle2D,Returns a new Rectangle2D object representing the union of this Rectangle2D with the specified Rectangle2D.
Rectangle,equals(Object obj),boolean,Checks whether two rectangles are equal.
Rectangle,getBounds(),Rectangle,Gets the bounding Rectangle of this Rectangle.
Rectangle,getBounds2D(),Rectangle2D,Returns a high precision and more accurate bounding box of the Shape than the getBounds method.
Rectangle,getHeight(),double,Returns the height of the bounding Rectangle in double precision.
Rectangle,getLocation(),Point,Returns the location of this Rectangle.
Rectangle,getSize(),Dimension,"Gets the size of this Rectangle, represented by the returned Dimension."
Rectangle,getWidth(),double,Returns the width of the bounding Rectangle in double precision.
Rectangle,getX(),double,Returns the X coordinate of the bounding Rectangle in double precision.
Rectangle,getY(),double,Returns the Y coordinate of the bounding Rectangle in double precision.
Rectangle,"grow(int h, int v)",void,Resizes the Rectangle both horizontally and vertically.
Rectangle,"inside(int X, int Y)",boolean,"Deprecated. As of JDK version 1.1, replaced by contains(int, int)."
Rectangle,intersection(Rectangle r),Rectangle,Computes the intersection of this Rectangle with the specified Rectangle.
Rectangle,intersects(Rectangle r),boolean,Determines whether or not this Rectangle and the specified Rectangle intersect.
Rectangle,isEmpty(),boolean,Determines whether the RectangularShape is empty.
Rectangle,"move(int x, int y)",void,"Deprecated. As of JDK version 1.1, replaced by setLocation(int, int)."
Rectangle,"outcode(double x, double y)",int,Determines where the specified coordinates lie with respect to this Rectangle2D.
Rectangle,"reshape(int x, int y, int width, int height)",void,"Deprecated. As of JDK version 1.1, replaced by setBounds(int, int, int, int)."
Rectangle,"resize(int width, int height)",void,"Deprecated. As of JDK version 1.1, replaced by setSize(int, int)."
Rectangle,"setBounds(int x, int y, int width, int height)",void,"Sets the bounding Rectangle of this Rectangle to the specified x, y, width, and height."
Rectangle,setBounds(Rectangle r),void,Sets the bounding Rectangle of this Rectangle to match the specified Rectangle.
Rectangle,"setLocation(int x, int y)",void,Moves this Rectangle to the specified location.
Rectangle,setLocation(Point p),void,Moves this Rectangle to the specified location.
Rectangle,"setRect(double x, double y, double width, double height)",void,"Sets the bounds of this Rectangle to the integer bounds which encompass the specified x, y, width, and height."
Rectangle,setSize(Dimension d),void,Sets the size of this Rectangle to match the specified Dimension.
Rectangle,"setSize(int width, int height)",void,Sets the size of this Rectangle to the specified width and height.
Rectangle,toString(),String,Returns a String representing this Rectangle and its values.
Rectangle,"translate(int dx, int dy)",void,"Translates this Rectangle the indicated distance, to the right along the X coordinate axis, and downward along the Y coordinate axis."
Rectangle,union(Rectangle r),Rectangle,Computes the union of this Rectangle with the specified Rectangle.
RenderingHints,add(RenderingHints hints),void,Adds all of the keys and corresponding values from the specified RenderingHints object to this RenderingHints object.
RenderingHints,clear(),void,Clears this RenderingHints object of all key/value pairs.
RenderingHints,clone(),Object,Creates a clone of this RenderingHints object that has the same contents as this RenderingHints object.
RenderingHints,containsKey(Object key),boolean,Returns true if this RenderingHints contains a mapping for the specified key.
RenderingHints,containsValue(Object value),boolean,Returns true if this RenderingHints maps one or more keys to the specified value.
RenderingHints,entrySet(),"Set<Map.Entry<Object,Object>>",Returns a Set view of the mappings contained in this RenderingHints.
RenderingHints,equals(Object o),boolean,Compares the specified Object with this RenderingHints for equality.
RenderingHints,get(Object key),Object,Returns the value to which the specified key is mapped.
RenderingHints,hashCode(),int,Returns the hash code value for this RenderingHints.
RenderingHints,isEmpty(),boolean,Returns true if this RenderingHints contains no key-value mappings.
RenderingHints,keySet(),Set<Object>,Returns a Set view of the Keys contained in this RenderingHints.
RenderingHints,"put(Object key, Object value)",Object,Maps the specified key to the specified value in this RenderingHints object.
RenderingHints,"putAll(Map<?,?> m)",void,Copies all of the mappings from the specified Map to this RenderingHints.
RenderingHints,remove(Object key),Object,Removes the key and its corresponding value from this RenderingHints object.
RenderingHints,size(),int,Returns the number of key-value mappings in this RenderingHints.
RenderingHints,toString(),String,Returns a rather long string representation of the hashmap which contains the mappings of keys to values for this RenderingHints object.
RenderingHints,values(),Collection<Object>,Returns a Collection view of the values contained in this RenderinHints.
RenderingHints.Key,equals(Object o),boolean,The equals method for all Key objects will return the same result as the equality operator '=='.
RenderingHints.Key,hashCode(),int,The hash code for all Key objects will be the same as the system identity code of the object as defined by the System.identityHashCode() method.
RenderingHints.Key,intKey(),protected int,Returns the private integer key that the subclass instantiated this Key with.
RenderingHints.Key,isCompatibleValue(Object val),abstract boolean,Returns true if the specified object is a valid value for this Key.
Robot,createScreenCapture(Rectangle screenRect),BufferedImage,Creates an image containing pixels read from the screen.
Robot,delay(int ms),void,Sleeps for the specified time.
Robot,getAutoDelay(),int,Returns the number of milliseconds this Robot sleeps after generating an event.
Robot,"getPixelColor(int x, int y)",Color,Returns the color of a pixel at the given screen coordinates.
Robot,isAutoWaitForIdle(),boolean,Returns whether this Robot automatically invokes waitForIdle after generating an event.
Robot,keyPress(int keycode),void,Presses a given key.
Robot,keyRelease(int keycode),void,Releases a given key.
Robot,"mouseMove(int x, int y)",void,Moves mouse pointer to given screen coordinates.
Robot,mousePress(int buttons),void,Presses one or more mouse buttons.
Robot,mouseRelease(int buttons),void,Releases one or more mouse buttons.
Robot,mouseWheel(int wheelAmt),void,Rotates the scroll wheel on wheel-equipped mice.
Robot,setAutoDelay(int ms),void,Sets the number of milliseconds this Robot sleeps after generating an event.
Robot,setAutoWaitForIdle(boolean isOn),void,Sets whether this Robot automatically invokes waitForIdle after generating an event.
Robot,toString(),String,Returns a string representation of this Robot.
Robot,waitForIdle(),void,Waits until all events currently on the event queue have been processed.
Scrollbar,addAdjustmentListener(AdjustmentListener l),void,Adds the specified adjustment listener to receive instances of AdjustmentEvent from this scroll bar.
Scrollbar,addNotify(),void,Creates the Scrollbar's peer.
Scrollbar,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Scrollbar.
Scrollbar,getAdjustmentListeners(),AdjustmentListener[],Returns an array of all the adjustment listeners registered on this scrollbar.
Scrollbar,getBlockIncrement(),int,Gets the block increment of this scroll bar.
Scrollbar,getLineIncrement(),int,"Deprecated. As of JDK version 1.1, replaced by getUnitIncrement()."
Scrollbar,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Scrollbar.
Scrollbar,getMaximum(),int,Gets the maximum value of this scroll bar.
Scrollbar,getMinimum(),int,Gets the minimum value of this scroll bar.
Scrollbar,getOrientation(),int,Returns the orientation of this scroll bar.
Scrollbar,getPageIncrement(),int,"Deprecated. As of JDK version 1.1, replaced by getBlockIncrement()."
Scrollbar,getUnitIncrement(),int,Gets the unit increment for this scrollbar.
Scrollbar,getValue(),int,Gets the current value of this scroll bar.
Scrollbar,getValueIsAdjusting(),boolean,Returns true if the value is in the process of changing as a result of actions being taken by the user.
Scrollbar,getVisible(),int,"Deprecated. As of JDK version 1.1, replaced by getVisibleAmount()."
Scrollbar,getVisibleAmount(),int,Gets the visible amount of this scroll bar.
Scrollbar,paramString(),protected String,Returns a string representing the state of this Scrollbar.
Scrollbar,processAdjustmentEvent(AdjustmentEvent e),protected void,Processes adjustment events occurring on this scrollbar by dispatching them to any registered AdjustmentListener objects.
Scrollbar,processEvent(AWTEvent e),protected void,Processes events on this scroll bar.
Scrollbar,removeAdjustmentListener(AdjustmentListener l),void,Removes the specified adjustment listener so that it no longer receives instances of AdjustmentEvent from this scroll bar.
Scrollbar,setBlockIncrement(int v),void,Sets the block increment for this scroll bar.
Scrollbar,setLineIncrement(int v),void,"Deprecated. As of JDK version 1.1, replaced by setUnitIncrement(int)."
Scrollbar,setMaximum(int newMaximum),void,Sets the maximum value of this scroll bar.
Scrollbar,setMinimum(int newMinimum),void,Sets the minimum value of this scroll bar.
Scrollbar,setOrientation(int orientation),void,Sets the orientation for this scroll bar.
Scrollbar,setPageIncrement(int v),void,"Deprecated. As of JDK version 1.1, replaced by setBlockIncrement()."
Scrollbar,setUnitIncrement(int v),void,Sets the unit increment for this scroll bar.
Scrollbar,setValue(int newValue),void,Sets the value of this scroll bar to the specified value.
Scrollbar,setValueIsAdjusting(boolean b),void,Sets the valueIsAdjusting property.
Scrollbar,"setValues(int value, int visible, int minimum, int maximum)",void,"Sets the values of four properties for this scroll bar: value, visibleAmount, minimum, and maximum."
Scrollbar,setVisibleAmount(int newAmount),void,Sets the visible amount of this scroll bar.
ScrollPane,"addImpl(Component comp, Object constraints, int index)",protected void,Adds the specified component to this scroll pane container.
ScrollPane,addNotify(),void,Creates the scroll pane's peer.
ScrollPane,doLayout(),void,Lays out this container by resizing its child to its preferred size.
ScrollPane,eventTypeEnabled(int type),protected boolean,"If wheel scrolling is enabled, we return true for MouseWheelEvents"
ScrollPane,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this ScrollPane.
ScrollPane,getHAdjustable(),Adjustable,Returns the ScrollPaneAdjustable object which represents the state of the horizontal scrollbar.
ScrollPane,getHScrollbarHeight(),int,"Returns the height that would be occupied by a horizontal scrollbar, which is independent of whether it is currently displayed by the scroll pane or not."
ScrollPane,getScrollbarDisplayPolicy(),int,Returns the display policy for the scrollbars.
ScrollPane,getScrollPosition(),Point,"Returns the current x,y position within the child which is displayed at the 0,0 location of the scrolled panel's view port."
ScrollPane,getVAdjustable(),Adjustable,Returns the ScrollPaneAdjustable object which represents the state of the vertical scrollbar.
ScrollPane,getViewportSize(),Dimension,Returns the current size of the scroll pane's view port.
ScrollPane,getVScrollbarWidth(),int,"Returns the width that would be occupied by a vertical scrollbar, which is independent of whether it is currently displayed by the scroll pane or not."
ScrollPane,isWheelScrollingEnabled(),boolean,Indicates whether or not scrolling will take place in response to the mouse wheel.
ScrollPane,layout(),void,"Deprecated. As of JDK version 1.1, replaced by doLayout()."
ScrollPane,paramString(),String,Returns a string representing the state of this ScrollPane.
ScrollPane,printComponents(Graphics g),void,Prints the component in this scroll pane.
ScrollPane,processMouseWheelEvent(MouseWheelEvent e),protected void,Process mouse wheel events that are delivered to this ScrollPane by scrolling an appropriate amount.
ScrollPane,setLayout(LayoutManager mgr),void,Sets the layout manager for this container.
ScrollPane,"setScrollPosition(int x, int y)",void,Scrolls to the specified position within the child component.
ScrollPane,setScrollPosition(Point p),void,Scrolls to the specified position within the child component.
ScrollPane,setWheelScrollingEnabled(boolean handleWheel),void,Enables/disables scrolling in response to movement of the mouse wheel.
ScrollPaneAdjustable,addAdjustmentListener(AdjustmentListener l),void,Adds the specified adjustment listener to receive adjustment events from this ScrollPaneAdjustable.
ScrollPaneAdjustable,getAdjustmentListeners(),AdjustmentListener[],Returns an array of all the adjustment listeners registered on this ScrollPaneAdjustable.
ScrollPaneAdjustable,getBlockIncrement(),int,Gets the block value increment for the adjustable object.
ScrollPaneAdjustable,getMaximum(),int,Gets the maximum value of the adjustable object.
ScrollPaneAdjustable,getMinimum(),int,Gets the minimum value of the adjustable object.
ScrollPaneAdjustable,getOrientation(),int,Returns the orientation of this scrollbar.
ScrollPaneAdjustable,getUnitIncrement(),int,Gets the unit value increment for the adjustable object.
ScrollPaneAdjustable,getValue(),int,Gets the current value of the adjustable object.
ScrollPaneAdjustable,getValueIsAdjusting(),boolean,Returns true if the value is in the process of changing as a result of actions being taken by the user.
ScrollPaneAdjustable,getVisibleAmount(),int,Gets the length of the proportional indicator.
ScrollPaneAdjustable,paramString(),String,Returns a string representing the state of this scrollbar.
ScrollPaneAdjustable,removeAdjustmentListener(AdjustmentListener l),void,Removes the specified adjustment listener so that it no longer receives adjustment events from this ScrollPaneAdjustable.
ScrollPaneAdjustable,setBlockIncrement(int b),void,Sets the block value increment for the adjustable object.
ScrollPaneAdjustable,setMaximum(int max),void,This method should NOT be called by user code.
ScrollPaneAdjustable,setMinimum(int min),void,This method should NOT be called by user code.
ScrollPaneAdjustable,setUnitIncrement(int u),void,Sets the unit value increment for the adjustable object.
ScrollPaneAdjustable,setValue(int v),void,Sets the value of this scrollbar to the specified value.
ScrollPaneAdjustable,setValueIsAdjusting(boolean b),void,Sets the valueIsAdjusting property.
ScrollPaneAdjustable,setVisibleAmount(int v),void,This method should NOT be called by user code.
ScrollPaneAdjustable,toString(),String,Returns a string representation of this scrollbar and its values.
SplashScreen,close(),void,"Hides the splash screen, closes the window, and releases all associated resources."
SplashScreen,createGraphics(),Graphics2D,"Creates a graphics context (as a Graphics2D object) for the splash screen overlay image, which allows you to draw over the splash screen."
SplashScreen,getBounds(),Rectangle,Returns the bounds of the splash screen window as a Rectangle.
SplashScreen,getImageURL(),URL,Returns the current splash screen image.
SplashScreen,getSize(),Dimension,Returns the size of the splash screen window as a Dimension.
SplashScreen,getSplashScreen(),static SplashScreen,Returns the SplashScreen object used for Java startup splash screen control on systems that support display.
SplashScreen,isVisible(),boolean,Determines whether the splash screen is visible.
SplashScreen,setImageURL(URL imageURL),void,Changes the splash screen image.
SplashScreen,update(),void,Updates the splash window with current contents of the overlay image.
SystemColor,toString(),String,Returns a string representation of this Color's values.
SystemTray,add(TrayIcon trayIcon),void,Adds a TrayIcon to the SystemTray.
SystemTray,"addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Adds a PropertyChangeListener to the list of listeners for the specific property.
SystemTray,getPropertyChangeListeners(String propertyName),PropertyChangeListener[],Returns an array of all the listeners that have been associated with the named property.
SystemTray,getSystemTray(),static SystemTray,Gets the SystemTray instance that represents the desktop's tray area.
SystemTray,getTrayIcons(),TrayIcon[],Returns an array of all icons added to the tray by this application.
SystemTray,getTrayIconSize(),Dimension,"Returns the size, in pixels, of the space that a tray icon will occupy in the system tray."
SystemTray,isSupported(),static boolean,Returns whether the system tray is supported on the current platform.
SystemTray,remove(TrayIcon trayIcon),void,Removes the specified TrayIcon from the SystemTray.
SystemTray,"removePropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Removes a PropertyChangeListener from the listener list for a specific property.
TextArea,addNotify(),void,Creates the TextArea's peer.
TextArea,append(String str),void,Appends the given text to the text area's current text.
TextArea,appendText(String str),void,"Deprecated. As of JDK version 1.1, replaced by append(String)."
TextArea,getAccessibleContext(),AccessibleContext,Returns the AccessibleContext associated with this TextArea.
TextArea,getColumns(),int,Returns the number of columns in this text area.
TextArea,getMinimumSize(),Dimension,Determines the minimum size of this text area.
TextArea,"getMinimumSize(int rows, int columns)",Dimension,Determines the minimum size of a text area with the specified number of rows and columns.
TextArea,getPreferredSize(),Dimension,Determines the preferred size of this text area.
TextArea,"getPreferredSize(int rows, int columns)",Dimension,Determines the preferred size of a text area with the specified number of rows and columns.
TextArea,getRows(),int,Returns the number of rows in the text area.
TextArea,getScrollbarVisibility(),int,Returns an enumerated value that indicates which scroll bars the text area uses.
TextArea,"insert(String str, int pos)",void,Inserts the specified text at the specified position in this text area.
TextArea,"insertText(String str, int pos)",void,"Deprecated. As of JDK version 1.1, replaced by insert(String, int)."
TextArea,minimumSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize()."
TextArea,"minimumSize(int rows, int columns)",Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize(int, int)."
TextArea,paramString(),protected String,Returns a string representing the state of this TextArea.
TextArea,preferredSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize()."
TextArea,"preferredSize(int rows, int columns)",Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize(int, int)."
TextArea,"replaceRange(String str, int start, int end)",void,Replaces text between the indicated start and end positions with the specified replacement text.
TextArea,"replaceText(String str, int start, int end)",void,"Deprecated. As of JDK version 1.1, replaced by replaceRange(String, int, int)."
TextArea,setColumns(int columns),void,Sets the number of columns for this text area.
TextArea,setRows(int rows),void,Sets the number of rows for this text area.
TextComponent,addNotify(),void,Makes this Component displayable by connecting it to a native screen resource.
TextComponent,addTextListener(TextListener l),void,Adds the specified text event listener to receive text events from this text component.
TextComponent,enableInputMethods(boolean enable),void,Enables or disables input method support for this text component.
TextComponent,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this TextComponent.
TextComponent,getBackground(),Color,Gets the background color of this text component.
TextComponent,getCaretPosition(),int,Returns the position of the text insertion caret.
TextComponent,getInputMethodRequests(),InputMethodRequests,Gets the input method request handler which supports requests from input methods for this component.
TextComponent,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this TextComponent.
TextComponent,getSelectedText(),String,Returns the selected text from the text that is presented by this text component.
TextComponent,getSelectionEnd(),int,Gets the end position of the selected text in this text component.
TextComponent,getSelectionStart(),int,Gets the start position of the selected text in this text component.
TextComponent,getText(),String,Returns the text that is presented by this text component.
TextComponent,getTextListeners(),TextListener[],Returns an array of all the text listeners registered on this text component.
TextComponent,isEditable(),boolean,Indicates whether or not this text component is editable.
TextComponent,paramString(),protected String,Returns a string representing the state of this TextComponent.
TextComponent,processEvent(AWTEvent e),protected void,Processes events on this text component.
TextComponent,processTextEvent(TextEvent e),protected void,Processes text events occurring on this text component by dispatching them to any registered TextListener objects.
TextComponent,removeNotify(),void,Removes the TextComponent's peer.
TextComponent,removeTextListener(TextListener l),void,"Removes the specified text event listener so that it no longer receives text events from this text component If l is null, no exception is thrown and no action is performed."
TextComponent,"select(int selectionStart, int selectionEnd)",void,Selects the text between the specified start and end positions.
TextComponent,selectAll(),void,Selects all the text in this text component.
TextComponent,setBackground(Color c),void,Sets the background color of this text component.
TextComponent,setCaretPosition(int position),void,Sets the position of the text insertion caret.
TextComponent,setEditable(boolean b),void,Sets the flag that determines whether or not this text component is editable.
TextComponent,setSelectionEnd(int selectionEnd),void,Sets the selection end for this text component to the specified position.
TextComponent,setSelectionStart(int selectionStart),void,Sets the selection start for this text component to the specified position.
TextComponent,setText(String t),void,Sets the text that is presented by this text component to be the specified text.
TextField,addActionListener(ActionListener l),void,Adds the specified action listener to receive action events from this text field.
TextField,addNotify(),void,Creates the TextField's peer.
TextField,echoCharIsSet(),boolean,Indicates whether or not this text field has a character set for echoing.
TextField,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this TextField.
TextField,getActionListeners(),ActionListener[],Returns an array of all the action listeners registered on this textfield.
TextField,getColumns(),int,Gets the number of columns in this text field.
TextField,getEchoChar(),char,Gets the character that is to be used for echoing.
TextField,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this TextField.
TextField,getMinimumSize(),Dimension,Gets the minimum dimensions for this text field.
TextField,getMinimumSize(int columns),Dimension,Gets the minimum dimensions for a text field with the specified number of columns.
TextField,getPreferredSize(),Dimension,Gets the preferred size of this text field.
TextField,getPreferredSize(int columns),Dimension,Gets the preferred size of this text field with the specified number of columns.
TextField,minimumSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize()."
TextField,minimumSize(int columns),Dimension,"Deprecated. As of JDK version 1.1, replaced by getMinimumSize(int)."
TextField,paramString(),protected String,Returns a string representing the state of this TextField.
TextField,preferredSize(),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize()."
TextField,preferredSize(int columns),Dimension,"Deprecated. As of JDK version 1.1, replaced by getPreferredSize(int)."
TextField,processActionEvent(ActionEvent e),protected void,Processes action events occurring on this text field by dispatching them to any registered ActionListener objects.
TextField,processEvent(AWTEvent e),protected void,Processes events on this text field.
TextField,removeActionListener(ActionListener l),void,Removes the specified action listener so that it no longer receives action events from this text field.
TextField,setColumns(int columns),void,Sets the number of columns in this text field.
TextField,setEchoChar(char c),void,Sets the echo character for this text field.
TextField,setEchoCharacter(char c),void,"Deprecated. As of JDK version 1.1, replaced by setEchoChar(char)."
TextField,setText(String t),void,Sets the text that is presented by this text component to be the specified text.
TexturePaint,"createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints)",PaintContext,Creates and returns a PaintContext used to generate a tiled image pattern.
TexturePaint,getAnchorRect(),Rectangle2D,Returns a copy of the anchor rectangle which positions and sizes the textured image.
TexturePaint,getImage(),BufferedImage,Returns the BufferedImage texture used to fill the shapes.
TexturePaint,getTransparency(),int,Returns the transparency mode for this TexturePaint.
Toolkit,"addAWTEventListener(AWTEventListener listener, long eventMask)",void,Adds an AWTEventListener to receive all AWTEvents dispatched system-wide that conform to the given eventMask.
Toolkit,"addPropertyChangeListener(String name, PropertyChangeListener pcl)",void,Adds the specified property change listener for the named desktop property.
Toolkit,areExtraMouseButtonsEnabled(),boolean,Reports whether events from extra mouse buttons are allowed to be processed and posted into EventQueue.
Toolkit,beep(),abstract void,Emits an audio beep depending on native system settings and hardware capabilities.
Toolkit,"checkImage(Image image, int width, int height, ImageObserver observer)",abstract int,Indicates the construction status of a specified image that is being prepared for display.
Toolkit,createButton(Button target),protected abstract java.awt.peer.ButtonPeer,Creates this toolkit's implementation of Button using the specified peer interface.
Toolkit,createCanvas(Canvas target),protected abstract java.awt.peer.CanvasPeer,Creates this toolkit's implementation of Canvas using the specified peer interface.
Toolkit,createCheckbox(Checkbox target),protected abstract java.awt.peer.CheckboxPeer,Creates this toolkit's implementation of Checkbox using the specified peer interface.
Toolkit,createCheckboxMenuItem(CheckboxMenuItem target),protected abstract java.awt.peer.CheckboxMenuItemPeer,Creates this toolkit's implementation of CheckboxMenuItem using the specified peer interface.
Toolkit,createChoice(Choice target),protected abstract java.awt.peer.ChoicePeer,Creates this toolkit's implementation of Choice using the specified peer interface.
Toolkit,createComponent(Component target),protected java.awt.peer.LightweightPeer,Creates a peer for a component or container.
Toolkit,"createCustomCursor(Image cursor, Point hotSpot, String name)",Cursor,Creates a new custom cursor object.
Toolkit,createDesktopPeer(Desktop target),protected abstract java.awt.peer.DesktopPeer,Creates this toolkit's implementation of the Desktop using the specified peer interface.
Toolkit,createDialog(Dialog target),protected abstract java.awt.peer.DialogPeer,Creates this toolkit's implementation of Dialog using the specified peer interface.
Toolkit,"createDragGestureRecognizer(Class<T> abstractRecognizerClass, DragSource ds, Component c, int srcActions, DragGestureListener dgl)",<T extends DragGestureRecognizer>T,"Creates a concrete, platform dependent, subclass of the abstract DragGestureRecognizer class requested, and associates it with the DragSource, Component and DragGestureListener specified."
Toolkit,createDragSourceContextPeer(DragGestureEvent dge),abstract java.awt.dnd.peer.DragSourceContextPeer,Creates the peer for a DragSourceContext.
Toolkit,createFileDialog(FileDialog target),protected abstract java.awt.peer.FileDialogPeer,Creates this toolkit's implementation of FileDialog using the specified peer interface.
Toolkit,createFrame(Frame target),protected abstract java.awt.peer.FramePeer,Creates this toolkit's implementation of Frame using the specified peer interface.
Toolkit,createImage(byte[] imagedata),Image,Creates an image which decodes the image stored in the specified byte array.
Toolkit,"createImage(byte[] imagedata, int imageoffset, int imagelength)",abstract Image,"Creates an image which decodes the image stored in the specified byte array, and at the specified offset and length."
Toolkit,createImage(ImageProducer producer),abstract Image,Creates an image with the specified image producer.
Toolkit,createImage(String filename),abstract Image,Returns an image which gets pixel data from the specified file.
Toolkit,createImage(URL url),abstract Image,Returns an image which gets pixel data from the specified URL.
Toolkit,createLabel(Label target),protected abstract java.awt.peer.LabelPeer,Creates this toolkit's implementation of Label using the specified peer interface.
Toolkit,createList(List target),protected abstract java.awt.peer.ListPeer,Creates this toolkit's implementation of List using the specified peer interface.
Toolkit,createMenu(Menu target),protected abstract java.awt.peer.MenuPeer,Creates this toolkit's implementation of Menu using the specified peer interface.
Toolkit,createMenuBar(MenuBar target),protected abstract java.awt.peer.MenuBarPeer,Creates this toolkit's implementation of MenuBar using the specified peer interface.
Toolkit,createMenuItem(MenuItem target),protected abstract java.awt.peer.MenuItemPeer,Creates this toolkit's implementation of MenuItem using the specified peer interface.
Toolkit,createPanel(Panel target),protected abstract java.awt.peer.PanelPeer,Creates this toolkit's implementation of Panel using the specified peer interface.
Toolkit,createPopupMenu(PopupMenu target),protected abstract java.awt.peer.PopupMenuPeer,Creates this toolkit's implementation of PopupMenu using the specified peer interface.
Toolkit,createScrollbar(Scrollbar target),protected abstract java.awt.peer.ScrollbarPeer,Creates this toolkit's implementation of Scrollbar using the specified peer interface.
Toolkit,createScrollPane(ScrollPane target),protected abstract java.awt.peer.ScrollPanePeer,Creates this toolkit's implementation of ScrollPane using the specified peer interface.
Toolkit,createTextArea(TextArea target),protected abstract java.awt.peer.TextAreaPeer,Creates this toolkit's implementation of TextArea using the specified peer interface.
Toolkit,createTextField(TextField target),protected abstract java.awt.peer.TextFieldPeer,Creates this toolkit's implementation of TextField using the specified peer interface.
Toolkit,createWindow(Window target),protected abstract java.awt.peer.WindowPeer,Creates this toolkit's implementation of Window using the specified peer interface.
Toolkit,getAWTEventListeners(),AWTEventListener[],Returns an array of all the AWTEventListeners registered on this toolkit.
Toolkit,getAWTEventListeners(long eventMask),AWTEventListener[],Returns an array of all the AWTEventListeners registered on this toolkit which listen to all of the event types specified in the eventMask argument.
Toolkit,"getBestCursorSize(int preferredWidth, int preferredHeight)",Dimension,Returns the supported cursor dimension which is closest to the desired sizes.
Toolkit,getColorModel(),abstract ColorModel,Determines the color model of this toolkit's screen.
Toolkit,getDefaultToolkit(),static Toolkit,Gets the default toolkit.
Toolkit,getDesktopProperty(String propertyName),Object,Obtains a value for the specified desktop property.
Toolkit,getFontList(),abstract String[],Deprecated. see GraphicsEnvironment.getAvailableFontFamilyNames()
Toolkit,getFontMetrics(Font font),abstract FontMetrics,"Deprecated. As of JDK version 1.2, replaced by the Font method getLineMetrics."
Toolkit,"getFontPeer(String name, int style)",protected abstract java.awt.peer.FontPeer,Deprecated. see java.awt.GraphicsEnvironment#getAllFonts
Toolkit,getImage(String filename),abstract Image,"Returns an image which gets pixel data from the specified file, whose format can be either GIF, JPEG or PNG."
Toolkit,getImage(URL url),abstract Image,Returns an image which gets pixel data from the specified URL.
Toolkit,getLockingKeyState(int keyCode),boolean,"Returns whether the given locking key on the keyboard is currently in its ""on"" state."
Toolkit,getMaximumCursorColors(),int,Returns the maximum number of colors the Toolkit supports in a custom cursor palette.
Toolkit,getMenuShortcutKeyMask(),int,Determines which modifier key is the appropriate accelerator key for menu shortcuts.
Toolkit,getMouseInfoPeer(),protected java.awt.peer.MouseInfoPeer,Obtains this toolkit's implementation of helper class for MouseInfo operations.
Toolkit,getNativeContainer(Component c),protected static Container,Give native peers the ability to query the native container given a native component (eg the direct parent may be lightweight).
Toolkit,"getPrintJob(Frame frame, String jobtitle, JobAttributes jobAttributes, PageAttributes pageAttributes)",PrintJob,Gets a PrintJob object which is the result of initiating a print operation on the toolkit's platform.
Toolkit,"getPrintJob(Frame frame, String jobtitle, Properties props)",abstract PrintJob,Gets a PrintJob object which is the result of initiating a print operation on the toolkit's platform.
Toolkit,"getProperty(String key, String defaultValue)",static String,Gets a property with the specified key and default.
Toolkit,getPropertyChangeListeners(),PropertyChangeListener[],Returns an array of all the property change listeners registered on this toolkit.
Toolkit,getPropertyChangeListeners(String propertyName),PropertyChangeListener[],Returns an array of all property change listeners associated with the specified name of a desktop property.
Toolkit,getScreenInsets(GraphicsConfiguration gc),Insets,Gets the insets of the screen.
Toolkit,getScreenResolution(),abstract int,Returns the screen resolution in dots-per-inch.
Toolkit,getScreenSize(),abstract Dimension,Gets the size of the screen.
Toolkit,getSystemClipboard(),abstract Clipboard,Gets the singleton instance of the system Clipboard which interfaces with clipboard facilities provided by the native platform.
Toolkit,getSystemEventQueue(),EventQueue,Get the application's or applet's EventQueue instance.
Toolkit,getSystemEventQueueImpl(),protected abstract EventQueue,"Gets the application's or applet's EventQueue instance, without checking access."
Toolkit,getSystemSelection(),Clipboard,Gets the singleton instance of the system selection as a Clipboard object.
Toolkit,initializeDesktopProperties(),protected void,initializeDesktopProperties
Toolkit,isAlwaysOnTopSupported(),boolean,Returns whether the always-on-top mode is supported by this toolkit.
Toolkit,isDynamicLayoutActive(),boolean,"Returns whether dynamic layout of Containers on resize is currently active (both set in program( isDynamicLayoutSet() ), and supported by the underlying operating system and/or window manager)."
Toolkit,isDynamicLayoutSet(),protected boolean,"Returns whether the layout of Containers is validated dynamically during resizing, or statically, after resizing is complete."
Toolkit,isFrameStateSupported(int state),boolean,Returns whether Toolkit supports this state for Frames.
Toolkit,isModalExclusionTypeSupported(Dialog.ModalExclusionType modalExclusionType),abstract boolean,Returns whether the given modal exclusion type is supported by this toolkit.
Toolkit,isModalityTypeSupported(Dialog.ModalityType modalityType),abstract boolean,Returns whether the given modality type is supported by this toolkit.
Toolkit,lazilyLoadDesktopProperty(String name),protected Object,an opportunity to lazily evaluate desktop property values.
Toolkit,loadSystemColors(int[] systemColors),protected void,Fills in the integer array that is supplied as an argument with the current system color values.
Toolkit,mapInputMethodHighlight(InputMethodHighlight highlight),"abstract Map<TextAttribute,?>","Returns a map of visual attributes for the abstract level description of the given input method highlight, or null if no mapping is found."
Toolkit,"prepareImage(Image image, int width, int height, ImageObserver observer)",abstract boolean,Prepares an image for rendering.
Toolkit,removeAWTEventListener(AWTEventListener listener),void,Removes an AWTEventListener from receiving dispatched AWTEvents.
Toolkit,"removePropertyChangeListener(String name, PropertyChangeListener pcl)",void,Removes the specified property change listener for the named desktop property.
Toolkit,"setDesktopProperty(String name, Object newValue)",protected void,Sets the named desktop property to the specified value and fires a property change event to notify any listeners that the value has changed.
Toolkit,setDynamicLayout(boolean dynamic),void,"Controls whether the layout of Containers is validated dynamically during resizing, or statically, after resizing is complete."
Toolkit,"setLockingKeyState(int keyCode, boolean on)",void,Sets the state of the given locking key on the keyboard.
Toolkit,sync(),abstract void,Synchronizes this toolkit's graphics state.
TrayIcon,addActionListener(ActionListener listener),void,Adds the specified action listener to receive ActionEvents from this TrayIcon.
TrayIcon,addMouseListener(MouseListener listener),void,Adds the specified mouse listener to receive mouse events from this TrayIcon.
TrayIcon,addMouseMotionListener(MouseMotionListener listener),void,Adds the specified mouse listener to receive mouse-motion events from this TrayIcon.
TrayIcon,"displayMessage(String caption, String text, TrayIcon.MessageType messageType)",void,Displays a popup message near the tray icon.
TrayIcon,getActionCommand(),String,Returns the command name of the action event fired by this tray icon.
TrayIcon,getActionListeners(),ActionListener[],Returns an array of all the action listeners registered on this TrayIcon.
TrayIcon,getImage(),Image,Returns the current image used for this TrayIcon.
TrayIcon,getMouseListeners(),MouseListener[],Returns an array of all the mouse listeners registered on this TrayIcon.
TrayIcon,getMouseMotionListeners(),MouseMotionListener[],Returns an array of all the mouse-motion listeners registered on this TrayIcon.
TrayIcon,getPopupMenu(),PopupMenu,Returns the popup menu associated with this TrayIcon.
TrayIcon,getSize(),Dimension,"Returns the size, in pixels, of the space that the tray icon occupies in the system tray."
TrayIcon,getToolTip(),String,Returns the tooltip string associated with this TrayIcon.
TrayIcon,isImageAutoSize(),boolean,Returns the value of the auto-size property.
TrayIcon,removeActionListener(ActionListener listener),void,Removes the specified action listener.
TrayIcon,removeMouseListener(MouseListener listener),void,Removes the specified mouse listener.
TrayIcon,removeMouseMotionListener(MouseMotionListener listener),void,Removes the specified mouse-motion listener.
TrayIcon,setActionCommand(String command),void,Sets the command name for the action event fired by this tray icon.
TrayIcon,setImage(Image image),void,Sets the image for this TrayIcon.
TrayIcon,setImageAutoSize(boolean autosize),void,Sets the auto-size property.
TrayIcon,setPopupMenu(PopupMenu popup),void,Sets the popup menu for this TrayIcon.
TrayIcon,setToolTip(String tooltip),void,Sets the tooltip string for this TrayIcon.
Window,addNotify(),void,Makes this Window displayable by creating the connection to its native screen resource.
Window,addPropertyChangeListener(PropertyChangeListener listener),void,Adds a PropertyChangeListener to the listener list.
Window,"addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Adds a PropertyChangeListener to the listener list for a specific property.
Window,addWindowFocusListener(WindowFocusListener l),void,Adds the specified window focus listener to receive window events from this window.
Window,addWindowListener(WindowListener l),void,Adds the specified window listener to receive window events from this window.
Window,addWindowStateListener(WindowStateListener l),void,Adds the specified window state listener to receive window events from this window.
Window,applyResourceBundle(ResourceBundle rb),void,"Deprecated. As of J2SE 1.4, replaced by Component.applyComponentOrientation."
Window,applyResourceBundle(String rbName),void,"Deprecated. As of J2SE 1.4, replaced by Component.applyComponentOrientation."
Window,createBufferStrategy(int numBuffers),void,Creates a new strategy for multi-buffering on this component.
Window,"createBufferStrategy(int numBuffers, BufferCapabilities caps)",void,Creates a new strategy for multi-buffering on this component with the required buffer capabilities.
Window,dispose(),void,"Releases all of the native screen resources used by this Window, its subcomponents, and all of its owned children."
Window,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this Window.
Window,getBackground(),Color,Gets the background color of this window.
Window,getBufferStrategy(),BufferStrategy,Returns the BufferStrategy used by this component.
Window,getFocusableWindowState(),boolean,Returns whether this Window can become the focused Window if it meets the other requirements outlined in isFocusableWindow.
Window,getFocusCycleRootAncestor(),Container,Always returns null because Windows have no ancestors; they represent the top of the Component hierarchy.
Window,getFocusOwner(),Component,Returns the child Component of this Window that has focus if this Window is focused; returns null otherwise.
Window,getFocusTraversalKeys(int id),Set<AWTKeyStroke>,Gets a focus traversal key for this Window.
Window,getIconImages(),List<Image>,Returns the sequence of images to be displayed as the icon for this window.
Window,getInputContext(),InputContext,Gets the input context for this window.
Window,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this Window.
Window,getLocale(),Locale,"Gets the Locale object that is associated with this window, if the locale has been set."
Window,getModalExclusionType(),Dialog.ModalExclusionType,Returns the modal exclusion type of this window.
Window,getMostRecentFocusOwner(),Component,Returns the child Component of this Window that will receive the focus when this Window is focused.
Window,getOpacity(),float,Returns the opacity of the window.
Window,getOwnedWindows(),Window[],Return an array containing all the windows this window currently owns.
Window,getOwner(),Window,Returns the owner of this window.
Window,getOwnerlessWindows(),static Window[],Returns an array of all Windows created by this application that have no owner.
Window,getShape(),Shape,Returns the shape of the window.
Window,getToolkit(),Toolkit,Returns the toolkit of this frame.
Window,getType(),Window.Type,Returns the type of the window.
Window,getWarningString(),String,Gets the warning string that is displayed with this window.
Window,getWindowFocusListeners(),WindowFocusListener[],Returns an array of all the window focus listeners registered on this window.
Window,getWindowListeners(),WindowListener[],Returns an array of all the window listeners registered on this window.
Window,getWindows(),static Window[],"Returns an array of all Windows, both owned and ownerless, created by this application."
Window,getWindowStateListeners(),WindowStateListener[],Returns an array of all the window state listeners registered on this window.
Window,hide(),void,"Deprecated. As of JDK version 1.5, replaced by setVisible(boolean)."
Window,isActive(),boolean,Returns whether this Window is active.
Window,isAlwaysOnTop(),boolean,Returns whether this window is an always-on-top window.
Window,isAlwaysOnTopSupported(),boolean,Returns whether the always-on-top mode is supported for this window.
Window,isAutoRequestFocus(),boolean,"Returns whether this window should receive focus on subsequently being shown (with a call to setVisible(true)), or being moved to the front (with a call to toFront())."
Window,isFocusableWindow(),boolean,"Returns whether this Window can become the focused Window, that is, whether this Window or any of its subcomponents can become the focus owner."
Window,isFocusCycleRoot(),boolean,Always returns true because all Windows must be roots of a focus traversal cycle.
Window,isFocused(),boolean,Returns whether this Window is focused.
Window,isLocationByPlatform(),boolean,Returns true if this Window will appear at the default location for the native windowing system the next time this Window is made visible.
Window,isOpaque(),boolean,Indicates if the window is currently opaque.
Window,isShowing(),boolean,Checks if this Window is showing on screen.
Window,isValidateRoot(),boolean,Indicates if this container is a validate root.
Window,pack(),void,Causes this Window to be sized to fit the preferred size and layouts of its subcomponents.
Window,paint(Graphics g),void,Paints the container.
Window,postEvent(Event e),boolean,Deprecated. As of JDK version 1.1 replaced by dispatchEvent(AWTEvent).
Window,processEvent(AWTEvent e),protected void,Processes events on this window.
Window,processWindowEvent(WindowEvent e),protected void,Processes window events occurring on this window by dispatching them to any registered WindowListener objects.
Window,processWindowFocusEvent(WindowEvent e),protected void,Processes window focus event occurring on this window by dispatching them to any registered WindowFocusListener objects.
Window,processWindowStateEvent(WindowEvent e),protected void,Processes window state event occurring on this window by dispatching them to any registered WindowStateListener objects.
Window,removeNotify(),void,Makes this Container undisplayable by removing its connection to its native screen resource.
Window,removeWindowFocusListener(WindowFocusListener l),void,Removes the specified window focus listener so that it no longer receives window events from this window.
Window,removeWindowListener(WindowListener l),void,Removes the specified window listener so that it no longer receives window events from this window.
Window,removeWindowStateListener(WindowStateListener l),void,Removes the specified window state listener so that it no longer receives window events from this window.
Window,"reshape(int x, int y, int width, int height)",void,"Deprecated. As of JDK version 1.1, replaced by setBounds(int, int, int, int)."
Window,setAlwaysOnTop(boolean alwaysOnTop),void,Sets whether this window should always be above other windows.
Window,setAutoRequestFocus(boolean autoRequestFocus),void,"Sets whether this window should receive focus on subsequently being shown (with a call to setVisible(true)), or being moved to the front (with a call to toFront())."
Window,setBackground(Color bgColor),void,Sets the background color of this window.
Window,"setBounds(int x, int y, int width, int height)",void,Moves and resizes this component.
Window,setBounds(Rectangle r),void,Moves and resizes this component to conform to the new bounding rectangle r.
Window,setCursor(Cursor cursor),void,Set the cursor image to a specified cursor.
Window,setFocusableWindowState(boolean focusableWindowState),void,Sets whether this Window can become the focused Window if it meets the other requirements outlined in isFocusableWindow.
Window,setFocusCycleRoot(boolean focusCycleRoot),void,Does nothing because Windows must always be roots of a focus traversal cycle.
Window,setIconImage(Image image),void,Sets the image to be displayed as the icon for this window.
Window,setIconImages(List<? extends Image> icons),void,Sets the sequence of images to be displayed as the icon for this window.
Window,"setLocation(int x, int y)",void,Moves this component to a new location.
Window,setLocation(Point p),void,Moves this component to a new location.
Window,setLocationByPlatform(boolean locationByPlatform),void,Sets whether this Window should appear at the default location for the native windowing system or at the current location (returned by getLocation) the next time the Window is made visible.
Window,setLocationRelativeTo(Component c),void,Sets the location of the window relative to the specified component according to the following scenarios.
Window,setMinimumSize(Dimension minimumSize),void,Sets the minimum size of this window to a constant value.
Window,setModalExclusionType(Dialog.ModalExclusionType exclusionType),void,Specifies the modal exclusion type for this window.
Window,setOpacity(float opacity),void,Sets the opacity of the window.
Window,setShape(Shape shape),void,Sets the shape of the window.
Window,setSize(Dimension d),void,Resizes this component so that it has width d.width and height d.height.
Window,"setSize(int width, int height)",void,Resizes this component so that it has width width and height height.
Window,setType(Window.Type type),void,Sets the type of the window.
Window,setVisible(boolean b),void,Shows or hides this Window depending on the value of parameter b.
Window,show(),void,"Deprecated. As of JDK version 1.5, replaced by setVisible(boolean)."
Window,toBack(),void,"If this Window is visible, sends this Window to the back and may cause it to lose focus or activation if it is the focused or active Window."
Window,toFront(),void,"If this Window is visible, brings this Window to the front and may make it the focused Window."
