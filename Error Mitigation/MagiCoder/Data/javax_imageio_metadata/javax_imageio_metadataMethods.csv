ClassName,Method,Return Type,Description
IIOMetadata,activateController(),boolean,Activates the installed IIOMetadataController for this IIOMetadata object and returns the resulting value.
IIOMetadata,getAsTree(String formatName),abstract Node,Returns an XML DOM Node object that represents the root of a tree of metadata contained within this object according to the conventions defined by a given metadata format.
IIOMetadata,getController(),IIOMetadataController,Returns whatever IIOMetadataController is currently installed.
IIOMetadata,getDefaultController(),IIOMetadataController,"Returns the default IIOMetadataController, if there is one, regardless of the currently installed controller."
IIOMetadata,getExtraMetadataFormatNames(),String[],"Returns an array of Strings containing the names of additional metadata formats, other than the native and standard formats, recognized by this plug-in's getAsTree, setFromTree, and mergeTree methods."
IIOMetadata,getMetadataFormat(String formatName),IIOMetadataFormat,"Returns an IIOMetadataFormat object describing the given metadata format, or null if no description is available."
IIOMetadata,getMetadataFormatNames(),String[],"Returns an array of Strings containing the names of all metadata formats, including the native and standard formats, recognized by this plug-in's getAsTree, setFromTree, and mergeTree methods."
IIOMetadata,getNativeMetadataFormatName(),String,"Returns the name of the ""native"" metadata format for this plug-in, which typically allows for lossless encoding and transmission of the metadata stored in the format handled by this plug-in."
IIOMetadata,getStandardChromaNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the chroma information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardCompressionNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the compression information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardDataNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the data format information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardDimensionNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the dimension information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardDocumentNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the document information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardTextNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the textual information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardTileNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the tiling information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardTransparencyNode(),protected IIOMetadataNode,"Returns an IIOMetadataNode representing the transparency information of the standard javax_imageio_1.0 metadata format, or null if no such information is available."
IIOMetadata,getStandardTree(),protected IIOMetadataNode,A utility method to return a tree of IIOMetadataNodes representing the metadata contained within this object according to the conventions of the standard javax_imageio_1.0 metadata format.
IIOMetadata,hasController(),boolean,Returns true if there is a controller installed for this IIOMetadata object.
IIOMetadata,isReadOnly(),abstract boolean,"Returns true if this object does not support the mergeTree, setFromTree, and reset methods."
IIOMetadata,isStandardMetadataFormatSupported(),boolean,"Returns true if the standard metadata format is supported by getMetadataFormat, getAsTree, setFromTree, and mergeTree."
IIOMetadata,"mergeTree(String formatName, Node root)",abstract void,Alters the internal state of this IIOMetadata object from a tree of XML DOM Nodes whose syntax is defined by the given metadata format.
IIOMetadata,reset(),abstract void,"Resets all the data stored in this object to default values, usually to the state this object was in immediately after construction, though the precise semantics are plug-in specific."
IIOMetadata,setController(IIOMetadataController controller),void,"Sets the IIOMetadataController to be used to provide settings for this IIOMetadata object when the activateController method is called, overriding any default controller."
IIOMetadata,"setFromTree(String formatName, Node root)",void,Sets the internal state of this IIOMetadata object from a tree of XML DOM Nodes whose syntax is defined by the given metadata format.
IIOMetadataFormatImpl,"addAttribute(String elementName, String attrName, int dataType, boolean required, int listMinLength, int listMaxLength)",protected void,Adds a new attribute to a previously defined element that will be defined by a list of values.
IIOMetadataFormatImpl,"addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue)",protected void,Adds a new attribute to a previously defined element that may be set to an arbitrary value.
IIOMetadataFormatImpl,"addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, List<String> enumeratedValues)",protected void,Adds a new attribute to a previously defined element that will be defined by a set of enumerated values.
IIOMetadataFormatImpl,"addAttribute(String elementName, String attrName, int dataType, boolean required, String defaultValue, String minValue, String maxValue, boolean minInclusive, boolean maxInclusive)",protected void,Adds a new attribute to a previously defined element that will be defined by a range of values.
IIOMetadataFormatImpl,"addBooleanAttribute(String elementName, String attrName, boolean hasDefaultValue, boolean defaultValue)",protected void,"Adds a new attribute to a previously defined element that will be defined by the enumerated values TRUE and FALSE, with a datatype of DATATYPE_BOOLEAN."
IIOMetadataFormatImpl,"addChildElement(String elementName, String parentName)",protected void,Adds an existing element to the list of legal children for a given parent node type.
IIOMetadataFormatImpl,"addElement(String elementName, String parentName, int childPolicy)",protected void,Adds a new element type to this metadata document format with a child policy other than CHILD_POLICY_REPEAT.
IIOMetadataFormatImpl,"addElement(String elementName, String parentName, int minChildren, int maxChildren)",protected void,Adds a new element type to this metadata document format with a child policy of CHILD_POLICY_REPEAT.
IIOMetadataFormatImpl,"addObjectValue(String elementName, Class<?> classType, int arrayMinLength, int arrayMaxLength)",protected void,Allows an Object reference of a given class type to be stored in nodes implementing the named element.
IIOMetadataFormatImpl,"addObjectValue(String elementName, Class<T> classType, boolean required, T defaultValue)",protected <T> void,Allows an Object reference of a given class type to be stored in nodes implementing the named element.
IIOMetadataFormatImpl,"addObjectValue(String elementName, Class<T> classType, boolean required, T defaultValue, List<? extends T> enumeratedValues)",protected <T> void,Allows an Object reference of a given class type to be stored in nodes implementing the named element.
IIOMetadataFormatImpl,"addObjectValue(String elementName, Class<T> classType, T defaultValue, Comparable<? super T> minValue, Comparable<? super T> maxValue, boolean minInclusive, boolean maxInclusive)",protected <T extends Object & Comparable<? super T>>void,Allows an Object reference of a given class type to be stored in nodes implementing the named element.
IIOMetadataFormatImpl,"canNodeAppear(String elementName, ImageTypeSpecifier imageType)",abstract boolean,"Returns true if the element (and the subtree below it) is allowed to appear in a metadata document for an image of the given type, defined by an ImageTypeSpecifier."
IIOMetadataFormatImpl,"getAttributeDataType(String elementName, String attrName)",int,"Returns one of the constants starting with DATATYPE_, indicating the format and interpretation of the value of the given attribute within the named element."
IIOMetadataFormatImpl,"getAttributeDefaultValue(String elementName, String attrName)",String,"Returns the default value of the named attribute, if it is not explicitly present within the named element, as a String, or null if no default value is available."
IIOMetadataFormatImpl,"getAttributeDescription(String elementName, String attrName, Locale locale)",String,"Returns a String containing a description of the named attribute, or null."
IIOMetadataFormatImpl,"getAttributeEnumerations(String elementName, String attrName)",String[],Returns an array of Strings containing the legal enumerated values for the given attribute within the named element.
IIOMetadataFormatImpl,"getAttributeListMaxLength(String elementName, String attrName)",int,Returns the maximum number of list items that may be used to define this attribute.
IIOMetadataFormatImpl,"getAttributeListMinLength(String elementName, String attrName)",int,Returns the minimum number of list items that may be used to define this attribute.
IIOMetadataFormatImpl,"getAttributeMaxValue(String elementName, String attrName)",String,Returns the maximum legal value for the attribute.
IIOMetadataFormatImpl,"getAttributeMinValue(String elementName, String attrName)",String,Returns the minimum legal value for the attribute.
IIOMetadataFormatImpl,getAttributeNames(String elementName),String[],Returns an array of Strings listing the names of the attributes that may be associated with the named element.
IIOMetadataFormatImpl,"getAttributeValueType(String elementName, String attrName)",int,"Returns one of the constants starting with VALUE_, indicating whether the values of the given attribute within the named element are arbitrary, constrained to lie within a specified range, constrained to be one of a set of enumerated values, or are a whitespace-separated list of arbitrary values."
IIOMetadataFormatImpl,getChildNames(String elementName),String[],"Returns an array of Strings indicating the names of the element which are allowed to be children of the named element, in the order in which they should appear."
IIOMetadataFormatImpl,getChildPolicy(String elementName),int,"Returns one of the constants starting with CHILD_POLICY_, indicating the legal pattern of children for the named element."
IIOMetadataFormatImpl,"getElementDescription(String elementName, Locale locale)",String,"Returns a String containing a description of the named element, or null."
IIOMetadataFormatImpl,getElementMaxChildren(String elementName),int,Returns the maximum number of children of the named element with child policy CHILD_POLICY_REPEAT.
IIOMetadataFormatImpl,getElementMinChildren(String elementName),int,Returns the minimum number of children of the named element with child policy CHILD_POLICY_REPEAT.
IIOMetadataFormatImpl,getObjectArrayMaxLength(String elementName),int,Returns the maximum number of array elements that may be used to define the Object reference within the named element.
IIOMetadataFormatImpl,getObjectArrayMinLength(String elementName),int,Returns the minimum number of array elements that may be used to define the Object reference within the named element.
IIOMetadataFormatImpl,getObjectClass(String elementName),Class<?>,Returns the Class type of the Object reference stored within the element.
IIOMetadataFormatImpl,getObjectDefaultValue(String elementName),Object,Returns an Objects containing the default value for the Object reference within the named element.
IIOMetadataFormatImpl,getObjectEnumerations(String elementName),Object[],Returns an array of Objects containing the legal enumerated values for the Object reference within the named element.
IIOMetadataFormatImpl,getObjectMaxValue(String elementName),Comparable<?>,Returns the maximum legal value for the Object reference within the named element.
IIOMetadataFormatImpl,getObjectMinValue(String elementName),Comparable<?>,Returns the minimum legal value for the Object reference within the named element.
IIOMetadataFormatImpl,getObjectValueType(String elementName),int,"Returns one of the enumerated values starting with VALUE_, indicating the type of values (enumeration, range, or array) that are allowed for the Object reference."
IIOMetadataFormatImpl,getResourceBaseName(),protected String,Returns the currently set base name for locating ResourceBundles.
IIOMetadataFormatImpl,getRootName(),String,Returns the name of the root element of the format.
IIOMetadataFormatImpl,getStandardFormatInstance(),static IIOMetadataFormat,"Returns an IIOMetadataFormat object describing the standard, plug-in neutral javax.imageio_1.0 metadata document format described in the comment of the javax.imageio.metadata package."
IIOMetadataFormatImpl,"isAttributeRequired(String elementName, String attrName)",boolean,Returns true if the named attribute must be present within the named element.
IIOMetadataFormatImpl,"removeAttribute(String elementName, String attrName)",protected void,Removes an attribute from a previously defined element.
IIOMetadataFormatImpl,removeElement(String elementName),protected void,Removes an element from the format.
IIOMetadataFormatImpl,removeObjectValue(String elementName),protected void,Disallows an Object reference from being stored in nodes implementing the named element.
IIOMetadataFormatImpl,setResourceBaseName(String resourceBaseName),protected void,Sets a new base name for locating ResourceBundles containing descriptions of elements and attributes for this format.
IIOMetadataNode,appendChild(Node newChild),Node,Adds the node newChild to the end of the list of children of this node.
IIOMetadataNode,cloneNode(boolean deep),Node,Returns a duplicate of this node.
IIOMetadataNode,compareDocumentPosition(Node other),short,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,getAttribute(String name),String,Retrieves an attribute value by name.
IIOMetadataNode,getAttributeNode(String name),Attr,Retrieves an attribute node by name.
IIOMetadataNode,"getAttributeNodeNS(String namespaceURI, String localName)",Attr,Equivalent to getAttributeNode(localName).
IIOMetadataNode,"getAttributeNS(String namespaceURI, String localName)",String,Equivalent to getAttribute(localName).
IIOMetadataNode,getAttributes(),NamedNodeMap,Returns a NamedNodeMap containing the attributes of this node.
IIOMetadataNode,getBaseURI(),String,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,getChildNodes(),NodeList,Returns a NodeList that contains all children of this node.
IIOMetadataNode,getElementsByTagName(String name),NodeList,"Returns a NodeList of all descendant Elements with a given tag name, in document order."
IIOMetadataNode,"getElementsByTagNameNS(String namespaceURI, String localName)",NodeList,Equivalent to getElementsByTagName(localName).
IIOMetadataNode,"getFeature(String feature, String version)",Object,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,getFirstChild(),Node,"Returns the first child of this node, or null if the node has no children."
IIOMetadataNode,getLastChild(),Node,"Returns the last child of this node, or null if the node has no children."
IIOMetadataNode,getLength(),int,The number of nodes in the list.
IIOMetadataNode,getLocalName(),String,Equivalent to getNodeName.
IIOMetadataNode,getNamespaceURI(),String,"Returns null, since namespaces are not supported."
IIOMetadataNode,getNextSibling(),Node,"Returns the next sibling of this node, or null if the node has no next sibling."
IIOMetadataNode,getNodeName(),String,Returns the node name associated with this node.
IIOMetadataNode,getNodeType(),short,"Returns the node type, which is always ELEMENT_NODE."
IIOMetadataNode,getNodeValue(),String,Returns the value associated with this node.
IIOMetadataNode,getOwnerDocument(),Document,"Returns null, since IIOMetadataNodes do not belong to any Document."
IIOMetadataNode,getParentNode(),Node,Returns the parent of this node.
IIOMetadataNode,getPrefix(),String,"Returns null, since namespaces are not supported."
IIOMetadataNode,getPreviousSibling(),Node,"Returns the previous sibling of this node, or null if this node has no previous sibling."
IIOMetadataNode,getSchemaTypeInfo(),TypeInfo,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,getTagName(),String,Equivalent to getNodeName.
IIOMetadataNode,getTextContent(),String,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,getUserData(String key),Object,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,getUserObject(),Object,Returns the Object value associated with this node.
IIOMetadataNode,hasAttribute(String name),boolean,"Returns true when an attribute with a given name is specified on this element or has a default value, false otherwise."
IIOMetadataNode,"hasAttributeNS(String namespaceURI, String localName)",boolean,Equivalent to hasAttribute(localName).
IIOMetadataNode,hasAttributes(),boolean,Returns whether this node (if it is an element) has any attributes.
IIOMetadataNode,hasChildNodes(),boolean,Returns true if this node has child nodes.
IIOMetadataNode,"insertBefore(Node newChild, Node refChild)",Node,Inserts the node newChild before the existing child node refChild.
IIOMetadataNode,isDefaultNamespace(String namespaceURI),boolean,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,isEqualNode(Node node),boolean,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,isSameNode(Node node),boolean,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,"isSupported(String feature, String version)",boolean,Returns false since DOM features are not supported.
IIOMetadataNode,item(int index),Node,Returns the indexth item in the collection.
IIOMetadataNode,lookupNamespaceURI(String prefix),String,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,lookupPrefix(String namespaceURI),String,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,normalize(),void,"Does nothing, since IIOMetadataNodes do not contain Text children."
IIOMetadataNode,removeAttribute(String name),void,Removes an attribute by name.
IIOMetadataNode,removeAttributeNode(Attr oldAttr),Attr,Removes the specified attribute node.
IIOMetadataNode,"removeAttributeNS(String namespaceURI, String localName)",void,Equivalent to removeAttribute(localName).
IIOMetadataNode,removeChild(Node oldChild),Node,"Removes the child node indicated by oldChild from the list of children, and returns it."
IIOMetadataNode,"replaceChild(Node newChild, Node oldChild)",Node,"Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node."
IIOMetadataNode,"setAttribute(String name, String value)",void,Adds a new attribute.
IIOMetadataNode,setAttributeNode(Attr newAttr),Attr,Adds a new attribute node.
IIOMetadataNode,setAttributeNodeNS(Attr newAttr),Attr,Equivalent to setAttributeNode(newAttr).
IIOMetadataNode,"setAttributeNS(String namespaceURI, String qualifiedName, String value)",void,"Equivalent to setAttribute(qualifiedName, value)."
IIOMetadataNode,"setIdAttribute(String name, boolean isId)",void,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,"setIdAttributeNode(Attr idAttr, boolean isId)",void,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,"setIdAttributeNS(String namespaceURI, String localName, boolean isId)",void,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,setNodeValue(String nodeValue),void,Sets the String value associated with this node.
IIOMetadataNode,setPrefix(String prefix),void,"Does nothing, since namespaces are not supported."
IIOMetadataNode,setTextContent(String textContent),void,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,"setUserData(String key, Object data, UserDataHandler handler)",Object,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.
IIOMetadataNode,setUserObject(Object userObject),void,Sets the value associated with this node.
