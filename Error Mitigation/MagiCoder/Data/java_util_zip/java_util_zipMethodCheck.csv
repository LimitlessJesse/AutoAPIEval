Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,Adler32,1,long getValue(),True,Returns the checksum value.
0,Adler32,2,void reset(),True,Resets the checksum to initial value.
0,Adler32,3,void update(int b),True,Updates the checksum with the specified byte (the low eight bits of the argument b).
0,Adler32,4,"void update(byte[] b, int off, int len)",True,Updates the checksum with the specified array of bytes.
0,Adler32,5,void update(byte[] b),True,Updates the checksum with the specified array of bytes.
1,CheckedInputStream,1,"CheckedInputStream(InputStream in, Checksum ck)",False,NULL
1,CheckedInputStream,2,int read(),True,Reads a byte.
1,CheckedInputStream,3,int read(byte[] b),False,NULL
1,CheckedInputStream,4,"int read(byte[] b, int off, int len)",True,Reads into an array of bytes.
1,CheckedInputStream,5,long skip(long n),True,Skips specified number of bytes of input.
2,CheckedOutputStream,1,"CheckedOutputStream(OutputStream out, Checksum ck)",False,NULL
2,CheckedOutputStream,2,void write(int b),True,Writes a byte.
2,CheckedOutputStream,3,void write(byte[] b),False,NULL
2,CheckedOutputStream,4,"void write(byte[] b, int off, int len)",True,Writes an array of bytes.
2,CheckedOutputStream,5,void flush(),False,NULL
3,CRC32,1,void update(int b),True,Updates the CRC-32 checksum with the specified byte (the low eight bits of the argument b).
3,CRC32,2,"void update(byte[] b, int off, int len)",True,Updates the CRC-32 checksum with the specified array of bytes.
3,CRC32,3,void reset(),True,Resets CRC-32 to initial value.
3,CRC32,4,long getValue(),True,Returns CRC-32 value.
3,CRC32,5,String toString(),False,NULL
4,Deflater,1,void setInput(byte[] input),True,Sets input data for compression.
4,Deflater,2,"void setInput(byte[] input, int offset, int count)",True,Sets input data for compression.
4,Deflater,3,int deflate(byte[] output),True,Compresses the input data and fills specified buffer with compressed data.
4,Deflater,4,"int deflate(byte[] output, int offset, int count)",True,Compresses the input data and fills specified buffer with compressed data.
4,Deflater,5,void end(),True,Closes the compressor and discards any unprocessed input.
5,DeflaterInputStream,1,DeflaterInputStream(InputStream in),False,NULL
5,DeflaterInputStream,2,"void setInput(byte[] input, int offset, int len)",False,NULL
5,DeflaterInputStream,3,"int read(byte[] b, int off, int len)",True,Reads compressed data into a byte array.
5,DeflaterInputStream,4,void end(),False,NULL
5,DeflaterInputStream,5,void reset(),True,This operation is not supported.
6,DeflaterOutputStream,1,DeflaterOutputStream(OutputStream out),False,NULL
6,DeflaterOutputStream,2,void write(int b) throws IOException,True,Writes a byte to the compressed output stream.
6,DeflaterOutputStream,3,"void write(byte[] b, int off, int len) throws IOException",True,Writes an array of bytes to the compressed output stream.
6,DeflaterOutputStream,4,void finish() throws IOException,True,Finishes writing compressed data to the output stream without closing the underlying stream.
6,DeflaterOutputStream,5,void close() throws IOException,True,Writes remaining compressed data to the output stream and closes the underlying stream.
7,GZIPInputStream,1,GZIPInputStream(InputStream in),False,NULL
7,GZIPInputStream,2,int read(),False,NULL
7,GZIPInputStream,3,int read(byte[] b),False,NULL
7,GZIPInputStream,4,"int read(byte[] b, int off, int len)",True,Reads uncompressed data into an array of bytes.
7,GZIPInputStream,5,void close(),True,Closes this input stream and releases any system resources associated with the stream.
8,GZIPOutputStream,1,GZIPOutputStream(OutputStream out),False,NULL
8,GZIPOutputStream,2,void write(int b),False,NULL
8,GZIPOutputStream,3,void write(byte[] b),False,NULL
8,GZIPOutputStream,4,"void write(byte[] b, int off, int len)",True,Writes array of bytes to the compressed output stream.
8,GZIPOutputStream,5,void finish(),True,Finishes writing compressed data to the output stream without closing the underlying stream.
9,Inflater,1,Inflater(),False,NULL
9,Inflater,2,"void setInput(byte[] input, int offset, int len)",True,Sets input data for decompression.
9,Inflater,3,int inflate(byte[] output),True,Uncompresses bytes into specified buffer.
9,Inflater,4,int getRemaining(),True,Returns the total number of bytes remaining in the input buffer.
9,Inflater,5,void end(),True,Closes the decompressor and discards any unprocessed input.
10,InflaterInputStream,1,InflaterInputStream(InputStream in),False,NULL
10,InflaterInputStream,2,"InflaterInputStream(InputStream in, Inflater inf)",False,NULL
10,InflaterInputStream,3,int read(),True,Reads a byte of uncompressed data.
10,InflaterInputStream,4,"int read(byte[] b, int off, int len)",True,Reads uncompressed data into an array of bytes.
10,InflaterInputStream,5,long skip(long n),True,Skips specified number of bytes of uncompressed data.
11,InflaterOutputStream,1,InflaterOutputStream(OutputStream out),False,NULL
11,InflaterOutputStream,2,"void write(byte[] b, int off, int len) throws IOException",True,Writes an array of bytes to the uncompressed output stream.
11,InflaterOutputStream,3,void finish() throws DataFormatException,True,Finishes writing uncompressed data to the output stream without closing the underlying stream.
11,InflaterOutputStream,4,void reset(),False,NULL
11,InflaterOutputStream,5,"void setInput(byte[] input, int index, int len)",False,NULL
12,ZipEntry,1,ZipEntry(String name),False,NULL
12,ZipEntry,2,String getName(),True,Returns the name of the entry.
12,ZipEntry,3,void setName(String name),False,NULL
12,ZipEntry,4,long getSize(),True,Returns the uncompressed size of the entry data.
12,ZipEntry,5,void setSize(long size),True,Sets the uncompressed size of the entry data.
12,ZipEntry,6,long getCompressedSize(),True,Returns the size of the compressed entry data.
12,ZipEntry,7,void setCompressedSize(long size),True,Sets the size of the compressed entry data.
12,ZipEntry,8,long getCrc(),True,Returns the CRC-32 checksum of the uncompressed entry data.
12,ZipEntry,9,void setCrc(long crc),True,Sets the CRC-32 checksum of the uncompressed entry data.
12,ZipEntry,10,long getMethod(),False,NULL
12,ZipEntry,11,void setMethod(long method),False,NULL
12,ZipEntry,12,long getTime(),True,Returns the last modification time of the entry.
12,ZipEntry,13,void setTime(long time),True,Sets the last modification time of the entry.
12,ZipEntry,14,long getExtraField(),False,NULL
12,ZipEntry,15,void setExtraField(byte[] extra),False,NULL
12,ZipEntry,16,long getComment(),False,NULL
12,ZipEntry,17,void setComment(String comment),True,Sets the optional comment string for the entry.
12,ZipEntry,18,boolean isDirectory(),True,Returns true if this is a directory entry.
12,ZipEntry,19,void setDirectory(boolean dir),False,NULL
12,ZipEntry,20,boolean isUnicodeText(),False,NULL
12,ZipEntry,21,void setUnicodeText(boolean unicode),False,NULL
12,ZipEntry,22,long getDiskNumberStart(),False,NULL
12,ZipEntry,23,void setDiskNumberStart(long disk),False,NULL
12,ZipEntry,24,long getInternalAttributes(),False,NULL
12,ZipEntry,25,void setInternalAttributes(long attr),False,NULL
12,ZipEntry,26,long getExternalAttributes(),False,NULL
12,ZipEntry,27,void setExternalAttributes(long attr),False,NULL
12,ZipEntry,28,long getHeaderOffset(),False,NULL
12,ZipEntry,29,void setHeaderOffset(long offset),False,NULL
12,ZipEntry,30,long getCompressedSize(),True,Returns the size of the compressed entry data.
12,ZipEntry,31,void setCompressedSize(long size),True,Sets the size of the compressed entry data.
12,ZipEntry,32,long getLocalHeaderOffset(),False,NULL
12,ZipEntry,33,void setLocalHeaderOffset(long offset),False,NULL
12,ZipEntry,34,long getDiskNumberStart(),False,NULL
12,ZipEntry,35,void setDiskNumberStart(long disk),False,NULL
12,ZipEntry,36,long getInternalAttributes(),False,NULL
12,ZipEntry,37,void setInternalAttributes(long attr),False,NULL
12,ZipEntry,38,long getExternalAttributes(),False,NULL
12,ZipEntry,39,void setExternalAttributes(long attr),False,NULL
12,ZipEntry,40,long getHeaderOffset(),False,NULL
12,ZipEntry,41,void setHeaderOffset(long offset),False,NULL
12,ZipEntry,42,long getCompressedSize(),True,Returns the size of the compressed entry data.
12,ZipEntry,43,void setCompressedSize(long size),True,Sets the size of the compressed entry data.
12,ZipEntry,44,long getLocalHeaderOffset(),False,NULL
12,ZipEntry,45,void setLocalHeaderOffset(long offset),False,NULL
13,ZipFile,1,ZipFile(File file),False,NULL
13,ZipFile,2,"ZipFile(File file, ZipFile$OpenMode mode)",False,NULL
13,ZipFile,3,ZipFile(String name),False,NULL
13,ZipFile,4,"ZipFile(String name, ZipFile$OpenMode mode)",False,NULL
13,ZipFile,5,ZipEntry getEntry(String name),True,"Returns the zip file entry for the specified name, or null if not found."
13,ZipFile,6,Enumeration<? extends ZipEntry> entries(),True,Returns an enumeration of the ZIP file entries.
13,ZipFile,7,InputStream getInputStream(ZipEntry e),True,Returns an input stream for reading the contents of the specified zip file entry.
13,ZipFile,8,ZipOutputStream(OutputStream out),False,NULL
13,ZipFile,9,void putNextEntry(ZipEntry e),False,NULL
13,ZipFile,10,void closeEntry(),False,NULL
13,ZipFile,11,void close(),True,Closes the ZIP file.
13,ZipFile,12,"void write(byte[] b, int off, int len)",False,NULL
13,ZipFile,13,void finish(),False,NULL
13,ZipFile,14,void write(int b),False,NULL
13,ZipFile,15,void write(byte[] b),False,NULL
14,ZipInputStream,1,ZipInputStream(InputStream in),False,NULL
14,ZipInputStream,2,int read(),False,NULL
14,ZipInputStream,3,int read(byte[] b),False,NULL
14,ZipInputStream,4,"int read(byte[] b, int off, int len)",True,Reads from the current ZIP entry into an array of bytes.
14,ZipInputStream,5,void close(),True,Closes this input stream and releases any system resources associated with the stream.
15,ZipOutputStream,1,ZipOutputStream(OutputStream out),False,NULL
15,ZipOutputStream,2,void putNextEntry(ZipEntry e),True,Begins writing a new ZIP file entry and positions the stream to the start of the entry data.
15,ZipOutputStream,3,void closeEntry(),True,Closes the current ZIP entry and positions the stream for writing the next entry.
15,ZipOutputStream,4,"void write(byte[] b, int off, int len)",True,Writes an array of bytes to the current ZIP entry data.
15,ZipOutputStream,5,void close(),True,Closes the ZIP output stream as well as the stream being filtered.
