Sample: 0 CertPathTrustManagerParameters
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class A wrapper for CertPathParameters.

@@ Instruction
I want to use javax.net.ssl.CertPathTrustManagerParameters package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `CertPathTrustManagerParameters()`: This is the constructor of the class.

2. `getTrustManagers()`: This method returns an array of TrustManager objects.

3. `getCheckEndEntity()`: This method returns a boolean value indicating whether the end-entity certificate should be checked.

4. `getCheckCRLs()`: This method returns a boolean value indicating whether the certificate revocation lists (CRLs) should be checked.

5. `getCheckRevocation()`: This method returns a boolean value indicating whether the certificate revocation should be checked.
================================================================

Sample: 1 ExtendedSSLSession
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Extends the SSLSession interface to support additional session attributes.

@@ Instruction
I want to use javax.net.ssl.ExtendedSSLSession package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getCipherSuite()`: This method returns the cipher suite string for this session.

2. `getPeerCertificates()`: This method returns the peer's certificates.

3. `getPeerCertificateChain()`: This method returns the peer's certificate chain.

4. `getPeerPrincipal()`: This method returns the peer's principal.

5. `getRequestedServerNames()`: This method returns the requested server names.

6. `getRequestedSessionId()`: This method returns the requested session ID.

7. `getRequestedTLSVersions()`: This method returns the requested TLS versions.

8. `getRequestedCipherSuites()`: This method returns the requested cipher suites.

9. `getRequestedExtensions()`: This method returns the requested extensions.

10. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

11. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

12. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

13. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

14. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

15. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

16. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

17. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

18. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

19. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.

20. `getRequestedApplicationProtocols()`: This method returns the requested application protocols.
================================================================

Sample: 2 HandshakeCompletedEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This event indicates that an SSL handshake completed on a given SSL connection.

@@ Instruction
I want to use javax.net.ssl.HandshakeCompletedEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `HandshakeCompletedEvent(SSLSocket sslSocket)`: This constructor creates a new instance of HandshakeCompletedEvent.

2. `SSLSocket getSSLSocket()`: This method returns the SSLSocket associated with this event.

3. `String getCipherSuite()`: This method returns the cipher suite that was negotiated during the handshake.

4. `String getLocalPrincipal()`: This method returns the local principal associated with the handshake.

5. `String getRemotePrincipal()`: This method returns the remote principal associated with the handshake.

6. `String getLocalCertificates()`: This method returns the local certificate chain associated with the handshake.

7. `String getRemoteCertificates()`: This method returns the remote certificate chain associated with the handshake.

8. `String getLocalCertificate()`: This method returns the local certificate associated with the handshake.

9. `String getRemoteCertificate()`: This method returns the remote certificate associated with the handshake.

10. `String getLocalCertificateType()`: This method returns the local certificate type associated with the handshake.

11. `String getRemoteCertificateType()`: This method returns the remote certificate type associated with the handshake.

12. `String getLocalCertificateKeyType()`: This method returns the local certificate key type associated with the handshake.

13. `String getRemoteCertificateKeyType()`: This method returns the remote certificate key type associated with the handshake.

14. `String getLocalCertificateKey()`: This method returns the local certificate key associated with the handshake.

15. `String getRemoteCertificateKey()`: This method returns the remote certificate key associated with the handshake.

16. `String getLocalCertificateSerialNumber()`: This method returns the local certificate serial number associated with the handshake.

17. `String getRemoteCertificateSerialNumber()`: This method returns the remote certificate serial number associated with the handshake.

18. `String getLocalCertificateValidNotBeforeDate()`: This method returns the local certificate valid not before date associated with the handshake.

19. `String getRemoteCertificateValidNotBeforeDate()`: This method returns the remote certificate valid not before date associated with the handshake.

20. `String getLocalCertificateValidNotAfterDate()`: This method returns the local certificate valid not after date associated with the handshake.

21. `String getRemoteCertificateValidNotAfterDate()`: This method returns the remote certificate valid not after date associated with the handshake.

22. `String getLocalCertificateIssuerDN()`: This method returns the local certificate issuer DN associated with the handshake.

23. `String getRemoteCertificateIssuerDN()`: This method returns the remote certificate issuer DN associated with the handshake.

24. `String getLocalCertificateSubjectDN()`: This method returns the local certificate subject DN associated with the handshake.

25. `String getRemoteCertificateSubjectDN()`: This method returns the remote certificate subject DN associated with the handshake.
================================================================

Sample: 3 HttpsURLConnection
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class HttpsURLConnection extends HttpURLConnection with support for https-specific features.

@@ Instruction
I want to use javax.net.ssl.HttpsURLConnection package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `setSSLSocketFactory(SSLSocketFactory factory)`: This method sets the SSLSocketFactory to use for creating SSLSockets.

2. `setHostnameVerifier(HostnameVerifier verifier)`: This method sets the HostnameVerifier to use for verifying the server's hostname.

3. `setDefaultHostnameVerifier(HostnameVerifier verifier)`: This method sets the default HostnameVerifier to use for verifying the server's hostname.

4. `setDefaultSSLSocketFactory(SSLSocketFactory factory)`: This method sets the default SSLSocketFactory to use for creating SSLSockets.

5. `setRequestMethod(String method)`: This method sets the request method to be used when sending the request to the server.
================================================================

Sample: 4 KeyManagerFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class acts as a factory for key managers based on a source of key material.

@@ Instruction
I want to use javax.net.ssl.KeyManagerFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `KeyManagerFactory()`: This is the constructor of the KeyManagerFactory class.

2. `init(KeyStore keystore, char[] password)`: This method initializes the KeyManagerFactory with the specified KeyStore and password.

3. `init(KeyStore keystore, char[] password, SecureRandom random)`: This method initializes the KeyManagerFactory with the specified KeyStore, password, and SecureRandom.

4. `getKeyManagers()`: This method returns an array of KeyManager objects.

5. `getAlgorithm()`: This method returns the name of the algorithm this KeyManagerFactory is configured to use.
================================================================

Sample: 5 KeyManagerFactorySpi
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class defines the Service Provider Interface (SPI) for the KeyManagerFactory class.

@@ Instruction
I want to use javax.net.ssl.KeyManagerFactorySpi package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `KeyManagerFactorySpi()`: This is the constructor of the KeyManagerFactorySpi class.

2. `init(KeyStore ks)`: This method initializes the KeyManagerFactorySpi object with the specified KeyStore.

3. `getKeyManagers()`: This method returns an array of KeyManager objects.

4. `getAlgorithm()`: This method returns the name of the algorithm.

5. `engineInit(KeyStore ks, char[] password)`: This method initializes the KeyManagerFactorySpi object with the specified KeyStore and password.
================================================================

Sample: 6 KeyStoreBuilderParameters
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.

@@ Instruction
I want to use javax.net.ssl.KeyStoreBuilderParameters package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `KeyStoreBuilderParameters(KeyStore.Builder[] keyStoreBuilders)`: This is the constructor of the class. It takes an array of KeyStore.Builder objects as a parameter.

2. `KeyStore.Builder[] getKeyStoreBuilders()`: This method returns an array of KeyStore.Builder objects.

3. `void setKeyStoreBuilders(KeyStore.Builder[] keyStoreBuilders)`: This method sets the array of KeyStore.Builder objects.

4. `int size()`: This method returns the number of KeyStore.Builder objects in the array.

5. `KeyStore.Builder get(int index)`: This method returns the KeyStore.Builder object at the specified index in the array.
================================================================

Sample: 7 SNIHostName
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Instances of this class represent a server name of type host_name in a Server Name Indication (SNI) extension.

@@ Instruction
I want to use javax.net.ssl.SNIHostName package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public SNIHostName(String hostName)`: This constructor creates a new SNIHostName instance with the specified host name.

2. `public String getHostName()`: This method returns the host name of this SNIHostName instance.

3. `public boolean equals(Object obj)`: This method compares the specified object with this SNIHostName for equality.

4. `public int hashCode()`: This method returns the hash code value for this SNIHostName.

5. `public String toString()`: This method returns a string representation of this SNIHostName.
================================================================

Sample: 8 SNIMatcher
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Instances of this class represent a matcher that performs match operations on an SNIServerName instance.

@@ Instruction
I want to use javax.net.ssl.SNIMatcher package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean matches(SNIServerName serverName)`: This method checks if the server name matches the criteria defined by the matcher.

2. `boolean matches(String hostname)`: This method checks if the hostname matches the criteria defined by the matcher.

3. `boolean matches(String[] hostnames)`: This method checks if any of the hostnames in the array matches the criteria defined by the matcher.

4. `boolean matches(List<String> hostnames)`: This method checks if any of the hostnames in the list matches the criteria defined by the matcher.

5. `boolean matches(String[][] hostnameMappings)`: This method checks if any of the hostname mappings in the array matches the criteria defined by the matcher.
================================================================

Sample: 9 SNIServerName
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Instances of this class represent a server name in a Server Name Indication (SNI) extension.

@@ Instruction
I want to use javax.net.ssl.SNIServerName package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean equals(Object obj)`: Compares the specified object with this list for equality.
2. `int hashCode()`: Returns the hash code value for this list.
3. `String getType()`: Returns the type of this server name.
4. `String getValue()`: Returns the value of this server name.
5. `String toString()`: Returns a string representation of this server name.
================================================================

Sample: 10 SSLContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or SSLEngines.

@@ Instruction
I want to use javax.net.ssl.SSLContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLContext getInstance(String protocol)`: This method returns an SSLContext object that implements the specified protocol.

2. `SSLContext getInstance(String protocol, String provider)`: This method returns an SSLContext object that implements the specified protocol and provider.

3. `SSLContext getInstance(String protocol, Provider provider)`: This method returns an SSLContext object that implements the specified protocol and provider.

4. `SSLContext getInstance(String protocol, String provider, SecureRandom random)`: This method returns an SSLContext object that implements the specified protocol, provider, and random number generator.

5. `SSLContext getInstance(String protocol, Provider provider, SecureRandom random)`: This method returns an SSLContext object that implements the specified protocol, provider, and random number generator.
================================================================

Sample: 11 SSLContextSpi
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class defines the Service Provider Interface (SPI) for the SSLContext class.

@@ Instruction
I want to use javax.net.ssl.SSLContextSpi package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLContextSpi()`: This is the constructor of the SSLContextSpi class.

2. `void init(KeyManager[] km, TrustManager[] tm, SecureRandom sr)`: This method initializes the SSLContextSpi object with the specified KeyManager and TrustManager arrays, and the specified SecureRandom object.

3. `SSLContextSpi copy()`: This method returns a copy of this SSLContextSpi object.

4. `SSLContext createSSLContext()`: This method creates a new SSLContext object.

5. `SSLEngine createSSLEngine()`: This method creates a new SSLEngine object.
================================================================

Sample: 12 SSLEngine
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class A class which enables secure communications using protocols such as the Secure Sockets Layer (SSL) or IETF RFC 2246 "Transport Layer Security" (TLS) protocols, but is transport independent.

@@ Instruction
I want to use javax.net.ssl.SSLEngine package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLEngine()`: This is a constructor of the SSLEngine class. It creates a new SSLEngine instance.

2. `setUseClientMode(boolean mode)`: This method sets the mode of the SSLEngine. If true, the SSLEngine will act as a client. If false, the SSLEngine will act as a server.

3. `beginHandshake()`: This method starts the handshake process.

4. `getSession()`: This method returns the SSLSession associated with this SSLEngine.

5. `getHandshakeStatus()`: This method returns the current handshake status of the SSLEngine.

6. `getApplicationProtocol()`: This method returns the application protocol selected by the peer during the handshake.

7. `getEnabledProtocols()`: This method returns an array of strings containing the names of the enabled protocols.

8. `getEnabledCipherSuites()`: This method returns an array of strings containing the names of the enabled cipher suites.

9. `getNeedClientAuth()`: This method returns true if the client must authenticate itself to the server.

10. `getNeedServerAuth()`: This method returns true if the server must authenticate itself to the client.

11. `getWantClientAuth()`: This method returns true if the client wants to authenticate itself to the server.

12. `getWantServerAuth()`: This method returns true if the server wants to authenticate itself to the client.

13. `getPeerCertificates()`: This method returns an array of certificates presented by the peer.

14. `getLocalCertificate()`: This method returns the local certificate.

15. `getLocalPrincipal()`: This method returns the local principal.

16. `getPeerPrincipal()`: This method returns the peer principal.

17. `getSessionContext()`: This method returns the session context.

18. `getApplicationProtocolSelector()`: This method returns the application protocol selector.

19. `getDelegatedCredentials()`: This method returns the delegated credentials.

20. `getDelegatedPrincipal()`: This method returns the delegated principal.

21. `getHandshakeApplicationProtocol()`: This method returns the handshake application protocol.

22. `getHandshakeApplicationProtocolSelector()`: This method returns the handshake application protocol selector.

23. `getHandshakeApplicationProtocolNegotiated()`: This method returns true if the handshake application protocol negotiated.

24. `getHandshakeApplicationProtocolNegotiation()`: This method returns the handshake application protocol negotiation.

25. `getHandshakeApplicationProtocolSelectorResult()`: This method returns the handshake application protocol selector result.

26. `getHandshakeApplicationProtocolNegotiationResult()`: This method returns the handshake application protocol negotiation result.

27. `getHandshakeApplicationProtocolSelectorResult()`: This method returns the handshake application protocol selector result.

28. `getHandshakeApplicationProtocolNegotiationResult()`: This method returns the handshake application protocol negotiation result.

29. `getHandshakeApplicationProtocolNegotiationResult()`: This method returns the handshake application protocol negotiation result.

30. `getHandshakeApplicationProtocolNegotiationResult()`: This method returns the handshake application protocol negotiation result.
================================================================

Sample: 13 SSLEngineResult
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class An encapsulation of the result state produced by SSLEngine I/O calls.

@@ Instruction
I want to use javax.net.ssl.SSLEngineResult package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isValid()`: This method returns true if the result state is valid.

2. `HandshakeStatus getHandshakeStatus()`: This method returns the handshake status.

3. `HandshakeStatus getStatus()`: This method returns the status of the handshake.

4. `boolean isCipherSuiteNegotiated()`: This method returns true if the cipher suite was negotiated.

5. `boolean isApplicationData()`: This method returns true if the result state is application data.

6. `boolean isEmpty()`: This method returns true if the result state is empty.

7. `boolean isTruncated()`: This method returns true if the result state is truncated.

8. `boolean isConsumed()`: This method returns true if the result state is consumed.

9. `boolean isBuilt()`: This method returns true if the result state is built.

10. `boolean isNeedMoreData()`: This method returns true if the result state needs more data.

11. `boolean isNeedWrite()`: This method returns true if the result state needs to be written.

12. `boolean isNeedRead()`: This method returns true if the result state needs to be read.

13. `boolean isNeedTrafficUpdate()`: This method returns true if the result state needs traffic update.

14. `boolean isNeedClientAuth()`: This method returns true if the result state needs client authentication.

15. `boolean isNeedSessionTicket()`: This method returns true if the result state needs session ticket.

16. `boolean isNeedSessionTicketExtension()`: This method returns true if the result state needs session ticket extension.

17. `boolean isNeedSessionTicketKey()`: This method returns true if the result state needs session ticket key.

18. `boolean isNeedSessionTicketSignature()`: This method returns true if the result state needs session ticket signature.

19. `boolean isNeedSessionTicketSignatureAndKey()`: This method returns true if the result state needs session ticket signature and key.

20. `boolean isNeedSessionTicketSignatureAndKeyExtension()`: This method returns true if the result state needs session ticket signature and key extension.

21. `boolean isNeedSessionTicketSignatureAndKeyExtensionAndTicket()`: This method returns true if the result state needs session ticket signature and key extension and ticket.

22. `boolean isNeedSessionTicketSignatureAndKeyExtensionAndTicketExtension()`: This method returns true if the result state needs session ticket signature and key extension and ticket extension.

23. `boolean isNeedSessionTicketSignatureAndKeyExtensionAndTicketExtensionAndTicket()`: This method returns true if the result state needs session ticket signature and key extension and ticket extension and ticket.

24. `boolean isNeedSessionTicketSignatureAndKeyExtensionAndTicketExtensionAndTicketExtension()`: This method returns true if the result state needs session ticket signature and key extension and ticket extension and ticket extension.

25. `boolean isNeedSessionTicketSignatureAndKeyExtensionAndTicketExtensionAndTicketExtensionAndTicket()`: This method returns true if the result state needs session ticket signature and key extension and ticket extension and ticket extension and ticket.
================================================================

Sample: 14 SSLParameters
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Encapsulates parameters for an SSL/TLS connection.

@@ Instruction
I want to use javax.net.ssl.SSLParameters package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLParameters()`: This is a constructor of the SSLParameters class. It initializes a new SSLParameters object.

2. `setCipherSuites(String[] cipherSuites)`: This method sets the cipher suites that the client will offer to the server.

3. `setProtocols(String[] protocols)`: This method sets the protocols that the client will offer to the server.

4. `setNeedClientAuth(boolean needClientAuth)`: This method sets whether the client must authenticate itself to the server.

5. `setWantClientAuth(boolean wantClientAuth)`: This method sets whether the client wants to authenticate itself to the server.

6. `setUseClientMode(boolean useClientMode)`: This method sets whether the SSLParameters object is in client mode.

7. `setUseServerMode(boolean useServerMode)`: This method sets whether the SSLParameters object is in server mode.

8. `setWantServerAuth(boolean wantServerAuth)`: This method sets whether the server wants to authenticate the client.

9. `setNeedServerAuth(boolean needServerAuth)`: This method sets whether the server must authenticate the client.

10. `setWantClientAuth(boolean wantClientAuth)`: This method sets whether the client wants to authenticate itself to the server.

11. `setNeedClientAuth(boolean needClientAuth)`: This method sets whether the client must authenticate itself to the server.

12. `setUseClientMode(boolean useClientMode)`: This method sets whether the SSLParameters object is in client mode.

13. `setUseServerMode(boolean useServerMode)`: This method sets whether the SSLParameters object is in server mode.

14. `setWantServerAuth(boolean wantServerAuth)`: This method sets whether the server wants to authenticate the client.

15. `setNeedServerAuth(boolean needServerAuth)`: This method sets whether the server must authenticate the client.
================================================================

Sample: 15 SSLPermission
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class is for various network permissions.

@@ Instruction
I want to use javax.net.ssl.SSLPermission package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean implies(Permission p)`: This method checks if the specified permission is implied by this permission.

2. `boolean equals(Object obj)`: This method compares this permission with the specified object.

3. `int hashCode()`: This method returns a hash code for this permission.

4. `String getActions()`: This method returns the actions of this permission.

5. `String getName()`: This method returns the name of this permission.
================================================================

Sample: 16 SSLServerSocket
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class extends ServerSockets and provides secure server sockets using protocols such as the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.

@@ Instruction
I want to use javax.net.ssl.SSLServerSocket package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLServerSocket(int port)`: This method creates a new SSLServerSocket object and binds it to the specified port.

2. `SSLServerSocket(int port, int backlog)`: This method creates a new SSLServerSocket object and binds it to the specified port, with the specified backlog.

3. `SSLServerSocket(int port, int backlog, InetAddress bindAddr)`: This method creates a new SSLServerSocket object and binds it to the specified port, with the specified backlog, and with the specified bind address.

4. `SSLServerSocket(int port, int backlog, InetAddress bindAddr, boolean reuseAddr)`: This method creates a new SSLServerSocket object and binds it to the specified port, with the specified backlog, and with the specified bind address, and with the specified reuse address flag.

5. `SSLServerSocket(int port, int backlog, InetAddress bindAddr, boolean reuseAddr, int recvBufSize)`: This method creates a new SSLServerSocket object and binds it to the specified port, with the specified backlog, and with the specified bind address, and with the specified reuse address flag, and with the specified receive buffer size.
================================================================

Sample: 17 SSLServerSocketFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class SSLServerSocketFactorys create SSLServerSockets.

@@ Instruction
I want to use javax.net.ssl.SSLServerSocketFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLServerSocketFactory()`: This is a constructor of SSLServerSocketFactory class. It creates an SSLServerSocketFactory object.

2. `SSLServerSocketFactory(KeyManager[] km, TrustManager[] tm)`: This is a constructor of SSLServerSocketFactory class. It creates an SSLServerSocketFactory object with the specified KeyManager and TrustManager.

3. `SSLServerSocketFactory(KeyManagerFactory kmf, TrustManagerFactory tmf)`: This is a constructor of SSLServerSocketFactory class. It creates an SSLServerSocketFactory object with the specified KeyManagerFactory and TrustManagerFactory.

4. `SSLServerSocketFactory(KeyManagerFactory kmf, TrustManagerFactory tmf, SecureRandom sr)`: This is a constructor of SSLServerSocketFactory class. It creates an SSLServerSocketFactory object with the specified KeyManagerFactory, TrustManagerFactory, and SecureRandom.

5. `SSLServerSocket createServerSocket(int port)`: This method creates an SSLServerSocket object and binds it to the specified port.
================================================================

Sample: 18 SSLSessionBindingEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This event is propagated to a SSLSessionBindingListener.

@@ Instruction
I want to use javax.net.ssl.SSLSessionBindingEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getSession()`: This method returns the session associated with this event.

2. `getName()`: This method returns the name of the attribute associated with this event.

3. `getValue()`: This method returns the value of the attribute associated with this event.

4. `getClass()`: This method returns the Class object that represents the runtime class of this object.

5. `hashCode()`: This method returns a hash code value for the object.
================================================================

Sample: 19 SSLSocket
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class extends Sockets and provides secure socket using protocols such as the "Secure Sockets Layer" (SSL) or IETF "Transport Layer Security" (TLS) protocols.

@@ Instruction
I want to use javax.net.ssl.SSLSocket package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLSocket(InetAddress address, int port)`: This constructor creates an unconnected socket and then connects it to the specified address and port.

2. `SSLSocket(Socket socket, InputStream in, boolean autoClose)`: This constructor creates an SSLSocket that is connected to the specified socket.

3. `SSLSocket(Socket socket, String host, int port, boolean autoClose)`: This constructor creates an SSLSocket that is connected to the specified socket.

4. `SSLSocket(Socket socket, InputStream in, OutputStream out, boolean autoClose)`: This constructor creates an SSLSocket that is connected to the specified socket.

5. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose)`: This constructor creates an SSLSocket that is connected to the specified socket.

6. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth)`: This constructor creates an SSLSocket that is connected to the specified socket.

7. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth)`: This constructor creates an SSLSocket that is connected to the specified socket.

8. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth, boolean wantConstantTime)`: This constructor creates an SSLSocket that is connected to the specified socket.

9. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth, boolean wantConstantTime, boolean wantDeploymentProtection)`: This constructor creates an SSLSocket that is connected to the specified socket.

10. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth, boolean wantConstantTime, boolean wantDeploymentProtection, boolean wantUnrestrictedUse)`: This constructor creates an SSLSocket that is connected to the specified socket.

11. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth, boolean wantConstantTime, boolean wantDeploymentProtection, boolean wantUnrestrictedUse, boolean wantLegacySessionMgmt)`: This constructor creates an SSLSocket that is connected to the specified socket.

12. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth, boolean wantConstantTime, boolean wantDeploymentProtection, boolean wantUnrestrictedUse, boolean wantLegacySessionMgmt, boolean wantMaintainSession)`: This constructor creates an SSLSocket that is connected to the specified socket.

13. `SSLSocket(Socket socket, String host, int port, InputStream in, OutputStream out, boolean autoClose, boolean wantClientAuth, boolean wantServerAuth, boolean wantConstantTime, boolean wantDeploymentProtection, boolean wantUnrestrictedUse, boolean wantLegacySessionMgmt, boolean wantMaintainSession, boolean wantMaintainSession)`: This constructor creates an SSLSocket that is connected to the specified socket.
================================================================

Sample: 20 SSLSocketFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class SSLSocketFactorys create SSLSockets.

@@ Instruction
I want to use javax.net.ssl.SSLSocketFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSLSocketFactory getDefault()`: This method returns the default SSLSocketFactory.

2. `SSLSocket createSocket(Socket socket, String host, int port, boolean autoClose)`: This method creates an SSLSocket that is connected to the specified host and port number.

3. `SSLSocket createSocket(String host, int port)`: This method creates an SSLSocket that is connected to the specified host and port number.

4. `SSLSocket createSocket(String host, int port, InetAddress localAddress, int localPort)`: This method creates an SSLSocket that is connected to the specified host and port number, using the specified local address and port number.

5. `SSLSocket createSocket(Socket socket, String host, int port, InetAddress localAddress, int localPort, HttpClientContext context)`: This method creates an SSLSocket that is connected to the specified host and port number, using the specified local address and port number.
================================================================

Sample: 21 StandardConstants
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Standard constants definitions

@@ Instruction
I want to use javax.net.ssl.StandardConstants package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SSL_CLIENT`: This method returns the client mode.

2. `SSL_SERVER`: This method returns the server mode.

3. `SSL_MODE_ENABLE_PARTIAL_WRITE`: This method returns the partial write mode.

4. `SSL_MODE_DISABLE_PARTIAL_WRITE`: This method returns the disable partial write mode.

5. `SSL_MODE_AUTO_RETRY`: This method returns the auto retry mode.

6. `SSL_MODE_NO_RETRY`: This method returns the no retry mode.

7. `SSL_MODE_RECORD_PROTECTION`: This method returns the record protection mode.

8. `SSL_MODE_NO_RECORD_PROTECTION`: This method returns the no record protection mode.

9. `SSL_MODE_RECORD_COMPRESSION`: This method returns the record compression mode.

10. `SSL_MODE_NO_RECORD_COMPRESSION`: This method returns the no record compression mode.

11. `SSL_MODE_RECORD_LAYERS`: This method returns the record layers mode.

12. `SSL_MODE_NO_RECORD_LAYERS`: This method returns the no record layers mode.

13. `SSL_MODE_RECORD_ATONCE`: This method returns the record at once mode.

14. `SSL_MODE_NO_RECORD_ATONCE`: This method returns the no record at once mode.

15. `SSL_MODE_RECORD_BUF_LAYERS`: This method returns the record buffer layers mode.

16. `SSL_MODE_NO_RECORD_BUF_LAYERS`: This method returns the no record buffer layers mode.

17. `SSL_MODE_RECORD_BUF_ATONCE`: This method returns the record buffer at once mode.

18. `SSL_MODE_NO_RECORD_BUF_ATONCE`: This method returns the no record buffer at once mode.

19. `SSL_MODE_RECORD_BUF_PROTECTION`: This method returns the record buffer protection mode.

20. `SSL_MODE_NO_RECORD_BUF_PROTECTION`: This method returns the no record buffer protection mode.

21. `SSL_MODE_RECORD_BUF_COMPRESSION`: This method returns the record buffer compression mode.

22. `SSL_MODE_NO_RECORD_BUF_COMPRESSION`: This method returns the no record buffer compression mode.

23. `SSL_MODE_RECORD_BUF_LAYERS`: This method returns the record buffer layers mode.

24. `SSL_MODE_NO_RECORD_BUF_LAYERS`: This method returns the no record buffer layers mode.

25. `SSL_MODE_RECORD_BUF_ATONCE`: This method returns the record buffer at once mode.

26. `SSL_MODE_NO_RECORD_BUF_ATONCE`: This method returns the no record buffer at once mode.

27. `SSL_MODE_RECORD_BUF_PROTECTION`: This method returns the record buffer protection mode.

28. `SSL_MODE_NO_RECORD_BUF_PROTECTION`: This method returns the no record buffer protection mode.

29. `SSL_MODE_RECORD_BUF_COMPRESSION`: This method returns the record buffer compression mode.

30. `SSL_MODE_NO_RECORD_BUF_COMPRESSION`: This method returns the no record buffer compression mode.
================================================================

Sample: 22 TrustManagerFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class acts as a factory for trust managers based on a source of trust material.

@@ Instruction
I want to use javax.net.ssl.TrustManagerFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `TrustManagerFactory getInstance(String algorithm)`: This method returns a TrustManagerFactory object that implements the specified trust manager factory algorithm.

2. `TrustManagerFactory getInstance(String algorithm, String provider)`: This method returns a TrustManagerFactory object that implements the specified trust manager factory algorithm, using the specified provider.

3. `TrustManagerFactory getInstance(String algorithm, Provider provider)`: This method returns a TrustManagerFactory object that implements the specified trust manager factory algorithm, using the specified provider.

4. `String[] getSupportedAlgorithms()`: This method returns an array of the algorithm names supported by this factory.

5. `Provider getProvider()`: This method returns the Provider object for this factory.
================================================================

Sample: 23 TrustManagerFactorySpi
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class This class defines the Service Provider Interface (SPI) for the TrustManagerFactory class.

@@ Instruction
I want to use javax.net.ssl.TrustManagerFactorySpi package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `TrustManagerFactorySpi()`: This is the constructor of the TrustManagerFactorySpi class.

2. `init(KeyStore ks)`: This method initializes the TrustManagerFactorySpi object with the specified KeyStore.

3. `getTrustManagers()`: This method returns an array of TrustManager objects.

4. `engineGetTrustManagers()`: This method is used to get the TrustManagers.

5. `engineInit(KeyStore ks)`: This method is used to initialize the TrustManagerFactorySpi object with the specified KeyStore.
================================================================

Sample: 24 X509ExtendedKeyManager
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Abstract class that provides for extension of the X509KeyManager interface.

@@ Instruction
I want to use javax.net.ssl.X509ExtendedKeyManager package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getClientAliases(String keyType, Principal[] issuers)`: This method returns an array of Strings containing the aliases of the keys that the client will use to identify itself to the server.

2. `getServerAliases(String keyType, Principal[] issuers)`: This method returns an array of Strings containing the aliases of the keys that the server will use to identify itself to the client.

3. `chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket)`: This method returns the alias of the key to be used by the client.

4. `chooseServerAlias(String keyType, Principal[] issuers, Socket socket)`: This method returns the alias of the key to be used by the server.

5. `getCertificateChain(String alias)`: This method returns the certificate chain for the specified alias.
================================================================

Sample: 25 X509ExtendedTrustManager
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes for the secure socket package.
Here is the description of the class Extensions to the X509TrustManager interface to support SSL/TLS connection sensitive trust management.

@@ Instruction
I want to use javax.net.ssl.X509ExtendedTrustManager package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void checkClientTrusted(X509Certificate[] chain, String authType)`: This method checks that the client is trusted.

2. `void checkServerTrusted(X509Certificate[] chain, String authType)`: This method checks that the server is trusted.

3. `X509Certificate[] getAcceptedIssuers()`: This method returns an array of CertificateAuthority issuers that are trusted for this purpose.

4. `void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket)`: This method checks that the client is trusted.

5. `void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket)`: This method checks that the server is trusted.

6. `void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine)`: This method checks that the client is trusted.

7. `void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine)`: This method checks that the server is trusted.

8. `void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal)`: This method checks that the client is trusted.

9. `void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal)`: This method checks that the server is trusted.

10. `void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal, CertPath certPath)`: This method checks that the client is trusted.

11. `void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal, CertPath certPath)`: This method checks that the server is trusted.
================================================================

