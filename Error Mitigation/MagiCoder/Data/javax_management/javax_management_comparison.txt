Sample: 0 Attribute
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents an MBean attribute by associating its name with its value.

@@ Instruction
I want to use javax.management.Attribute package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Attribute(String name, Object value)`: This constructor creates an attribute with the specified name and value.

2. `String getName()`: This method returns the name of this attribute.

3. `Object getValue()`: This method returns the value of this attribute.

4. `void setValue(Object value)`: This method sets the value of this attribute.

5. `boolean equals(Object obj)`: This method compares this attribute with the specified object for equality.

6. `int hashCode()`: This method returns the hash code value for this attribute.

7. `String toString()`: This method returns a string representation of this attribute.
================================================================

Sample: 1 AttributeChangeNotification
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Provides definitions of the attribute change notifications sent by MBeans.

@@ Instruction
I want to use javax.management.AttributeChangeNotification package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getAttributeName()`: This method returns the name of the attribute that changed.
2. `getAttributeType()`: This method returns the type of the attribute that changed.
3. `getNewValue()`: This method returns the new value of the attribute.
4. `getOldValue()`: This method returns the old value of the attribute.
5. `getTimeStamp()`: This method returns the time at which the attribute changed.
================================================================

Sample: 2 AttributeChangeNotificationFilter
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class This class implements of the NotificationFilter interface for the attribute change notification.

@@ Instruction
I want to use javax.management.AttributeChangeNotificationFilter package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isNotificationEnabled(Notification n)`: This method checks if the notification is enabled.

2. `boolean isTypeFilterEnabled(String type)`: This method checks if the type filter is enabled.

3. `boolean isAttributeFilterEnabled(String attribute)`: This method checks if the attribute filter is enabled.

4. `boolean isOldValueFilterEnabled(Object oldValue)`: This method checks if the old value filter is enabled.

5. `boolean isNewValueFilterEnabled(Object newValue)`: This method checks if the new value filter is enabled.
================================================================

Sample: 3 AttributeList
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents a list of values for attributes of an MBean.

@@ Instruction
I want to use javax.management.AttributeList package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(Attribute attribute)`: This method appends the specified attribute to the end of this list.
2. `void add(int index, Attribute element)`: This method inserts the specified attribute at the specified position in this list.
3. `boolean addAll(AttributeList c)`: This method appends all of the attributes in the specified list to the end of this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified attribute.
5. `Attribute get(int index)`: This method returns the attribute at the specified position in this list.

Note: The methods `add(Attribute attribute)`, `add(int index, Attribute element)`, `addAll(AttributeList c)`, `get(int index)` are used to manipulate the AttributeList. The method `contains(Object o)` is used to check if the AttributeList contains a specific attribute.
================================================================

Sample: 4 AttributeValueExp
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents attributes used as arguments to relational constraints.

@@ Instruction
I want to use javax.management.AttributeValueExp package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
2. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are also contained in the specified collection.
5. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
================================================================

Sample: 5 DefaultLoaderRepository
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Use MBeanServer.getClassLoaderRepository() instead.

@@ Instruction
I want to use javax.management.DefaultLoaderRepository package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `E get(int index)`: This method returns the element at the specified position in this list.
7. `int indexOf(Object o)`: This method returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element.
8. `boolean isEmpty()`: This method returns true if this list contains no elements.
9. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
10. `E remove(int index)`: This method removes the element at the specified position in this list.
11. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
12. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are also contained in the specified collection.
13. `int size()`: This method returns the number of elements in this list.
14. `Object[] toArray()`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element).
15. `<T> T[] toArray(T[] a)`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
16. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
17. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
18. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
19. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
20. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
================================================================

Sample: 6 ImmutableDescriptor
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class An immutable descriptor.

@@ Instruction
I want to use javax.management.ImmutableDescriptor package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ImmutableDescriptor getDescriptor()`: This method returns the descriptor of the immutable descriptor.

2. `Object getValue(String key)`: This method returns the value of the specified key in the immutable descriptor.

3. `boolean containsKey(String key)`: This method returns true if the immutable descriptor contains the specified key.

4. `Set<String> keySet()`: This method returns a set view of the keys contained in this map.

5. `int size()`: This method returns the number of key-value mappings in this map.
================================================================

Sample: 7 JMX
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Static methods from the JMX API.

@@ Instruction
I want to use javax.management.JMX package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerConnection connect(MBeanServerConnection mbs, String[] names)`: This method connects to the MBean server.

2. `ObjectInstance getMBeanCount(ObjectName name)`: This method returns the number of MBeans in the domain.

3. `ObjectInstance getMBeanInfo(ObjectName name)`: This method returns the MBean information.

4. `ObjectInstance getAttribute(ObjectName name, String attribute)`: This method returns the value of the specified attribute of the MBean.

5. `void setAttribute(ObjectName name, Attribute attribute)`: This method sets the value of the specified attribute of the MBean.

6. `ObjectInstance invoke(ObjectName name, String actionName, Object[] params, String[] signature)`: This method invokes the specified operation on the MBean.

7. `ObjectInstance isInstanceOf(ObjectName name, String className)`: This method checks if the MBean is an instance of the specified class.

8. `ObjectInstance queryNames(ObjectName name, String query)`: This method queries the MBean server for MBeans.

9. `ObjectInstance queryMBeans(ObjectName name, QueryExp query)`: This method queries the MBean server for MBeans.

10. `ObjectInstance registerMBean(ObjectName name, MBean mbean)`: This method registers an MBean with the MBean server.

11. `ObjectInstance unregisterMBean(ObjectName name)`: This method unregisters an MBean with the MBean server.

12. `ObjectInstance getDefaultDomain()`: This method returns the default domain.

13. `ObjectInstance getMBeanCount(ObjectName name)`: This method returns the number of MBeans in the domain.

14. `ObjectInstance getMBeanInfo(ObjectName name)`: This method returns the MBean information.

15. `ObjectInstance getAttribute(ObjectName name, String attribute)`: This method returns the value of the specified attribute of the MBean.

16. `void setAttribute(ObjectName name, Attribute attribute)`: This method sets the value of the specified attribute of the MBean.

17. `ObjectInstance invoke(ObjectName name, String actionName, Object[] params, String[] signature)`: This method invokes the specified operation on the MBean.

18. `ObjectInstance isInstanceOf(ObjectName name, String className)`: This method checks if the MBean is an instance of the specified class.

19. `ObjectInstance queryNames(ObjectName name, String query)`: This method queries the MBean server for MBeans.

20. `ObjectInstance queryMBeans(ObjectName name, QueryExp query)`: This method queries the MBean server for MBeans.

21. `ObjectInstance registerMBean(ObjectName name, MBean mbean)`: This method registers an MBean with the MBean server.

22. `ObjectInstance unregisterMBean(ObjectName name)`: This method unregisters an MBean with the MBean server.

23. `ObjectInstance getDefaultDomain()`: This method returns the default domain.

24. `ObjectInstance getMBeanCount(ObjectName name)`: This method returns the number of MBeans in the domain.

25. `ObjectInstance getMBeanInfo(ObjectName name)`: This method returns the MBean information.
================================================================

Sample: 8 MBeanAttributeInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Describes an MBean attribute exposed for management.

@@ Instruction
I want to use javax.management.MBeanAttributeInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getType()`: This method returns the type of the attribute.
2. `getDescription()`: This method returns a description of the attribute.
3. `getWritable()`: This method returns a boolean indicating whether the attribute is writable.
4. `getReadable()`: This method returns a boolean indicating whether the attribute is readable.
5. `getIs()`: This method returns a boolean indicating whether the attribute is is.

Each method has a specific return type and parameters as described above.
================================================================

Sample: 9 MBeanConstructorInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Describes a constructor exposed by an MBean.

@@ Instruction
I want to use javax.management.MBeanConstructorInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getParameterTypes()`: This method returns an array of Class objects that represent the types of the parameters for the constructor.

2. `getSignature()`: This method returns a string that describes the signature of the constructor.

3. `getClassName()`: This method returns the fully qualified name of the class that declares the constructor.

4. `getDescription()`: This method returns a description of the constructor.

5. `getMBeanParameterInfo()`: This method returns an array of MBeanParameterInfo objects that describe the parameters for the constructor.
================================================================

Sample: 10 MBeanFeatureInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Provides general information for an MBean descriptor object.

@@ Instruction
I want to use javax.management.MBeanFeatureInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isQueryable()`: This method returns true if the MBean is queryable.
2. `boolean isWritable()`: This method returns true if the MBean is writable.
3. `boolean isWritable(String attributeName)`: This method returns true if the specified attribute is writable.
4. `boolean isReadable()`: This method returns true if the MBean is readable.
5. `boolean isReadable(String attributeName)`: This method returns true if the specified attribute is readable.
6. `boolean isNotifiable()`: This method returns true if the MBean is notifiable.
7. `boolean isNotifiable(String attributeName)`: This method returns true if the specified attribute is notifiable.
8. `boolean isIs()`: This method returns true if the MBean is is.
9. `boolean isIs(String attributeName)`: This method returns true if the specified attribute is is.
10. `boolean isIsQueryable()`: This method returns true if the MBean is is queryable.
11. `boolean isIsWritable()`: This method returns true if the MBean is is writable.
12. `boolean isIsWritable(String attributeName)`: This method returns true if the specified attribute is is writable.
13. `boolean isIsReadable()`: This method returns true if the MBean is is readable.
14. `boolean isIsReadable(String attributeName)`: This method returns true if the specified attribute is is readable.
15. `boolean isIsNotifiable()`: This method returns true if the MBean is is notifiable.
16. `boolean isIsNotifiable(String attributeName)`: This method returns true if the specified attribute is is notifiable.
17. `boolean isIsIs()`: This method returns true if the MBean is is is.
18. `boolean isIsIs(String attributeName)`: This method returns true if the specified attribute is is is.
19. `boolean isIsIsQueryable()`: This method returns true if the MBean is is is queryable.
20. `boolean isIsIsWritable()`: This method returns true if the MBean is is is writable.
21. `boolean isIsIsWritable(String attributeName)`: This method returns true if the specified attribute is is is writable.
22. `boolean isIsIsReadable()`: This method returns true if the MBean is is is readable.
23. `boolean isIsIsReadable(String attributeName)`: This method returns true if the specified attribute is is is readable.
24. `boolean isIsIsNotifiable()`: This method returns true if the MBean is is is notifiable.
25. `boolean isIsIsNotifiable(String attributeName)`: This method returns true if the specified attribute is is is notifiable.
================================================================

Sample: 11 MBeanInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Describes the management interface exposed by an MBean; that is, the set of attributes and operations which are available for management operations.

@@ Instruction
I want to use javax.management.MBeanInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getClassName()`: This method returns the name of the class that implements the MBean.

2. `getDescription()`: This method returns a description of the MBean.

3. `getMBeanParameters()`: This method returns an array of MBeanParameterInfo objects, each of which describes a parameter of the MBean.

4. `getAttributes()`: This method returns an array of MBeanAttributeInfo objects, each of which describes an attribute of the MBean.

5. `getOperations()`: This method returns an array of MBeanOperationInfo objects, each of which describes an operation of the MBean.
================================================================

Sample: 12 MBeanNotificationInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class The MBeanNotificationInfo class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification.

@@ Instruction
I want to use javax.management.MBeanNotificationInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanNotificationInfo(String notificationType, String[] notificationNames, String[] notificationTypes)`: This constructor creates a new MBeanNotificationInfo object with the specified notification type, notification names, and notification types.

2. `String getNotificationType()`: This method returns the notification type of this MBeanNotificationInfo object.

3. `String[] getNotificationNames()`: This method returns the notification names of this MBeanNotificationInfo object.

4. `String[] getNotificationTypes()`: This method returns the notification types of this MBeanNotificationInfo object.

5. `boolean equals(Object obj)`: This method compares this MBeanNotificationInfo object with the specified object for equality.

6. `int hashCode()`: This method returns the hash code value for this MBeanNotificationInfo object.
================================================================

Sample: 13 MBeanOperationInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Describes a management operation exposed by an MBean.

@@ Instruction
I want to use javax.management.MBeanOperationInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanOperationInfo getOperationInfo()`: This method returns the MBeanOperationInfo for the operation.

2. `String getName()`: This method returns the name of the operation.

3. `String getDescription()`: This method returns a description of the operation.

4. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the operation.

5. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the operation.

6. `String getMBeanOperationInfo()`: This method returns the MBeanOperationInfo for the operation.

7. `String getName()`: This method returns the name of the operation.

8. `String getDescription()`: This method returns a description of the operation.

9. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the operation.

10. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the operation.
================================================================

Sample: 14 MBeanParameterInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Describes an argument of an operation exposed by an MBean.

@@ Instruction
I want to use javax.management.MBeanParameterInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getName()`: Returns the name of the parameter.
2. `getType()`: Returns the type of the parameter.
3. `getDescription()`: Returns a description of the parameter.
4. `isMandatory()`: Returns whether the parameter is mandatory.
5. `isReadOnly()`: Returns whether the parameter is read-only.
================================================================

Sample: 15 MBeanPermission
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Permission controlling access to MBeanServer operations.

@@ Instruction
I want to use javax.management.MBeanPermission package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public boolean equals(Object obj)`: Compares the specified object with this permission for equality.
2. `public String getActions()`: Returns the actions string of this Permission object.
3. `public String getName()`: Returns the name of this Permission object.
4. `public int hashCode()`: Returns a hash code for this Permission object.
5. `public boolean implies(Permission p)`: Tests if this Permission contains all the permissions represented by the specified Permission.
================================================================

Sample: 16 MBeanServerBuilder
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class This class represents a builder that creates a default MBeanServer implementation.

@@ Instruction
I want to use javax.management.MBeanServerBuilder package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerBuilder.newMBeanServer()`: This method creates a new MBeanServer.

2. `MBeanServerBuilder.newMBeanServer(String name)`: This method creates a new MBeanServer with the specified name.

3. `MBeanServerBuilder.newMBeanServer(String name, MBeanServerBuilderCallback callback)`: This method creates a new MBeanServer with the specified name and callback.

4. `MBeanServerBuilder.newMBeanServer(MBeanServerBuilderCallback callback)`: This method creates a new MBeanServer with the specified callback.

5. `MBeanServerBuilder.newMBeanServer(String name, MBeanServerBuilderCallback callback, Object context)`: This method creates a new MBeanServer with the specified name, callback, and context.
================================================================

Sample: 17 MBeanServerDelegate
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents the MBean server from the management point of view.

@@ Instruction
I want to use javax.management.MBeanServerDelegate package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerDelegate()`: This is the constructor of the MBeanServerDelegate class.

2. `ObjectInstance registerMBean(ObjectName name, MBean mbean)`: This method registers the specified MBean with the specified name.

3. `ObjectInstance registerMBean(ObjectName name, MBean mbean, NotificationBroadcaster broadcaster)`: This method registers the specified MBean with the specified name and the specified NotificationBroadcaster.

4. `void unregisterMBean(ObjectName name)`: This method unregisters the MBean with the specified name.

5. `ObjectInstance getMBean(ObjectName name)`: This method returns the MBean with the specified name.
================================================================

Sample: 18 MBeanServerFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Provides MBean server references.

@@ Instruction
I want to use javax.management.MBeanServerFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerFactory.findMBeanServer(String)`: This method returns an MBeanServer instance that is registered with the specified name.

2. `MBeanServerFactory.createMBeanServer()`: This method creates a new MBeanServer instance.

3. `MBeanServerFactory.createMBeanServer(String)`: This method creates a new MBeanServer instance with the specified name.

4. `MBeanServerFactory.getPlatformMBeanServer()`: This method returns the platform MBeanServer.

5. `MBeanServerFactory.getDefaultMBeanServer()`: This method returns the default MBeanServer.
================================================================

Sample: 19 MBeanServerInvocationHandler
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class InvocationHandler that forwards methods in an MBean's management interface through the MBean server to the MBean.

@@ Instruction
I want to use javax.management.MBeanServerInvocationHandler package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public Object invoke(Object proxy, Method method, Object[] args)`: This method is used to invoke a method on the MBean. It takes three parameters:
   - `proxy`: The proxy instance that the method was invoked on.
   - `method`: The method that was invoked.
   - `args`: The arguments passed to the method.

2. `public Object getProxy()`: This method is used to get the proxy instance for the MBean.

3. `public Object getMBean()`: This method is used to get the MBean instance that this InvocationHandler is handling.

4. `public void setMBeanServer(MBeanServer mbs)`: This method is used to set the MBeanServer for the MBean.

5. `public MBeanServer getMBeanServer()`: This method is used to get the MBeanServer for the MBean.
================================================================

Sample: 20 MBeanServerNotification
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents a notification emitted by the MBean Server through the MBeanServerDelegate MBean.

@@ Instruction
I want to use javax.management.MBeanServerNotification package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void postNotification(Notification notification, Object handback)`: This method posts a notification to all MBeans that are registered for the notification.

2. `void postNotification(Notification notification, Object handback, ObjectName name)`: This method posts a notification to the MBean that is registered for the notification and has the specified name.

3. `void postNotification(Notification notification, Object handback, ObjectName[] names)`: This method posts a notification to the MBeans that are registered for the notification and have the specified names.

4. `void postNotification(Notification notification, Object handback, MBeanNotificationInfo[] notificationInfos)`: This method posts a notification to the MBeans that are registered for the notification and have the specified notification information.

5. `void postNotification(Notification notification, Object handback, MBeanNotificationInfo notificationInfo)`: This method posts a notification to the MBean that is registered for the notification and has the specified notification information.
================================================================

Sample: 21 MBeanServerPermission
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class A Permission to perform actions related to MBeanServers.

@@ Instruction
I want to use javax.management.MBeanServerPermission package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public MBeanServerPermission(String name, String actions)`: This constructor creates a new MBeanServerPermission object with the specified name and actions.

2. `public String getName()`: This method returns the name of this MBeanServerPermission object.

3. `public String getActions()`: This method returns the actions of this MBeanServerPermission object.

4. `public boolean implies(Subject subject)`: This method checks if the specified Subject is implied by this MBeanServerPermission object.

5. `public boolean equals(Object obj)`: This method checks if the specified Object is equal to this MBeanServerPermission object.
================================================================

Sample: 22 MBeanTrustPermission
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class This permission represents "trust" in a signer or codebase.

@@ Instruction
I want to use javax.management.MBeanTrustPermission package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public MBeanTrustPermission(String name)`: This constructor creates a new MBeanTrustPermission object with the specified name.

2. `public MBeanTrustPermission(String name, String actions)`: This constructor creates a new MBeanTrustPermission object with the specified name and actions.

3. `public String getActions()`: This method returns the actions of this MBeanTrustPermission object.

4. `public String getName()`: This method returns the name of this MBeanTrustPermission object.

5. `public boolean implies(Permission p)`: This method checks if this MBeanTrustPermission object implies the specified permission.
================================================================

Sample: 23 Notification
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class The Notification class represents a notification emitted by an MBean.

@@ Instruction
I want to use javax.management.Notification package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `NotificationType getType()`: This method returns the type of this Notification.
2. `Object getSource()`: This method returns the source of this Notification.
3. `long getSequenceNumber()`: This method returns the sequence number of this Notification.
4. `long getTimeStamp()`: This method returns the time stamp of this Notification.
5. `String getMessage()`: This method returns the message of this Notification.
================================================================

Sample: 24 NotificationBroadcasterSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Provides an implementation of NotificationEmitter interface.

@@ Instruction
I want to use javax.management.NotificationBroadcasterSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void addNotificationListener(NotificationListener listener, Object handback)`: This method adds a NotificationListener for this NotificationEmitter.

2. `void removeNotificationListener(NotificationListener listener)`: This method removes a NotificationListener from this NotificationEmitter.

3. `void sendNotification(Notification notification)`: This method sends a Notification to all the NotificationListeners of this NotificationEmitter.

4. `void removeAllNotificationListeners()`: This method removes all NotificationListeners from this NotificationEmitter.

5. `NotificationListener[] getNotificationListeners()`: This method returns an array of all NotificationListeners of this NotificationEmitter.
================================================================

Sample: 25 NotificationFilterSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Provides an implementation of the NotificationFilter interface.

@@ Instruction
I want to use javax.management.NotificationFilterSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isNotificationEnabled(Notification notification)`: This method checks if the notification is enabled.

2. `void enableNotification(Notification notification)`: This method enables the notification.

3. `void disableNotification(Notification notification)`: This method disables the notification.

4. `void enableAllNotifications()`: This method enables all notifications.

5. `void disableAllNotifications()`: This method disables all notifications.

6. `void addNotificationFilter(NotificationFilter filter, Object handback)`: This method adds a notification filter.

7. `void removeNotificationFilter(NotificationFilter filter)`: This method removes a notification filter.

8. `void removeAllNotificationFilters()`: This method removes all notification filters.

9. `Set<NotificationFilter> getNotificationFilters()`: This method returns a set of all notification filters.

10. `Set<Notification> getEnabledNotifications()`: This method returns a set of all enabled notifications.

11. `Set<Notification> getDisabledNotifications()`: This method returns a set of all disabled notifications.

12. `void enableNotification(Object notificationName)`: This method enables the notification with the specified name.

13. `void disableNotification(Object notificationName)`: This method disables the notification with the specified name.

14. `void enableAllNotifications(Object notificationType)`: This method enables all notifications of the specified type.

15. `void disableAllNotifications(Object notificationType)`: This method disables all notifications of the specified type.

16. `void enableAllNotifications(Object notificationType, Object mbeanName)`: This method enables all notifications of the specified type for the specified MBean.

17. `void disableAllNotifications(Object notificationType, Object mbeanName)`: This method disables all notifications of the specified type for the specified MBean.

18. `void enableAllNotifications(Object notificationType, Object mbeanName, Object instanceName)`: This method enables all notifications of the specified type for the specified MBean instance.

19. `void disableAllNotifications(Object notificationType, Object mbeanName, Object instanceName)`: This method disables all notifications of the specified type for the specified MBean instance.

20. `void enableAllNotifications(Object notificationType, Object mbeanName, Object instanceName, Object attributeName)`: This method enables all notifications of the specified type for the specified MBean instance attribute.

21. `void disableAllNotifications(Object notificationType, Object mbeanName, Object instanceName, Object attributeName)`: This method disables all notifications of the specified type for the specified MBean instance attribute.
================================================================

Sample: 26 ObjectInstance
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Used to represent the object name of an MBean and its class name.

@@ Instruction
I want to use javax.management.ObjectInstance package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ObjectInstance getObjectInstance()`: This method returns the ObjectInstance for this MBean.
2. `ObjectName getObjectName()`: This method returns the ObjectName for this MBean.
3. `String getClassName()`: This method returns the class name of the MBean.
4. `MBeanInfo getMBeanInfo()`: This method returns the MBeanInfo for this MBean.
5. `Object getAttribute(String attribute)`: This method returns the value of the specified attribute of the MBean.

Note: The methods `getObjectInstance()`, `getObjectName()`, `getClassName()`, and `getMBeanInfo()` do not inherent from their parent class.
================================================================

Sample: 27 ObjectName
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents the object name of an MBean, or a pattern that can match the names of several MBeans.

@@ Instruction
I want to use javax.management.ObjectName package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ObjectName(String name)`: This constructor creates an ObjectName from a string.
2. `String getCanonicalName()`: This method returns the canonical name of this ObjectName.
3. `String getKeyProperty(String key)`: This method returns the value of the specified key property.
4. `String[] getKeyPropertyNames()`: This method returns an array containing the names of the key properties.
5. `String getProperty(String key)`: This method returns the value of the specified property.
6. `String[] getPropertyNames()`: This method returns an array containing the names of the properties.
7. `String getDomain()`: This method returns the domain of this ObjectName.
8. `String getKey()`: This method returns the key of this ObjectName.
9. `String getInstance()`: This method returns the instance of this ObjectName.
10. `String getType()`: This method returns the type of this ObjectName.
11. `boolean equals(Object obj)`: This method compares this ObjectName with the specified object.
12. `int hashCode()`: This method returns the hash code value for this ObjectName.
13. `String toString()`: This method returns a string representation of this ObjectName.
================================================================

Sample: 28 Query
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Constructs query object constraints.

@@ Instruction
I want to use javax.management.Query package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
7. `E get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `boolean isEmpty()`: This method returns true if this list contains no elements.
10. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
11. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
12. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
13. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
14. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
15. `E remove(int index)`: This method removes the element at the specified position in this list.
16. `boolean removeAll(Collection<?> c)`: This method removes from this list all of its elements that are contained in the specified collection.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
19. `int size()`: This method returns the number of elements in this list.
20. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 29 QueryEval
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Allows a query to be performed in the context of a specific MBean server.

@@ Instruction
I want to use javax.management.QueryEval package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `QueryEval.evaluate(ObjectName objectName)`: This method evaluates the MBean specified by the object name.

2. `QueryEval.evaluate(ObjectName objectName, String attribute)`: This method evaluates the specified attribute of the MBean specified by the object name.

3. `QueryEval.evaluate(ObjectName objectName, String attribute, Object[] params)`: This method evaluates the specified attribute of the MBean specified by the object name with the given parameters.

4. `QueryEval.evaluate(ObjectName objectName, String attribute, Object[] params, String[] signature)`: This method evaluates the specified attribute of the MBean specified by the object name with the given parameters and signature.

5. `QueryEval.evaluate(ObjectName objectName, String attribute, Object[] params, String[] signature, String[] resultSignature)`: This method evaluates the specified attribute of the MBean specified by the object name with the given parameters, signature, and result signature.
================================================================

Sample: 30 StandardEmitterMBean
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class An MBean whose management interface is determined by reflection on a Java interface, and that emits notifications.

@@ Instruction
I want to use javax.management.StandardEmitterMBean package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method adds a listener to receive notifications.

2. `void removeNotificationListener(NotificationListener listener)`: This method removes a listener.

3. `void sendNotification(Notification notification)`: This method sends a notification to all the registered listeners.

4. `void clearNotificationListeners()`: This method removes all the notification listeners.

5. `void addAttributeChangeListener(AttributeChangeListener listener, String attributeName, Object handback)`: This method adds an attribute change listener.

6. `void removeAttributeChangeListener(AttributeChangeListener listener)`: This method removes an attribute change listener.

7. `void addAttributeChangeListener(AttributeChangeListener listener, String[] attributeNames, Object handback)`: This method adds an attribute change listener for multiple attributes.

8. `void removeAttributeChangeListener(AttributeChangeListener listener, String attributeName)`: This method removes an attribute change listener for a specific attribute.

9. `void addAttributeChangeListener(AttributeChangeListener listener, String[] attributeNames, Object handback, boolean notifyRegistered)`: This method adds an attribute change listener for multiple attributes and specifies whether to notify the listener immediately upon registration.

10. `void removeAttributeChangeListener(AttributeChangeListener listener, String attributeName, boolean notifyListener)`: This method removes an attribute change listener for a specific attribute and specifies whether to notify the listener immediately upon removal.
================================================================

Sample: 31 StandardMBean
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class An MBean whose management interface is determined by reflection on a Java interface.

@@ Instruction
I want to use javax.management.StandardMBean package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getObjectInstance()`: This method returns an ObjectInstance that represents the MBean.
2. `getMBeanInfo()`: This method returns a MBeanInfo object that describes the MBean.
3. `invoke(ObjectName oname, String actionName, Object[] params, String[] signature)`: This method invokes the specified operation on the MBean.
4. `setAttribute(ObjectName oname, Attribute attribute)`: This method sets the value of the specified attribute.
5. `getAttribute(ObjectName oname, String attribute)`: This method returns the value of the specified attribute.
================================================================

Sample: 32 StringValueExp
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the core classes for the Java Management Extensions.
Here is the description of the class Represents strings that are arguments to relational constraints.

@@ Instruction
I want to use javax.management.StringValueExp package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean equals(Object obj)`: Compares this StringValueExp with the specified object.
2. `int hashCode()`: Returns a hash code for this StringValueExp.
3. `String toString()`: Returns a string representation of this StringValueExp.
4. `String getValue()`: Returns the value of this StringValueExp.
5. `String getFormattedValue()`: Returns the formatted value of this StringValueExp.
================================================================

