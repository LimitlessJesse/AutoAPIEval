ClassName,Method,Return Type,Description
DocumentBuilder,getDOMImplementation(),abstract DOMImplementation,Obtain an instance of a DOMImplementation object.
DocumentBuilder,getSchema(),Schema,Get a reference to the the Schema being used by the XML processor.
DocumentBuilder,isNamespaceAware(),abstract boolean,Indicates whether or not this parser is configured to understand namespaces.
DocumentBuilder,isValidating(),abstract boolean,Indicates whether or not this parser is configured to validate XML documents.
DocumentBuilder,isXIncludeAware(),boolean,Get the XInclude processing mode for this parser.
DocumentBuilder,newDocument(),abstract Document,Obtain a new instance of a DOM Document object to build a DOM tree with.
DocumentBuilder,parse(File f),Document,Parse the content of the given file as an XML document and return a new DOM Document object.
DocumentBuilder,parse(InputSource is),abstract Document,Parse the content of the given input source as an XML document and return a new DOM Document object.
DocumentBuilder,parse(InputStream is),Document,Parse the content of the given InputStream as an XML document and return a new DOM Document object.
DocumentBuilder,"parse(InputStream is, String systemId)",Document,Parse the content of the given InputStream as an XML document and return a new DOM Document object.
DocumentBuilder,parse(String uri),Document,Parse the content of the given URI as an XML document and return a new DOM Document object.
DocumentBuilder,reset(),void,Reset this DocumentBuilder to its original configuration.
DocumentBuilder,setEntityResolver(EntityResolver er),abstract void,Specify the EntityResolver to be used to resolve entities present in the XML document to be parsed.
DocumentBuilder,setErrorHandler(ErrorHandler eh),abstract void,Specify the ErrorHandler to be used by the parser.
DocumentBuilderFactory,getAttribute(String name),abstract Object,Allows the user to retrieve specific attributes on the underlying implementation.
DocumentBuilderFactory,getFeature(String name),abstract boolean,Get the state of the named feature.
DocumentBuilderFactory,getSchema(),Schema,Gets the Schema object specified through the setSchema(Schema schema) method.
DocumentBuilderFactory,isCoalescing(),boolean,Indicates whether or not the factory is configured to produce parsers which converts CDATA nodes to Text nodes and appends it to the adjacent (if any) Text node.
DocumentBuilderFactory,isExpandEntityReferences(),boolean,Indicates whether or not the factory is configured to produce parsers which expand entity reference nodes.
DocumentBuilderFactory,isIgnoringComments(),boolean,Indicates whether or not the factory is configured to produce parsers which ignores comments.
DocumentBuilderFactory,isIgnoringElementContentWhitespace(),boolean,Indicates whether or not the factory is configured to produce parsers which ignore ignorable whitespace in element content.
DocumentBuilderFactory,isNamespaceAware(),boolean,Indicates whether or not the factory is configured to produce parsers which are namespace aware.
DocumentBuilderFactory,isValidating(),boolean,Indicates whether or not the factory is configured to produce parsers which validate the XML content during parse.
DocumentBuilderFactory,isXIncludeAware(),boolean,Get state of XInclude processing.
DocumentBuilderFactory,newDocumentBuilder(),abstract DocumentBuilder,Creates a new instance of a DocumentBuilder using the currently configured parameters.
DocumentBuilderFactory,newInstance(),static DocumentBuilderFactory,Obtain a new instance of a DocumentBuilderFactory.
DocumentBuilderFactory,"newInstance(String factoryClassName, ClassLoader classLoader)",static DocumentBuilderFactory,Obtain a new instance of a DocumentBuilderFactory from class name.
DocumentBuilderFactory,"setAttribute(String name, Object value)",abstract void,Allows the user to set specific attributes on the underlying implementation.
DocumentBuilderFactory,setCoalescing(boolean coalescing),void,Specifies that the parser produced by this code will convert CDATA nodes to Text nodes and append it to the adjacent (if any) text node.
DocumentBuilderFactory,setExpandEntityReferences(boolean expandEntityRef),void,Specifies that the parser produced by this code will expand entity reference nodes.
DocumentBuilderFactory,"setFeature(String name, boolean value)",abstract void,Set a feature for this DocumentBuilderFactory and DocumentBuilders created by this factory.
DocumentBuilderFactory,setIgnoringComments(boolean ignoreComments),void,Specifies that the parser produced by this code will ignore comments.
DocumentBuilderFactory,setIgnoringElementContentWhitespace(boolean whitespace),void,Specifies that the parsers created by this factory must eliminate whitespace in element content (sometimes known loosely as 'ignorable whitespace') when parsing XML documents (see XML Rec 2.10).
DocumentBuilderFactory,setNamespaceAware(boolean awareness),void,Specifies that the parser produced by this code will provide support for XML namespaces.
DocumentBuilderFactory,setSchema(Schema schema),void,Set the Schema to be used by parsers created from this factory.
DocumentBuilderFactory,setValidating(boolean validating),void,Specifies that the parser produced by this code will validate documents as they are parsed.
DocumentBuilderFactory,setXIncludeAware(boolean state),void,Set state of XInclude processing.
SAXParser,getParser(),abstract Parser,Returns the SAX parser that is encapsultated by the implementation of this class.
SAXParser,getProperty(String name),abstract Object,Returns the particular property requested for in the underlying implementation of XMLReader.
SAXParser,getSchema(),Schema,Get a reference to the the Schema being used by the XML processor.
SAXParser,getXMLReader(),abstract XMLReader,Returns the XMLReader that is encapsulated by the implementation of this class.
SAXParser,isNamespaceAware(),abstract boolean,Indicates whether or not this parser is configured to understand namespaces.
SAXParser,isValidating(),abstract boolean,Indicates whether or not this parser is configured to validate XML documents.
SAXParser,isXIncludeAware(),boolean,Get the XInclude processing mode for this parser.
SAXParser,"parse(File f, DefaultHandler dh)",void,Parse the content of the file specified as XML using the specified DefaultHandler.
SAXParser,"parse(File f, HandlerBase hb)",void,Parse the content of the file specified as XML using the specified HandlerBase.
SAXParser,"parse(InputSource is, DefaultHandler dh)",void,Parse the content given InputSource as XML using the specified DefaultHandler.
SAXParser,"parse(InputSource is, HandlerBase hb)",void,Parse the content given InputSource as XML using the specified HandlerBase.
SAXParser,"parse(InputStream is, DefaultHandler dh)",void,Parse the content of the given InputStream instance as XML using the specified DefaultHandler.
SAXParser,"parse(InputStream is, DefaultHandler dh, String systemId)",void,Parse the content of the given InputStream instance as XML using the specified DefaultHandler.
SAXParser,"parse(InputStream is, HandlerBase hb)",void,Parse the content of the given InputStream instance as XML using the specified HandlerBase.
SAXParser,"parse(InputStream is, HandlerBase hb, String systemId)",void,Parse the content of the given InputStream instance as XML using the specified HandlerBase.
SAXParser,"parse(String uri, DefaultHandler dh)",void,Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified DefaultHandler.
SAXParser,"parse(String uri, HandlerBase hb)",void,Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified HandlerBase.
SAXParser,reset(),void,Reset this SAXParser to its original configuration.
SAXParser,"setProperty(String name, Object value)",abstract void,Sets the particular property in the underlying implementation of XMLReader.
SAXParserFactory,getFeature(String name),abstract boolean,Returns the particular property requested for in the underlying implementation of org.xml.sax.XMLReader.
SAXParserFactory,getSchema(),Schema,Gets the Schema object specified through the setSchema(Schema schema) method.
SAXParserFactory,isNamespaceAware(),boolean,Indicates whether or not the factory is configured to produce parsers which are namespace aware.
SAXParserFactory,isValidating(),boolean,Indicates whether or not the factory is configured to produce parsers which validate the XML content during parse.
SAXParserFactory,isXIncludeAware(),boolean,Get state of XInclude processing.
SAXParserFactory,newInstance(),static SAXParserFactory,Obtain a new instance of a SAXParserFactory.
SAXParserFactory,"newInstance(String factoryClassName, ClassLoader classLoader)",static SAXParserFactory,Obtain a new instance of a SAXParserFactory from class name.
SAXParserFactory,newSAXParser(),abstract SAXParser,Creates a new instance of a SAXParser using the currently configured factory parameters.
SAXParserFactory,"setFeature(String name, boolean value)",abstract void,Sets the particular feature in the underlying implementation of org.xml.sax.XMLReader.
SAXParserFactory,setNamespaceAware(boolean awareness),void,Specifies that the parser produced by this code will provide support for XML namespaces.
SAXParserFactory,setSchema(Schema schema),void,Set the Schema to be used by parsers created from this factory.
SAXParserFactory,setValidating(boolean validating),void,Specifies that the parser produced by this code will validate documents as they are parsed.
SAXParserFactory,setXIncludeAware(boolean state),void,Set state of XInclude processing.
