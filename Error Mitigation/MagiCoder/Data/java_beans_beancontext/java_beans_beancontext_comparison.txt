Sample: 0 BeanContextChildSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class This is a general support class to provide support for implementing the BeanContextChild protocol.

@@ Instruction
I want to use java.beans.beancontext.BeanContextChildSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void setParentContext(BeanContextParent newParent)`: This method sets the parent context of this child context.

2. `public BeanContextParent getParentContext()`: This method returns the parent context of this child context.

3. `public void setChildContextProperty(Object newValue)`: This method sets the child context property.

4. `public Object getChildContextProperty()`: This method returns the child context property.

5. `public void childContextChanged(ChildContextEvent cce)`: This method notifies the child context that its parent context has changed.
================================================================

Sample: 1 BeanContextEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class BeanContextEvent is the abstract root event class for all events emitted from, and pertaining to the semantics of, a BeanContext.

@@ Instruction
I want to use java.beans.beancontext.BeanContextEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void setBeanContext(BeanContext beanContext)`: This method sets the BeanContext for this event.
2. `public BeanContext getBeanContext()`: This method returns the BeanContext associated with this event.
3. `public void setSource(Object source)`: This method sets the source of this event.
4. `public Object getSource()`: This method returns the source of this event.
5. `public void setID(String id)`: This method sets the ID of this event.
6. `public String getID()`: This method returns the ID of this event.
7. `public void setTime(long time)`: This method sets the time of this event.
8. `public long getTime()`: This method returns the time of this event.
9. `public void setQualifiedName(String qualifiedName)`: This method sets the qualified name of this event.
10. `public String getQualifiedName()`: This method returns the qualified name of this event.
11. `public void setUserData(Object userData)`: This method sets the user data of this event.
12. `public Object getUserData()`: This method returns the user data of this event.
13. `public void setNewValue(Object newValue)`: This method sets the new value of this event.
14. `public Object getNewValue()`: This method returns the new value of this event.
15. `public void setOldValue(Object oldValue)`: This method sets the old value of this event.
16. `public Object getOldValue()`: This method returns the old value of this event.
17. `public void setPropertyName(String propertyName)`: This method sets the property name of this event.
18. `public String getPropertyName()`: This method returns the property name of this event.
19. `public void setPropertyChange(PropertyChangeEvent propertyChange)`: This method sets the property change of this event.
20. `public PropertyChangeEvent getPropertyChange()`: This method returns the property change of this event.
21. `public void setPropertyChangeArray(PropertyChangeEvent[] propertyChangeArray)`: This method sets the property change array of this event.
22. `public PropertyChangeEvent[] getPropertyChangeArray()`: This method returns the property change array of this event.
23. `public void setPropertyChangeList(List propertyChangeList)`: This method sets the property change list of this event.
24. `public List getPropertyChangeList()`: This method returns the property change list of this event.
25. `public void setPropertyChangeMap(Map propertyChangeMap)`: This method sets the property change map of this event.
26. `public Map getPropertyChangeMap()`: This method returns the property change map of this event.
27. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
28. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
29. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
30. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
31. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
32. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
33. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
34. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
35. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
36. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
37. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
38. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
39. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
40. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
41. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
42. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
43. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
44. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
45. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
46. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
47. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
48. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
49. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
50. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
51. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
52. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
53. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
54. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
55. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
56. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
57. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
58. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
59. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
60. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
61. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
62. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
63. `public void setPropertyChangeSet(PropertyChangeEvent[] propertyChangeSet)`: This method sets the property change set of this event.
64. `public PropertyChangeEvent[] getPropertyChangeSet()`: This method returns the property change set of this event.
65. `public
================================================================

Sample: 2 BeanContextMembershipEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class A BeanContextMembershipEvent encapsulates the list of children added to, or removed from, the membership of a particular BeanContext.

@@ Instruction
I want to use java.beans.beancontext.BeanContextMembershipEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public BeanContext getBeanContext()`: This method returns the BeanContext that generated the event.
2. `public Object getSource()`: This method returns the object that is the source of the event.
3. `public Object[] getChildren()`: This method returns an array containing the children that were added or removed from the membership of the BeanContext.
4. `public boolean isAdded()`: This method returns true if the children were added to the membership of the BeanContext, false if they were removed.
5. `public boolean isAdded(Object child)`: This method returns true if the specified child was added to the membership of the BeanContext, false if it was removed.
================================================================

Sample: 3 BeanContextServiceAvailableEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class This event type is used by the BeanContextServicesListener in order to identify the service being registered.

@@ Instruction
I want to use java.beans.beancontext.BeanContextServiceAvailableEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isServiceAvailable()`: This method returns true if the service is available.

2. `String getServiceName()`: This method returns the name of the service.

3. `Object getService()`: This method returns the service object.

4. `BeanContext getBeanContext()`: This method returns the BeanContext that generated this event.

5. `Object getSource()`: This method returns the object that is the source of the event.
================================================================

Sample: 4 BeanContextServiceRevokedEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class This event type is used by the BeanContextServiceRevokedListener in order to identify the service being revoked.

@@ Instruction
I want to use java.beans.beancontext.BeanContextServiceRevokedEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public BeanContext getBeanContext()`: This method returns the BeanContext associated with this event.

2. `public Object getSource()`: This method returns the object that is the source of the event.

3. `public Object getServiceID()`: This method returns the identifier of the service that was revoked.

4. `public boolean isConsumed()`: This method returns true if the service has been consumed.

5. `public void consume()`: This method consumes the service.
================================================================

Sample: 5 BeanContextServicesSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class This helper class provides a utility implementation of the java.beans.beancontext.BeanContextServices interface.

@@ Instruction
I want to use java.beans.beancontext.BeanContextServicesSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.

Note: The above methods are not inherent from its parent class.
================================================================

Sample: 6 BeanContextServicesSupport.BCSSServiceProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class subclasses may subclass this nested class to add behaviors for each BeanContextServicesProvider.

@@ Instruction
I want to use java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
7. `E get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `boolean isEmpty()`: This method returns true if this list contains no elements.
10. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
11. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
12. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
13. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
14. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
15. `E remove(int index)`: This method removes the element at the specified position in this list.
16. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are also contained in the specified collection.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
19. `int size()`: This method returns the number of elements in this list.
20. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 7 BeanContextSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class This helper class provides a utility implementation of the java.beans.beancontext.BeanContext interface.

@@ Instruction
I want to use java.beans.beancontext.BeanContextSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.

Note: The above methods are not inherent from its parent class.
================================================================

Sample: 8 BeanContextSupport.BCSIterator
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces relating to bean context.
Here is the description of the class protected final subclass that encapsulates an iterator but implements a noop remove() method.

@@ Instruction
I want to use java.beans.beancontext.BeanContextSupport.BCSIterator package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean hasNext()`: This method returns true if the iteration has more elements.
2. `E next()`: This method returns the next element in the iteration.
3. `void remove()`: This method removes from the underlying collection the last element returned by this iterator.
4. `void reset()`: This method resets the iterator to its initial state.
5. `boolean hasPrevious()`: This method returns true if this list iterator has more elements when traversing the list in the reverse direction.
6. `E previous()`: This method returns the previous element in the list and moves the cursor position backwards.
7. `int nextIndex()`: This method returns the index of the element that would be returned by a subsequent call to next().
8. `int previousIndex()`: This method returns the index of the element that would be returned by a subsequent call to previous().
9. `void add(E e)`: This method inserts the specified element into the list.
10. `void set(E e)`: This method replaces the last element returned by next() or previous() with the specified element.
11. `void remove()`: This method removes from the list the last element that was returned by next() or previous().
12. `void set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
13. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
14. `E get(int index)`: This method returns the element at the specified position in this list.
15. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
16. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
17. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
18. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
19. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
20. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
21. `int hashCode()`: This method returns the hash code value for this list.
22. `Object clone()`: This method creates and returns a copy of this list.
23. `void clear()`: This method removes all of the elements from this list.
24. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
25. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
26. `boolean isEmpty()`: This method returns true if this list contains no elements.
27. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
28. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are contained in the specified collection.
29. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
30. `int size()`: This method returns the number of elements in this list.
31. `Object[] toArray()`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element).
32. `<T> T[] toArray(T[] a)`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
33. `void forEach(Consumer<? super E> action)`: This method performs the given action for each element of the Iterable until all elements have been processed or the action throws an exception.
34. `void forEachRemaining(Consumer<? super E> action)`: This method performs the given action for each remaining element until all elements have been processed or the action throws an exception.
35. `Spliterator<E> spliterator()`: This method creates a Spliterator over the elements in this list.
36. `Stream<E> stream()`: This method returns a sequential Stream with this collection as its source.
37. `Stream<E> parallelStream()`: This method returns a possibly parallel Stream with this collection as its source.
38. `void forEach(Consumer<? super E> action)`: This method performs the given action for each element of the Iterable until all elements have been processed or the action throws an exception.
39. `void forEachRemaining(Consumer<? super E> action)`: This method performs the given action for each remaining element until all elements have been processed or the action throws an exception.
40. `Spliterator<E> spliterator()`: This method creates a Spliterator over the elements in this list.
41. `Stream<E> stream()`: This method returns a sequential Stream with this collection as its source.
42. `Stream<E> parallelStream()`: This method returns a possibly parallel Stream with this collection as its source.
================================================================

