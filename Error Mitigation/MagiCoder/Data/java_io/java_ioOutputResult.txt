Sample: BufferedInputStream_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_1.main(BufferedInputStream_1.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_3.main(BufferedInputStream_3.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_4.main(BufferedInputStream_4.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_5
----------------------------------------------------------------
stdout:
Available bytes: 5

================================================================

Sample: BufferedOutputStream_2
----------------------------------------------------------------
================================================================

Sample: BufferedOutputStream_4
----------------------------------------------------------------
================================================================

Sample: BufferedOutputStream_5
----------------------------------------------------------------
================================================================

Sample: BufferedReader_3
----------------------------------------------------------------
stdout:
You entered: in case

================================================================

Sample: BufferedReader_5
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at java.base/java.io.FileReader.<init>(FileReader.java:60)
	at BufferedReader_5.main(BufferedReader_5.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedWriter_2
----------------------------------------------------------------
================================================================

Sample: BufferedWriter_5
----------------------------------------------------------------
================================================================

Sample: ByteArrayInputStream_2
----------------------------------------------------------------
stdout:
ABCDE
================================================================

Sample: ByteArrayInputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayInputStream_4.java:17: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayInputStream_5
----------------------------------------------------------------
stdout:
Available bytes: 5

================================================================

Sample: ByteArrayOutputStream_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayOutputStream_2.java:11: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayOutputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayOutputStream_4.java:11: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayOutputStream_5
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: CharArrayReader_2
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: CharArrayReader_4
----------------------------------------------------------------
stdout:
Skipped 2 characters
Read character: c

================================================================

Sample: CharArrayReader_5
----------------------------------------------------------------
stdout:
true
true
true
false

================================================================

Sample: CharArrayWriter_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_3.java:13: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: CharArrayWriter_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_5.java:10: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: CharArrayWriter_6
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: CharArrayWriter_7
----------------------------------------------------------------
stdout:
Hello, World!


================================================================

Sample: CharArrayWriter_8
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_8.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        writer.write("Hello, World!");
                    ^
1 error


================================================================

Sample: CharArrayWriter_9
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: CharArrayWriter_10
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_10.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        writer.write("Hello, World!");
                    ^
1 error


================================================================

Sample: Console_2
----------------------------------------------------------------
stdout:
Console is not available.

================================================================

Sample: Console_3
----------------------------------------------------------------
stdout:
Console is not available

================================================================

Sample: DataInputStream_2
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: input.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at DataInputStream_2.main(DataInputStream_2.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: DataInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: input.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at DataInputStream_3.main(DataInputStream_3.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: DataInputStream_4
----------------------------------------------------------------
stderr:
java.io.EOFException
	at java.base/java.io.DataInputStream.readFully(DataInputStream.java:203)
	at java.base/java.io.DataInputStream.readUTF(DataInputStream.java:602)
	at java.base/java.io.DataInputStream.readUTF(DataInputStream.java:558)
	at DataInputStream_4.main(DataInputStream_4.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: File_1
----------------------------------------------------------------
stdout:
File created: path_to_your_file
The application can read the file.

================================================================

Sample: File_2
----------------------------------------------------------------
stdout:
File created: test.txt
The application can write to the file.

================================================================

Sample: File_3
----------------------------------------------------------------
stdout:
File created successfully

================================================================

Sample: File_4
----------------------------------------------------------------
stdout:
File created: true

================================================================

Sample: FileDescriptor_4
----------------------------------------------------------------
================================================================

Sample: FileInputStream_2
----------------------------------------------------------------
================================================================

Sample: FileInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_3.main(FileInputStream_3.java:6)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_4.main(FileInputStream_4.java:6)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileInputStream_5
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_5.main(FileInputStream_5.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileOutputStream_6
----------------------------------------------------------------
================================================================

Sample: FileOutputStream_7
----------------------------------------------------------------
================================================================

Sample: FileOutputStream_8
----------------------------------------------------------------
================================================================

Sample: FileOutputStream_10
----------------------------------------------------------------
================================================================

Sample: FilterInputStream_1
----------------------------------------------------------------
stdout:
Read data: 105

================================================================

Sample: FilterInputStream_2
----------------------------------------------------------------
stdout:
in case
================================================================

Sample: FilterInputStream_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.InputStream.read(byte[], int, int)" because "this.in" is null
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
	at FilterInputStream_3$1.read(FilterInputStream_3.java:11)
	at FilterInputStream_3.main(FilterInputStream_3.java:16)

================================================================

Sample: FilterInputStream_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.InputStream.skip(long)" because "this.in" is null
	at java.base/java.io.FilterInputStream.skip(FilterInputStream.java:149)
	at FilterInputStream_4$1.skip(FilterInputStream_4.java:16)
	at FilterInputStream_4.main(FilterInputStream_4.java:20)

================================================================

Sample: FilterInputStream_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.InputStream.available()" because "this.in" is null
	at java.base/java.io.FilterInputStream.available(FilterInputStream.java:166)
	at FilterInputStream_5$1.available(FilterInputStream_5.java:11)
	at FilterInputStream_5.main(FilterInputStream_5.java:14)

================================================================

Sample: FilterOutputStream_2
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: FilterOutputStream_3
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_4
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_5
----------------------------------------------------------------
================================================================

Sample: FilterReader_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_1.java:8: error: incompatible types: StringReader cannot be converted to FilterReader
            FilterReader reader = new StringReader("Hello, World!");
                                  ^
1 error


================================================================

Sample: FilterReader_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_2.java:8: error: FilterReader is abstract; cannot be instantiated
            Reader reader = new FilterReader(new Reader() {
                            ^
1 error


================================================================

Sample: FilterReader_4
----------------------------------------------------------------
stdout:
false

================================================================

Sample: FilterReader_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_5.java:8: error: FilterReader is abstract; cannot be instantiated
            FilterReader reader = new FilterReader(new Reader() {
                                  ^
1 error


================================================================

Sample: FilterWriter_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterWriter_4.java:8: error: FilterWriter is abstract; cannot be instantiated
            Writer writer = new FilterWriter(new Writer() {
                            ^
1 error


================================================================

Sample: FilterWriter_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterWriter_5.java:8: error: FilterWriter is abstract; cannot be instantiated
            Writer writer = new FilterWriter(new Writer() {
                            ^
1 error


================================================================

Sample: InputStream_1
----------------------------------------------------------------
stdout:
Read data: 105

================================================================

Sample: InputStream_2
----------------------------------------------------------------
stdout:
in case
================================================================

Sample: InputStream_3
----------------------------------------------------------------
stdout:
Bytes read: 7
Data: in case

================================================================

Sample: InputStream_4
----------------------------------------------------------------
stdout:
Skipped 10 bytes.

================================================================

Sample: InputStream_5
----------------------------------------------------------------
stdout:
Number of bytes that can be read: 7

================================================================

Sample: InputStreamReader_1
----------------------------------------------------------------
stdout:
Character read: i

================================================================

Sample: InputStreamReader_3
----------------------------------------------------------------
stdout:
Is the stream ready? true

================================================================

Sample: InputStreamReader_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/InputStreamReader_4.java:10: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: LineNumberReader_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/LineNumberReader_2.java:9: error: cannot find symbol
        LineNumberReader lineReader = new LineNumberReader(reader);
        ^
  symbol:   class LineNumberReader
  location: class LineNumberReader_2
./Data/java_io/javaFiles/LineNumberReader_2.java:9: error: cannot find symbol
        LineNumberReader lineReader = new LineNumberReader(reader);
                                          ^
  symbol:   class LineNumberReader
  location: class LineNumberReader_2
2 errors


================================================================

Sample: LineNumberReader_3
----------------------------------------------------------------
stdout:
1: Hello
New line number: 100
101: World
New line number: 100
101: Java
New line number: 100

================================================================

Sample: ObjectInputStream_2
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: ObjectInputStream_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: ObjectOutputStream_2
----------------------------------------------------------------
stdout:
Object has been serialized

================================================================

Sample: ObjectOutputStream_3
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_4
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_5
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_6
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_7
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_8
----------------------------------------------------------------
stdout:
Double is written to the file successfully

================================================================

Sample: ObjectOutputStream_9
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectOutputStream_9.java:10: error: cannot find symbol
            out.writeObject(new MyClass());
                                ^
  symbol:   class MyClass
  location: class ObjectOutputStream_9
1 error


================================================================

Sample: ObjectOutputStream_10
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_11
----------------------------------------------------------------
stdout:
Int is written to the file successfully!

================================================================

Sample: ObjectOutputStream_12
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_13
----------------------------------------------------------------
stdout:
Object has been serialized

================================================================

Sample: ObjectOutputStream_14
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_15
----------------------------------------------------------------
stdout:
Serialized data is saved in filename.ser

================================================================

Sample: ObjectOutputStream_16
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_17
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_18
----------------------------------------------------------------
stdout:
Serialized data is saved in filename.ser

================================================================

Sample: ObjectOutputStream_19
----------------------------------------------------------------
stdout:
Serialized data is saved in filename.ser

================================================================

Sample: ObjectOutputStream_20
----------------------------------------------------------------
================================================================

Sample: ObjectStreamClass_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.ObjectStreamClass.getName()" because "<local1>" is null
	at ObjectStreamClass_3.main(ObjectStreamClass_3.java:6)

================================================================

Sample: ObjectStreamClass_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectStreamClass_5.java:6: error: cannot find symbol
        ObjectStreamField[] fields = osc.getFields();
        ^
  symbol:   class ObjectStreamField
  location: class ObjectStreamClass_5
./Data/java_io/javaFiles/ObjectStreamClass_5.java:8: error: cannot find symbol
        for (ObjectStreamField field : fields) {
             ^
  symbol:   class ObjectStreamField
  location: class ObjectStreamClass_5
2 errors


================================================================

Sample: ObjectStreamField_2
----------------------------------------------------------------
stdout:
Field name: name

================================================================

Sample: ObjectStreamField_3
----------------------------------------------------------------
stdout:
class java.lang.String

================================================================

Sample: ObjectStreamField_4
----------------------------------------------------------------
stdout:
Offset: 0

================================================================

Sample: OutputStream_1
----------------------------------------------------------------
stdout:
Hi

================================================================

Sample: OutputStream_2
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: OutputStream_3
----------------------------------------------------------------
================================================================

Sample: OutputStream_4
----------------------------------------------------------------
================================================================

Sample: OutputStream_5
----------------------------------------------------------------
================================================================

Sample: OutputStreamWriter_3
----------------------------------------------------------------
stdout:
Hi
World

================================================================

Sample: OutputStreamWriter_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/OutputStreamWriter_5.java:8: error: empty character literal
            char[] chars = {'H', 'e', 'l', 'l', 'o','', 'W', 'o', 'r', 'l', 'd', '!', '\n'};
                                                    ^
./Data/java_io/javaFiles/OutputStreamWriter_5.java:6: error: 'try' without 'catch', 'finally' or resource declarations
        try {
        ^
./Data/java_io/javaFiles/OutputStreamWriter_5.java:11: error: illegal start of type
        } catch (IOException e) {
          ^
./Data/java_io/javaFiles/OutputStreamWriter_5.java:11: error: ';' expected
        } catch (IOException e) {
                              ^
./Data/java_io/javaFiles/OutputStreamWriter_5.java:15: error: class, interface, enum, or record expected
}
^
5 errors


================================================================

Sample: OutputStreamWriter_7
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: OutputStreamWriter_8
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: OutputStreamWriter_9
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PipedInputStream_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PipedInputStream_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PipedInputStream_4
----------------------------------------------------------------
================================================================

Sample: PipedOutputStream_1
----------------------------------------------------------------
================================================================

Sample: PipedOutputStream_2
----------------------------------------------------------------
================================================================

Sample: PipedOutputStream_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedOutputStream.write(PipedOutputStream.java:120)
	at PipedOutputStream_3.main(PipedOutputStream_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedOutputStream_5
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedOutputStream.write(PipedOutputStream.java:141)
	at PipedOutputStream_5.main(PipedOutputStream_5.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedReader_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PipedReader_3
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: PipedWriter_1
----------------------------------------------------------------
================================================================

Sample: PipedWriter_3
----------------------------------------------------------------
================================================================

Sample: PipedWriter_4
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedWriter.write(PipedWriter.java:122)
	at PipedWriter_4.main(PipedWriter_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedWriter_6
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/PipedWriter_6.java:8: error: cannot find symbol
            writer.println("Hello, World!");
                  ^
  symbol:   method println(String)
  location: variable writer of type PipedWriter
1 error


================================================================

Sample: PrintStream_2
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PrintStream_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintStream_4
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintStream_5
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintWriter_5
----------------------------------------------------------------
================================================================

Sample: PrintWriter_6
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/PrintWriter_6.java:6: error: empty character literal
        char[] chars = {'H', 'e', 'l', 'l', 'o','', 'W', 'o', 'r', 'l', 'd', '!', '\n'};
                                                ^
./Data/java_io/javaFiles/PrintWriter_6.java:7: error: <identifier> expected
        pw.print(chars);
                ^
./Data/java_io/javaFiles/PrintWriter_6.java:7: error: <identifier> expected
        pw.print(chars);
                      ^
./Data/java_io/javaFiles/PrintWriter_6.java:9: error: class, interface, enum, or record expected
}
^
4 errors


================================================================

Sample: PrintWriter_7
----------------------------------------------------------------
================================================================

Sample: PrintWriter_8
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintWriter_9
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintWriter_10
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/PrintWriter_10.java:6: error: empty character literal
        char[] chars = {'H', 'e', 'l', 'l', 'o','', 'W', 'o', 'r', 'l', 'd', '!', '\n'};
                                                ^
./Data/java_io/javaFiles/PrintWriter_10.java:7: error: <identifier> expected
        pw.println(chars);
                  ^
./Data/java_io/javaFiles/PrintWriter_10.java:7: error: <identifier> expected
        pw.println(chars);
                        ^
./Data/java_io/javaFiles/PrintWriter_10.java:9: error: class, interface, enum, or record expected
}
^
4 errors


================================================================

Sample: PrintWriter_11
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintWriter_12
----------------------------------------------------------------
stdout:
Hello, World!


================================================================

Sample: PrintWriter_13
----------------------------------------------------------------
================================================================

Sample: PushbackInputStream_1
----------------------------------------------------------------
stdout:
Read byte: 105

================================================================

Sample: PushbackInputStream_3
----------------------------------------------------------------
stdout:
Bytes read: 7
Data: in case

================================================================

Sample: PushbackInputStream_4
----------------------------------------------------------------
================================================================

Sample: PushbackInputStream_5
----------------------------------------------------------------
stdout:
Read byte: 105
Available bytes: 6
Available bytes after unread: 7

================================================================

Sample: PushbackReader_3
----------------------------------------------------------------
stdout:
h

================================================================

Sample: PushbackReader_5
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: PushbackReader_6
----------------------------------------------------------------
stdout:
h

================================================================

Sample: PushbackReader_7
----------------------------------------------------------------
stdout:
Hd

================================================================

Sample: PushbackReader_8
----------------------------------------------------------------
stdout:
h

================================================================

Sample: PushbackReader_9
----------------------------------------------------------------
stdout:
H

================================================================

Sample: PushbackReader_10
----------------------------------------------------------------
stdout:
H

stderr:
java.io.IOException: mark/reset not supported
	at java.base/java.io.PushbackReader.reset(PushbackReader.java:216)
	at PushbackReader_10.main(PushbackReader_10.java:19)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PushbackReader_11
----------------------------------------------------------------
stdout:
The stream is ready to be read.

================================================================

Sample: PushbackReader_12
----------------------------------------------------------------
stdout:
h
l

================================================================

Sample: RandomAccessFile_2
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: RandomAccessFile_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: RandomAccessFile_4
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_5
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_6
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_7
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_8
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_9
----------------------------------------------------------------
stdout:
Length of the file: 15

================================================================

Sample: RandomAccessFile_10
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_11
----------------------------------------------------------------
================================================================

Sample: Reader_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: Reader_2
----------------------------------------------------------------
stdout:
Number of characters read: 13
Content read: Hello, World!

================================================================

Sample: Reader_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/Reader_3.java:7: error: <anonymous Reader_3$1> is not abstract and does not override abstract method close() in Reader
            Reader reader = new Reader() {
                                         ^
1 error


================================================================

Sample: Reader_4
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Reader_5
----------------------------------------------------------------
stdout:
H: Stream is ready to read
e: Stream is ready to read
l: Stream is ready to read
l: Stream is ready to read
o: Stream is ready to read
,: Stream is ready to read
 : Stream is ready to read
W: Stream is ready to read
o: Stream is ready to read
r: Stream is ready to read
l: Stream is ready to read
d: Stream is ready to read
!: Stream is ready to read

================================================================

Sample: Reader_6
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: Reader_8
----------------------------------------------------------------
stdout:
H
e
e

================================================================

Sample: Reader_9
----------------------------------------------------------------
stdout:
true

================================================================

Sample: SequenceInputStream_3
----------------------------------------------------------------
stdout:
Number of bytes available: 7

================================================================

Sample: SequenceInputStream_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException
	at java.base/java.io.SequenceInputStream.peekNextStream(SequenceInputStream.java:103)
	at java.base/java.io.SequenceInputStream.<init>(SequenceInputStream.java:86)
	at SequenceInputStream_4.main(SequenceInputStream_4.java:7)

================================================================

Sample: SequenceInputStream_7
----------------------------------------------------------------
stdout:
HelloWorld
================================================================

Sample: SequenceInputStream_8
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: StreamTokenizer_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StreamTokenizer_2.java:20: error: empty character literal
                    case'':
                        ^
./Data/java_io/javaFiles/StreamTokenizer_2.java:21: error: : or -> expected
                        System.out.println("Space");
                                                   ^
2 errors


================================================================

Sample: StringBufferInputStream_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringBufferInputStream_2.java:6: error: incompatible types: StringBuffer cannot be converted to String
        StringBufferInputStream sbis = new StringBufferInputStream(sb);
                                                                   ^
Note: ./Data/java_io/javaFiles/StringBufferInputStream_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: StringBufferInputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringBufferInputStream_4.java:14: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
Note: ./Data/java_io/javaFiles/StringBufferInputStream_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: StringBufferInputStream_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringBufferInputStream_5.java:7: error: incompatible types: StringBuffer cannot be converted to String
        StringBufferInputStream sbis = new StringBufferInputStream(sb);
                                                                   ^
Note: ./Data/java_io/javaFiles/StringBufferInputStream_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: StringReader_2
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: StringReader_3
----------------------------------------------------------------
stdout:
Hello, Wor

================================================================

Sample: StringReader_4
----------------------------------------------------------------
stdout:
World!
================================================================

Sample: StringReader_5
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: StringWriter_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringWriter_4.java:9: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: StringWriter_5
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringWriter_6
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringWriter_7
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringWriter_7.java:9: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: StringWriter_8
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: StringWriter_9
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringWriter_9.java:12: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: StringWriter_10
----------------------------------------------------------------
================================================================

Sample: Writer_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/Writer_1.java:7: error: <anonymous Writer_1$1> is not abstract and does not override abstract method write(char[],int,int) in Writer
            Writer writer = new Writer() {
                                         ^
1 error


================================================================

Sample: Writer_2
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Writer_3
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: Writer_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/Writer_4.java:7: error: <anonymous Writer_4$1> is not abstract and does not override abstract method write(char[],int,int) in Writer
            Writer writer = new Writer() {
                                         ^
1 error


================================================================

Sample: Writer_5
----------------------------------------------------------------
================================================================

Sample: Writer_6
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.Writer.flush()" because "<local1>" is null
	at Writer_6.main(Writer_6.java:8)

================================================================

Sample: Writer_7
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.Writer.close()" because "<local1>" is null
	at Writer_7.main(Writer_7.java:8)

================================================================

