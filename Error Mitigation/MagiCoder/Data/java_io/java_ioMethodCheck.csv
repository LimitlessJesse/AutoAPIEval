Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,BufferedInputStream,1,int read(),True,See the general contract of the read method of InputStream.
0,BufferedInputStream,2,int read(byte[] b),False,NULL
0,BufferedInputStream,3,"int read(byte[] b, int off, int len)",True,"Reads bytes from this byte-input stream into the specified byte array, starting at the given offset."
0,BufferedInputStream,4,long skip(long n),True,See the general contract of the skip method of InputStream.
0,BufferedInputStream,5,int available(),True,Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream.
1,BufferedOutputStream,1,BufferedOutputStream(OutputStream out),False,NULL
1,BufferedOutputStream,2,void write(int b),True,Writes the specified byte to this buffered output stream.
1,BufferedOutputStream,3,void write(byte[] b),False,NULL
1,BufferedOutputStream,4,"void write(byte[] b, int off, int len)",True,Writes len bytes from the specified byte array starting at offset off to this buffered output stream.
1,BufferedOutputStream,5,void flush(),True,Flushes this buffered output stream.
2,BufferedReader,1,BufferedReader(Reader in),False,NULL
2,BufferedReader,2,"BufferedReader(Reader in, int sz)",False,NULL
2,BufferedReader,3,String readLine(),True,Reads a line of text.
2,BufferedReader,4,"String readLine(char[] cbuf, int off, int len)",False,NULL
2,BufferedReader,5,void close(),True,Closes the stream and releases any system resources associated with it.
3,BufferedWriter,1,BufferedWriter(Writer out),False,NULL
3,BufferedWriter,2,void write(int c),True,Writes a single character.
3,BufferedWriter,3,void write(char[] cbuf),False,NULL
3,BufferedWriter,4,void write(String str),False,NULL
3,BufferedWriter,5,void newLine(),True,Writes a line separator.
4,ByteArrayInputStream,1,ByteArrayInputStream(byte[] buf),False,NULL
4,ByteArrayInputStream,2,int read(),True,Reads the next byte of data from this input stream.
4,ByteArrayInputStream,3,"int read(byte b[], int off, int len)",False,NULL
4,ByteArrayInputStream,4,long skip(long n),True,Skips n bytes of input from this input stream.
4,ByteArrayInputStream,5,int available(),True,Returns the number of remaining bytes that can be read (or skipped over) from this input stream.
5,ByteArrayOutputStream,1,ByteArrayOutputStream(),False,NULL
5,ByteArrayOutputStream,2,void write(int b),True,Writes the specified byte to this byte array output stream.
5,ByteArrayOutputStream,3,void write(byte[] b),False,NULL
5,ByteArrayOutputStream,4,"void write(byte[] b, int off, int len)",True,Writes len bytes from the specified byte array starting at offset off to this byte array output stream.
5,ByteArrayOutputStream,5,byte[] toByteArray(),True,Creates a newly allocated byte array.
6,CharArrayReader,1,CharArrayReader(char buf[]),False,NULL
6,CharArrayReader,2,int read(),True,Reads a single character.
6,CharArrayReader,3,"int read(char cbuf[], int off, int len)",False,NULL
6,CharArrayReader,4,long skip(long n),True,Skips characters.
6,CharArrayReader,5,boolean ready(),True,Tells whether this stream is ready to be read.
7,CharArrayWriter,1,CharArrayWriter(),False,NULL
7,CharArrayWriter,2,CharArrayWriter(int initialSize),False,NULL
7,CharArrayWriter,3,void write(int c),True,Writes a character to the buffer.
7,CharArrayWriter,4,void write(char[] cbuf),False,NULL
7,CharArrayWriter,5,"void write(char[] cbuf, int off, int len)",True,Writes characters to the buffer.
7,CharArrayWriter,6,void writeTo(Writer out),True,Writes the contents of the buffer to another character stream.
7,CharArrayWriter,7,void reset(),True,Resets the buffer so that you can use it again without throwing away the already allocated buffer.
7,CharArrayWriter,8,char[] toCharArray(),True,Returns a copy of the input data.
7,CharArrayWriter,9,String toString(),True,Converts input data to a string.
7,CharArrayWriter,10,int size(),True,Returns the current size of the buffer.
8,Console,1,Console console = System.console();,False,NULL
8,Console,2,char[] readPassword(),True,Reads a password or passphrase from the console with echoing disabled
8,Console,3,String readLine(),True,Reads a single line of text from the console.
8,Console,4,"void printf(String format, Object... args)",False,NULL
8,Console,5,void writer().print(String x),False,NULL
9,DataInputStream,1,int read(),False,NULL
9,DataInputStream,2,int read(byte[] b),True,Reads some number of bytes from the contained input stream and stores them into the buffer array b.
9,DataInputStream,3,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from the contained input stream into an array of bytes.
9,DataInputStream,4,String readUTF(),True,See the general contract of the readUTF method of DataInput.
9,DataInputStream,5,long skip(long n),False,NULL
10,DataOutputStream,1,writeBoolean(boolean v),False,NULL
10,DataOutputStream,2,writeByte(int v),False,NULL
10,DataOutputStream,3,writeShort(int v),False,NULL
10,DataOutputStream,4,writeChar(int v),False,NULL
10,DataOutputStream,5,writeInt(int v),False,NULL
10,DataOutputStream,6,writeLong(long v),False,NULL
10,DataOutputStream,7,writeFloat(float v),False,NULL
10,DataOutputStream,8,writeDouble(double v),False,NULL
10,DataOutputStream,9,writeBytes(String s),False,NULL
10,DataOutputStream,10,writeChars(String s),False,NULL
10,DataOutputStream,11,writeUTF(String str),False,NULL
10,DataOutputStream,12,flush(),False,NULL
10,DataOutputStream,13,close(),False,NULL
11,File,1,boolean canRead(),True,Tests whether the application can read the file denoted by this abstract pathname.
11,File,2,boolean canWrite(),True,Tests whether the application can modify the file denoted by this abstract pathname.
11,File,3,boolean createNewFile(),True,"Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist."
11,File,4,boolean delete(),True,Deletes the file or directory denoted by this abstract pathname.
11,File,5,boolean deleteOnExit(),False,NULL
12,FileDescriptor,1,FileDescriptor(),False,NULL
12,FileDescriptor,2,FileDescriptor(int fd),False,NULL
12,FileDescriptor,3,int getFD(),False,NULL
12,FileDescriptor,4,void sync(),True,Force all system buffers to synchronize with the underlying device.
12,FileDescriptor,5,void set(int fd),False,NULL
13,FileInputStream,1,FileInputStream(String name),False,NULL
13,FileInputStream,2,int read(),True,Reads a byte of data from this input stream.
13,FileInputStream,3,int read(byte[] b),True,Reads up to b.length bytes of data from this input stream into an array of bytes.
13,FileInputStream,4,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from this input stream into an array of bytes.
13,FileInputStream,5,void close(),True,Closes this file input stream and releases any system resources associated with the stream.
14,FileOutputStream,1,FileOutputStream(File file),False,NULL
14,FileOutputStream,2,"FileOutputStream(File file, boolean append)",False,NULL
14,FileOutputStream,3,FileOutputStream(FileDescriptor fdObj),False,NULL
14,FileOutputStream,4,FileOutputStream(String name),False,NULL
14,FileOutputStream,5,"FileOutputStream(String name, boolean append)",False,NULL
14,FileOutputStream,6,void write(int b),True,Writes the specified byte to this file output stream.
14,FileOutputStream,7,void write(byte[] b),True,Writes b.length bytes from the specified byte array to this file output stream.
14,FileOutputStream,8,"void write(byte[] b, int off, int len)",True,Writes len bytes from the specified byte array starting at offset off to this file output stream.
14,FileOutputStream,9,void flush(),False,NULL
14,FileOutputStream,10,void close(),True,Closes this file output stream and releases any system resources associated with this stream.
15,FilePermission,1,boolean canRead(),False,NULL
15,FilePermission,2,boolean canWrite(),False,NULL
15,FilePermission,3,boolean exists(),False,NULL
15,FilePermission,4,boolean isDirectory(),False,NULL
15,FilePermission,5,boolean isFile(),False,NULL
16,FileReader,1,FileReader(String fileName),False,NULL
16,FileReader,2,int read(),False,NULL
16,FileReader,3,int read(char[] cbuf),False,NULL
16,FileReader,4,"int read(char[] cbuf, int off, int len)",False,NULL
16,FileReader,5,void close(),False,NULL
17,FileWriter,1,FileWriter(String fileName),False,NULL
17,FileWriter,2,"FileWriter(String fileName, boolean append)",False,NULL
17,FileWriter,3,void write(int c),False,NULL
17,FileWriter,4,void write(char[] cbuf),False,NULL
17,FileWriter,5,void write(String str),False,NULL
17,FileWriter,6,"void write(String str, int off, int len)",False,NULL
17,FileWriter,7,"void write(char[] cbuf, int off, int len)",False,NULL
17,FileWriter,8,void flush(),False,NULL
17,FileWriter,9,void close(),False,NULL
18,FilterInputStream,1,int read(),True,Reads the next byte of data from this input stream.
18,FilterInputStream,2,int read(byte[] b),True,Reads up to byte.length bytes of data from this input stream into an array of bytes.
18,FilterInputStream,3,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from this input stream into an array of bytes.
18,FilterInputStream,4,long skip(long n),True,Skips over and discards n bytes of data from the input stream.
18,FilterInputStream,5,int available(),True,Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next caller of a method for this input stream.
19,FilterOutputStream,1,FilterOutputStream(OutputStream out),False,NULL
19,FilterOutputStream,2,void write(int b),True,Writes the specified byte to this output stream.
19,FilterOutputStream,3,void write(byte[] b),True,Writes b.length bytes to this output stream.
19,FilterOutputStream,4,"void write(byte[] b, int off, int len)",True,Writes len bytes from the specified byte array starting at offset off to this output stream.
19,FilterOutputStream,5,void flush(),True,Flushes this output stream and forces any buffered output bytes to be written out to the stream.
20,FilterReader,1,int read(),True,Reads a single character.
20,FilterReader,2,"int read(char[] cbuf, int off, int len)",True,Reads characters into a portion of an array.
20,FilterReader,3,long skip(long n),True,Skips characters.
20,FilterReader,4,boolean ready(),True,Tells whether this stream is ready to be read.
20,FilterReader,5,void close(),True,Closes the stream and releases any system resources associated with it.
21,FilterWriter,1,Writer append(char c),False,NULL
21,FilterWriter,2,Writer append(CharSequence csq),False,NULL
21,FilterWriter,3,"Writer append(CharSequence csq, int start, int end)",False,NULL
21,FilterWriter,4,void close(),True,"Closes the stream, flushing it first."
21,FilterWriter,5,void flush(),True,Flushes the stream.
22,InputStream,1,int read(),True,Reads the next byte of data from the input stream.
22,InputStream,2,int read(byte[] b),True,Reads some number of bytes from the input stream and stores them into the buffer array b.
22,InputStream,3,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from the input stream into an array of bytes.
22,InputStream,4,long skip(long n),True,Skips over and discards n bytes of data from this input stream.
22,InputStream,5,int available(),True,Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream.
23,InputStreamReader,1,int read(),True,Reads a single character.
23,InputStreamReader,2,"int read(char cbuf[], int offset, int length)",False,NULL
23,InputStreamReader,3,boolean ready(),True,Tells whether this stream is ready to be read.
23,InputStreamReader,4,void close(),True,Closes the stream and releases any system resources associated with it.
23,InputStreamReader,5,int skip(long n),False,NULL
24,LineNumberInputStream,1,int readLine(),False,NULL
24,LineNumberInputStream,2,"int readLine(char[] buf, int off, int len)",False,NULL
24,LineNumberInputStream,3,int readLine(char[] buf),False,NULL
24,LineNumberInputStream,4,"int readLines(char[] buf, int off, int len)",False,NULL
24,LineNumberInputStream,5,int readLines(char[] buf),False,NULL
24,LineNumberInputStream,6,"int readLines(char[] buf, int off, int len, boolean ignoreLF)",False,NULL
24,LineNumberInputStream,7,"int readLines(char[] buf, boolean ignoreLF)",False,NULL
24,LineNumberInputStream,8,"int readLines(char[] buf, int off, int len, boolean ignoreLF, boolean ignoreCR)",False,NULL
24,LineNumberInputStream,9,"int readLines(char[] buf, boolean ignoreLF, boolean ignoreCR)",False,NULL
24,LineNumberInputStream,10,"int readLines(char[] buf, int off, int len, boolean ignoreLF, boolean ignoreCR, boolean ignoreCRLF)",False,NULL
24,LineNumberInputStream,11,"int readLines(char[] buf, boolean ignoreLF, boolean ignoreCR, boolean ignoreCRLF)",False,NULL
25,LineNumberReader,1,LineNumberReader(Reader in),False,NULL
25,LineNumberReader,2,int getLineNumber(),True,Get the current line number.
25,LineNumberReader,3,void setLineNumber(int lineNumber),True,Set the current line number.
25,LineNumberReader,4,String readLine(),True,Read a line of text.
25,LineNumberReader,5,void close(),False,NULL
26,ObjectInputStream,1,ObjectInputStream(InputStream in),False,NULL
26,ObjectInputStream,2,Object readObject(),True,Read an object from the ObjectInputStream.
26,ObjectInputStream,3,Object readUnshared(),True,"Reads an ""unshared"" object from the ObjectInputStream."
26,ObjectInputStream,4,Object readObject(ObjectStreamClass desc),False,NULL
26,ObjectInputStream,5,Object readUnshared(ObjectStreamClass desc),False,NULL
27,ObjectInputStream.GetField,1,Object readObject(),False,NULL
27,ObjectInputStream.GetField,2,Object readUnshared(),False,NULL
27,ObjectInputStream.GetField,3,Object readObject(ObjectStreamClass desc),False,NULL
27,ObjectInputStream.GetField,4,Object readUnshared(ObjectStreamClass desc),False,NULL
27,ObjectInputStream.GetField,5,Object readObject(Class<?> desc),False,NULL
27,ObjectInputStream.GetField,6,Object readUnshared(Class<?> desc),False,NULL
27,ObjectInputStream.GetField,7,"Object readObject(Class<?> desc, ObjectStreamClass desc2)",False,NULL
27,ObjectInputStream.GetField,8,"Object readUnshared(Class<?> desc, ObjectStreamClass desc2)",False,NULL
27,ObjectInputStream.GetField,9,"Object readObject(ObjectStreamClass desc, Class<?> expected)",False,NULL
27,ObjectInputStream.GetField,10,"Object readUnshared(ObjectStreamClass desc, Class<?> expected)",False,NULL
27,ObjectInputStream.GetField,11,Object readObject(Class<?> expected),False,NULL
27,ObjectInputStream.GetField,12,Object readUnshared(Class<?> expected),False,NULL
27,ObjectInputStream.GetField,13,"Object readObject(ObjectStreamClass desc, Class<?> expected, ObjectStreamClass desc2)",False,NULL
27,ObjectInputStream.GetField,14,"Object readUnshared(ObjectStreamClass desc, Class<?> expected, ObjectStreamClass desc2)",False,NULL
27,ObjectInputStream.GetField,15,"Object readObject(Class<?> expected, ObjectStreamClass desc2)",False,NULL
27,ObjectInputStream.GetField,16,"Object readUnshared(Class<?> expected, ObjectStreamClass desc2)",False,NULL
27,ObjectInputStream.GetField,17,"Object readObject(ObjectStreamClass desc, Class<?> expected, Class<?> expected2)",False,NULL
27,ObjectInputStream.GetField,18,"Object readUnshared(ObjectStreamClass desc, Class<?> expected, Class<?> expected2)",False,NULL
27,ObjectInputStream.GetField,19,"Object readObject(Class<?> expected, Class<?> expected2)",False,NULL
27,ObjectInputStream.GetField,20,"Object readUnshared(Class<?> expected, Class<?> expected2)",False,NULL
28,ObjectOutputStream,1,ObjectOutputStream(OutputStream out),False,NULL
28,ObjectOutputStream,2,void writeObject(Object obj),True,Write the specified object to the ObjectOutputStream.
28,ObjectOutputStream,3,void write(int b),True,Writes a byte.
28,ObjectOutputStream,4,void writeBoolean(boolean v),True,Writes a boolean.
28,ObjectOutputStream,5,void writeByte(int v),True,Writes an 8 bit byte.
28,ObjectOutputStream,6,void writeChar(int v),True,Writes a 16 bit char.
28,ObjectOutputStream,7,void writeChars(String s),True,Writes a String as a sequence of chars.
28,ObjectOutputStream,8,void writeDouble(double v),True,Writes a 64 bit double.
28,ObjectOutputStream,9,void writeFields(),True,Write the buffered fields to the stream.
28,ObjectOutputStream,10,void writeFloat(float v),True,Writes a 32 bit float.
28,ObjectOutputStream,11,void writeInt(int v),True,Writes a 32 bit int.
28,ObjectOutputStream,12,void writeLong(long v),True,Writes a 64 bit long.
28,ObjectOutputStream,13,void writeObject(Object obj),True,Write the specified object to the ObjectOutputStream.
28,ObjectOutputStream,14,void writeShort(int v),True,Writes a 16 bit short.
28,ObjectOutputStream,15,void writeUTF(String str),True,Primitive data write of this String in modified UTF-8 format.
28,ObjectOutputStream,16,void defaultWriteObject(),True,Write the non-static and non-transient fields of the current class to this stream.
28,ObjectOutputStream,17,void reset(),True,Reset will disregard the state of any objects already written to the stream.
28,ObjectOutputStream,18,void close(),True,Closes the stream.
28,ObjectOutputStream,19,void flush(),True,Flushes the stream.
28,ObjectOutputStream,20,void write(byte[] b),True,Writes an array of bytes.
29,ObjectOutputStream.PutField,1,void writeObject(Object obj),False,NULL
29,ObjectOutputStream.PutField,2,void write(int b),False,NULL
29,ObjectOutputStream.PutField,3,void write(byte[] b),False,NULL
29,ObjectOutputStream.PutField,4,"void write(byte[] b, int off, int len)",False,NULL
29,ObjectOutputStream.PutField,5,void writeBoolean(boolean v),False,NULL
29,ObjectOutputStream.PutField,6,void writeByte(int v),False,NULL
29,ObjectOutputStream.PutField,7,void writeBytes(String s),False,NULL
29,ObjectOutputStream.PutField,8,void writeChar(int v),False,NULL
29,ObjectOutputStream.PutField,9,void writeChars(String s),False,NULL
29,ObjectOutputStream.PutField,10,void writeDouble(double v),False,NULL
29,ObjectOutputStream.PutField,11,"void writeField(String name, Object value, int type)",False,NULL
29,ObjectOutputStream.PutField,12,void writeFloat(float v),False,NULL
29,ObjectOutputStream.PutField,13,void writeInt(int v),False,NULL
29,ObjectOutputStream.PutField,14,void writeLong(long v),False,NULL
29,ObjectOutputStream.PutField,15,void writeShort(int v),False,NULL
29,ObjectOutputStream.PutField,16,void writeUTF(String str),False,NULL
29,ObjectOutputStream.PutField,17,void writeUnshared(Object obj),False,NULL
29,ObjectOutputStream.PutField,18,void defaultWriteObject(),False,NULL
29,ObjectOutputStream.PutField,19,"void writeObject(Object obj, ObjectOutput out)",False,NULL
29,ObjectOutputStream.PutField,20,void writeFields(),False,NULL
30,ObjectStreamClass,1,ObjectStreamClass forName(String className),False,NULL
30,ObjectStreamClass,2,ObjectStreamClass forClass(Class<?> cl),False,NULL
30,ObjectStreamClass,3,String getName(),True,Returns the name of the class described by this descriptor.
30,ObjectStreamClass,4,Class<?> getClass(),False,NULL
30,ObjectStreamClass,5,ObjectStreamField[] getFields(),True,Return an array of the fields of this serializable class.
31,ObjectStreamField,1,"ObjectStreamField(String name, Class<?> type, int offset, int size)",False,NULL
31,ObjectStreamField,2,String getName(),True,Get the name of this field.
31,ObjectStreamField,3,Class<?> getType(),True,Get the type of the field.
31,ObjectStreamField,4,int getOffset(),True,Offset of field within instance data.
31,ObjectStreamField,5,int getSize(),False,NULL
31,ObjectStreamField,6,"void set(Object obj, Object value)",False,NULL
31,ObjectStreamField,7,Object get(Object obj),False,NULL
31,ObjectStreamField,8,"void setBoolean(Object obj, boolean value)",False,NULL
31,ObjectStreamField,9,boolean getBoolean(Object obj),False,NULL
31,ObjectStreamField,10,"void setByte(Object obj, byte value)",False,NULL
31,ObjectStreamField,11,byte getByte(Object obj),False,NULL
31,ObjectStreamField,12,"void setChar(Object obj, char value)",False,NULL
31,ObjectStreamField,13,char getChar(Object obj),False,NULL
31,ObjectStreamField,14,"void setShort(Object obj, short value)",False,NULL
31,ObjectStreamField,15,short getShort(Object obj),False,NULL
31,ObjectStreamField,16,"void setInt(Object obj, int value)",False,NULL
31,ObjectStreamField,17,int getInt(Object obj),False,NULL
31,ObjectStreamField,18,"void setLong(Object obj, long value)",False,NULL
31,ObjectStreamField,19,long getLong(Object obj),False,NULL
31,ObjectStreamField,20,"void setFloat(Object obj, float value)",False,NULL
31,ObjectStreamField,21,float getFloat(Object obj),False,NULL
31,ObjectStreamField,22,"void setDouble(Object obj, double value)",False,NULL
31,ObjectStreamField,23,double getDouble(Object obj),False,NULL
31,ObjectStreamField,24,"void setObject(Object obj, Object value)",False,NULL
31,ObjectStreamField,25,Object getObject(Object obj),False,NULL
32,OutputStream,1,void write(int b),True,Writes the specified byte to this output stream.
32,OutputStream,2,void write(byte[] b),True,Writes b.length bytes from the specified byte array to this output stream.
32,OutputStream,3,"void write(byte[] b, int off, int len)",True,Writes len bytes from the specified byte array starting at offset off to this output stream.
32,OutputStream,4,void flush(),True,Flushes this output stream and forces any buffered output bytes to be written out.
32,OutputStream,5,void close(),True,Closes this output stream and releases any system resources associated with this stream.
33,OutputStreamWriter,1,OutputStreamWriter(OutputStream out),False,NULL
33,OutputStreamWriter,2,"OutputStreamWriter(OutputStream out, String charsetName)",False,NULL
33,OutputStreamWriter,3,void write(int c),True,Writes a single character.
33,OutputStreamWriter,4,void write(char[] cbuf),False,NULL
33,OutputStreamWriter,5,"void write(char[] cbuf, int off, int len)",True,Writes a portion of an array of characters.
33,OutputStreamWriter,6,void write(String str),False,NULL
33,OutputStreamWriter,7,"void write(String str, int off, int len)",True,Writes a portion of a string.
33,OutputStreamWriter,8,void flush(),True,Flushes the stream.
33,OutputStreamWriter,9,void close(),True,"Closes the stream, flushing it first."
34,PipedInputStream,1,int read(),True,Reads the next byte of data from this piped input stream.
34,PipedInputStream,2,int read(byte[] b),False,NULL
34,PipedInputStream,3,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from this piped input stream into an array of bytes.
34,PipedInputStream,4,void connect(PipedOutputStream src),True,Causes this piped input stream to be connected to the piped output stream src.
34,PipedInputStream,5,void disconnect(),False,NULL
35,PipedOutputStream,1,void connect(PipedInputStream snk) throws IOException,True,Connects this piped output stream to a receiver.
35,PipedOutputStream,2,void flush() throws IOException,True,Flushes this output stream and forces any buffered output bytes to be written out.
35,PipedOutputStream,3,void write(int b) throws IOException,True,Writes the specified byte to the piped output stream.
35,PipedOutputStream,4,void write(byte[] b) throws IOException,False,NULL
35,PipedOutputStream,5,"void write(byte[] b, int off, int len) throws IOException",True,Writes len bytes from the specified byte array starting at offset off to this piped output stream.
36,PipedReader,1,int read(),True,Reads the next character of data from this piped stream.
36,PipedReader,2,"int read(char cbuf[], int off, int len)",False,NULL
36,PipedReader,3,void connect(PipedWriter src) throws IOException,True,Causes this piped reader to be connected to the piped writer src.
36,PipedReader,4,"void connect(PipedWriter src, int pipeSize) throws IOException",False,NULL
36,PipedReader,5,void disconnect() throws IOException,False,NULL
37,PipedWriter,1,void connect(PipedReader src),True,Connects this piped writer to a receiver.
37,PipedWriter,2,void connect(PipedWriter snk),False,NULL
37,PipedWriter,3,void flush(),True,Flushes this output stream and forces any buffered output characters to be written out.
37,PipedWriter,4,void write(int c),True,Writes the specified char to the piped output stream.
37,PipedWriter,5,void write(char[] buf),False,NULL
37,PipedWriter,6,"void write(char[] buf, int off, int len)",True,Writes len characters from the specified character array starting at offset off to this piped output stream.
37,PipedWriter,7,void write(String s),False,NULL
37,PipedWriter,8,"void write(String s, int off, int len)",False,NULL
38,PrintStream,1,PrintStream(OutputStream out),False,NULL
38,PrintStream,2,void print(String s),True,Prints a string.
38,PrintStream,3,void println(String x),True,Prints a String and then terminate the line.
38,PrintStream,4,void println(Object x),True,Prints an Object and then terminate the line.
38,PrintStream,5,void println(),True,Terminates the current line by writing the line separator string.
39,PrintWriter,1,PrintWriter(Writer out),False,NULL
39,PrintWriter,2,"PrintWriter(Writer out, boolean autoFlush)",False,NULL
39,PrintWriter,3,PrintWriter(OutputStream out),False,NULL
39,PrintWriter,4,"PrintWriter(OutputStream out, boolean autoFlush)",False,NULL
39,PrintWriter,5,void print(String s),True,Prints a string.
39,PrintWriter,6,void print(char[] s),True,Prints an array of characters.
39,PrintWriter,7,void print(Object obj),True,Prints an object.
39,PrintWriter,8,void println(),True,Terminates the current line by writing the line separator string.
39,PrintWriter,9,void println(String x),True,Prints a String and then terminates the line.
39,PrintWriter,10,void println(char[] x),True,Prints an array of characters and then terminates the line.
39,PrintWriter,11,void println(Object x),True,Prints an Object and then terminates the line.
39,PrintWriter,12,void flush(),True,Flushes the stream.
39,PrintWriter,13,void close(),True,Closes the stream and releases any system resources associated with it.
40,PushbackInputStream,1,int read(),True,Reads the next byte of data from this input stream.
40,PushbackInputStream,2,int read(byte[] b),False,NULL
40,PushbackInputStream,3,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from this input stream into an array of bytes.
40,PushbackInputStream,4,void unread(int b),True,Pushes back a byte by copying it to the front of the pushback buffer.
40,PushbackInputStream,5,int available(),True,Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream.
41,PushbackReader,1,PushbackReader(Reader in),False,NULL
41,PushbackReader,2,"PushbackReader(Reader in, int size)",False,NULL
41,PushbackReader,3,int read(),True,Reads a single character.
41,PushbackReader,4,int read(char[] cbuf),False,NULL
41,PushbackReader,5,"int read(char[] cbuf, int off, int len)",True,Reads characters into a portion of an array.
41,PushbackReader,6,void unread(int c),True,Pushes back a single character by copying it to the front of the pushback buffer.
41,PushbackReader,7,"void unread(char[] cbuf, int off, int len)",True,Pushes back a portion of an array of characters by copying it to the front of the pushback buffer.
41,PushbackReader,8,void close(),True,Closes the stream and releases any system resources associated with it.
41,PushbackReader,9,void mark(int readAheadLimit),True,Marks the present position in the stream.
41,PushbackReader,10,void reset(),True,Resets the stream.
41,PushbackReader,11,boolean ready(),True,Tells whether this stream is ready to be read.
41,PushbackReader,12,long skip(long n),True,Skips characters.
41,PushbackReader,13,int read(CharBuffer target),False,NULL
41,PushbackReader,14,"int read(CharBuffer target, int position, int limit)",False,NULL
41,PushbackReader,15,"int read(CharBuffer target, int position)",False,NULL
41,PushbackReader,16,"int read(CharBuffer target, int position, int limit)",False,NULL
41,PushbackReader,17,"int read(CharBuffer target, int position, int limit)",False,NULL
41,PushbackReader,18,"int read(CharBuffer target, int position, int limit)",False,NULL
41,PushbackReader,19,"int read(CharBuffer target, int position, int limit)",False,NULL
41,PushbackReader,20,"int read(CharBuffer target, int position, int limit)",False,NULL
42,RandomAccessFile,1,"RandomAccessFile(String name, String mode)",False,NULL
42,RandomAccessFile,2,int read(),True,Reads a byte of data from this file.
42,RandomAccessFile,3,int read(byte[] b),True,Reads up to b.length bytes of data from this file into an array of bytes.
42,RandomAccessFile,4,"int read(byte[] b, int off, int len)",True,Reads up to len bytes of data from this file into an array of bytes.
42,RandomAccessFile,5,void write(int b),True,Writes the specified byte to this file.
42,RandomAccessFile,6,void write(byte[] b),True,"Writes b.length bytes from the specified byte array to this file, starting at the current file pointer."
42,RandomAccessFile,7,"void write(byte[] b, int off, int len)",True,Writes len bytes from the specified byte array starting at offset off to this file.
42,RandomAccessFile,8,void seek(long pos),True,"Sets the file-pointer offset, measured from the beginning of this file, at which the next read or write occurs."
42,RandomAccessFile,9,long length(),True,Returns the length of this file.
42,RandomAccessFile,10,void setLength(long newLength),True,Sets the length of this file.
42,RandomAccessFile,11,void close(),True,Closes this random access file stream and releases any system resources associated with the stream.
42,RandomAccessFile,12,void finalize(),False,NULL
43,Reader,1,int read(),True,Reads a single character.
43,Reader,2,int read(char[] cbuf),True,Reads characters into an array.
43,Reader,3,"int read(char[] cbuf, int off, int len)",True,Reads characters into a portion of an array.
43,Reader,4,long skip(long n),True,Skips characters.
43,Reader,5,boolean ready(),True,Tells whether this stream is ready to be read.
43,Reader,6,void close(),True,Closes the stream and releases any system resources associated with it.
43,Reader,7,int mark(int readAheadLimit),False,NULL
43,Reader,8,void reset(),True,Resets the stream.
43,Reader,9,boolean markSupported(),True,Tells whether this stream supports the mark() operation.
44,SequenceInputStream,1,SequenceInputStream(Enumeration<? extends InputStream> e),False,NULL
44,SequenceInputStream,2,"SequenceInputStream(InputStream s1, InputStream s2)",False,NULL
44,SequenceInputStream,3,int available() throws IOException,True,Returns an estimate of the number of bytes that can be read (or skipped over) from the current underlying input stream without blocking by the next invocation of a method for the current underlying input stream.
44,SequenceInputStream,4,void close() throws IOException,True,Closes this input stream and releases any system resources associated with the stream.
44,SequenceInputStream,5,void mark(int readlimit),False,NULL
44,SequenceInputStream,6,boolean markSupported(),False,NULL
44,SequenceInputStream,7,int read() throws IOException,True,Reads the next byte of data from this input stream.
44,SequenceInputStream,8,"int read(byte[] b, int off, int len) throws IOException",True,Reads up to len bytes of data from this input stream into an array of bytes.
44,SequenceInputStream,9,void reset() throws IOException,False,NULL
44,SequenceInputStream,10,long skip(long n) throws IOException,False,NULL
45,SerializablePermission,1,boolean equals(Object obj),False,NULL
45,SerializablePermission,2,int hashCode(),False,NULL
45,SerializablePermission,3,String getActions(),False,NULL
45,SerializablePermission,4,String getName(),False,NULL
45,SerializablePermission,5,String toString(),False,NULL
46,StreamTokenizer,1,StreamTokenizer(),False,NULL
46,StreamTokenizer,2,int nextToken(),True,Parses the next token from the input stream of this tokenizer.
46,StreamTokenizer,3,int nextToken(StringBuffer sb),False,NULL
46,StreamTokenizer,4,"int nextToken(char[] buffer, int offset, int length)",False,NULL
46,StreamTokenizer,5,"int nextToken(StringBuffer sb, char[] buffer, int offset, int length)",False,NULL
47,StringBufferInputStream,1,StringBufferInputStream(String s),False,NULL
47,StringBufferInputStream,2,int read(),True,Deprecated.
47,StringBufferInputStream,3,"int read(byte b[], int off, int len)",False,NULL
47,StringBufferInputStream,4,long skip(long n),True,Deprecated.
47,StringBufferInputStream,5,int available(),True,Deprecated.
48,StringReader,1,StringReader(String s),False,NULL
48,StringReader,2,int read(),True,Reads a single character.
48,StringReader,3,"int read(char[] cbuf, int off, int len)",True,Reads characters into a portion of an array.
48,StringReader,4,long skip(long n),True,Skips the specified number of characters in the stream.
48,StringReader,5,boolean ready(),True,Tells whether this stream is ready to be read.
49,StringWriter,1,StringWriter(),False,NULL
49,StringWriter,2,StringWriter(int initialSize),False,NULL
49,StringWriter,3,String getBuffer(),False,NULL
49,StringWriter,4,String toString(),True,Return the buffer's current value as a string.
49,StringWriter,5,void write(int c),True,Write a single character.
49,StringWriter,6,"void write(char[] cbuf, int off, int len)",True,Write a portion of an array of characters.
49,StringWriter,7,"void write(String str, int off, int len)",True,Write a portion of a string.
49,StringWriter,8,void write(String str),True,Write a string.
49,StringWriter,9,void flush(),True,Flush the stream.
49,StringWriter,10,void close(),True,Closing a StringWriter has no effect.
50,Writer,1,void write(int c),True,Writes a single character.
50,Writer,2,void write(char[] cbuf),True,Writes an array of characters.
50,Writer,3,"void write(char[] cbuf, int off, int len)",True,Writes a portion of an array of characters.
50,Writer,4,void write(String str),True,Writes a string.
50,Writer,5,"void write(String str, int off, int len)",True,Writes a portion of a string.
50,Writer,6,void flush(),True,Flushes the stream.
50,Writer,7,void close(),True,"Closes the stream, flushing it first."
