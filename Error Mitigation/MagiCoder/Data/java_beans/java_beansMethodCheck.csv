Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,BeanDescriptor,1,BeanDescriptor(Class beanClass),False,NULL
0,BeanDescriptor,2,Class getBeanClass(),False,NULL
0,BeanDescriptor,3,String getDisplayName(),False,NULL
0,BeanDescriptor,4,String getShortDescription(),False,NULL
0,BeanDescriptor,5,String getLongDescription(),False,NULL
1,Beans,1,boolean isDesignTime(),True,Test if we are in design-mode.
1,Beans,2,void setDesignTime(boolean b),True,Used to indicate whether of not we are running in an application builder environment.
1,Beans,3,void addPropertyChangeListener(PropertyChangeListener listener),False,NULL
1,Beans,4,void removePropertyChangeListener(PropertyChangeListener listener),False,NULL
1,Beans,5,"void firePropertyChange(String propertyName, Object oldValue, Object newValue)",False,NULL
2,DefaultPersistenceDelegate,1,Object getDefaultValue(Class<?> type),False,NULL
2,DefaultPersistenceDelegate,2,Object getInstance(Object object),False,NULL
2,DefaultPersistenceDelegate,3,Object getValue(Object object),False,NULL
2,DefaultPersistenceDelegate,4,"void setValue(Object object, Object value)",False,NULL
2,DefaultPersistenceDelegate,5,void setAsText(String text),False,NULL
3,Encoder,1,void setDebug(boolean debug),False,NULL
3,Encoder,2,void setPersistence(boolean persistence),False,NULL
3,Encoder,3,void setPrefix(String prefix),False,NULL
3,Encoder,4,void setSeparator(String separator),False,NULL
3,Encoder,5,void setSeparator(String separator),False,NULL
3,Encoder,6,void setSeparator(String separator),False,NULL
3,Encoder,7,void setSeparator(String separator),False,NULL
3,Encoder,8,void setSeparator(String separator),False,NULL
3,Encoder,9,void setSeparator(String separator),False,NULL
3,Encoder,10,void setSeparator(String separator),False,NULL
4,EventHandler,1,void addActionListener(ActionListener l),False,NULL
4,EventHandler,2,void removeActionListener(ActionListener l),False,NULL
4,EventHandler,3,void fireActionPerformed(ActionEvent e),False,NULL
4,EventHandler,4,void setEnabled(boolean b),False,NULL
4,EventHandler,5,boolean isEnabled(),False,NULL
5,EventSetDescriptor,1,"EventSetDescriptor(String eventSetName, Class<?> eventClass, Class<?> listenerClass)",False,NULL
5,EventSetDescriptor,2,String getEventSetName(),False,NULL
5,EventSetDescriptor,3,Class<?> getEventClass(),False,NULL
5,EventSetDescriptor,4,Class<?> getListenerClass(),False,NULL
5,EventSetDescriptor,5,void addEventListener(Object listener),False,NULL
5,EventSetDescriptor,6,void removeEventListener(Object listener),False,NULL
5,EventSetDescriptor,7,void fireEvent(Object event),False,NULL
5,EventSetDescriptor,8,"void fireEvent(Object event, Object listener)",False,NULL
5,EventSetDescriptor,9,"void fireEvent(Object event, Object listener, Object source)",False,NULL
5,EventSetDescriptor,10,"void fireEvent(Object event, Object listener, Object source, Object param)",False,NULL
6,Expression,1,boolean equals(Object obj),False,NULL
6,Expression,2,int hashCode(),False,NULL
6,Expression,3,Object evaluate(Object target),False,NULL
6,Expression,4,"Object evaluate(Object target, Object context)",False,NULL
6,Expression,5,"Object evaluate(Object target, Object context, Object scope)",False,NULL
7,FeatureDescriptor,1,String getName(),True,Gets the programmatic name of this feature.
7,FeatureDescriptor,2,Class<?> getPropertyType(),False,NULL
7,FeatureDescriptor,3,boolean isReadable(),False,NULL
7,FeatureDescriptor,4,boolean isWritable(),False,NULL
7,FeatureDescriptor,5,boolean isHidden(),True,"The ""hidden"" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans."
8,IndexedPropertyChangeEvent,1,int getIndex(),True,Gets the index of the property that was changed.
8,IndexedPropertyChangeEvent,2,Object getOldValue(),False,NULL
8,IndexedPropertyChangeEvent,3,Object getNewValue(),False,NULL
8,IndexedPropertyChangeEvent,4,Object getPropagationId(),False,NULL
8,IndexedPropertyChangeEvent,5,void setPropagationId(Object propagationId),False,NULL
9,IndexedPropertyDescriptor,1,"IndexedPropertyDescriptor(String name, Class<?> propertyType, Method readMethod, Method writeMethod)",False,NULL
9,IndexedPropertyDescriptor,2,Method getReadMethod(),False,NULL
9,IndexedPropertyDescriptor,3,Method getWriteMethod(),False,NULL
9,IndexedPropertyDescriptor,4,Class<?> getPropertyType(),False,NULL
9,IndexedPropertyDescriptor,5,String getName(),False,NULL
10,Introspector,1,BeanInfo getBeanInfo(Class<?> beanClass),True,"Introspect on a Java Bean and learn about all its properties, exposed methods, and events."
10,Introspector,2,BeanInfo getBeanInfo(Object bean),False,NULL
10,Introspector,3,PropertyDescriptor[] getBeanProperties(Class<?> beanClass),False,NULL
10,Introspector,4,PropertyDescriptor[] getBeanProperties(Object bean),False,NULL
10,Introspector,5,MethodDescriptor[] getBeanMethods(Class<?> beanClass),False,NULL
10,Introspector,6,MethodDescriptor[] getBeanMethods(Object bean),False,NULL
10,Introspector,7,EventSetDescriptor[] getBeanEventSetDescriptors(Class<?> beanClass),False,NULL
10,Introspector,8,EventSetDescriptor[] getBeanEventSetDescriptors(Object bean),False,NULL
10,Introspector,9,"BeanInfo getExpertBeanInfo(Class<?> beanClass, EventSetDescriptor[] events, PropertyDescriptor[] props)",False,NULL
10,Introspector,10,"BeanInfo getExpertBeanInfo(Object bean, EventSetDescriptor[] events, PropertyDescriptor[] props)",False,NULL
11,MethodDescriptor,1,"MethodDescriptor(String name, Class<?> returnType, Class<?>[] parameterTypes)",False,NULL
11,MethodDescriptor,2,String getName(),False,NULL
11,MethodDescriptor,3,Class<?> getReturnType(),False,NULL
11,MethodDescriptor,4,Class<?>[] getParameterTypes(),False,NULL
11,MethodDescriptor,5,boolean equals(Object obj),False,NULL
11,MethodDescriptor,6,int hashCode(),False,NULL
11,MethodDescriptor,7,String toString(),False,NULL
12,ParameterDescriptor,1,Class getParameterType(),False,NULL
12,ParameterDescriptor,2,void setParameterType(Class parameterType),False,NULL
12,ParameterDescriptor,3,String getName(),False,NULL
12,ParameterDescriptor,4,void setName(String name),False,NULL
12,ParameterDescriptor,5,boolean isHidden(),False,NULL
12,ParameterDescriptor,6,void setHidden(boolean hidden),False,NULL
12,ParameterDescriptor,7,boolean isPreferred(),False,NULL
12,ParameterDescriptor,8,void setPreferred(boolean preferred),False,NULL
12,ParameterDescriptor,9,boolean isOptional(),False,NULL
12,ParameterDescriptor,10,void setOptional(boolean optional),False,NULL
12,ParameterDescriptor,11,boolean isSigned(),False,NULL
12,ParameterDescriptor,12,void setSigned(boolean signed),False,NULL
12,ParameterDescriptor,13,boolean isVolatile(),False,NULL
12,ParameterDescriptor,14,void setVolatile(boolean volatile),False,NULL
12,ParameterDescriptor,15,boolean isTransient(),False,NULL
12,ParameterDescriptor,16,void setTransient(boolean transient),False,NULL
12,ParameterDescriptor,17,boolean isEnum(),False,NULL
12,ParameterDescriptor,18,void setEnum(boolean enum),False,NULL
12,ParameterDescriptor,19,boolean isExpert(),False,NULL
12,ParameterDescriptor,20,void setExpert(boolean expert),False,NULL
12,ParameterDescriptor,21,boolean isPreferred(),False,NULL
12,ParameterDescriptor,22,void setPreferred(boolean preferred),False,NULL
12,ParameterDescriptor,23,boolean isOptional(),False,NULL
12,ParameterDescriptor,24,void setOptional(boolean optional),False,NULL
12,ParameterDescriptor,25,boolean isReadOnly(),False,NULL
12,ParameterDescriptor,26,void setReadOnly(boolean readOnly),False,NULL
12,ParameterDescriptor,27,boolean isHidden(),False,NULL
12,ParameterDescriptor,28,void setHidden(boolean hidden),False,NULL
12,ParameterDescriptor,29,boolean isPreferred(),False,NULL
12,ParameterDescriptor,30,void setPreferred(boolean preferred),False,NULL
12,ParameterDescriptor,31,boolean isOptional(),False,NULL
12,ParameterDescriptor,32,void setOptional(boolean optional),False,NULL
12,ParameterDescriptor,33,boolean isTransient(),False,NULL
12,ParameterDescriptor,34,void setTransient(boolean transient),False,NULL
12,ParameterDescriptor,35,boolean isVolatile(),False,NULL
12,ParameterDescriptor,36,void setVolatile(boolean volatile),False,NULL
12,ParameterDescriptor,37,boolean isSigned(),False,NULL
12,ParameterDescriptor,38,void setSigned(boolean signed),False,NULL
12,ParameterDescriptor,39,boolean isEnum(),False,NULL
12,ParameterDescriptor,40,void setEnum(boolean enum),False,NULL
12,ParameterDescriptor,41,boolean isExpert(),False,NULL
12,ParameterDescriptor,42,void setExpert(boolean expert),False,NULL
12,ParameterDescriptor,43,boolean isReadOnly(),False,NULL
12,ParameterDescriptor,44,void setReadOnly(boolean readOnly),False,NULL
12,ParameterDescriptor,45,boolean isHidden(),False,NULL
12,ParameterDescriptor,46,void setHidden(boolean hidden),False,NULL
12,ParameterDescriptor,47,boolean isPreferred(),False,NULL
12,ParameterDescriptor,48,void setPreferred(boolean preferred),False,NULL
12,ParameterDescriptor,49,boolean isOptional(),False,NULL
12,ParameterDescriptor,50,void setOptional(boolean optional),False,NULL
12,ParameterDescriptor,51,boolean isTransient(),False,NULL
12,ParameterDescriptor,52,void setTransient(boolean transient),False,NULL
12,ParameterDescriptor,53,boolean isVolatile(),False,NULL
12,ParameterDescriptor,54,void setVolatile(boolean volatile),False,NULL
12,ParameterDescriptor,55,boolean isSigned(),False,NULL
12,ParameterDescriptor,56,void setSigned(boolean signed),False,NULL
12,ParameterDescriptor,57,boolean isEnum(),False,NULL
12,ParameterDescriptor,58,void setEnum(boolean enum),False,NULL
12,ParameterDescriptor,59,boolean isExpert(),False,NULL
12,ParameterDescriptor,60,void setExpert(boolean expert),False,NULL
12,ParameterDescriptor,61,boolean isReadOnly(),False,NULL
12,ParameterDescriptor,62,void setReadOnly(boolean readOnly),False,NULL
12,ParameterDescriptor,63,boolean isHidden(),False,NULL
12,ParameterDescriptor,64,void setHidden(boolean hidden),False,NULL
12,ParameterDescriptor,65,boolean isPreferred(),False,NULL
12,ParameterDescriptor,66,void setPreferred(boolean preferred),False,NULL
13,PersistenceDelegate,1,Object getValue(Object target),False,NULL
13,PersistenceDelegate,2,"void setValue(Object target, Object value)",False,NULL
13,PersistenceDelegate,3,boolean isCircularReference(Object target),False,NULL
13,PersistenceDelegate,4,Object getAsText(),False,NULL
13,PersistenceDelegate,5,void setAsText(String text),False,NULL
14,PropertyChangeEvent,1,"PropertyChangeEvent(Object source, String propertyName)",False,NULL
14,PropertyChangeEvent,2,Object getNewValue(),True,"Gets the new value for the property, expressed as an Object."
14,PropertyChangeEvent,3,Object getOldValue(),True,"Gets the old value for the property, expressed as an Object."
14,PropertyChangeEvent,4,String getPropertyName(),True,Gets the programmatic name of the property that was changed.
14,PropertyChangeEvent,5,Object getSource(),False,NULL
15,PropertyChangeListenerProxy,1,void addPropertyChangeListener(PropertyChangeListener listener),False,NULL
15,PropertyChangeListenerProxy,2,void removePropertyChangeListener(PropertyChangeListener listener),False,NULL
15,PropertyChangeListenerProxy,3,"void addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",False,NULL
15,PropertyChangeListenerProxy,4,"void removePropertyChangeListener(String propertyName, PropertyChangeListener listener)",False,NULL
15,PropertyChangeListenerProxy,5,PropertyChangeListener[] getPropertyChangeListeners(),False,NULL
16,PropertyChangeSupport,1,void addPropertyChangeListener(PropertyChangeListener listener),True,Add a PropertyChangeListener to the listener list.
16,PropertyChangeSupport,2,void removePropertyChangeListener(PropertyChangeListener listener),True,Remove a PropertyChangeListener from the listener list.
16,PropertyChangeSupport,3,"void firePropertyChange(String propertyName, Object oldValue, Object newValue)",True,Reports a bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.
16,PropertyChangeSupport,4,"void firePropertyChange(String propertyName, int oldValue, int newValue)",True,Reports an integer bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.
16,PropertyChangeSupport,5,"void firePropertyChange(String propertyName, boolean oldValue, boolean newValue)",True,Reports a boolean bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.
17,PropertyDescriptor,1,"PropertyDescriptor(String propertyName, Method readMethod, Method writeMethod)",False,NULL
17,PropertyDescriptor,2,"PropertyDescriptor(String propertyName, Class<?> beanClass, String readMethod, String writeMethod)",False,NULL
17,PropertyDescriptor,3,"PropertyDescriptor(String propertyName, Class<?> beanClass, String readMethod)",False,NULL
17,PropertyDescriptor,4,"PropertyDescriptor(String propertyName, Class<?> beanClass, String writeMethod)",False,NULL
17,PropertyDescriptor,5,"PropertyDescriptor(String propertyName, Class<?> beanClass)",False,NULL
17,PropertyDescriptor,6,"PropertyDescriptor(String propertyName, Class<?> beanClass, String methodName)",False,NULL
17,PropertyDescriptor,7,"PropertyDescriptor(String propertyName, Class<?> beanClass, String methodName, Class<?> methodParamType)",False,NULL
17,PropertyDescriptor,8,"PropertyDescriptor(String propertyName, Class<?> beanClass, String methodName, Class<?>[] methodParamTypes)",False,NULL
17,PropertyDescriptor,9,"PropertyDescriptor(String propertyName, Class<?> beanClass, String methodName, Class<?> methodParamType, Class<?>[] methodParamTypes)",False,NULL
17,PropertyDescriptor,10,"PropertyDescriptor(String propertyName, Class<?> beanClass, String methodName, Class<?> methodParamType, Class<?>[] methodParamTypes, Class<?>[] methodExceptionTypes)",False,NULL
18,PropertyEditorManager,1,PropertyEditorManager getInstance(),False,NULL
18,PropertyEditorManager,2,"void register(Class<?> clazz, PropertyEditor editor)",False,NULL
18,PropertyEditorManager,3,void unregister(Class<?> clazz),False,NULL
18,PropertyEditorManager,4,PropertyEditor findEditor(Class<?> clazz),True,Locate a value editor for a given target type.
18,PropertyEditorManager,5,"void addPropertyEditor(Class<?> clazz, PropertyEditor editor)",False,NULL
19,PropertyEditorSupport,1,void setValue(Object value),True,Set (or change) the object that is to be edited.
19,PropertyEditorSupport,2,Object getValue(),True,Gets the value of the property.
19,PropertyEditorSupport,3,void setAsText(String text),True,Sets the property value by parsing a given String.
19,PropertyEditorSupport,4,String getAsText(),True,Gets the property value as a string suitable for presentation to a human to edit.
19,PropertyEditorSupport,5,void setValue(Object value),True,Set (or change) the object that is to be edited.
20,SimpleBeanInfo,1,Class<?> getBeanClass(),False,NULL
20,SimpleBeanInfo,2,PropertyDescriptor[] getPropertyDescriptors(),True,Deny knowledge of properties.
20,SimpleBeanInfo,3,EventSetDescriptor[] getEventSetDescriptors(),True,Deny knowledge of event sets.
20,SimpleBeanInfo,4,MethodDescriptor[] getMethodDescriptors(),True,Deny knowledge of methods.
20,SimpleBeanInfo,5,BeanDescriptor getBeanDescriptor(),True,Deny knowledge about the class and customizer of the bean.
21,Statement,1,boolean add(E e),False,NULL
21,Statement,2,boolean addAll(Collection<? extends E> c),False,NULL
21,Statement,3,void clear(),False,NULL
21,Statement,4,boolean contains(Object o),False,NULL
21,Statement,5,boolean containsAll(Collection<?> c),False,NULL
21,Statement,6,boolean equals(Object o),False,NULL
21,Statement,7,E get(int index),False,NULL
21,Statement,8,int indexOf(Object o),False,NULL
21,Statement,9,boolean isEmpty(),False,NULL
21,Statement,10,Iterator<E> iterator(),False,NULL
21,Statement,11,int lastIndexOf(Object o),False,NULL
21,Statement,12,ListIterator<E> listIterator(),False,NULL
21,Statement,13,ListIterator<E> listIterator(int index),False,NULL
21,Statement,14,boolean remove(Object o),False,NULL
21,Statement,15,E remove(int index),False,NULL
21,Statement,16,boolean removeAll(Collection<?> c),False,NULL
21,Statement,17,boolean retainAll(Collection<?> c),False,NULL
21,Statement,18,"E set(int index, E element)",False,NULL
21,Statement,19,int size(),False,NULL
21,Statement,20,"List<E> subList(int fromIndex, int toIndex)",False,NULL
22,VetoableChangeListenerProxy,1,void addVetoableChangeListener(VetoableChangeListener l),False,NULL
22,VetoableChangeListenerProxy,2,void removeVetoableChangeListener(VetoableChangeListener l),False,NULL
22,VetoableChangeListenerProxy,3,VetoableChangeListener[] getVetoableChangeListeners(),False,NULL
22,VetoableChangeListenerProxy,4,void fireVetoableChange(PropertyChangeEvent e),False,NULL
22,VetoableChangeListenerProxy,5,void vetoableChange(PropertyChangeEvent e),True,Forwards the property change event to the listener delegate.
23,VetoableChangeSupport,1,void addVetoableChangeListener(PropertyChangeListener listener),False,NULL
23,VetoableChangeSupport,2,void removeVetoableChangeListener(PropertyChangeListener listener),False,NULL
23,VetoableChangeSupport,3,"void fireVetoableChange(String propertyName, Object oldValue, Object newValue)",True,Reports a constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.
23,VetoableChangeSupport,4,void setVetoableChangeSupport(VetoableChangeSupport vetoableChangeSupport),False,NULL
23,VetoableChangeSupport,5,VetoableChangeSupport getVetoableChangeSupport(),False,NULL
24,XMLDecoder,1,Object readObject(),True,Reads the next object from the underlying input stream.
24,XMLDecoder,2,Object readObject(Class cl),False,NULL
24,XMLDecoder,3,"Object readObject(Class cl, ObjectStreamClass desc)",False,NULL
24,XMLDecoder,4,Object readUnshared(),False,NULL
24,XMLDecoder,5,Object readUnshared(Class cl),False,NULL
24,XMLDecoder,6,"Object readUnshared(Class cl, ObjectStreamClass desc)",False,NULL
24,XMLDecoder,7,void setClassLoader(ClassLoader cl),False,NULL
24,XMLDecoder,8,void setObjectInputStreamFactory(ObjectInputStreamFactory oisf),False,NULL
24,XMLDecoder,9,void setPersistentClass(Class cl),False,NULL
24,XMLDecoder,10,void setUseContextClassLoader(boolean use),False,NULL
24,XMLDecoder,11,void setUsePrimitives(boolean use),False,NULL
24,XMLDecoder,12,void setUseWrapperClasses(boolean use),False,NULL
25,XMLEncoder,1,void close(),True,"This method calls flush, writes the closing postamble and then closes the output stream associated with this stream."
25,XMLEncoder,2,"void setPersistenceDelegate(Class clazz, PersistenceDelegate pd)",False,NULL
25,XMLEncoder,3,void setProperties(Properties props),False,NULL
25,XMLEncoder,4,"void setSurrogate(Class clazz, Surrogate s)",False,NULL
25,XMLEncoder,5,void write(Object obj),False,NULL
