Sample: 0 InputContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for the input method framework.
Here is the description of the class Provides methods to control text input facilities such as input methods and keyboard layouts.

@@ Instruction
I want to use java.awt.im.InputContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean setFocusOwner(Component c)`: This method sets the focus owner of the input context.

2. `Component getFocusOwner()`: This method returns the focus owner of the input context.

3. `void setCursorPosition(int pos)`: This method sets the cursor position in the input context.

4. `int getCursorPosition()`: This method returns the cursor position in the input context.

5. `void setXMLElements(String xml)`: This method sets the XML elements in the input context.

6. `String getXMLElements()`: This method returns the XML elements in the input context.

7. `void setCharacterShape(int charIndex, int charWidth, int charHeight, int charBaseline, int[] charAttrs, int[] charLoc)`: This method sets the character shape in the input context.

8. `void getCharacterShape(int charIndex, int[] charWidth, int[] charHeight, int[] charBaseline, int[] charAttrs, int[] charLoc)`: This method gets the character shape in the input context.

9. `void setCharacterAttributes(int charIndex, int charAttrs, int[] charLoc)`: This method sets the character attributes in the input context.

10. `void getCharacterAttributes(int charIndex, int[] charAttrs, int[] charLoc)`: This method gets the character attributes in the input context.

11. `void setAttributes(AttributeSet attrs)`: This method sets the attributes in the input context.

12. `AttributeSet getAttributes()`: This method returns the attributes in the input context.

13. `void setInputMethod(InputMethod im)`: This method sets the input method in the input context.

14. `InputMethod getInputMethod()`: This method returns the input method in the input context.

15. `void setInputMethodRequests(InputMethodRequests imr)`: This method sets the input method requests in the input context.

16. `InputMethodRequests getInputMethodRequests()`: This method returns the input method requests in the input context.

17. `void setInputContext(InputContext ic)`: This method sets the input context in the input context.

18. `InputContext getInputContext()`: This method returns the input context in the input context.

19. `void setInputMethodAware(boolean aware)`: This method sets the input method aware in the input context.

20. `boolean isInputMethodAware()`: This method returns whether the input method is aware in the input context.
================================================================

Sample: 1 InputMethodHighlight
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for the input method framework.
Here is the description of the class An InputMethodHighlight is used to describe the highlight attributes of text being composed.

@@ Instruction
I want to use java.awt.im.InputMethodHighlight package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isActive()`: This method returns true if the highlight is active.
2. `boolean isPrimary()`: This method returns true if the highlight is primary.
3. `boolean isSecondary()`: This method returns true if the highlight is secondary.
4. `boolean isUnderlined()`: This method returns true if the highlight is underlined.
5. `boolean isBold()`: This method returns true if the highlight is bold.
6. `boolean isItalic()`: This method returns true if the highlight is italic.
7. `boolean isInvisible()`: This method returns true if the highlight is invisible.
8. `boolean isStrikethrough()`: This method returns true if the highlight is strikethrough.
9. `boolean isSuperscript()`: This method returns true if the highlight is superscript.
10. `boolean isSubscript()`: This method returns true if the highlight is subscript.
11. `boolean isSmallCaps()`: This method returns true if the highlight is small caps.
12. `boolean isAllCaps()`: This method returns true if the highlight is all caps.
13. `boolean isLowerCase()`: This method returns true if the highlight is lower case.
14. `boolean isUpperCase()`: This method returns true if the highlight is upper case.
15. `boolean isMnemonic()`: This method returns true if the highlight is a mnemonic.
16. `boolean isMnemonicLike()`: This method returns true if the highlight is mnemonic-like.
17. `boolean isNoBreak()`: This method returns true if the highlight is no break.
18. `boolean isSoftHyphen()`: This method returns true if the highlight is a soft hyphen.
19. `boolean isEmbedded()`: This method returns true if the highlight is embedded.
20. `boolean isHidden()`: This method returns true if the highlight is hidden.
21. `boolean isPrivateUse()`: This method returns true if the highlight is private use.
22. `boolean isDisabled()`: This method returns true if the highlight is disabled.
23. `boolean isEditable()`: This method returns true if the highlight is editable.
24. `boolean isSelectable()`: This method returns true if the highlight is selectable.
25. `boolean isTrailing()`: This method returns true if the highlight is trailing.
26. `boolean isLeading()`: This method returns true if the highlight is leading.
27. `boolean isSoft()`: This method returns true if the highlight is soft.
28. `boolean isHard()`: This method returns true if the highlight is hard.
29. `boolean isSoftWrap()`: This method returns true if the highlight is soft wrap.
30. `boolean isHardWrap()`: This method returns true if the highlight is hard wrap.
31. `boolean isSoftLineBreak()`: This method returns true if the highlight is soft line break.
32. `boolean isHardLineBreak()`: This method returns true if the highlight is hard line break.
33. `boolean isSoftSpace()`: This method returns true if the highlight is soft space.
34. `boolean isHardSpace()`: This method returns true if the highlight is hard space.
35. `boolean isSoftTab()`: This method returns true if the highlight is soft tab.
36. `boolean isHardTab()`: This method returns true if the highlight is hard tab.
37. `boolean isSoftReturn()`: This method returns true if the highlight is soft return.
38. `boolean isHardReturn()`: This method returns true if the highlight is hard return.
39. `boolean isSoftLineStart()`: This method returns true if the highlight is soft line start.
40. `boolean isHardLineStart()`: This method returns true if the highlight is hard line start.
41. `boolean isSoftLineEnd()`: This method returns true if the highlight is soft line end.
42. `boolean isHardLineEnd()`: This method returns true if the highlight is hard line end.
43. `boolean isSoftParagraphStart()`: This method returns true if the highlight is soft paragraph start.
44. `boolean isHardParagraphStart()`: This method returns true if the highlight is hard paragraph start.
45. `boolean isSoftParagraphEnd()`: This method returns true if the highlight is soft paragraph end.
46. `boolean isHardParagraphEnd()`: This method returns true if the highlight is hard paragraph end.
47. `boolean isSoftPageStart()`: This method returns true if the highlight is soft page start.
48. `boolean isHardPageStart()`: This method returns true if the highlight is hard page start.
49. `boolean isSoftPageEnd()`: This method returns true if the highlight is soft page end.
50. `boolean isHardPageEnd()`: This method returns true if the highlight is hard page end.
51. `boolean isSoftColumnStart()`: This method returns true if the highlight is soft column start.
52. `boolean isHardColumnStart()`: This method returns true if the highlight is hard column start.
53. `boolean isSoftColumnEnd()`: This method returns true if the highlight is soft column end.
54. `boolean isHardColumnEnd()`: This method returns true if the highlight is hard column end.
55. `boolean isSoftLineBase()`: This method returns true if the highlight is soft line base.
56. `boolean isHardLineBase()`: This method returns true if the highlight is hard line base.
57. `boolean isSoftLineTop()`: This method returns true if the highlight is soft line top.
58. `boolean isHardLineTop()`: This method returns true if the highlight is hard line top.
59. `boolean isSoftLineBottom()`: This method returns true if the highlight is soft line bottom.
60. `boolean isHardLineBottom()`: This method returns true if the highlight is hard line bottom.
61. `boolean isSoftParagraphBase()`: This method returns true if the highlight is soft paragraph base.
62. `boolean isHardParagraphBase()`: This method returns true if the highlight is hard paragraph base.
63. `boolean isSoftParagraphTop()`: This method returns true if the highlight is soft paragraph top.
64. `boolean isHardParagraphTop()`: This method returns true if the highlight is hard paragraph top.
65. `boolean isSoftParagraphBottom()`: This method returns true if the highlight is soft paragraph bottom.
66. `boolean isHardParagraphBottom()`: This method returns true if the highlight is hard paragraph bottom.
67. `boolean isSoftPageBase()`: This method returns true if the highlight is soft page base.
68. `boolean isHardPageBase()`: This method returns true if the highlight is hard page base.
69. `boolean isSoftPageTop()`: This method returns true if the highlight is soft page top.
70. `boolean isHardPageTop()`: This method returns true if the highlight is hard page top.
71. `boolean isSoftPageBottom()`: This method returns true if the highlight is soft page bottom.
72. `boolean isHardPageBottom()`: This method returns true if the highlight is hard page bottom.
73. `boolean isSoftColumnBase()`: This method returns true if the highlight is soft column base.
74. `boolean isHardColumnBase()`: This method returns true if the highlight is hard column base.
75. `boolean isSoftColumnTop()`: This method returns true if the highlight is soft column top.
76. `boolean isHardColumnTop()`: This method returns true if the highlight is hard column
================================================================

Sample: 2 InputSubset
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for the input method framework.
Here is the description of the class Defines additional Unicode subsets for use by input methods.

@@ Instruction
I want to use java.awt.im.InputSubset package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

