Sample: 0 PhantomReference
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides reference-object classes, which support a limited degree ofinteraction with the garbage collector.
Here is the description of the class Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed.

@@ Instruction
I want to use java.lang.ref.PhantomReference package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PhantomReference(Object referent, ReferenceQueue<? super Object> q)`: This constructor is used to create a new PhantomReference that refers to the given object and is registered with the specified queue.

2. `get()`: This method returns the object the PhantomReference is referring to, or null if that object has been collected.

3. `isEnqueued()`: This method returns true if this PhantomReference is currently enqueued in its ReferenceQueue.

4. `clear()`: This method clears this PhantomReference, making it no longer enqueued in its ReferenceQueue.

5. `finalize()`: This method is called by the garbage collector on an object when garbage collection becomes necessary.
================================================================

Sample: 1 Reference
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides reference-object classes, which support a limited degree ofinteraction with the garbage collector.
Here is the description of the class Abstract base class for reference objects.

@@ Instruction
I want to use java.lang.ref.Reference package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ReferenceQueue`: This class represents a queue of reference objects whose finalization status may have changed.

2. `WeakReference`: This class represents a reference that can be held weakly.

3. `PhantomReference`: This class represents a reference that can be queried to determine if it has been enqueued.

4. `SoftReference`: This class represents a reference that is softly reachable.

5. `FinalReference`: This class represents a reference that is guaranteed to be finalized.
================================================================

Sample: 2 ReferenceQueue
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides reference-object classes, which support a limited degree ofinteraction with the garbage collector.
Here is the description of the class Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected.

@@ Instruction
I want to use java.lang.ref.ReferenceQueue package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `E remove()`: This method removes and returns the head of this list.
3. `E poll()`: This method retrieves and removes the head of this list, or returns null if this list is empty.
4. `E element()`: This method retrieves, but does not remove, the head of this list.
5. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
================================================================

Sample: 3 SoftReference
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides reference-object classes, which support a limited degree ofinteraction with the garbage collector.
Here is the description of the class Soft reference objects, which are cleared at the discretion of the garbage collector in response to memory demand.

@@ Instruction
I want to use java.lang.ref.SoftReference package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SoftReference(T referent)`: This constructor is used to create a new SoftReference that refers to the given object.

2. `T get()`: This method returns the object the soft reference is referring to, or null if that object has been discarded by the garbage collector in response to memory demand.

3. `void clear()`: This method discards the object the soft reference is referring to, making it subject to garbage collection.

4. `boolean enqueue()`: This method attempts to make the soft reference's referent available for finalization.

5. `boolean isEnqueued()`: This method returns true if the soft reference's referent is currently enqueued for finalization.
================================================================

Sample: 4 WeakReference
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides reference-object classes, which support a limited degree ofinteraction with the garbage collector.
Here is the description of the class Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed.

@@ Instruction
I want to use java.lang.ref.WeakReference package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `WeakReference(T referent)`: This is the constructor of WeakReference class. It takes a reference to an object and keeps a weak reference to it.

2. `T get()`: This method returns the object the WeakReference is referring to, or null if that object has been garbage collected.

3. `void clear()`: This method removes the reference to the referent object and makes this WeakReference object eligible for garbage collection.

4. `boolean enqueue()`: This method attempts to add this reference to the queue.

5. `T getAndClear()`: This method atomically gets the referent and clears the reference.
================================================================

