Sample: AffineTransform_4
----------------------------------------------------------------
stdout:
AffineTransform[[1.0, 0.0, 10.0], [0.0, 1.0, 20.0]]

================================================================

Sample: AffineTransform_5
----------------------------------------------------------------
stdout:
AffineTransform[[2.0, 0.0, 0.0], [0.0, 3.0, 0.0]]

================================================================

Sample: AffineTransform_6
----------------------------------------------------------------
stdout:
AffineTransform[[0.0, -1.0, 0.0], [1.0, 0.0, 0.0]]

================================================================

Sample: AffineTransform_7
----------------------------------------------------------------
stdout:
AffineTransform[[1.0, 1.0, 0.0], [2.0, 1.0, 0.0]]

================================================================

Sample: AffineTransform_8
----------------------------------------------------------------
stdout:
at1: AffineTransform[[1.0, 0.0, 10.0], [0.0, 1.0, 10.0]]
at2: AffineTransform[[1.0, 0.0, 10.0], [0.0, 1.0, 10.0]]

================================================================

Sample: AffineTransform_12
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Arc2D_6
----------------------------------------------------------------
stdout:
Does the arc contain the rectangle? true

================================================================

Sample: Arc2D_9
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Arc2D_11
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Arc2D_13
----------------------------------------------------------------
stdout:
false

================================================================

Sample: Arc2D_Double_2
----------------------------------------------------------------
stdout:
X coordinate of the upper-left corner of the framing rectangle: 0.0

================================================================

Sample: Arc2D_Double_3
----------------------------------------------------------------
stdout:
Y coordinate of the upper-left corner of the framing rectangle: 0.0

================================================================

Sample: Arc2D_Double_4
----------------------------------------------------------------
stdout:
Width of the arc: 100.0

================================================================

Sample: Arc2D_Double_5
----------------------------------------------------------------
stdout:
Height of the arc: 100.0

================================================================

Sample: Area_2
----------------------------------------------------------------
stdout:
Is the point inside the area? true

================================================================

Sample: Area_3
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_5
----------------------------------------------------------------
stdout:
Does the area intersect with rect2? true

================================================================

Sample: Area_7
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_8
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_9
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_10
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_11
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_12
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_13
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_14
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_15
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_16
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_17
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_18
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_19
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_20
----------------------------------------------------------------
stdout:
true

================================================================

Sample: CubicCurve2D_2
----------------------------------------------------------------
stdout:
The X coordinate of the first control point is: 10.0

================================================================

Sample: CubicCurve2D_3
----------------------------------------------------------------
stdout:
Y coordinate of the first control point: 10.0

================================================================

Sample: CubicCurve2D_4
----------------------------------------------------------------
stdout:
The X coordinate of the second control point is: 2.0

================================================================

Sample: CubicCurve2D_5
----------------------------------------------------------------
stdout:
The Y coordinate of the second control point is: 20.0

================================================================

Sample: CubicCurve2D_6
----------------------------------------------------------------
stdout:
X coordinate of the start point: 0.0

================================================================

Sample: CubicCurve2D_7
----------------------------------------------------------------
stdout:
Y1 coordinate of the start point: 0.0

================================================================

Sample: CubicCurve2D_8
----------------------------------------------------------------
stdout:
X2 coordinate of the end point: 3.0

================================================================

Sample: CubicCurve2D_9
----------------------------------------------------------------
stdout:
Y2 coordinate of the end point: 3.0

================================================================

Sample: CubicCurve2D_17
----------------------------------------------------------------
stdout:
Flatness: 1.0

================================================================

Sample: CubicCurve2D_Double_2
----------------------------------------------------------------
stdout:
X coordinate of the first control point: 1.0

================================================================

Sample: CubicCurve2D_Double_3
----------------------------------------------------------------
stdout:
Y coordinate of the first control point: 1.0

================================================================

Sample: CubicCurve2D_Double_4
----------------------------------------------------------------
stdout:
The X coordinate of the second control point is: 2.0

================================================================

Sample: CubicCurve2D_Double_5
----------------------------------------------------------------
stdout:
Y coordinate of the second control point: 2.0

================================================================

Sample: CubicCurve2D_Double_6
----------------------------------------------------------------
stdout:
X1: 1.0

================================================================

Sample: CubicCurve2D_Double_7
----------------------------------------------------------------
stdout:
Y coordinate of the start point: 0.0

================================================================

Sample: CubicCurve2D_Double_8
----------------------------------------------------------------
stdout:
X coordinate of the end point: 3.0

================================================================

Sample: CubicCurve2D_Double_9
----------------------------------------------------------------
stdout:
Y2 coordinate of the end point: 3.0

================================================================

Sample: CubicCurve2D_Double_10
----------------------------------------------------------------
================================================================

Sample: CubicCurve2D_Float_2
----------------------------------------------------------------
================================================================

Sample: Dimension2D_1
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_1.java:6: error: incompatible types: Double cannot be converted to Dimension2D
        Dimension2D dimension = new Rectangle2D.Double(10, 20, 30, 40);
                                ^
1 error


================================================================

Sample: Dimension2D_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_2.java:6: error: incompatible types: Double cannot be converted to Dimension2D
        Dimension2D dimension = new Rectangle2D.Double(10, 20, 30, 40);
                                ^
1 error


================================================================

Sample: Dimension2D_3
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_3.java:7: error: cannot find symbol
        rect.setSize(100, 200);
            ^
  symbol:   method setSize(int,int)
  location: variable rect of type Rectangle2D
1 error


================================================================

Sample: Dimension2D_4
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_4.java:6: error: incompatible types: Double cannot be converted to Dimension2D
        Dimension2D d = new Rectangle2D.Double(10, 20, 30, 40);
                        ^
./Data/java_awt_geom/javaFiles/Dimension2D_4.java:8: error: cannot find symbol
        rect.setSize(d);
            ^
  symbol:   method setSize(Dimension2D)
  location: variable rect of type Rectangle2D
2 errors


================================================================

Sample: Dimension2D_5
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_5.java:7: error: cannot find symbol
        rect.setSize(100, 200);
            ^
  symbol:   method setSize(int,int)
  location: variable rect of type Rectangle2D
1 error


================================================================

Sample: Ellipse2D_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Ellipse2D_5
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Ellipse2D_Double_1
----------------------------------------------------------------
stdout:
X coordinate of the upper-left corner of the framing rectangle: 10.0

================================================================

Sample: Ellipse2D_Double_2
----------------------------------------------------------------
stdout:
Y coordinate of the upper-left corner of the framing rectangle: 20.0

================================================================

Sample: Ellipse2D_Double_3
----------------------------------------------------------------
stdout:
Width: 100.0

================================================================

Sample: Ellipse2D_Double_4
----------------------------------------------------------------
stdout:
Height of the ellipse: 20.0

================================================================

Sample: Ellipse2D_Double_5
----------------------------------------------------------------
================================================================

Sample: Ellipse2D_Float_9
----------------------------------------------------------------
stdout:
X: 10.0, Y: 10.0, Width: 50.0, Height: 50.0

================================================================

Sample: Ellipse2D_Float_10
----------------------------------------------------------------
stdout:
Is the ellipse empty? true

================================================================

Sample: Ellipse2D_Float_11
----------------------------------------------------------------
================================================================

Sample: Ellipse2D_Float_17
----------------------------------------------------------------
================================================================

Sample: FlatteningPathIterator_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_2.java:13: error: no suitable constructor found for FlatteningPathIterator(PathIterator)
        FlatteningPathIterator flatteningIterator = new FlatteningPathIterator(iterator);
                                                    ^
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double) is not applicable
      (actual and formal argument lists differ in length)
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: FlatteningPathIterator_5
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_5.java:7: error: incompatible types: <null> cannot be converted to double
        FlatteningPathIterator iterator = new FlatteningPathIterator(null, null);
                                                                           ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: Line2D_2
----------------------------------------------------------------
stdout:
X1: 1.0

================================================================

Sample: Line2D_3
----------------------------------------------------------------
stdout:
Y1: 2.0

================================================================

Sample: Line2D_4
----------------------------------------------------------------
stdout:
X2: 3.0

================================================================

Sample: Line2D_5
----------------------------------------------------------------
stdout:
Y2: 4.0

================================================================

Sample: Line2D_Double_2
----------------------------------------------------------------
stdout:
X1: 1.0

================================================================

Sample: Line2D_Double_3
----------------------------------------------------------------
stdout:
Y coordinate of the start point: 2.0

================================================================

Sample: Line2D_Double_4
----------------------------------------------------------------
stdout:
X2: 3.0

================================================================

Sample: Line2D_Double_5
----------------------------------------------------------------
stdout:
Y2 coordinate of the end point: 4.0

================================================================

Sample: Line2D_Float_3
----------------------------------------------------------------
stdout:
X1: 1.0

================================================================

Sample: Line2D_Float_4
----------------------------------------------------------------
stdout:
Y coordinate of the start point: 2.0

================================================================

Sample: Line2D_Float_5
----------------------------------------------------------------
stdout:
X2: 3.0

================================================================

Sample: Line2D_Float_6
----------------------------------------------------------------
stdout:
Y2: 4.0

================================================================

Sample: Path2D_4
----------------------------------------------------------------
================================================================

Sample: Path2D_5
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Path2D_6
----------------------------------------------------------------
stdout:
Point is inside the path: false

================================================================

Sample: Path2D_7
----------------------------------------------------------------
stdout:
Does the path contain the rectangle? false

================================================================

Sample: Path2D_8
----------------------------------------------------------------
stdout:
false

================================================================

Sample: Path2D_10
----------------------------------------------------------------
stdout:
Does the path intersect the rectangle? true

================================================================

Sample: Path2D_11
----------------------------------------------------------------
stdout:
Intersects: true

================================================================

Sample: Path2D_15
----------------------------------------------------------------
stdout:
Path before reset: java.awt.geom.Path2D$Double@17211155
Path after reset: java.awt.geom.Path2D$Double@17211155

================================================================

Sample: Path2D_16
----------------------------------------------------------------
================================================================

Sample: Path2D_17
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@727803de

================================================================

Sample: Path2D_18
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@5c072e3f

================================================================

Sample: Path2D_20
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_20.java:20: error: reference to currentSegment is ambiguous
            int type = pi.currentSegment(null);
                         ^
  both method currentSegment(float[]) in PathIterator and method currentSegment(double[]) in PathIterator match
1 error


================================================================

Sample: Point2D_1
----------------------------------------------------------------
stdout:
X coordinate: 5.0

================================================================

Sample: Point2D_2
----------------------------------------------------------------
stdout:
Y coordinate: 4.0

================================================================

Sample: Point2D_3
----------------------------------------------------------------
stdout:
X: 5.0, Y: 10.0

================================================================

Sample: Point2D_4
----------------------------------------------------------------
stdout:
p1: (3.0, 4.0)
p2: (3.0, 4.0)

================================================================

Sample: Point2D_5
----------------------------------------------------------------
stdout:
The distance between the points (1.0, 2.0) and (4.0, 6.0) is 5.0

================================================================

Sample: Point2D_Double_1
----------------------------------------------------------------
stdout:
X coordinate: 3.0

================================================================

Sample: Point2D_Double_2
----------------------------------------------------------------
stdout:
Y coordinate: 4.0

================================================================

Sample: Point2D_Double_3
----------------------------------------------------------------
stdout:
X: 5.0, Y: 10.0

================================================================

Sample: Point2D_Float_3
----------------------------------------------------------------
stdout:
X: 5.0, Y: 10.0

================================================================

Sample: QuadCurve2D_2
----------------------------------------------------------------
stdout:
X coordinate of the control point: 10.0

================================================================

Sample: QuadCurve2D_3
----------------------------------------------------------------
stdout:
Y coordinate of the control point: 10.0

================================================================

Sample: QuadCurve2D_4
----------------------------------------------------------------
stdout:
X coordinate of the start point: 0.0

================================================================

Sample: QuadCurve2D_5
----------------------------------------------------------------
stdout:
Y coordinate of the start point: 0.0

================================================================

Sample: QuadCurve2D_6
----------------------------------------------------------------
stdout:
X coordinate of the end point: 20.0

================================================================

Sample: QuadCurve2D_7
----------------------------------------------------------------
stdout:
Y2 coordinate of the end point: 20.0

================================================================

Sample: QuadCurve2D_13
----------------------------------------------------------------
stdout:
false

================================================================

Sample: QuadCurve2D_14
----------------------------------------------------------------
stdout:
Is the point inside the quad curve? false

================================================================

Sample: QuadCurve2D_15
----------------------------------------------------------------
stdout:
The quad curve contains the rectangle: false

================================================================

Sample: QuadCurve2D_19
----------------------------------------------------------------
stdout:
false

================================================================

Sample: QuadCurve2D_20
----------------------------------------------------------------
stdout:
true

================================================================

Sample: QuadCurve2D_Double_2
----------------------------------------------------------------
stdout:
X coordinate of the control point: 3.0

================================================================

Sample: QuadCurve2D_Double_3
----------------------------------------------------------------
stdout:
Y coordinate of the control point: 10.0

================================================================

Sample: QuadCurve2D_Double_4
----------------------------------------------------------------
stdout:
X coordinate of the start point: 1.0

================================================================

Sample: QuadCurve2D_Double_5
----------------------------------------------------------------
stdout:
Y coordinate of the start point: 0.0

================================================================

Sample: QuadCurve2D_Double_6
----------------------------------------------------------------
stdout:
X coordinate of the end point: 20.0

================================================================

Sample: QuadCurve2D_Double_7
----------------------------------------------------------------
stdout:
Y coordinate of the end point: 20.0

================================================================

Sample: QuadCurve2D_Double_8
----------------------------------------------------------------
================================================================

Sample: QuadCurve2D_Float_7
----------------------------------------------------------------
================================================================

Sample: QuadCurve2D_Float_8
----------------------------------------------------------------
================================================================

Sample: Rectangle2D_5
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Rectangle2D_Double_1
----------------------------------------------------------------
stdout:
X coordinate of the upper-left corner of the rectangle: 10.0

================================================================

Sample: Rectangle2D_Double_2
----------------------------------------------------------------
stdout:
Y coordinate of the upper-left corner of the rectangle: 20.0

================================================================

Sample: Rectangle2D_Double_3
----------------------------------------------------------------
stdout:
Width: 30.0

================================================================

Sample: Rectangle2D_Double_4
----------------------------------------------------------------
stdout:
Height of the rectangle: 40.0

================================================================

Sample: Rectangle2D_Float_5
----------------------------------------------------------------
stdout:
X: 10.0, Y: 20.0, Width: 30.0, Height: 40.0

================================================================

Sample: RectangularShape_4
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:8: error: cannot find symbol
            public RectangularShape createTransformedShape(AffineTransform tx) {
                                                           ^
  symbol: class AffineTransform
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:28: error: cannot find symbol
            public boolean contains(Rectangle2D r) {
                                    ^
  symbol: class Rectangle2D
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:33: error: cannot find symbol
            public Rectangle2D getBounds2D() {
                   ^
  symbol: class Rectangle2D
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:73: error: cannot find symbol
            public boolean intersects(Rectangle2D r) {
                                      ^
  symbol: class Rectangle2D
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:6: error: <anonymous RectangularShape_4$1> is not abstract and does not override abstract method getY() in RectangularShape
        RectangularShape rect = new RectangularShape() {
                                                       ^
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:7: error: method does not override or implement a method from a supertype
            @Override
            ^
./Data/java_awt_geom/javaFiles/RectangularShape_4.java:23: error: name clash: class  has two methods with the same erasure, yet neither overrides the other
            public boolean contains(Point2D p) {
                           ^
  first method:  contains(Rectangle2D) in <anonymous RectangularShape_4$1>
  second method: contains(Rectangle2D) in RectangularShape
7 errors


================================================================

Sample: RectangularShape_6
----------------------------------------------------------------
stdout:
true

================================================================

Sample: RectangularShape_8
----------------------------------------------------------------
stdout:
Does the shape intersect the rectangle? true

================================================================

Sample: RoundRectangle2D_2
----------------------------------------------------------------
stdout:
Arc Width: 10.0

================================================================

Sample: RoundRectangle2D_3
----------------------------------------------------------------
stdout:
Arc Height: 10.0

================================================================

Sample: RoundRectangle2D_9
----------------------------------------------------------------
stdout:
true

================================================================

Sample: RoundRectangle2D_11
----------------------------------------------------------------
stdout:
true

================================================================

Sample: RoundRectangle2D_Double_2
----------------------------------------------------------------
stdout:
Arc Width: 10.0

================================================================

Sample: RoundRectangle2D_Double_3
----------------------------------------------------------------
stdout:
Arc Height: 10.0

================================================================

Sample: RoundRectangle2D_Double_4
----------------------------------------------------------------
stdout:
Height: 50.0

================================================================

Sample: RoundRectangle2D_Double_5
----------------------------------------------------------------
stdout:
Width: 50.0

================================================================

Sample: RoundRectangle2D_Double_6
----------------------------------------------------------------
stdout:
X coordinate of the upper-left corner of the framing rectangle: 10.0

================================================================

Sample: RoundRectangle2D_Double_7
----------------------------------------------------------------
stdout:
Y coordinate of the upper-left corner of the framing rectangle: 20.0

================================================================

Sample: RoundRectangle2D_Double_11
----------------------------------------------------------------
stdout:
java.awt.geom.RoundRectangle2D$Double@2ec20000

================================================================

Sample: RoundRectangle2D_Double_15
----------------------------------------------------------------
stdout:
java.awt.geom.Rectangle2D$Double[x=10.0,y=10.0,w=50.0,h=50.0]

================================================================

Sample: RoundRectangle2D_Float_4
----------------------------------------------------------------
================================================================

Sample: RoundRectangle2D_Float_8
----------------------------------------------------------------
stdout:
java.awt.geom.Rectangle2D$Float[x=10.0,y=10.0,w=100.0,h=100.0]

================================================================

