Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,AffineTransform,1,AffineTransform(),False,NULL
0,AffineTransform,2,"AffineTransform(double m00, double m01, double m02, double m10, double m11, double m12)",False,NULL
0,AffineTransform,3,void concat(AffineTransform at),False,NULL
0,AffineTransform,4,"void setToTranslation(double tx, double ty)",True,Sets this transform to a translation transformation.
0,AffineTransform,5,"void setToScale(double sx, double sy)",True,Sets this transform to a scaling transformation.
0,AffineTransform,6,void setToRotation(double radians),True,Sets this transform to a rotation transformation.
0,AffineTransform,7,"void setToShear(double shx, double shy)",True,Sets this transform to a shearing transformation.
0,AffineTransform,8,void setTransform(AffineTransform at),True,Sets this transform to a copy of the transform in the specified AffineTransform object.
0,AffineTransform,9,"void transform(Point2D src, Point2D dst)",False,NULL
0,AffineTransform,10,"void transform(Rectangle2D src, Rectangle2D dst)",False,NULL
0,AffineTransform,11,void inverse(AffineTransform at),False,NULL
0,AffineTransform,12,boolean isIdentity(),True,Returns true if this AffineTransform is an identity transform.
0,AffineTransform,13,boolean isTranslation(),False,NULL
0,AffineTransform,14,boolean isScale(),False,NULL
0,AffineTransform,15,boolean isRotation(),False,NULL
0,AffineTransform,16,boolean isShear(),False,NULL
0,AffineTransform,17,boolean isIdentity(double tol),False,NULL
0,AffineTransform,18,boolean isTranslation(double tol),False,NULL
0,AffineTransform,19,boolean isScale(double tol),False,NULL
0,AffineTransform,20,boolean isRotation(double tol),False,NULL
0,AffineTransform,21,boolean isShear(double tol),False,NULL
1,Arc2D,1,"Arc2D(Rectangle2D r, double startAngle, double arcAngle, int type)",False,NULL
1,Arc2D,2,double getStartAngle(),False,NULL
1,Arc2D,3,double getArcAngle(),False,NULL
1,Arc2D,4,int getType(),False,NULL
1,Arc2D,5,boolean contains(Point2D p),False,NULL
1,Arc2D,6,boolean contains(Rectangle2D r),True,Determines whether or not the interior of the arc entirely contains the specified rectangle.
1,Arc2D,7,boolean intersects(Rectangle2D r),False,NULL
1,Arc2D,8,boolean intersects(Arc2D a),False,NULL
1,Arc2D,9,"boolean contains(double x, double y)",True,Determines whether or not the specified point is inside the boundary of the arc.
1,Arc2D,10,"boolean contains(Rectangle2D r, double x, double y, double w, double h)",False,NULL
1,Arc2D,11,"boolean intersects(double x, double y, double w, double h)",True,Determines whether or not the interior of the arc intersects the interior of the specified rectangle.
1,Arc2D,12,"boolean intersects(Arc2D a, double x, double y, double w, double h)",False,NULL
1,Arc2D,13,"boolean contains(double x, double y, double w, double h)",True,Determines whether or not the interior of the arc entirely contains the specified rectangle.
1,Arc2D,14,"boolean intersects(double x, double y, double w, double h, double x1, double y1, double w1, double h1)",False,NULL
1,Arc2D,15,"boolean intersects(Arc2D a, double x, double y, double w, double h, double x1, double y1, double w1, double h1)",False,NULL
2,Arc2D.Double,1,"Arc2D.Double(double x, double y, double w, double h, double start, double extent)",False,NULL
2,Arc2D.Double,2,double getX(),True,Returns the X coordinate of the upper-left corner of the framing rectangle in double precision.
2,Arc2D.Double,3,double getY(),True,Returns the Y coordinate of the upper-left corner of the framing rectangle in double precision.
2,Arc2D.Double,4,double getWidth(),True,Returns the width of the framing rectangle in double precision.
2,Arc2D.Double,5,double getHeight(),True,Returns the height of the framing rectangle in double precision.
2,Arc2D.Double,6,double getStartAngle(),False,NULL
2,Arc2D.Double,7,double getExtentAngle(),False,NULL
2,Arc2D.Double,8,"boolean contains(double x, double y)",False,NULL
2,Arc2D.Double,9,"boolean intersects(double x, double y, double w, double h)",False,NULL
2,Arc2D.Double,10,"boolean contains(double x, double y, double w, double h)",False,NULL
3,Arc2D.Float,1,"Arc2D.Float(float x, float y, float w, float h, float start, float arc)",False,NULL
3,Arc2D.Float,2,"boolean contains(double x, double y)",False,NULL
3,Arc2D.Float,3,boolean contains(Point2D p),False,NULL
3,Arc2D.Float,4,boolean contains(Rectangle2D r),False,NULL
3,Arc2D.Float,5,"boolean contains(double x, double y, double w, double h)",False,NULL
3,Arc2D.Float,6,"boolean contains(Rectangle2D r, int t)",False,NULL
3,Arc2D.Float,7,"boolean contains(double x, double y, double w, double h, int t)",False,NULL
3,Arc2D.Float,8,"boolean intersects(double x, double y, double w, double h)",False,NULL
3,Arc2D.Float,9,boolean intersects(Rectangle2D r),False,NULL
3,Arc2D.Float,10,"boolean intersects(double x, double y, double w, double h, int t)",False,NULL
3,Arc2D.Float,11,"boolean intersects(Rectangle2D r, int t)",False,NULL
3,Arc2D.Float,12,"boolean intersectsLine(double x1, double y1, double x2, double y2)",False,NULL
3,Arc2D.Float,13,boolean intersects(Line2D l),False,NULL
3,Arc2D.Float,14,"boolean intersects(double x1, double y1, double x2, double y2, int t)",False,NULL
3,Arc2D.Float,15,"boolean intersects(Line2D l, int t)",False,NULL
4,Area,1,boolean add(Area area),False,NULL
4,Area,2,boolean contains(Point2D p),True,"Tests if a specified Point2D is inside the boundary of the Shape, as described by the definition of insideness."
4,Area,3,boolean contains(Rectangle2D r),True,Tests if the interior of the Shape entirely contains the specified Rectangle2D.
4,Area,4,boolean contains(Area area),False,NULL
4,Area,5,boolean intersects(Rectangle2D r),True,Tests if the interior of the Shape intersects the interior of a specified Rectangle2D.
4,Area,6,boolean intersects(Area area),False,NULL
4,Area,7,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,8,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
4,Area,9,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,10,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
4,Area,11,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,12,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
4,Area,13,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,14,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
4,Area,15,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,16,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
4,Area,17,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,18,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
4,Area,19,boolean isEmpty(),True,Tests whether this Area object encloses any area.
4,Area,20,boolean isRectangular(),True,Tests whether this Area is rectangular in shape.
5,CubicCurve2D,1,"CubicCurve2D(double x1, double y1, double ctrlX1, double ctrlY1, double ctrlX2, double ctrlY2, double x2, double y2)",False,NULL
5,CubicCurve2D,2,double getCtrlX1(),True,Returns the X coordinate of the first control point in double precision.
5,CubicCurve2D,3,double getCtrlY1(),True,Returns the Y coordinate of the first control point in double precision.
5,CubicCurve2D,4,double getCtrlX2(),True,Returns the X coordinate of the second control point in double precision.
5,CubicCurve2D,5,double getCtrlY2(),True,Returns the Y coordinate of the second control point in double precision.
5,CubicCurve2D,6,double getX1(),True,Returns the X coordinate of the start point in double precision.
5,CubicCurve2D,7,double getY1(),True,Returns the Y coordinate of the start point in double precision.
5,CubicCurve2D,8,double getX2(),True,Returns the X coordinate of the end point in double precision.
5,CubicCurve2D,9,double getY2(),True,Returns the Y coordinate of the end point in double precision.
5,CubicCurve2D,10,double[] getCubicPts(),False,NULL
5,CubicCurve2D,11,double[] getPt(int index),False,NULL
5,CubicCurve2D,12,double[] getPts(),False,NULL
5,CubicCurve2D,13,double getPathIterator(AffineTransform at),False,NULL
5,CubicCurve2D,14,"double getPathIterator(AffineTransform at, double flatness)",False,NULL
5,CubicCurve2D,15,double getPathIterator(double flatness),False,NULL
5,CubicCurve2D,16,double getPathIterator(),False,NULL
5,CubicCurve2D,17,double getFlatness(),True,Returns the flatness of this curve.
5,CubicCurve2D,18,double getWindingRule(),False,NULL
5,CubicCurve2D,19,double getStartPoint(),False,NULL
5,CubicCurve2D,20,double getEndPoint(),False,NULL
6,CubicCurve2D.Double,1,"CubicCurve2D.Double(double x1, double y1, double ctrlX1, double ctrlY1, double ctrlX2, double ctrlY2, double x2, double y2)",False,NULL
6,CubicCurve2D.Double,2,double getCtrlX1(),True,Returns the X coordinate of the first control point in double precision.
6,CubicCurve2D.Double,3,double getCtrlY1(),True,Returns the Y coordinate of the first control point in double precision.
6,CubicCurve2D.Double,4,double getCtrlX2(),True,Returns the X coordinate of the second control point in double precision.
6,CubicCurve2D.Double,5,double getCtrlY2(),True,Returns the Y coordinate of the second control point in double precision.
6,CubicCurve2D.Double,6,double getX1(),True,Returns the X coordinate of the start point in double precision.
6,CubicCurve2D.Double,7,double getY1(),True,Returns the Y coordinate of the start point in double precision.
6,CubicCurve2D.Double,8,double getX2(),True,Returns the X coordinate of the end point in double precision.
6,CubicCurve2D.Double,9,double getY2(),True,Returns the Y coordinate of the end point in double precision.
6,CubicCurve2D.Double,10,"void setCurve(double x1, double y1, double ctrlX1, double ctrlY1, double ctrlX2, double ctrlY2, double x2, double y2)",True,Sets the location of the end points and control points of this curve to the specified double coordinates.
7,CubicCurve2D.Float,1,"CubicCurve2D.Float(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)",False,NULL
7,CubicCurve2D.Float,2,"void setCurve(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)",True,Sets the location of the end points and control points of this curve to the specified float coordinates.
7,CubicCurve2D.Float,3,float getX1(),False,NULL
7,CubicCurve2D.Float,4,float getY1(),False,NULL
7,CubicCurve2D.Float,5,float getX2(),False,NULL
7,CubicCurve2D.Float,6,float getY2(),False,NULL
7,CubicCurve2D.Float,7,float getX3(),False,NULL
7,CubicCurve2D.Float,8,float getY3(),False,NULL
7,CubicCurve2D.Float,9,float getX4(),False,NULL
7,CubicCurve2D.Float,10,float getY4(),False,NULL
7,CubicCurve2D.Float,11,float[] getCubicPoints(),False,NULL
7,CubicCurve2D.Float,12,float[] getCubicPoints(float[] pts),False,NULL
7,CubicCurve2D.Float,13,float getCtrlValue(int which),False,NULL
7,CubicCurve2D.Float,14,"void setCtrlValue(int which, float value)",False,NULL
7,CubicCurve2D.Float,15,"float getCtrlValue(int which, float[] pts)",False,NULL
7,CubicCurve2D.Float,16,"float getCtrlValue(int which, float[] pts, int offset)",False,NULL
7,CubicCurve2D.Float,17,"float getCtrlValue(int which, float[] pts, int offset, int length)",False,NULL
7,CubicCurve2D.Float,18,"float getCtrlValue(int which, float[] pts, int offset, int length, int stride)",False,NULL
7,CubicCurve2D.Float,19,"float getCtrlValue(int which, float[] pts, int offset, int length, int stride, int order)",False,NULL
7,CubicCurve2D.Float,20,"float getCtrlValue(int which, float[] pts, int offset, int length, int stride, int order, int type)",False,NULL
8,Dimension2D,1,double getWidth(),True,Returns the width of this Dimension in double precision.
8,Dimension2D,2,double getHeight(),True,Returns the height of this Dimension in double precision.
8,Dimension2D,3,"void setSize(double width, double height)",True,Sets the size of this Dimension object to the specified width and height.
8,Dimension2D,4,void setSize(Dimension2D d),True,Sets the size of this Dimension2D object to match the specified size.
8,Dimension2D,5,"void setSize(double width, double height)",True,Sets the size of this Dimension object to the specified width and height.
9,Ellipse2D,1,"boolean contains(double x, double y)",True,"Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness."
9,Ellipse2D,2,boolean contains(Point2D p),False,NULL
9,Ellipse2D,3,boolean contains(Rectangle2D r),False,NULL
9,Ellipse2D,4,boolean contains(Ellipse2D e),False,NULL
9,Ellipse2D,5,"boolean intersects(double x, double y, double w, double h)",True,Tests if the interior of the Shape intersects the interior of a specified rectangular area.
10,Ellipse2D.Double,1,double getX(),True,Returns the X coordinate of the upper-left corner of the framing rectangle in double precision.
10,Ellipse2D.Double,2,double getY(),True,Returns the Y coordinate of the upper-left corner of the framing rectangle in double precision.
10,Ellipse2D.Double,3,double getWidth(),True,Returns the width of the framing rectangle in double precision.
10,Ellipse2D.Double,4,double getHeight(),True,Returns the height of the framing rectangle in double precision.
10,Ellipse2D.Double,5,"void setFrame(double x, double y, double w, double h)",True,Sets the location and size of the framing rectangle of this Shape to the specified rectangular values.
11,Ellipse2D.Float,1,"boolean contains(double x, double y)",False,NULL
11,Ellipse2D.Float,2,boolean contains(Point2D p),False,NULL
11,Ellipse2D.Float,3,boolean contains(Rectangle2D r),False,NULL
11,Ellipse2D.Float,4,"boolean contains(double x, double y, double w, double h)",False,NULL
11,Ellipse2D.Float,5,"boolean intersects(double x, double y, double w, double h)",False,NULL
11,Ellipse2D.Float,6,boolean intersects(Rectangle2D r),False,NULL
11,Ellipse2D.Float,7,"boolean intersectsLine(double x1, double y1, double x2, double y2)",False,NULL
11,Ellipse2D.Float,8,boolean intersects(Line2D l),False,NULL
11,Ellipse2D.Float,9,Rectangle2D getBounds2D(),True,Returns a high precision and more accurate bounding box of the Shape than the getBounds method.
11,Ellipse2D.Float,10,boolean isEmpty(),True,Determines whether the RectangularShape is empty.
11,Ellipse2D.Float,11,"void setFrame(double x, double y, double w, double h)",True,Sets the location and size of the framing rectangle of this Shape to the specified rectangular values.
11,Ellipse2D.Float,12,void setFrame(Rectangle2D r),False,NULL
11,Ellipse2D.Float,13,"void setFrameFromCenter(double x, double y, double w, double h)",False,NULL
11,Ellipse2D.Float,14,"void setFrameFromDiagonal(double x1, double y1, double x2, double y2)",False,NULL
11,Ellipse2D.Float,15,"void setFrameFromCenter(Point2D p, double w, double h)",False,NULL
11,Ellipse2D.Float,16,"void setFrameFromDiagonal(Point2D p1, Point2D p2)",False,NULL
11,Ellipse2D.Float,17,"void setFrame(double x, double y, double w, double h)",True,Sets the location and size of the framing rectangle of this Shape to the specified rectangular values.
11,Ellipse2D.Float,18,void setFrame(Rectangle2D r),False,NULL
11,Ellipse2D.Float,19,"void setFrameFromCenter(double x, double y, double w, double h)",False,NULL
11,Ellipse2D.Float,20,"void setFrameFromDiagonal(double x1, double y1, double x2, double y2)",False,NULL
12,FlatteningPathIterator,1,boolean hasNext(),False,NULL
12,FlatteningPathIterator,2,void next(),True,Moves the iterator to the next segment of the path forwards along the primary direction of traversal as long as there are more points in that direction.
12,FlatteningPathIterator,3,int currentSegment(float[] coords),True,Returns the coordinates and type of the current path segment in the iteration.
12,FlatteningPathIterator,4,int currentSegment(float[] coords),True,Returns the coordinates and type of the current path segment in the iteration.
12,FlatteningPathIterator,5,int getWindingRule(),True,Returns the winding rule for determining the interior of the path.
13,GeneralPath,1,GeneralPath(),False,NULL
13,GeneralPath,2,GeneralPath(GeneralPath p),False,NULL
13,GeneralPath,3,boolean isEmpty(),False,NULL
13,GeneralPath,4,int getWindingRule(),False,NULL
13,GeneralPath,5,void setWindingRule(int windingRule),False,NULL
13,GeneralPath,6,void reset(),False,NULL
13,GeneralPath,7,"void append(PathIterator pi, boolean isWindingEven)",False,NULL
13,GeneralPath,8,"void append(GeneralPath gp, boolean isWindingEven)",False,NULL
13,GeneralPath,9,"void lineTo(double x, double y)",False,NULL
13,GeneralPath,10,"void curveTo(double x1, double y1, double x2, double y2, double x3, double y3)",False,NULL
13,GeneralPath,11,"void quadTo(double x1, double y1, double x2, double y2)",False,NULL
13,GeneralPath,12,void closePath(),False,NULL
13,GeneralPath,13,PathIterator getPathIterator(AffineTransform at),False,NULL
13,GeneralPath,14,Rectangle2D getBounds2D(),False,NULL
13,GeneralPath,15,"boolean contains(double x, double y)",False,NULL
13,GeneralPath,16,"boolean intersects(double x, double y, double w, double h)",False,NULL
13,GeneralPath,17,boolean intersects(Rectangle2D r),False,NULL
13,GeneralPath,18,boolean intersects(GeneralPath gp),False,NULL
13,GeneralPath,19,boolean contains(Point2D p),False,NULL
13,GeneralPath,20,boolean contains(GeneralPath gp),False,NULL
14,Line2D,1,"Line2D(double x1, double y1, double x2, double y2)",False,NULL
14,Line2D,2,double getX1(),True,Returns the X coordinate of the start point in double precision.
14,Line2D,3,double getY1(),True,Returns the Y coordinate of the start point in double precision.
14,Line2D,4,double getX2(),True,Returns the X coordinate of the end point in double precision.
14,Line2D,5,double getY2(),True,Returns the Y coordinate of the end point in double precision.
14,Line2D,6,double getP1(),False,NULL
14,Line2D,7,double getP2(),False,NULL
14,Line2D,8,double getSlope(),False,NULL
14,Line2D,9,"double getSlope(double x1, double y1, double x2, double y2)",False,NULL
14,Line2D,10,"double getSlope(Point2D p1, Point2D p2)",False,NULL
14,Line2D,11,"double getSlope(double x1, double y1, double x2, double y2, double x3, double y3)",False,NULL
14,Line2D,12,"double getSlope(Point2D p1, Point2D p2, Point2D p3)",False,NULL
14,Line2D,13,double getP1(),False,NULL
14,Line2D,14,double getP2(),False,NULL
14,Line2D,15,double getP1(),False,NULL
14,Line2D,16,double getP2(),False,NULL
14,Line2D,17,double getP1(),False,NULL
14,Line2D,18,double getP2(),False,NULL
14,Line2D,19,double getP1(),False,NULL
14,Line2D,20,double getP2(),False,NULL
15,Line2D.Double,1,"Line2D.Double(double x1, double y1, double x2, double y2)",False,NULL
15,Line2D.Double,2,double getX1(),True,Returns the X coordinate of the start point in double precision.
15,Line2D.Double,3,double getY1(),True,Returns the Y coordinate of the start point in double precision.
15,Line2D.Double,4,double getX2(),True,Returns the X coordinate of the end point in double precision.
15,Line2D.Double,5,double getY2(),True,Returns the Y coordinate of the end point in double precision.
15,Line2D.Double,6,double getP1(),False,NULL
15,Line2D.Double,7,double getP2(),False,NULL
15,Line2D.Double,8,double getSlope(),False,NULL
15,Line2D.Double,9,"double getSlope(double x1, double y1, double x2, double y2)",False,NULL
15,Line2D.Double,10,double getLength(),False,NULL
16,Line2D.Float,1,"boolean contains(double x, double y)",False,NULL
16,Line2D.Float,2,boolean contains(Point2D p),False,NULL
16,Line2D.Float,3,double getX1(),True,Returns the X coordinate of the start point in double precision.
16,Line2D.Float,4,double getY1(),True,Returns the Y coordinate of the start point in double precision.
16,Line2D.Float,5,double getX2(),True,Returns the X coordinate of the end point in double precision.
16,Line2D.Float,6,double getY2(),True,Returns the Y coordinate of the end point in double precision.
16,Line2D.Float,7,double getP1(),False,NULL
16,Line2D.Float,8,double getP2(),False,NULL
16,Line2D.Float,9,double getSlope(),False,NULL
16,Line2D.Float,10,"double getSlope(Point2D p1, Point2D p2)",False,NULL
16,Line2D.Float,11,"double getSlope(double x1, double y1, double x2, double y2)",False,NULL
16,Line2D.Float,12,double getLength(),False,NULL
16,Line2D.Float,13,double getP1(),False,NULL
16,Line2D.Float,14,double getP2(),False,NULL
16,Line2D.Float,15,double getP1(),False,NULL
16,Line2D.Float,16,double getP2(),False,NULL
16,Line2D.Float,17,double getP1(),False,NULL
16,Line2D.Float,18,double getP2(),False,NULL
16,Line2D.Float,19,double getP1(),False,NULL
16,Line2D.Float,20,double getP2(),False,NULL
17,Path2D,1,Path2D(),False,NULL
17,Path2D,2,Path2D(int windingRule),False,NULL
17,Path2D,3,"void append(Path2D src, boolean connect)",False,NULL
17,Path2D,4,void closePath(),True,Closes the current subpath by drawing a straight line back to the coordinates of the last moveTo.
17,Path2D,5,"boolean contains(double x, double y)",True,"Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness."
17,Path2D,6,boolean contains(Point2D p),True,"Tests if a specified Point2D is inside the boundary of the Shape, as described by the definition of insideness."
17,Path2D,7,boolean contains(Rectangle2D r),True,Tests if the interior of the Shape entirely contains the specified Rectangle2D.
17,Path2D,8,"boolean contains(double x, double y, double w, double h)",True,Tests if the interior of the Shape entirely contains the specified rectangular area.
17,Path2D,9,boolean contains(Path2D p),False,NULL
17,Path2D,10,boolean intersects(Rectangle2D r),True,Tests if the interior of the Shape intersects the interior of a specified Rectangle2D.
17,Path2D,11,"boolean intersects(double x, double y, double w, double h)",True,Tests if the interior of the Shape intersects the interior of a specified rectangular area.
17,Path2D,12,boolean intersects(Path2D p),False,NULL
17,Path2D,13,"boolean intersectsLine(double x1, double y1, double x2, double y2)",False,NULL
17,Path2D,14,boolean isEmpty(),False,NULL
17,Path2D,15,void reset(),True,Resets the path to empty.
17,Path2D,16,void setWindingRule(int windingRule),True,Sets the winding rule for this path to the specified value.
17,Path2D,17,void transform(AffineTransform at),True,Transforms the geometry of this path using the specified AffineTransform.
17,Path2D,18,"void append(PathIterator pi, boolean connect)",True,"Appends the geometry of the specified PathIterator object to the path, possibly connecting the new geometry to the existing path segments with a line segment."
17,Path2D,19,PathIterator getPathIterator(AffineTransform at),False,NULL
17,Path2D,20,"PathIterator getPathIterator(AffineTransform at, double flatness)",True,Returns an iterator object that iterates along the Shape boundary and provides access to a flattened view of the Shape outline geometry.
18,Path2D.Double,1,boolean add(E e),False,NULL
18,Path2D.Double,2,boolean contains(Object o),False,NULL
18,Path2D.Double,3,boolean remove(Object o),False,NULL
18,Path2D.Double,4,boolean isEmpty(),False,NULL
18,Path2D.Double,5,int size(),False,NULL
19,Path2D.Float,1,boolean add(E e),False,NULL
19,Path2D.Float,2,boolean contains(Object o),False,NULL
19,Path2D.Float,3,boolean remove(Object o),False,NULL
19,Path2D.Float,4,boolean isEmpty(),False,NULL
19,Path2D.Float,5,int size(),False,NULL
20,Point2D,1,double getX(),True,Returns the X coordinate of this Point2D in double precision.
20,Point2D,2,double getY(),True,Returns the Y coordinate of this Point2D in double precision.
20,Point2D,3,"void setLocation(double x, double y)",True,Sets the location of this Point2D to the specified double coordinates.
20,Point2D,4,void setLocation(Point2D p),True,Sets the location of this Point2D to the same coordinates as the specified Point2D object.
20,Point2D,5,"double distance(double x1, double y1, double x2, double y2)",True,Returns the distance between two points.
21,Point2D.Double,1,double getX(),True,Returns the X coordinate of this Point2D in double precision.
21,Point2D.Double,2,double getY(),True,Returns the Y coordinate of this Point2D in double precision.
21,Point2D.Double,3,"void setLocation(double x, double y)",True,Sets the location of this Point2D to the specified double coordinates.
21,Point2D.Double,4,void setLocation(Point2D p),False,NULL
21,Point2D.Double,5,"double distance(double x, double y)",False,NULL
22,Point2D.Float,1,float getX(),False,NULL
22,Point2D.Float,2,float getY(),False,NULL
22,Point2D.Float,3,"void setLocation(float x, float y)",True,Sets the location of this Point2D to the specified float coordinates.
22,Point2D.Float,4,void setLocation(Point2D p),False,NULL
22,Point2D.Float,5,"void translate(double tx, double ty)",False,NULL
23,QuadCurve2D,1,"QuadCurve2D(double x1, double y1, double ctrlX, double ctrlY, double x2, double y2)",False,NULL
23,QuadCurve2D,2,double getCtrlX(),True,Returns the X coordinate of the control point in double precision.
23,QuadCurve2D,3,double getCtrlY(),True,Returns the Y coordinate of the control point in double precision.
23,QuadCurve2D,4,double getX1(),True,Returns the X coordinate of the start point in double in precision.
23,QuadCurve2D,5,double getY1(),True,Returns the Y coordinate of the start point in double precision.
23,QuadCurve2D,6,double getX2(),True,Returns the X coordinate of the end point in double precision.
23,QuadCurve2D,7,double getY2(),True,Returns the Y coordinate of the end point in double precision.
23,QuadCurve2D,8,double getWidth(),False,NULL
23,QuadCurve2D,9,double getHeight(),False,NULL
23,QuadCurve2D,10,double getBounds2D(),False,NULL
23,QuadCurve2D,11,"double getPathIterator(AffineTransform at, double flatness)",False,NULL
23,QuadCurve2D,12,"boolean intersectsLine(double x1, double y1, double x2, double y2)",False,NULL
23,QuadCurve2D,13,"boolean contains(double x, double y)",True,"Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness."
23,QuadCurve2D,14,boolean contains(Point2D p),True,"Tests if a specified Point2D is inside the boundary of the Shape, as described by the definition of insideness."
23,QuadCurve2D,15,boolean contains(Rectangle2D r),True,Tests if the interior of the Shape entirely contains the specified Rectangle2D.
23,QuadCurve2D,16,boolean contains(QuadCurve2D q),False,NULL
23,QuadCurve2D,17,boolean contains(GeneralPath gp),False,NULL
23,QuadCurve2D,18,boolean contains(AffineTransform at),False,NULL
23,QuadCurve2D,19,"boolean contains(double x, double y, double w, double h)",True,Tests if the interior of the Shape entirely contains the specified rectangular area.
23,QuadCurve2D,20,"boolean intersects(double x, double y, double w, double h)",True,Tests if the interior of the Shape intersects the interior of a specified rectangular area.
24,QuadCurve2D.Double,1,"QuadCurve2D.Double(double x1, double y1, double ctrlX, double ctrlY, double x2, double y2)",False,NULL
24,QuadCurve2D.Double,2,double getCtrlX(),True,Returns the X coordinate of the control point in double precision.
24,QuadCurve2D.Double,3,double getCtrlY(),True,Returns the Y coordinate of the control point in double precision.
24,QuadCurve2D.Double,4,double getX1(),True,Returns the X coordinate of the start point in double in precision.
24,QuadCurve2D.Double,5,double getY1(),True,Returns the Y coordinate of the start point in double precision.
24,QuadCurve2D.Double,6,double getX2(),True,Returns the X coordinate of the end point in double precision.
24,QuadCurve2D.Double,7,double getY2(),True,Returns the Y coordinate of the end point in double precision.
24,QuadCurve2D.Double,8,"void setCurve(double x1, double y1, double ctrlX, double ctrlY, double x2, double y2)",True,Sets the location of the end points and control point of this curve to the specified double coordinates.
24,QuadCurve2D.Double,9,"void setCtrlPoint(double ctrlX, double ctrlY)",False,NULL
24,QuadCurve2D.Double,10,"void setPoint(double x1, double y1, double x2, double y2)",False,NULL
24,QuadCurve2D.Double,11,"void setStartPoint(double x1, double y1)",False,NULL
24,QuadCurve2D.Double,12,"void setEndPoint(double x2, double y2)",False,NULL
24,QuadCurve2D.Double,13,double getPathIterator(AffineTransform at),False,NULL
24,QuadCurve2D.Double,14,"boolean contains(double x, double y, double tolerance)",False,NULL
24,QuadCurve2D.Double,15,"boolean intersects(double x, double y, double w, double h, double tolerance)",False,NULL
25,QuadCurve2D.Float,1,float getCtrlX(),False,NULL
25,QuadCurve2D.Float,2,float getCtrlY(),False,NULL
25,QuadCurve2D.Float,3,float getX1(),False,NULL
25,QuadCurve2D.Float,4,float getY1(),False,NULL
25,QuadCurve2D.Float,5,float getX2(),False,NULL
25,QuadCurve2D.Float,6,float getY2(),False,NULL
25,QuadCurve2D.Float,7,"void setCurve(float x1, float y1, float ctrlX, float ctrlY, float x2, float y2)",True,Sets the location of the end points and control point of this curve to the specified float coordinates.
25,QuadCurve2D.Float,8,"void setCurve(double x1, double y1, double ctrlX, double ctrlY, double x2, double y2)",True,Sets the location of the end points and control point of this curve to the specified double coordinates.
25,QuadCurve2D.Float,9,"void setCurve(Point2D.Float p1, Point2D.Float ctrl, Point2D.Float p2)",False,NULL
25,QuadCurve2D.Float,10,"void setCurve(Point2D p1, Point2D ctrl, Point2D p2)",False,NULL
25,QuadCurve2D.Float,11,"void setCurve(double x1, double y1, Point2D.Float ctrl, double x2, double y2)",False,NULL
25,QuadCurve2D.Float,12,"void setCurve(double x1, double y1, Point2D ctrl, double x2, double y2)",False,NULL
25,QuadCurve2D.Float,13,"void setCurve(Point2D.Float p1, Point2D.Float ctrl, double x2, double y2)",False,NULL
25,QuadCurve2D.Float,14,"void setCurve(Point2D p1, Point2D ctrl, double x2, double y2)",False,NULL
25,QuadCurve2D.Float,15,"void setCurve(double x1, double y1, double ctrlX, double ctrlY, Point2D.Float p2)",False,NULL
25,QuadCurve2D.Float,16,"void setCurve(double x1, double y1, double ctrlX, double ctrlY, Point2D p2)",False,NULL
25,QuadCurve2D.Float,17,"void setCurve(Point2D.Float p1, double ctrlX, double ctrlY, Point2D.Float p2)",False,NULL
25,QuadCurve2D.Float,18,"void setCurve(Point2D p1, double ctrlX, double ctrlY, Point2D p2)",False,NULL
25,QuadCurve2D.Float,19,"void setCurve(double x1, double y1, Point2D.Float ctrl, Point2D.Float p2)",False,NULL
25,QuadCurve2D.Float,20,"void setCurve(double x1, double y1, Point2D ctrl, Point2D p2)",False,NULL
26,Rectangle2D,1,double getX(),False,NULL
26,Rectangle2D,2,double getY(),False,NULL
26,Rectangle2D,3,double getWidth(),False,NULL
26,Rectangle2D,4,double getHeight(),False,NULL
26,Rectangle2D,5,"boolean contains(double x, double y)",True,"Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness."
27,Rectangle2D.Double,1,double getX(),True,Returns the X coordinate of the upper-left corner of the framing rectangle in double precision.
27,Rectangle2D.Double,2,double getY(),True,Returns the Y coordinate of the upper-left corner of the framing rectangle in double precision.
27,Rectangle2D.Double,3,double getWidth(),True,Returns the width of the framing rectangle in double precision.
27,Rectangle2D.Double,4,double getHeight(),True,Returns the height of the framing rectangle in double precision.
27,Rectangle2D.Double,5,"void setFrame(double x, double y, double w, double h)",False,NULL
28,Rectangle2D.Float,1,float getX(),False,NULL
28,Rectangle2D.Float,2,float getY(),False,NULL
28,Rectangle2D.Float,3,float getWidth(),False,NULL
28,Rectangle2D.Float,4,float getHeight(),False,NULL
28,Rectangle2D.Float,5,"void setRect(float x, float y, float w, float h)",True,Sets the location and size of this Rectangle2D to the specified float values.
29,RectangularShape,1,RectangularShape getBounds(),False,NULL
29,RectangularShape,2,RectangularShape getBounds2D(),False,NULL
29,RectangularShape,3,"boolean contains(double x, double y)",False,NULL
29,RectangularShape,4,boolean contains(Point2D p),True,"Tests if a specified Point2D is inside the boundary of the Shape, as described by the definition of insideness."
29,RectangularShape,5,"boolean contains(double x, double y, double w, double h)",False,NULL
29,RectangularShape,6,boolean contains(Rectangle2D r),True,Tests if the interior of the Shape entirely contains the specified Rectangle2D.
29,RectangularShape,7,"boolean intersects(double x, double y, double w, double h)",False,NULL
29,RectangularShape,8,boolean intersects(Rectangle2D r),True,Tests if the interior of the Shape intersects the interior of a specified Rectangle2D.
29,RectangularShape,9,"boolean contains(double x, double y, double w, double h, double arcWidth, double arcHeight)",False,NULL
29,RectangularShape,10,"boolean contains(Rectangle2D r, double arcWidth, double arcHeight)",False,NULL
30,RoundRectangle2D,1,"RoundRectangle2D(double x, double y, double w, double h, double arcw, double arch)",False,NULL
30,RoundRectangle2D,2,double getArcWidth(),True,Gets the width of the arc that rounds off the corners.
30,RoundRectangle2D,3,double getArcHeight(),True,Gets the height of the arc that rounds off the corners.
30,RoundRectangle2D,4,double getHeight(),False,NULL
30,RoundRectangle2D,5,double getWidth(),False,NULL
30,RoundRectangle2D,6,double getX(),False,NULL
30,RoundRectangle2D,7,double getY(),False,NULL
30,RoundRectangle2D,8,Rectangle2D getBounds2D(),False,NULL
30,RoundRectangle2D,9,"boolean contains(double x, double y)",True,"Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness."
30,RoundRectangle2D,10,boolean contains(Point2D p),False,NULL
30,RoundRectangle2D,11,"boolean intersects(double x, double y, double w, double h)",True,Tests if the interior of the Shape intersects the interior of a specified rectangular area.
30,RoundRectangle2D,12,boolean intersects(Rectangle2D r),False,NULL
30,RoundRectangle2D,13,"boolean intersectsLine(double x1, double y1, double x2, double y2)",False,NULL
30,RoundRectangle2D,14,boolean intersects(Line2D l),False,NULL
30,RoundRectangle2D,15,boolean intersects(RoundRectangle2D rr),False,NULL
30,RoundRectangle2D,16,boolean contains(RoundRectangle2D rr),False,NULL
30,RoundRectangle2D,17,boolean contains(Rectangle2D r),False,NULL
30,RoundRectangle2D,18,"boolean contains(RoundRectangle2D rr, int t)",False,NULL
30,RoundRectangle2D,19,"boolean contains(Rectangle2D r, int t)",False,NULL
30,RoundRectangle2D,20,"boolean intersects(RoundRectangle2D rr, int t)",False,NULL
30,RoundRectangle2D,21,"boolean intersects(Rectangle2D r, int t)",False,NULL
31,RoundRectangle2D.Double,1,"RoundRectangle2D.Double(double x, double y, double w, double h, double arcw, double arch)",False,NULL
31,RoundRectangle2D.Double,2,double getArcWidth(),True,Gets the width of the arc that rounds off the corners.
31,RoundRectangle2D.Double,3,double getArcHeight(),True,Gets the height of the arc that rounds off the corners.
31,RoundRectangle2D.Double,4,double getHeight(),True,Returns the height of the framing rectangle in double precision.
31,RoundRectangle2D.Double,5,double getWidth(),True,Returns the width of the framing rectangle in double precision.
31,RoundRectangle2D.Double,6,double getX(),True,Returns the X coordinate of the upper-left corner of the framing rectangle in double precision.
31,RoundRectangle2D.Double,7,double getY(),True,Returns the Y coordinate of the upper-left corner of the framing rectangle in double precision.
31,RoundRectangle2D.Double,8,void setArcWidth(double arcw),False,NULL
31,RoundRectangle2D.Double,9,void setArcHeight(double arch),False,NULL
31,RoundRectangle2D.Double,10,"void setFrame(double x, double y, double w, double h)",False,NULL
31,RoundRectangle2D.Double,11,"void setRoundRect(double x, double y, double w, double h, double arcw, double arch)",True,"Sets the location, size, and corner radii of this RoundRectangle2D to the specified double values."
31,RoundRectangle2D.Double,12,"boolean contains(double x, double y)",False,NULL
31,RoundRectangle2D.Double,13,"boolean contains(double x, double y, double w, double h)",False,NULL
31,RoundRectangle2D.Double,14,"boolean intersects(double x, double y, double w, double h)",False,NULL
31,RoundRectangle2D.Double,15,Rectangle2D getBounds2D(),True,Returns a high precision and more accurate bounding box of the Shape than the getBounds method.
32,RoundRectangle2D.Float,1,"RoundRectangle2D.Float(float x, float y, float w, float h, float arcw, float arch)",False,NULL
32,RoundRectangle2D.Float,2,float getArcWidth(),False,NULL
32,RoundRectangle2D.Float,3,float getArcHeight(),False,NULL
32,RoundRectangle2D.Float,4,"void setRoundRect(float x, float y, float w, float h, float arcw, float arch)",True,"Sets the location, size, and corner radii of this RoundRectangle2D to the specified float values."
32,RoundRectangle2D.Float,5,"boolean contains(double x, double y)",False,NULL
32,RoundRectangle2D.Float,6,"boolean contains(double x, double y, double w, double h)",False,NULL
32,RoundRectangle2D.Float,7,"boolean intersects(double x, double y, double w, double h)",False,NULL
32,RoundRectangle2D.Float,8,Rectangle2D getBounds2D(),True,Returns a high precision and more accurate bounding box of the Shape than the getBounds method.
32,RoundRectangle2D.Float,9,boolean contains(Point2D p),False,NULL
32,RoundRectangle2D.Float,10,boolean contains(Rectangle2D r),False,NULL
32,RoundRectangle2D.Float,11,boolean intersects(Rectangle2D r),False,NULL
32,RoundRectangle2D.Float,12,Rectangle2D getBounds(),False,NULL
32,RoundRectangle2D.Float,13,"boolean contains(double x, double y, double w, double h, double px, double py)",False,NULL
32,RoundRectangle2D.Float,14,"boolean intersects(double x, double y, double w, double h, double px, double py)",False,NULL
32,RoundRectangle2D.Float,15,"boolean contains(double x, double y, double w, double h, double px, double py, double pw, double ph)",False,NULL
32,RoundRectangle2D.Float,16,"boolean intersects(double x, double y, double w, double h, double px, double py, double pw, double ph)",False,NULL
