Sample: 0 BinaryRefAddr
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents the binary form of the address of a communications end-point.

@@ Instruction
I want to use javax.naming.BinaryRefAddr package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `BinaryRefAddr(String type, byte[] addr)`: This is the constructor of the BinaryRefAddr class. It takes two parameters: type (String) and addr (byte[]).

2. `String getType()`: This method returns the type of the address.

3. `byte[] getAddress()`: This method returns the binary form of the address.

4. `boolean equals(Object obj)`: This method compares the specified object with this BinaryRefAddr for equality.

5. `int hashCode()`: This method returns the hash code value for this BinaryRefAddr.
================================================================

Sample: 1 Binding
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents a name-to-object binding found in a context.

@@ Instruction
I want to use javax.naming.Binding package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getName()`: This method returns the name of the binding.
2. `getObject()`: This method returns the object bound to the name.
3. `setName(String name)`: This method sets the name of the binding.
4. `setObject(Object obj)`: This method sets the object bound to the name.
5. `getClass()`: This method returns the Class object representing the runtime class of this object.
================================================================

Sample: 2 CompositeName
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents a composite name -- a sequence of component names spanning multiple namespaces.

@@ Instruction
I want to use javax.naming.CompositeName package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `CompositeName(String[] name)`: This is the constructor of the CompositeName class. It takes an array of strings as a parameter and creates a new CompositeName object.

2. `String get(int index)`: This method returns the name at the specified position in this composite name.

3. `int size()`: This method returns the number of names in this composite name.

4. `String toString()`: This method returns a string representation of this composite name.

5. `String[] getAll()`: This method returns an array containing all of the names in this composite name.
================================================================

Sample: 3 CompoundName
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents a compound name -- a name from a hierarchical name space.

@@ Instruction
I want to use javax.naming.CompoundName package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.

Note: The above methods are not inherent from its parent class.
================================================================

Sample: 4 InitialContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class is the starting context for performing naming operations.

@@ Instruction
I want to use javax.naming.InitialContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Context lookup(Name name)`: This method returns a reference to the object identified by the given name.

2. `void rebind(Name name, Object obj)`: This method binds the given object to the given name.

3. `void unbind(Name name)`: This method unbinds the object identified by the given name.

4. `void close()`: This method closes the context.

5. `Context createSubcontext(Name name)`: This method creates a new subcontext with the given name.
================================================================

Sample: 5 LinkRef
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents a Reference whose contents is a name, called the link name, that is bound to an atomic name in a context.

@@ Instruction
I want to use javax.naming.LinkRef package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public LinkRef(String linkName, String linkValue)`: This constructor creates a new LinkRef with the specified link name and link value.

2. `public String getLinkName()`: This method returns the link name of this LinkRef.

3. `public String getLinkValue()`: This method returns the link value of this LinkRef.

4. `public void setLinkName(String linkName)`: This method sets the link name of this LinkRef to the specified link name.

5. `public void setLinkValue(String linkValue)`: This method sets the link value of this LinkRef to the specified link value.
================================================================

Sample: 6 NameClassPair
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents the object name and class name pair of a binding found in a context.

@@ Instruction
I want to use javax.naming.NameClassPair package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `NameClassPair(String name, String className)`: This is the constructor of the NameClassPair class. It takes two parameters, name and className, and initializes a new NameClassPair object with these values.

2. `String getName()`: This method returns the name of the object represented by this NameClassPair.

3. `String getClassName()`: This method returns the class name of the object represented by this NameClassPair.

4. `int hashCode()`: This method returns the hash code value for this NameClassPair.

5. `boolean equals(Object obj)`: This method compares the specified object with this NameClassPair for equality.
================================================================

Sample: 7 RefAddr
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents the address of a communications end-point.

@@ Instruction
I want to use javax.naming.RefAddr package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `RefAddr(String type, Object addr)`: This constructor creates a new RefAddr with the specified type and address.

2. `Object getAddress()`: This method returns the address of this RefAddr.

3. `String getType()`: This method returns the type of this RefAddr.

4. `void setAddress(Object addr)`: This method sets the address of this RefAddr to the specified address.

5. `void setType(String type)`: This method sets the type of this RefAddr to the specified type.
================================================================

Sample: 8 Reference
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents a reference to an object that is found outside of the naming/directory system.

@@ Instruction
I want to use javax.naming.Reference package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Reference`: This is the constructor of the Reference class.

   `public Reference(String className, String factoryClassName, String factoryLocation)`

2. `getClassName`: This method returns the class name of the object being referenced.

   `public String getClassName()`

3. `getFactoryClassName`: This method returns the class name of the factory that can create the object being referenced.

   `public String getFactoryClassName()`

4. `getFactoryLocation`: This method returns the location of the factory that can create the object being referenced.

   `public String getFactoryLocation()`

5. `getContent`: This method returns the content of the object being referenced.

   `public Object getContent()`

6. `setContent`: This method sets the content of the object being referenced.

   `public void setContent(Object content)`

7. `getReference`: This method returns the reference object.

   `public Reference getReference()`

8. `setReference`: This method sets the reference object.

   `public void setReference(Reference ref)`

9. `getContentDescription`: This method returns the content description of the object being referenced.

   `public String getContentDescription()`

10. `setContentDescription`: This method sets the content description of the object being referenced.

    `public void setContentDescription(String desc)`
================================================================

Sample: 9 StringRefAddr
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the classes and interfaces for accessing naming services.
Here is the description of the class This class represents the string form of the address of a communications end-point.

@@ Instruction
I want to use javax.naming.StringRefAddr package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `StringRefAddr(String type, String addr)`: This constructor creates a new StringRefAddr with the specified type and address.

2. `String getAddrType()`: This method returns the type of this address.

3. `String getAddress()`: This method returns the address of this address.

4. `void setAddrType(String type)`: This method sets the type of this address.

5. `void setAddress(String addr)`: This method sets the address of this address.
================================================================

