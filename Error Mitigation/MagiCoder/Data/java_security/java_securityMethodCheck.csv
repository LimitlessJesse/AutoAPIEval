Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,AccessControlContext,1,boolean checkPermission(Permission perm),False,NULL
0,AccessControlContext,2,"void checkPermission(Permission perm, Object context)",False,NULL
0,AccessControlContext,3,void setReadOnly(),False,NULL
0,AccessControlContext,4,void setWriteable(),False,NULL
0,AccessControlContext,5,boolean isReadOnly(),False,NULL
1,AccessController,1,void checkPermission(Permission perm),True,"Determines whether the access request indicated by the specified permission should be allowed or denied, based on the current AccessControlContext and security policy."
1,AccessController,2,"void checkPermission(Permission perm, Object context)",False,NULL
1,AccessController,3,void checkSecurityAccess(String target),False,NULL
1,AccessController,4,"void checkSecurityAccess(String target, Object context)",False,NULL
1,AccessController,5,void checkPrivileged(PrivilegedAction<?> action),False,NULL
1,AccessController,6,<T> T doPrivileged(PrivilegedExceptionAction<T> action),True,Performs the specified PrivilegedExceptionAction with privileges enabled.
1,AccessController,7,"void doPrivileged(PrivilegedAction<?> action, AccessControlContext context)",False,NULL
1,AccessController,8,"<T> T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context)",True,Performs the specified PrivilegedExceptionAction with privileges enabled and restricted by the specified AccessControlContext.
1,AccessController,9,Object getStackAccessControlContext(),False,NULL
1,AccessController,10,void setStackAccessControlContext(AccessControlContext context),False,NULL
2,AlgorithmParameterGenerator,1,void init(SecureRandom random),False,NULL
2,AlgorithmParameterGenerator,2,AlgorithmParameterGeneratorSpi getInstance(String algorithm),False,NULL
2,AlgorithmParameterGenerator,3,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, String provider)",False,NULL
2,AlgorithmParameterGenerator,4,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, Provider provider)",False,NULL
2,AlgorithmParameterGenerator,5,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, String provider, ClassLoader loader)",False,NULL
2,AlgorithmParameterGenerator,6,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, Provider provider, ClassLoader loader)",False,NULL
2,AlgorithmParameterGenerator,7,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, String provider, ClassLoader loader, Class<?> parameterClass)",False,NULL
2,AlgorithmParameterGenerator,8,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, Provider provider, ClassLoader loader, Class<?> parameterClass)",False,NULL
2,AlgorithmParameterGenerator,9,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, String provider, ClassLoader loader, Class<?> parameterClass, Class<?> keyClass)",False,NULL
2,AlgorithmParameterGenerator,10,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, Provider provider, ClassLoader loader, Class<?> parameterClass, Class<?> keyClass)",False,NULL
2,AlgorithmParameterGenerator,11,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, String provider, ClassLoader loader, Class<?> parameterClass, Class<?> keyClass, Class<?> secureRandomClass)",False,NULL
2,AlgorithmParameterGenerator,12,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, Provider provider, ClassLoader loader, Class<?> parameterClass, Class<?> keyClass, Class<?> secureRandomClass)",False,NULL
2,AlgorithmParameterGenerator,13,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, String provider, ClassLoader loader, Class<?> parameterClass, Class<?> keyClass, Class<?> secureRandomClass, Class<?> domainParameterClass)",False,NULL
2,AlgorithmParameterGenerator,14,"AlgorithmParameterGeneratorSpi getInstance(String algorithm, Provider provider, ClassLoader loader, Class<?> parameterClass, Class<?> keyClass, Class<?> secureRandomClass, Class<?> domainParameterClass)",False,NULL
3,AlgorithmParameterGeneratorSpi,1,AlgorithmParameterGeneratorSpi(),False,NULL
3,AlgorithmParameterGeneratorSpi,2,init(SecureRandom random),False,NULL
3,AlgorithmParameterGeneratorSpi,3,generateParameters(),False,NULL
3,AlgorithmParameterGeneratorSpi,4,setParameter(AlgorithmParameterSpec params),False,NULL
3,AlgorithmParameterGeneratorSpi,5,getParameter(AlgorithmParameterSpec params),False,NULL
4,AlgorithmParameters,1,AlgorithmParameters getInstance(String algorithm),True,Returns a parameter object for the specified algorithm.
4,AlgorithmParameters,2,"AlgorithmParameters getInstance(String algorithm, String provider)",True,Returns a parameter object for the specified algorithm.
4,AlgorithmParameters,3,"AlgorithmParameters getInstance(String algorithm, Provider provider)",True,Returns a parameter object for the specified algorithm.
4,AlgorithmParameters,4,"AlgorithmParameters getInstance(String algorithm, String provider, ClassLoader loader)",False,NULL
4,AlgorithmParameters,5,"AlgorithmParameters getInstance(String algorithm, Provider provider, ClassLoader loader)",False,NULL
5,AlgorithmParametersSpi,1,boolean engineInit(byte[] params),False,NULL
5,AlgorithmParametersSpi,2,byte[] engineGetParameters(),False,NULL
5,AlgorithmParametersSpi,3,void engineSetParameters(byte[] params),False,NULL
5,AlgorithmParametersSpi,4,AlgorithmParameterSpec engineGetParameterSpec(Class<T> parameterSpec),False,NULL
5,AlgorithmParametersSpi,5,"void engineInit(AlgorithmParameterSpec params, SecureRandom random)",False,NULL
6,AllPermission,1,boolean implies(Permission p),True,"Checks if the specified permission is ""implied"" by this object."
6,AllPermission,2,boolean equals(Object obj),True,Checks two AllPermission objects for equality.
6,AllPermission,3,String getActions(),True,Returns the canonical string representation of the actions.
6,AllPermission,4,int hashCode(),True,Returns the hash code value for this object.
6,AllPermission,5,String toString(),False,NULL
7,AuthProvider,1,"boolean login(String username, String password)",False,NULL
7,AuthProvider,2,boolean logout(),False,NULL
7,AuthProvider,3,boolean supports(Class<?>[] clazz),False,NULL
7,AuthProvider,4,boolean commit(),False,NULL
7,AuthProvider,5,boolean abort(),False,NULL
8,BasicPermission,1,BasicPermission(String name),False,NULL
8,BasicPermission,2,String getActions(),True,"Returns the canonical string representation of the actions, which currently is the empty string """", since there are no actions for a BasicPermission."
8,BasicPermission,3,boolean implies(Permission p),True,"Checks if the specified permission is ""implied"" by this object."
8,BasicPermission,4,boolean equals(Object obj),True,Checks two BasicPermission objects for equality.
8,BasicPermission,5,int hashCode(),True,Returns the hash code value for this object.
9,CodeSigner,1,"CodeSigner(PrivateKey key, Certificate cert)",False,NULL
9,CodeSigner,2,PrivateKey getPrivateKey(),False,NULL
9,CodeSigner,3,Certificate getCertificate(),False,NULL
9,CodeSigner,4,boolean equals(Object obj),True,Tests for equality between the specified object and this code signer.
9,CodeSigner,5,int hashCode(),True,Returns the hash code value for this code signer.
10,CodeSource,1,CodeSource getCodeSource(),False,NULL
10,CodeSource,2,URL getLocation(),True,Returns the location associated with this CodeSource.
10,CodeSource,3,boolean equals(Object obj),True,Tests for equality between the specified object and this object.
10,CodeSource,4,int hashCode(),True,Returns the hash code value for this object.
10,CodeSource,5,String toString(),True,"Returns a string describing this CodeSource, telling its URL and certificates."
11,DigestInputStream,1,"DigestInputStream(InputStream in, MessageDigest md)",False,NULL
11,DigestInputStream,2,int read() throws IOException,True,"Reads a byte, and updates the message digest (if the digest function is on)."
11,DigestInputStream,3,int read(byte[] b) throws IOException,False,NULL
11,DigestInputStream,4,"int read(byte[] b, int off, int len) throws IOException",True,"Reads into a byte array, and updates the message digest (if the digest function is on)."
11,DigestInputStream,5,void close() throws IOException,False,NULL
12,DigestOutputStream,1,"DigestOutputStream(OutputStream out, MessageDigest digest)",False,NULL
12,DigestOutputStream,2,void write(int b) throws IOException,True,"Updates the message digest (if the digest function is on) using the specified byte, and in any case writes the byte to the output stream."
12,DigestOutputStream,3,void write(byte[] b) throws IOException,False,NULL
12,DigestOutputStream,4,"void write(byte[] b, int off, int len) throws IOException",True,"Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream."
12,DigestOutputStream,5,void flush() throws IOException,False,NULL
13,DomainLoadStoreParameter,1,DomainLoadStoreParameter(),False,NULL
13,DomainLoadStoreParameter,2,getProtectionParameter(),False,NULL
13,DomainLoadStoreParameter,3,getProtectionParameter(String type),False,NULL
13,DomainLoadStoreParameter,4,getProtectionParameters(),False,NULL
13,DomainLoadStoreParameter,5,getProtectionParameters(String type),False,NULL
13,DomainLoadStoreParameter,6,getStore(),False,NULL
13,DomainLoadStoreParameter,7,getStore(String type),False,NULL
13,DomainLoadStoreParameter,8,getStoreParameters(),False,NULL
13,DomainLoadStoreParameter,9,getStoreParameters(String type),False,NULL
13,DomainLoadStoreParameter,10,getTrustAnchors(),False,NULL
13,DomainLoadStoreParameter,11,getTrustAnchors(String type),False,NULL
13,DomainLoadStoreParameter,12,getTrustParameters(),False,NULL
13,DomainLoadStoreParameter,13,getTrustParameters(String type),False,NULL
13,DomainLoadStoreParameter,14,getTrustStores(),False,NULL
13,DomainLoadStoreParameter,15,getTrustStores(String type),False,NULL
13,DomainLoadStoreParameter,16,getTrustStoresParameters(),False,NULL
13,DomainLoadStoreParameter,17,getTrustStoresParameters(String type),False,NULL
13,DomainLoadStoreParameter,18,getKeyStores(),False,NULL
13,DomainLoadStoreParameter,19,getKeyStores(String type),False,NULL
13,DomainLoadStoreParameter,20,getKeyStoresParameters(),False,NULL
13,DomainLoadStoreParameter,21,getKeyStoresParameters(String type),False,NULL
13,DomainLoadStoreParameter,22,getKeyManagerFactoryAlgorithm(),False,NULL
13,DomainLoadStoreParameter,23,getKeyManagerFactoryAlgorithm(String type),False,NULL
13,DomainLoadStoreParameter,24,getKeyManagerFactoryParameters(),False,NULL
13,DomainLoadStoreParameter,25,getKeyManagerFactoryParameters(String type),False,NULL
13,DomainLoadStoreParameter,26,getKeyManagerFactory(),False,NULL
13,DomainLoadStoreParameter,27,getKeyManagerFactory(String type),False,NULL
13,DomainLoadStoreParameter,28,getKeyManagerFactoryParameters(),False,NULL
13,DomainLoadStoreParameter,29,getKeyManagerFactoryParameters(String type),False,NULL
13,DomainLoadStoreParameter,30,getKeyManagerFactory(),False,NULL
13,DomainLoadStoreParameter,31,getKeyManagerFactory(String type),False,NULL
13,DomainLoadStoreParameter,32,getKeyManagerFactoryParameters(),False,NULL
13,DomainLoadStoreParameter,33,getKeyManagerFactoryParameters(String type),False,NULL
13,DomainLoadStoreParameter,34,getKeyManagerFactory(),False,NULL
13,DomainLoadStoreParameter,35,getKeyManagerFactory(String type),False,NULL
13,DomainLoadStoreParameter,36,getKeyManagerFactoryParameters(),False,NULL
13,DomainLoadStoreParameter,37,getKeyManagerFactoryParameters(String type),False,NULL
13,DomainLoadStoreParameter,38,getKeyManagerFactory(),False,NULL
13,DomainLoadStoreParameter,39,getKeyManagerFactory(String type),False,NULL
13,DomainLoadStoreParameter,40,getKeyManagerFactoryParameters(),False,NULL
13,DomainLoadStoreParameter,41,getKeyManagerFactoryParameters(String type),False,NULL
13,DomainLoadStoreParameter,42,getKeyManagerFactory(),False,NULL
13,DomainLoadStoreParameter,43,getKeyManagerFactory(String type),False,NULL
13,DomainLoadStoreParameter,44,getKeyManagerFactoryParameters(),False,NULL
13,DomainLoadStoreParameter,45,getKeyManagerFactoryParameters(String type),False,NULL
14,GuardedObject,1,GuardedObject(Object guard),False,NULL
14,GuardedObject,2,Object getObject(),True,"Retrieves the guarded object, or throws an exception if access to the guarded object is denied by the guard."
14,GuardedObject,3,void setObject(Object obj),False,NULL
14,GuardedObject,4,Object getGuard(),False,NULL
14,GuardedObject,5,boolean equals(Object obj),False,NULL
15,Identity,1,Identity.getPrincipals(),False,NULL
15,Identity,2,Identity.getSubject(),False,NULL
15,Identity,3,Identity.impersonate(Subject subject),False,NULL
15,Identity,4,"Identity.runAs(Subject subject, Runnable r)",False,NULL
15,Identity,5,"Identity.runAsGroup(Group group, Runnable r)",False,NULL
15,Identity,6,"Identity.runAsUser(User user, Runnable r)",False,NULL
15,Identity,7,Identity.setPrincipals(Set<Principal> principals),False,NULL
15,Identity,8,Identity.setSubject(Subject subject),False,NULL
15,Identity,9,Identity.getPrivilegedAction(PrivilegedAction<T> action),False,NULL
15,Identity,10,Identity.doPrivileged(PrivilegedExceptionAction<T> action),False,NULL
15,Identity,11,"Identity.doAs(Subject subject, PrivilegedExceptionAction<T> action)",False,NULL
15,Identity,12,"Identity.doAs(Subject subject, Runnable action)",False,NULL
15,Identity,13,"Identity.doAs(Subject subject, Callable<T> action)",False,NULL
15,Identity,14,"Identity.doAs(Subject subject, PrivilegedExceptionRunnable action)",False,NULL
15,Identity,15,"Identity.doAs(Subject subject, PrivilegedExceptionCallable<T> action)",False,NULL
15,Identity,16,"Identity.doAs(Subject subject, PrivilegedVoidAction action)",False,NULL
15,Identity,17,"Identity.doAs(Subject subject, PrivilegedVoidAction action)",False,NULL
15,Identity,18,"Identity.doAs(Subject subject, PrivilegedVoidAction action)",False,NULL
15,Identity,19,"Identity.doAs(Subject subject, PrivilegedVoidAction action)",False,NULL
15,Identity,20,"Identity.doAs(Subject subject, PrivilegedVoidAction action)",False,NULL
16,IdentityScope,1,boolean add(E e),False,NULL
16,IdentityScope,2,boolean addAll(Collection<? extends E> c),False,NULL
16,IdentityScope,3,void clear(),False,NULL
16,IdentityScope,4,boolean contains(Object o),False,NULL
16,IdentityScope,5,boolean containsAll(Collection<?> c),False,NULL
17,KeyFactory,1,KeyFactory getInstance(String algorithm),True,Returns a KeyFactory object that converts public/private keys of the specified algorithm.
17,KeyFactory,2,"KeyFactory getInstance(String algorithm, String provider)",True,Returns a KeyFactory object that converts public/private keys of the specified algorithm.
17,KeyFactory,3,"KeyFactory getInstance(String algorithm, Provider provider)",True,Returns a KeyFactory object that converts public/private keys of the specified algorithm.
17,KeyFactory,4,Key generatePublic(KeySpec keySpec),False,NULL
17,KeyFactory,5,Key generatePrivate(KeySpec keySpec),False,NULL
17,KeyFactory,6,"KeySpec getKeySpec(Key key, Class<? extends KeySpec> keySpec)",False,NULL
17,KeyFactory,7,"KeySpec getKeySpec(Key key, String keySpec)",False,NULL
17,KeyFactory,8,"KeySpec getKeySpec(Key key, Class<? extends KeySpec> keySpec, Provider provider)",False,NULL
17,KeyFactory,9,"KeySpec getKeySpec(Key key, String keySpec, Provider provider)",False,NULL
17,KeyFactory,10,"KeySpec getKeySpec(Key key, Class<? extends KeySpec> keySpec, String provider)",False,NULL
17,KeyFactory,11,"KeySpec getKeySpec(Key key, String keySpec, String provider)",False,NULL
18,KeyFactorySpi,1,KeyFactorySpi(),False,NULL
18,KeyFactorySpi,2,KeyFactorySpi(Provider provider),False,NULL
18,KeyFactorySpi,3,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi)",False,NULL
18,KeyFactorySpi,4,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi)",False,NULL
18,KeyFactorySpi,5,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi)",False,NULL
18,KeyFactorySpi,6,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2)",False,NULL
18,KeyFactorySpi,7,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3)",False,NULL
18,KeyFactorySpi,8,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3, KeyFactorySpi keyFactorySpi4)",False,NULL
18,KeyFactorySpi,9,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3, KeyFactorySpi keyFactorySpi4, KeyFactorySpi keyFactorySpi5)",False,NULL
18,KeyFactorySpi,10,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3, KeyFactorySpi keyFactorySpi4, KeyFactorySpi keyFactorySpi5, KeyFactorySpi keyFactorySpi6)",False,NULL
18,KeyFactorySpi,11,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3, KeyFactorySpi keyFactorySpi4, KeyFactorySpi keyFactorySpi5, KeyFactorySpi keyFactorySpi6, KeyFactorySpi keyFactorySpi7)",False,NULL
18,KeyFactorySpi,12,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3, KeyFactorySpi keyFactorySpi4, KeyFactorySpi keyFactorySpi5, KeyFactorySpi keyFactorySpi6, KeyFactorySpi keyFactorySpi7, KeyFactorySpi keyFactorySpi8)",False,NULL
18,KeyFactorySpi,13,"KeyFactorySpi(Provider provider, AlgorithmParameterGeneratorSpi paramGenSpi, KeySpecSpi keySpecSpi, KeyFactorySpi keyFactorySpi, KeyFactorySpi keyFactorySpi2, KeyFactorySpi keyFactorySpi3, KeyFactorySpi keyFactorySpi4, KeyFactorySpi keyFactorySpi5, KeyFactorySpi keyFactorySpi6, KeyFactorySpi keyFactorySpi7, KeyFactorySpi keyFactorySpi8, KeyFactorySpi keyFactorySpi9)",False,NULL
19,KeyPair,1,java.security.KeyPairGenerator,False,NULL
19,KeyPair,2,java.security.KeyPair,False,NULL
19,KeyPair,3,java.security.KeyFactory,False,NULL
19,KeyPair,4,java.security.spec.KeySpec,False,NULL
19,KeyPair,5,java.security.spec.RSAPrivateKeySpec,False,NULL
19,KeyPair,6,java.security.spec.RSAPublicKeySpec,False,NULL
19,KeyPair,7,java.security.spec.X509EncodedKeySpec,False,NULL
19,KeyPair,8,java.security.spec.PKCS8EncodedKeySpec,False,NULL
19,KeyPair,9,java.security.spec.EncodedKeySpec,False,NULL
19,KeyPair,10,java.security.spec.RSAPrivateCrtKeySpec,False,NULL
20,KeyPairGenerator,1,KeyPairGenerator(),False,NULL
20,KeyPairGenerator,2,initialize(int keySize),False,NULL
20,KeyPairGenerator,3,generateKeyPair(),False,NULL
20,KeyPairGenerator,4,getAlgorithm(),False,NULL
20,KeyPairGenerator,5,getProvider(),False,NULL
21,KeyPairGeneratorSpi,1,KeyPairGeneratorSpi(),False,NULL
21,KeyPairGeneratorSpi,2,"void initialize(int keySize, SecureRandom random)",True,"Initializes the key pair generator for a certain keysize, using the default parameter set."
21,KeyPairGeneratorSpi,3,KeyPair generateKeyPair(),True,Generates a key pair.
21,KeyPairGeneratorSpi,4,"void engineInitialize(AlgorithmParameterSpec params, SecureRandom random)",False,NULL
21,KeyPairGeneratorSpi,5,AlgorithmParameterSpec engineGetParameters(),False,NULL
22,KeyRep,1,KeyRep.getAlgorithm(),False,NULL
22,KeyRep,2,KeyRep.getFormat(),False,NULL
22,KeyRep,3,KeyRep.getEncoded(),False,NULL
22,KeyRep,4,KeyRep.getType(),False,NULL
22,KeyRep,5,KeyRep.getParams(),False,NULL
23,KeyStore,1,KeyStore.getInstance(String algorithm),False,NULL
23,KeyStore,2,"KeyStore.load(InputStream in, char[] password)",False,NULL
23,KeyStore,3,"KeyStore.store(OutputStream out, char[] password)",False,NULL
23,KeyStore,4,"KeyStore.setKeyEntry(String alias, PrivateKey key, char[] password, Certificate[] chain)",False,NULL
23,KeyStore,5,KeyStore.getCertificate(String alias),False,NULL
24,KeyStore.Builder,1,KeyStore.Builder.newInstance(String provider),False,NULL
24,KeyStore.Builder,2,"KeyStore.Builder setKeyEntry(String alias, PrivateKey privateKey, char[] password, Certificate[] certificateChain)",False,NULL
24,KeyStore.Builder,3,"KeyStore.Builder setKeyEntry(String alias, PrivateKey privateKey, char[] password, Certificate[] certificateChain, KeyStore.ProtectionParameter protectionParameter)",False,NULL
24,KeyStore.Builder,4,"KeyStore.Builder setKeyEntry(String alias, PrivateKey privateKey, char[] password, Certificate[] certificateChain, KeyStore.ProtectionParameter protectionParameter, KeyStore.CallbackHandler callbackHandler)",False,NULL
24,KeyStore.Builder,5,"KeyStore.Builder setKeyEntry(String alias, PrivateKey privateKey, char[] password, Certificate[] certificateChain, KeyStore.ProtectionParameter protectionParameter, KeyStore.CallbackHandler callbackHandler, Map<String, String> attributes)",False,NULL
25,KeyStore.CallbackHandlerProtection,1,boolean isKeyEntry(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,2,ProtectionParameter getProtectionParameter(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,3,Set<String> aliases(),False,NULL
25,KeyStore.CallbackHandlerProtection,4,Certificate[] getCertificateChain(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,5,PrivateKey getPrivateKey(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,6,Certificate getCertificate(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,7,SecretKey getSecretKey(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,8,"Key getKey(String alias, char[] password)",False,NULL
25,KeyStore.CallbackHandlerProtection,9,KeyStore.ProtectionParameter getProtectionParameter(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,10,Set<String> aliases(),False,NULL
25,KeyStore.CallbackHandlerProtection,11,Certificate[] getCertificateChain(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,12,PrivateKey getPrivateKey(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,13,Certificate getCertificate(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,14,SecretKey getSecretKey(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,15,"Key getKey(String alias, char[] password)",False,NULL
25,KeyStore.CallbackHandlerProtection,16,KeyStore.ProtectionParameter getProtectionParameter(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,17,Set<String> aliases(),False,NULL
25,KeyStore.CallbackHandlerProtection,18,Certificate[] getCertificateChain(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,19,PrivateKey getPrivateKey(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,20,Certificate getCertificate(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,21,SecretKey getSecretKey(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,22,"Key getKey(String alias, char[] password)",False,NULL
25,KeyStore.CallbackHandlerProtection,23,KeyStore.ProtectionParameter getProtectionParameter(String alias),False,NULL
25,KeyStore.CallbackHandlerProtection,24,Set<String> aliases(),False,NULL
25,KeyStore.CallbackHandlerProtection,25,Certificate[] getCertificateChain(String alias),False,NULL
26,KeyStore.PasswordProtection,1,KeyStore.PasswordProtection(char[] password),False,NULL
26,KeyStore.PasswordProtection,2,"KeyStore.PasswordProtection(char[] password, char[] s)",False,NULL
26,KeyStore.PasswordProtection,3,KeyStore.getProtectionParameter(String alias),False,NULL
26,KeyStore.PasswordProtection,4,"KeyStore.setKeyEntry(String alias, Key key, char[] password, Certificate[] chain)",False,NULL
26,KeyStore.PasswordProtection,5,"KeyStore.setKeyEntry(String alias, Key key, ProtectionParameter protParam, Certificate[] chain)",False,NULL
27,KeyStore.PrivateKeyEntry,1,"PrivateKeyEntry(PrivateKey privateKey, Certificate[] certificateChain)",False,NULL
27,KeyStore.PrivateKeyEntry,2,PrivateKey getPrivateKey(),True,Gets the PrivateKey from this entry.
27,KeyStore.PrivateKeyEntry,3,Certificate[] getCertificateChain(),True,Gets the Certificate chain from this entry.
27,KeyStore.PrivateKeyEntry,4,boolean equals(Object obj),False,NULL
27,KeyStore.PrivateKeyEntry,5,int hashCode(),False,NULL
28,KeyStore.SecretKeyEntry,1,boolean contains(Object o),False,NULL
28,KeyStore.SecretKeyEntry,2,boolean remove(Object o),False,NULL
28,KeyStore.SecretKeyEntry,3,boolean addAll(Collection<? extends E> c),False,NULL
28,KeyStore.SecretKeyEntry,4,boolean removeAll(Collection<?> c),False,NULL
28,KeyStore.SecretKeyEntry,5,boolean retainAll(Collection<?> c),False,NULL
29,KeyStore.TrustedCertificateEntry,1,TrustedCertificateEntry(Certificate cert),False,NULL
29,KeyStore.TrustedCertificateEntry,2,Certificate getCertificate(),False,NULL
29,KeyStore.TrustedCertificateEntry,3,void setCertificate(Certificate cert),False,NULL
29,KeyStore.TrustedCertificateEntry,4,boolean equals(Object obj),False,NULL
29,KeyStore.TrustedCertificateEntry,5,int hashCode(),False,NULL
30,KeyStoreSpi,1,KeyStoreSpi(),False,NULL
30,KeyStoreSpi,2,"void engineLoad(InputStream stream, char[] password)",True,Loads the keystore from the given input stream.
30,KeyStoreSpi,3,"void engineSetKeyEntry(String alias, Key key, char[] password, Certificate[] chain)",True,"Assigns the given key to the given alias, protecting it with the given password."
30,KeyStoreSpi,4,void engineDeleteEntry(String alias),True,Deletes the entry identified by the given alias from this keystore.
30,KeyStoreSpi,5,Certificate[] engineGetCertificateChain(String alias),True,Returns the certificate chain associated with the given alias.
31,MessageDigest,1,MessageDigest getInstance(String algorithm),True,Returns a MessageDigest object that implements the specified digest algorithm.
31,MessageDigest,2,void update(byte[] input),True,Updates the digest using the specified array of bytes.
31,MessageDigest,3,byte[] digest(),True,Completes the hash computation by performing final operations such as padding.
31,MessageDigest,4,void reset(),True,Resets the digest for further use.
31,MessageDigest,5,int getDigestLength(),True,"Returns the length of the digest in bytes, or 0 if this operation is not supported by the provider and the implementation is not cloneable."
32,MessageDigestSpi,1,MessageDigestSpi(),False,NULL
32,MessageDigestSpi,2,void engineUpdate(byte input),True,Updates the digest using the specified byte.
32,MessageDigestSpi,3,"void engineUpdate(byte[] input, int offset, int len)",True,"Updates the digest using the specified array of bytes, starting at the specified offset."
32,MessageDigestSpi,4,byte[] engineDigest(),True,Completes the hash computation by performing final operations such as padding.
32,MessageDigestSpi,5,void engineReset(),True,Resets the digest for further use.
33,Permission,1,boolean implies(Permission p),True,"Checks if the specified permission's actions are ""implied by"" this object's actions."
33,Permission,2,boolean equals(Object obj),True,Checks two Permission objects for equality.
33,Permission,3,int hashCode(),True,Returns the hash code value for this Permission object.
33,Permission,4,String getActions(),True,Returns the actions as a String.
33,Permission,5,String getName(),True,Returns the name of this Permission.
34,PermissionCollection,1,boolean add(Permission p),False,NULL
34,PermissionCollection,2,boolean implies(Permission p),True,Checks to see if the specified permission is implied by the collection of Permission objects held in this PermissionCollection.
34,PermissionCollection,3,Enumeration elements(),False,NULL
34,PermissionCollection,4,void setReadOnly(),True,"Marks this PermissionCollection object as ""readonly""."
34,PermissionCollection,5,boolean isReadOnly(),True,Returns true if this PermissionCollection object is marked as readonly.
35,Permissions,1,boolean add(Permission permission),False,NULL
35,Permissions,2,boolean implies(Permission permission),True,Checks to see if this object's PermissionCollection for permissions of the specified permission's class implies the permissions expressed in the permission object.
35,Permissions,3,Enumeration elements(),False,NULL
35,Permissions,4,boolean isReadOnly(),False,NULL
35,Permissions,5,int size(),False,NULL
36,PKCS12Attribute,1,"PKCS12Attribute(String name, String value)",False,NULL
36,PKCS12Attribute,2,String getName(),True,Returns the attribute's ASN.1 Object Identifier represented as a list of dot-separated integers.
36,PKCS12Attribute,3,String getValue(),True,Returns the attribute's ASN.1 DER-encoded value as a string.
36,PKCS12Attribute,4,void setName(String name),False,NULL
36,PKCS12Attribute,5,void setValue(String value),False,NULL
37,Policy,1,Policy.getPolicy(),False,NULL
37,Policy,2,Policy.setPolicy(Policy p),False,NULL
37,Policy,3,Policy.getGrant(Permission perm),False,NULL
37,Policy,4,Policy.getPermissions(ProtectionDomain domain),False,NULL
37,Policy,5,Policy.getPermissions(CodeSource codesource),False,NULL
38,PolicySpi,1,abstract PolicySpi(),False,NULL
38,PolicySpi,2,abstract void init(Policy.Parameters params),False,NULL
38,PolicySpi,3,"abstract boolean implies(Subject subject, ProtectionDomain domain, int protectionAction)",False,NULL
38,PolicySpi,4,abstract void refresh(),False,NULL
38,PolicySpi,5,abstract void refresh(ProtectionDomain domain),False,NULL
39,ProtectionDomain,1,ProtectionDomain getProtectionDomain(),False,NULL
39,ProtectionDomain,2,PermissionCollection getPermissions(),True,Returns the static permissions granted to this domain.
39,ProtectionDomain,3,Principal[] getPrincipals(),True,Returns an array of principals for this domain.
39,ProtectionDomain,4,CodeSource getCodeSource(),True,Returns the CodeSource of this domain.
39,ProtectionDomain,5,boolean implies(ProtectionDomain pd),False,NULL
40,Provider,1,"Provider(String type, String name, String version, String info)",False,NULL
40,Provider,2,String getType(),False,NULL
40,Provider,3,String getName(),True,Returns the name of this provider.
40,Provider,4,String getInfo(),True,Returns a human-readable description of the provider and its services.
40,Provider,5,String getVersion(),False,NULL
40,Provider,6,Set<Provider.Service> getServices(),True,Get an unmodifiable Set of all services supported by this Provider.
40,Provider,7,Set<String> getServiceNames(),False,NULL
40,Provider,8,Set<Provider.Service> getServices(Class<?> type),False,NULL
40,Provider,9,Set<String> getServiceNames(Class<?> type),False,NULL
40,Provider,10,Set<Provider.Service> getServices(String type),False,NULL
40,Provider,11,Set<String> getServiceNames(String type),False,NULL
40,Provider,12,"Set<Provider.Service> getServices(String type, String algorithm)",False,NULL
40,Provider,13,"Set<String> getServiceNames(String type, String algorithm)",False,NULL
40,Provider,14,"Set<Provider.Service> getServices(String type, String algorithm, String className)",False,NULL
40,Provider,15,"Set<String> getServiceNames(String type, String algorithm, String className)",False,NULL
40,Provider,16,"Set<Provider.Service> getServices(String type, String algorithm, String className, String providerName)",False,NULL
40,Provider,17,"Set<String> getServiceNames(String type, String algorithm, String className, String providerName)",False,NULL
40,Provider,18,"Set<Provider.Service> getServices(String type, String algorithm, String className, String providerName, String version)",False,NULL
40,Provider,19,"Set<String> getServiceNames(String type, String algorithm, String className, String providerName, String version)",False,NULL
40,Provider,20,"Set<Provider.Service> getServices(String type, String algorithm, String className, String providerName, String version, String[] options)",False,NULL
40,Provider,21,"Set<String> getServiceNames(String type, String algorithm, String className, String providerName, String version, String[] options)",False,NULL
41,Provider.Service,1,String getType(),True,Get the type of this service.
41,Provider.Service,2,String getAlgorithm(),True,Return the name of the algorithm of this service.
41,Provider.Service,3,String getProviderName(),False,NULL
41,Provider.Service,4,Provider getProvider(),True,Return the Provider of this service.
41,Provider.Service,5,boolean isAlgorithmSupported(String algorithm),False,NULL
42,SecureClassLoader,1,SecureClassLoader(),False,NULL
42,SecureClassLoader,2,"Class<?> defineClass(String name, byte[] b, int off, int len)",False,NULL
42,SecureClassLoader,3,"Class<?> defineClass(String name, byte[] b)",False,NULL
42,SecureClassLoader,4,"Class<?> defineClass(String name, byte[] b, int off, int len, ProtectionDomain pd)",False,NULL
42,SecureClassLoader,5,"Class<?> defineClass(String name, byte[] b, ProtectionDomain pd)",False,NULL
42,SecureClassLoader,6,"Class<?> defineClass(String name, byte[] b, int off, int len, ClassLoader loader)",False,NULL
42,SecureClassLoader,7,"Class<?> defineClass(String name, byte[] b, ClassLoader loader)",False,NULL
42,SecureClassLoader,8,"Class<?> defineClass(String name, byte[] b, int off, int len, ClassLoader loader, ProtectionDomain pd)",False,NULL
42,SecureClassLoader,9,"Class<?> defineClass(String name, byte[] b, ProtectionDomain pd, ClassLoader loader)",False,NULL
42,SecureClassLoader,10,"Class<?> defineClass(String name, byte[] b, int off, int len, ClassLoader loader, ProtectionDomain pd, Class<?> caller)",False,NULL
42,SecureClassLoader,11,"Class<?> defineClass(String name, byte[] b, ProtectionDomain pd, ClassLoader loader, Class<?> caller)",False,NULL
43,SecureRandom,1,SecureRandom(),False,NULL
43,SecureRandom,2,void setSeed(byte[] seed),True,Reseeds this random object.
43,SecureRandom,3,void nextBytes(byte[] bytes),True,Generates a user-specified number of random bytes.
43,SecureRandom,4,int nextInt(),False,NULL
43,SecureRandom,5,long nextLong(),False,NULL
43,SecureRandom,6,boolean nextBoolean(),False,NULL
43,SecureRandom,7,double nextDouble(),False,NULL
43,SecureRandom,8,float nextFloat(),False,NULL
43,SecureRandom,9,int nextInt(int n),False,NULL
43,SecureRandom,10,long nextLong(long n),False,NULL
43,SecureRandom,11,double nextGaussian(),False,NULL
43,SecureRandom,12,void setSeed(long seed),True,"Reseeds this random object, using the eight bytes contained in the given long seed."
43,SecureRandom,13,void setSeed(long[] seed),False,NULL
43,SecureRandom,14,"void setSeed(byte[] seed, int offset, int len)",False,NULL
43,SecureRandom,15,"void setSeed(long seed, byte[] seeding)",False,NULL
43,SecureRandom,16,"void setSeed(long seed, byte[] seeding, int offset, int len)",False,NULL
43,SecureRandom,17,"void setSeed(long seed, int numBits)",False,NULL
43,SecureRandom,18,"void setSeed(long seed, int numBits, byte[] seeding)",False,NULL
43,SecureRandom,19,"void setSeed(long seed, int numBits, byte[] seeding, int offset, int len)",False,NULL
43,SecureRandom,20,"void setSeed(long seed, int numBits, byte[] seeding, int offset, int len, int numBits2)",False,NULL
44,SecureRandomSpi,1,SecureRandomSpi(),False,NULL
44,SecureRandomSpi,2,void setSeed(byte[] seed),False,NULL
44,SecureRandomSpi,3,void nextBytes(byte[] bytes),False,NULL
44,SecureRandomSpi,4,int nextInt(),False,NULL
44,SecureRandomSpi,5,long nextLong(),False,NULL
44,SecureRandomSpi,6,boolean nextBoolean(),False,NULL
44,SecureRandomSpi,7,float nextFloat(),False,NULL
44,SecureRandomSpi,8,double nextDouble(),False,NULL
44,SecureRandomSpi,9,double nextGaussian(),False,NULL
44,SecureRandomSpi,10,void setSeed(long seed),False,NULL
44,SecureRandomSpi,11,void setSeed(long[] seed),False,NULL
44,SecureRandomSpi,12,"void setSeed(byte[] seed, int offset, int len)",False,NULL
44,SecureRandomSpi,13,"void setSeed(long seed, byte[] seeding)",False,NULL
44,SecureRandomSpi,14,"void setSeed(long seed, byte[] seeding, int offset, int len)",False,NULL
44,SecureRandomSpi,15,"void setSeed(long seed, int numBits)",False,NULL
44,SecureRandomSpi,16,"void setSeed(long seed, int numBits, byte[] seeding)",False,NULL
44,SecureRandomSpi,17,"void setSeed(long seed, int numBits, byte[] seeding, int offset, int len)",False,NULL
44,SecureRandomSpi,18,"void setSeed(long seed, int numBits, int numRequested)",False,NULL
44,SecureRandomSpi,19,"void setSeed(long seed, int numBits, int numRequested, byte[] seeding)",False,NULL
44,SecureRandomSpi,20,"void setSeed(long seed, int numBits, int numRequested, byte[] seeding, int offset, int len)",False,NULL
45,Security,1,"void setProperty(String key, String value)",True,Sets a security property value.
45,Security,2,String getProperty(String key),True,Gets a security property value.
45,Security,3,"String getProperty(String key, String def)",False,NULL
45,Security,4,void setProvider(Provider p),False,NULL
45,Security,5,Provider getProvider(String providerName),True,"Returns the provider installed with the specified name, if any."
46,SecurityPermission,1,boolean implies(Permission p),False,NULL
46,SecurityPermission,2,boolean equals(Object obj),False,NULL
46,SecurityPermission,3,String getActions(),False,NULL
46,SecurityPermission,4,int hashCode(),False,NULL
46,SecurityPermission,5,String getName(),False,NULL
47,Signature,1,void initVerify(PublicKey key),True,Initializes this object for verification.
47,Signature,2,void initSign(PrivateKey key),True,Initialize this object for signing.
47,Signature,3,void update(byte[] data),True,"Updates the data to be signed or verified, using the specified array of bytes."
47,Signature,4,boolean verify(byte[] signature),True,Verifies the passed-in signature.
47,Signature,5,byte[] sign(),True,Returns the signature bytes of all the data updated.
48,SignatureSpi,1,void update(byte[] input),False,NULL
48,SignatureSpi,2,byte[] sign(),False,NULL
48,SignatureSpi,3,boolean verify(byte[] signature),False,NULL
48,SignatureSpi,4,void initSign(PrivateKey key),False,NULL
48,SignatureSpi,5,void initVerify(PublicKey key),False,NULL
49,SignedObject,1,"SignedObject(Object obj, PrivateKey privateKey)",False,NULL
49,SignedObject,2,Object getObject(),True,Retrieves the encapsulated object.
49,SignedObject,3,byte[] getSignature(),True,"Retrieves the signature on the signed object, in the form of a byte array."
49,SignedObject,4,boolean verify(PublicKey publicKey),False,NULL
49,SignedObject,5,"boolean verify(PublicKey publicKey, Signature sig)",True,"Verifies that the signature in this SignedObject is the valid signature for the object stored inside, with the given verification key, using the designated verification engine."
50,Signer,1,boolean verify(byte[] data),False,NULL
50,Signer,2,void update(byte[] data),False,NULL
50,Signer,3,"void setParameter(String param, Object value)",False,NULL
50,Signer,4,void setSpi(Provider.Service spi),False,NULL
50,Signer,5,void setSeed(byte[] seed),False,NULL
51,Timestamp,1,java.security.Timestamp getTimestamp(),False,NULL
51,Timestamp,2,java.security.Timestamp getTimestamp(java.security.cert.Certificate cert),False,NULL
51,Timestamp,3,java.security.Timestamp getTimestamp(java.security.cert.Certificate[] certs),False,NULL
51,Timestamp,4,java.security.Timestamp getTimestamp(java.security.cert.CertPath certPath),False,NULL
51,Timestamp,5,"java.security.Timestamp getTimestamp(java.security.cert.CertPath certPath, java.security.cert.CertPathParameters params)",False,NULL
52,UnresolvedPermission,1,boolean equals(Object obj),True,Checks two UnresolvedPermission objects for equality.
52,UnresolvedPermission,2,int hashCode(),True,Returns the hash code value for this object.
52,UnresolvedPermission,3,String getActions(),True,"Returns the canonical string representation of the actions, which currently is the empty string """", since there are no actions for an UnresolvedPermission."
52,UnresolvedPermission,4,String getName(),False,NULL
52,UnresolvedPermission,5,String toString(),True,Returns a string describing this UnresolvedPermission.
53,URIParameter,1,boolean add(E e),False,NULL
53,URIParameter,2,"void add(int index, E element)",False,NULL
53,URIParameter,3,boolean addAll(Collection<? extends E> c),False,NULL
53,URIParameter,4,"boolean addAll(int index, Collection<? extends E> c)",False,NULL
53,URIParameter,5,void clear(),False,NULL
