Sample: 0 Endpoint
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class A Web service endpoint.

@@ Instruction
I want to use javax.xml.ws.Endpoint package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Endpoint.publish(String address, Object implementor)`: This method publishes the specified service on the specified address.

2. `Endpoint.publish(String address, WebServiceFeature... features)`: This method publishes the specified service on the specified address.

3. `Endpoint.publish(String address, Object implementor, WebServiceFeature... features)`: This method publishes the specified service on the specified address.

4. `Endpoint.unpublish(String address)`: This method unpublishes the service at the specified address.

5. `Endpoint.getEndpoint()`: This method returns the endpoint for the specified service.
================================================================

Sample: 1 EndpointContext
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class EndpointContext allows multiple endpoints in an application to share any information.

@@ Instruction
I want to use javax.xml.ws.EndpointContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `EndpointContext getContext(MessageContext messageContext)`: This method returns the EndpointContext associated with the given MessageContext.

2. `EndpointContext getContext(Message message)`: This method returns the EndpointContext associated with the given Message.

3. `EndpointContext getContext(SOAPMessage message)`: This method returns the EndpointContext associated with the given SOAPMessage.

4. `EndpointContext getContext(SOAPPart part)`: This method returns the EndpointContext associated with the given SOAPPart.

5. `EndpointContext getContext(SOAPEnvelope envelope)`: This method returns the EndpointContext associated with the given SOAPEnvelope.

6. `EndpointContext getContext(SOAPHeader header)`: This method returns the EndpointContext associated with the given SOAPHeader.

7. `EndpointContext getContext(SOAPBody body)`: This method returns the EndpointContext associated with the given SOAPBody.

8. `EndpointContext getContext(SOAPFault fault)`: This method returns the EndpointContext associated with the given SOAPFault.

9. `EndpointContext getContext(QName qname)`: This method returns the EndpointContext associated with the given QName.

10. `EndpointContext getContext(String key)`: This method returns the EndpointContext associated with the given key.

11. `EndpointContext getContext(URI uri)`: This method returns the EndpointContext associated with the given URI.

12. `EndpointContext getContext(URL url)`: This method returns the EndpointContext associated with the given URL.

13. `EndpointContext getContext(Object object)`: This method returns the EndpointContext associated with the given Object.

14. `EndpointContext getContext(Class<?> clazz)`: This method returns the EndpointContext associated with the given Class.

15. `EndpointContext getContext(String key, Object value)`: This method associates the specified value with the specified key in this context.

16. `EndpointContext getContext(String key, Object value, boolean override)`: This method associates the specified value with the specified key in this context. If the override parameter is true and the key already exists in the context, the old value is replaced with the new value.

17. `EndpointContext getContext(String key, Object value, Class<?> type)`: This method associates the specified value with the specified key in this context. The type parameter is used to determine the type of the value.

18. `EndpointContext getContext(String key, Object value, Class<?> type, boolean override)`: This method associates the specified value with the specified key in this context. The type parameter is used to determine the type of the value. If the override parameter is true and the key already exists in the context, the old value is replaced with the new value.

19. `EndpointContext getContext(String key, Object value, Class<?> type, boolean override, boolean secure)`: This method associates the specified value with the specified key in this context. The type parameter is used to determine the type of the value. If the override parameter is true and the key already exists in the context, the old value is replaced with the new value. If the secure parameter is true, the value is considered secure and should be handled with care.

20. `EndpointContext getContext(String key, Object value, Class<?> type, boolean override, boolean secure, boolean sensitive)`: This method associates the specified value with the specified key in this context. The type parameter is used to determine the type of the value. If the override parameter is true and the key already exists in the context, the old value is replaced with the new value. If the secure parameter is true, the value is considered secure and should be handled with care. If the sensitive parameter is true, the value is considered sensitive and should be handled with care.
================================================================

Sample: 2 EndpointReference
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class This class represents an WS-Addressing EndpointReference which is a remote reference to a web service endpoint.

@@ Instruction
I want to use javax.xml.ws.EndpointReference package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `EndpointReference(URI uri)`: This constructor creates an EndpointReference from a URI.
2. `EndpointReference(String uri)`: This constructor creates an EndpointReference from a string URI.
3. `URI getAddress()`: This method returns the URI of the EndpointReference.
4. `void setAddress(URI address)`: This method sets the URI of the EndpointReference.
5. `void setAddress(String address)`: This method sets the URI of the EndpointReference from a string.
6. `String getAddressAsString()`: This method returns the URI of the EndpointReference as a string.
7. `String getReferenceParametersAsString()`: This method returns the reference parameters of the EndpointReference as a string.
8. `String getReferenceParametersAsString(String prefix)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix.
9. `String getReferenceParametersAsString(String prefix, String namespace)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix and namespace.
10. `String getReferenceParametersAsString(String prefix, String namespace, String localName)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, and local name.
11. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, and attribute name.
12. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, and attribute value.
13. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, and attribute value 2.
14. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, and attribute value 3.
15. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, and attribute value 4.
16. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, and attribute value 5.
17. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, and attribute value 6.
18. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6, String attributeValue7)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, attribute value 6, and attribute value 7.
19. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6, String attributeValue7, String attributeValue8)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, attribute value 6, attribute value 7, and attribute value 8.
20. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6, String attributeValue7, String attributeValue8, String attributeValue9)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, attribute value 6, attribute value 7, attribute value 8, and attribute value 9.
21. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6, String attributeValue7, String attributeValue8, String attributeValue9, String attributeValue10)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, attribute value 6, attribute value 7, attribute value 8, attribute value 9, and attribute value 10.
22. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6, String attributeValue7, String attributeValue8, String attributeValue9, String attributeValue10, String attributeValue11)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, attribute value 6, attribute value 7, attribute value 8, attribute value 9, attribute value 10, and attribute value 11.
23. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue6, String attributeValue7, String attributeValue8, String attributeValue9, String attributeValue10, String attributeValue11, String attributeValue12)`: This method returns the reference parameters of the EndpointReference as a string with a specified prefix, namespace, local name, attribute name, attribute value, attribute value 2, attribute value 3, attribute value 4, attribute value 5, attribute value 6, attribute value 7, attribute value 8, attribute value 9, attribute value 10, attribute value 11, and attribute value 12.
24. `String getReferenceParametersAsString(String prefix, String namespace, String localName, String attributeName, String attributeValue, String attributeValue2, String attributeValue3, String attributeValue4, String attributeValue5, String attributeValue
================================================================

Sample: 3 Holder
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class Holds a value of type T.

@@ Instruction
I want to use javax.xml.ws.Holder package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isNull()`: This method returns true if the Holder object is null.
2. `void set(T value)`: This method sets the value of the Holder object.
3. `T get()`: This method returns the value of the Holder object.
4. `boolean equals(Object obj)`: This method compares the specified object with this Holder for equality.
5. `int hashCode()`: This method returns the hash code value for this Holder.
================================================================

Sample: 4 RespectBindingFeature
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class This feature clarifies the use of the wsdl:binding in a JAX-WS runtime.

@@ Instruction
I want to use javax.xml.ws.RespectBindingFeature package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isEnabled(String name)`: This method returns true if the feature is enabled.
2. `void setEnabled(String name, boolean enabled)`: This method sets the feature to the specified value.
3. `String getID()`: This method returns the unique identifier for this feature.
4. `String getName()`: This method returns the name of this feature.
5. `String getNamespace()`: This method returns the namespace of this feature.

Note: The methods inherent from its parent class are not recommended as they are not specific to the RespectBindingFeature class.
================================================================

Sample: 5 Service
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class Service objects provide the client view of a Web service.

@@ Instruction
I want to use javax.xml.ws.Service package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Service.getPort(QName portName, Class<?> bindingClass)`: This method returns a port of the specified binding class.

2. `Service.getPort(QName portName, Class<?> bindingClass, Class<?>... parameterClasses)`: This method returns a port of the specified binding class and parameter classes.

3. `Service.getPort(QName portName, Class<?> bindingClass, Object... parameters)`: This method returns a port of the specified binding class and parameters.

4. `Service.getPorts()`: This method returns a list of all ports exposed by the service.

5. `Service.getPort(Class<?> bindingClass)`: This method returns a port of the specified binding class.
================================================================

Sample: 6 WebServiceFeature
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class A WebServiceFeature is used to represent a feature that can be enabled or disabled for a web service.

@@ Instruction
I want to use javax.xml.ws.WebServiceFeature package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void setEnabled(boolean enabled)`: This method sets the enabled state of the feature.
2. `public boolean isEnabled()`: This method returns the enabled state of the feature.
3. `public void setID(QName id)`: This method sets the ID of the feature.
4. `public QName getID()`: This method returns the ID of the feature.
5. `public void setParent(WebServiceFeature parent)`: This method sets the parent feature of the feature.
6. `public WebServiceFeature getParent()`: This method returns the parent feature of the feature.
7. `public void setRole(Role role)`: This method sets the role of the feature.
8. `public Role getRole()`: This method returns the role of the feature.
9. `public void setAddress(String address)`: This method sets the address of the feature.
10. `public String getAddress()`: This method returns the address of the feature.
11. `public void setMtomEnabled(boolean mtomEnabled)`: This method sets the MIME type of the feature.
12. `public boolean isMtomEnabled()`: This method returns the MIME type of the feature.
13. `public void setRequestWrapper(String requestWrapper)`: This method sets the request wrapper of the feature.
14. `public String getRequestWrapper()`: This method returns the request wrapper of the feature.
15. `public void setResponseWrapper(String responseWrapper)`: This method sets the response wrapper of the feature.
16. `public String getResponseWrapper()`: This method returns the response wrapper of the feature.
17. `public void setServiceName(QName serviceName)`: This method sets the service name of the feature.
18. `public QName getServiceName()`: This method returns the service name of the feature.
19. `public void setServiceName(String serviceName)`: This method sets the service name of the feature.
20. `public String getServiceName()`: This method returns the service name of the feature.
21. `public void setTargetNamespace(String targetNamespace)`: This method sets the target namespace of the feature.
22. `public String getTargetNamespace()`: This method returns the target namespace of the feature.
23. `public void setUse(Use use)`: This method sets the use of the feature.
24. `public Use getUse()`: This method returns the use of the feature.
25. `public void setWrapperStyle(WrapperStyle wrapperStyle)`: This method sets the wrapper style of the feature.
26. `public WrapperStyle getWrapperStyle()`: This method returns the wrapper style of the feature.
================================================================

Sample: 7 WebServicePermission
----------------------------------------------------------------

@@ Context
Here is the description of the package This package contains the core JAX-WS APIs.
Here is the description of the class This class defines web service permissions.

@@ Instruction
I want to use javax.xml.ws.WebServicePermission package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public boolean create(String name)`: This method creates a new web service permission with the specified name.
2. `public boolean implies(ProtectionDomain domain)`: This method checks if this web service permission implies the specified protection domain.
3. `public boolean isPublic()`: This method checks if this web service permission is public.
4. `public boolean isRole(String role)`: This method checks if this web service permission is a role.
5. `public boolean isDomain(ProtectionDomain domain)`: This method checks if this web service permission is a domain.
================================================================

