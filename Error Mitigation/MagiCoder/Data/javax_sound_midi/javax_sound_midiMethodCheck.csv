Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,Instrument,1,getPatch(),False,NULL
0,Instrument,2,getBank(),False,NULL
0,Instrument,3,getPatchName(),False,NULL
0,Instrument,4,getBankName(),False,NULL
0,Instrument,5,getMidiChannel(),False,NULL
0,Instrument,6,getMidiChannelName(),False,NULL
0,Instrument,7,getMidiChannelType(),False,NULL
0,Instrument,8,getMidiChannelTypeName(),False,NULL
0,Instrument,9,getMidiChannelProgram(),False,NULL
0,Instrument,10,getMidiChannelProgramName(),False,NULL
0,Instrument,11,getMidiChannelVolume(),False,NULL
0,Instrument,12,getMidiChannelVolumeName(),False,NULL
0,Instrument,13,getMidiChannelBalance(),False,NULL
0,Instrument,14,getMidiChannelBalanceName(),False,NULL
0,Instrument,15,getMidiChannelExpression(),False,NULL
0,Instrument,16,getMidiChannelExpressionName(),False,NULL
0,Instrument,17,getMidiChannelModulation(),False,NULL
0,Instrument,18,getMidiChannelModulationName(),False,NULL
0,Instrument,19,getMidiChannelPan(),False,NULL
0,Instrument,20,getMidiChannelPanName(),False,NULL
0,Instrument,21,getMidiChannelSustain(),False,NULL
0,Instrument,22,getMidiChannelSustainName(),False,NULL
0,Instrument,23,getMidiChannelOmni(),False,NULL
0,Instrument,24,getMidiChannelOmniName(),False,NULL
0,Instrument,25,getMidiChannelMono(),False,NULL
0,Instrument,26,getMidiChannelMonoName(),False,NULL
0,Instrument,27,getMidiChannelPoly(),False,NULL
0,Instrument,28,getMidiChannelPolyName(),False,NULL
0,Instrument,29,getMidiChannelSolo(),False,NULL
0,Instrument,30,getMidiChannelSoloName(),False,NULL
0,Instrument,31,getMidiChannelRpn(),False,NULL
0,Instrument,32,getMidiChannelRpnName(),False,NULL
0,Instrument,33,getMidiChannelNrpn(),False,NULL
0,Instrument,34,getMidiChannelNrpnName(),False,NULL
0,Instrument,35,getMidiChannelTuning(),False,NULL
0,Instrument,36,getMidiChannelTuningName(),False,NULL
0,Instrument,37,getMidiChannelSmpteOffset(),False,NULL
0,Instrument,38,getMidiChannelSmpteOffsetName(),False,NULL
0,Instrument,39,getMidiChannelTempo(),False,NULL
0,Instrument,40,getMidiChannelTempoName(),False,NULL
0,Instrument,41,getMidiChannelTimeSignature(),False,NULL
0,Instrument,42,getMidiChannelTimeSignatureName(),False,NULL
0,Instrument,43,getMidiChannelKeySignature(),False,NULL
0,Instrument,44,getMidiChannelKeySignatureName(),False,NULL
0,Instrument,45,getMidiChannelSequencer(),False,NULL
0,Instrument,46,getMidiChannelSequencerName(),False,NULL
0,Instrument,47,getMidiChannelSequencerTickPosition(),False,NULL
0,Instrument,48,getMidiChannelSequencerTickPositionName(),False,NULL
0,Instrument,49,getMidiChannelSequencerTickPositionIncrement(),False,NULL
0,Instrument,50,getMidiChannelSequencerTickPositionIncrementName(),False,NULL
0,Instrument,51,getMidiChannelSequencerTickPositionIncrementType(),False,NULL
0,Instrument,52,getMidiChannelSequencerTickPositionIncrementTypeName(),False,NULL
0,Instrument,53,getMidiChannelSequencerTickPositionIncrementValue(),False,NULL
0,Instrument,54,getMidiChannelSequencerTickPositionIncrementValueName(),False,NULL
0,Instrument,55,getMidiChannelSequencerTickPositionIncrementValueType(),False,NULL
1,MetaMessage,1,"MetaMessage(int command, byte[] data)",False,NULL
1,MetaMessage,2,int getCommand(),False,NULL
1,MetaMessage,3,byte[] getData(),True,Obtains a copy of the data for the meta message.
1,MetaMessage,4,int getLength(),False,NULL
1,MetaMessage,5,"void setMessage(int command, byte[] data, int length)",True,Sets the message parameters for a MetaMessage.
2,MidiDevice.Info,1,MidiDevice.Info getDeviceInfo(),False,NULL
2,MidiDevice.Info,2,String getName(),True,Obtains the name of the device.
2,MidiDevice.Info,3,String getVendor(),True,Obtains the name of the company who supplies the device.
2,MidiDevice.Info,4,String getDescription(),True,Obtains the description of the device.
2,MidiDevice.Info,5,String getVersion(),True,Obtains the version of the device.
3,MidiEvent,1,"MidiEvent(MidiMessage message, long tick)",False,NULL
3,MidiEvent,2,MidiMessage getMessage(),True,Obtains the MIDI message contained in the event.
3,MidiEvent,3,long getTick(),True,"Obtains the time-stamp for the event, in MIDI ticks"
3,MidiEvent,4,void setMessage(MidiMessage message),False,NULL
3,MidiEvent,5,void setTick(long tick),True,"Sets the time-stamp for the event, in MIDI ticks"
4,MidiFileFormat,1,"MidiFileFormat(int type, int divisionType, int resolution)",False,NULL
4,MidiFileFormat,2,int getDivisionType(),False,NULL
4,MidiFileFormat,3,int getResolution(),True,Obtains the timing resolution for the MIDI file.
4,MidiFileFormat,4,int getType(),True,Obtains the MIDI file type.
4,MidiFileFormat,5,void setDivisionType(int divisionType),False,NULL
4,MidiFileFormat,6,void setResolution(int resolution),False,NULL
4,MidiFileFormat,7,void setType(int type),False,NULL
4,MidiFileFormat,8,String toString(),False,NULL
5,MidiMessage,1,MidiMessage getMessage(),False,NULL
5,MidiMessage,2,int getStatus(),True,Obtains the status byte for the MIDI message.
5,MidiMessage,3,int getLength(),True,Obtains the total length of the MIDI message in bytes.
5,MidiMessage,4,byte[] getMessage(),True,Obtains the MIDI message data.
5,MidiMessage,5,int getTick(),False,NULL
6,MidiSystem,1,MidiSystem.getMidiDeviceInfo(),False,NULL
6,MidiSystem,2,MidiSystem.getMidiDevice(),False,NULL
6,MidiSystem,3,MidiSystem.getSynthesizer(),False,NULL
6,MidiSystem,4,MidiSystem.getTransmitter(),False,NULL
6,MidiSystem,5,MidiSystem.getReceiver(),False,NULL
7,Patch,1,getPatchName(),False,NULL
7,Patch,2,getPatchBank(),False,NULL
7,Patch,3,getPatchProgram(),False,NULL
7,Patch,4,getPatchNumber(),False,NULL
7,Patch,5,getPatchClass(),False,NULL
8,Sequence,1,"Sequence getSequence(Track[] tracks, int resolution)",False,NULL
8,Sequence,2,Track[] getTracks(),True,Obtains an array containing all the tracks in this sequence.
8,Sequence,3,int getResolution(),True,Obtains the timing resolution for this sequence.
8,Sequence,4,void setResolution(int resolution),False,NULL
8,Sequence,5,void setTickLength(long tickLength),False,NULL
9,Sequencer.SyncMode,1,getMasterSyncMode(),False,NULL
9,Sequencer.SyncMode,2,getMasterSyncMode(int track),False,NULL
9,Sequencer.SyncMode,3,"getMasterSyncMode(int track, int channel)",False,NULL
9,Sequencer.SyncMode,4,"getMasterSyncMode(int track, int channel, int noteNumber)",False,NULL
9,Sequencer.SyncMode,5,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue)",False,NULL
9,Sequencer.SyncMode,6,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength)",False,NULL
9,Sequencer.SyncMode,7,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity)",False,NULL
9,Sequencer.SyncMode,8,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime)",False,NULL
9,Sequencer.SyncMode,9,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime)",False,NULL
9,Sequencer.SyncMode,10,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick)",False,NULL
9,Sequencer.SyncMode,11,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration)",False,NULL
9,Sequencer.SyncMode,12,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo)",False,NULL
9,Sequencer.SyncMode,13,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature)",False,NULL
9,Sequencer.SyncMode,14,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature, int noteKeySignature)",False,NULL
9,Sequencer.SyncMode,15,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature, int noteKeySignature, int notePitchBend)",False,NULL
9,Sequencer.SyncMode,16,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature, int noteKeySignature, int notePitchBend, int noteChannelPressure)",False,NULL
9,Sequencer.SyncMode,17,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature, int noteKeySignature, int notePitchBend, int noteChannelPressure, int notePolyPressure)",False,NULL
9,Sequencer.SyncMode,18,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature, int noteKeySignature, int notePitchBend, int noteChannelPressure, int notePolyPressure, int noteSysEx)",False,NULL
9,Sequencer.SyncMode,19,"getMasterSyncMode(int track, int channel, int noteNumber, int noteValue, int noteLength, int noteVelocity, int noteStartTime, int noteEndTime, int noteTick, int noteDuration, int noteTempo, int noteTimeSignature, int noteKeySignature, int notePitchBend, int noteChannelPressure, int notePolyPressure, int noteSysEx, int noteSysExLength)",False,NULL
10,ShortMessage,1,ShortMessage(),False,NULL
10,ShortMessage,2,"setMessage(int command, int channel, int data1, int data2)",False,NULL
10,ShortMessage,3,getCommand(),False,NULL
10,ShortMessage,4,getChannel(),False,NULL
10,ShortMessage,5,getData1(),False,NULL
10,ShortMessage,6,getData2(),False,NULL
10,ShortMessage,7,"setMessage(byte[] message, int length)",False,NULL
10,ShortMessage,8,getLength(),False,NULL
10,ShortMessage,9,getStatus(),False,NULL
10,ShortMessage,10,getData(),False,NULL
11,SoundbankResource,1,int getBankSize(),False,NULL
11,SoundbankResource,2,"Instrument getInstrument(int bank, int program)",False,NULL
11,SoundbankResource,3,"String getInstrumentName(int bank, int program)",False,NULL
11,SoundbankResource,4,"String getProgramName(int bank, int program)",False,NULL
11,SoundbankResource,5,String getBankName(int bank),False,NULL
12,SysexMessage,1,SysexMessage(byte[] data),False,NULL
12,SysexMessage,2,byte[] getData(),True,Obtains a copy of the data for the system exclusive message.
12,SysexMessage,3,int getLength(),False,NULL
12,SysexMessage,4,int getType(),False,NULL
12,SysexMessage,5,int getSequenceNumber(),False,NULL
12,SysexMessage,6,int getManufacturerId(),False,NULL
12,SysexMessage,7,int getDeviceId(),False,NULL
12,SysexMessage,8,int getCommand(),False,NULL
12,SysexMessage,9,int getChannel(),False,NULL
12,SysexMessage,10,int getData(int index),False,NULL
12,SysexMessage,11,int getDataLength(),False,NULL
12,SysexMessage,12,int getStatus(),False,NULL
12,SysexMessage,13,int getStatus(int index),False,NULL
12,SysexMessage,14,int getStatusLength(),False,NULL
12,SysexMessage,15,int getType0(),False,NULL
12,SysexMessage,16,int getType1(),False,NULL
12,SysexMessage,17,int getType2(),False,NULL
12,SysexMessage,18,int getType3(),False,NULL
12,SysexMessage,19,int getType4(),False,NULL
12,SysexMessage,20,int getType5(),False,NULL
12,SysexMessage,21,int getType6(),False,NULL
12,SysexMessage,22,int getType7(),False,NULL
12,SysexMessage,23,int getType8(),False,NULL
12,SysexMessage,24,int getType9(),False,NULL
12,SysexMessage,25,int getTypeA(),False,NULL
12,SysexMessage,26,int getTypeB(),False,NULL
12,SysexMessage,27,int getTypeC(),False,NULL
12,SysexMessage,28,int getTypeD(),False,NULL
12,SysexMessage,29,int getTypeE(),False,NULL
12,SysexMessage,30,int getTypeF(),False,NULL
13,Track,1,int getSize(),False,NULL
13,Track,2,MidiEvent get(int index),True,Obtains the event at the specified index.
13,Track,3,void add(MidiEvent event),False,NULL
13,Track,4,"void insert(MidiEvent event, int index)",False,NULL
13,Track,5,void remove(int index),False,NULL
14,VoiceStatus,1,getCurrentMicrosecondPosition(),False,NULL
14,VoiceStatus,2,getCurrentNote(),False,NULL
14,VoiceStatus,3,getCurrentNoteOnVelocity(),False,NULL
14,VoiceStatus,4,getCurrentNoteOffVelocity(),False,NULL
14,VoiceStatus,5,getCurrentController(),False,NULL
14,VoiceStatus,6,getCurrentControllerValue(),False,NULL
14,VoiceStatus,7,getCurrentPatch(),False,NULL
14,VoiceStatus,8,getCurrentPatchBank(),False,NULL
14,VoiceStatus,9,getCurrentProgram(),False,NULL
14,VoiceStatus,10,getCurrentProgramChange(),False,NULL
14,VoiceStatus,11,getCurrentSustainPedalOn(),False,NULL
14,VoiceStatus,12,getCurrentSustainPedalOff(),False,NULL
14,VoiceStatus,13,getCurrentPolyPressure(),False,NULL
14,VoiceStatus,14,getCurrentChannelPressure(),False,NULL
14,VoiceStatus,15,getCurrentPitchBend(),False,NULL
14,VoiceStatus,16,getCurrentPitchBendSensitivity(),False,NULL
14,VoiceStatus,17,getCurrentAftertouch(),False,NULL
14,VoiceStatus,18,getCurrentAftertouchSensitivity(),False,NULL
14,VoiceStatus,19,getCurrentNoteLength(),False,NULL
14,VoiceStatus,20,getCurrentNoteLengthCounter(),False,NULL
14,VoiceStatus,21,getCurrentNoteLengthCounterReset(),False,NULL
14,VoiceStatus,22,getCurrentNoteLengthCounterResetValue(),False,NULL
14,VoiceStatus,23,getCurrentNoteLengthCounterResetValue(),False,NULL
14,VoiceStatus,24,getCurrentNoteLengthCounterResetValue(),False,NULL
14,VoiceStatus,25,getCurrentNoteLengthCounterResetValue(),False,NULL
