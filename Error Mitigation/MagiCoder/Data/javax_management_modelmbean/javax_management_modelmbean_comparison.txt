Sample: 0 DescriptorSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class This class represents the metadata set for a ModelMBean element.

@@ Instruction
I want to use javax.management.modelmbean.DescriptorSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isReadOnly(String attribute)`: This method returns true if the specified attribute is read-only.

2. `boolean isWritable(String attribute)`: This method returns true if the specified attribute is writable.

3. `boolean isIs(String attribute)`: This method returns true if the specified attribute is is.

4. `boolean isIsQueryable(String attribute)`: This method returns true if the specified attribute is isQueryable.

5. `boolean isIsWritable(String attribute)`: This method returns true if the specified attribute is isWritable.

6. `boolean isIsReadOnly(String attribute)`: This method returns true if the specified attribute is isReadOnly.

7. `boolean isIsQueryable(String attribute)`: This method returns true if the specified attribute is isQueryable.

8. `boolean isIsWritable(String attribute)`: This method returns true if the specified attribute is isWritable.

9. `boolean isIsReadOnly(String attribute)`: This method returns true if the specified attribute is isReadOnly.

10. `boolean isIsQueryable(String attribute)`: This method returns true if the specified attribute is isQueryable.

11. `boolean isIsWritable(String attribute)`: This method returns true if the specified attribute is isWritable.

12. `boolean isIsReadOnly(String attribute)`: This method returns true if the specified attribute is isReadOnly.

13. `boolean isIsQueryable(String attribute)`: This method returns true if the specified attribute is isQueryable.

14. `boolean isIsWritable(String attribute)`: This method returns true if the specified attribute is isWritable.

15. `boolean isIsReadOnly(String attribute)`: This method returns true if the specified attribute is isReadOnly.
================================================================

Sample: 1 ModelMBeanAttributeInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.

@@ Instruction
I want to use javax.management.modelmbean.ModelMBeanAttributeInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public String getName()`: This method returns the name of the attribute.
2. `public String getDescription()`: This method returns the description of the attribute.
3. `public String getType()`: This method returns the type of the attribute.
4. `public boolean isReadable()`: This method returns true if the attribute is readable.
5. `public boolean isWritable()`: This method returns true if the attribute is writable.
6. `public boolean isIs()`: This method returns true if the attribute is an identifier.
7. `public String getSetMethod()`: This method returns the name of the set method for the attribute.
8. `public String getGetMethod()`: This method returns the name of the get method for the attribute.
9. `public String getAdderMethod()`: This method returns the name of the adder method for the attribute.
10. `public String getRemoverMethod()`: This method returns the name of the remover method for the attribute.
11. `public String getCyclerMethod()`: This method returns the name of the cycler method for the attribute.
12. `public String getNotifier()`: This method returns the name of the notifier for the attribute.
13. `public String getDescriptor()`: This method returns the descriptor for the attribute.
14. `public String getReferenceType()`: This method returns the reference type for the attribute.
15. `public String getDefaultValue()`: This method returns the default value for the attribute.
16. `public String getMaxValue()`: This method returns the maximum value for the attribute.
17. `public String getMinValue()`: This method returns the minimum value for the attribute.
18. `public String getTimeValue()`: This method returns the time value for the attribute.
19. `public String getUnitValue()`: This method returns the unit value for the attribute.
20. `public String getValue()`: This method returns the value for the attribute.
21. `public String getValueType()`: This method returns the value type for the attribute.
22. `public String getValueModel()`: This method returns the value model for the attribute.
23. `public String getValueConstraint()`: This method returns the value constraint for the attribute.
24. `public String getValueFormat()`: This method returns the value format for the attribute.
25. `public String getValueTranslator()`: This method returns the value translator for the attribute.
26. `public String getValueEditor()`: This method returns the value editor for the attribute.
27. `public String getValueConstraints()`: This method returns the value constraints for the attribute.
28. `public String getValueFormat()`: This method returns the value format for the attribute.
29. `public String getValueTranslator()`: This method returns the value translator for the attribute.
30. `public String getValueEditor()`: This method returns the value editor for the attribute.
31. `public String getValueConstraints()`: This method returns the value constraints for the attribute.
32. `public String getValueFormat()`: This method returns the value format for the attribute.
33. `public String getValueTranslator()`: This method returns the value translator for the attribute.
34. `public String getValueEditor()`: This method returns the value editor for the attribute.
35. `public String getValueConstraints()`: This method returns the value constraints for the attribute.
36. `public String getValueFormat()`: This method returns the value format for the attribute.
37. `public String getValueTranslator()`: This method returns the value translator for the attribute.
38. `public String getValueEditor()`: This method returns the value editor for the attribute.
39. `public String getValueConstraints()`: This method returns the value constraints for the attribute.
40. `public String getValueFormat()`: This method returns the value format for the attribute.
41. `public String getValueTranslator()`: This method returns the value translator for the attribute.
42. `public String getValueEditor()`: This method returns the value editor for the attribute.
43. `public String getValueConstraints()`: This method returns the value constraints for the attribute.
44. `public String getValueFormat()`: This method returns the value format for the attribute.
45. `public String getValueTranslator()`: This method returns the value translator for the attribute.
46. `public String getValueEditor()`: This method returns the value editor for the attribute.
47. `public String getValueConstraints()`: This method returns the value constraints for the attribute.
48. `public String getValueFormat()`: This method returns the value format for the attribute.
49. `public String getValueTranslator()`: This method returns the value translator for the attribute.
50. `public String getValueEditor()`: This method returns the value editor for the attribute.
================================================================

Sample: 2 ModelMBeanConstructorInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.

@@ Instruction
I want to use javax.management.modelmbean.ModelMBeanConstructorInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public ModelMBeanConstructorInfo(String name, String signature, String[] exceptions)`: This constructor creates a new ModelMBeanConstructorInfo object with the specified name, signature, and exceptions.

2. `public String getName()`: This method returns the name of the constructor.

3. `public String getSignature()`: This method returns the signature of the constructor.

4. `public String[] getExceptions()`: This method returns the exceptions that the constructor may throw.

5. `public boolean equals(Object obj)`: This method compares this ModelMBeanConstructorInfo object with the specified object for equality.
================================================================

Sample: 3 ModelMBeanInfoSupport
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class This class represents the meta data for ModelMBeans.

@@ Instruction
I want to use javax.management.modelmbean.ModelMBeanInfoSupport package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public ModelMBeanInfoSupport()`: This is the constructor of the class.

2. `public ModelMBeanInfoSupport(String name, String description)`: This constructor initializes the name and description of the ModelMBean.

3. `public void setObjectName(ObjectName name)`: This method sets the ObjectName of the ModelMBean.

4. `public ObjectName getObjectName()`: This method returns the ObjectName of the ModelMBean.

5. `public void setDescription(String description)`: This method sets the description of the ModelMBean.

6. `public String getDescription()`: This method returns the description of the ModelMBean.

7. `public void setModelMBean(ModelMBean modelMBean)`: This method sets the ModelMBean.

8. `public ModelMBean getModelMBean()`: This method returns the ModelMBean.

9. `public void setMBeanParameters(MBeanParameterInfo[] params)`: This method sets the parameters of the ModelMBean.

10. `public MBeanParameterInfo[] getMBeanParameters()`: This method returns the parameters of the ModelMBean.

11. `public void setMBeanConstructors(MBeanConstructorInfo[] constructors)`: This method sets the constructors of the ModelMBean.

12. `public MBeanConstructorInfo[] getMBeanConstructors()`: This method returns the constructors of the ModelMBean.

13. `public void setMBeanOperations(MBeanOperationInfo[] operations)`: This method sets the operations of the ModelMBean.

14. `public MBeanOperationInfo[] getMBeanOperations()`: This method returns the operations of the ModelMBean.

15. `public void setMBeanAttributes(MBeanAttributeInfo[] attributes)`: This method sets the attributes of the ModelMBean.

16. `public MBeanAttributeInfo[] getMBeanAttributes()`: This method returns the attributes of the ModelMBean.

17. `public void setNotifications(MBeanNotificationInfo[] notifications)`: This method sets the notifications of the ModelMBean.

18. `public MBeanNotificationInfo[] getNotifications()`: This method returns the notifications of the ModelMBean.

19. `public void setDefaultValues(Map<String, Object> defaultValues)`: This method sets the default values of the ModelMBean.

20. `public Map<String, Object> getDefaultValues()`: This method returns the default values of the ModelMBean.

21. `public void setDefaultValue(String attribute, Object value)`: This method sets the default value of the specified attribute.

22. `public Object getDefaultValue(String attribute)`: This method returns the default value of the specified attribute.

23. `public void setDefaultValue(String attribute, Object value)`: This method sets the default value of the specified attribute.

24. `public Object getDefaultValue(String attribute)`: This method returns the default value of the specified attribute.

25. `public void setDefaultValue(String attribute, Object value)`: This method sets the default value of the specified attribute.

26. `public Object getDefaultValue(String attribute)`: This method returns the default value of the specified attribute.
================================================================

Sample: 4 ModelMBeanNotificationInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean.

@@ Instruction
I want to use javax.management.modelmbean.ModelMBeanNotificationInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public ModelMBeanNotificationInfo(String notificationType, String description, String[] interest, String mbeanName)`: This constructor creates a new ModelMBeanNotificationInfo object with the specified notification type, description, interest, and mbean name.

2. `public String getNotificationType()`: This method returns the notification type of this ModelMBeanNotificationInfo object.

3. `public String getDescription()`: This method returns the description of this ModelMBeanNotificationInfo object.

4. `public String[] getInterest()`: This method returns the interest of this ModelMBeanNotificationInfo object.

5. `public String getMBeanName()`: This method returns the MBean name of this ModelMBeanNotificationInfo object.
================================================================

Sample: 5 ModelMBeanOperationInfo
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class The ModelMBeanOperationInfo object describes a management operation of the ModelMBean.

@@ Instruction
I want to use javax.management.modelmbean.ModelMBeanOperationInfo package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public String getDescription()`: This method returns a description of the operation.
2. `public String getName()`: This method returns the name of the operation.
3. `public String[] getSignature()`: This method returns the signature of the operation.
4. `public String[] getReturnTypes()`: This method returns the return types of the operation.
5. `public String[] getParameterTypes()`: This method returns the parameter types of the operation.
================================================================

Sample: 6 RequiredModelMBean
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the definition of the ModelMBean classes.
Here is the description of the class This class is the implementation of a ModelMBean.

@@ Instruction
I want to use javax.management.modelmbean.RequiredModelMBean package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isModelMBean()`: This method returns true if this is a ModelMBean.
2. `ObjectName getObjectName()`: This method returns the ObjectName of this MBean.
3. `MBeanInfo getMBeanInfo()`: This method returns the MBeanInfo for this MBean.
4. `void setAttribute(Attribute attribute)`: This method sets the value of the specified attribute.
5. `Object getAttribute(String attribute)`: This method returns the value of the specified attribute.

Note: The above methods are not inherent from its parent class.
================================================================

