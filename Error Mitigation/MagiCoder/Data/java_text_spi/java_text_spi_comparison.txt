Sample: 0 BreakIteratorProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Service provider classes for the classes in the java.text package.
Here is the description of the class An abstract class for service providers that provide concrete implementations of the BreakIterator class.

@@ Instruction
I want to use java.text.spi.BreakIteratorProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public boolean isLegalBreak(int position)`: This method returns true if the specified position is a legal break position.

2. `public int following(int position)`: This method returns the offset of the first character following the specified position.

3. `public int preceding(int position)`: This method returns the offset of the first character preceding the specified position.

4. `public int first()`: This method returns the offset of the first character.

5. `public int last()`: This method returns the offset of the last character.

6. `public int next(int position)`: This method returns the offset of the first character following the specified position.

7. `public int previous(int position)`: This method returns the offset of the first character preceding the specified position.

8. `public int following(int position, int limit)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

9. `public int preceding(int position, int limit)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

10. `public int next(int position, int limit)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

11. `public int previous(int position, int limit)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

12. `public int following(int position, int limit, int[] offsets)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

13. `public int preceding(int position, int limit, int[] offsets)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

14. `public int next(int position, int limit, int[] offsets)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

15. `public int previous(int position, int limit, int[] offsets)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

16. `public int following(int position, int limit, int[] offsets, int[] offsetLimit)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

17. `public int preceding(int position, int limit, int[] offsets, int[] offsetLimit)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

18. `public int next(int position, int limit, int[] offsets, int[] offsetLimit)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

19. `public int previous(int position, int limit, int[] offsets, int[] offsetLimit)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

20. `public int following(int position, int limit, int[] offsets, int[] offsetLimit, int[] offsetsLimit)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

21. `public int preceding(int position, int limit, int[] offsets, int[] offsetLimit, int[] offsetsLimit)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.

22. `public int next(int position, int limit, int[] offsets, int[] offsetLimit, int[] offsetsLimit)`: This method returns the offset of the first character following the specified position, or limit if there is no such character.

23. `public int previous(int position, int limit, int[] offsets, int[] offsetLimit, int[] offsetsLimit)`: This method returns the offset of the first character preceding the specified position, or limit if there is no such character.
================================================================

Sample: 1 CollatorProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Service provider classes for the classes in the java.text package.
Here is the description of the class An abstract class for service providers that provide concrete implementations of the Collator class.

@@ Instruction
I want to use java.text.spi.CollatorProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int compare(String source, String target)`: This method compares two strings lexicographically.

2. `public String toLowerCase(String source)`: This method converts the specified string to lower case.

3. `public String toUpperCase(String source)`: This method converts the specified string to upper case.

4. `public String max(String source, String target)`: This method returns the maximum of two strings lexicographically.

5. `public String min(String source, String target)`: This method returns the minimum of two strings lexicographically.
================================================================

Sample: 2 DateFormatProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Service provider classes for the classes in the java.text package.
Here is the description of the class An abstract class for service providers that provide concrete implementations of the DateFormat class.

@@ Instruction
I want to use java.text.spi.DateFormatProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public abstract DateFormat getInstance()`: This method returns a DateFormat instance.

2. `public abstract DateFormat getInstance(Locale inLocale)`: This method returns a DateFormat instance using the specified locale.

3. `public abstract DateFormat getInstance(String pattern)`: This method returns a DateFormat instance using the specified pattern.

4. `public abstract DateFormat getInstance(String pattern, Locale inLocale)`: This method returns a DateFormat instance using the specified pattern and locale.

5. `public abstract DateFormat getInstance(DateFormatSymbols inSymbols)`: This method returns a DateFormat instance using the specified DateFormatSymbols.
================================================================

Sample: 3 DateFormatSymbolsProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Service provider classes for the classes in the java.text package.
Here is the description of the class An abstract class for service providers that provide instances of the DateFormatSymbols class.

@@ Instruction
I want to use java.text.spi.DateFormatSymbolsProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getAvailableLocales()`: This method returns an array of all the locales for which this provider can supply date-time format symbols.

2. `getInstance(Locale locale)`: This method returns a DateFormatSymbols instance for the specified locale.

3. `getMonths()`: This method returns an array of strings representing the names of the months in the current locale.

4. `getShortMonths()`: This method returns an array of strings representing the abbreviated names of the months in the current locale.

5. `getShortWeekdays()`: This method returns an array of strings representing the abbreviated names of the weekdays in the current locale.
================================================================

Sample: 4 DecimalFormatSymbolsProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Service provider classes for the classes in the java.text package.
Here is the description of the class An abstract class for service providers that provide instances of the DecimalFormatSymbols class.

@@ Instruction
I want to use java.text.spi.DecimalFormatSymbolsProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DecimalFormatSymbols getInstance()`: This method returns a DecimalFormatSymbols instance.

2. `DecimalFormatSymbols getInstance(Locale locale)`: This method returns a DecimalFormatSymbols instance for the specified locale.

3. `DecimalFormatSymbols getInstance(Locale locale, String defaults)`: This method returns a DecimalFormatSymbols instance for the specified locale and defaults.

4. `DecimalFormatSymbols getInstance(Locale locale, String defaults, String symbols)`: This method returns a DecimalFormatSymbols instance for the specified locale, defaults, and symbols.

5. `DecimalFormatSymbols getInstance(Locale locale, String defaults, String symbols, String currency)`: This method returns a DecimalFormatSymbols instance for the specified locale, defaults, symbols, and currency.
================================================================

Sample: 5 NumberFormatProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Service provider classes for the classes in the java.text package.
Here is the description of the class An abstract class for service providers that provide concrete implementations of the NumberFormat class.

@@ Instruction
I want to use java.text.spi.NumberFormatProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `NumberFormat getCurrencyInstance()`: This method returns a NumberFormat instance that formats numbers as currency.

2. `NumberFormat getIntegerInstance()`: This method returns a NumberFormat instance that formats numbers as integers.

3. `NumberFormat getInstance()`: This method returns a NumberFormat instance that formats numbers in the default locale's format.

4. `NumberFormat getInstance(Locale locale)`: This method returns a NumberFormat instance that formats numbers in the specified locale's format.

5. `NumberFormat getPercentInstance()`: This method returns a NumberFormat instance that formats numbers as percentages.
================================================================

