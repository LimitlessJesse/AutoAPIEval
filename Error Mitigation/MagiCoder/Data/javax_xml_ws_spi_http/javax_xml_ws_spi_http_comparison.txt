Sample: 0 HttpContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides HTTP SPI that is used for portable deployment of JAX-WS web services in containers(for e.g.
Here is the description of the class HttpContext represents a mapping between the root URI path of a web service to a HttpHandler which is invoked to handle requests destined for that path on the associated container.

@@ Instruction
I want to use javax.xml.ws.spi.http.HttpContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `HttpContext getContext(String path)`: This method returns the HttpContext associated with the given path.

2. `void setContext(String path, HttpContext context)`: This method associates the given HttpContext with the given path.

3. `void removeContext(String path)`: This method removes the HttpContext associated with the given path.

4. `Set<String> getPaths()`: This method returns a set view of the paths contained in this map.

5. `HttpContext getDefaultContext()`: This method returns the default HttpContext.
================================================================

Sample: 1 HttpExchange
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides HTTP SPI that is used for portable deployment of JAX-WS web services in containers(for e.g.
Here is the description of the class This class encapsulates a HTTP request received and a response to be generated in one exchange.

@@ Instruction
I want to use javax.xml.ws.spi.http.HttpExchange package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `HttpExchange getRequestMethod()`: This method returns the HTTP method of the request.
2. `URI getRequestURI()`: This method returns the URI of the request.
3. `String getRequestHeader(String name)`: This method returns the value of the specified HTTP request header.
4. `void sendResponseHeaders(int rc, long length)`: This method sends the HTTP response headers.
5. `OutputStream getResponseBody()`: This method returns the output stream for the HTTP response body.

Note: The methods in the list are not inherent from its parent class.
================================================================

Sample: 2 HttpHandler
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides HTTP SPI that is used for portable deployment of JAX-WS web services in containers(for e.g.
Here is the description of the class A handler which is invoked to process HTTP requests.

@@ Instruction
I want to use javax.xml.ws.spi.http.HttpHandler package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

