Sample: 0 AbstractTableModel
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class This abstract class provides default implementations for most of the methods in the TableModel interface.

@@ Instruction
I want to use javax.swing.table.AbstractTableModel package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isCellEditable(int row, int column)`: This method returns true if the cell at the specified row and column is editable.

2. `Object getValueAt(int rowIndex, int columnIndex)`: This method returns the value for the cell at columnIndex and rowIndex.

3. `void setValueAt(Object aValue, int rowIndex, int columnIndex)`: This method sets the value of the cell at columnIndex and rowIndex to aValue.

4. `int getColumnCount()`: This method returns the number of columns in the model.

5. `int getRowCount()`: This method returns the number of rows in the model.

6. `Class getColumnClass(int columnIndex)`: This method returns the Class of the values in the column specified by columnIndex.

7. `String getColumnName(int columnIndex)`: This method returns the name of the column specified by columnIndex.

8. `void fireTableDataChanged()`: This method notifies all registered TableModelListeners that all cells have changed.

9. `void fireTableCellUpdated(int row, int column)`: This method notifies all registered TableModelListeners that a cell has changed.

10. `void addTableModelListener(TableModelListener l)`: This method adds a TableModelListener to the list that is notified each time a change to the data model occurs.

11. `void removeTableModelListener(TableModelListener l)`: This method removes a TableModelListener from the list that is notified each time a change to the data model occurs.
================================================================

Sample: 1 DefaultTableCellRenderer
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class The standard class for rendering (displaying) individual cells in a JTable.

@@ Instruction
I want to use javax.swing.table.DefaultTableCellRenderer package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `setHorizontalAlignment(int alignment)`: This method sets the horizontal alignment of the text in the cell.

2. `setVerticalAlignment(int alignment)`: This method sets the vertical alignment of the text in the cell.

3. `setBackground(Color c)`: This method sets the background color of the cell.

4. `setForeground(Color c)`: This method sets the foreground color of the cell.

5. `setBorder(Border border)`: This method sets the border of the cell.
================================================================

Sample: 2 DefaultTableCellRenderer.UIResource
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class A subclass of DefaultTableCellRenderer that implements UIResource.

@@ Instruction
I want to use javax.swing.table.DefaultTableCellRenderer.UIResource package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void setHorizontalAlignment(int alignment)`: This method sets the horizontal alignment of the text in the cell.

2. `void setVerticalAlignment(int alignment)`: This method sets the vertical alignment of the text in the cell.

3. `void setBackground(Color c)`: This method sets the background color of the cell.

4. `void setForeground(Color c)`: This method sets the foreground color of the cell.

5. `void setBorder(Border border)`: This method sets the border of the cell.
================================================================

Sample: 3 DefaultTableColumnModel
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class The standard column-handler for a JTable.

@@ Instruction
I want to use javax.swing.table.DefaultTableColumnModel package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DefaultTableColumnModel()`: This is the constructor of the DefaultTableColumnModel class.

2. `addColumn(TableColumn column)`: This method adds the specified column to the model.

3. `getColumn(int modelIndex)`: This method returns the column at the specified model index.

4. `getColumnCount()`: This method returns the number of columns in the model.

5. `getColumnIndex(TableColumn column)`: This method returns the index of the specified column in the model.
================================================================

Sample: 4 DefaultTableModel
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class This is an implementation of TableModel that uses a Vector of Vectors to store the cell value objects.

@@ Instruction
I want to use javax.swing.table.DefaultTableModel package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void addColumn(Object column)`: This method adds a new column to the table.
3. `void addRow(Object row)`: This method adds a new row to the table.
4. `void clear()`: This method removes all of the elements from this list.
5. `Object clone()`: This method returns a shallow copy of this AbstractList instance.
6. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
7. `Object get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `Object remove(int index)`: This method removes the element at the specified position in this list.
10. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
11. `Object set(int index, Object element)`: This method replaces the element at the specified position in this list with the specified element.
12. `int size()`: This method returns the number of elements in this list.
13. `List subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
14. `Object[] toArray()`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element).
15. `Object[] toArray(Object[] a)`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
16. `boolean addAll(Collection c)`: This method adds all of the elements in the specified collection to this list, in the order that they are returned by the specified collection's iterator.
17. `boolean addAll(int index, Collection c)`: This method inserts all of the elements in the specified collection into this list at the specified position.
18. `void clear()`: This method removes all of the elements from this list.
19. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
20. `boolean containsAll(Collection c)`: This method returns true if this list contains all of the elements of the specified collection.
21. `Object get(int index)`: This method returns the element at the specified position in this list.
22. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
23. `boolean isEmpty()`: This method returns true if this list contains no elements.
24. `Iterator iterator()`: This method returns an iterator over the elements in this list in proper sequence.
25. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
26. `ListIterator listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
27. `ListIterator listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
28. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
29. `Object remove(int index)`: This method removes the element at the specified position in this list.
30. `boolean removeAll(Collection c)`: This method removes from this list all of its elements that are contained in the specified collection.
31. `boolean retainAll(Collection c)`: This method retains only the elements in this list that are contained in the specified collection.
32. `Object set(int index, Object element)`: This method replaces the element at the specified position in this list with the specified element.
33. `int size()`: This method returns the number of elements in this list.
34. `List subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
35. `Object[] toArray()`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element).
36. `Object[] toArray(Object[] a)`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
================================================================

Sample: 5 JTableHeader
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class This is the object which manages the header of the JTable.

@@ Instruction
I want to use javax.swing.table.JTableHeader package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void setReorderingAllowed(boolean reorderingAllowed)`: This method sets whether the header can be reordered.

2. `public boolean isReorderingAllowed()`: This method returns whether the header can be reordered.

3. `public void setResizingAllowed(boolean resizingAllowed)`: This method sets whether the header can be resized.

4. `public boolean isResizingAllowed()`: This method returns whether the header can be resized.

5. `public void setSortKeys(List<? extends SortKey> sortKeys)`: This method sets the sort keys for the header.
================================================================

Sample: 6 TableColumn
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class A TableColumn represents all the attributes of a column in a JTable, such as width, resizability, minimum and maximum width.

@@ Instruction
I want to use javax.swing.table.TableColumn package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `setModel(TableColumnModel model)`: This method sets the TableColumnModel for this TableColumn.
2. `setHeaderRenderer(TableCellRenderer renderer)`: This method sets the TableCellRenderer for the header of this column.
3. `setHeaderValue(Object value)`: This method sets the value to be displayed in the header of this column.
4. `setPreferredWidth(int width)`: This method sets the preferred width of this column.
5. `setWidth(int width)`: This method sets the width of this column.
================================================================

Sample: 7 TableRowSorter
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class An implementation of RowSorter that provides sorting and filtering using a TableModel.

@@ Instruction
I want to use javax.swing.table.TableRowSorter package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `TableRowSorter()`: This is the constructor of the TableRowSorter class.

2. `void setModel(TableModel newModel)`: This method sets the TableModel for this TableRowSorter.

3. `TableModel getModel()`: This method returns the TableModel for this TableRowSorter.

4. `void setRowFilter(RowFilter<? super Integer,?> filter)`: This method sets the RowFilter for this TableRowSorter.

5. `RowFilter<? super Integer,?> getRowFilter()`: This method returns the RowFilter for this TableRowSorter.
================================================================

Sample: 8 TableStringConverter
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for dealing withjavax.swing.JTable.
Here is the description of the class TableStringConverter is used to convert objects from the model into strings.

@@ Instruction
I want to use javax.swing.table.TableStringConverter package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean convertCellToViewValue(Object value, JLabel label, int row, int column)`: This method converts the value in the model to a value to be displayed in the view.

2. `Object convertViewToModelValue(JLabel label, int row, int column)`: This method converts the value displayed in the view to a value to be stored in the model.

3. `boolean isCellEditable(int row, int column)`: This method returns true if the cell is editable, false otherwise.

4. `boolean isCellRenderer(JLabel label, int row, int column)`: This method returns true if the cell is rendered, false otherwise.

5. `void setValueAt(Object value, int row, int column)`: This method sets the value at the specified row and column in the model to the specified value.
================================================================

