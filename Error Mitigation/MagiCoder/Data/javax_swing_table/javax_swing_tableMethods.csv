ClassName,Method,Return Type,Description
AbstractTableModel,addTableModelListener(TableModelListener l),void,Adds a listener to the list that's notified each time a change to the data model occurs.
AbstractTableModel,findColumn(String columnName),int,Returns a column given its name.
AbstractTableModel,"fireTableCellUpdated(int row, int column)",void,"Notifies all listeners that the value of the cell at [row, column] has been updated."
AbstractTableModel,fireTableChanged(TableModelEvent e),void,Forwards the given notification event to all TableModelListeners that registered themselves as listeners for this table model.
AbstractTableModel,fireTableDataChanged(),void,Notifies all listeners that all cell values in the table's rows may have changed.
AbstractTableModel,"fireTableRowsDeleted(int firstRow, int lastRow)",void,"Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been deleted."
AbstractTableModel,"fireTableRowsInserted(int firstRow, int lastRow)",void,"Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been inserted."
AbstractTableModel,"fireTableRowsUpdated(int firstRow, int lastRow)",void,"Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been updated."
AbstractTableModel,fireTableStructureChanged(),void,Notifies all listeners that the table's structure has changed.
AbstractTableModel,getColumnClass(int columnIndex),Class<?>,Returns Object.class regardless of columnIndex.
AbstractTableModel,getColumnName(int column),String,"Returns a default name for the column using spreadsheet conventions: A, B, C, ..."
AbstractTableModel,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this AbstractTableModel.
AbstractTableModel,getTableModelListeners(),TableModelListener[],Returns an array of all the table model listeners registered on this model.
AbstractTableModel,"isCellEditable(int rowIndex, int columnIndex)",boolean,Returns false.
AbstractTableModel,removeTableModelListener(TableModelListener l),void,Removes a listener from the list that's notified each time a change to the data model occurs.
AbstractTableModel,"setValueAt(Object aValue, int rowIndex, int columnIndex)",void,This empty implementation is provided so users don't have to implement this method if their data model is not editable.
DefaultTableCellRenderer,"firePropertyChange(String propertyName, boolean oldValue, boolean newValue)",void,Overridden for performance reasons.
DefaultTableCellRenderer,"firePropertyChange(String propertyName, Object oldValue, Object newValue)",protected void,Overridden for performance reasons.
DefaultTableCellRenderer,"getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)",Component,Returns the default table cell renderer.
DefaultTableCellRenderer,invalidate(),void,Overridden for performance reasons.
DefaultTableCellRenderer,isOpaque(),boolean,Overridden for performance reasons.
DefaultTableCellRenderer,repaint(),void,Overridden for performance reasons.
DefaultTableCellRenderer,"repaint(long tm, int x, int y, int width, int height)",void,Overridden for performance reasons.
DefaultTableCellRenderer,repaint(Rectangle r),void,Overridden for performance reasons.
DefaultTableCellRenderer,revalidate(),void,Overridden for performance reasons.
DefaultTableCellRenderer,setBackground(Color c),void,Overrides JComponent.setBackground to assign the unselected-background color to the specified color.
DefaultTableCellRenderer,setForeground(Color c),void,Overrides JComponent.setForeground to assign the unselected-foreground color to the specified color.
DefaultTableCellRenderer,setValue(Object value),protected void,Sets the String object for the cell being rendered to value.
DefaultTableCellRenderer,updateUI(),void,Notification from the UIManager that the look and feel [L&F] has changed.
DefaultTableCellRenderer,validate(),void,Overridden for performance reasons.
DefaultTableColumnModel,addColumn(TableColumn aColumn),void,Appends aColumn to the end of the tableColumns array.
DefaultTableColumnModel,addColumnModelListener(TableColumnModelListener x),void,Adds a listener for table column model events.
DefaultTableColumnModel,createSelectionModel(),protected ListSelectionModel,Creates a new default list selection model.
DefaultTableColumnModel,fireColumnAdded(TableColumnModelEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
DefaultTableColumnModel,fireColumnMarginChanged(),protected void,Notifies all listeners that have registered interest for notification on this event type.
DefaultTableColumnModel,fireColumnMoved(TableColumnModelEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
DefaultTableColumnModel,fireColumnRemoved(TableColumnModelEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
DefaultTableColumnModel,fireColumnSelectionChanged(ListSelectionEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
DefaultTableColumnModel,getColumn(int columnIndex),TableColumn,Returns the TableColumn object for the column at columnIndex.
DefaultTableColumnModel,getColumnCount(),int,Returns the number of columns in the tableColumns array.
DefaultTableColumnModel,getColumnIndex(Object identifier),int,"Returns the index of the first column in the tableColumns array whose identifier is equal to identifier, when compared using equals."
DefaultTableColumnModel,getColumnIndexAtX(int x),int,"Returns the index of the column that lies at position x, or -1 if no column covers this point."
DefaultTableColumnModel,getColumnMargin(),int,Returns the width margin for TableColumn.
DefaultTableColumnModel,getColumnModelListeners(),TableColumnModelListener[],Returns an array of all the column model listeners registered on this model.
DefaultTableColumnModel,getColumns(),Enumeration<TableColumn>,Returns an Enumeration of all the columns in the model.
DefaultTableColumnModel,getColumnSelectionAllowed(),boolean,"Returns true if column selection is allowed, otherwise false."
DefaultTableColumnModel,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this model.
DefaultTableColumnModel,getSelectedColumnCount(),int,Returns the number of columns selected.
DefaultTableColumnModel,getSelectedColumns(),int[],Returns an array of selected columns.
DefaultTableColumnModel,getSelectionModel(),ListSelectionModel,Returns the ListSelectionModel that is used to maintain column selection state.
DefaultTableColumnModel,getTotalColumnWidth(),int,Returns the total combined width of all columns.
DefaultTableColumnModel,"moveColumn(int columnIndex, int newIndex)",void,Moves the column and heading at columnIndex to newIndex.
DefaultTableColumnModel,propertyChange(PropertyChangeEvent evt),void,Property Change Listener change method.
DefaultTableColumnModel,recalcWidthCache(),protected void,Recalculates the total combined width of all columns.
DefaultTableColumnModel,removeColumn(TableColumn column),void,Deletes the column from the tableColumns array.
DefaultTableColumnModel,removeColumnModelListener(TableColumnModelListener x),void,Removes a listener for table column model events.
DefaultTableColumnModel,setColumnMargin(int newMargin),void,Sets the column margin to newMargin.
DefaultTableColumnModel,setColumnSelectionAllowed(boolean flag),void,Sets whether column selection is allowed.
DefaultTableColumnModel,setSelectionModel(ListSelectionModel newModel),void,Sets the selection model for this TableColumnModel to newModel and registers for listener notifications from the new selection model.
DefaultTableColumnModel,valueChanged(ListSelectionEvent e),void,A ListSelectionListener that forwards ListSelectionEvents when there is a column selection change.
DefaultTableModel,addColumn(Object columnName),void,Adds a column to the model.
DefaultTableModel,"addColumn(Object columnName, Object[] columnData)",void,Adds a column to the model.
DefaultTableModel,"addColumn(Object columnName, Vector columnData)",void,Adds a column to the model.
DefaultTableModel,addRow(Object[] rowData),void,Adds a row to the end of the model.
DefaultTableModel,addRow(Vector rowData),void,Adds a row to the end of the model.
DefaultTableModel,convertToVector(Object[] anArray),protected static Vector,Returns a vector that contains the same objects as the array.
DefaultTableModel,convertToVector(Object[][] anArray),protected static Vector,Returns a vector of vectors that contains the same objects as the array.
DefaultTableModel,getColumnCount(),int,Returns the number of columns in this data table.
DefaultTableModel,getColumnName(int column),String,Returns the column name.
DefaultTableModel,getDataVector(),Vector,Returns the Vector of Vectors that contains the table's data values.
DefaultTableModel,getRowCount(),int,Returns the number of rows in this data table.
DefaultTableModel,"getValueAt(int row, int column)",Object,Returns an attribute value for the cell at row and column.
DefaultTableModel,"insertRow(int row, Object[] rowData)",void,Inserts a row at row in the model.
DefaultTableModel,"insertRow(int row, Vector rowData)",void,Inserts a row at row in the model.
DefaultTableModel,"isCellEditable(int row, int column)",boolean,Returns true regardless of parameter values.
DefaultTableModel,"moveRow(int start, int end, int to)",void,Moves one or more rows from the inclusive range start to end to the to position in the model.
DefaultTableModel,newDataAvailable(TableModelEvent event),void,Equivalent to fireTableChanged.
DefaultTableModel,newRowsAdded(TableModelEvent e),void,Ensures that the new rows have the correct number of columns.
DefaultTableModel,removeRow(int row),void,Removes the row at row from the model.
DefaultTableModel,rowsRemoved(TableModelEvent event),void,Equivalent to fireTableChanged.
DefaultTableModel,setColumnCount(int columnCount),void,Sets the number of columns in the model.
DefaultTableModel,setColumnIdentifiers(Object[] newIdentifiers),void,Replaces the column identifiers in the model.
DefaultTableModel,setColumnIdentifiers(Vector columnIdentifiers),void,Replaces the column identifiers in the model.
DefaultTableModel,"setDataVector(Object[][] dataVector, Object[] columnIdentifiers)",void,Replaces the value in the dataVector instance variable with the values in the array dataVector.
DefaultTableModel,"setDataVector(Vector dataVector, Vector columnIdentifiers)",void,"Replaces the current dataVector instance variable with the new Vector of rows, dataVector."
DefaultTableModel,setNumRows(int rowCount),void,Obsolete as of Java 2 platform v1.3.
DefaultTableModel,setRowCount(int rowCount),void,Sets the number of rows in the model.
DefaultTableModel,"setValueAt(Object aValue, int row, int column)",void,Sets the object value for the cell at column and row.
JTableHeader,columnAdded(TableColumnModelEvent e),void,Invoked when a column is added to the table column model.
JTableHeader,columnAtPoint(Point point),int,"Returns the index of the column that point lies in, or -1 if it lies out of bounds."
JTableHeader,columnMarginChanged(ChangeEvent e),void,Invoked when a column is moved due to a margin change.
JTableHeader,columnMoved(TableColumnModelEvent e),void,Invoked when a column is repositioned.
JTableHeader,columnRemoved(TableColumnModelEvent e),void,Invoked when a column is removed from the table column model.
JTableHeader,columnSelectionChanged(ListSelectionEvent e),void,Invoked when the selection model of the TableColumnModel is changed.
JTableHeader,createDefaultColumnModel(),protected TableColumnModel,Returns the default column model object which is a DefaultTableColumnModel.
JTableHeader,createDefaultRenderer(),protected TableCellRenderer,Returns a default renderer to be used when no header renderer is defined by a TableColumn.
JTableHeader,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this JTableHeader.
JTableHeader,getColumnModel(),TableColumnModel,Returns the TableColumnModel that contains all column information of this table header.
JTableHeader,getDefaultRenderer(),TableCellRenderer,Returns the default renderer used when no headerRenderer is defined by a TableColumn.
JTableHeader,getDraggedColumn(),TableColumn,"Returns the the dragged column, if and only if, a drag is in process, otherwise returns null."
JTableHeader,getDraggedDistance(),int,"Returns the column's horizontal distance from its original position, if and only if, a drag is in process."
JTableHeader,getHeaderRect(int column),Rectangle,Returns the rectangle containing the header tile at column.
JTableHeader,getReorderingAllowed(),boolean,"Returns true if the user is allowed to rearrange columns by dragging their headers, false otherwise."
JTableHeader,getResizingAllowed(),boolean,"Returns true if the user is allowed to resize columns by dragging between their headers, false otherwise."
JTableHeader,getResizingColumn(),TableColumn,Returns the resizing column.
JTableHeader,getTable(),JTable,Returns the table associated with this header.
JTableHeader,getToolTipText(MouseEvent event),String,Allows the renderer's tips to be used if there is text set.
JTableHeader,getUI(),TableHeaderUI,Returns the look and feel (L&F) object that renders this component.
JTableHeader,getUIClassID(),String,Returns the suffix used to construct the name of the look and feel (L&F) class used to render this component.
JTableHeader,getUpdateTableInRealTime(),boolean,Obsolete as of Java 2 platform v1.3.
JTableHeader,initializeLocalVars(),protected void,Initializes the local variables and properties with default values.
JTableHeader,paramString(),protected String,Returns a string representation of this JTableHeader.
JTableHeader,resizeAndRepaint(),void,Sizes the header and marks it as needing display.
JTableHeader,setColumnModel(TableColumnModel columnModel),void,Sets the column model for this table to newModel and registers for listener notifications from the new column model.
JTableHeader,setDefaultRenderer(TableCellRenderer defaultRenderer),void,Sets the default renderer to be used when no headerRenderer is defined by a TableColumn.
JTableHeader,setDraggedColumn(TableColumn aColumn),void,Sets the header's draggedColumn to aColumn.
JTableHeader,setDraggedDistance(int distance),void,Sets the header's draggedDistance to distance.
JTableHeader,setReorderingAllowed(boolean reorderingAllowed),void,Sets whether the user can drag column headers to reorder columns.
JTableHeader,setResizingAllowed(boolean resizingAllowed),void,Sets whether the user can resize columns by dragging between headers.
JTableHeader,setResizingColumn(TableColumn aColumn),void,Sets the header's resizingColumn to aColumn.
JTableHeader,setTable(JTable table),void,Sets the table associated with this header.
JTableHeader,setUI(TableHeaderUI ui),void,Sets the look and feel (L&F) object that renders this component.
JTableHeader,setUpdateTableInRealTime(boolean flag),void,Obsolete as of Java 2 platform v1.3.
JTableHeader,updateUI(),void,Notification from the UIManager that the look and feel (L&F) has changed.
TableColumn,addPropertyChangeListener(PropertyChangeListener listener),void,Adds a PropertyChangeListener to the listener list.
TableColumn,createDefaultHeaderRenderer(),protected TableCellRenderer,"As of Java 2 platform v1.3, this method is not called by the TableColumn constructor."
TableColumn,disableResizedPosting(),void,Deprecated. as of Java 2 platform v1.3
TableColumn,enableResizedPosting(),void,Deprecated. as of Java 2 platform v1.3
TableColumn,getCellEditor(),TableCellEditor,Returns the TableCellEditor used by the JTable to edit values for this column.
TableColumn,getCellRenderer(),TableCellRenderer,Returns the TableCellRenderer used by the JTable to draw values for this column.
TableColumn,getHeaderRenderer(),TableCellRenderer,Returns the TableCellRenderer used to draw the header of the TableColumn.
TableColumn,getHeaderValue(),Object,Returns the Object used as the value for the header renderer.
TableColumn,getIdentifier(),Object,Returns the identifier object for this column.
TableColumn,getMaxWidth(),int,Returns the maximum width for the TableColumn.
TableColumn,getMinWidth(),int,Returns the minimum width for the TableColumn.
TableColumn,getModelIndex(),int,Returns the model index for this column.
TableColumn,getPreferredWidth(),int,Returns the preferred width of the TableColumn.
TableColumn,getPropertyChangeListeners(),PropertyChangeListener[],Returns an array of all the PropertyChangeListeners added to this TableColumn with addPropertyChangeListener().
TableColumn,getResizable(),boolean,"Returns true if the user is allowed to resize the TableColumn's width, false otherwise."
TableColumn,getWidth(),int,Returns the width of the TableColumn.
TableColumn,removePropertyChangeListener(PropertyChangeListener listener),void,Removes a PropertyChangeListener from the listener list.
TableColumn,setCellEditor(TableCellEditor cellEditor),void,Sets the editor to used by when a cell in this column is edited.
TableColumn,setCellRenderer(TableCellRenderer cellRenderer),void,Sets the TableCellRenderer used by JTable to draw individual values for this column.
TableColumn,setHeaderRenderer(TableCellRenderer headerRenderer),void,Sets the TableCellRenderer used to draw the TableColumn's header to headerRenderer.
TableColumn,setHeaderValue(Object headerValue),void,Sets the Object whose string representation will be used as the value for the headerRenderer.
TableColumn,setIdentifier(Object identifier),void,Sets the TableColumn's identifier to anIdentifier.
TableColumn,setMaxWidth(int maxWidth),void,"Sets the TableColumn's maximum width to maxWidth or, if maxWidth is less than the minimum width, to the minimum width."
TableColumn,setMinWidth(int minWidth),void,"Sets the TableColumn's minimum width to minWidth, adjusting the new minimum width if necessary to ensure that 0 <= minWidth <= maxWidth."
TableColumn,setModelIndex(int modelIndex),void,Sets the model index for this column.
TableColumn,setPreferredWidth(int preferredWidth),void,Sets this column's preferred width to preferredWidth.
TableColumn,setResizable(boolean isResizable),void,Sets whether this column can be resized.
TableColumn,setWidth(int width),void,"This method should not be used to set the widths of columns in the JTable, use setPreferredWidth instead."
TableColumn,sizeWidthToFit(),void,Resizes the TableColumn to fit the width of its header cell.
TableRowSorter,getComparator(int column),Comparator<?>,Returns the Comparator for the specified column.
TableRowSorter,getStringConverter(),TableStringConverter,Returns the object responsible for converting values from the model to strings.
TableRowSorter,setModel(M model),void,Sets the TableModel to use as the underlying model for this TableRowSorter.
TableRowSorter,setStringConverter(TableStringConverter stringConverter),void,Sets the object responsible for converting values from the model to strings.
TableRowSorter,useToString(int column),protected boolean,Returns whether or not to convert the value to a string before doing comparisons when sorting.
TableStringConverter,"toString(TableModel model, int row, int column)",abstract String,Returns the string representation of the value at the specified location.
