Sample: 0 AudioFileFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the AudioFileFormat class describes an audio file, including the file type, the file's length in bytes, the length in sample frames of the audio data contained in the file, and the format of the audio data.

@@ Instruction
I want to use javax.sound.sampled.AudioFileFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AudioFileFormat.Type getType()`: This method returns the type of the audio file format.

2. `int getByteLength()`: This method returns the length of the audio data in bytes.

3. `int getFrameLength()`: This method returns the length of the audio data in sample frames.

4. `AudioFormat getFormat()`: This method returns the format of the audio data.

5. `byte[] getData()`: This method returns the audio data as a byte array.

6. `AudioInputStream getAudioInputStream()`: This method returns an AudioInputStream for reading the audio data.

7. `AudioSystem.write(AudioInputStream ais, AudioFileFormat.Type type, File out)`: This method writes the audio data to a file.

8. `AudioSystem.getAudioFileFormat(File f)`: This method returns an AudioFileFormat object for the specified file.

9. `AudioSystem.getAudioInputStream(File f)`: This method returns an AudioInputStream for the specified file.

10. `AudioSystem.getAudioInputStream(URL url)`: This method returns an AudioInputStream for the specified URL.

11. `AudioSystem.getAudioInputStream(AudioFormat format, AudioInputStream ais)`: This method returns an AudioInputStream for the specified format and input stream.

12. `AudioSystem.getAudioInputStream(AudioFormat format, byte[] data)`: This method returns an AudioInputStream for the specified format and data.

13. `AudioSystem.getAudioInputStream(AudioFormat format, byte[] data, int offset, int length)`: This method returns an AudioInputStream for the specified format, data, offset, and length.

14. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in)`: This method returns an AudioInputStream for the specified format and input stream.

15. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int length)`: This method returns an AudioInputStream for the specified format, input stream, and length.

16. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length)`: This method returns an AudioInputStream for the specified format, input stream, offset, and length.

17. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize)`: This method returns an AudioInputStream for the specified format, input stream, offset, length, and frame size.

18. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize, int frameOffset)`: This method returns an AudioInputStream for the specified format, input stream, offset, length, frame size, and frame offset.

19. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize, int frameOffset, int frameLength)`: This method returns an AudioInputStream for the specified format, input stream, offset, length, frame size, frame offset, and frame length.

20. `AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize, int frameOffset, int frameLength, int bufferSize)`: This method returns an AudioInputStream for the specified format, input stream, offset, length, frame size, frame offset, frame length, and buffer size.
================================================================

Sample: 1 AudioFileFormat.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the Type class represents one of the standard types of audio file.

@@ Instruction
I want to use javax.sound.sampled.AudioFileFormat.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AudioFileFormat.Type getType()`: This method returns the type of the audio file format.

2. `AudioFileFormat getAudioFileFormat()`: This method returns the AudioFileFormat object associated with this Type object.

3. `String getName()`: This method returns the name of the audio file format.

4. `String getExtension()`: This method returns the file extension associated with this audio file format.

5. `String getByteArrayPresentation()`: This method returns a string representation of the byte array presentation of the audio file format.
================================================================

Sample: 2 AudioFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class AudioFormat is the class that specifies a particular arrangement of data in a sound stream.

@@ Instruction
I want to use javax.sound.sampled.AudioFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AudioFormat.Encoding getEncoding()`: This method returns the encoding of the audio data.

2. `float getSampleRate()`: This method returns the sample rate of the audio data.

3. `int getSampleSizeInBits()`: This method returns the sample size in bits.

4. `int getChannels()`: This method returns the number of channels in the audio data.

5. `boolean isBigEndian()`: This method returns true if the data is in big-endian byte order.

6. `boolean isSigned()`: This method returns true if the data is signed.

7. `boolean isFrameLengthFixed()`: This method returns true if the frame length is fixed.

8. `int getFrameLength()`: This method returns the frame length.

9. `int getFrameSize()`: This method returns the frame size.

10. `float getFrameRate()`: This method returns the frame rate.

11. `byte[] getData()`: This method returns the data.

12. `int getDataType()`: This method returns the data type.

13. `int getByteOrder()`: This method returns the byte order.

14. `int getByteLength()`: This method returns the byte length.

15. `int getNumDataBytes()`: This method returns the number of data bytes.

16. `int getNumChannels()`: This method returns the number of channels.

17. `int getSampleSizeInBits()`: This method returns the sample size in bits.

18. `int getFrameSize()`: This method returns the frame size.

19. `int getFrameRate()`: This method returns the frame rate.

20. `int getChannels()`: This method returns the number of channels.

21. `int getSampleSizeInBits()`: This method returns the sample size in bits.

22. `int getFrameSize()`: This method returns the frame size.

23. `int getFrameRate()`: This method returns the frame rate.

24. `int getChannels()`: This method returns the number of channels.

25. `int getSampleSizeInBits()`: This method returns the sample size in bits.

26. `int getFrameSize()`: This method returns the frame size.

27. `int getFrameRate()`: This method returns the frame rate.

28. `int getChannels()`: This method returns the number of channels.

29. `int getSampleSizeInBits()`: This method returns the sample size in bits.

30. `int getFrameSize()`: This method returns the frame size.

31. `int getFrameRate()`: This method returns the frame rate.

32. `int getChannels()`: This method returns the number of channels.

33. `int getSampleSizeInBits()`: This method returns the sample size in bits.

34. `int getFrameSize()`: This method returns the frame size.

35. `int getFrameRate()`: This method returns the frame rate.
================================================================

Sample: 3 AudioFormat.Encoding
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The Encoding class names the specific type of data representation used for an audio stream.

@@ Instruction
I want to use javax.sound.sampled.AudioFormat.Encoding package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AudioFormat.Encoding getEncoding()`: This method returns the encoding of the audio data.

2. `int getSampleSizeInBits()`: This method returns the number of bits used to represent a single sample.

3. `int getSampleSizeInBytes()`: This method returns the number of bytes used to represent a single sample.

4. `int getChannels()`: This method returns the number of channels in the audio data.

5. `float getFrameRate()`: This method returns the frame rate of the audio data.

6. `float getFrameSize()`: This method returns the number of bytes in a frame of audio data.

7. `float getSampleRate()`: This method returns the sample rate of the audio data.

8. `boolean isBigEndian()`: This method returns true if the audio data is in big-endian byte order.

9. `boolean isSigned()`: This method returns true if the audio data is signed.

10. `boolean isPCM_Signed()`: This method returns true if the audio data is PCM signed.

11. `boolean isPCM_Unsigned()`: This method returns true if the audio data is PCM unsigned.

12. `boolean isAlaw()`: This method returns true if the audio data is A-law.

13. `boolean isUlaw()`: This method returns true if the audio data is µ-law.

14. `boolean isMulaw()`: This method returns true if the audio data is mu-law.

15. `boolean isLinearPCM()`: This method returns true if the audio data is linear PCM.

16. `boolean isPacked()`: This method returns true if the audio data is packed.

17. `boolean isNativeEndian()`: This method returns true if the audio data is in native byte order.

18. `boolean isByteOrdered()`: This method returns true if the audio data is byte ordered.

19. `boolean isBigEndianConversion()`: This method returns true if the audio data is in big-endian byte order after conversion.

20. `boolean isLittleEndianConversion()`: This method returns true if the audio data is in little-endian byte order after conversion.
================================================================

Sample: 4 AudioInputStream
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An audio input stream is an input stream with a specified audio format and length.

@@ Instruction
I want to use javax.sound.sampled.AudioInputStream package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AudioInputStream getFormat()`: This method returns the format of the audio data in this stream.

2. `int read(byte[] b, int off, int len)`: This method reads up to len bytes of data from the audio input stream into an array of bytes.

3. `int read(byte[] b)`: This method reads some number of bytes from the audio input stream and stores them into the byte array b.

4. `int available()`: This method returns an estimate of the number of bytes that can be read (or skipped over) from the audio input stream without blocking.

5. `long skip(long n)`: This method skips over and discards n bytes of data from the audio input stream.
================================================================

Sample: 5 AudioPermission
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The AudioPermission class represents access rights to the audio system resources.

@@ Instruction
I want to use javax.sound.sampled.AudioPermission package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. AudioPermission(String actions): This method creates an AudioPermission object with the specified actions.

2. AudioPermission(String actions, String targetData): This method creates an AudioPermission object with the specified actions and target data.

3. getActions(): This method returns the actions associated with this AudioPermission object.

4. getTargetData(): This method returns the target data associated with this AudioPermission object.

5. implies(Permission p): This method checks if this permission implies the specified permission.
================================================================

Sample: 6 AudioSystem
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The AudioSystem class acts as the entry point to the sampled-audio system resources.

@@ Instruction
I want to use javax.sound.sampled.AudioSystem package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AudioSystem.getAudioFileFormat(File file)`: This method returns the AudioFileFormat of the specified file.

2. `AudioSystem.getAudioFileFormat(URL url)`: This method returns the AudioFileFormat of the specified URL.

3. `AudioSystem.getAudioInputStream(File file)`: This method returns an AudioInputStream for the specified file.

4. `AudioSystem.getAudioInputStream(URL url)`: This method returns an AudioInputStream for the specified URL.

5. `AudioSystem.getLine(Mixer.Info mixerInfo, Class lineClass)`: This method returns a line for the specified mixer and line class.

6. `AudioSystem.getMixer(Mixer.Info mixerInfo)`: This method returns the Mixer for the specified mixerInfo.

7. `AudioSystem.getMixer(String mixerType)`: This method returns the Mixer for the specified mixerType.

8. `AudioSystem.getMixer(String mixerType, String mixerName)`: This method returns the Mixer for the specified mixerType and mixerName.

9. `AudioSystem.getSourceDataLine(AudioFormat audioFormat)`: This method returns a SourceDataLine for the specified audioFormat.

10. `AudioSystem.getTargetDataLine(AudioFormat audioFormat)`: This method returns a TargetDataLine for the specified audioFormat.

11. `AudioSystem.getVersion()`: This method returns the version of the AudioSystem.

12. `AudioSystem.isConversionSupported(AudioFormat sourceFormat, AudioFormat targetFormat)`: This method returns true if the conversion from sourceFormat to targetFormat is supported.

13. `AudioSystem.isLineSupported(Line.Info lineInfo)`: This method returns true if the lineInfo is supported.

14. `AudioSystem.isMixerSupported(Mixer.Info mixerInfo)`: This method returns true if the mixerInfo is supported.

15. `AudioSystem.isSourceDataLineSupported(AudioFormat audioFormat)`: This method returns true if the audioFormat is supported for a SourceDataLine.

16. `AudioSystem.isTargetDataLineSupported(AudioFormat audioFormat)`: This method returns true if the audioFormat is supported for a TargetDataLine.

17. `AudioSystem.isClipSupported(AudioFormat audioFormat)`: This method returns true if the audioFormat is supported for a Clip.

18. `AudioSystem.isAudioSupported(AudioFormat.Encoding encoding)`: This method returns true if the encoding is supported.

19. `AudioSystem.isFileTypeSupported(File file)`: This method returns true if the file is supported.

20. `AudioSystem.isFileTypeSupported(URL url)`: This method returns true if the URL is supported.
================================================================

Sample: 7 BooleanControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class A BooleanControl provides the ability to switch between two possible settings that affect a line's audio.

@@ Instruction
I want to use javax.sound.sampled.BooleanControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getPotentialValues()`: This method returns an array of the potential values for this control.
2. `getValue()`: This method returns the current value of this control.
3. `getType()`: This method returns the type of this control.
4. `setValue(boolean value)`: This method sets the value of this control.
5. `getMaximum()`: This method returns the maximum value of this control.

Note: The methods `getMinimum()`, `getMicrosecondPosition()`, `getMicrosecondLength()`, `getLine()`, `getLine(int)`, `getLine(Line.Info)`, `getLine(Line.Info, int)`, `getLine(Line.Info, int, int)`, `getLine(Line.Info, int, int, int)`, `getLine(Line.Info, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)`, `getLine(Line.Info, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int,
================================================================

Sample: 8 BooleanControl.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the BooleanControl.Type class identifies one kind of boolean control.

@@ Instruction
I want to use javax.sound.sampled.BooleanControl.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isMicrophoneSupported()`: This method returns true if the control is supported by the current system.

2. `boolean isHeadsetSupported()`: This method returns true if the control is supported by the current system.

3. `boolean isLineInSupported()`: This method returns true if the control is supported by the current system.

4. `boolean isMuteSupported()`: This method returns true if the control is supported by the current system.

5. `boolean isMonitorSupported()`: This method returns true if the control is supported by the current system.
================================================================

Sample: 9 CompoundControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class A CompoundControl, such as a graphic equalizer, provides control over two or more related properties, each of which is itself represented as a Control.

@@ Instruction
I want to use javax.sound.sampled.CompoundControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getNumControls()`: This method returns the number of controls in the compound control.

2. `getNumValues()`: This method returns the number of values in the compound control.

3. `getControls()`: This method returns an array of all controls in the compound control.

4. `getValues()`: This method returns an array of all values in the compound control.

5. `getValue(int index)`: This method returns the value of the control at the specified index.

6. `setValue(int index, float value)`: This method sets the value of the control at the specified index.

7. `getMinimumValue(int index)`: This method returns the minimum value of the control at the specified index.

8. `getMaximumValue(int index)`: This method returns the maximum value of the control at the specified index.

9. `getNormalizedValue(int index)`: This method returns the normalized value of the control at the specified index.

10. `getDenormalizedValue(int index, float value)`: This method returns the denormalized value of the control at the specified index.

11. `getMajorTickSpacing(int index)`: This method returns the major tick spacing of the control at the specified index.

12. `getMinorTickSpacing(int index)`: This method returns the minor tick spacing of the control at the specified index.

13. `getValueIsAdjusting(int index)`: This method returns whether the value of the control at the specified index is being adjusted.

14. `getValueChangeListeners(int index)`: This method returns an array of all value change listeners for the control at the specified index.

15. `addValueChangeListener(int index, ValueChangeListener listener)`: This method adds a value change listener for the control at the specified index.

16. `removeValueChangeListener(int index, ValueChangeListener listener)`: This method removes a value change listener for the control at the specified index.

17. `getControl(int index)`: This method returns the control at the specified index.

18. `getControls(int index)`: This method returns an array of all controls for the control at the specified index.

19. `getValues(int index)`: This method returns an array of all values for the control at the specified index.

20. `setValue(int index, float value)`: This method sets the value of the control at the specified index.

21. `getNormalizedValue(int index)`: This method returns the normalized value of the control at the specified index.

22. `getDenormalizedValue(int index, float value)`: This method returns the denormalized value of the control at the specified index.

23. `getMajorTickSpacing(int index)`: This method returns the major tick spacing of the control at the specified index.

24. `getMinorTickSpacing(int index)`: This method returns the minor tick spacing of the control at the specified index.

25. `getValueIsAdjusting(int index)`: This method returns whether the value of the control at the specified index is being adjusted.

26. `getValueChangeListeners(int index)`: This method returns an array of all value change listeners for the control at the specified index.

27. `addValueChangeListener(int index, ValueChangeListener listener)`: This method adds a value change listener for the control at the specified index.

28. `removeValueChangeListener(int index, ValueChangeListener listener)`: This method removes a value change listener for the control at the specified index.

29. `getControl(int index)`: This method returns the control at the specified index.

30. `getControls(int index)`: This method returns an array of all controls for the control at the specified index.

31. `getValues(int index)`: This method returns an array of all values for the control at the specified index.

32. `setValue(int index, float value)`: This method sets the value of the control at the specified index.

33. `getNormalizedValue(int index)`: This method returns the normalized value of the control at the specified index.

34. `getDenormalizedValue(int index, float value)`: This method returns the denormalized value of the control at the specified index.

35. `getMajorTickSpacing(int index)`: This method returns the major tick spacing of the control at the specified index.

36. `getMinorTickSpacing(int index)`: This method returns the minor tick spacing of the control at the specified index.

37. `getValueIsAdjusting(int index)`: This method returns whether the value of the control at the specified index is being adjusted.

38. `getValueChangeListeners(int index)`: This method returns an array of all value change listeners for the control at the specified index.

39. `addValueChangeListener(int index, ValueChangeListener listener)`: This method adds a value change listener for the control at the specified index.

40. `removeValueChangeListener(int index, ValueChangeListener listener)`: This method removes a value change listener for the control at the specified index.

41. `getControl(int index)`: This method returns the control at the specified index.

42. `getControls(int index)`: This method returns an array of all controls for the control at the specified index.

43. `getValues(int index)`: This method returns an array of all values for the control at the specified index.

44. `setValue(int index, float value)`: This method sets the value of the control at the specified index.

45. `getNormalizedValue(int index)`: This method returns the normalized value of the control at the specified index.

46. `getDenormalizedValue(int index, float value)`: This method returns the denormalized value of the control at the specified index.

47. `getMajorTickSpacing(int index)`: This method returns the major tick spacing of the control at the specified index.

48. `getMinorTickSpacing(int index)`: This method returns the minor tick spacing of the control at the specified index.

49. `getValueIsAdjusting(int index)`: This method returns whether the value of the control at the specified index is being adjusted.

50. `getControl(int index)`: This method returns the control at the specified index.

51. `getControls(int index)`: This method returns an array of all controls for the control at the specified index.

52. `getValues(int index)`: This method returns an array of all values for the control at the specified index.

53. `setValue(int index, float value)`: This method sets the value of the control at the specified index.

54. `getNormalizedValue(int index)`: This method returns the normalized value of the control at the specified index.

55. `getDenormalizedValue(int index, float value)`: This method returns the denormalized value of the control at the specified index.

56. `getMajorTickSpacing(int index)`: This method returns the major tick spacing of the control at the specified index.

57. `getMinorTickSpacing(int index)`: This method returns the minor tick spacing of the control at the specified index.

58. `getValueIsAdjusting(int index)
================================================================

Sample: 10 CompoundControl.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the CompoundControl.Type inner class identifies one kind of compound control.

@@ Instruction
I want to use javax.sound.sampled.CompoundControl.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getType()`: This method returns the type of the compound control.

2. `getMaximum()`: This method returns the maximum value of the control.

3. `getMinimum()`: This method returns the minimum value of the control.

4. `getValue()`: This method returns the current value of the control.

5. `isMicrosecondPrecision()`: This method returns true if the control supports microsecond precision.
================================================================

Sample: 11 Control
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class Lines often have a set of controls, such as gain and pan, that affect the audio signal passing through the line.

@@ Instruction
I want to use javax.sound.sampled.Control package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getValue()`: This method returns the current value of the control.
2. `setValue()`: This method sets the value of the control.
3. `getMaximumValue()`: This method returns the maximum value of the control.
4. `getMinimumValue()`: This method returns the minimum value of the control.
5. `getMicrosecondPosition()`: This method returns the current position in microseconds.
6. `getMicrosecondLength()`: This method returns the length of the audio data in microseconds.
7. `getMicrosecondPosition()`: This method sets the current position in microseconds.
8. `getMicrosecondLength()`: This method sets the length of the audio data in microseconds.
9. `getMicrosecondLength()`: This method returns the maximum value of the control.
10. `getMicrosecondLength()`: This method returns the minimum value of the control.
================================================================

Sample: 12 Control.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the Type class represents the type of the control.

@@ Instruction
I want to use javax.sound.sampled.Control.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getType()`: This method returns the type of the control.

2. `getValue()`: This method returns the current value of the control.

3. `getValues()`: This method returns an array of all the possible values for the control.

4. `isValueSupported()`: This method checks if the specified value is supported by the control.

5. `setValue()`: This method sets the value of the control.
================================================================

Sample: 13 DataLine.Info
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class Besides the class information inherited from its superclass, DataLine.Info provides additional information specific to data lines.

@@ Instruction
I want to use javax.sound.sampled.DataLine.Info package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DataLine.Info(String lineClassName, Class dataClass)`: This constructor creates a new DataLine.Info object with the specified line class name and data class.

2. `DataLine.Info(String lineClassName, Class dataClass, int bufferSize)`: This constructor creates a new DataLine.Info object with the specified line class name, data class, and buffer size.

3. `String getLineClassName()`: This method returns the line class name of this DataLine.Info object.

4. `Class getDataClass()`: This method returns the data class of this DataLine.Info object.

5. `int getBufferSize()`: This method returns the buffer size of this DataLine.Info object.
================================================================

Sample: 14 EnumControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class A EnumControl provides control over a set of discrete possible values, each represented by an object.

@@ Instruction
I want to use javax.sound.sampled.EnumControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void clear()`: This method removes all of the elements from this list.
3. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `E getSelectedValue()`: This method returns the currently selected value.
6. `E[] getValues()`: This method returns an array containing all of the elements in this list in proper sequence.
7. `void setValue(E value)`: This method sets the current value.
8. `void setValue(E value, boolean notify)`: This method sets the current value and notifies all registered listeners if notify is true.
9. `void addChangeListener(ChangeListener l)`: This method adds a ChangeListener to the list of listeners for this control.
10. `void removeChangeListener(ChangeListener l)`: This method removes a ChangeListener from the list of listeners for this control.
================================================================

Sample: 15 EnumControl.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the EnumControl.Type inner class identifies one kind of enumerated control.

@@ Instruction
I want to use javax.sound.sampled.EnumControl.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int getType()`: This method returns the type of the control.
2. `public String getName()`: This method returns the name of the control.
3. `public String getLabel()`: This method returns the label of the control.
4. `public String getUnits()`: This method returns the units of the control.
5. `public int getMajorStepSize()`: This method returns the major step size of the control.
6. `public int getMinorStepSize()`: This method returns the minor step size of the control.
7. `public int getDefaultValue()`: This method returns the default value of the control.
8. `public int getMinimumValue()`: This method returns the minimum value of the control.
9. `public int getMaximumValue()`: This method returns the maximum value of the control.
10. `public int getValue()`: This method returns the current value of the control.
11. `public void setValue(int value)`: This method sets the current value of the control.
12. `public boolean isOn()`: This method returns true if the control is on.
13. `public void setOn(boolean on)`: This method sets the control on or off.
14. `public boolean isMute()`: This method returns true if the control is muted.
15. `public void setMute(boolean mute)`: This method sets the control mute or unmute.
16. `public boolean isBypass()`: This method returns true if the control is bypassed.
17. `public void setBypass(boolean bypass)`: This method sets the control bypass or unbypass.
18. `public boolean isEnabled()`: This method returns true if the control is enabled.
19. `public void setEnabled(boolean enabled)`: This method sets the control enabled or disabled.
20. `public boolean isPrecision()`: This method returns true if the control has precision.
21. `public void setPrecision(boolean precision)`: This method sets the control precision or non-precision.
22. `public boolean isAuto()`: This method returns true if the control is auto.
23. `public void setAuto(boolean auto)`: This method sets the control auto or manual.
24. `public boolean isManual()`: This method returns true if the control is manual.
25. `public void setManual(boolean manual)`: This method sets the control manual or auto.
26. `public boolean isReadOnly()`: This method returns true if the control is read-only.
27. `public void setReadOnly(boolean readOnly)`: This method sets the control read-only or read-write.
28. `public boolean isWriteOnly()`: This method returns true if the control is write-only.
29. `public void setWriteOnly(boolean writeOnly)`: This method sets the control write-only or read-write.
30. `public boolean isRelative()`: This method returns true if the control is relative.
31. `public void setRelative(boolean relative)`: This method sets the control relative or absolute.
32. `public boolean isAbsolute()`: This method returns true if the control is absolute.
33. `public void setAbsolute(boolean absolute)`: This method sets the control absolute or relative.
34. `public boolean isDiscrete()`: This method returns true if the control is discrete.
35. `public void setDiscrete(boolean discrete)`: This method sets the control discrete or continuous.
36. `public boolean isContinuous()`: This method returns true if the control is continuous.
37. `public void setContinuous(boolean continuous)`: This method sets the control continuous or discrete.
38. `public boolean isToggle()`: This method returns true if the control is toggle.
39. `public void setToggle(boolean toggle)`: This method sets the control toggle or non-toggle.
40. `public boolean isOnOff()`: This method returns true if the control is on-off.
41. `public void setOnOff(boolean onOff)`: This method sets the control on-off or off-on.
42. `public boolean isOffOn()`: This method returns true if the control is off-on.
43. `public void setOffOn(boolean offOn)`: This method sets the control off-on or on-off.
44. `public boolean isMuteUnmute()`: This method returns true if the control is mute-unmute.
45. `public void setMuteUnmute(boolean muteUnmute)`: This method sets the control mute-unmute or unmute-mute.
46. `public boolean isBypassUnbypass()`: This method returns true if the control is bypass-unbypass.
47. `public void setBypassUnbypass(boolean bypassUnbypass)`: This method sets the control bypass-unbypass or unbypass-bypass.
48. `public boolean isEnabledDisabled()`: This method returns true if the control is enabled-disabled.
49. `public void setEnabledDisabled(boolean enabledDisabled)`: This method sets the control enabled-disabled or disabled-enabled.
50. `public boolean isPrecisionNonPrecision()`: This method returns true if the control is precision-non-precision.
51. `public void setPrecisionNonPrecision(boolean precisionNonPrecision)`: This method sets the control precision-non-precision or non-precision-precision.
52. `public boolean isAutoManual()`: This method returns true if the control is auto-manual.
53. `public void setAutoManual(boolean autoManual)`: This method sets the control auto-manual or manual-auto.
54. `public boolean isManualAuto()`: This method returns true if the control is manual-auto.
55. `public void setManualAuto(boolean manualAuto)`: This method sets the control manual-auto or auto-manual.
56. `public boolean isReadWrite()`: This method returns true if the control is read-write.
57. `public void setReadWrite(boolean readWrite)`: This method sets the control read-write or write-read.
58. `public boolean isWriteRead()`: This method returns true if the control is write-read.
59. `public void setWriteRead(boolean writeRead)`: This method sets the control write-read or read-write.
60. `public boolean isRelativeAbsolute()`: This method returns true if the control is relative-absolute.
61. `public void setRelativeAbsolute(boolean relativeAbsolute)`: This method sets the control relative-absolute or absolute-relative.
62. `public boolean isAbsoluteRelative()`: This method returns true if the control is absolute-relative.
63. `public void setAbsoluteRelative(boolean absoluteRelative)`: This method sets the control absolute-relative or relative-absolute.
64. `public boolean isDiscreteContinuous()`: This method returns true if the control is discrete-continuous.
65. `public void setDiscreteContinuous(boolean discreteContinuous)`: This method sets the control discrete-continuous or continuous-discrete.
66. `public boolean isContinuousDiscrete()`: This method returns true if the control is continuous-discrete.
67. `public void setContinuousDiscrete(boolean continuousDiscrete)`: This method sets the control continuous-discrete or discrete-continuous.
68. `public boolean isT
================================================================

Sample: 16 FloatControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class A FloatControl object provides control over a range of floating-point values.

@@ Instruction
I want to use javax.sound.sampled.FloatControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getValue()`: This method returns the current value of the control.
2. `getMinimumValue()`: This method returns the minimum value of the control.
3. `getMaximumValue()`: This method returns the maximum value of the control.
4. `getNormalizedValue()`: This method returns the current value of the control, normalized to the range [0, 1].
5. `setValue(float newValue)`: This method sets the current value of the control.
================================================================

Sample: 17 FloatControl.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class An instance of the FloatControl.Type inner class identifies one kind of float control.

@@ Instruction
I want to use javax.sound.sampled.FloatControl.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getType()`: This method returns the type of the FloatControl.
2. `getMinimumValue()`: This method returns the minimum value that can be set for this control.
3. `getMaximumValue()`: This method returns the maximum value that can be set for this control.
4. `getValue()`: This method returns the current value of the control.
5. `setValue(float newValue)`: This method sets the value of the control.
================================================================

Sample: 18 Line.Info
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class A Line.Info object contains information about a line.

@@ Instruction
I want to use javax.sound.sampled.Line.Info package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Line.Info getLineInfo()`: This method returns a Line.Info object that contains information about the line.

2. `Line.Info[] getTargetLineInfo()`: This method returns an array of Line.Info objects that represent the lines that can be connected to this line.

3. `Line.Info[] getMixerInfo()`: This method returns an array of Line.Info objects that represent the mixers that can be connected to this line.

4. `Line.Info[] getSourceLineInfo()`: This method returns an array of Line.Info objects that represent the lines that can be connected to this line.

5. `Line.Info[] getVendorInfo()`: This method returns an array of Line.Info objects that represent the vendors that can be connected to this line.
================================================================

Sample: 19 LineEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The LineEvent class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops.

@@ Instruction
I want to use javax.sound.sampled.LineEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `LineEvent.Type getType()`: This method returns the type of event that occurred.
2. `Line getLine()`: This method returns the line that generated the event.
3. `long getFramePosition()`: This method returns the position of the frame in the audio data that caused the event.
4. `long getMicrosecondPosition()`: This method returns the position of the audio data in microseconds that caused the event.
5. `long getSampleFramePosition()`: This method returns the position of the sample frame in the audio data that caused the event.
6. `long getSampleMicrosecondPosition()`: This method returns the position of the sample in microseconds that caused the event.
7. `long getSamplePosition()`: This method returns the position of the sample in the audio data that caused the event.
8. `long getBytePosition()`: This method returns the position of the byte in the audio data that caused the event.
9. `long getFrameLength()`: This method returns the length of the frame in the audio data that caused the event.
10. `long getMicrosecondLength()`: This method returns the length of the audio data in microseconds that caused the event.
11. `long getSampleFrameLength()`: This method returns the length of the sample frame in the audio data that caused the event.
12. `long getSampleMicrosecondLength()`: This method returns the length of the sample in microseconds that caused the event.
13. `long getSampleLength()`: This method returns the length of the sample in the audio data that caused the event.
14. `long getByteLength()`: This method returns the length of the byte in the audio data that caused the event.
15. `long getFrameOffset()`: This method returns the offset of the frame in the audio data that caused the event.
16. `long getMicrosecondOffset()`: This method returns the offset of the audio data in microseconds that caused the event.
17. `long getSampleFrameOffset()`: This method returns the offset of the sample frame in the audio data that caused the event.
18. `long getSampleMicrosecondOffset()`: This method returns the offset of the sample in microseconds that caused the event.
19. `long getSampleOffset()`: This method returns the offset of the sample in the audio data that caused the event.
20. `long getByteOffset()`: This method returns the offset of the byte in the audio data that caused the event.
================================================================

Sample: 20 LineEvent.Type
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The LineEvent.Type inner class identifies what kind of event occurred on a line.

@@ Instruction
I want to use javax.sound.sampled.LineEvent.Type package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `LineEvent.Type getSource()`: This method returns the source of the event.
2. `LineEvent.Type getType()`: This method returns the type of the event.
3. `LineEvent.Type getFramePosition()`: This method returns the position of the frame in the audio data.
4. `LineEvent.Type getBufferSize()`: This method returns the size of the buffer.
5. `LineEvent.Type getBuffer()`: This method returns the buffer that contains the audio data.
================================================================

Sample: 21 Mixer.Info
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The Mixer.Info class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description.

@@ Instruction
I want to use javax.sound.sampled.Mixer.Info package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Mixer.Info getMixerInfo()`: This method returns an array of Mixer.Info objects representing the mixers available on the system.

2. `String getName()`: This method returns the name of the mixer.

3. `String getVendor()`: This method returns the vendor of the mixer.

4. `String getDescription()`: This method returns a textual description of the mixer.

5. `boolean isLineSupported(Line.Info info)`: This method checks if the mixer supports the specified line.
================================================================

Sample: 22 Port.Info
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The Port.Info class extends Line.Info with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.

@@ Instruction
I want to use javax.sound.sampled.Port.Info package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Port.Info getPortInfo()`: This method returns an array of Port.Info objects that represent the ports available on the system.

2. `String getName()`: This method returns the name of the port.

3. `boolean isSource()`: This method returns true if the port is a source for its mixer, false otherwise.

4. `boolean isTarget()`: This method returns true if the port is a target for its mixer, false otherwise.

5. `Line.Info[] getMixerInfo()`: This method returns an array of Line.Info objects that represent the mixers available on the system.
================================================================

Sample: 23 ReverbType
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides interfaces and classes for capture, processing, and playback of sampled audio data.
Here is the description of the class The ReverbType class provides methods for accessing various reverberation settings to be applied to an audio signal.

@@ Instruction
I want to use javax.sound.sampled.ReverbType package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ReverbType()`: This is the constructor of the ReverbType class. It initializes a new ReverbType object with the specified reverberation settings.

2. `getReverbDepth()`: This method returns the reverberation depth of the ReverbType object.

3. `getHFReference()`: This method returns the high-frequency reference of the ReverbType object.

4. `getLFReference()`: This method returns the low-frequency reference of the ReverbType object.

5. `getRoomScale()`: This method returns the room scale of the ReverbType object.

6. `getReverbTime()`: This method returns the reverberation time of the ReverbType object.

7. `getDecayTime()`: This method returns the decay time of the ReverbType object.

8. `getReflectionsGain()`: This method returns the gain of the reflections of the ReverbType object.

9. `getReflectionsDelay()`: This method returns the delay of the reflections of the ReverbType object.

10. `getLateReverbGain()`: This method returns the gain of the late reverb of the ReverbType object.

11. `getLateReverbDelay()`: This method returns the delay of the late reverb of the ReverbType object.

12. `getEchoGain()`: This method returns the gain of the echo of the ReverbType object.

13. `getEchoDelay()`: This method returns the delay of the echo of the ReverbType object.

14. `getAirAbsorptionGainHF()`: This method returns the gain of the air absorption in the high-frequency range of the ReverbType object.

15. `getDecayHFRatio()`: This method returns the decay high-frequency ratio of the ReverbType object.

16. `getDecayLFRatio()`: This method returns the decay low-frequency ratio of the ReverbType object.

17. `getReflectionsPan()`: This method returns the pan of the reflections of the ReverbType object.

18. `getLateReverbPan()`: This method returns the pan of the late reverb of the ReverbType object.

19. `getEchoPan()`: This method returns the pan of the echo of the ReverbType object.

20. `getWetGain()`: This method returns the wet gain of the ReverbType object.
================================================================

