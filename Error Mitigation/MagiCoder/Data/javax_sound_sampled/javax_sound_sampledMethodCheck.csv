Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,AudioFileFormat,1,AudioFileFormat.Type getType(),True,"Obtains the audio file type, such as WAVE or AU."
0,AudioFileFormat,2,int getByteLength(),True,Obtains the size in bytes of the entire audio file (not just its audio data).
0,AudioFileFormat,3,int getFrameLength(),True,"Obtains the length of the audio data contained in the file, expressed in sample frames."
0,AudioFileFormat,4,AudioFormat getFormat(),True,Obtains the format of the audio data contained in the audio file.
0,AudioFileFormat,5,byte[] getData(),False,NULL
0,AudioFileFormat,6,AudioInputStream getAudioInputStream(),False,NULL
0,AudioFileFormat,7,"AudioSystem.write(AudioInputStream ais, AudioFileFormat.Type type, File out)",False,NULL
0,AudioFileFormat,8,AudioSystem.getAudioFileFormat(File f),False,NULL
0,AudioFileFormat,9,AudioSystem.getAudioInputStream(File f),False,NULL
0,AudioFileFormat,10,AudioSystem.getAudioInputStream(URL url),False,NULL
0,AudioFileFormat,11,"AudioSystem.getAudioInputStream(AudioFormat format, AudioInputStream ais)",False,NULL
0,AudioFileFormat,12,"AudioSystem.getAudioInputStream(AudioFormat format, byte[] data)",False,NULL
0,AudioFileFormat,13,"AudioSystem.getAudioInputStream(AudioFormat format, byte[] data, int offset, int length)",False,NULL
0,AudioFileFormat,14,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in)",False,NULL
0,AudioFileFormat,15,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int length)",False,NULL
0,AudioFileFormat,16,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length)",False,NULL
0,AudioFileFormat,17,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize)",False,NULL
0,AudioFileFormat,18,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize, int frameOffset)",False,NULL
0,AudioFileFormat,19,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize, int frameOffset, int frameLength)",False,NULL
0,AudioFileFormat,20,"AudioSystem.getAudioInputStream(AudioFormat format, InputStream in, int offset, int length, int frameSize, int frameOffset, int frameLength, int bufferSize)",False,NULL
1,AudioFileFormat.Type,1,AudioFileFormat.Type getType(),False,NULL
1,AudioFileFormat.Type,2,AudioFileFormat getAudioFileFormat(),False,NULL
1,AudioFileFormat.Type,3,String getName(),False,NULL
1,AudioFileFormat.Type,4,String getExtension(),True,Obtains the common file name extension for this file type.
1,AudioFileFormat.Type,5,String getByteArrayPresentation(),False,NULL
2,AudioFormat,1,AudioFormat.Encoding getEncoding(),True,Obtains the type of encoding for sounds in this format.
2,AudioFormat,2,float getSampleRate(),True,Obtains the sample rate.
2,AudioFormat,3,int getSampleSizeInBits(),True,Obtains the size of a sample.
2,AudioFormat,4,int getChannels(),True,Obtains the number of channels.
2,AudioFormat,5,boolean isBigEndian(),True,Indicates whether the audio data is stored in big-endian or little-endian byte order.
2,AudioFormat,6,boolean isSigned(),False,NULL
2,AudioFormat,7,boolean isFrameLengthFixed(),False,NULL
2,AudioFormat,8,int getFrameLength(),False,NULL
2,AudioFormat,9,int getFrameSize(),True,Obtains the frame size in bytes.
2,AudioFormat,10,float getFrameRate(),True,Obtains the frame rate in frames per second.
2,AudioFormat,11,byte[] getData(),False,NULL
2,AudioFormat,12,int getDataType(),False,NULL
2,AudioFormat,13,int getByteOrder(),False,NULL
2,AudioFormat,14,int getByteLength(),False,NULL
2,AudioFormat,15,int getNumDataBytes(),False,NULL
2,AudioFormat,16,int getNumChannels(),False,NULL
2,AudioFormat,17,int getSampleSizeInBits(),True,Obtains the size of a sample.
2,AudioFormat,18,int getFrameSize(),True,Obtains the frame size in bytes.
2,AudioFormat,19,int getFrameRate(),False,NULL
2,AudioFormat,20,int getChannels(),True,Obtains the number of channels.
2,AudioFormat,21,int getSampleSizeInBits(),True,Obtains the size of a sample.
2,AudioFormat,22,int getFrameSize(),True,Obtains the frame size in bytes.
2,AudioFormat,23,int getFrameRate(),False,NULL
2,AudioFormat,24,int getChannels(),True,Obtains the number of channels.
2,AudioFormat,25,int getSampleSizeInBits(),True,Obtains the size of a sample.
2,AudioFormat,26,int getFrameSize(),True,Obtains the frame size in bytes.
2,AudioFormat,27,int getFrameRate(),False,NULL
2,AudioFormat,28,int getChannels(),True,Obtains the number of channels.
2,AudioFormat,29,int getSampleSizeInBits(),True,Obtains the size of a sample.
2,AudioFormat,30,int getFrameSize(),True,Obtains the frame size in bytes.
2,AudioFormat,31,int getFrameRate(),False,NULL
2,AudioFormat,32,int getChannels(),True,Obtains the number of channels.
2,AudioFormat,33,int getSampleSizeInBits(),True,Obtains the size of a sample.
2,AudioFormat,34,int getFrameSize(),True,Obtains the frame size in bytes.
2,AudioFormat,35,int getFrameRate(),False,NULL
3,AudioFormat.Encoding,1,AudioFormat.Encoding getEncoding(),False,NULL
3,AudioFormat.Encoding,2,int getSampleSizeInBits(),False,NULL
3,AudioFormat.Encoding,3,int getSampleSizeInBytes(),False,NULL
3,AudioFormat.Encoding,4,int getChannels(),False,NULL
3,AudioFormat.Encoding,5,float getFrameRate(),False,NULL
3,AudioFormat.Encoding,6,float getFrameSize(),False,NULL
3,AudioFormat.Encoding,7,float getSampleRate(),False,NULL
3,AudioFormat.Encoding,8,boolean isBigEndian(),False,NULL
3,AudioFormat.Encoding,9,boolean isSigned(),False,NULL
3,AudioFormat.Encoding,10,boolean isPCM_Signed(),False,NULL
3,AudioFormat.Encoding,11,boolean isPCM_Unsigned(),False,NULL
3,AudioFormat.Encoding,12,boolean isAlaw(),False,NULL
3,AudioFormat.Encoding,13,boolean isUlaw(),False,NULL
3,AudioFormat.Encoding,14,boolean isMulaw(),False,NULL
3,AudioFormat.Encoding,15,boolean isLinearPCM(),False,NULL
3,AudioFormat.Encoding,16,boolean isPacked(),False,NULL
3,AudioFormat.Encoding,17,boolean isNativeEndian(),False,NULL
3,AudioFormat.Encoding,18,boolean isByteOrdered(),False,NULL
3,AudioFormat.Encoding,19,boolean isBigEndianConversion(),False,NULL
3,AudioFormat.Encoding,20,boolean isLittleEndianConversion(),False,NULL
4,AudioInputStream,1,AudioInputStream getFormat(),False,NULL
4,AudioInputStream,2,"int read(byte[] b, int off, int len)",True,"Reads up to a specified maximum number of bytes of data from the audio stream, putting them into the given byte array."
4,AudioInputStream,3,int read(byte[] b),True,Reads some number of bytes from the audio input stream and stores them into the buffer array b.
4,AudioInputStream,4,int available(),True,Returns the maximum number of bytes that can be read (or skipped over) from this audio input stream without blocking.
4,AudioInputStream,5,long skip(long n),True,Skips over and discards a specified number of bytes from this audio input stream.
6,AudioSystem,1,AudioSystem.getAudioFileFormat(File file),False,NULL
6,AudioSystem,2,AudioSystem.getAudioFileFormat(URL url),False,NULL
6,AudioSystem,3,AudioSystem.getAudioInputStream(File file),False,NULL
6,AudioSystem,4,AudioSystem.getAudioInputStream(URL url),False,NULL
6,AudioSystem,5,"AudioSystem.getLine(Mixer.Info mixerInfo, Class lineClass)",False,NULL
6,AudioSystem,6,AudioSystem.getMixer(Mixer.Info mixerInfo),False,NULL
6,AudioSystem,7,AudioSystem.getMixer(String mixerType),False,NULL
6,AudioSystem,8,"AudioSystem.getMixer(String mixerType, String mixerName)",False,NULL
6,AudioSystem,9,AudioSystem.getSourceDataLine(AudioFormat audioFormat),False,NULL
6,AudioSystem,10,AudioSystem.getTargetDataLine(AudioFormat audioFormat),False,NULL
6,AudioSystem,11,AudioSystem.getVersion(),False,NULL
6,AudioSystem,12,"AudioSystem.isConversionSupported(AudioFormat sourceFormat, AudioFormat targetFormat)",False,NULL
6,AudioSystem,13,AudioSystem.isLineSupported(Line.Info lineInfo),False,NULL
6,AudioSystem,14,AudioSystem.isMixerSupported(Mixer.Info mixerInfo),False,NULL
6,AudioSystem,15,AudioSystem.isSourceDataLineSupported(AudioFormat audioFormat),False,NULL
6,AudioSystem,16,AudioSystem.isTargetDataLineSupported(AudioFormat audioFormat),False,NULL
6,AudioSystem,17,AudioSystem.isClipSupported(AudioFormat audioFormat),False,NULL
6,AudioSystem,18,AudioSystem.isAudioSupported(AudioFormat.Encoding encoding),False,NULL
6,AudioSystem,19,AudioSystem.isFileTypeSupported(File file),False,NULL
6,AudioSystem,20,AudioSystem.isFileTypeSupported(URL url),False,NULL
7,BooleanControl,1,getPotentialValues(),False,NULL
7,BooleanControl,2,getValue(),False,NULL
7,BooleanControl,3,getType(),False,NULL
7,BooleanControl,4,setValue(boolean value),False,NULL
7,BooleanControl,5,getMaximum(),False,NULL
8,BooleanControl.Type,1,boolean isMicrophoneSupported(),False,NULL
8,BooleanControl.Type,2,boolean isHeadsetSupported(),False,NULL
8,BooleanControl.Type,3,boolean isLineInSupported(),False,NULL
8,BooleanControl.Type,4,boolean isMuteSupported(),False,NULL
8,BooleanControl.Type,5,boolean isMonitorSupported(),False,NULL
9,CompoundControl,1,getNumControls(),False,NULL
9,CompoundControl,2,getNumValues(),False,NULL
9,CompoundControl,3,getControls(),False,NULL
9,CompoundControl,4,getValues(),False,NULL
9,CompoundControl,5,getValue(int index),False,NULL
9,CompoundControl,6,"setValue(int index, float value)",False,NULL
9,CompoundControl,7,getMinimumValue(int index),False,NULL
9,CompoundControl,8,getMaximumValue(int index),False,NULL
9,CompoundControl,9,getNormalizedValue(int index),False,NULL
9,CompoundControl,10,"getDenormalizedValue(int index, float value)",False,NULL
9,CompoundControl,11,getMajorTickSpacing(int index),False,NULL
9,CompoundControl,12,getMinorTickSpacing(int index),False,NULL
9,CompoundControl,13,getValueIsAdjusting(int index),False,NULL
9,CompoundControl,14,getValueChangeListeners(int index),False,NULL
9,CompoundControl,15,"addValueChangeListener(int index, ValueChangeListener listener)",False,NULL
9,CompoundControl,16,"removeValueChangeListener(int index, ValueChangeListener listener)",False,NULL
9,CompoundControl,17,getControl(int index),False,NULL
9,CompoundControl,18,getControls(int index),False,NULL
9,CompoundControl,19,getValues(int index),False,NULL
9,CompoundControl,20,"setValue(int index, float value)",False,NULL
9,CompoundControl,21,getNormalizedValue(int index),False,NULL
9,CompoundControl,22,"getDenormalizedValue(int index, float value)",False,NULL
9,CompoundControl,23,getMajorTickSpacing(int index),False,NULL
9,CompoundControl,24,getMinorTickSpacing(int index),False,NULL
9,CompoundControl,25,getValueIsAdjusting(int index),False,NULL
9,CompoundControl,26,getValueChangeListeners(int index),False,NULL
9,CompoundControl,27,"addValueChangeListener(int index, ValueChangeListener listener)",False,NULL
9,CompoundControl,28,"removeValueChangeListener(int index, ValueChangeListener listener)",False,NULL
9,CompoundControl,29,getControl(int index),False,NULL
9,CompoundControl,30,getControls(int index),False,NULL
9,CompoundControl,31,getValues(int index),False,NULL
9,CompoundControl,32,"setValue(int index, float value)",False,NULL
9,CompoundControl,33,getNormalizedValue(int index),False,NULL
9,CompoundControl,34,"getDenormalizedValue(int index, float value)",False,NULL
9,CompoundControl,35,getMajorTickSpacing(int index),False,NULL
9,CompoundControl,36,getMinorTickSpacing(int index),False,NULL
9,CompoundControl,37,getValueIsAdjusting(int index),False,NULL
9,CompoundControl,38,getValueChangeListeners(int index),False,NULL
9,CompoundControl,39,"addValueChangeListener(int index, ValueChangeListener listener)",False,NULL
9,CompoundControl,40,"removeValueChangeListener(int index, ValueChangeListener listener)",False,NULL
9,CompoundControl,41,getControl(int index),False,NULL
9,CompoundControl,42,getControls(int index),False,NULL
9,CompoundControl,43,getValues(int index),False,NULL
9,CompoundControl,44,"setValue(int index, float value)",False,NULL
9,CompoundControl,45,getNormalizedValue(int index),False,NULL
9,CompoundControl,46,"getDenormalizedValue(int index, float value)",False,NULL
9,CompoundControl,47,getMajorTickSpacing(int index),False,NULL
9,CompoundControl,48,getMinorTickSpacing(int index),False,NULL
9,CompoundControl,49,getValueIsAdjusting(int index),False,NULL
9,CompoundControl,50,getControl(int index),False,NULL
9,CompoundControl,51,getControls(int index),False,NULL
9,CompoundControl,52,getValues(int index),False,NULL
9,CompoundControl,53,"setValue(int index, float value)",False,NULL
9,CompoundControl,54,getNormalizedValue(int index),False,NULL
9,CompoundControl,55,"getDenormalizedValue(int index, float value)",False,NULL
9,CompoundControl,56,getMajorTickSpacing(int index),False,NULL
9,CompoundControl,57,getMinorTickSpacing(int index),False,NULL
10,CompoundControl.Type,1,getType(),False,NULL
10,CompoundControl.Type,2,getMaximum(),False,NULL
10,CompoundControl.Type,3,getMinimum(),False,NULL
10,CompoundControl.Type,4,getValue(),False,NULL
10,CompoundControl.Type,5,isMicrosecondPrecision(),False,NULL
11,Control,1,getValue(),False,NULL
11,Control,2,setValue(),False,NULL
11,Control,3,getMaximumValue(),False,NULL
11,Control,4,getMinimumValue(),False,NULL
11,Control,5,getMicrosecondPosition(),False,NULL
11,Control,6,getMicrosecondLength(),False,NULL
11,Control,7,getMicrosecondPosition(),False,NULL
11,Control,8,getMicrosecondLength(),False,NULL
11,Control,9,getMicrosecondLength(),False,NULL
11,Control,10,getMicrosecondLength(),False,NULL
12,Control.Type,1,getType(),False,NULL
12,Control.Type,2,getValue(),False,NULL
12,Control.Type,3,getValues(),False,NULL
12,Control.Type,4,isValueSupported(),False,NULL
12,Control.Type,5,setValue(),False,NULL
13,DataLine.Info,1,"DataLine.Info(String lineClassName, Class dataClass)",False,NULL
13,DataLine.Info,2,"DataLine.Info(String lineClassName, Class dataClass, int bufferSize)",False,NULL
13,DataLine.Info,3,String getLineClassName(),False,NULL
13,DataLine.Info,4,Class getDataClass(),False,NULL
13,DataLine.Info,5,int getBufferSize(),False,NULL
14,EnumControl,1,boolean add(E e),False,NULL
14,EnumControl,2,void clear(),False,NULL
14,EnumControl,3,boolean contains(Object o),False,NULL
14,EnumControl,4,boolean remove(Object o),False,NULL
14,EnumControl,5,E getSelectedValue(),False,NULL
14,EnumControl,6,E[] getValues(),False,NULL
14,EnumControl,7,void setValue(E value),False,NULL
14,EnumControl,8,"void setValue(E value, boolean notify)",False,NULL
14,EnumControl,9,void addChangeListener(ChangeListener l),False,NULL
14,EnumControl,10,void removeChangeListener(ChangeListener l),False,NULL
15,EnumControl.Type,1,int getType(),False,NULL
15,EnumControl.Type,2,String getName(),False,NULL
15,EnumControl.Type,3,String getLabel(),False,NULL
15,EnumControl.Type,4,String getUnits(),False,NULL
15,EnumControl.Type,5,int getMajorStepSize(),False,NULL
15,EnumControl.Type,6,int getMinorStepSize(),False,NULL
15,EnumControl.Type,7,int getDefaultValue(),False,NULL
15,EnumControl.Type,8,int getMinimumValue(),False,NULL
15,EnumControl.Type,9,int getMaximumValue(),False,NULL
15,EnumControl.Type,10,int getValue(),False,NULL
15,EnumControl.Type,11,void setValue(int value),False,NULL
15,EnumControl.Type,12,boolean isOn(),False,NULL
15,EnumControl.Type,13,void setOn(boolean on),False,NULL
15,EnumControl.Type,14,boolean isMute(),False,NULL
15,EnumControl.Type,15,void setMute(boolean mute),False,NULL
15,EnumControl.Type,16,boolean isBypass(),False,NULL
15,EnumControl.Type,17,void setBypass(boolean bypass),False,NULL
15,EnumControl.Type,18,boolean isEnabled(),False,NULL
15,EnumControl.Type,19,void setEnabled(boolean enabled),False,NULL
15,EnumControl.Type,20,boolean isPrecision(),False,NULL
15,EnumControl.Type,21,void setPrecision(boolean precision),False,NULL
15,EnumControl.Type,22,boolean isAuto(),False,NULL
15,EnumControl.Type,23,void setAuto(boolean auto),False,NULL
15,EnumControl.Type,24,boolean isManual(),False,NULL
15,EnumControl.Type,25,void setManual(boolean manual),False,NULL
15,EnumControl.Type,26,boolean isReadOnly(),False,NULL
15,EnumControl.Type,27,void setReadOnly(boolean readOnly),False,NULL
15,EnumControl.Type,28,boolean isWriteOnly(),False,NULL
15,EnumControl.Type,29,void setWriteOnly(boolean writeOnly),False,NULL
15,EnumControl.Type,30,boolean isRelative(),False,NULL
15,EnumControl.Type,31,void setRelative(boolean relative),False,NULL
15,EnumControl.Type,32,boolean isAbsolute(),False,NULL
15,EnumControl.Type,33,void setAbsolute(boolean absolute),False,NULL
15,EnumControl.Type,34,boolean isDiscrete(),False,NULL
15,EnumControl.Type,35,void setDiscrete(boolean discrete),False,NULL
15,EnumControl.Type,36,boolean isContinuous(),False,NULL
15,EnumControl.Type,37,void setContinuous(boolean continuous),False,NULL
15,EnumControl.Type,38,boolean isToggle(),False,NULL
15,EnumControl.Type,39,void setToggle(boolean toggle),False,NULL
15,EnumControl.Type,40,boolean isOnOff(),False,NULL
15,EnumControl.Type,41,void setOnOff(boolean onOff),False,NULL
15,EnumControl.Type,42,boolean isOffOn(),False,NULL
15,EnumControl.Type,43,void setOffOn(boolean offOn),False,NULL
15,EnumControl.Type,44,boolean isMuteUnmute(),False,NULL
15,EnumControl.Type,45,void setMuteUnmute(boolean muteUnmute),False,NULL
15,EnumControl.Type,46,boolean isBypassUnbypass(),False,NULL
15,EnumControl.Type,47,void setBypassUnbypass(boolean bypassUnbypass),False,NULL
15,EnumControl.Type,48,boolean isEnabledDisabled(),False,NULL
15,EnumControl.Type,49,void setEnabledDisabled(boolean enabledDisabled),False,NULL
15,EnumControl.Type,50,boolean isPrecisionNonPrecision(),False,NULL
15,EnumControl.Type,51,void setPrecisionNonPrecision(boolean precisionNonPrecision),False,NULL
15,EnumControl.Type,52,boolean isAutoManual(),False,NULL
15,EnumControl.Type,53,void setAutoManual(boolean autoManual),False,NULL
15,EnumControl.Type,54,boolean isManualAuto(),False,NULL
15,EnumControl.Type,55,void setManualAuto(boolean manualAuto),False,NULL
15,EnumControl.Type,56,boolean isReadWrite(),False,NULL
15,EnumControl.Type,57,void setReadWrite(boolean readWrite),False,NULL
15,EnumControl.Type,58,boolean isWriteRead(),False,NULL
15,EnumControl.Type,59,void setWriteRead(boolean writeRead),False,NULL
15,EnumControl.Type,60,boolean isRelativeAbsolute(),False,NULL
15,EnumControl.Type,61,void setRelativeAbsolute(boolean relativeAbsolute),False,NULL
15,EnumControl.Type,62,boolean isAbsoluteRelative(),False,NULL
15,EnumControl.Type,63,void setAbsoluteRelative(boolean absoluteRelative),False,NULL
15,EnumControl.Type,64,boolean isDiscreteContinuous(),False,NULL
15,EnumControl.Type,65,void setDiscreteContinuous(boolean discreteContinuous),False,NULL
15,EnumControl.Type,66,boolean isContinuousDiscrete(),False,NULL
15,EnumControl.Type,67,void setContinuousDiscrete(boolean continuousDiscrete),False,NULL
16,FloatControl,1,getValue(),False,NULL
16,FloatControl,2,getMinimumValue(),False,NULL
16,FloatControl,3,getMaximumValue(),False,NULL
16,FloatControl,4,getNormalizedValue(),False,NULL
16,FloatControl,5,setValue(float newValue),False,NULL
17,FloatControl.Type,1,getType(),False,NULL
17,FloatControl.Type,2,getMinimumValue(),False,NULL
17,FloatControl.Type,3,getMaximumValue(),False,NULL
17,FloatControl.Type,4,getValue(),False,NULL
17,FloatControl.Type,5,setValue(float newValue),False,NULL
18,Line.Info,1,Line.Info getLineInfo(),False,NULL
18,Line.Info,2,Line.Info[] getTargetLineInfo(),False,NULL
18,Line.Info,3,Line.Info[] getMixerInfo(),False,NULL
18,Line.Info,4,Line.Info[] getSourceLineInfo(),False,NULL
18,Line.Info,5,Line.Info[] getVendorInfo(),False,NULL
19,LineEvent,1,LineEvent.Type getType(),True,Obtains the event's type.
19,LineEvent,2,Line getLine(),True,Obtains the audio line that is the source of this event.
19,LineEvent,3,long getFramePosition(),True,"Obtains the position in the line's audio data when the event occurred, expressed in sample frames."
19,LineEvent,4,long getMicrosecondPosition(),False,NULL
19,LineEvent,5,long getSampleFramePosition(),False,NULL
19,LineEvent,6,long getSampleMicrosecondPosition(),False,NULL
19,LineEvent,7,long getSamplePosition(),False,NULL
19,LineEvent,8,long getBytePosition(),False,NULL
19,LineEvent,9,long getFrameLength(),False,NULL
19,LineEvent,10,long getMicrosecondLength(),False,NULL
19,LineEvent,11,long getSampleFrameLength(),False,NULL
19,LineEvent,12,long getSampleMicrosecondLength(),False,NULL
19,LineEvent,13,long getSampleLength(),False,NULL
19,LineEvent,14,long getByteLength(),False,NULL
19,LineEvent,15,long getFrameOffset(),False,NULL
19,LineEvent,16,long getMicrosecondOffset(),False,NULL
19,LineEvent,17,long getSampleFrameOffset(),False,NULL
19,LineEvent,18,long getSampleMicrosecondOffset(),False,NULL
19,LineEvent,19,long getSampleOffset(),False,NULL
19,LineEvent,20,long getByteOffset(),False,NULL
20,LineEvent.Type,1,LineEvent.Type getSource(),False,NULL
20,LineEvent.Type,2,LineEvent.Type getType(),False,NULL
20,LineEvent.Type,3,LineEvent.Type getFramePosition(),False,NULL
20,LineEvent.Type,4,LineEvent.Type getBufferSize(),False,NULL
20,LineEvent.Type,5,LineEvent.Type getBuffer(),False,NULL
21,Mixer.Info,1,Mixer.Info getMixerInfo(),False,NULL
21,Mixer.Info,2,String getName(),True,Obtains the name of the mixer.
21,Mixer.Info,3,String getVendor(),True,Obtains the vendor of the mixer.
21,Mixer.Info,4,String getDescription(),True,Obtains the description of the mixer.
21,Mixer.Info,5,boolean isLineSupported(Line.Info info),False,NULL
22,Port.Info,1,Port.Info getPortInfo(),False,NULL
22,Port.Info,2,String getName(),True,Obtains the name of the port.
22,Port.Info,3,boolean isSource(),True,Indicates whether the port is a source or a target for its mixer.
22,Port.Info,4,boolean isTarget(),False,NULL
22,Port.Info,5,Line.Info[] getMixerInfo(),False,NULL
23,ReverbType,1,ReverbType(),False,NULL
23,ReverbType,2,getReverbDepth(),False,NULL
23,ReverbType,3,getHFReference(),False,NULL
23,ReverbType,4,getLFReference(),False,NULL
23,ReverbType,5,getRoomScale(),False,NULL
23,ReverbType,6,getReverbTime(),False,NULL
23,ReverbType,7,getDecayTime(),False,NULL
23,ReverbType,8,getReflectionsGain(),False,NULL
23,ReverbType,9,getReflectionsDelay(),False,NULL
23,ReverbType,10,getLateReverbGain(),False,NULL
23,ReverbType,11,getLateReverbDelay(),False,NULL
23,ReverbType,12,getEchoGain(),False,NULL
23,ReverbType,13,getEchoDelay(),False,NULL
23,ReverbType,14,getAirAbsorptionGainHF(),False,NULL
23,ReverbType,15,getDecayHFRatio(),False,NULL
23,ReverbType,16,getDecayLFRatio(),False,NULL
23,ReverbType,17,getReflectionsPan(),False,NULL
23,ReverbType,18,getLateReverbPan(),False,NULL
23,ReverbType,19,getEchoPan(),False,NULL
23,ReverbType,20,getWetGain(),False,NULL
