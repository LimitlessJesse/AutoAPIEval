Sample: 0 W3CDomHandler
----------------------------------------------------------------

@@ Context
Here is the description of the package Defines annotations for customizing Java program elements to XML Schema mapping.
Here is the description of the class DomHandler implementation for W3C DOM (org.w3c.dom package.)

@@ Instruction
I want to use javax.xml.bind.annotation.W3CDomHandler package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `W3CDomHandler.newInstance()`: This method creates a new instance of W3CDomHandler.

2. `W3CDomHandler.newInstance(Class<?>... parameterClasses)`: This method creates a new instance of W3CDomHandler with the specified parameter classes.

3. `W3CDomHandler.newInstance(Object... args)`: This method creates a new instance of W3CDomHandler with the specified arguments.

4. `W3CDomHandler.newInstance(Class<?> parameterClass, Object... args)`: This method creates a new instance of W3CDomHandler with the specified parameter class and arguments.

5. `W3CDomHandler.newInstance(Class<?> parameterClass, Class<?>... parameterClasses)`: This method creates a new instance of W3CDomHandler with the specified parameter class and parameter classes.

6. `W3CDomHandler.newInstance(Object... args, Class<?>... parameterClasses)`: This method creates a new instance of W3CDomHandler with the specified arguments and parameter classes.

7. `W3CDomHandler.newInstance(Class<?> parameterClass, Object... args, Class<?>... parameterClasses)`: This method creates a new instance of W3CDomHandler with the specified parameter class, arguments, and parameter classes.

8. `W3CDomHandler.newInstance(Object... args, Class<?>... parameterClasses, Class<?> parameterClass)`: This method creates a new instance of W3CDomHandler with the specified arguments, parameter classes, and parameter class.

9. `W3CDomHandler.newInstance(Class<?> parameterClass, Object... args, Class<?>... parameterClasses, Class<?> parameterClass2)`: This method creates a new instance of W3CDomHandler with the specified parameter class, arguments, parameter classes, and parameter class.

10. `W3CDomHandler.newInstance(Object... args, Class<?>... parameterClasses, Class<?> parameterClass, Class<?> parameterClass2)`: This method creates a new instance of W3CDomHandler with the specified arguments, parameter classes, parameter class, and parameter class.
================================================================

Sample: 1 XmlElement.DEFAULT
----------------------------------------------------------------

@@ Context
Here is the description of the package Defines annotations for customizing Java program elements to XML Schema mapping.
Here is the description of the class Used in XmlElement.type() to signal that the type be inferred from the signature of the property.

@@ Instruction
I want to use javax.xml.bind.annotation.XmlElement.DEFAULT package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `@XmlElement(name = "")`: This method is used to specify the XML element name.

2. `@XmlElement(required = true)`: This method is used to specify whether the XML element is required.

3. `@XmlElement(nillable = true)`: This method is used to specify whether the XML element can be nil.

4. `@XmlElement(defaultValue = "")`: This method is used to specify the default value of the XML element.

5. `@XmlElement(type = Class.class)`: This method is used to specify the type of the XML element.
================================================================

Sample: 2 XmlElementDecl.GLOBAL
----------------------------------------------------------------

@@ Context
Here is the description of the package Defines annotations for customizing Java program elements to XML Schema mapping.
Here is the description of the class Used in XmlElementDecl.scope() to signal that the declaration is in the global scope.

@@ Instruction
I want to use javax.xml.bind.annotation.XmlElementDecl.GLOBAL package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isNillable()`: Returns whether the element is nillable.
2. `boolean isGlobal()`: Returns whether the element is in the global scope.
3. `boolean isDefault()`: Returns whether the element is the default element.
4. `boolean isQualified()`: Returns whether the element is qualified.
5. `boolean isReference()`: Returns whether the element is a reference.
6. `boolean isTransparent()`: Returns whether the element is transparent.
7. `boolean isType()`: Returns whether the element is a type.
8. `boolean isWrapped()`: Returns whether the element is wrapped.
9. `boolean isXmlAttribute()`: Returns whether the element is an XML attribute.
10. `boolean isXmlElement()`: Returns whether the element is an XML element.
11. `boolean isXmlMixed()`: Returns whether the element is an XML mixed content.
12. `boolean isXmlText()`: Returns whether the element is an XML text content.
13. `boolean isXmlValue()`: Returns whether the element is an XML value.
14. `boolean isXmlTransient()`: Returns whether the element is an XML transient.
15. `boolean isXmlAny()`: Returns whether the element is an XML any.
16. `boolean isXmlAnyAttribute()`: Returns whether the element is an XML any attribute.
17. `boolean isXmlAnyElement()`: Returns whether the element is an XML any element.
18. `boolean isXmlAnyType()`: Returns whether the element is an XML any type.
19. `boolean isXmlChoice()`: Returns whether the element is an XML choice.
20. `boolean isXmlSequence()`: Returns whether the element is an XML sequence.
21. `boolean isXmlList()`: Returns whether the element is an XML list.
22. `boolean isXmlID()`: Returns whether the element is an XML ID.
23. `boolean isXmlIDREF()`: Returns whether the element is an XML IDREF.
24. `boolean isXmlIDREFS()`: Returns whether the element is an XML IDREFS.
25. `boolean isXmlENTITY()`: Returns whether the element is an XML ENTITY.
26. `boolean isXmlENTITIES()`: Returns whether the element is an XML ENTITIES.
27. `boolean isXmlNOTATION()`: Returns whether the element is an XML NOTATION.
28. `boolean isXmlNCName()`: Returns whether the element is an XML NCName.
29. `boolean isXmlNMTOKEN()`: Returns whether the element is an XML NMTOKEN.
30. `boolean isXmlNMTOKENS()`: Returns whether the element is an XML NMTOKENS.
31. `boolean isXmlLanguage()`: Returns whether the element is an XML language.
32. `boolean isXmlBase()`: Returns whether the element is an XML base.
33. `boolean isXmlSpace()`: Returns whether the element is an XML space.
34. `boolean isXmlAnyNamespace()`: Returns whether the element is an XML any namespace.
35. `boolean isXmlAnyLocal()`: Returns whether the element is an XML any local.
36. `boolean isXmlAnyLocalName()`: Returns whether the element is an XML any local name.
37. `boolean isXmlAnyQName()`: Returns whether the element is an XML any QName.
38. `boolean isXmlAnyURI()`: Returns whether the element is an XML any URI.
39. `boolean isXmlAnyLocalOrQName()`: Returns whether the element is an XML any local or QName.
40. `boolean isXmlAnyUnqualified()`: Returns whether the element is an XML any unqualified.
41. `boolean isXmlAnyUnqualifiedName()`: Returns whether the element is an XML any unqualified name.
42. `boolean isXmlAnyUnqualifiedLocalName()`: Returns whether the element is an XML any unqualified local name.
43. `boolean isXmlAnyUnqualifiedLocalOrQName()`: Returns whether the element is an XML any unqualified local or QName.
44. `boolean isXmlAnyUnqualifiedURI()`: Returns whether the element is an XML any unqualified URI.
45. `boolean isXmlAnyUnqualifiedLocalOrURI()`: Returns whether the element is an XML any unqualified local or URI.
46. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
47. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
48. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
49. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
50. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
51. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
52. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
53. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
54. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
55. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
56. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
57. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
58. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
59. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
60. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
61. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
62. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
63. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
64. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local or QName or URI.
65. `boolean isXmlAnyUnqualifiedLocalOrQNameOrURI()`: Returns whether the element is an XML any unqualified local
================================================================

Sample: 3 XmlElementRef.DEFAULT
----------------------------------------------------------------

@@ Context
Here is the description of the package Defines annotations for customizing Java program elements to XML Schema mapping.
Here is the description of the class Used in XmlElementRef.type() to signal that the type be inferred from the signature of the property.

@@ Instruction
I want to use javax.xml.bind.annotation.XmlElementRef.DEFAULT package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isDefault()`: This method returns true if the default value is used.

2. `boolean isNillable()`: This method returns true if the element is nillable.

3. `String name()`: This method returns the name of the element.

4. `String namespace()`: This method returns the namespace of the element.

5. `String type()`: This method returns the type of the element.
================================================================

Sample: 4 XmlSchemaType.DEFAULT
----------------------------------------------------------------

@@ Context
Here is the description of the package Defines annotations for customizing Java program elements to XML Schema mapping.
Here is the description of the class Used in XmlSchemaType.type() to signal that the type be inferred from the signature of the property.

@@ Instruction
I want to use javax.xml.bind.annotation.XmlSchemaType.DEFAULT package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public static final XmlSchemaType DEFAULT`: This is a constant that represents the default schema type.

2. `public static XmlSchemaType fromValue(String v)`: This method returns the XmlSchemaType corresponding to the value v.

3. `public String value()`: This method returns the value of this XmlSchemaType.

4. `public static XmlSchemaType fromString(String value)`: This method returns the XmlSchemaType corresponding to the string value.

5. `public static XmlSchemaType fromNamespaceAndName(String namespaceURI, String localPart)`: This method returns the XmlSchemaType corresponding to the namespace URI and local part.
================================================================

Sample: 5 XmlType.DEFAULT
----------------------------------------------------------------

@@ Context
Here is the description of the package Defines annotations for customizing Java program elements to XML Schema mapping.
Here is the description of the class Used in XmlType.factoryClass() to signal that either factory mehod is not used or that it's in the class with this XmlType itself.

@@ Instruction
I want to use javax.xml.bind.annotation.XmlType.DEFAULT package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isDefault()`: This method returns true if the XmlType is the default type.

2. `boolean isNillable()`: This method returns true if the XML element is nillable.

3. `String name()`: This method returns the name of the XML type.

4. `String namespace()`: This method returns the namespace of the XML type.

5. `String propOrder()`: This method returns the property order of the XML type.

6. `String ref()`: This method returns the reference of the XML type.

7. `String type()`: This method returns the type of the XML type.

8. `String use()`: This method returns the use of the XML type.

9. `String wrapperName()`: This method returns the wrapper name of the XML type.

10. `String wrapperNamespace()`: This method returns the wrapper namespace of the XML type.
================================================================

