Sample: 0 DnDConstants
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class This class contains constant values representing the type of action(s) to be performed by a Drag and Drop operation.

@@ Instruction
I want to use java.awt.dnd.DnDConstants package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public static final int ACTION_COPY`: This method returns the action constant for a copy operation.
2. `public static final int ACTION_MOVE`: This method returns the action constant for a move operation.
3. `public static final int ACTION_REFERENCE`: This method returns the action constant for a reference operation.
4. `public static final int ACTION_NONE`: This method returns the action constant for no operation.
5. `public static final int ACTION_LINK`: This method returns the action constant for a link operation.
================================================================

Sample: 1 DragGestureEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class A DragGestureEvent is passed to DragGestureListener's dragGestureRecognized() method when a particular DragGestureRecognizer detects that a platform dependent drag initiating gesture has occurred on the Component that it is tracking.

@@ Instruction
I want to use java.awt.dnd.DragGestureEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DragGestureEvent(Component source, int id, long when)`: This constructor creates a new DragGestureEvent object.

2. `Component getSource()`: This method returns the Component that initiated the drag gesture.

3. `int getID()`: This method returns the ID of the drag gesture.

4. `long getWhen()`: This method returns the time when the drag gesture occurred.

5. `void consume()`: This method consumes the drag gesture event.
================================================================

Sample: 2 DragGestureRecognizer
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DragGestureRecognizer is an abstract base class for the specification of a platform-dependent listener that can be associated with a particular Component in order to identify platform-dependent drag initiating gestures.

@@ Instruction
I want to use java.awt.dnd.DragGestureRecognizer package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void dragGestureRecognized(DragGestureEvent dge)`: This method is called when a drag gesture is recognized.

2. `public void dragGestureRecognitionEnded(DragGestureEvent dge)`: This method is called when the drag gesture recognition ends.

3. `public void dragGestureRecognitionStarted(DragGestureEvent dge)`: This method is called when the drag gesture recognition starts.

4. `public void dragGestureUpdated(DragGestureEvent dge)`: This method is called when the drag gesture is updated.

5. `public void dragMouseMoved(DragGestureEvent dge)`: This method is called when the mouse is moved during a drag gesture.
================================================================

Sample: 3 DragSource
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DragSource is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios: 1 default instance per JVM for the lifetime of that JVM.

@@ Instruction
I want to use java.awt.dnd.DragSource package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void createDefaultDragGestureRecognizer(DragGestureRecognizer dgr)`: This method creates a default drag gesture recognizer.

2. `public void createDefaultDragGestureRecognizer(DragGestureRecognizer dgr, int flags)`: This method creates a default drag gesture recognizer with the specified flags.

3. `public void startDrag(DragSourceContext dsc, DragGestureEvent dge, int actionMask)`: This method starts a drag operation.

4. `public void startDrag(DragSourceContext dsc, DragGestureEvent dge, int actionMask, int modifiers)`: This method starts a drag operation with the specified modifiers.

5. `public void startDrag(DragSourceContext dsc, DragGestureEvent dge, int actionMask, int modifiers, int buttonMask)`: This method starts a drag operation with the specified modifiers and button mask.
================================================================

Sample: 4 DragSourceAdapter
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class An abstract adapter class for receiving drag source events.

@@ Instruction
I want to use java.awt.dnd.DragSourceAdapter package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void dragEnter(DragSourceDragEvent dsde)`: This method is called when the dragged object enters the drop target.
2. `public void dragOver(DragSourceDragEvent dsde)`: This method is called when the dragged object is moved over the drop target.
3. `public void dropActionChanged(DragSourceDragEvent dsde)`: This method is called when the user changes the drop action.
4. `public void dragExit(DragSourceEvent dse)`: This method is called when the dragged object exits the drop target.
5. `public void drop(DragSourceDropEvent dsde)`: This method is called when the dragged object is dropped on the drop target.
================================================================

Sample: 5 DragSourceContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DragSourceContext class is responsible for managing the initiator side of the Drag and Drop protocol.

@@ Instruction
I want to use java.awt.dnd.DragSourceContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void startDrag(DragSourceContext dsContext, Transferable t, int action)`: This method starts the drag operation.
2. `public void drag(DragSourceContext dsContext, Transferable t, int action)`: This method updates the drag operation.
3. `public void drop(DragSourceContext dsContext, Transferable t, int action)`: This method ends the drag operation.
4. `public void dragExit(DragSourceContext dsContext)`: This method is called when the drag source leaves the drop target.
5. `public void dragOver(DragSourceContext dsContext)`: This method is called when the drag source is over the drop target.
================================================================

Sample: 6 DragSourceDragEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DragSourceDragEvent is delivered from the DragSourceContextPeer, via the DragSourceContext, to the DragSourceListener registered with that DragSourceContext and with its associated DragSource.

@@ Instruction
I want to use java.awt.dnd.DragSourceDragEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public DragSourceDragEvent(DragSourceContext dsContext, int action, int x, int y, int modifiers)`: This constructor creates a DragSourceDragEvent object with the specified DragSourceContext, action, x-coordinate, y-coordinate, and modifiers.

2. `public int getX()`: This method returns the x-coordinate of the mouse pointer when the drag operation was initiated.

3. `public int getY()`: This method returns the y-coordinate of the mouse pointer when the drag operation was initiated.

4. `public int getModifiers()`: This method returns the modifier keys that were pressed when the drag operation was initiated.

5. `public int getAction()`: This method returns the action that was performed when the drag operation was initiated.
================================================================

Sample: 7 DragSourceDropEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DragSourceDropEvent is delivered from the DragSourceContextPeer, via the DragSourceContext, to the dragDropEnd method of DragSourceListeners registered with that DragSourceContext and with its associated DragSource.

@@ Instruction
I want to use java.awt.dnd.DragSourceDropEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DragSourceDropEvent(DragSourceContext sourceContext, int dropAction, int x, int y, boolean isDropTarget)`: This constructor creates a new DragSourceDropEvent object.

2. `DragSourceContext getSourceContext()`: This method returns the DragSourceContext object associated with this event.

3. `int getDropAction()`: This method returns the action that the user has requested for the drop operation.

4. `int getX()`: This method returns the x-coordinate of the drop location.

5. `int getY()`: This method returns the y-coordinate of the drop location.

6. `boolean isDropTarget()`: This method returns true if the drop location is a valid drop target.
================================================================

Sample: 8 DragSourceEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class This class is the base class for DragSourceDragEvent and DragSourceDropEvent.

@@ Instruction
I want to use java.awt.dnd.DragSourceEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public DragSourceEvent(DragSourceContext dsctx, int id, int action, int modifiers, int x, int y, int dropAction)`: This constructor creates a DragSourceEvent object with the specified parameters.

2. `public int getAction()`: This method returns the action that caused the DragSourceEvent.

3. `public DragSourceContext getDragSourceContext()`: This method returns the DragSourceContext associated with this DragSourceEvent.

4. `public int getDropAction()`: This method returns the drop action that was requested by the drop target.

5. `public int getModifiers()`: This method returns the modifier keys that were pressed when the event occurred.
================================================================

Sample: 9 DropTarget
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DropTarget is associated with a Component when that Component wishes to accept drops during Drag and Drop operations.

@@ Instruction
I want to use java.awt.dnd.DropTarget package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public DropTarget(Component target, DropTargetListener listener)`: This constructor creates a new DropTarget for the specified Component and DropTargetListener.

2. `public void drop(DropTargetDropEvent dtde)`: This method is called when a drop operation is initiated.

3. `public void dragEnter(DropTargetDragEvent dtde)`: This method is called when a drag enters the DropTarget.

4. `public void dragOver(DropTargetDragEvent dtde)`: This method is called when a drag is over the DropTarget.

5. `public void dropActionChanged(DropTargetDragEvent dtde)`: This method is called when the drop action changes.
================================================================

Sample: 10 DropTarget.DropTargetAutoScroller
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class this protected nested class implements autoscrolling

@@ Instruction
I want to use java.awt.dnd.DropTarget.DropTargetAutoScroller package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void drop(DropTargetDropEvent dtde)`: This method is called when a drop operation is initiated.
2. `public void dragEnter(DropTargetDragEvent dtde)`: This method is called when the drag enters the drop target.
3. `public void dragOver(DropTargetDragEvent dtde)`: This method is called when the drag is over the drop target.
4. `public void dragExit(DropTargetEvent dte)`: This method is called when the drag exits the drop target.
5. `public void dropActionChanged(DropTargetDragEvent dtde)`: This method is called when the drop action changes.
================================================================

Sample: 11 DropTargetAdapter
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class An abstract adapter class for receiving drop target events.

@@ Instruction
I want to use java.awt.dnd.DropTargetAdapter package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void drop(DropTargetDropEvent dtde)`: This method is called when a drop operation is requested.
2. `public void dragEnter(DropTargetDragEvent dtde)`: This method is called when the dragged data enters the drop target.
3. `public void dragOver(DropTargetDragEvent dtde)`: This method is called when the dragged data is moved over the drop target.
4. `public void dragExit(DropTargetEvent dte)`: This method is called when the dragged data exits the drop target.
5. `public void dropActionChanged(DropTargetDragEvent dtde)`: This method is called when the drop action changes.
================================================================

Sample: 12 DropTargetContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class A DropTargetContext is created whenever the logical cursor associated with a Drag and Drop operation coincides with the visible geometry of a Component associated with a DropTarget.

@@ Instruction
I want to use java.awt.dnd.DropTargetContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public DropTargetContext(DropTarget dt, Component c)`: This constructor creates a new DropTargetContext for the specified DropTarget and Component.

2. `public void dropComplete(boolean drop)`: This method is called when the drop operation is completed.

3. `public void dropEnter(DropTargetDragEvent dtde)`: This method is called when the drop operation enters the target.

4. `public void dropExit(DropTargetEvent dte)`: This method is called when the drop operation exits the target.

5. `public void drop(DropTargetDropEvent dtde)`: This method is called when the drop operation is performed.
================================================================

Sample: 13 DropTargetDragEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DropTargetDragEvent is delivered to a DropTargetListener via its dragEnter() and dragOver() methods.

@@ Instruction
I want to use java.awt.dnd.DropTargetDragEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int getDropAction()`: This method returns the action that the user has requested for the drop operation.

2. `public java.awt.datatransfer.Transferable getTransferable()`: This method returns the Transferable object that is being dragged.

3. `public java.awt.Point getLocation()`: This method returns the location of the mouse pointer when the drag operation was initiated.

4. `public void consumeDrag(int action)`: This method consumes the specified drag action.

5. `public void resetDragDistance()`: This method resets the drag distance to its initial value.
================================================================

Sample: 14 DropTargetDropEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DropTargetDropEvent is delivered via the DropTargetListener drop() method.

@@ Instruction
I want to use java.awt.dnd.DropTargetDropEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DropTargetDropEvent(java.awt.datatransfer.DropTargetContext context, int dropAction)`: This constructor creates a new DropTargetDropEvent object with the specified context and drop action.

2. `int getDropAction()`: This method returns the action that was performed when the drop occurred.

3. `java.awt.datatransfer.Transferable getTransferable()`: This method returns the Transferable object that was transferred during the drop operation.

4. `java.awt.datatransfer.DataFlavor[] getDataFlavors()`: This method returns an array of DataFlavor objects that represent the flavors of data that were transferred during the drop operation.

5. `boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor flavor)`: This method returns true if the specified DataFlavor is supported by the Transferable object that was transferred during the drop operation.
================================================================

Sample: 15 DropTargetEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class The DropTargetEvent is the base class for both the DropTargetDragEvent and the DropTargetDropEvent.

@@ Instruction
I want to use java.awt.dnd.DropTargetEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public DropTargetEvent(DropTargetContext context, DropTargetDragEvent dte)`: This constructor is used to create a DropTargetEvent object from a DropTargetContext and a DropTargetDragEvent.

2. `public DropTargetEvent(DropTargetContext context, DropTargetDropEvent dte)`: This constructor is used to create a DropTargetEvent object from a DropTargetContext and a DropTargetDropEvent.

3. `public DropTargetContext getDropTargetContext()`: This method returns the DropTargetContext associated with this DropTargetEvent.

4. `public DropTargetDragEvent getDropTargetDragEvent()`: This method returns the DropTargetDragEvent associated with this DropTargetEvent.

5. `public DropTargetDropEvent getDropTargetDropEvent()`: This method returns the DropTargetDropEvent associated with this DropTargetEvent.
================================================================

Sample: 16 MouseDragGestureRecognizer
----------------------------------------------------------------

@@ Context
Here is the description of the package Drag and Drop is a direct manipulation gesture found in many GraphicalUser Interface systems that provides a mechanism to transferinformation between two entities logically associated with presentationelements in the GUI.
Here is the description of the class This abstract subclass of DragGestureRecognizer defines a DragGestureRecognizer for mouse-based gestures.

@@ Instruction
I want to use java.awt.dnd.MouseDragGestureRecognizer package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public boolean canDecode(DropTargetContext context)`: This method returns true if the DragGestureRecognizer can decode the specified DropTargetContext.

2. `public void dragEnter(DropTargetContext context)`: This method is called when the DragGestureRecognizer enters the specified DropTargetContext.

3. `public void dragExit(DropTargetContext context)`: This method is called when the DragGestureRecognizer exits the specified DropTargetContext.

4. `public void dragOver(DropTargetContext context)`: This method is called when the DragGestureRecognizer is over the specified DropTargetContext.

5. `public void dropActionChanged()`: This method is called when the action of the drag operation changes.
================================================================

