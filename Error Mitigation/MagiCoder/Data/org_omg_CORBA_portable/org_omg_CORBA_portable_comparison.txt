Sample: 0 Delegate
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides a portability layer, that is, a set of ORB APIsthat makes it possible for code generatedby one vendor to run on another vendor's ORB.
Here is the description of the class Specifies a portable API for ORB-vendor-specific implementation of the org.omg.CORBA.Object methods.

@@ Instruction
I want to use org.omg.CORBA.portable.Delegate package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean equals(Object obj)`: Compares the specified object with this list for equality.
2. `int hashCode()`: Returns the hash code value for this list.
3. `E get(int index)`: Returns the element at the specified position in this list.
4. `int indexOf(Object o)`: Returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
5. `E remove(int index)`: Removes the element at the specified position in this list.
6. `E set(int index, E element)`: Replaces the element at the specified position in this list with the specified element.
7. `int size()`: Returns the number of elements in this list.
8. `ListIterator<E> listIterator(int index)`: Returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
9. `boolean addAll(Collection<? extends E> c)`: Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
10. `void clear()`: Removes all of the elements from this list.
11. `boolean contains(Object o)`: Returns true if this list contains the specified element.
12. `boolean containsAll(Collection<?> c)`: Returns true if this list contains all of the elements of the specified collection.
13. `boolean isEmpty()`: Returns true if this list contains no elements.
14. `boolean remove(Object o)`: Removes the first occurrence of the specified element from this list, if it is present.
15. `boolean removeAll(Collection<?> c)`: Removes from this list all of its elements that are contained in the specified collection.
16. `boolean retainAll(Collection<?> c)`: Retains only the elements in this list that are contained in the specified collection.
17. `Object[] toArray()`: Returns an array containing all of the elements in this list in proper sequence (from first to last element).
18. `<T> T[] toArray(T[] a)`: Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
19. `boolean add(E e)`: Appends the specified element to the end of this list.
20. `boolean addAll(int index, Collection<? extends E> c)`: Inserts all of the elements in the specified collection into this list, starting at the specified position.
21. `boolean removeAll(Collection<?> c)`: Removes from this list all of its elements that are contained in the specified collection.
22. `boolean retainAll(Collection<?> c)`: Retains only the elements in this list that are contained in the specified collection.
23. `ListIterator<E> listIterator()`: Returns a list-iterator of the elements in this list (in proper sequence).
24. `List<E> subList(int fromIndex, int toIndex)`: Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 1 InputStream
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides a portability layer, that is, a set of ORB APIsthat makes it possible for code generatedby one vendor to run on another vendor's ORB.
Here is the description of the class InputStream is the Java API for reading IDL types from CDR marshal streams.

@@ Instruction
I want to use org.omg.CORBA.portable.InputStream package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `read_boolean()`: This method reads a boolean value from the input stream.
2. `read_char()`: This method reads a char value from the input stream.
3. `read_octet()`: This method reads an octet value from the input stream.
4. `read_short()`: This method reads a short value from the input stream.
5. `read_long()`: This method reads a long value from the input stream.
6. `read_float()`: This method reads a float value from the input stream.
7. `read_double()`: This method reads a double value from the input stream.
8. `read_longdouble()`: This method reads a long double value from the input stream.
9. `read_wchar()`: This method reads a wide character value from the input stream.
10. `read_wstring()`: This method reads a wide string value from the input stream.
11. `read_fixed()`: This method reads a fixed-point value from the input stream.
12. `read_string()`: This method reads a string value from the input stream.
13. `read_sequence()`: This method reads a sequence value from the input stream.
14. `read_array()`: This method reads an array value from the input stream.
15. `read_longlong()`: This method reads a long long value from the input stream.
16. `read_ulonglong()`: This method reads an unsigned long long value from the input stream.
17. `read_longlonglong()`: This method reads a long long long value from the input stream.
18. `read_ulonglonglong()`: This method reads an unsigned long long long value from the input stream.
19. `read_longdoublelong()`: This method reads a long double long value from the input stream.
20. `read_longlongdouble()`: This method reads a long long double value from the input stream.
21. `read_longlonglongdouble()`: This method reads a long long long double value from the input stream.
22. `read_longlonglonglongdouble()`: This method reads a long long long long double value from the input stream.
23. `read_longlonglonglonglongdouble()`: This method reads a long long long long long double value from the input stream.
24. `read_longlonglonglonglonglongdouble()`: This method reads a long long long long long long double value from the input stream.
25. `read_longlonglonglonglonglonglongdouble()`: This method reads a long long long long long long long double value from the input stream.
26. `read_longlonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long double value from the input stream.
27. `read_longlonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long double value from the input stream.
28. `read_longlonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long double value from the input stream.
29. `read_longlonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long double value from the input stream.
30. `read_longlonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long double value from the input stream.
31. `read_longlonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long double value from the input stream.
32. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long double value from the input stream.
33. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long double value from the input stream.
34. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long double value from the input stream.
35. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long double value from the input stream.
36. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long double value from the input stream.
37. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long double value from the input stream.
38. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long double value from the input stream.
39. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
40. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
41. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
42. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
43. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
44. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
45. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long long long long long long long long long long long long long long long long long long long long long long long long long long long double value from the input stream.
46. `read_longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongdouble()`: This method reads a long
================================================================

Sample: 2 ObjectImpl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides a portability layer, that is, a set of ORB APIsthat makes it possible for code generatedby one vendor to run on another vendor's ORB.
Here is the description of the class The common base class for all stub classes; provides default implementations of the org.omg.CORBA.Object methods.

@@ Instruction
I want to use org.omg.CORBA.portable.ObjectImpl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean equals(Object obj)`: Compares this object to the specified object.
2. `int hashCode()`: Returns a hash code value for the object.
3. `String toString()`: Returns a string representation of the object.
4. `void notify()`: Wakes up a single thread that is waiting on this object's monitor.
5. `void notifyAll()`: Wakes up all threads that are waiting on this object's monitor.
================================================================

Sample: 3 OutputStream
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides a portability layer, that is, a set of ORB APIsthat makes it possible for code generatedby one vendor to run on another vendor's ORB.
Here is the description of the class OuputStream is the Java API for writing IDL types to CDR marshal streams.

@@ Instruction
I want to use org.omg.CORBA.portable.OutputStream package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void write_boolean(boolean b)`: Writes a boolean value to the output stream.
2. `void write_char(char c)`: Writes a char value to the output stream.
3. `void write_octet(byte b)`: Writes an octet value to the output stream.
4. `void write_short(short s)`: Writes a short value to the output stream.
5. `void write_long(long l)`: Writes a long value to the output stream.
6. `void write_float(float f)`: Writes a float value to the output stream.
7. `void write_double(double d)`: Writes a double value to the output stream.
8. `void write_longlong(long l)`: Writes a long long value to the output stream.
9. `void write_ulong(long l)`: Writes an unsigned long value to the output stream.
10. `void write_ulonglong(long l)`: Writes an unsigned long long value to the output stream.
11. `void write_string(String s)`: Writes a string value to the output stream.
12. `void write_wstring(String s)`: Writes a wide string value to the output stream.
13. `void write_fixed(byte[] b)`: Writes a fixed value to the output stream.
14. `void write_fixed(byte[] b, int offset, int length)`: Writes a fixed value to the output stream.
15. `void write_fixed(byte[] b, int offset, int length, int byte_order)`: Writes a fixed value to the output stream.
16. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order)`: Writes a fixed value to the output stream.
17. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding)`: Writes a fixed value to the output stream.
18. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding)`: Writes a fixed value to the output stream.
19. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align)`: Writes a fixed value to the output stream.
20. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align, int element_align)`: Writes a fixed value to the output stream.
21. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align, int element_align, int byte_order_endian)`: Writes a fixed value to the output stream.
22. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align, int element_align, int byte_order_endian, int element_byte_order_endian)`: Writes a fixed value to the output stream.
23. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align, int element_align, int byte_order_endian, int element_byte_order_endian, int element_align_endian)`: Writes a fixed value to the output stream.
24. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align, int element_align, int byte_order_endian, int element_byte_order_endian, int element_align_endian, int element_align_endian)`: Writes a fixed value to the output stream.
25. `void write_fixed(byte[] b, int offset, int length, int byte_order, int element_byte_order, int padding, int element_padding, int align, int element_align, int byte_order_endian, int element_byte_order_endian, int element_align_endian, int element_align_endian, int element_align_endian)`: Writes a fixed value to the output stream.
================================================================

Sample: 4 ServantObject
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides a portability layer, that is, a set of ORB APIsthat makes it possible for code generatedby one vendor to run on another vendor's ORB.
Here is the description of the class This class is part of the local stub API, the purpose of which is to provide high performance calls for collocated clients and servers (i.e.

@@ Instruction
I want to use org.omg.CORBA.portable.ServantObject package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void _invoke(org.omg.CORBA.Request request, org.omg.CORBA.InvokeHandler handler)`: This method is used to invoke a method on the servant.

2. `org.omg.CORBA.portable.Streamable create_streamable()`: This method is used to create a Streamable object.

3. `org.omg.CORBA.portable.Streamable create_streamable(org.omg.CORBA.portable.InputStream istream)`: This method is used to create a Streamable object with an input stream.

4. `org.omg.CORBA.portable.Streamable create_streamable(org.omg.CORBA.portable.OutputStream ostream)`: This method is used to create a Streamable object with an output stream.

5. `org.omg.CORBA.portable.Streamable create_streamable(org.omg.CORBA.portable.InputStream istream, org.omg.CORBA.portable.OutputStream ostream)`: This method is used to create a Streamable object with an input and output stream.
================================================================

