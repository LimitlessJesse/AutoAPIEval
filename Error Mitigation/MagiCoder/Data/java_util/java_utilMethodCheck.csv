Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,AbstractCollection,1,boolean add(E e),True,Ensures that this collection contains the specified element (optional operation).
0,AbstractCollection,2,boolean addAll(Collection<? extends E> c),True,Adds all of the elements in the specified collection to this collection (optional operation).
0,AbstractCollection,3,void clear(),True,Removes all of the elements from this collection (optional operation).
0,AbstractCollection,4,boolean contains(Object o),True,Returns true if this collection contains the specified element.
0,AbstractCollection,5,boolean containsAll(Collection<?> c),True,Returns true if this collection contains all of the elements in the specified collection.
1,AbstractList,1,boolean add(E e),True,Appends the specified element to the end of this list (optional operation).
1,AbstractList,2,E get(int index),True,Returns the element at the specified position in this list.
1,AbstractList,3,"E set(int index, E element)",True,Replaces the element at the specified position in this list with the specified element (optional operation).
1,AbstractList,4,int size(),False,NULL
1,AbstractList,5,boolean isEmpty(),False,NULL
2,AbstractMap,1,"AbstractMap.SimpleEntry<K,V> entry(K key, V value)",False,NULL
2,AbstractMap,2,boolean equals(Object o),True,Compares the specified object with this map for equality.
2,AbstractMap,3,int hashCode(),True,Returns the hash code value for this map.
2,AbstractMap,4,boolean isEmpty(),True,Returns true if this map contains no key-value mappings.
2,AbstractMap,5,"Set<Map.Entry<K,V>> entrySet()",True,Returns a Set view of the mappings contained in this map.
3,AbstractMap.SimpleEntry,1,boolean equals(Object o),True,Compares the specified object with this entry for equality.
3,AbstractMap.SimpleEntry,2,int hashCode(),True,Returns the hash code value for this map entry.
3,AbstractMap.SimpleEntry,3,E getKey(),False,NULL
3,AbstractMap.SimpleEntry,4,E getValue(),False,NULL
3,AbstractMap.SimpleEntry,5,E setValue(E value),False,NULL
4,AbstractMap.SimpleImmutableEntry,1,V getValue(),True,Returns the value corresponding to this entry.
4,AbstractMap.SimpleImmutableEntry,2,K getKey(),True,Returns the key corresponding to this entry.
4,AbstractMap.SimpleImmutableEntry,3,V setValue(V value),True,Replaces the value corresponding to this entry with the specified value (optional operation).
4,AbstractMap.SimpleImmutableEntry,4,boolean equals(Object o),True,Compares the specified object with this entry for equality.
4,AbstractMap.SimpleImmutableEntry,5,int hashCode(),True,Returns the hash code value for this map entry.
5,AbstractQueue,1,boolean add(E e),True,"Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning true upon success and throwing an IllegalStateException if no space is currently available."
5,AbstractQueue,2,E remove(),True,Retrieves and removes the head of this queue.
5,AbstractQueue,3,E peek(),False,NULL
5,AbstractQueue,4,boolean offer(E e),False,NULL
5,AbstractQueue,5,E poll(),False,NULL
6,AbstractSequentialList,1,E get(int index),True,Returns the element at the specified position in this list.
6,AbstractSequentialList,2,"E set(int index, E element)",True,Replaces the element at the specified position in this list with the specified element (optional operation).
6,AbstractSequentialList,3,"void add(int index, E element)",True,Inserts the specified element at the specified position in this list (optional operation).
6,AbstractSequentialList,4,E remove(int index),True,Removes the element at the specified position in this list (optional operation).
6,AbstractSequentialList,5,int size(),False,NULL
7,AbstractSet,1,boolean add(E e),False,NULL
7,AbstractSet,2,boolean addAll(Collection<? extends E> c),False,NULL
7,AbstractSet,3,void clear(),False,NULL
7,AbstractSet,4,boolean contains(Object o),False,NULL
7,AbstractSet,5,boolean isEmpty(),False,NULL
8,ArrayDeque,1,boolean add(E e),True,Inserts the specified element at the end of this deque.
8,ArrayDeque,2,boolean offer(E e),True,Inserts the specified element at the end of this deque.
8,ArrayDeque,3,boolean offerFirst(E e),True,Inserts the specified element at the front of this deque.
8,ArrayDeque,4,boolean offerLast(E e),True,Inserts the specified element at the end of this deque.
8,ArrayDeque,5,E remove(),True,Retrieves and removes the head of the queue represented by this deque.
9,ArrayList,1,boolean add(E e),True,Appends the specified element to the end of this list.
9,ArrayList,2,"void add(int index, E element)",True,Inserts the specified element at the specified position in this list.
9,ArrayList,3,boolean addAll(Collection<? extends E> c),True,"Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator."
9,ArrayList,4,E get(int index),True,Returns the element at the specified position in this list.
9,ArrayList,5,E remove(int index),True,Removes the element at the specified position in this list.
10,Arrays,1,"boolean equals(Object a, Object b)",False,NULL
10,Arrays,2,"void fill(int[] a, int val)",True,Assigns the specified int value to each element of the specified array of ints.
10,Arrays,3,void sort(int[] a),True,Sorts the specified array into ascending numerical order.
10,Arrays,4,"int binarySearch(int[] a, int key)",True,Searches the specified array of ints for the specified value using the binary search algorithm.
10,Arrays,5,int hashCode(Object a),False,NULL
11,Base64,1,byte[] getDecoder().decode(String s),False,NULL
11,Base64,2,"byte[] getDecoder().decode(String s, int off, int len)",False,NULL
11,Base64,3,String getEncoder().encodeToString(byte[] src),False,NULL
11,Base64,4,byte[] getEncoder().encode(byte[] src),False,NULL
11,Base64,5,"byte[] getEncoder().encode(byte[] src, int off, int len)",False,NULL
12,Base64.Decoder,1,Base64.Decoder getDecoder(),False,NULL
12,Base64.Decoder,2,byte[] decode(String s),True,Decodes a Base64 encoded String into a newly-allocated byte array using the Base64 encoding scheme.
12,Base64.Decoder,3,byte[] decodeBuffer(String s),False,NULL
12,Base64.Decoder,4,"byte[] decodeBuffer(byte[] src, int offset, int len)",False,NULL
12,Base64.Decoder,5,byte[] decode(byte[] src),True,"Decodes all bytes from the input byte array using the Base64 encoding scheme, writing the results into a newly-allocated output byte array."
13,Base64.Encoder,1,Base64.Encoder getInstance(),False,NULL
13,Base64.Encoder,2,byte[] encode(byte[] src),True,Encodes all bytes from the specified byte array into a newly-allocated byte array using the Base64 encoding scheme.
13,Base64.Encoder,3,"byte[] encode(byte[] src, int off, int len)",False,NULL
13,Base64.Encoder,4,"int encode(byte[] src, OutputStream out)",False,NULL
13,Base64.Encoder,5,"int encode(byte[] src, int off, int len, OutputStream out)",False,NULL
14,BitSet,1,boolean get(int index),True,Returns the value of the bit with the specified index.
14,BitSet,2,void set(int index),True,Sets the bit at the specified index to true.
14,BitSet,3,void clear(int index),True,Sets the bit specified by the index to false.
14,BitSet,4,int cardinality(),True,Returns the number of bits set to true in this BitSet.
14,BitSet,5,int length(),True,"Returns the ""logical size"" of this BitSet: the index of the highest set bit in the BitSet plus one."
15,Calendar,1,int get(int field),True,Returns the value of the given calendar field.
15,Calendar,2,"void set(int year, int month, int date)",True,"Sets the values for the calendar fields YEAR, MONTH, and DAY_OF_MONTH."
15,Calendar,3,"void add(int field, int amount)",True,"Adds or subtracts the specified amount of time to the given calendar field, based on the calendar's rules."
15,Calendar,4,"void roll(int field, boolean up)",True,Adds or subtracts (up/down) a single unit of time on the given time field without changing larger fields.
15,Calendar,5,Date getTime(),True,"Returns a Date object representing this Calendar's time value (millisecond offset from the Epoch"")."
16,Calendar.Builder,1,"Calendar.Builder setDate(int year, int month, int date)",True,"Sets the date field parameters to the values given by year, month, and dayOfMonth."
16,Calendar.Builder,2,"Calendar.Builder setTime(int hourOfDay, int minute, int second)",False,NULL
16,Calendar.Builder,3,Calendar.Builder setTimeZone(TimeZone value),True,Sets the time zone parameter to the given zone.
16,Calendar.Builder,4,"Calendar.Builder setWeekDate(int weekYear, int weekOfYear, int dayOfWeek)",True,"Sets the week-based date parameters to the values with the given date specifiers - week year, week of year, and day of week."
16,Calendar.Builder,5,Calendar.Builder setWeekYear(int weekYear),False,NULL
17,Collections,1,boolean add(E e),False,NULL
17,Collections,2,void addAll(Collection<? extends E> c),False,NULL
17,Collections,3,void copy(List<? super E> dest),False,NULL
17,Collections,4,void sort(List<E> list),False,NULL
17,Collections,5,void shuffle(List<?> list),True,Randomly permutes the specified list using a default source of randomness.
18,Currency,1,Currency getInstance(String currencyCode),True,Returns the Currency instance for the given currency code.
18,Currency,2,String getCurrencyCode(),True,Gets the ISO 4217 currency code of this currency.
18,Currency,3,String getDisplayName(),True,Gets the name that is suitable for displaying this currency for the default DISPLAY locale.
18,Currency,4,String getSymbol(),True,Gets the symbol of this currency for the default DISPLAY locale.
18,Currency,5,int getDefaultFractionDigits(),True,Gets the default number of fraction digits used with this currency.
19,Date,1,Date(),False,NULL
19,Date,2,getTime(),False,NULL
19,Date,3,setTime(long time),False,NULL
19,Date,4,compareTo(Date anotherDate),False,NULL
19,Date,5,after(Date when),False,NULL
19,Date,6,before(Date when),False,NULL
19,Date,7,equals(Object obj),False,NULL
19,Date,8,hashCode(),False,NULL
19,Date,9,clone(),False,NULL
19,Date,10,toString(),False,NULL
20,Dictionary,1,boolean contains(Object o),False,NULL
20,Dictionary,2,Enumeration elements(),False,NULL
20,Dictionary,3,Object get(Object key),False,NULL
20,Dictionary,4,"Object put(Object key, Object value)",False,NULL
20,Dictionary,5,Object remove(Object key),False,NULL
21,DoubleSummaryStatistics,1,double getCount(),False,NULL
21,DoubleSummaryStatistics,2,double getSum(),True,"Returns the sum of values recorded, or zero if no values have been recorded."
21,DoubleSummaryStatistics,3,double getMin(),True,"Returns the minimum recorded value, Double.NaN if any recorded value was NaN or Double.POSITIVE_INFINITY if no values were recorded."
21,DoubleSummaryStatistics,4,double getMax(),True,"Returns the maximum recorded value, Double.NaN if any recorded value was NaN or Double.NEGATIVE_INFINITY if no values were recorded."
21,DoubleSummaryStatistics,5,double getAverage(),True,"Returns the arithmetic mean of values recorded, or zero if no values have been recorded."
22,EnumMap,1,boolean containsKey(Object key),True,Returns true if this map contains a mapping for the specified key.
22,EnumMap,2,boolean containsValue(Object value),True,Returns true if this map maps one or more keys to the specified value.
22,EnumMap,3,"Set<Map.Entry<K,V>> entrySet()",True,Returns a Set view of the mappings contained in this map.
22,EnumMap,4,V get(Object key),True,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
22,EnumMap,5,boolean isEmpty(),False,NULL
23,EnumSet,1,<E extends Enum<E>> EnumSet<E> allOf(Class<E> elementType),False,NULL
23,EnumSet,2,<E extends Enum<E>> EnumSet<E> noneOf(Class<E> elementType),False,NULL
23,EnumSet,3,"<E extends Enum<E>> EnumSet<E> range(E from, E to)",False,NULL
23,EnumSet,4,"<E extends Enum<E>> EnumSet<E> of(E e1, E... eN)",False,NULL
23,EnumSet,5,boolean add(E e),False,NULL
24,EventListenerProxy,1,boolean add(E e),False,NULL
24,EventListenerProxy,2,boolean addAll(Collection<? extends E> c),False,NULL
24,EventListenerProxy,3,void clear(),False,NULL
24,EventListenerProxy,4,boolean contains(Object o),False,NULL
24,EventListenerProxy,5,boolean containsAll(Collection<?> c),False,NULL
25,EventObject,1,EventObject(Object source),False,NULL
25,EventObject,2,Object getSource(),True,The object on which the Event initially occurred.
25,EventObject,3,void setSource(Object source),False,NULL
25,EventObject,4,String toString(),True,Returns a String representation of this EventObject.
25,EventObject,5,boolean equals(Object obj),False,NULL
26,FormattableFlags,1,boolean isPadded(),False,NULL
26,FormattableFlags,2,boolean isLeftJustified(),False,NULL
26,FormattableFlags,3,boolean isZeroPadded(),False,NULL
26,FormattableFlags,4,boolean isComplemented(),False,NULL
26,FormattableFlags,5,boolean isAlternate(),False,NULL
27,Formatter,1,Formatter(OutputStream out),False,NULL
27,Formatter,2,"Formatter(OutputStream out, Locale l)",False,NULL
27,Formatter,3,Formatter(Writer out),False,NULL
27,Formatter,4,"Formatter(Writer out, Locale l)",False,NULL
27,Formatter,5,Formatter(StringBuilder sb),False,NULL
27,Formatter,6,"Formatter(StringBuilder sb, Locale l)",False,NULL
27,Formatter,7,Formatter(StringBuffer sb),False,NULL
27,Formatter,8,"Formatter(StringBuffer sb, Locale l)",False,NULL
27,Formatter,9,Formatter(Appendable out),False,NULL
27,Formatter,10,"Formatter(Appendable out, Locale l)",False,NULL
27,Formatter,11,Formatter(PrintStream out),False,NULL
27,Formatter,12,"Formatter(PrintStream out, Locale l)",False,NULL
27,Formatter,13,Formatter(PrintWriter out),False,NULL
27,Formatter,14,"Formatter(PrintWriter out, Locale l)",False,NULL
27,Formatter,15,"Formatter(OutputStream out, String encoding)",False,NULL
27,Formatter,16,"Formatter(Writer out, String encoding)",False,NULL
27,Formatter,17,"Formatter(StringBuilder sb, String encoding)",False,NULL
27,Formatter,18,"Formatter(StringBuffer sb, String encoding)",False,NULL
27,Formatter,19,"Formatter(Appendable out, String encoding)",False,NULL
27,Formatter,20,"Formatter(PrintStream out, String encoding)",False,NULL
27,Formatter,21,"Formatter(PrintWriter out, String encoding)",False,NULL
28,GregorianCalendar,1,int get(int field),False,NULL
28,GregorianCalendar,2,"void set(int year, int month, int date)",False,NULL
28,GregorianCalendar,3,"void add(int field, int amount)",True,"Adds the specified (signed) amount of time to the given calendar field, based on the calendar's rules."
28,GregorianCalendar,4,Date getTime(),False,NULL
28,GregorianCalendar,5,void setTime(Date date),False,NULL
29,HashMap,1,boolean containsKey(Object key),True,Returns true if this map contains a mapping for the specified key.
29,HashMap,2,V get(Object key),True,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
29,HashMap,3,"V put(K key, V value)",True,Associates the specified value with the specified key in this map.
29,HashMap,4,V remove(Object key),True,Removes the mapping for the specified key from this map if present.
29,HashMap,5,int size(),True,Returns the number of key-value mappings in this map.
30,HashSet,1,boolean add(E e),True,Adds the specified element to this set if it is not already present.
30,HashSet,2,void clear(),True,Removes all of the elements from this set.
30,HashSet,3,boolean contains(Object o),True,Returns true if this set contains the specified element.
30,HashSet,4,boolean isEmpty(),True,Returns true if this set contains no elements.
30,HashSet,5,boolean remove(Object o),True,Removes the specified element from this set if it is present.
31,Hashtable,1,boolean contains(Object value),True,Tests if some key maps into the specified value in this hashtable.
31,Hashtable,2,boolean containsAll(Collection<?> c),False,NULL
31,Hashtable,3,Enumeration<E> elements(),False,NULL
31,Hashtable,4,E get(Object key),False,NULL
31,Hashtable,5,"E put(K key, V value)",False,NULL
32,IdentityHashMap,1,boolean containsKey(Object key),True,Tests whether the specified object reference is a key in this identity hash map.
32,IdentityHashMap,2,boolean containsValue(Object value),True,Tests whether the specified object reference is a value in this identity hash map.
32,IdentityHashMap,3,"Set<Map.Entry<K,V>> entrySet()",True,Returns a Set view of the mappings contained in this map.
32,IdentityHashMap,4,V get(Object key),True,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
32,IdentityHashMap,5,boolean isEmpty(),True,Returns true if this identity hash map contains no key-value mappings.
32,IdentityHashMap,6,"V put(K key, V value)",True,Associates the specified value with the specified key in this identity hash map.
32,IdentityHashMap,7,V remove(Object key),True,Removes the mapping for this key from this map if present.
32,IdentityHashMap,8,int size(),True,Returns the number of key-value mappings in this identity hash map.
32,IdentityHashMap,9,void clear(),True,Removes all of the mappings from this map.
32,IdentityHashMap,10,boolean equals(Object o),True,Compares the specified object with this map for equality.
32,IdentityHashMap,11,int hashCode(),True,Returns the hash code value for this map.
32,IdentityHashMap,12,"boolean putIfAbsent(K key, V value)",False,NULL
32,IdentityHashMap,13,"boolean replace(K key, V oldValue, V newValue)",False,NULL
32,IdentityHashMap,14,"V replace(K key, V value)",False,NULL
32,IdentityHashMap,15,"V merge(K key, V value, BiFunction<? super V,? super V,? extends V> remappingFunction)",False,NULL
32,IdentityHashMap,16,"void forEach(BiConsumer<? super K,? super V> action)",True,Performs the given action for each entry in this map until all entries have been processed or the action throws an exception.
32,IdentityHashMap,17,Set<K> keySet(),True,Returns an identity-based set view of the keys contained in this map.
32,IdentityHashMap,18,Collection<V> values(),True,Returns a Collection view of the values contained in this map.
32,IdentityHashMap,19,boolean containsKey(Object key),True,Tests whether the specified object reference is a key in this identity hash map.
32,IdentityHashMap,20,boolean containsValue(Object value),True,Tests whether the specified object reference is a value in this identity hash map.
33,IntSummaryStatistics,1,long getCount(),True,Returns the count of values recorded.
33,IntSummaryStatistics,2,double getAverage(),True,"Returns the arithmetic mean of values recorded, or zero if no values have been recorded."
33,IntSummaryStatistics,3,long getSum(),True,"Returns the sum of values recorded, or zero if no values have been recorded."
33,IntSummaryStatistics,4,int getMin(),True,"Returns the minimum value recorded, or Integer.MAX_VALUE if no values have been recorded."
33,IntSummaryStatistics,5,int getMax(),True,"Returns the maximum value recorded, or Integer.MIN_VALUE if no values have been recorded."
34,LinkedHashMap,1,boolean containsKey(Object key),False,NULL
34,LinkedHashMap,2,boolean containsValue(Object value),True,Returns true if this map maps one or more keys to the specified value.
34,LinkedHashMap,3,V get(Object key),True,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
34,LinkedHashMap,4,"V put(K key, V value)",False,NULL
34,LinkedHashMap,5,V remove(Object key),False,NULL
35,LinkedHashSet,1,boolean add(E e),False,NULL
35,LinkedHashSet,2,boolean addAll(Collection<? extends E> c),False,NULL
35,LinkedHashSet,3,void clear(),False,NULL
35,LinkedHashSet,4,boolean contains(Object o),False,NULL
35,LinkedHashSet,5,boolean containsAll(Collection<?> c),False,NULL
36,LinkedList,1,boolean add(E e),True,Appends the specified element to the end of this list.
36,LinkedList,2,"void add(int index, E element)",True,Inserts the specified element at the specified position in this list.
36,LinkedList,3,boolean addAll(Collection<? extends E> c),True,"Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator."
36,LinkedList,4,E get(int index),True,Returns the element at the specified position in this list.
36,LinkedList,5,E remove(int index),True,Removes the element at the specified position in this list.
37,ListResourceBundle,1,E getObject(String key),False,NULL
37,ListResourceBundle,2,Enumeration<String> getKeys(),True,Returns an Enumeration of the keys contained in this ResourceBundle and its parent bundles.
37,ListResourceBundle,3,boolean containsKey(String key),False,NULL
37,ListResourceBundle,4,Object[][] getContents(),True,Returns an array in which each item is a pair of objects in an Object array.
37,ListResourceBundle,5,String getString(String key),False,NULL
38,Locale,1,"Locale(String language, String country)",False,NULL
38,Locale,2,"Locale(String language, String country, String variant)",False,NULL
38,Locale,3,Locale(String language),False,NULL
38,Locale,4,String getDisplayCountry(Locale aLocale),True,Returns a name for the locale's country that is appropriate for display to the user.
38,Locale,5,String getDisplayLanguage(Locale aLocale),True,Returns a name for the locale's language that is appropriate for display to the user.
38,Locale,6,String getDisplayName(Locale aLocale),True,Returns a name for the locale that is appropriate for display to the user.
38,Locale,7,String getDisplayVariant(Locale aLocale),True,Returns a name for the locale's variant code that is appropriate for display to the user.
38,Locale,8,String getISO3Country(),True,Returns a three-letter abbreviation for this locale's country.
38,Locale,9,String getISO3Language(),True,Returns a three-letter abbreviation of this locale's language.
38,Locale,10,String getLanguage(),True,Returns the language code of this Locale.
38,Locale,11,String getVariant(),True,Returns the variant code for this locale.
38,Locale,12,String getCountry(),True,"Returns the country/region code for this locale, which should either be the empty string, an uppercase ISO 3166 2-letter code, or a UN M.49 3-digit code."
38,Locale,13,boolean equals(Object obj),True,Returns true if this Locale is equal to another object.
38,Locale,14,int hashCode(),True,Override hashCode.
38,Locale,15,Locale[] getAvailableLocales(),True,Returns an array of all installed locales.
38,Locale,16,Locale getDefault(),True,Gets the current value of the default locale for this instance of the Java Virtual Machine.
38,Locale,17,void setDefault(Locale newLocale),True,Sets the default locale for this instance of the Java Virtual Machine.
38,Locale,18,Locale forLanguageTag(String tag),True,Returns a locale for the specified IETF BCP 47 language tag string.
38,Locale,19,"Locale forLanguageTag(String tag, Locale defaultLocale)",False,NULL
38,Locale,20,"Locale forLanguageTag(String tag, Locale defaultLocale, Locale... availableLocales)",False,NULL
39,Locale.Builder,1,Locale.Builder setLanguage(String language),True,Sets the language.
39,Locale.Builder,2,Locale.Builder setRegion(String region),True,Sets the region.
39,Locale.Builder,3,Locale.Builder setVariant(String variant),True,Sets the variant.
39,Locale.Builder,4,Locale.Builder setExtensions(String... extensions),False,NULL
39,Locale.Builder,5,Locale build(),True,Returns an instance of Locale created from the fields set on this builder.
40,Locale.LanguageRange,1,Locale.LanguageRange(String range),False,NULL
40,Locale.LanguageRange,2,"Locale.LanguageRange(String range, int weight)",False,NULL
40,Locale.LanguageRange,3,"Locale.LanguageRange(String language, String script, String region)",False,NULL
40,Locale.LanguageRange,4,"Locale.LanguageRange(String language, String script, String region, int weight)",False,NULL
40,Locale.LanguageRange,5,Locale.LanguageRange(Locale locale),False,NULL
40,Locale.LanguageRange,6,"Locale.LanguageRange(Locale locale, int weight)",False,NULL
40,Locale.LanguageRange,7,Locale.LanguageRange(Locale.LanguageRange range),False,NULL
40,Locale.LanguageRange,8,"Locale.LanguageRange(Locale.LanguageRange range, int weight)",False,NULL
40,Locale.LanguageRange,9,Locale.LanguageRange(Locale.LanguageRange[] ranges),False,NULL
40,Locale.LanguageRange,10,"Locale.LanguageRange(Locale.LanguageRange[] ranges, int weight)",False,NULL
40,Locale.LanguageRange,11,"Locale.LanguageRange(Locale.LanguageRange[] ranges, int weight, boolean ignoreScript)",False,NULL
40,Locale.LanguageRange,12,"Locale.LanguageRange(Locale.LanguageRange[] ranges, int weight, boolean ignoreScript, boolean ignoreRegion)",False,NULL
40,Locale.LanguageRange,13,"Locale.LanguageRange(Locale.LanguageRange[] ranges, int weight, boolean ignoreScript, boolean ignoreRegion, boolean ignoreVariant)",False,NULL
40,Locale.LanguageRange,14,"Locale.LanguageRange(Locale.LanguageRange[] ranges, int weight, boolean ignoreScript, boolean ignoreRegion, boolean ignoreVariant, boolean ignoreExtension)",False,NULL
41,LongSummaryStatistics,1,long getCount(),True,Returns the count of values recorded.
41,LongSummaryStatistics,2,long getSum(),True,"Returns the sum of values recorded, or zero if no values have been recorded."
41,LongSummaryStatistics,3,long getMin(),True,"Returns the minimum value recorded, or Long.MAX_VALUE if no values have been recorded."
41,LongSummaryStatistics,4,long getMax(),True,"Returns the maximum value recorded, or Long.MIN_VALUE if no values have been recorded"
41,LongSummaryStatistics,5,double getAverage(),True,"Returns the arithmetic mean of values recorded, or zero if no values have been recorded."
42,Objects,1,"boolean equals(Object a, Object b)",True,Returns true if the arguments are equal to each other and false otherwise.
42,Objects,2,int hashCode(Object o),True,Returns the hash code of a non-null argument and 0 for a null argument.
42,Objects,3,boolean isNull(Object obj),True,Returns true if the provided reference is null otherwise returns false.
42,Objects,4,boolean nonNull(Object obj),True,Returns true if the provided reference is non-null otherwise returns false.
42,Objects,5,boolean requireNonNull(Object obj),False,NULL
43,Observable,1,void addObserver(Observer o),True,"Adds an observer to the set of observers for this object, provided that it is not the same as some observer already in the set."
43,Observable,2,void deleteObserver(Observer o),True,Deletes an observer from the set of observers of this object.
43,Observable,3,void deleteObservers(),True,Clears the observer list so that this object no longer has any observers.
43,Observable,4,boolean hasChanged(),True,Tests if this object has changed.
43,Observable,5,int countObservers(),True,Returns the number of observers of this Observable object.
43,Observable,6,void notifyObservers(),True,"If this object has changed, as indicated by the hasChanged method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed."
43,Observable,7,void notifyObservers(Object arg),True,"If this object has changed, as indicated by the hasChanged method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed."
43,Observable,8,void setChanged(),True,Marks this Observable object as having been changed; the hasChanged method will now return true.
43,Observable,9,void clearChanged(),True,"Indicates that this object has no longer changed, or that it has already notified all of its observers of its most recent change, so that the hasChanged method will now return false."
44,Optional,1,Optional<T> of(T value),False,NULL
44,Optional,2,Optional<T> empty(),False,NULL
44,Optional,3,boolean isPresent(),True,"Return true if there is a value present, otherwise false."
44,Optional,4,T get(),True,"If a value is present in this Optional, returns the value, otherwise throws NoSuchElementException."
44,Optional,5,T orElse(T other),True,"Return the value if present, otherwise return other."
45,OptionalDouble,1,OptionalDouble(),False,NULL
45,OptionalDouble,2,of(double value),False,NULL
45,OptionalDouble,3,empty(),False,NULL
45,OptionalDouble,4,isPresent(),False,NULL
45,OptionalDouble,5,getAsDouble(),False,NULL
46,OptionalInt,1,boolean isPresent(),True,"Return true if there is a value present, otherwise false."
46,OptionalInt,2,int getAsInt(),True,"If a value is present in this OptionalInt, returns the value, otherwise throws NoSuchElementException."
46,OptionalInt,3,int orElse(int other),True,"Return the value if present, otherwise return other."
46,OptionalInt,4,int orElseGet(IntSupplier other),True,"Return the value if present, otherwise invoke other and return the result of that invocation."
46,OptionalInt,5,int orElseThrow(),False,NULL
47,OptionalLong,1,OptionalLong of(long value),True,Return an OptionalLong with the specified value present.
47,OptionalLong,2,OptionalLong empty(),True,Returns an empty OptionalLong instance.
47,OptionalLong,3,boolean isPresent(),True,"Return true if there is a value present, otherwise false."
47,OptionalLong,4,long getAsLong(),True,"If a value is present in this OptionalLong, returns the value, otherwise throws NoSuchElementException."
47,OptionalLong,5,long orElse(long other),True,"Return the value if present, otherwise return other."
48,PriorityQueue,1,boolean add(E e),True,Inserts the specified element into this priority queue.
48,PriorityQueue,2,E remove(),False,NULL
48,PriorityQueue,3,E peek(),True,"Retrieves, but does not remove, the head of this queue, or returns null if this queue is empty."
48,PriorityQueue,4,boolean contains(Object o),True,Returns true if this queue contains the specified element.
48,PriorityQueue,5,int size(),True,Returns the number of elements in this collection.
49,Properties,1,"Object setProperty(String key, String value)",True,Calls the Hashtable method put.
49,Properties,2,String getProperty(String key),True,Searches for the property with the specified key in this property list.
49,Properties,3,"String getProperty(String key, String defaultValue)",True,Searches for the property with the specified key in this property list.
49,Properties,4,Enumeration propertyNames(),False,NULL
49,Properties,5,void load(InputStream inStream) throws IOException,True,Reads a property list (key and element pairs) from the input byte stream.
50,PropertyPermission,1,boolean implies(Permission p),True,"Checks if this PropertyPermission object ""implies"" the specified permission."
50,PropertyPermission,2,boolean equals(Object obj),True,Checks two PropertyPermission objects for equality.
50,PropertyPermission,3,String getActions(),True,"Returns the ""canonical string representation"" of the actions."
50,PropertyPermission,4,String getName(),False,NULL
50,PropertyPermission,5,int hashCode(),True,Returns the hash code value for this object.
51,PropertyResourceBundle,1,Object getObject(String key),False,NULL
51,PropertyResourceBundle,2,Enumeration<String> getKeys(),True,Returns an Enumeration of the keys contained in this ResourceBundle and its parent bundles.
51,PropertyResourceBundle,3,String getString(String key),False,NULL
51,PropertyResourceBundle,4,"String getString(String key, String defaultValue)",False,NULL
51,PropertyResourceBundle,5,boolean containsKey(String key),False,NULL
52,Random,1,Random(),False,NULL
52,Random,2,int nextInt(),True,"Returns the next pseudorandom, uniformly distributed int value from this random number generator's sequence."
52,Random,3,int nextInt(int bound),True,"Returns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence."
52,Random,4,long nextLong(),True,"Returns the next pseudorandom, uniformly distributed long value from this random number generator's sequence."
52,Random,5,boolean nextBoolean(),True,"Returns the next pseudorandom, uniformly distributed boolean value from this random number generator's sequence."
53,ResourceBundle,1,Object getObject(String key),True,Gets an object for the given key from this resource bundle or one of its parents.
53,ResourceBundle,2,Enumeration<String> getKeys(),True,Returns an enumeration of the keys.
53,ResourceBundle,3,String getString(String key),True,Gets a string for the given key from this resource bundle or one of its parents.
53,ResourceBundle,4,Locale getLocale(),True,Returns the locale of this resource bundle.
53,ResourceBundle,5,boolean containsKey(String key),True,Determines whether the given key is contained in this ResourceBundle or its parent bundles.
54,ResourceBundle.Control,1,abstract List<String> getFormats(String baseName),False,NULL
54,ResourceBundle.Control,2,abstract String toString(),False,NULL
54,ResourceBundle.Control,3,abstract Locale getFallbackLocale(),False,NULL
54,ResourceBundle.Control,4,"abstract ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload)",False,NULL
54,ResourceBundle.Control,5,"abstract boolean needsReload(String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime)",False,NULL
55,Scanner,1,boolean hasNext(),True,Returns true if this scanner has another token in its input.
55,Scanner,2,boolean hasNextLine(),True,Returns true if there is another line in the input of this scanner.
55,Scanner,3,String next(),True,Finds and returns the next complete token from this scanner.
55,Scanner,4,String nextLine(),True,Advances this scanner past the current line and returns the input that was skipped.
55,Scanner,5,int nextInt(),True,Scans the next token of the input as an int.
55,Scanner,6,double nextDouble(),True,Scans the next token of the input as a double.
55,Scanner,7,float nextFloat(),True,Scans the next token of the input as a float.
55,Scanner,8,long nextLong(),True,Scans the next token of the input as a long.
55,Scanner,9,boolean nextBoolean(),True,Scans the next token of the input into a boolean value and returns that value.
55,Scanner,10,BigInteger nextBigInteger(),True,Scans the next token of the input as a BigInteger.
55,Scanner,11,BigDecimal nextBigDecimal(),True,Scans the next token of the input as a BigDecimal.
55,Scanner,12,Scanner useDelimiter(Pattern pattern),True,Sets this scanner's delimiting pattern to the specified pattern.
55,Scanner,13,void useLocale(Locale locale),False,NULL
55,Scanner,14,void close(),True,Closes this scanner.
56,ServiceLoader,1,<T> Iterator<T> iterator(),False,NULL
56,ServiceLoader,2,<T> Spliterator<T> spliterator(),False,NULL
56,ServiceLoader,3,<T> Stream<T> stream(),False,NULL
56,ServiceLoader,4,<T> Stream<T> parallelStream(),False,NULL
56,ServiceLoader,5,void reload(),True,Clear this loader's provider cache so that all providers will be reloaded.
57,SimpleTimeZone,1,"SimpleTimeZone(int offset, String ID)",False,NULL
57,SimpleTimeZone,2,int getOffset(long date),True,Returns the offset of this time zone from UTC at the given time.
57,SimpleTimeZone,3,int getOffsetFromLocal(long local),False,NULL
57,SimpleTimeZone,4,"int getOffsetFromLocal(long local, boolean daylight)",False,NULL
57,SimpleTimeZone,5,"int getOffsetFromLocal(long local, boolean daylight, boolean stdDaylight)",False,NULL
58,Spliterators,1,Spliterator.OfInt spliterator(int[] array),False,NULL
58,Spliterators,2,Spliterator.OfLong spliterator(long[] array),False,NULL
58,Spliterators,3,Spliterator.OfDouble spliterator(double[] array),False,NULL
58,Spliterators,4,"Spliterator.OfInt spliterator(int[] array, int origin, int fence)",False,NULL
58,Spliterators,5,"Spliterator.OfLong spliterator(long[] array, int origin, int fence)",False,NULL
58,Spliterators,6,"Spliterator.OfDouble spliterator(double[] array, int origin, int fence)",False,NULL
59,Spliterators.AbstractDoubleSpliterator,1,double tryAdvance(DoubleConsumer action),False,NULL
59,Spliterators.AbstractDoubleSpliterator,2,Spliterator<Double> trySplit(),False,NULL
59,Spliterators.AbstractDoubleSpliterator,3,long estimateSize(),True,"Returns an estimate of the number of elements that would be encountered by a Spliterator.forEachRemaining(java.util.function.Consumer<? super T>) traversal, or returns Long.MAX_VALUE if infinite, unknown, or too expensive to compute."
59,Spliterators.AbstractDoubleSpliterator,4,int characteristics(),True,Returns a set of characteristics of this Spliterator and its elements.
59,Spliterators.AbstractDoubleSpliterator,5,boolean hasCharacteristics(int characteristics),False,NULL
60,Spliterators.AbstractIntSpliterator,1,int estimateSize(),False,NULL
60,Spliterators.AbstractIntSpliterator,2,boolean tryAdvance(IntConsumer action),False,NULL
60,Spliterators.AbstractIntSpliterator,3,Spliterator<Integer> trySplit(),False,NULL
60,Spliterators.AbstractIntSpliterator,4,long estimateSize(),True,"Returns an estimate of the number of elements that would be encountered by a Spliterator.forEachRemaining(java.util.function.Consumer<? super T>) traversal, or returns Long.MAX_VALUE if infinite, unknown, or too expensive to compute."
60,Spliterators.AbstractIntSpliterator,5,boolean tryAdvance(IntConsumer action),False,NULL
61,Spliterators.AbstractLongSpliterator,1,long estimateSize(),True,"Returns an estimate of the number of elements that would be encountered by a Spliterator.forEachRemaining(java.util.function.Consumer<? super T>) traversal, or returns Long.MAX_VALUE if infinite, unknown, or too expensive to compute."
61,Spliterators.AbstractLongSpliterator,2,boolean tryAdvance(Consumer<? super Long> action),False,NULL
61,Spliterators.AbstractLongSpliterator,3,Spliterator<Long> trySplit(),False,NULL
61,Spliterators.AbstractLongSpliterator,4,long getExactSizeIfKnown(),False,NULL
61,Spliterators.AbstractLongSpliterator,5,int characteristics(),True,Returns a set of characteristics of this Spliterator and its elements.
62,Spliterators.AbstractSpliterator,1,boolean tryAdvance(Consumer<? super T> action),False,NULL
62,Spliterators.AbstractSpliterator,2,Spliterator<T> trySplit(),True,"If this spliterator can be partitioned, returns a Spliterator covering elements, that will, upon return from this method, not be covered by this Spliterator."
62,Spliterators.AbstractSpliterator,3,long estimateSize(),True,"Returns an estimate of the number of elements that would be encountered by a Spliterator.forEachRemaining(java.util.function.Consumer<? super T>) traversal, or returns Long.MAX_VALUE if infinite, unknown, or too expensive to compute."
62,Spliterators.AbstractSpliterator,4,int characteristics(),True,Returns a set of characteristics of this Spliterator and its elements.
62,Spliterators.AbstractSpliterator,5,Comparator<? super T> getComparator(),False,NULL
63,SplittableRandom,1,SplittableRandom(),False,NULL
63,SplittableRandom,2,long nextLong(),True,Returns a pseudorandom long value.
63,SplittableRandom,3,double nextDouble(),True,Returns a pseudorandom double value between zero (inclusive) and one (exclusive).
63,SplittableRandom,4,int nextInt(),True,Returns a pseudorandom int value.
63,SplittableRandom,5,boolean nextBoolean(),True,Returns a pseudorandom boolean value.
64,Stack,1,boolean empty(),True,Tests if this stack is empty.
64,Stack,2,E peek(),True,Looks at the object at the top of this stack without removing it from the stack.
64,Stack,3,E pop(),True,Removes the object at the top of this stack and returns that object as the value of this function.
64,Stack,4,E push(E item),True,Pushes an item onto the top of this stack.
64,Stack,5,int search(Object o),True,Returns the 1-based position where an object is on this stack.
65,StringJoiner,1,StringJoiner(CharSequence delimiter),False,NULL
65,StringJoiner,2,"StringJoiner(CharSequence delimiter, CharSequence prefix, CharSequence suffix)",False,NULL
65,StringJoiner,3,StringJoiner merge(StringJoiner other),True,Adds the contents of the given StringJoiner without prefix and suffix as the next element if it is non-empty.
65,StringJoiner,4,StringJoiner setEmptyValue(CharSequence emptyValue),True,"Sets the sequence of characters to be used when determining the string representation of this StringJoiner and no elements have been added yet, that is, when it is empty."
65,StringJoiner,5,StringJoiner add(CharSequence newElement),True,Adds a copy of the given CharSequence value as the next element of the StringJoiner value.
66,StringTokenizer,1,StringTokenizer(String str),False,NULL
66,StringTokenizer,2,"StringTokenizer(String str, String delim)",False,NULL
66,StringTokenizer,3,boolean hasMoreTokens(),True,Tests if there are more tokens available from this tokenizer's string.
66,StringTokenizer,4,String nextToken(),True,Returns the next token from this string tokenizer.
66,StringTokenizer,5,String nextToken(String delim),True,Returns the next token in this string tokenizer's string.
67,Timer,1,"void schedule(TimerTask task, Date time)",True,Schedules the specified task for execution at the specified time.
67,Timer,2,"void schedule(TimerTask task, long delay)",True,Schedules the specified task for execution after the specified delay.
67,Timer,3,"void schedule(TimerTask task, Date firstTime, long period)",True,"Schedules the specified task for repeated fixed-delay execution, beginning at the specified time."
67,Timer,4,"void scheduleAtFixedRate(TimerTask task, long delay, long period)",True,"Schedules the specified task for repeated fixed-rate execution, beginning after the specified delay."
67,Timer,5,void cancel(),True,"Terminates this timer, discarding any currently scheduled tasks."
68,TimerTask,1,void cancel(),False,NULL
68,TimerTask,2,boolean cancel(boolean mayInterruptIfRunning),False,NULL
68,TimerTask,3,long scheduledExecutionTime(),True,Returns the scheduled execution time of the most recent actual execution of this task.
68,TimerTask,4,void run(),True,The action to be performed by this timer task.
68,TimerTask,5,boolean isCancelled(),False,NULL
69,TimeZone,1,TimeZone(String id),False,NULL
69,TimeZone,2,"TimeZone(String id, boolean daylight)",False,NULL
69,TimeZone,3,"TimeZone(String id, int rawOffset, String dst)",False,NULL
69,TimeZone,4,"TimeZone(String id, int rawOffset, int dstSavings)",False,NULL
69,TimeZone,5,"TimeZone(String id, int rawOffset, int dstSavings, int dstStart, int dstEnd)",False,NULL
70,TreeMap,1,boolean containsKey(Object key),True,Returns true if this map contains a mapping for the specified key.
70,TreeMap,2,V get(Object key),True,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
70,TreeMap,3,"V put(K key, V value)",True,Associates the specified value with the specified key in this map.
70,TreeMap,4,V remove(Object key),True,Removes the mapping for this key from this TreeMap if present.
70,TreeMap,5,"V replace(K key, V value)",True,Replaces the entry for the specified key only if it is currently mapped to some value.
71,TreeSet,1,boolean add(E e),True,Adds the specified element to this set if it is not already present.
71,TreeSet,2,boolean addAll(Collection<? extends E> c),True,Adds all of the elements in the specified collection to this set.
71,TreeSet,3,void clear(),True,Removes all of the elements from this set.
71,TreeSet,4,boolean contains(Object o),True,Returns true if this set contains the specified element.
71,TreeSet,5,boolean remove(Object o),True,Removes the specified element from this set if it is present.
72,UUID,1,UUID fromString(String name),True,Creates a UUID from the string standard representation as described in the toString() method.
72,UUID,2,UUID randomUUID(),True,Static factory to retrieve a type 4 (pseudo randomly generated) UUID.
72,UUID,3,int compareTo(UUID uuid),True,Compares this UUID with the specified UUID.
72,UUID,4,String toString(),True,Returns a String object representing this UUID.
72,UUID,5,long timestamp(),True,The timestamp value associated with this UUID.
73,Vector,1,boolean add(E e),True,Appends the specified element to the end of this Vector.
73,Vector,2,"boolean add(int index, E element)",False,NULL
73,Vector,3,E get(int index),True,Returns the element at the specified position in this Vector.
73,Vector,4,"E set(int index, E element)",True,Replaces the element at the specified position in this Vector with the specified element.
73,Vector,5,boolean remove(Object o),True,"Removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged."
74,WeakHashMap,1,V get(Object key),True,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key."
74,WeakHashMap,2,"V put(K key, V value)",True,Associates the specified value with the specified key in this map.
74,WeakHashMap,3,V remove(Object key),True,Removes the mapping for a key from this weak hash map if it is present.
74,WeakHashMap,4,void clear(),True,Removes all of the mappings from this map.
74,WeakHashMap,5,boolean containsKey(Object key),True,Returns true if this map contains a mapping for the specified key.
