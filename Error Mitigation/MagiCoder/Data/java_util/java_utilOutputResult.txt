Sample: AbstractCollection_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: AbstractList_2
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: AbstractMap_2
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: AbstractMap_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_3.java:6: error: <anonymous AbstractMap_3$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        Map<String, Integer> map = new AbstractMap<String, Integer>() {
                                                                      ^
1 error


================================================================

Sample: AbstractMap_4
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_4.java:6: error: <anonymous AbstractMap_4$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        Map<String, Integer> map = new AbstractMap<>() {
                                                       ^
1 error


================================================================

Sample: AbstractMap_5
----------------------------------------------------------------
================================================================

Sample: AbstractMap_SimpleEntry_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: AbstractMap_SimpleImmutableEntry_1
----------------------------------------------------------------
stdout:
123

================================================================

Sample: AbstractMap_SimpleImmutableEntry_2
----------------------------------------------------------------
stdout:
Key: Key

================================================================

Sample: AbstractMap_SimpleImmutableEntry_3
----------------------------------------------------------------
stdout:
Key: Key
Value: 10

================================================================

Sample: AbstractMap_SimpleImmutableEntry_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: AbstractQueue_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: AbstractQueue_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractQueue_2.java:53: error: cannot find symbol
            public boolean containsAll(Collection<?> c) {
                                       ^
  symbol: class Collection
./Data/java_util/javaFiles/AbstractQueue_2.java:58: error: cannot find symbol
            public boolean addAll(Collection<? extends String> c) {
                                  ^
  symbol: class Collection
./Data/java_util/javaFiles/AbstractQueue_2.java:63: error: cannot find symbol
            public boolean removeAll(Collection<?> c) {
                                     ^
  symbol: class Collection
./Data/java_util/javaFiles/AbstractQueue_2.java:68: error: cannot find symbol
            public boolean retainAll(Collection<?> c) {
                                     ^
  symbol: class Collection
./Data/java_util/javaFiles/AbstractQueue_2.java:6: error: <anonymous AbstractQueue_2$1> is not abstract and does not override abstract method iterator() in AbstractCollection
        AbstractQueue<String> queue = new AbstractQueue<String>() {
                                                                  ^
5 errors


================================================================

Sample: AbstractSequentialList_1
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: AbstractSequentialList_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractSequentialList_2.java:6: error: <anonymous AbstractSequentialList_2$1> is not abstract and does not override abstract method size() in AbstractCollection
        AbstractSequentialList<String> list = new AbstractSequentialList<String>() {
                                                                                   ^
1 error


================================================================

Sample: AbstractSequentialList_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractSequentialList_3.java:11: error: cannot find symbol
            public ListIterator<String> listIterator(int index) {
                   ^
  symbol: class ListIterator
1 error


================================================================

Sample: AbstractSequentialList_4
----------------------------------------------------------------
stdout:
Original list: [Hello, World]

stderr:
Exception in thread "main" java.lang.ClassCastException: class java.util.ArrayList cannot be cast to class java.util.AbstractSequentialList (java.util.ArrayList and java.util.AbstractSequentialList are in module java.base of loader 'bootstrap')
	at AbstractSequentialList_4.main(AbstractSequentialList_4.java:13)

================================================================

Sample: ArrayDeque_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: ArrayDeque_2
----------------------------------------------------------------
stdout:
true
[Hello]

================================================================

Sample: ArrayDeque_3
----------------------------------------------------------------
stdout:
true
[Hello]

================================================================

Sample: ArrayDeque_4
----------------------------------------------------------------
stdout:
true
[Hello]

================================================================

Sample: ArrayDeque_5
----------------------------------------------------------------
stdout:
[Hello, World]
Removed element: Hello
[World]

================================================================

Sample: ArrayList_1
----------------------------------------------------------------
stdout:
true
[Hello]

================================================================

Sample: ArrayList_2
----------------------------------------------------------------
stdout:
[World, Hello]

================================================================

Sample: ArrayList_3
----------------------------------------------------------------
stdout:
[Hello, World, Java, Programming]

================================================================

Sample: ArrayList_4
----------------------------------------------------------------
stdout:
World

================================================================

Sample: ArrayList_5
----------------------------------------------------------------
stdout:
Before removing: [Hello, World]
After removing: [World]

================================================================

Sample: Arrays_2
----------------------------------------------------------------
stdout:
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5]

================================================================

Sample: Arrays_3
----------------------------------------------------------------
stdout:
[1, 2, 3, 4, 5, 6, 7, 8, 9]

================================================================

Sample: Arrays_4
----------------------------------------------------------------
stdout:
Element found at index: 4

================================================================

Sample: Base64_Decoder_2
----------------------------------------------------------------
stdout:
Hello world

================================================================

Sample: Base64_Decoder_5
----------------------------------------------------------------
stdout:
Hello world

================================================================

Sample: Base64_Encoder_2
----------------------------------------------------------------
stdout:
AQIDBAU=

================================================================

Sample: BitSet_1
----------------------------------------------------------------
stdout:
true
true
true
false

================================================================

Sample: BitSet_2
----------------------------------------------------------------
stdout:
{5}

================================================================

Sample: BitSet_3
----------------------------------------------------------------
stdout:
Before clear: {0, 1, 2}
After clear: {0, 2}

================================================================

Sample: BitSet_4
----------------------------------------------------------------
stdout:
4

================================================================

Sample: BitSet_5
----------------------------------------------------------------
stdout:
5

================================================================

Sample: Calendar_1
----------------------------------------------------------------
stdout:
Current Day of Month: 21

================================================================

Sample: Calendar_2
----------------------------------------------------------------
stdout:
Sat Jan 01 09:35:30 CST 2022

================================================================

Sample: Calendar_3
----------------------------------------------------------------
stdout:
Before adding: Wed Aug 21 09:35:31 CDT 2024
After adding: Mon Aug 26 09:35:31 CDT 2024

================================================================

Sample: Calendar_4
----------------------------------------------------------------
stdout:
Original date: Sat Jan 01 09:35:32 CST 2022
Rolled date: Sun Jan 02 09:35:32 CST 2022

================================================================

Sample: Calendar_5
----------------------------------------------------------------
stdout:
Current Date and Time: Wed Aug 21 09:35:33 CDT 2024

================================================================

Sample: Calendar_Builder_1
----------------------------------------------------------------
stdout:
Sat Jan 01 00:00:00 CST 2022

================================================================

Sample: Calendar_Builder_3
----------------------------------------------------------------
stdout:
sun.util.calendar.ZoneInfo[id="America/New_York",offset=-18000000,dstSavings=3600000,useDaylight=true,transitions=235,lastRule=java.util.SimpleTimeZone[id=America/New_York,offset=-18000000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]

================================================================

Sample: Calendar_Builder_4
----------------------------------------------------------------
stdout:
Sun Dec 26 00:00:00 CST 2021

================================================================

Sample: Collections_5
----------------------------------------------------------------
stdout:
Before shuffle: [Hello, World, Java, Collections]
After shuffle: [Java, Collections, Hello, World]

================================================================

Sample: Currency_1
----------------------------------------------------------------
stdout:
USD

================================================================

Sample: Currency_2
----------------------------------------------------------------
stdout:
Currency Code: USD

================================================================

Sample: Currency_3
----------------------------------------------------------------
stdout:
US Dollar

================================================================

Sample: Currency_4
----------------------------------------------------------------
stdout:
US$

================================================================

Sample: Currency_5
----------------------------------------------------------------
stdout:
Default fraction digits for the US currency: 2

================================================================

Sample: DoubleSummaryStatistics_2
----------------------------------------------------------------
stdout:
6.0

================================================================

Sample: DoubleSummaryStatistics_3
----------------------------------------------------------------
stdout:
Min: NaN

================================================================

Sample: DoubleSummaryStatistics_4
----------------------------------------------------------------
stdout:
Max: NaN

================================================================

Sample: DoubleSummaryStatistics_5
----------------------------------------------------------------
stdout:
Average: 3.0

================================================================

Sample: EnumMap_1
----------------------------------------------------------------
stdout:
Does the EnumMap contain the key RED? true

================================================================

Sample: EnumMap_2
----------------------------------------------------------------
stdout:
Does the EnumMap contain the value 'Two'? true

================================================================

Sample: EnumMap_3
----------------------------------------------------------------
stdout:
Key: ONE, Value: One
Key: TWO, Value: Two
Key: THREE, Value: Three

================================================================

Sample: EnumMap_4
----------------------------------------------------------------
stdout:
Red color

================================================================

Sample: EventObject_2
----------------------------------------------------------------
stdout:
Source: Source

================================================================

Sample: EventObject_4
----------------------------------------------------------------
stdout:
java.util.EventObject[source=Event]

================================================================

Sample: GregorianCalendar_3
----------------------------------------------------------------
stdout:
Sat Aug 31 09:35:58 CDT 2024

================================================================

Sample: HashMap_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: HashMap_2
----------------------------------------------------------------
stdout:
Value for key1: value1
Value for key2: value2
Value for key3: null

================================================================

Sample: HashMap_3
----------------------------------------------------------------
stdout:
{One=1, Two=2, Three=3}

================================================================

Sample: HashMap_4
----------------------------------------------------------------
stdout:
Before removal: {One=1, Two=2, Three=3}
After removal: {One=1, Three=3}

================================================================

Sample: HashMap_5
----------------------------------------------------------------
stdout:
Size of the HashMap: 3

================================================================

Sample: HashSet_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: HashSet_2
----------------------------------------------------------------
stdout:
Before clear: [Hello, World]
After clear: []

================================================================

Sample: HashSet_3
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: HashSet_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: HashSet_5
----------------------------------------------------------------
stdout:
Before removal: [Hello, World]
After removal: [World]
Is removed? true

================================================================

Sample: Hashtable_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: IdentityHashMap_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: IdentityHashMap_2
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: IdentityHashMap_3
----------------------------------------------------------------
stdout:
Key: Three, Value: 3
Key: One, Value: 1
Key: Two, Value: 2

================================================================

Sample: IdentityHashMap_4
----------------------------------------------------------------
stdout:
World

================================================================

Sample: IdentityHashMap_5
----------------------------------------------------------------
stdout:
Is the map empty? false
Is the map empty after clearing? true

================================================================

Sample: IdentityHashMap_6
----------------------------------------------------------------
stdout:
{Hello=World}

================================================================

Sample: IdentityHashMap_7
----------------------------------------------------------------
stdout:
{Hello=1}
{}

================================================================

Sample: IdentityHashMap_8
----------------------------------------------------------------
stdout:
Size of the map: 3

================================================================

Sample: IdentityHashMap_9
----------------------------------------------------------------
stdout:
Before clear: {One=1, Two=2}
After clear: {}

================================================================

Sample: IdentityHashMap_10
----------------------------------------------------------------
stdout:
true

================================================================

Sample: IdentityHashMap_11
----------------------------------------------------------------
stdout:
Hash code of key1: 660879561
Hash code of key2: 1485697819
Hash code of map: 1202945048

================================================================

Sample: IdentityHashMap_16
----------------------------------------------------------------
stdout:
Key: Two, Value: 2
Key: One, Value: 1
Key: Three, Value: 3

================================================================

Sample: IdentityHashMap_17
----------------------------------------------------------------
stdout:
Key: Three, Value: 3
Key: One, Value: 1
Key: Two, Value: 2

================================================================

Sample: IdentityHashMap_18
----------------------------------------------------------------
stdout:
value1
value2

================================================================

Sample: IdentityHashMap_19
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: IdentityHashMap_20
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: IntSummaryStatistics_1
----------------------------------------------------------------
stdout:
3

================================================================

Sample: IntSummaryStatistics_2
----------------------------------------------------------------
stdout:
Average: 20.0

================================================================

Sample: IntSummaryStatistics_3
----------------------------------------------------------------
stdout:
Sum: 60

================================================================

Sample: IntSummaryStatistics_4
----------------------------------------------------------------
stdout:
Min: 10

================================================================

Sample: IntSummaryStatistics_5
----------------------------------------------------------------
stdout:
Max: 30

================================================================

Sample: LinkedHashMap_2
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: LinkedHashMap_3
----------------------------------------------------------------
stdout:
value1
null

================================================================

Sample: LinkedList_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: LinkedList_2
----------------------------------------------------------------
stdout:
[Hello, Java, World]

================================================================

Sample: LinkedList_3
----------------------------------------------------------------
stdout:
true
[Hello, World, Java, Programming]

================================================================

Sample: LinkedList_4
----------------------------------------------------------------
stdout:
World

================================================================

Sample: LinkedList_5
----------------------------------------------------------------
stdout:
Original list: [Hello, World, Java]
Removed element: World
Updated list: [Hello, Java]

================================================================

Sample: ListResourceBundle_4
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ListResourceBundle_4.java:3: error: class MyResourceBundle is public, should be declared in a file named MyResourceBundle.java
public class MyResourceBundle extends ListResourceBundle {
       ^
1 error


================================================================

Sample: Locale_4
----------------------------------------------------------------
stdout:
United States

================================================================

Sample: Locale_5
----------------------------------------------------------------
stdout:
French

================================================================

Sample: Locale_6
----------------------------------------------------------------
stdout:
English (United States)

================================================================

Sample: Locale_7
----------------------------------------------------------------
stdout:
WIN

================================================================

Sample: Locale_8
----------------------------------------------------------------
stdout:
ISO 3166-1 alpha-3 country code: USA

================================================================

Sample: Locale_9
----------------------------------------------------------------
stdout:
ISO 3-letter language code: eng

================================================================

Sample: Locale_10
----------------------------------------------------------------
stdout:
Language code: en

================================================================

Sample: Locale_11
----------------------------------------------------------------
stdout:
Variant: WIN

================================================================

Sample: Locale_12
----------------------------------------------------------------
stdout:
Country Code: CA

================================================================

Sample: Locale_13
----------------------------------------------------------------
stdout:
true
false
false

================================================================

Sample: Locale_14
----------------------------------------------------------------
stdout:
Hash code: 96636889

================================================================

Sample: Locale_15
----------------------------------------------------------------
stdout:

Hebrew
Thai (Thai, Thailand)
Low German
Turkmen (Latin, Turkmenistan)
Tigrinya (Ethiopia)
Tamil (Singapore)
Latvian
English (Niue)
Chinese (Simplified, Singapore)
Fulah (Adlam, Liberia)
English (Jamaica)
Kako
Northern Sami (Latin, Norway)
Sindhi (Arabic)
Spanish (Bolivia)
Dzongkha (Bhutan)
Manipuri
Yiddish
Bosnian (Bosnia & Herzegovina)
Lower Sorbian (Germany)
Luxembourgish (Latin, Luxembourg)
English (Liberia)
Arabic (Chad)
Czech
Greek
Nuer (Latin, South Sudan)
Afrikaans
Fulah (Latin, Mauritania)
Swahili (Uganda)
Inari Sami
Turkmen (Turkmenistan)
Serbian (Cyrillic, Montenegro)
Arabic (Egypt)
Lower Sorbian
Ossetic (Cyrillic, Georgia)
Yoruba (Nigeria)
Northern Sami (Norway)
Koyra Chiini
English (Palau)
Polish (Poland)
Serbian (Serbia and Montenegro)
Nepali (India)
Aghem (Latin, Cameroon)
Arabic (Western Sahara)
Bosnian (Latin, Bosnia & Herzegovina)
Low German (Germany)
Norwegian Bokmål (Svalbard & Jan Mayen)
Spanish (United States)
Sanskrit
English (United States, Computer)
Portuguese (Macao SAR China)
Chinese (Simplified)
Luxembourgish (Luxembourg)
Lower Sorbian (Latin, Germany)
Icelandic (Latin, Iceland)
Somali (Kenya)
Zarma (Niger)
Armenian (Armenian, Armenia)
Fulah (Latin, Ghana)
French (St. Pierre & Miquelon)
Arabic (Comoros)
Norwegian (Norway, Nynorsk)
Polish (Latin, Poland)
Aghem (Cameroon)
Gujarati (Gujarati, India)
Teso
Turkish (Turkey)
Basque
Kalaallisut (Latin, Greenland)
Arabic (Mauritania)
Spanish (Dominican Republic)
Russian
Azerbaijani
Sundanese (Latin)
Persian
Kalaallisut (Greenland)
English (Nauru)
North Ndebele
Kazakh
Low German (Latin, Germany)
Kinyarwanda (Latin, Rwanda)
Armenian
English (Australia)
English (Cyprus)
Turkish (Latin, Turkey)
Tigrinya (Eritrea)
Nuer (South Sudan)
English (Rwanda)
Shambala
Luo
Luxembourgish
Croatian (Latin, Croatia)
Sundanese
Lingala (Congo - Kinshasa)
Ngiemboon (Cameroon)
Norwegian
Zarma (Latin, Niger)
Arabic (Israel)
Makhuwa-Meetto
Odia (India)
Pashto (Arabic, Afghanistan)
Azerbaijani (Latin)
Tamil
Langi
Arabic (Syria)
Luo (Latin, Kenya)
Bafia (Cameroon)
Tibetan
Tatar (Russia)
Oromo (Kenya)
English (American Samoa)
French (Vanuatu)
Chinese (Taiwan)
Sindhi (India)
Kalenjin
Ngiemboon (Latin, Cameroon)
Maithili
Portuguese (Mozambique)
French (Niger)
Friulian (Latin, Italy)
Asturian (Latin, Spain)
Bena (Latin, Tanzania)
Shambala (Tanzania)
Burmese (Myanmar, Myanmar (Burma))
English (Jersey)
Lingala (Central African Republic)
Uzbek (Afghanistan)
Danish (Latin, Denmark)
English (Christmas Island)
Akan (Latin, Ghana)
English (Austria)
Galician
Serbian (Cyrillic)
Cantonese (Simplified, China)
Fulah (Adlam)
Kannada (India)
Irish
Quechua
English (Tanzania)
English (Puerto Rico)
Mundang
Javanese
Pashto
Shona
Khmer
Standard Moroccan Tamazight
French (New Caledonia)
Spanish
Ngomba
Scottish Gaelic (United Kingdom)
Swiss German
French (Cameroon)
Walser (Latin, Switzerland)
Punjabi (Gurmukhi, India)
Urdu (Arabic, Pakistan)
Nigerian Pidgin (Latin, Nigeria)
Teso (Uganda)
Cebuano
Norwegian (Latin, Norway)
Bengali (Bangla, Bangladesh)
Inari Sami (Latin, Finland)
English (Netherlands)
Lingala (Congo - Brazzaville)
Nepali (Devanagari, Nepal)
Telugu
Azerbaijani (Azerbaijan)
Slovenian
Greek (Cyprus)
Marathi (India)
Kurdish (Turkey)
Hausa
Gusii (Latin, Kenya)
Northern Luri (Iran)
Swiss German (France)
Spanish (Honduras)
Hungarian (Hungary)
Fulah (Senegal)
Sangu
Albanian (North Macedonia)
Serbian (Cyrillic, Bosnia & Herzegovina)
Bulgarian (Cyrillic, Bulgaria)
Somali (Latin, Somalia)
Estonian (Estonia)
Swahili
Arabic (Oman)
Western Frisian (Netherlands)
Kwasio
Turkish (Cyprus)
Latvian (Latin, Latvia)
Uzbek (Latin, Uzbekistan)
Northern Luri (Iraq)
Duala (Cameroon)
German (Italy)
Portuguese (Latin, Brazil)
Vai (Vai)
French (Tunisia)
Serbian (Serbia)
German (Switzerland)
Swahili (Latin, Tanzania)
French (French Polynesia)
Portuguese (Equatorial Guinea)
Gujarati
Vunjo (Tanzania)
Machame (Tanzania)
Malagasy (Latin, Madagascar)
English (Tuvalu)
Lao
English (Pitcairn Islands)
Luba-Katanga (Latin, Congo - Kinshasa)
Chinese (Simplified, Hong Kong SAR China)
Dutch (Netherlands)
English (Guyana)
Bosnian (Latin)
Jola-Fonyi (Senegal)
Ossetic
Dutch (Curaçao)
Arabic (Algeria)
Portuguese (Switzerland)
French (Equatorial Guinea)
Amharic
English (Nigeria)
French (Côte d’Ivoire)
Kikuyu (Kenya)
Interlingua (world)
English (Pakistan)
Chinese (China)
English (St. Lucia)
Kinyarwanda
Bodo (India)
Fulah (Adlam, Burkina Faso)
Manx (Isle of Man)
Cornish (Latin, United Kingdom)
Bambara (Latin, Mali)
Yangben (Latin, Cameroon)
Macedonian (North Macedonia)
English (Trinidad & Tobago)
Taita
Slovenian (Slovenia)
Sango (Latin, Central African Republic)
Koyraboro Senni
Finnish (Latin, Finland)
Xhosa (South Africa)
French (Belgium)
Ngomba (Cameroon)
Fulah (Adlam, Niger)
Spanish (Venezuela)
Meru (Kenya)
Malagasy
Marathi
English (Bermuda)
Norwegian Bokmål (Norway)
Sena
Kabuverdianu (Cape Verde)
Metaʼ
Vietnamese (Vietnam)
English (United States)
Mauritian (Mauritius)
French (Burkina Faso)
Punjabi (Gurmukhi)
Italian (San Marino)
Persian (Arabic, Iran)
Sanskrit (Devanagari, India)
French (Mayotte)
Gujarati (India)
Fulah (Latin, Cameroon)
Asturian
Maltese (Latin, Malta)
Finnish (Finland)
Cantonese (Simplified)
Catalan (France)
Serbian (Latin, Bosnia & Herzegovina)
Chakma (Chakma, Bangladesh)
Ukrainian (Cyrillic, Ukraine)
French (Djibouti)
Kashmiri (Arabic)
Fulah (Adlam, Guinea-Bissau)
Hausa (Ghana)
Yiddish (Hebrew, world)
Afrikaans (Latin, South Africa)
Tigrinya (Ethiopic, Ethiopia)
Tongan (Latin, Tonga)
German (Belgium)
Amharic (Ethiopic, Ethiopia)
Fulah (Latin, Guinea-Bissau)
Chiga
Chinese (Macao SAR China)
Mundang (Latin, Cameroon)
Nyankole (Uganda)
Malay (Malaysia)
Rundi (Latin, Burundi)
Tamil (Sri Lanka)
Bafia
German (Latin, Germany)
Welsh
Cebuano (Philippines)
Albanian
French
Tajik (Tajikistan)
Vunjo (Latin, Tanzania)
Quechua (Peru)
German
Spanish (Ecuador)
Macedonian (Cyrillic, North Macedonia)
Fulah (Adlam, Cameroon)
Ganda (Uganda)
Fulah (Latin, Niger)
Zulu (South Africa)
French (Latin, France)
Sundanese (Latin, Indonesia)
Chiga (Uganda)
Colognian (Germany)
Ganda
Russian (Russia)
Nigerian Pidgin (Nigeria)
English (Dominica)
Sindhi
Hebrew (Hebrew, Israel)
Irish (Ireland)
English (Burundi)
Cantonese (China)
Romansh (Latin, Switzerland)
English (Samoa)
French (Luxembourg)
Somali
Maori (New Zealand)
Arabic (Eritrea)
Kabyle
Nuer
Shona (Zimbabwe)
Spanish (Ceuta & Melilla)
Irish (United Kingdom)
Thai (Thailand, TH, Thai Digits)
Hindi
French (Seychelles)
English (Sierra Leone)
Fulah (Latin, Nigeria)
Norwegian (Norway)
Fulah (Adlam, Nigeria)
Chinese (Traditional, Macao SAR China)
English (St. Helena)
Vai
Sindhi (Arabic, Pakistan)
German (Luxembourg)
Maori
Maltese
German (Germany)
Norwegian Nynorsk (Latin, Norway)
English (Denmark)
Yangben
Somali (Djibouti)
Lithuanian (Lithuania)
Kamba
Romanian
Esperanto (world)
Pashto (Pakistan)
Ewe
English (US Outlying Islands)
English (Slovenia)
Vai (Vai, Liberia)
Lao (Laos)
Cherokee
Rombo (Latin, Tanzania)
Arabic (Lebanon)
Northern Luri (Arabic, Iran)
Afrikaans (South Africa)
Dogri
Fulah (Guinea)
Colognian (Latin, Germany)
Spanish (Belize)
Arabic (United Arab Emirates)
Esperanto (Latin, world)
Croatian (Croatia)
Rombo (Tanzania)
Assamese
Italian
Kashmiri (India)
Burmese (Myanmar (Burma))
Mongolian (Mongolia)
Urdu (Pakistan)
Danish (Denmark)
English (Micronesia)
English (Belgium)
Sichuan Yi
French (Wallis & Futuna)
Mazanderani (Iran)
Nama
English (Singapore)
Kalenjin (Kenya)
Central Atlas Tamazight
Fulah (Latin, Gambia)
Tatar (Cyrillic, Russia)
Teso (Latin, Uganda)
Friulian
Oromo
Asu (Latin, Tanzania)
Bena (Tanzania)
Fulah (Latin, Guinea)
Slovenian (Latin, Slovenia)
English (Sudan)
Maithili (Devanagari, India)
Japanese (Japan, JP, Japanese Calendar)
Spanish (El Salvador)
Portuguese (Brazil)
Manipuri (Bangla, India)
Malayalam (India)
Irish (Latin, Ireland)
English (Falkland Islands)
Icelandic (Iceland)
Basaa (Latin, Cameroon)
English (Diego Garcia)
Croatian
Portuguese (São Tomé & Príncipe)
Akan (Ghana)
Lithuanian
Uzbek (Arabic, Afghanistan)
Chakma
English (Sweden)
Chinese (Simplified, China)
Spanish (Latin America)
Lingala (Latin, Congo - Kinshasa)
Kako (Latin, Cameroon)
English
Gusii (Kenya)
Swiss German (Liechtenstein)
Chakma (Bangladesh)
Spanish (Canary Islands)
Catalan
Arabic (Tunisia)
Bambara (Mali)
Cornish (United Kingdom)
Punjabi (Pakistan)
Uyghur (China)
Machame (Latin, Tanzania)
Kikuyu (Latin, Kenya)
Spanish (Brazil)
Koyra Chiini (Mali)
English (Solomon Islands)
Tibetan (Tibetan, China)
Cherokee (United States)
Kinyarwanda (Rwanda)
Tachelhit (Tifinagh, Morocco)
Arabic (Iraq)
Nyankole
Macedonian
Santali
Punjabi (Arabic)
English (Germany)
Romanian (Moldova)
Bosnian
English (Finland)
Western Frisian
Thai
Uzbek (Uzbekistan)
Taita (Kenya)
Interlingua (Latin, world)
Yakut (Cyrillic, Russia)
English (Seychelles)
English (Uganda)
English (New Zealand)
Zarma
Spanish (Uruguay)
Masai (Kenya)
Manipuri (India)
Russian (Ukraine)
Sango (Central African Republic)
English (Fiji)
German (Liechtenstein)
English (Barbados)
Inari Sami (Finland)
Croatian (Bosnia & Herzegovina)
Yoruba (Latin, Nigeria)
German (Austria)
Luba-Katanga (Congo - Kinshasa)
Arabic (world)
Somali (Somalia)
Latvian (Latvia)
Central Kurdish
Arabic (Kuwait)
Serbian (Cyrillic, Serbia)
Bemba
Danish
Walser
English (Lesotho)
Igbo
English (Hong Kong SAR China)
Bodo (Devanagari, India)
Meru (Latin, Kenya)
Chechen (Russia)
Georgian (Georgia)
Swahili (Tanzania)
French (Rwanda)
Malagasy (Madagascar)
English (Latin, United States)
Ossetic (Russia)
Serbian (Latin, Serbia)
Kyrgyz (Kyrgyzstan)
Central Atlas Tamazight (Latin, Morocco)
Dutch (Latin, Netherlands)
Kurdish (Latin, Turkey)
Kikuyu
Mauritian (Latin, Mauritius)
Norwegian Bokmål
Konkani
Ewondo
Norwegian Nynorsk
Arabic (Jordan)
Galician (Latin, Spain)
Bulgarian
Kabuverdianu
Zulu
Kyrgyz (Cyrillic, Kyrgyzstan)
Amharic (Ethiopia)
French (Algeria)
Tibetan (China)
Upper Sorbian
Quechua (Ecuador)
Georgian (Georgian, Georgia)
English (Montserrat)
Konkani (Devanagari, India)
English (Guernsey)
Makonde (Latin, Tanzania)
Santali (India)
Serbian (Montenegro)
Swedish (Sweden)
Nigerian Pidgin
Yakut
Meru
English (Zambia)
French (Mali)
Hausa (Nigeria)
Breton
Arabic (Saudi Arabia)
Persian (Afghanistan)
Filipino (Latin, Philippines)
Slovak
Oromo (Latin, Ethiopia)
Ossetic (Georgia)
Central Kurdish (Arabic, Iraq)
Yiddish (world)
Malayalam
English (Malta)
English (Ghana)
English (Israel)
Swedish
Kannada (Kannada, India)
Central Atlas Tamazight (Morocco)
Greek (Greek, Greece)
Koyraboro Senni (Mali)
Rwa (Latin, Tanzania)
Lakota (United States)
Sindhi (Devanagari)
Vai (Latin, Liberia)
Kurdish
Swahili (Congo - Kinshasa)
Fulah (Adlam, Mauritania)
Filipino (Philippines)
Italian (Vatican City)
Spanish (Philippines)
Spanish (Spain)
Spanish (Colombia)
Bulgarian (Bulgaria)
English (St. Vincent & Grenadines)
Koyraboro Senni (Latin, Mali)
Aghem
Upper Sorbian (Germany)
Basque (Latin, Spain)
English (Europe)
Swedish (Latin, Sweden)
Arabic (Sudan)
Hausa (Niger)
English (St. Kitts & Nevis)
Embu
Romanian (Romania)
Serbian (Latin, Montenegro)
Spanish (Guatemala)
Fulah (Latin, Liberia)
Basaa (Cameroon)
North Ndebele (Latin, Zimbabwe)
French (Madagascar)
Spanish (Chile)
Mongolian
Kamba (Kenya)
Persian (Iran)
English (Macao SAR China)
Japanese (Japanese, Japan)
Wolof
Tachelhit (Tifinagh)
English (Belize)
Lakota (Latin, United States)
Albanian (Albania)
Romanian (Latin, Romania)
Tasawaq (Niger)
Kwasio (Cameroon)
Tamil (Tamil, India)
Kabyle (Latin, Algeria)
Azerbaijani (Cyrillic)
English (Northern Mariana Islands)
English (Grenada)
Turkmen
Sangu (Latin, Tanzania)
Tachelhit (Latin)
English (Botswana)
Kabyle (Algeria)
Hebrew (Israel)
Makonde (Tanzania)
Tamil (Malaysia)
Swedish (Finland)
North Ndebele (Zimbabwe)
Luyia (Latin, Kenya)
Manipuri (Bangla)
Nepali
English (Ireland)
Chinese (Singapore)
Sinhala (Sinhala, Sri Lanka)
English (Kiribati)
Tasawaq (Latin, Niger)
Oromo (Ethiopia)
Lao (Lao, Laos)
Albanian (Latin, Albania)
Japanese (Japan)
Kamba (Latin, Kenya)
Burmese
Georgian
Fulah (Adlam, Ghana)
Korean (Korean, South Korea)
French (St. Martin)
Malay (Indonesia)
Tachelhit
Kalaallisut
Sanskrit (India)
Cantonese (Hong Kong SAR China)
Indonesian
English (Eswatini)
Faroese (Latin, Faroe Islands)
Rwa (Tanzania)
Chinese
Spanish (Peru)
Makhuwa-Meetto (Mozambique)
Samburu
English (United Kingdom)
Chinese (Traditional, Hong Kong SAR China)
Santali (Ol Chiki, India)
Kazakh (Kazakhstan)
Spanish (Panama)
Arabic (Palestinian Territories)
Bena
French (Monaco)
Cornish
Vai (Latin)
Colognian
Urdu (India)
Lingala
Chechen (Cyrillic, Russia)
Swiss German (Switzerland)
Luyia (Kenya)
Portuguese
Kako (Cameroon)
Spanish (Equatorial Guinea)
Makhuwa-Meetto (Latin, Mozambique)
Arabic (Yemen)
Tongan
English (Sint Maarten)
Russian (Kazakhstan)
Estonian
Korean (North Korea)
Dutch (Suriname)
Rombo
English (Bahamas)
Bemba (Latin, Zambia)
Belarusian
Manx
Kalenjin (Latin, Kenya)
Duala
Chiga (Latin, Uganda)
Dutch (Caribbean Netherlands)
Ewe (Latin, Ghana)
Fulah (Adlam, Guinea)
Uzbek (Cyrillic, Uzbekistan)
Hindi (Devanagari, India)
Gusii
English (Kenya)
Mauritian
Asu (Tanzania)
Japanese
French (Senegal)
Odia
Bodo
French (Morocco)
Portuguese (Luxembourg)
Fulah (Adlam, Gambia)
French (St. Barthélemy)
Metaʼ (Cameroon)
Kwasio (Latin, Cameroon)
Maithili (India)
Korean (South Korea)
Tajik (Cyrillic, Tajikistan)
Spanish (Mexico)
Zulu (Latin, South Africa)
Dogri (India)
Finnish
Uzbek
Bosnian (Cyrillic)
Serbian (Latin)
English (South Sudan)
Tibetan (India)
Romansh
Tachelhit (Morocco)
English (Madagascar)
French (Burundi)
Upper Sorbian (Latin, Germany)
Nama (Latin, Namibia)
Bengali
Breton (Latin, France)
Kannada
Ngiemboon
Bengali (Bangladesh)
Spanish (Latin, Spain)
English (South Africa)
Welsh (Latin, United Kingdom)
French (France)
Punjabi (India)
English (Marshall Islands)
French (Benin)
Vai (Liberia)
Chinese (Traditional)
Javanese (Latin, Indonesia)
Yakut (Russia)
Pashto (Afghanistan)
Kyrgyz
Masai
Bosnian (Cyrillic, Bosnia & Herzegovina)
Xhosa (Latin, South Africa)
Taita (Latin, Kenya)
Slovak (Slovakia)
Xhosa
Koyra Chiini (Latin, Mali)
Mazanderani (Arabic, Iran)
Mongolian (Cyrillic, Mongolia)
Wolof (Senegal)
Hausa (Latin, Nigeria)
French (Haiti)
Russian (Cyrillic, Russia)
Telugu (India)
Masai (Latin, Kenya)
Dutch (Sint Maarten)
Northern Luri
Chechen
French (Congo - Brazzaville)
Manx (Latin, Isle of Man)
Maltese (Malta)
Korean
Malay (Latin, Malaysia)
Malayalam (Malayalam, India)
Low German (Netherlands)
Standard Moroccan Tamazight (Tifinagh, Morocco)
Akan
Makonde
Dzongkha
Nyankole (Latin, Uganda)
English (Vanuatu)
Interlingua
Tongan (Tonga)
Fulah (Latin, Sierra Leone)
Sena (Mozambique)
Soga (Latin, Uganda)
Fulah (Adlam, Senegal)
Vietnamese (Latin, Vietnam)
Sundanese (Indonesia)
Ngomba (Latin, Cameroon)
Sichuan Yi (China)
Punjabi (Arabic, Pakistan)
French (Réunion)
Bengali (India)
French (Guadeloupe)
Punjabi
Standard Moroccan Tamazight (Morocco)
Ukrainian (Ukraine)
Rwa
Rundi
Tajik
Hungarian
French (Switzerland)
Ganda (Latin, Uganda)
Cebuano (Latin, Philippines)
English (Norfolk Island)
Tasawaq
Serbian (Cyrillic, Kosovo)
Bambara
Norwegian Bokmål (Latin, Norway)
Arabic (South Sudan)
English (Guam)
Dutch (Aruba)
English (Anguilla)
Western Frisian (Latin, Netherlands)
Soga (Uganda)
English (Cameroon)
Czech (Czechia)
Turkish
Catalan (Spain)
Hungarian (Latin, Hungary)
Romansh (Switzerland)
Russian (Moldova)
Fulah (Latin, Senegal)
English (Tonga)
Fulah (Adlam, Sierra Leone)
English (Papua New Guinea)
Estonian (Latin, Estonia)
French (Central African Republic)
Portuguese (Timor-Leste)
English (Eritrea)
Serbian (Bosnia & Herzegovina)
Spanish (Paraguay)
Konkani (India)
Belarusian (Cyrillic, Belarus)
French (Togo)
Dzongkha (Tibetan, Bhutan)
Serbian (Latin, Kosovo)
English (Philippines)
Igbo (Nigeria)
French (Guinea)
Scottish Gaelic (Latin, United Kingdom)
Chinese (Simplified, Macao SAR China)
Santali (Ol Chiki)
Northern Sami (Finland)
Fulah
English (Cook Islands)
Arabic (Morocco)
Hawaiian (Latin, United States)
English (Antigua & Barbuda)
French (Chad)
Embu (Kenya)
Lithuanian (Latin, Lithuania)
Bemba (Zambia)
Ewondo (Latin, Cameroon)
Soga
Ewondo (Cameroon)
French (Congo - Kinshasa)
Rundi (Burundi)
English (Namibia)
Metaʼ (Latin, Cameroon)
Malay
Uyghur
Catalan (Italy)
Quechua (Latin, Peru)
Langi (Tanzania)
Indonesian (Indonesia)
Teso (Kenya)
Catalan (Andorra)
Quechua (Bolivia)
Hawaiian (United States)
Vietnamese
French (Canada)
Kabuverdianu (Latin, Cape Verde)
Albanian (Kosovo)
Jola-Fonyi
Maori (Latin, New Zealand)
English (Cayman Islands)
Italian (Switzerland)
Sinhala (Sri Lanka)
Luo (Kenya)
English (United Arab Emirates)
Italian (Italy)
Esperanto
Arabic (Somalia)
English (Zimbabwe)
Norwegian Nynorsk (Norway)
French (Mauritius)
Polish
Northern Sami (Sweden)
English (Tokelau)
Mundang (Cameroon)
Urdu
Uzbek (Arabic)
Samburu (Kenya)
Portuguese (Guinea-Bissau)
Northern Sami
Shona (Latin, Zimbabwe)
Malay (Singapore)
Ewe (Togo)
Lingala (Angola)
Belarusian (Belarus)
Cantonese (Traditional)
Khmer (Khmer, Cambodia)
Italian (Latin, Italy)
Luyia
Portuguese (Cape Verde)
Ukrainian
Spanish (Puerto Rico)
Mazanderani
Walser (Switzerland)
Tatar
Russian (Belarus)
Faroese (Denmark)
Ewe (Ghana)
Arabic (Bahrain)
Kazakh (Cyrillic, Kazakhstan)
Uyghur (Arabic, China)
Hindi (India)
English (Switzerland)
Samburu (Latin, Kenya)
Asu
Faroese (Faroe Islands)
Yoruba (Benin)
Asturian (Spain)
French (Comoros)
French (Martinique)
Spanish (Argentina)
Fulah (Latin)
Dogri (Devanagari, India)
English (Malaysia)
Sangu (Tanzania)
Embu (Latin, Kenya)
Uzbek (Cyrillic)
Filipino
Cantonese (Traditional, Hong Kong SAR China)
Armenian (Armenia)
English (Gambia)
Faroese
Shambala (Latin, Tanzania)
Nepali (Nepal)
Friulian (Italy)
Tamil (India)
French (French Guiana)
Lakota
Indonesian (Latin, Indonesia)
Icelandic
Portuguese (Angola)
Telugu (Telugu, India)
Sinhala
English (world)
Duala (Latin, Cameroon)
Javanese (Indonesia)
Langi (Latin, Tanzania)
Russian (Kyrgyzstan)
French (Mauritania)
Bafia (Latin, Cameroon)
Kashmiri
Chinese (Traditional, Taiwan)
Fulah (Latin, Burkina Faso)
Assamese (India)
Chinese (Hong Kong SAR China)
Swahili (Kenya)
Thai (Thailand)
Assamese (Bangla, India)
Machame
Cantonese
English (Malawi)
Nama (Namibia)
English (British Indian Ocean Territory)
Arabic (Qatar)
Arabic (Arabic, Egypt)
English (Cocos (Keeling) Islands)
Portuguese (Portugal)
Slovak (Latin, Slovakia)
Azerbaijani (Cyrillic, Azerbaijan)
Central Kurdish (Iraq)
Tachelhit (Latin, Morocco)
Spanish (Cuba)
Arabic
English (US Virgin Islands)
Hawaiian
Basque (Spain)
Basaa
Igbo (Latin, Nigeria)
Greek (Greece)
Uzbek (Latin)
Yangben (Cameroon)
Sango
Danish (Greenland)
Khmer (Cambodia)
Central Kurdish (Iran)
Dutch
Kashmiri (Arabic, India)
Catalan (Spain, Valencian)
Wolof (Latin, Senegal)
Sindhi (Devanagari, India)
Marathi (Devanagari, India)
Spanish (Costa Rica)
French (Gabon)
Serbian
Arabic (Libya)
English (Mauritius)
Galician (Spain)
Azerbaijani (Latin, Azerbaijan)
English (Isle of Man)
Swiss German (Latin, Switzerland)
Sena (Latin, Mozambique)
English (Gibraltar)
English (Canada)
Scottish Gaelic
Cherokee (Cherokee, United States)
French (Syria)
Odia (Odia, India)
Somali (Ethiopia)
Catalan (Latin, Spain)
Dutch (Belgium)
Arabic (Djibouti)
Jola-Fonyi (Latin, Senegal)
Welsh (United Kingdom)
English (British Virgin Islands)
English (Turks & Caicos Islands)
Swedish (Åland Islands)
Czech (Latin, Czechia)
Afrikaans (Namibia)
Vunjo
English (India)
Luba-Katanga
Yoruba
Spanish (Nicaragua)
Sichuan Yi (Yi, China)
Sindhi (Pakistan)
Masai (Tanzania)
Tigrinya
Malay (Brunei)
Chakma (India)
Breton (France)

================================================================

Sample: Locale_16
----------------------------------------------------------------
stdout:
Default Locale: en_CA

================================================================

Sample: Locale_17
----------------------------------------------------------------
================================================================

Sample: Locale_Builder_1
----------------------------------------------------------------
stdout:
en

================================================================

Sample: Locale_Builder_2
----------------------------------------------------------------
stdout:
_US

================================================================

Sample: Locale_Builder_3
----------------------------------------------------------------
stdout:


================================================================

Sample: Locale_Builder_5
----------------------------------------------------------------
stdout:
en_US

================================================================

Sample: LongSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count: 3

================================================================

Sample: LongSummaryStatistics_2
----------------------------------------------------------------
stdout:
Sum: 60

================================================================

Sample: LongSummaryStatistics_3
----------------------------------------------------------------
stdout:
Min: 10

================================================================

Sample: LongSummaryStatistics_4
----------------------------------------------------------------
stdout:
Max: 30

================================================================

Sample: LongSummaryStatistics_5
----------------------------------------------------------------
stdout:
Average: 20.0

================================================================

Sample: Objects_1
----------------------------------------------------------------
stdout:
false
true
false
false
true

================================================================

Sample: Objects_2
----------------------------------------------------------------
stdout:
Hash code of 'Hello' is: 69609650

================================================================

Sample: Objects_3
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Objects_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Observable_1
----------------------------------------------------------------
stderr:
Note: ./Data/java_util/javaFiles/Observable_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_2.java:10: error: setChanged() has protected access in Observable
        observable.setChanged();
                  ^
Note: ./Data/java_util/javaFiles/Observable_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: Observable_3
----------------------------------------------------------------
stderr:
Note: ./Data/java_util/javaFiles/Observable_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_4
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_4.java:7: error: setChanged() has protected access in Observable
        observable.setChanged();
                  ^
./Data/java_util/javaFiles/Observable_4.java:9: error: clearChanged() has protected access in Observable
        observable.clearChanged();
                  ^
Note: ./Data/java_util/javaFiles/Observable_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
2 errors


================================================================

Sample: Observable_5
----------------------------------------------------------------
stdout:
0

stderr:
Note: ./Data/java_util/javaFiles/Observable_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_6
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_6.java:21: error: setChanged() has protected access in Observable
        observable.setChanged();
                  ^
Note: ./Data/java_util/javaFiles/Observable_6.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: Observable_7
----------------------------------------------------------------
stdout:
Received update: Hello, World!

stderr:
Note: ./Data/java_util/javaFiles/Observable_7.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_8
----------------------------------------------------------------
stderr:
Note: ./Data/java_util/javaFiles/Observable_8.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_9
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_9.java:9: error: clearChanged() has protected access in Observable
        observable.clearChanged();
                  ^
Note: ./Data/java_util/javaFiles/Observable_9.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: Optional_3
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Optional_4
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Optional_5
----------------------------------------------------------------
stdout:
Default Value

================================================================

Sample: OptionalInt_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: OptionalInt_2
----------------------------------------------------------------
stdout:
10

================================================================

Sample: OptionalInt_3
----------------------------------------------------------------
stdout:
10
20

================================================================

Sample: OptionalInt_4
----------------------------------------------------------------
stdout:
Result: 10

================================================================

Sample: OptionalLong_1
----------------------------------------------------------------
stdout:
100

================================================================

Sample: OptionalLong_2
----------------------------------------------------------------
stdout:
false

================================================================

Sample: OptionalLong_3
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: OptionalLong_4
----------------------------------------------------------------
stdout:
Value: 100

================================================================

Sample: OptionalLong_5
----------------------------------------------------------------
stdout:
10
20

================================================================

Sample: PriorityQueue_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: PriorityQueue_3
----------------------------------------------------------------
stdout:
Peek: Apple

================================================================

Sample: PriorityQueue_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: PriorityQueue_5
----------------------------------------------------------------
stdout:
2

================================================================

Sample: Properties_1
----------------------------------------------------------------
stdout:
value1
value2

================================================================

Sample: Properties_2
----------------------------------------------------------------
stdout:
value1

================================================================

Sample: Properties_3
----------------------------------------------------------------
stdout:
value1
defaultValue

================================================================

Sample: Properties_5
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: config.properties (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at Properties_5.main(Properties_5.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PropertyPermission_1
----------------------------------------------------------------
stdout:
true

================================================================

Sample: PropertyPermission_2
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: PropertyPermission_3
----------------------------------------------------------------
stdout:
read,write

================================================================

Sample: PropertyPermission_5
----------------------------------------------------------------
stdout:
Hash code: 560567564

================================================================

Sample: PropertyResourceBundle_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name myBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at PropertyResourceBundle_2.main(PropertyResourceBundle_2.java:7)

================================================================

Sample: Random_2
----------------------------------------------------------------
stdout:
Random number: -1118531167

================================================================

Sample: Random_3
----------------------------------------------------------------
stdout:
6

================================================================

Sample: Random_4
----------------------------------------------------------------
stdout:
Random long: 2544401043152016003

================================================================

Sample: Random_5
----------------------------------------------------------------
stdout:
Random boolean: false

================================================================

Sample: ResourceBundle_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_1.main(ResourceBundle_1.java:6)

================================================================

Sample: ResourceBundle_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_2.main(ResourceBundle_2.java:6)

================================================================

Sample: ResourceBundle_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_3.main(ResourceBundle_3.java:7)

================================================================

Sample: ResourceBundle_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:932)
	at ResourceBundle_4.main(ResourceBundle_4.java:6)

================================================================

Sample: ResourceBundle_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name myBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_5.main(ResourceBundle_5.java:5)

================================================================

Sample: Scanner_1
----------------------------------------------------------------
stdout:
Enter a string: 
in
case

================================================================

Sample: Scanner_2
----------------------------------------------------------------
stdout:
Enter a line:
You entered: in case

================================================================

Sample: Scanner_3
----------------------------------------------------------------
stdout:
Enter a string:
You entered: in

================================================================

Sample: Scanner_4
----------------------------------------------------------------
stdout:
Enter a line of text:
You entered: in case

================================================================

Sample: Scanner_5
----------------------------------------------------------------
stdout:
Enter an integer:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextInt(Scanner.java:2258)
	at java.base/java.util.Scanner.nextInt(Scanner.java:2212)
	at Scanner_5.main(Scanner_5.java:7)

================================================================

Sample: Scanner_6
----------------------------------------------------------------
stdout:
Enter a double:
Invalid input. Please enter a double.

================================================================

Sample: Scanner_7
----------------------------------------------------------------
stdout:
Enter a float:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextFloat(Scanner.java:2496)
	at Scanner_7.main(Scanner_7.java:7)

================================================================

Sample: Scanner_8
----------------------------------------------------------------
stdout:
Enter a long number:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextLong(Scanner.java:2373)
	at java.base/java.util.Scanner.nextLong(Scanner.java:2328)
	at Scanner_8.main(Scanner_8.java:7)

================================================================

Sample: Scanner_9
----------------------------------------------------------------
stdout:
Enter a boolean value:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextBoolean(Scanner.java:1893)
	at Scanner_9.main(Scanner_9.java:7)

================================================================

Sample: Scanner_10
----------------------------------------------------------------
stdout:
Enter a BigInteger:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextBigInteger(Scanner.java:2676)
	at java.base/java.util.Scanner.nextBigInteger(Scanner.java:2636)
	at Scanner_10.main(Scanner_10.java:8)

================================================================

Sample: Scanner_11
----------------------------------------------------------------
stdout:
Enter a BigDecimal:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextBigDecimal(Scanner.java:2740)
	at Scanner_11.main(Scanner_11.java:8)

================================================================

Sample: Scanner_12
----------------------------------------------------------------
stdout:
Hello
World! This is a test.

================================================================

Sample: Scanner_14
----------------------------------------------------------------
================================================================

Sample: ServiceLoader_5
----------------------------------------------------------------
================================================================

Sample: SimpleTimeZone_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/SimpleTimeZone_2.java:5: error: no suitable constructor found for SimpleTimeZone(int,int,String)
        SimpleTimeZone stz = new SimpleTimeZone(0, 0, "GMT");
                             ^
    constructor SimpleTimeZone.SimpleTimeZone(int,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: Spliterators_AbstractDoubleSpliterator_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.util.Spliterators$AbstractDoubleSpliterator.characteristics()" because "<local1>" is null
	at Spliterators_AbstractDoubleSpliterator_4.main(Spliterators_AbstractDoubleSpliterator_4.java:6)

================================================================

Sample: Spliterators_AbstractLongSpliterator_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.util.Spliterators$AbstractLongSpliterator.characteristics()" because "<local1>" is null
	at Spliterators_AbstractLongSpliterator_5.main(Spliterators_AbstractLongSpliterator_5.java:6)

================================================================

Sample: SplittableRandom_2
----------------------------------------------------------------
stdout:
-4819531256499049570

================================================================

Sample: SplittableRandom_3
----------------------------------------------------------------
stdout:
0.39167364363252144

================================================================

Sample: SplittableRandom_4
----------------------------------------------------------------
stdout:
Generated random int: 1880033229

================================================================

Sample: SplittableRandom_5
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Stack_1
----------------------------------------------------------------
stdout:
Is the stack empty? true
Is the stack empty? false

================================================================

Sample: Stack_2
----------------------------------------------------------------
stdout:
Top element: World
Stack after peek: [Hello, World]

================================================================

Sample: Stack_3
----------------------------------------------------------------
stdout:
World
Hello

================================================================

Sample: Stack_4
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: Stack_5
----------------------------------------------------------------
stdout:
1

================================================================

Sample: StringJoiner_3
----------------------------------------------------------------
stdout:
Joiner 1: {A, B, C}
Joiner 2: {D, E, F}
After merge: {A, B, C, D, E, F}

================================================================

Sample: StringJoiner_4
----------------------------------------------------------------
stdout:
No elements

================================================================

Sample: StringJoiner_5
----------------------------------------------------------------
stdout:
[Hello, World]

================================================================

Sample: StringTokenizer_3
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: StringTokenizer_4
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: StringTokenizer_5
----------------------------------------------------------------
stdout:
This
is
a
test

================================================================

Sample: Timer_1
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_2
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_3
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_4
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_5
----------------------------------------------------------------
stdout:
Task executed

stderr:
Exception in thread "main" java.lang.IllegalStateException: Timer already cancelled.
	at java.base/java.util.Timer.sched(Timer.java:409)
	at java.base/java.util.Timer.schedule(Timer.java:205)
	at Timer_5.main(Timer_5.java:26)

================================================================

Sample: TimerTask_3
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: TimerTask_4
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: TreeMap_1
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: TreeMap_2
----------------------------------------------------------------
stdout:
1
null

================================================================

Sample: TreeMap_3
----------------------------------------------------------------
stdout:
{One=1, Three=3, Two=2}

================================================================

Sample: TreeMap_4
----------------------------------------------------------------
stdout:
Original TreeMap: {One=1, Three=3, Two=2}
Removed Value: 2
Updated TreeMap: {One=1, Three=3}

================================================================

Sample: TreeMap_5
----------------------------------------------------------------
stdout:
Before replace: {One=1, Three=3, Two=2}
After replace: {One=1, Three=3, Two=20}
Replaced value: 2

================================================================

Sample: TreeSet_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: TreeSet_2
----------------------------------------------------------------
stdout:
[Hello, Java, Python, World]

================================================================

Sample: TreeSet_3
----------------------------------------------------------------
stdout:
Before clear: [Hello, World]
After clear: []

================================================================

Sample: TreeSet_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: TreeSet_5
----------------------------------------------------------------
stdout:
Before removal: [Hello, World]
After removal: [World]
Is removed? true

================================================================

Sample: UUID_1
----------------------------------------------------------------
stdout:
123e4567-e89b-12d3-a456-426655440000

================================================================

Sample: UUID_2
----------------------------------------------------------------
stdout:
Generated UUID: 8ae5805c-a76e-4c77-b7b5-b30dcb3054a4

================================================================

Sample: UUID_3
----------------------------------------------------------------
stdout:
UUID 1: 6a7a2055-6cd6-4058-809c-842c5848e7f2
UUID 2: 6f81e63b-b30f-4618-8302-18545c80a38d
UUID 1 is less than UUID 2

================================================================

Sample: UUID_4
----------------------------------------------------------------
stdout:
8731d092-aa10-4ae1-a873-708f007a2d83

================================================================

Sample: UUID_5
----------------------------------------------------------------
stdout:
This UUID is not a version 1 UUID

================================================================

Sample: Vector_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: Vector_3
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Vector_4
----------------------------------------------------------------
stdout:
Before set: [Hello, World]
After set: [Hello, Java]

================================================================

Sample: Vector_5
----------------------------------------------------------------
stdout:
Before removing: [Hello, World]
After removing: [Hello]

================================================================

Sample: WeakHashMap_1
----------------------------------------------------------------
stdout:
value1
null

================================================================

Sample: WeakHashMap_2
----------------------------------------------------------------
stdout:
{key1=value1, key2=value2}

================================================================

Sample: WeakHashMap_3
----------------------------------------------------------------
stdout:
{key1=value1, key2=value2}
{key2=value2}

================================================================

Sample: WeakHashMap_4
----------------------------------------------------------------
stdout:
Map before clear: {Two=2, One=1}
Map after clear: {}

================================================================

Sample: WeakHashMap_5
----------------------------------------------------------------
stdout:
true
false

================================================================

