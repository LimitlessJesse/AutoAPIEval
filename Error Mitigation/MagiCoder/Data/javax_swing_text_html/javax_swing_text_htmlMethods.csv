ClassName,Method,Return Type,Description
BlockView,"calculateMajorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculate the requirements of the block along the major axis (i.e.
BlockView,"calculateMinorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculate the requirements of the block along the minor axis (i.e.
BlockView,"changedUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
BlockView,getAlignment(int axis),float,Gets the alignment.
BlockView,getAttributes(),AttributeSet,Fetches the attributes to use when rendering.
BlockView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
BlockView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
BlockView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
BlockView,getResizeWeight(int axis),int,Gets the resize weight.
BlockView,getStyleSheet(),protected StyleSheet,NULL
BlockView,"layoutMinorAxis(int targetSpan, int axis, int[] offsets, int[] spans)",protected void,Performs layout for the minor axis of the box (i.e.
BlockView,"paint(Graphics g, Shape allocation)",void,Renders using the given rendering surface and area on that surface.
BlockView,setParent(View parent),void,Establishes the parent view for this view.
BlockView,setPropertiesFromAttributes(),protected void,Update any cached values that come from attributes.
CSS,getAllAttributeKeys(),static CSS.Attribute[],Return the set of all possible CSS attribute keys.
CSS,getAttribute(String name),static CSS.Attribute,Translates a string to a CSS.Attribute object.
CSS.Attribute,getDefaultValue(),String,Fetch the default value for the attribute.
CSS.Attribute,isInherited(),boolean,Indicates if the attribute should be inherited from the parent or not.
CSS.Attribute,toString(),String,The string representation of the attribute.
FormSubmitEvent,getData(),String,Gets the form submission data.
FormSubmitEvent,getMethod(),FormSubmitEvent.MethodType,Gets the form method type.
FormView,actionPerformed(ActionEvent evt),void,Responsible for processing the ActionEvent.
FormView,createComponent(),protected Component,Create the component.
FormView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
FormView,imageSubmit(String imageData),protected void,"This method is called to submit a form in response to a click on an image -- an <INPUT> form element of type ""image""."
FormView,submitData(String data),protected void,This method is responsible for submitting the form data.
HTML,getAllAttributeKeys(),static HTML.Attribute[],Returns the set of HTML attributes recognized.
HTML,getAllTags(),static HTML.Tag[],Returns the set of actual HTML tags that are recognized by the default HTML reader.
HTML,getAttributeKey(String attName),static HTML.Attribute,Fetches an attribute constant for a well-known attribute name (i.e.
HTML,"getIntegerAttributeValue(AttributeSet attr, HTML.Attribute key, int def)",static int,Fetches an integer attribute value.
HTML,getTag(String tagName),static HTML.Tag,Fetches a tag constant for a well-known tag name (i.e.
HTML.Attribute,toString(),String,Returns the string representation of this attribute.
HTML.Tag,breaksFlow(),boolean,"Returns true if this tag causes a line break to the flow of data, otherwise returns false."
HTML.Tag,isBlock(),boolean,"Returns true if this tag is a block tag, which is a tag used to add structure to a document."
HTML.Tag,isPreformatted(),boolean,"Returns true if this tag is pre-formatted, which is true if the tag is either PRE or TEXTAREA."
HTML.Tag,toString(),String,Returns the string representation of the tag.
HTML.UnknownTag,equals(Object obj),boolean,Compares this object to the specified object.
HTML.UnknownTag,hashCode(),int,Returns the hash code which corresponds to the string for this tag.
HTMLDocument,create(DefaultStyledDocument.ElementSpec[] data),protected void,Replaces the contents of the document with the given element specifications.
HTMLDocument,"createBranchElement(Element parent, AttributeSet a)",protected Element,"Creates a document branch element, that can contain other elements."
HTMLDocument,createDefaultRoot(),protected AbstractDocument.AbstractElement,Creates the root element to be used to represent the default document structure.
HTMLDocument,"createLeafElement(Element parent, AttributeSet a, int p0, int p1)",protected Element,Creates a document leaf element that directly represents text (doesn't have any children).
HTMLDocument,fireChangedUpdate(DocumentEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
HTMLDocument,fireUndoableEditUpdate(UndoableEditEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
HTMLDocument,getBase(),URL,Returns the location to resolve relative URLs against.
HTMLDocument,"getElement(Element e, Object attribute, Object value)",Element,"Returns the child element of e that contains the attribute, attribute with value value, or null if one isn't found."
HTMLDocument,getElement(String id),Element,Returns the element that has the given id Attribute.
HTMLDocument,getIterator(HTML.Tag t),HTMLDocument.Iterator,Fetches an iterator for the specified HTML tag.
HTMLDocument,getParser(),HTMLEditorKit.Parser,Returns the parser that is used when inserting HTML into the existing document.
HTMLDocument,getPreservesUnknownTags(),boolean,Returns the behavior the parser observes when encountering unknown tags.
HTMLDocument,getReader(int pos),HTMLEditorKit.ParserCallback,Fetches the reader for the parser to use when loading the document with HTML.
HTMLDocument,"getReader(int pos, int popDepth, int pushDepth, HTML.Tag insertTag)",HTMLEditorKit.ParserCallback,Returns the reader for the parser to use to load the document with HTML.
HTMLDocument,getStyleSheet(),StyleSheet,Fetches the StyleSheet with the document-specific display rules (CSS) that were specified in the HTML document itself.
HTMLDocument,getTokenThreshold(),int,Gets the number of tokens to buffer before trying to update the documents element structure.
HTMLDocument,"insert(int offset, DefaultStyledDocument.ElementSpec[] data)",protected void,Inserts new elements in bulk.
HTMLDocument,"insertAfterEnd(Element elem, String htmlText)",void,Inserts the HTML specified as a string after the the end of the given element.
HTMLDocument,"insertAfterStart(Element elem, String htmlText)",void,Inserts the HTML specified as a string at the start of the element.
HTMLDocument,"insertBeforeEnd(Element elem, String htmlText)",void,Inserts the HTML specified as a string at the end of the element.
HTMLDocument,"insertBeforeStart(Element elem, String htmlText)",void,Inserts the HTML specified as a string before the start of the given element.
HTMLDocument,"insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)",protected void,Updates document structure as a result of text insertion.
HTMLDocument,processHTMLFrameHyperlinkEvent(HTMLFrameHyperlinkEvent e),void,Processes HyperlinkEvents that are generated by documents in an HTML frame.
HTMLDocument,setBase(URL u),void,Sets the location to resolve relative URLs against.
HTMLDocument,"setInnerHTML(Element elem, String htmlText)",void,Replaces the children of the given element with the contents specified as an HTML string.
HTMLDocument,"setOuterHTML(Element elem, String htmlText)",void,Replaces the given element in the parent with the contents specified as an HTML string.
HTMLDocument,"setParagraphAttributes(int offset, int length, AttributeSet s, boolean replace)",void,Sets attributes for a paragraph.
HTMLDocument,setParser(HTMLEditorKit.Parser parser),void,"Sets the parser that is used by the methods that insert html into the existing document, such as setInnerHTML, and setOuterHTML."
HTMLDocument,setPreservesUnknownTags(boolean preservesTags),void,Determines how unknown tags are handled by the parser.
HTMLDocument,setTokenThreshold(int n),void,Sets the number of tokens to buffer before trying to update the documents element structure.
HTMLDocument.Iterator,getAttributes(),abstract AttributeSet,Return the attributes for this tag.
HTMLDocument.Iterator,getEndOffset(),abstract int,Returns the end of the range for which the current occurrence of the tag is defined and has the same attributes.
HTMLDocument.Iterator,getStartOffset(),abstract int,Returns the start of the range for which the current occurrence of the tag is defined and has the same attributes.
HTMLDocument.Iterator,getTag(),abstract HTML.Tag,Type of tag this iterator represents.
HTMLDocument.Iterator,isValid(),abstract boolean,Indicates if the iterator is currently representing an occurrence of a tag.
HTMLDocument.Iterator,next(),abstract void,Move the iterator forward to the next occurrence of the tag it represents.
HTMLEditorKit,clone(),Object,Creates a copy of the editor kit.
HTMLEditorKit,createDefaultDocument(),Document,Create an uninitialized text storage model that is appropriate for this type of editor.
HTMLEditorKit,"createInputAttributes(Element element, MutableAttributeSet set)",protected void,Copies the key/values in elements AttributeSet into set.
HTMLEditorKit,deinstall(JEditorPane c),void,Called when the kit is being removed from the JEditorPane.
HTMLEditorKit,getAccessibleContext(),AccessibleContext,returns the AccessibleContext associated with this editor kit
HTMLEditorKit,getActions(),Action[],Fetches the command list for the editor.
HTMLEditorKit,getContentType(),String,Get the MIME type of the data that this kit represents support for.
HTMLEditorKit,getDefaultCursor(),Cursor,Returns the default cursor.
HTMLEditorKit,getInputAttributes(),MutableAttributeSet,Gets the input attributes used for the styled editing actions.
HTMLEditorKit,getLinkCursor(),Cursor,Returns the cursor to use over hyper links.
HTMLEditorKit,getParser(),protected HTMLEditorKit.Parser,Fetch the parser to use for reading HTML streams.
HTMLEditorKit,getStyleSheet(),StyleSheet,Get the set of styles currently being used to render the HTML elements.
HTMLEditorKit,getViewFactory(),ViewFactory,Fetch a factory that is suitable for producing views of any models that are produced by this kit.
HTMLEditorKit,"insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag)",void,Inserts HTML into an existing document.
HTMLEditorKit,install(JEditorPane c),void,Called when the kit is being installed into the a JEditorPane.
HTMLEditorKit,isAutoFormSubmission(),boolean,Indicates whether an html form submission is processed automatically or only FormSubmitEvent is fired.
HTMLEditorKit,"read(Reader in, Document doc, int pos)",void,Inserts content from the given stream.
HTMLEditorKit,setAutoFormSubmission(boolean isAuto),void,Specifies if an html form submission is processed automatically or only FormSubmitEvent is fired.
HTMLEditorKit,setDefaultCursor(Cursor cursor),void,Sets the default cursor.
HTMLEditorKit,setLinkCursor(Cursor cursor),void,Sets the cursor to use over links.
HTMLEditorKit,setStyleSheet(StyleSheet s),void,Set the set of styles to be used to render the various HTML elements.
HTMLEditorKit,"write(Writer out, Document doc, int pos, int len)",void,Write content from a document to the given stream in a format appropriate for this kind of content handler.
HTMLEditorKit.HTMLFactory,create(Element elem),View,Creates a view from an element.
HTMLEditorKit.HTMLTextAction,"elementCountToTag(HTMLDocument doc, int offset, HTML.Tag tag)",protected int,"Returns number of elements, starting at the deepest leaf, needed to get to an element representing tag."
HTMLEditorKit.HTMLTextAction,"findElementMatchingTag(HTMLDocument doc, int offset, HTML.Tag tag)",protected Element,Returns the deepest element at offset matching tag.
HTMLEditorKit.HTMLTextAction,"getElementsAt(HTMLDocument doc, int offset)",protected Element[],Returns an array of the Elements that contain offset.
HTMLEditorKit.HTMLTextAction,getHTMLDocument(JEditorPane e),protected HTMLDocument,NULL
HTMLEditorKit.HTMLTextAction,getHTMLEditorKit(JEditorPane e),protected HTMLEditorKit,NULL
HTMLEditorKit.InsertHTMLTextAction,actionPerformed(ActionEvent ae),void,Inserts the HTML into the document.
HTMLEditorKit.InsertHTMLTextAction,"insertAtBoundary(JEditorPane editor, HTMLDocument doc, int offset, Element insertElement, String html, HTML.Tag parentTag, HTML.Tag addTag)",protected void,This is invoked when inserting at a boundary.
HTMLEditorKit.InsertHTMLTextAction,"insertAtBoundry(JEditorPane editor, HTMLDocument doc, int offset, Element insertElement, String html, HTML.Tag parentTag, HTML.Tag addTag)",protected void,"Deprecated. As of Java 2 platform v1.3, use insertAtBoundary"
HTMLEditorKit.InsertHTMLTextAction,"insertHTML(JEditorPane editor, HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag addTag)",protected void,A cover for HTMLEditorKit.insertHTML.
HTMLEditorKit.LinkController,"activateLink(int pos, JEditorPane editor)",protected void,Calls linkActivated on the associated JEditorPane if the given position represents a link.
HTMLEditorKit.LinkController,mouseClicked(MouseEvent e),void,Called for a mouse click event.
HTMLEditorKit.LinkController,mouseDragged(MouseEvent e),void,Invoked when a mouse button is pressed on a component and then dragged.
HTMLEditorKit.LinkController,mouseMoved(MouseEvent e),void,Invoked when the mouse cursor has been moved onto a component but no buttons have been pushed.
HTMLEditorKit.Parser,"parse(Reader r, HTMLEditorKit.ParserCallback cb, boolean ignoreCharSet)",abstract void,Parse the given stream and drive the given callback with the results of the parse.
HTMLEditorKit.ParserCallback,flush(),void,NULL
HTMLEditorKit.ParserCallback,"handleComment(char[] data, int pos)",void,NULL
HTMLEditorKit.ParserCallback,handleEndOfLineString(String eol),void,"This is invoked after the stream has been parsed, but before flush."
HTMLEditorKit.ParserCallback,"handleEndTag(HTML.Tag t, int pos)",void,NULL
HTMLEditorKit.ParserCallback,"handleError(String errorMsg, int pos)",void,NULL
HTMLEditorKit.ParserCallback,"handleSimpleTag(HTML.Tag t, MutableAttributeSet a, int pos)",void,NULL
HTMLEditorKit.ParserCallback,"handleStartTag(HTML.Tag t, MutableAttributeSet a, int pos)",void,NULL
HTMLEditorKit.ParserCallback,"handleText(char[] data, int pos)",void,NULL
HTMLFrameHyperlinkEvent,getTarget(),String,returns the target for the link.
HTMLWriter,closeOutUnwantedEmbeddedTags(AttributeSet attr),protected void,Searches the attribute set and for each tag that is stored in the tag vector.
HTMLWriter,comment(Element elem),protected void,Writes out comments.
HTMLWriter,emptyTag(Element elem),protected void,Writes out all empty elements (all tags that have no corresponding end tag).
HTMLWriter,endTag(Element elem),protected void,Writes out an end tag for the element.
HTMLWriter,isBlockTag(AttributeSet attr),protected boolean,Determines if the HTML.Tag associated with the element is a block tag.
HTMLWriter,"matchNameAttribute(AttributeSet attr, HTML.Tag tag)",protected boolean,Returns true if the StyleConstants.NameAttribute is equal to the tag that is passed in as a parameter.
HTMLWriter,"output(char[] chars, int start, int length)",protected void,"This method is overriden to map any character entities, such as < to &lt;."
HTMLWriter,selectContent(AttributeSet attr),protected void,Writes out the content of the SELECT form element.
HTMLWriter,startTag(Element elem),protected void,Writes out a start tag for the element.
HTMLWriter,synthesizedElement(Element elem),protected boolean,Returns true if the element is a synthesized element.
HTMLWriter,text(Element elem),protected void,Writes out text.
HTMLWriter,textAreaContent(AttributeSet attr),protected void,Writes out text that is contained in a TEXTAREA form element.
HTMLWriter,write(),void,Iterates over the Element tree and controls the writing out of all the tags and its attributes.
HTMLWriter,writeAttributes(AttributeSet attr),protected void,Writes out the attribute set.
HTMLWriter,writeEmbeddedTags(AttributeSet attr),protected void,Searches for embedded tags in the AttributeSet and writes them out.
HTMLWriter,writeLineSeparator(),protected void,Writes the line separator.
HTMLWriter,writeOption(Option option),protected void,Writes out the content of the Option form element.
ImageView,"changedUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Invoked when the Elements attributes have changed.
ImageView,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
ImageView,getAltText(),String,Returns the text to display if the image can't be loaded.
ImageView,getAttributes(),AttributeSet,Fetches the attributes to use when rendering.
ImageView,getImage(),Image,Returns the image to render.
ImageView,getImageURL(),URL,"Return a URL for the image source, or null if it could not be determined."
ImageView,getLoadingImageIcon(),Icon,Returns the icon to use while in the process of loading the image.
ImageView,getLoadsSynchronously(),boolean,Returns true if the image should be loaded when first asked for.
ImageView,getNoImageIcon(),Icon,Returns the icon to use if the image couldn't be found.
ImageView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
ImageView,getStyleSheet(),protected StyleSheet,Convenience method to get the StyleSheet.
ImageView,"getToolTipText(float x, float y, Shape allocation)",String,For images the tooltip text comes from text specified with the ALT attribute.
ImageView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
ImageView,"paint(Graphics g, Shape a)",void,Paints the View.
ImageView,setLoadsSynchronously(boolean newValue),void,Sets how the image is loaded.
ImageView,setParent(View parent),void,Establishes the parent view for this view.
ImageView,setPropertiesFromAttributes(),protected void,Update any cached values that come from attributes.
ImageView,"setSize(float width, float height)",void,Sets the size of the view.
ImageView,"viewToModel(float x, float y, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
InlineView,"breakView(int axis, int offset, float pos, float len)",View,Tries to break this view on the given axis.
InlineView,"changedUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
InlineView,getAttributes(),AttributeSet,Fetches the attributes to use when rendering.
InlineView,"getBreakWeight(int axis, float pos, float len)",int,Determines how attractive a break opportunity in this view is.
InlineView,getStyleSheet(),protected StyleSheet,NULL
InlineView,"insertUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
InlineView,"removeUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
InlineView,setPropertiesFromAttributes(),protected void,Set the cached properties from the attributes.
ListView,getAlignment(int axis),float,Calculates the desired shape of the list.
ListView,"paint(Graphics g, Shape allocation)",void,Renders using the given rendering surface and area on that surface.
ListView,"paintChild(Graphics g, Rectangle alloc, int index)",protected void,Paints one of the children; called by paint().
ListView,setPropertiesFromAttributes(),protected void,Update any cached values that come from attributes.
MinimalHTMLWriter,endFontTag(),protected void,"This is no longer used, instead <span> will be written out."
MinimalHTMLWriter,inFontTag(),protected boolean,Returns true if we are currently in a <font> tag.
MinimalHTMLWriter,isText(Element elem),protected boolean,Returns true if the element is a text element.
MinimalHTMLWriter,startFontTag(String style),protected void,"This is no longer used, instead <span> will be written out."
MinimalHTMLWriter,text(Element elem),protected void,Writes out text.
MinimalHTMLWriter,write(),void,Generates HTML output from a StyledDocument.
MinimalHTMLWriter,writeAttributes(AttributeSet attr),protected void,"Writes out all the attributes for the following types: StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants."
MinimalHTMLWriter,writeBody(),protected void,Iterates over the elements in the document and processes elements based on whether they are branch elements or leaf elements.
MinimalHTMLWriter,writeComponent(Element elem),protected void,Responsible for handling Component Elements; deliberately unimplemented.
MinimalHTMLWriter,"writeContent(Element elem, boolean needsIndenting)",protected void,Writes out the attribute set in an HTML-compliant manner.
MinimalHTMLWriter,writeEndParagraph(),protected void,Emits an end tag for a <p> tag.
MinimalHTMLWriter,writeEndTag(String endTag),protected void,Writes out an end tag appropriately indented.
MinimalHTMLWriter,writeHeader(),protected void,"Writes out the <head> and <style> tags, and then invokes writeStyles() to write out all the named styles as the content of the <style> tag."
MinimalHTMLWriter,writeHTMLTags(AttributeSet attr),protected void,"Generates bold <b>, italic <i>, and <u> tags for the text based on its attribute settings."
MinimalHTMLWriter,writeImage(Element elem),protected void,Responsible for handling Icon Elements; deliberately unimplemented.
MinimalHTMLWriter,writeLeaf(Element elem),protected void,Responsible for writing out other non-text leaf elements.
MinimalHTMLWriter,writeNonHTMLAttributes(AttributeSet attr),protected void,"Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way."
MinimalHTMLWriter,writeStartParagraph(Element elem),protected void,Emits the start tag for a paragraph.
MinimalHTMLWriter,writeStartTag(String tag),protected void,Writes out a start tag appropriately indented.
MinimalHTMLWriter,writeStyles(),protected void,Writes out all the named styles as the content of the <style> tag.
ObjectView,createComponent(),protected Component,Create the component.
Option,getAttributes(),AttributeSet,Fetch the attributes associated with this option.
Option,getLabel(),String,Fetch the label associated with the option.
Option,getValue(),String,Convenience method to return the string associated with the value attribute.
Option,isSelected(),boolean,Fetches the selection state associated with this option.
Option,setLabel(String label),void,Sets the label to be used for the option.
Option,setSelection(boolean state),protected void,Sets the selected state.
Option,toString(),String,String representation is the label.
ParagraphView,"calculateMinorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculate the needs for the paragraph along the minor axis.
ParagraphView,getAttributes(),AttributeSet,Fetches the attributes to use when rendering.
ParagraphView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
ParagraphView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
ParagraphView,getPreferredSpan(int axis),float,Determines the preferred span for this view.
ParagraphView,getStyleSheet(),protected StyleSheet,NULL
ParagraphView,isVisible(),boolean,Indicates whether or not this view should be displayed.
ParagraphView,"paint(Graphics g, Shape a)",void,Renders using the given rendering surface and area on that surface.
ParagraphView,setParent(View parent),void,Establishes the parent view for this view.
ParagraphView,setPropertiesFromAttributes(),protected void,Sets up the paragraph from css attributes instead of the values found in StyleConstants (i.e.
StyleSheet,"addAttribute(AttributeSet old, Object key, Object value)",AttributeSet,"Adds an attribute to the given set, and returns the new representative set."
StyleSheet,"addAttributes(AttributeSet old, AttributeSet attr)",AttributeSet,Adds a set of attributes to the element.
StyleSheet,"addCSSAttribute(MutableAttributeSet attr, CSS.Attribute key, String value)",void,Adds a CSS attribute to the given set.
StyleSheet,"addCSSAttributeFromHTML(MutableAttributeSet attr, CSS.Attribute key, String value)",boolean,Adds a CSS attribute to the given set.
StyleSheet,addRule(String rule),void,Adds a set of rules to the sheet.
StyleSheet,addStyleSheet(StyleSheet ss),void,Adds the rules from the StyleSheet ss to those of the receiver.
StyleSheet,createLargeAttributeSet(AttributeSet a),protected MutableAttributeSet,Creates a large set of attributes that should trade off space for time.
StyleSheet,createSmallAttributeSet(AttributeSet a),protected StyleContext.SmallAttributeSet,Creates a compact set of attributes that might be shared.
StyleSheet,getBackground(AttributeSet a),Color,Takes a set of attributes and turn it into a background color specification.
StyleSheet,getBase(),URL,Returns the base.
StyleSheet,getBoxPainter(AttributeSet a),StyleSheet.BoxPainter,Fetches the box formatter to use for the given set of CSS attributes.
StyleSheet,getDeclaration(String decl),AttributeSet,Translates a CSS declaration to an AttributeSet that represents the CSS declaration.
StyleSheet,getFont(AttributeSet a),Font,Fetches the font to use for the given set of attributes.
StyleSheet,getForeground(AttributeSet a),Color,Takes a set of attributes and turn it into a foreground color specification.
StyleSheet,getIndexOfSize(float pt),static int,NULL
StyleSheet,getListPainter(AttributeSet a),StyleSheet.ListPainter,Fetches the list formatter to use for the given set of CSS attributes.
StyleSheet,getPointSize(int index),float,"Returns the point size, given a size index."
StyleSheet,getPointSize(String size),float,"Given a string such as ""+2"", ""-2"", or ""2"", returns a point size value."
StyleSheet,"getRule(HTML.Tag t, Element e)",Style,Fetches the style to use to render the given type of HTML tag.
StyleSheet,getRule(String selector),Style,Fetches the rule that best matches the selector given in string form.
StyleSheet,getStyleSheets(),StyleSheet[],Returns an array of the linked StyleSheets.
StyleSheet,getViewAttributes(View v),AttributeSet,Fetches a set of attributes to use in the view for displaying.
StyleSheet,importStyleSheet(URL url),void,Imports a style sheet from url.
StyleSheet,"loadRules(Reader in, URL ref)",void,Loads a set of rules that have been specified in terms of CSS1 grammar.
StyleSheet,"removeAttribute(AttributeSet old, Object key)",AttributeSet,Removes an attribute from the set.
StyleSheet,"removeAttributes(AttributeSet old, AttributeSet attrs)",AttributeSet,Removes a set of attributes.
StyleSheet,"removeAttributes(AttributeSet old, Enumeration<?> names)",AttributeSet,Removes a set of attributes for the element.
StyleSheet,removeStyle(String nm),void,Removes a named style previously added to the document.
StyleSheet,removeStyleSheet(StyleSheet ss),void,Removes the StyleSheet ss from those of the receiver.
StyleSheet,setBase(URL base),void,Sets the base.
StyleSheet,setBaseFontSize(int sz),void,"Sets the base font size, with valid values between 1 and 7."
StyleSheet,setBaseFontSize(String size),void,Sets the base font size from the passed in String.
StyleSheet,stringToColor(String string),Color,"Converts a color string such as ""RED"" or ""#NNNNNN"" to a Color."
StyleSheet,translateHTMLToCSS(AttributeSet htmlAttrSet),AttributeSet,Converts a set of HTML attributes to an equivalent set of CSS attributes.
StyleSheet.BoxPainter,"getInset(int side, View v)",float,"Fetches the inset needed on a given side to account for the margin, border, and padding."
StyleSheet.BoxPainter,"paint(Graphics g, float x, float y, float w, float h, View v)",void,Paints the CSS box according to the attributes given.
StyleSheet.ListPainter,"paint(Graphics g, float x, float y, float w, float h, View v, int item)",void,Paints the CSS list decoration according to the attributes given.
