Sample: 0 SerialArray
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serialized version of an Array object, which is the mapping in the Java programming language of an SQL ARRAY value.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialArray package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

Sample: 1 SerialBlob
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serialized mapping in the Java programming language of an SQL BLOB value.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialBlob package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public SerialBlob(byte[] bytes)`: This method creates a SerialBlob object from the specified byte array.
2. `public byte[] getBytes(long pos, int length)`: This method returns a byte array of the specified length starting at the specified position.
3. `public int length()`: This method returns the length of the BLOB in bytes.
4. `public InputStream getBinaryStream()`: This method returns an InputStream for reading the BLOB data.
5. `public OutputStream setBinaryStream()`: This method returns an OutputStream for writing the BLOB data.
================================================================

Sample: 2 SerialClob
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serialized mapping in the Java programming language of an SQL CLOB value.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialClob package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public SerialClob(String data)`: This constructor creates a new SerialClob object that contains the specified string.

2. `public String getString()`: This method retrieves the content of the CLOB as a String.

3. `public Reader getCharacterStream()`: This method retrieves the content of the CLOB as a Reader.

4. `public InputStream getAsciiStream()`: This method retrieves the content of the CLOB as an InputStream.

5. `public long length()`: This method returns the length of the CLOB.

6. `public void truncate(long len)`: This method truncates the CLOB to the specified length.

7. `public void setString(String data)`: This method sets the content of the CLOB to the specified string.

8. `public void setCharacterStream(Reader reader)`: This method sets the content of the CLOB to the specified Reader.

9. `public void setAsciiStream(InputStream stream)`: This method sets the content of the CLOB to the specified InputStream.

10. `public void free()`: This method releases any system resources associated with this CLOB.
================================================================

Sample: 3 SerialDatalink
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serialized mapping in the Java programming language of an SQL DATALINK value.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialDatalink package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void clear()`: This method removes all of the elements from this list.
3. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `int size()`: This method returns the number of elements in this list.
================================================================

Sample: 4 SerialJavaObject
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serializable mapping in the Java programming language of an SQL JAVA_OBJECT value.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialJavaObject package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void clear()`: This method removes all of the elements from this list.
3. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
4. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
5. `E get(int index)`: This method returns the element at the specified position in this list.
6. `int indexOf(Object o)`: This method returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element.
7. `boolean isEmpty()`: This method returns true if this list contains no elements.
8. `int lastIndexOf(Object o)`: This method returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element.
9. `E remove(int index)`: This method removes the element at the specified position in this list.
10. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
11. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
12. `int size()`: This method returns the number of elements in this list.
13. `Object[] toArray()`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element).
14. `<T> T[] toArray(T[] a)`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
15. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
16. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `boolean removeAll(Collection<?> c)`: This method removes from this list all of its elements that are contained in the specified collection.
19. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
20. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
21. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
22. `boolean removeAll(Collection<?> c)`: This method removes from this list all of its elements that are contained in the specified collection.
23. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
24. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
25. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
================================================================

Sample: 5 SerialRef
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serialized mapping of a Ref object, which is the mapping in the Java programming language of an SQL REF value.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialRef package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SerialRef(Object o)`: This constructor creates a new SerialRef object that refers to the specified object.

2. `Object getObject()`: This method returns the object to which this SerialRef refers.

3. `boolean equals(Object obj)`: This method compares this SerialRef with the specified object for equality.

4. `int hashCode()`: This method returns the hash code value for this SerialRef.

5. `String toString()`: This method returns a string representation of this SerialRef.
================================================================

Sample: 6 SerialStruct
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class A serialized mapping in the Java programming language of an SQL structured type.

@@ Instruction
I want to use javax.sql.rowset.serial.SerialStruct package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void clear()`: This method removes all of the elements from this list.
3. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `int size()`: This method returns the number of elements in this list.
================================================================

Sample: 7 SQLInputImpl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class An input stream used for custom mapping user-defined types (UDTs).

@@ Instruction
I want to use javax.sql.rowset.serial.SQLInputImpl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public boolean readArray()`: This method reads an array from the input stream.
2. `public boolean readBigDecimal()`: This method reads a BigDecimal from the input stream.
3. `public boolean readBoolean()`: This method reads a boolean from the input stream.
4. `public boolean readByte()`: This method reads a byte from the input stream.
5. `public boolean readBytes()`: This method reads a byte array from the input stream.
6. `public boolean readChar()`: This method reads a char from the input stream.
7. `public boolean readClob()`: This method reads a CLOB from the input stream.
8. `public boolean readDate()`: This method reads a Date from the input stream.
9. `public boolean readDouble()`: This method reads a double from the input stream.
10. `public boolean readFloat()`: This method reads a float from the input stream.
11. `public boolean readInt()`: This method reads an int from the input stream.
12. `public boolean readLong()`: This method reads a long from the input stream.
13. `public boolean readNClob()`: This method reads a NCLOB from the input stream.
14. `public boolean readNString()`: This method reads a String from the input stream.
15. `public boolean readObject()`: This method reads an object from the input stream.
16. `public boolean readRef()`: This method reads a Ref from the input stream.
17. `public boolean readRowId()`: This method reads a RowId from the input stream.
18. `public boolean readShort()`: This method reads a short from the input stream.
19. `public boolean readSQLXML()`: This method reads an SQLXML from the input stream.
20. `public boolean readString()`: This method reads a String from the input stream.
21. `public boolean readTime()`: This method reads a Time from the input stream.
22. `public boolean readTimestamp()`: This method reads a Timestamp from the input stream.
23. `public boolean readVarChar()`: This method reads a String from the input stream.
24. `public boolean readVarCharAsChar()`: This method reads a String from the input stream.
25. `public boolean readVarCharAsString()`: This method reads a String from the input stream.
26. `public boolean readVarCharAsBytes()`: This method reads a byte array from the input stream.
27. `public boolean readVarCharAsChars()`: This method reads a char array from the input stream.
28. `public boolean readVarCharAsStringArray()`: This method reads a String array from the input stream.
29. `public boolean readVarCharAsBytesArray()`: This method reads a byte array from the input stream.
30. `public boolean readVarCharAsCharsArray()`: This method reads a char array from the input stream.
31. `public boolean readVarCharAsStringArrayArray()`: This method reads a String array from the input stream.
32. `public boolean readVarCharAsBytesArrayArray()`: This method reads a byte array from the input stream.
33. `public boolean readVarCharAsCharsArrayArray()`: This method reads a char array from the input stream.
34. `public boolean readVarCharAsStringArrayArrayArray()`: This method reads a String array from the input stream.
35. `public boolean readVarCharAsBytesArrayArrayArray()`: This method reads a byte array from the input stream.
36. `public boolean readVarCharAsCharsArrayArrayArray()`: This method reads a char array from the input stream.
37. `public boolean readVarCharAsStringArrayArrayArrayArray()`: This method reads a String array from the input stream.
38. `public boolean readVarCharAsBytesArrayArrayArrayArray()`: This method reads a byte array from the input stream.
39. `public boolean readVarCharAsCharsArrayArrayArrayArray()`: This method reads a char array from the input stream.
40. `public boolean readVarCharAsStringArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
41. `public boolean readVarCharAsBytesArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
42. `public boolean readVarCharAsCharsArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
43. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
44. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
45. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
46. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
47. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
48. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
49. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
50. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
51. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
52. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
53. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
54. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
55. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
56. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
57. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
58. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
59. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
60. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
61. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a String array from the input stream.
62. `public boolean readVarCharAsBytesArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a byte array from the input stream.
63. `public boolean readVarCharAsCharsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`: This method reads a char array from the input stream.
64. `public boolean readVarCharAsStringArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray()`:
================================================================

Sample: 8 SQLOutputImpl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides utility classes to allow serializable mappings between SQL typesand data types in the Java programming language.
Here is the description of the class The output stream for writing the attributes of a custom-mapped user-defined type (UDT) back to the database.

@@ Instruction
I want to use javax.sql.rowset.serial.SQLOutputImpl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void writeArray(SQLType type, Object[] array)`: This method writes an array of objects to the output stream.

2. `public void writeObject(Object obj)`: This method writes an object to the output stream.

3. `public void writeNull()`: This method writes a null value to the output stream.

4. `public void writeSQLType(SQLType type)`: This method writes the SQL type to the output stream.

5. `public void writeSQLType(SQLType type, int scale)`: This method writes the SQL type and scale to the output stream.

6. `public void writeSQLType(SQLType type, int scale, int precision)`: This method writes the SQL type, scale, and precision to the output stream.

7. `public void writeSQLType(SQLType type, int scale, int precision, int length)`: This method writes the SQL type, scale, precision, and length to the output stream.

8. `public void writeSQLType(SQLType type, int scale, int precision, int length, int radix)`: This method writes the SQL type, scale, precision, length, and radix to the output stream.

9. `public void writeSQLType(SQLType type, int scale, int precision, int length, int radix, int nullIndicator)`: This method writes the SQL type, scale, precision, length, radix, and null indicator to the output stream.

10. `public void writeSQLType(SQLType type, int scale, int precision, int length, int radix, int nullIndicator, int nullIndicatorColumn)`: This method writes the SQL type, scale, precision, length, radix, null indicator, and null indicator column to the output stream.

11. `public void writeSQLType(SQLType type, int scale, int precision, int length, int radix, int nullIndicator, int nullIndicatorColumn, int nullIndicatorScale)`: This method writes the SQL type, scale, precision, length, radix, null indicator, null indicator column, and null indicator scale to the output stream.

12. `public void writeSQLType(SQLType type, int scale, int precision, int length, int radix, int nullIndicator, int nullIndicatorColumn, int nullIndicatorScale, int nullIndicatorPrecision)`: This method writes the SQL type, scale, precision, length, radix, null indicator, null indicator column, null indicator scale, and null indicator precision to the output stream.

13. `public void writeSQLType(SQLType type, int scale, int precision, int length, int radix, int nullIndicator, int nullIndicatorColumn, int nullIndicatorScale, int nullIndicatorPrecision, int nullIndicatorLength)`: This method writes the SQL type, scale, precision, length, radix, null indicator, null indicator column, null indicator scale, null indicator precision, and null indicator length to the output stream.
================================================================

