Sample: 0 BasicControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class provides a basic implementation of the Control interface.

@@ Instruction
I want to use javax.naming.ldap.BasicControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `BasicControl(String id, byte[] value)`: This constructor is used to create a new instance of BasicControl with the specified id and value.

2. `byte[] getEncodedValue()`: This method returns the value of this control.

3. `String getID()`: This method returns the id of this control.

4. `void setEncodedValue(byte[] value)`: This method sets the value of this control.

5. `void setID(String id)`: This method sets the id of this control.
================================================================

Sample: 1 ControlFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This abstract class represents a factory for creating LDAPv3 controls.

@@ Instruction
I want to use javax.naming.ldap.ControlFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ControlFactory.getControlInstance(String oid)`: This method returns a new instance of the control specified by the OID.

2. `ControlFactory.getControlInstance(String oid, byte[] value)`: This method returns a new instance of the control specified by the OID and the value.

3. `ControlFactory.getControlInstance(String oid, boolean criticality, byte[] value)`: This method returns a new instance of the control specified by the OID, the criticality flag, and the value.

4. `ControlFactory.getControlInstance(String oid, boolean criticality, byte[] value, String syntax)`: This method returns a new instance of the control specified by the OID, the criticality flag, the value, and the syntax.

5. `ControlFactory.getControlInstance(String oid, boolean criticality, byte[] value, String syntax, String matchRule)`: This method returns a new instance of the control specified by the OID, the criticality flag, the value, the syntax, and the match rule.
================================================================

Sample: 2 InitialLdapContext
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class is the starting context for performing LDAPv3-style extended operations and controls.

@@ Instruction
I want to use javax.naming.ldap.InitialLdapContext package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public LdapContext(Hashtable<?,?> environment)`: This constructor is used to create an LDAP context.

2. `public void close()`: This method is used to close the LDAP context.

3. `public DirContext getSubcontext(String name)`: This method is used to get a subcontext of the current context.

4. `public Attributes getAttributes(String name)`: This method is used to get the attributes of the specified entry.

5. `public void rename(String oldName, String newName)`: This method is used to rename an entry.

6. `public void remove(String name)`: This method is used to remove an entry.

7. `public void modifyAttributes(String name, BasicAttributes attributes)`: This method is used to modify the attributes of an entry.

8. `public void add(String name, BasicAttributes attributes)`: This method is used to add an entry.

9. `public SearchControls getSearchControls()`: This method is used to get the search controls.

10. `public SearchResult getResult(int skip)`: This method is used to get the result of the search.

11. `public SearchResult getResult(int skip, int limit)`: This method is used to get the result of the search with a limit.

12. `public SearchResult getResult(int skip, int limit, int deref)`: This method is used to get the result of the search with a limit and dereferencing.

13. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit)`: This method is used to get the result of the search with a limit, dereferencing, and time limit.

14. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly)`: This method is used to get the result of the search with a limit, dereferencing, time limit, and types only.

15. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly, boolean returnControls)`: This method is used to get the result of the search with a limit, dereferencing, time limit, types only, and return controls.

16. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly, boolean returnControls, boolean signed)`: This method is used to get the result of the search with a limit, dereferencing, time limit, types only, return controls, and signed.

17. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly, boolean returnControls, boolean signed, boolean serverSideSort)`: This method is used to get the result of the search with a limit, dereferencing, time limit, types only, return controls, signed, and server-side sort.

18. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly, boolean returnControls, boolean signed, boolean serverSideSort, boolean singleRequest)`: This method is used to get the result of the search with a limit, dereferencing, time limit, types only, return controls, signed, server-side sort, and single request.

19. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly, boolean returnControls, boolean signed, boolean serverSideSort, boolean singleRequest, boolean withRange)`: This method is used to get the result of the search with a limit, dereferencing, time limit, types only, return controls, signed, server-side sort, single request, and with range.

20. `public SearchResult getResult(int skip, int limit, int deref, int timeLimit, boolean typesOnly, boolean returnControls, boolean signed, boolean serverSideSort, boolean singleRequest, boolean withRange, boolean subtree)`: This method is used to get the result of the search with a limit, dereferencing, time limit, types only, return controls, signed, server-side sort, single request, with range, and subtree.
================================================================

Sample: 3 LdapName
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class represents a distinguished name as specified by RFC 2253.

@@ Instruction
I want to use javax.naming.ldap.LdapName package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `LdapName(String name)`: This constructor creates a new LdapName from the specified string.
2. `String get(int index)`: Returns the name at the specified position in this name.
3. `int size()`: Returns the number of names in this name.
4. `String toString()`: Returns a string representation of this name.
5. `String toRdnString()`: Returns a string representation of this name in RDN format.

Note: The above methods are not inherent from its parent class.
================================================================

Sample: 4 ManageReferralControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class Requests that referral and other special LDAP objects be manipulated as normal LDAP objects.

@@ Instruction
I want to use javax.naming.ldap.ManageReferralControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ManageReferralControl(boolean criticality, String[] urls)`: This constructor creates a new ManageReferralControl with the specified criticality and URLs.

2. `boolean isCritical()`: This method returns the criticality of this control.

3. `String[] getReferralURLs()`: This method returns the URLs of the referrals.

4. `void setCriticality(boolean critical)`: This method sets the criticality of this control.

5. `void setReferralURLs(String[] urls)`: This method sets the URLs of the referrals.
================================================================

Sample: 5 PagedResultsControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class Requests that the results of a search operation be returned by the LDAP server in batches of a specified size.

@@ Instruction
I want to use javax.naming.ldap.PagedResultsControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PagedResultsControl(int pageSize, boolean isCritical)`: This constructor creates a new PagedResultsControl with the specified page size and whether it is critical.

2. `int getPageSize()`: This method returns the page size of this PagedResultsControl.

3. `boolean isCritical()`: This method returns whether this PagedResultsControl is critical.

4. `void setPageSize(int pageSize)`: This method sets the page size of this PagedResultsControl.

5. `void setCriticality(boolean isCritical)`: This method sets whether this PagedResultsControl is critical.
================================================================

Sample: 6 PagedResultsResponseControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class Indicates the end of a batch of search results.

@@ Instruction
I want to use javax.naming.ldap.PagedResultsResponseControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PagedResultsResponseControl(int pageSize, int resultId, boolean isCritical)`: This constructor creates a new instance of PagedResultsResponseControl with the specified page size, result id, and criticality.

2. `int getPageSize()`: This method returns the page size.

3. `int getResultId()`: This method returns the result id.

4. `boolean isCritical()`: This method returns true if the control is critical; false otherwise.

5. `void setPageSize(int pageSize)`: This method sets the page size.

6. `void setResultId(int resultId)`: This method sets the result id.

7. `void setCriticality(boolean isCritical)`: This method sets the criticality of the control.
================================================================

Sample: 7 Rdn
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by RFC 2253.

@@ Instruction
I want to use javax.naming.ldap.Rdn package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Rdn(String rdn)`: This constructor creates a new RDN with the specified string.

2. `String getRdn()`: This method returns the RDN as a string.

3. `String getType()`: This method returns the type of the RDN.

4. `String getValue()`: This method returns the value of the RDN.

5. `String toString()`: This method returns a string representation of the RDN.
================================================================

Sample: 8 SortControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class Requests that the results of a search operation be sorted by the LDAP server before being returned.

@@ Instruction
I want to use javax.naming.ldap.SortControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SortControl(String sortKey, boolean reverseOrder)`: This constructor creates a new SortControl with the specified sort key and reverse order.

2. `String getSortKey()`: This method returns the sort key for this SortControl.

3. `boolean getReverseOrder()`: This method returns the reverse order for this SortControl.

4. `void setSortKey(String sortKey)`: This method sets the sort key for this SortControl.

5. `void setReverseOrder(boolean reverseOrder)`: This method sets the reverse order for this SortControl.
================================================================

Sample: 9 SortKey
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class A sort key and its associated sort parameters.

@@ Instruction
I want to use javax.naming.ldap.SortKey package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SortKey(String attr, boolean reverse)`: This is the constructor of the SortKey class. It takes two parameters:
   - `attr`: The attribute to sort on.
   - `reverse`: A boolean value indicating whether the sort order should be reversed.

2. `String getAttribute()`: This method returns the attribute that the SortKey is sorting on.

3. `boolean isReverse()`: This method returns a boolean value indicating whether the sort order is reversed.

4. `void setAttribute(String attr)`: This method sets the attribute that the SortKey is sorting on.

5. `void setReverse(boolean reverse)`: This method sets whether the sort order should be reversed.

6. `String toString()`: This method returns a string representation of the SortKey.
================================================================

Sample: 10 SortResponseControl
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class Indicates whether the requested sort of search results was successful or not.

@@ Instruction
I want to use javax.naming.ldap.SortResponseControl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SortResponseControl(String id, boolean isCritical, byte[] value)`: This constructor is used to create a new instance of SortResponseControl.

2. `String getID()`: This method returns the ID of this control.

3. `boolean isCritical()`: This method returns true if this control is critical; false otherwise.

4. `byte[] getValue()`: This method returns the value of this control.

5. `String toString()`: This method returns a string representation of this control.
================================================================

Sample: 11 StartTlsRequest
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class implements the LDAPv3 Extended Request for StartTLS as defined in Lightweight Directory Access Protocol (v3): Extension for Transport Layer Security The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037 and no extended request value is defined.

@@ Instruction
I want to use javax.naming.ldap.StartTlsRequest package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `StartTlsRequest()`: This is the constructor of the StartTlsRequest class. It initializes a new StartTlsRequest object.

2. `void setTlsRequestor()`: This method sets the TLS requestor.

3. `void setTlsRequestor(TlsRequestor tlsRequestor)`: This method sets the TLS requestor.

4. `TlsRequestor getTlsRequestor()`: This method returns the TLS requestor.

5. `void process()`: This method processes the StartTlsRequest.
================================================================

Sample: 12 StartTlsResponse
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class implements the LDAPv3 Extended Response for StartTLS as defined in Lightweight Directory Access Protocol (v3): Extension for Transport Layer Security The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037 and no extended response value is defined.

@@ Instruction
I want to use javax.naming.ldap.StartTlsResponse package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `StartTlsResponse()`: This is the constructor of the StartTlsResponse class. It initializes a new instance of the StartTlsResponse class.

2. `getResponseName()`: This method returns the response name of the StartTlsResponse.

3. `getResponseValue()`: This method returns the response value of the StartTlsResponse.

4. `getDiagnosticMessage()`: This method returns the diagnostic message of the StartTlsResponse.

5. `getReferral()`: This method returns the referral of the StartTlsResponse.
================================================================

Sample: 13 UnsolicitedNotificationEvent
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides support for LDAPv3 extended operations and controls.
Here is the description of the class This class represents an event fired in response to an unsolicited notification sent by the LDAP server.

@@ Instruction
I want to use javax.naming.ldap.UnsolicitedNotificationEvent package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `UnsolicitedNotificationEvent(String id, String type, byte[] data)`: This constructor creates a new unsolicited notification event with the specified id, type, and data.

2. `String getID()`: This method returns the id of this unsolicited notification event.

3. `String getType()`: This method returns the type of this unsolicited notification event.

4. `byte[] getData()`: This method returns the data of this unsolicited notification event.

5. `String toString()`: This method returns a string representation of this unsolicited notification event.
================================================================

