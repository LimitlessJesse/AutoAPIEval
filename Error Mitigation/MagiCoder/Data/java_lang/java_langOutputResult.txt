Sample: Boolean_1
----------------------------------------------------------------
stdout:
true

stderr:
./Data/java_lang/javaFiles/Boolean_1.java:5: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean bool = new Boolean(true);
                       ^
1 warning

================================================================

Sample: Boolean_2
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Boolean_3
----------------------------------------------------------------
stdout:
Hash code for true: 1231
Hash code for false: 1237

================================================================

Sample: Boolean_4
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Boolean_5
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Byte_1
----------------------------------------------------------------
stdout:
10

================================================================

Sample: Byte_2
----------------------------------------------------------------
stdout:
Byte value: 123

stderr:
./Data/java_lang/javaFiles/Byte_2.java:6: warning: [removal] Byte(byte) in Byte has been deprecated and marked for removal
        Byte byteObj = new Byte(b);
                       ^
1 warning

================================================================

Sample: Byte_3
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Byte_4
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Byte_5
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Character_1
----------------------------------------------------------------
stdout:
Is '5' a digit? true

================================================================

Sample: Character_2
----------------------------------------------------------------
stdout:
Is 'a' a letter? true

================================================================

Sample: Character_3
----------------------------------------------------------------
stdout:
Is 'a' a letter or digit? true

================================================================

Sample: Character_4
----------------------------------------------------------------
stdout:
Is 'a' a lowercase character? true

================================================================

Sample: Character_5
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Class_2
----------------------------------------------------------------
stdout:
java.io.Serializable
java.lang.Comparable
java.lang.CharSequence
java.lang.constant.Constable
java.lang.constant.ConstantDesc

================================================================

Sample: Class_3
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Class_3.java:12: error: exception NoSuchMethodException is never thrown in body of corresponding try statement
        } catch (ClassNotFoundException | NoSuchMethodException e) {
                                          ^
1 error


================================================================

Sample: Class_4
----------------------------------------------------------------
stdout:
public boolean equals(java.lang.Object)
public int length()
public java.lang.String toString()
public int hashCode()
public void getChars(int, int, [C, int)
public int compareTo(java.lang.String)
public volatile int compareTo(java.lang.Object)
public int indexOf(int)
public int indexOf(java.lang.String)
public int indexOf(java.lang.String, int)
public int indexOf(int, int)
public static java.lang.String valueOf(int)
public static java.lang.String valueOf([C)
public static java.lang.String valueOf(java.lang.Object)
public static java.lang.String valueOf(boolean)
public static java.lang.String valueOf([C, int, int)
public static java.lang.String valueOf(char)
public static java.lang.String valueOf(double)
public static java.lang.String valueOf(float)
public static java.lang.String valueOf(long)
public char charAt(int)
public int codePointAt(int)
public int codePointBefore(int)
public int codePointCount(int, int)
public int offsetByCodePoints(int, int)
public [B getBytes(java.nio.charset.Charset)
public [B getBytes(java.lang.String)
public void getBytes(int, int, [B, int)
public [B getBytes()
public boolean contentEquals(java.lang.CharSequence)
public boolean contentEquals(java.lang.StringBuffer)
public boolean regionMatches(boolean, int, java.lang.String, int, int)
public boolean regionMatches(int, java.lang.String, int, int)
public boolean startsWith(java.lang.String, int)
public boolean startsWith(java.lang.String)
public int lastIndexOf(java.lang.String)
public int lastIndexOf(java.lang.String, int)
public int lastIndexOf(int, int)
public int lastIndexOf(int)
public java.lang.String substring(int, int)
public java.lang.String substring(int)
public boolean isEmpty()
public java.lang.String replace(char, char)
public java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)
public boolean matches(java.lang.String)
public java.lang.String replaceFirst(java.lang.String, java.lang.String)
public java.lang.String replaceAll(java.lang.String, java.lang.String)
public [Ljava.lang.String; split(java.lang.String)
public [Ljava.lang.String; split(java.lang.String, int)
public static transient java.lang.String join(java.lang.CharSequence, [Ljava.lang.CharSequence;)
public static java.lang.String join(java.lang.CharSequence, java.lang.Iterable)
public java.lang.String toLowerCase()
public java.lang.String toLowerCase(java.util.Locale)
public java.lang.String toUpperCase()
public java.lang.String toUpperCase(java.util.Locale)
public java.lang.String trim()
public java.lang.String strip()
public java.lang.String stripLeading()
public java.lang.String stripTrailing()
public java.util.stream.Stream lines()
public java.lang.String repeat(int)
public boolean isBlank()
public [C toCharArray()
public static transient java.lang.String format(java.lang.String, [Ljava.lang.Object;)
public static transient java.lang.String format(java.util.Locale, java.lang.String, [Ljava.lang.Object;)
public volatile java.lang.Object resolveConstantDesc(java.lang.invoke.MethodHandles$Lookup)
public java.lang.String resolveConstantDesc(java.lang.invoke.MethodHandles$Lookup)
public java.util.stream.IntStream codePoints()
public boolean equalsIgnoreCase(java.lang.String)
public int compareToIgnoreCase(java.lang.String)
public boolean endsWith(java.lang.String)
public java.lang.CharSequence subSequence(int, int)
public java.lang.String concat(java.lang.String)
public boolean contains(java.lang.CharSequence)
public java.lang.String indent(int)
public java.lang.String stripIndent()
public java.lang.String translateEscapes()
public java.util.stream.IntStream chars()
public java.lang.Object transform(java.util.function.Function)
public transient java.lang.String formatted([Ljava.lang.Object;)
public static java.lang.String copyValueOf([C, int, int)
public static java.lang.String copyValueOf([C)
public native java.lang.String intern()
public java.util.Optional describeConstable()
public final void wait(long, int)
public final void wait()
public final native void wait(long)
public final native java.lang.Class getClass()
public final native void notify()
public final native void notifyAll()

================================================================

Sample: Class_5
----------------------------------------------------------------
stdout:
public static final java.util.Comparator CASE_INSENSITIVE_ORDER

================================================================

Sample: ClassLoader_1
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/ClassLoader_1.java:7: error: cannot find symbol
import java.security.SecurityManager;
                    ^
  symbol:   class SecurityManager
  location: package java.security
./Data/java_lang/javaFiles/ClassLoader_1.java:17: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
        ^
./Data/java_lang/javaFiles/ClassLoader_1.java:17: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
                                                ^
./Data/java_lang/javaFiles/ClassLoader_1.java:19: error: cannot find symbol
            PermissionCollection permissions = securityManager.getPermissions();
                                                              ^
  symbol:   method getPermissions()
  location: variable securityManager of type SecurityManager
2 errors
2 warnings


================================================================

Sample: ClassLoader_2
----------------------------------------------------------------
stdout:
jdk.internal.loader.ClassLoaders$AppClassLoader@1dbd16a6

================================================================

Sample: ClassLoader_3
----------------------------------------------------------------
stdout:
0

stderr:
Note: ./Data/java_lang/javaFiles/ClassLoader_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: ClassLoader_4
----------------------------------------------------------------
stdout:
0

stderr:
Note: ./Data/java_lang/javaFiles/ClassLoader_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Compiler_1
----------------------------------------------------------------
stderr:
./Data/java_lang/javaFiles/Compiler_1.java:7: warning: [removal] Compiler in java.lang has been deprecated and marked for removal
            boolean compiled = Compiler.compileClass(clazz);
                               ^
1 warning
java.lang.ClassNotFoundException: YourClassName
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at jdk.compiler/com.sun.tools.javac.launcher.Main$MemoryClassLoader.loadClass(Main.java:600)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:375)
	at Compiler_1.main(Compiler_1.java:6)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Double_1
----------------------------------------------------------------
stdout:
123.456

================================================================

Sample: Double_3
----------------------------------------------------------------
stdout:
The maximum value is: 20.5

================================================================

Sample: Double_4
----------------------------------------------------------------
stdout:
The smaller value is: 10.5

================================================================

Sample: Double_5
----------------------------------------------------------------
stdout:
The sum of 1.2 and 2.3 is 3.5

================================================================

Sample: Enum_1
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Enum_2
----------------------------------------------------------------
stdout:
false
false
false

================================================================

Sample: Enum_3
----------------------------------------------------------------
stdout:
The ordinal of RED is: 0

================================================================

Sample: Enum_4
----------------------------------------------------------------
stdout:
RED
GREEN
BLUE

================================================================

Sample: Float_2
----------------------------------------------------------------
stdout:
Infinity

================================================================

Sample: Float_3
----------------------------------------------------------------
stdout:
The result is: -1

================================================================

Sample: Float_4
----------------------------------------------------------------
stdout:
The maximum value is: 2.3

================================================================

Sample: Float_5
----------------------------------------------------------------
stdout:
The smaller of 1.5 and 2.5 is 1.5

================================================================

Sample: Integer_2
----------------------------------------------------------------
stdout:
10 is less than 20

================================================================

Sample: Integer_3
----------------------------------------------------------------
stdout:
The unsigned quotient is: 5

================================================================

Sample: Integer_4
----------------------------------------------------------------
stdout:
The maximum value is: 20

================================================================

Sample: Integer_5
----------------------------------------------------------------
stdout:
The smaller value is: 10

================================================================

Sample: Integer_6
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Integer_7
----------------------------------------------------------------
stdout:
42

================================================================

Sample: Integer_8
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Integer_9
----------------------------------------------------------------
stdout:
Original: 10
Reversed: 1342177280

================================================================

Sample: Integer_10
----------------------------------------------------------------
stdout:
40

================================================================

Sample: Integer_11
----------------------------------------------------------------
stdout:
-2147483646

================================================================

Sample: Integer_12
----------------------------------------------------------------
stdout:
The signum of -10 is -1

================================================================

Sample: Integer_13
----------------------------------------------------------------
stdout:
The sum of 5 and 10 is 15

================================================================

Sample: Long_1
----------------------------------------------------------------
stdout:
Parsed long: 1234567890

================================================================

Sample: Long_2
----------------------------------------------------------------
stdout:
1234567890

================================================================

Sample: Long_3
----------------------------------------------------------------
stdout:
1234567890

================================================================

Sample: Long_4
----------------------------------------------------------------
stdout:
100

================================================================

Sample: Long_5
----------------------------------------------------------------
stdout:
1234567890

================================================================

Sample: Math_1
----------------------------------------------------------------
stdout:
The absolute value of -10.5 is 10.5

================================================================

Sample: Math_2
----------------------------------------------------------------
stdout:
Math.ceil(10.4) = 11.0
Math.ceil(-10.4) = -10.0
Math.ceil(0.0) = 0.0
Math.ceil(-0.0) = -0.0
Math.ceil(NaN) = NaN
Math.ceil(Infinity) = Infinity
Math.ceil(-Infinity) = -Infinity

================================================================

Sample: Math_3
----------------------------------------------------------------
stdout:
Math.floor(9.2) = 9.0
Math.floor(-4.8) = -5.0
Math.floor(0.0) = 0.0
Math.floor(NaN) = NaN
Math.floor(Infinity) = Infinity
Math.floor(-Infinity) = -Infinity

================================================================

Sample: Math_4
----------------------------------------------------------------
stdout:
The maximum value is: 20.5

================================================================

Sample: Math_5
----------------------------------------------------------------
stdout:
The smaller value is: 10.5

================================================================

Sample: Math_7
----------------------------------------------------------------
stdout:
Random number: 0.6723805740847478

================================================================

Sample: Math_9
----------------------------------------------------------------
stdout:
The square root of 4.0 is 2.0

================================================================

Sample: Math_10
----------------------------------------------------------------
stdout:
The sine of 0.0 is 0.0

================================================================

Sample: Math_11
----------------------------------------------------------------
stdout:
The cosine of 1.5707963267948966 is 6.123233995736766E-17

================================================================

Sample: Math_12
----------------------------------------------------------------
stdout:
The tangent of 45.0 degrees is 0.9999999999999999

================================================================

Sample: Math_13
----------------------------------------------------------------
stdout:
The arc sine of 0.5 is 0.5235987755982989

================================================================

Sample: Math_14
----------------------------------------------------------------
stdout:
The arc cosine of 0.5 is 1.0471975511965979

================================================================

Sample: Math_15
----------------------------------------------------------------
stdout:
The arc tangent of 1.0 is 0.7853981633974483

================================================================

Sample: Math_16
----------------------------------------------------------------
stdout:
The result of e raised to the power of 2.0 is: 7.38905609893065

================================================================

Sample: Math_17
----------------------------------------------------------------
stdout:
The natural logarithm of 10.0 is 2.302585092994046

================================================================

Sample: Math_18
----------------------------------------------------------------
stdout:
The base 10 logarithm of 100.0 is 2.0

================================================================

Sample: Math_19
----------------------------------------------------------------
stdout:
The remainder of 10.0 divided by 3.0 is: 1.0

================================================================

Sample: Math_20
----------------------------------------------------------------
stdout:
The result is: -10.0

================================================================

Sample: Number_1
----------------------------------------------------------------
stdout:
10

================================================================

Sample: Number_2
----------------------------------------------------------------
stdout:
123.456

stderr:
./Data/java_lang/javaFiles/Number_2.java:5: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Number num = new Double(123.456);
                     ^
1 warning

================================================================

Sample: Number_3
----------------------------------------------------------------
stdout:
1.23

================================================================

Sample: Number_4
----------------------------------------------------------------
stdout:
10

================================================================

Sample: Number_5
----------------------------------------------------------------
stdout:
1000000000000000000

================================================================

Sample: Number_6
----------------------------------------------------------------
stdout:
10

================================================================

Sample: Object_3
----------------------------------------------------------------
stdout:
Reflexivity: true
Symmetry: true
Transitivity: false
Consistency: true
Null: false

================================================================

Sample: Object_5
----------------------------------------------------------------
stdout:
java.lang.Object@544a2ea6

================================================================

Sample: ProcessBuilder_4
----------------------------------------------------------------
stdout:
Process exited with error code 0

================================================================

Sample: ProcessBuilder_6
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1094)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at ProcessBuilder_6.main(ProcessBuilder_6.java:10)

================================================================

Sample: ProcessBuilder_8
----------------------------------------------------------------
stdout:

Exited with error code : 0

================================================================

Sample: ProcessBuilder_12
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1094)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at ProcessBuilder_12.main(ProcessBuilder_12.java:11)

================================================================

Sample: ProcessBuilder_13
----------------------------------------------------------------
stdout:
Process exited with code 0

================================================================

Sample: ProcessBuilder_14
----------------------------------------------------------------
stdout:
Process exited with code 0

================================================================

Sample: ProcessBuilder_18
----------------------------------------------------------------
stdout:
total 10288
-rw-rw-r--   1 yixi yixi    3122 Aug 20 19:21 addFullDescription.py
-rw-rw-r--   1 yixi yixi   42155 Aug 20 18:02 allPackage.csv
-rw-rw-r--   1 yixi yixi     444 Aug 20 18:02 buildBase.py
-rw-rw-r--   1 yixi yixi    5727 Aug 20 18:02 calculate.py
-rw-rw-r--   1 yixi yixi    5399 Aug 20 18:02 compare.py
drwxrwxr-x 219 yixi yixi   12288 Aug 20 18:02 Data
drwxrwxr-x 219 yixi yixi   12288 Aug 20 18:07 Data_Description
-rw-rw-r--   1 yixi yixi       0 Aug 21 09:17 error.txt
-rw-rw-r--   1 yixi yixi    3353 Aug 20 18:02 execute.py
-rw-rw-r--   1 yixi yixi      12 Aug 21 09:13 filename.ser
-rw-rw-r--   1 yixi yixi      87 Aug 21 09:13 file.ser
-rw-rw-r--   1 yixi yixi      20 Aug 21 09:13 file.txt
-rw-rw-r--   1 yixi yixi   17640 Aug 20 18:02 finalStats.csv
-rw-rw-r--   1 yixi yixi 8826934 Aug 20 18:02 KnowledgeBase.csv
-rw-rw-r--   1 yixi yixi       0 Aug 21 09:12 newFile.txt
-rw-rw-r--   1 yixi yixi  268873 Aug 20 18:02 nohup._old_2out
-rw-rw-r--   1 yixi yixi  273238 Aug 20 18:02 nohup_old.out
-rw-------   1 yixi yixi  496688 Aug 21 09:16 nohup.out
-rw-------   1 yixi yixi  487831 Aug 20 18:02 nohup_snippet.out
-rw-rw-r--   1 yixi yixi      11 Aug 21 09:13 output.dat
-rw-rw-r--   1 yixi yixi    1662 Aug 21 09:17 output.txt
-rw-rw-r--   1 yixi yixi       0 Aug 21 09:12 path_to_your_file
-rw-rw-r--   1 yixi yixi     210 Aug 20 18:02 runCompare.py
-rw-rw-r--   1 yixi yixi     185 Aug 20 18:02 runExecute.py
-rw-rw-r--   1 yixi yixi     210 Aug 20 19:30 runSnippet.py
-rw-rw-r--   1 yixi yixi    3852 Aug 20 19:23 snippet.py
-rw-rw-r--   1 yixi yixi     100 Aug 21 09:15 test.txt
-rw-rw-r--   1 yixi yixi     102 Aug 21 09:12 test.xml
Exited with error code : 0

================================================================

Sample: ProcessBuilder_27
----------------------------------------------------------------
stdout:
Process exited with code 0

================================================================

Sample: ProcessBuilder_28
----------------------------------------------------------------
stdout:
Process exited with code 0

================================================================

Sample: Runtime_1
----------------------------------------------------------------
stdout:
Process ID: 1332840

================================================================

Sample: Runtime_2
----------------------------------------------------------------
stdout:
Exit code: 0

================================================================

Sample: Runtime_10
----------------------------------------------------------------
================================================================

Sample: Runtime_11
----------------------------------------------------------------
================================================================

Sample: Runtime_12
----------------------------------------------------------------
stdout:
Total memory: 1358954496

================================================================

Sample: Runtime_13
----------------------------------------------------------------
stdout:
Free memory: 1322459928

================================================================

Sample: Runtime_14
----------------------------------------------------------------
stdout:
Max Memory: 21005074432

================================================================

Sample: Runtime_15
----------------------------------------------------------------
stdout:
Number of processors available to the JVM: 20

================================================================

Sample: SecurityManager_1
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/SecurityManager_1.java:1: error: cannot find symbol
import java.lang.reflect.Permission;
                        ^
  symbol:   class Permission
  location: package java.lang.reflect
./Data/java_lang/javaFiles/SecurityManager_1.java:6: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_1.java:6: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
                                                ^
1 error
2 warnings


================================================================

Sample: SecurityManager_2
----------------------------------------------------------------
stderr:
./Data/java_lang/javaFiles/SecurityManager_2.java:7: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_2.java:7: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
                                                ^
2 warnings

================================================================

Sample: SecurityManager_3
----------------------------------------------------------------
stdout:
No security manager is set.

stderr:
./Data/java_lang/javaFiles/SecurityManager_3.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_3.java:5: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
                                                ^
2 warnings

================================================================

Sample: SecurityManager_4
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/SecurityManager_4.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_4.java:5: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
                                                ^
./Data/java_lang/javaFiles/SecurityManager_4.java:8: error: cannot find symbol
                securityManager.checkAwtEventQueueAccess();
                               ^
  symbol:   method checkAwtEventQueueAccess()
  location: variable securityManager of type SecurityManager
1 error
2 warnings


================================================================

Sample: SecurityManager_5
----------------------------------------------------------------
stdout:
No security manager is set

stderr:
./Data/java_lang/javaFiles/SecurityManager_5.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_5.java:5: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager securityManager = System.getSecurityManager();
                                                ^
2 warnings

================================================================

Sample: StackTraceElement_1
----------------------------------------------------------------
stdout:
com.sun.tools.javac.launcher.Main

================================================================

Sample: StackTraceElement_2
----------------------------------------------------------------
stdout:
The file name is: Main.java

================================================================

Sample: StackTraceElement_3
----------------------------------------------------------------
stdout:
Line number: 16
Line number: 6
Line number: -2
Line number: 77
Line number: 43
Line number: 569
Line number: 419
Line number: 192
Line number: 132

================================================================

Sample: StackTraceElement_4
----------------------------------------------------------------
stdout:
The method name is: main

================================================================

Sample: StackTraceElement_5
----------------------------------------------------------------
stdout:
Native method: invoke0

================================================================

Sample: StrictMath_1
----------------------------------------------------------------
stdout:
The arc cosine of 0.5 is 1.0471975511965979

================================================================

Sample: StrictMath_2
----------------------------------------------------------------
stdout:
The arc sine of 0.5 is 0.5235987755982989

================================================================

Sample: StrictMath_3
----------------------------------------------------------------
stdout:
The arc tangent of 1.0 is 0.7853981633974483

================================================================

Sample: StrictMath_4
----------------------------------------------------------------
stdout:
Theta: 0.7853981633974483

================================================================

Sample: StrictMath_5
----------------------------------------------------------------
stdout:
The smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer is: 2.0

================================================================

Sample: StrictMath_6
----------------------------------------------------------------
stdout:
The cosine of 0.5 is 0.8775825618903728

================================================================

Sample: StrictMath_7
----------------------------------------------------------------
stdout:
e raised to the power of 2.0 is: 7.38905609893065

================================================================

Sample: StrictMath_8
----------------------------------------------------------------
stdout:
The floor of 10.5 is 10.0

================================================================

Sample: StrictMath_9
----------------------------------------------------------------
stdout:
The natural logarithm of 10.0 is 2.302585092994046

================================================================

Sample: StrictMath_10
----------------------------------------------------------------
stdout:
The maximum value is: 20.5

================================================================

Sample: StrictMath_11
----------------------------------------------------------------
stdout:
The smaller value is: 5.0

================================================================

Sample: StrictMath_13
----------------------------------------------------------------
stdout:
Random number: 0.3938844259857279

================================================================

Sample: StrictMath_14
----------------------------------------------------------------
stdout:
2.0

================================================================

Sample: StrictMath_16
----------------------------------------------------------------
stdout:
The sine of 0.5 radians is 0.479425538604203

================================================================

Sample: StrictMath_17
----------------------------------------------------------------
stdout:
The square root of 4.0 is 2.0

================================================================

Sample: StrictMath_18
----------------------------------------------------------------
stdout:
The tangent of 1.57 radians is 1255.7655915007897

================================================================

Sample: StrictMath_19
----------------------------------------------------------------
stdout:
89.95437383553924

================================================================

Sample: StrictMath_20
----------------------------------------------------------------
stdout:
90.0 degrees is equal to 1.5707963267948966 radians.

================================================================

Sample: String_3
----------------------------------------------------------------
stdout:
The length of the string is: 13

================================================================

Sample: String_4
----------------------------------------------------------------
stdout:
The character at index 5 is: ,

================================================================

Sample: String_5
----------------------------------------------------------------
stdout:
str1 equals str2: true
str1 equals str3: false

================================================================

Sample: String_6
----------------------------------------------------------------
stdout:
Result 1: true
Result 2: false

================================================================

Sample: String_7
----------------------------------------------------------------
stdout:
hello world

================================================================

Sample: String_8
----------------------------------------------------------------
stdout:
HELLO WORLD

================================================================

Sample: String_9
----------------------------------------------------------------
stdout:
Before trim:    Hello World   
After trim: Hello World

================================================================

Sample: String_10
----------------------------------------------------------------
stdout:
true

================================================================

Sample: String_11
----------------------------------------------------------------
stdout:
true

================================================================

Sample: String_12
----------------------------------------------------------------
stdout:
The index of the character ',' is: 5

================================================================

Sample: String_13
----------------------------------------------------------------
stdout:
The index of the first occurrence of ',' is: 5

================================================================

Sample: String_14
----------------------------------------------------------------
stdout:
The last index of 'o' is: 8

================================================================

Sample: String_15
----------------------------------------------------------------
stdout:
8

================================================================

Sample: String_16
----------------------------------------------------------------
stdout:
happy

================================================================

Sample: String_17
----------------------------------------------------------------
stdout:
urge

================================================================

Sample: String_18
----------------------------------------------------------------
stdout:
mosquito in your collar

================================================================

Sample: String_19
----------------------------------------------------------------
stdout:
Hello, Java!

================================================================

Sample: String_20
----------------------------------------------------------------
stdout:
[boo, and, foo]

================================================================

Sample: String_21
----------------------------------------------------------------
stdout:
HelloWorld

================================================================

Sample: String_22
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: String_23
----------------------------------------------------------------
stdout:
false
true
false
true
true
true

================================================================

Sample: String_24
----------------------------------------------------------------
stdout:
Hello, John! You are 30 years old.

================================================================

Sample: String_25
----------------------------------------------------------------
stdout:
Java-is-cool

================================================================

Sample: StringBuffer_4
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringBuffer_5
----------------------------------------------------------------
stdout:
HWorldello

================================================================

Sample: StringBuffer_6
----------------------------------------------------------------
stdout:
Hello 

================================================================

Sample: StringBuffer_7
----------------------------------------------------------------
stdout:
olleH

================================================================

Sample: StringBuffer_10
----------------------------------------------------------------
stdout:
Length of the StringBuffer: 5

================================================================

Sample: StringBuffer_11
----------------------------------------------------------------
stdout:
W

================================================================

Sample: StringBuffer_12
----------------------------------------------------------------
stdout:
Index of 'World': 7

================================================================

Sample: StringBuffer_13
----------------------------------------------------------------
stdout:
The last index of 'o' is: 8

================================================================

Sample: StringBuffer_16
----------------------------------------------------------------
stdout:
Hello Java

================================================================

Sample: StringBuffer_17
----------------------------------------------------------------
stdout:
HelloWorld

================================================================

Sample: StringBuilder_3
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringBuilder_4
----------------------------------------------------------------
stdout:
HeWorldllo

================================================================

Sample: StringBuilder_5
----------------------------------------------------------------
stdout:
Hello 

================================================================

Sample: StringBuilder_6
----------------------------------------------------------------
stdout:
Before reverse: Hello
After reverse: olleH

================================================================

Sample: StringBuilder_7
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringBuilder_8
----------------------------------------------------------------
stdout:
Length of the StringBuilder: 5

================================================================

Sample: StringBuilder_9
----------------------------------------------------------------
stdout:
W

================================================================

Sample: StringBuilder_11
----------------------------------------------------------------
stdout:
HelloWorld

================================================================

Sample: StringBuilder_12
----------------------------------------------------------------
stdout:
Hello Java

================================================================

Sample: StringBuilder_14
----------------------------------------------------------------
================================================================

Sample: StringBuilder_15
----------------------------------------------------------------
stdout:
Before trimToSize(): 16
After trimToSize(): 13

================================================================

Sample: System_1
----------------------------------------------------------------
stdout:
Elapsed time: 0 milliseconds

================================================================

Sample: System_3
----------------------------------------------------------------
================================================================

Sample: System_4
----------------------------------------------------------------
stdout:
Before exit

================================================================

Sample: System_5
----------------------------------------------------------------
stdout:
HELLO, WORLD!
Hello, World!

================================================================

Sample: Thread_1
----------------------------------------------------------------
stdout:
Thread is running

================================================================

Sample: Thread_2
----------------------------------------------------------------
stdout:
Thread is running

================================================================

Sample: Thread_3
----------------------------------------------------------------
stdout:
Thread is running...
Thread is running...
Thread is running...
Thread is running...
Thread is running...
Thread has finished.

================================================================

Sample: Thread_4
----------------------------------------------------------------
stdout:
Thread was interrupted

================================================================

Sample: Thread_5
----------------------------------------------------------------
stdout:
Thread is going to sleep
Thread woke up

================================================================

Sample: ThreadGroup_3
----------------------------------------------------------------
stdout:
Thread Thread-0 threw an exception: Uncaught exception

================================================================

Sample: ThreadGroup_4
----------------------------------------------------------------
================================================================

Sample: ThreadGroup_5
----------------------------------------------------------------
stderr:
./Data/java_lang/javaFiles/ThreadGroup_5.java:18: warning: [removal] destroy() in ThreadGroup has been deprecated and marked for removal
        tg.destroy();
          ^
1 warning

================================================================

Sample: ThreadLocal_1
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: ThreadLocal_2
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: ThreadLocal_3
----------------------------------------------------------------
stdout:
Hello
null

================================================================

Sample: Throwable_2
----------------------------------------------------------------
stdout:
java.lang.Throwable: This is a test

================================================================

