Sample: 0 OutputKeys
----------------------------------------------------------------

@@ Context
Here is the description of the package This package defines the generic APIs for processing transformationinstructions, and performing a transformation from source to result.
Here is the description of the class Provides string constants that can be used to set output properties for a Transformer, or to retrieve output properties from a Transformer or Templates object.

@@ Instruction
I want to use javax.xml.transform.OutputKeys package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public static final String CDATA_SECTION_ELEMENTS`: This method returns the value of the "cdata-section-elements" output property.

2. `public static final String INDENT`: This method returns the value of the "indent" output property.

3. `public static final String MEDIA_TYPE`: This method returns the value of the "media-type" output property.

4. `public static final String OMIT_XML_DECLARATION`: This method returns the value of the "omit-xml-declaration" output property.

5. `public static final String STANDALONE`: This method returns the value of the "standalone" output property.
================================================================

Sample: 1 Transformer
----------------------------------------------------------------

@@ Context
Here is the description of the package This package defines the generic APIs for processing transformationinstructions, and performing a transformation from source to result.
Here is the description of the class An instance of this abstract class can transform a source tree into a result tree.

@@ Instruction
I want to use javax.xml.transform.Transformer package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `setOutputProperty(String name, String value)`: This method sets the value of the specified output property.
2. `setParameter(String namespace, String value)`: This method sets the value of the specified parameter.
3. `transform(Source source, Result result)`: This method performs the transformation from the source to the result.
4. `transform(Source source, StreamResult result)`: This method performs the transformation from the source to the result.
5. `transform(Source source, Writer out)`: This method performs the transformation from the source to the writer.
================================================================

Sample: 2 TransformerFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package This package defines the generic APIs for processing transformationinstructions, and performing a transformation from source to result.
Here is the description of the class A TransformerFactory instance can be used to create Transformer and Templates objects.

@@ Instruction
I want to use javax.xml.transform.TransformerFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `TransformerFactory newInstance()`: This method creates a new instance of the default TransformerFactory.

2. `Transformer newTransformer()`: This method creates a new Transformer.

3. `Templates newTemplates()`: This method creates a new Templates object.

4. `Templates newTemplates(Source source)`: This method creates a new Templates object using the specified Source.

5. `Templates newTemplates(TransformerHandler handler)`: This method creates a new Templates object using the specified TransformerHandler.
================================================================

