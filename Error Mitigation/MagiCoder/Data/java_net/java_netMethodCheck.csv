Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,Authenticator,1,Authenticator getDefault(),False,NULL
0,Authenticator,2,void setDefault(Authenticator a),True,Sets the authenticator that will be used by the networking code when a proxy or an HTTP server asks for authentication.
0,Authenticator,3,PasswordAuthentication getPasswordAuthentication(),True,Called when password authorization is needed.
0,Authenticator,4,"void requestPasswordAuthentication(final String host, final String prompt, final String defaultUserName, final String loginService, final String protocol, final String serverName, final int serverPort, final String realm, final String scheme, final String url, final String requestingApp, final String callbackClass)",False,NULL
0,Authenticator,5,"void requestPasswordAuthenticationUsingDialog(final String host, final String prompt, final String defaultUserName, final String loginService, final String protocol, final String serverName, final int serverPort, final String realm, final String scheme, final String url, final String requestingApp, final String callbackClass)",False,NULL
1,CacheRequest,1,boolean add(E e),False,NULL
1,CacheRequest,2,boolean addAll(Collection<? extends E> c),False,NULL
1,CacheRequest,3,void clear(),False,NULL
1,CacheRequest,4,boolean contains(Object o),False,NULL
1,CacheRequest,5,boolean containsAll(Collection<?> c),False,NULL
2,CacheResponse,1,CacheResponse getResponse(),False,NULL
2,CacheResponse,2,long getCreationTime(),False,NULL
2,CacheResponse,3,long getLastModified(),False,NULL
2,CacheResponse,4,long getExpirationTime(),False,NULL
2,CacheResponse,5,boolean isExpired(),False,NULL
3,ContentHandler,1,Object getContent(URLConnection urlc) throws IOException,True,"Given a URL connect stream positioned at the beginning of the representation of an object, this method reads that stream and creates an object from it."
3,ContentHandler,2,"Object getContent(URLConnection urlc, Class[] classes) throws IOException",True,"Given a URL connect stream positioned at the beginning of the representation of an object, this method reads that stream and creates an object that matches one of the types specified."
3,ContentHandler,3,"Object getContent(URLConnection urlc, Class[] classes, Object handlers) throws IOException",False,NULL
3,ContentHandler,4,"Object getContent(URLConnection urlc, Class[] classes, Object handlers, int depth) throws IOException",False,NULL
3,ContentHandler,5,"Object getContent(URLConnection urlc, Class[] classes, Object handlers, int depth, URLStreamHandlerFactory context) throws IOException",False,NULL
4,CookieHandler,1,CookieHandler getDefault(),True,Gets the system-wide cookie handler.
4,CookieHandler,2,void setDefault(CookieHandler newDefault),True,Sets (or unsets) the system-wide cookie handler.
4,CookieHandler,3,List<URI> getURIs(),False,NULL
4,CookieHandler,4,"Map<String, List<String>> get(URI uri, Map<String, List<String>> requestHeaders)",False,NULL
4,CookieHandler,5,"void put(URI uri, Map<String, List<String>> responseHeaders)",True,"Sets all the applicable cookies, examples are response header fields that are named Set-Cookie2, present in the response headers into a cookie cache."
5,CookieManager,1,CookieManager(),False,NULL
5,CookieManager,2,void setCookiePolicy(CookiePolicy cookiePolicy),True,To set the cookie policy of this cookie manager.
5,CookieManager,3,CookiePolicy getCookiePolicy(),False,NULL
5,CookieManager,4,"Map<String, List<String>> get(URI uri, Map<String, List<String>> requestHeaders)",False,NULL
5,CookieManager,5,"Map<String, List<String>> put(URI uri, Map<String, List<String>> responseHeaders)",False,NULL
6,DatagramPacket,1,"DatagramPacket(byte buf[], int length)",False,NULL
6,DatagramPacket,2,"DatagramPacket(byte buf[], int offset, int length)",False,NULL
6,DatagramPacket,3,byte[] getData(),True,Returns the data buffer.
6,DatagramPacket,4,int getLength(),True,Returns the length of the data to be sent or the length of the data received.
6,DatagramPacket,5,InetAddress getAddress(),True,Returns the IP address of the machine to which this datagram is being sent or from which the datagram was received.
6,DatagramPacket,6,int getPort(),True,Returns the port number on the remote host to which this datagram is being sent or from which the datagram was received.
6,DatagramPacket,7,void setData(byte buf[]),False,NULL
6,DatagramPacket,8,"void setData(byte buf[], int offset, int length)",False,NULL
6,DatagramPacket,9,void setAddress(InetAddress address),True,Sets the IP address of the machine to which this datagram is being sent.
6,DatagramPacket,10,void setPort(int port),True,Sets the port number on the remote host to which this datagram is being sent.
6,DatagramPacket,11,void setLength(int length),True,Set the length for this packet.
7,DatagramSocket,1,DatagramSocket(),False,NULL
7,DatagramSocket,2,DatagramSocket(int port),False,NULL
7,DatagramSocket,3,"DatagramSocket(int port, InetAddress address)",False,NULL
7,DatagramSocket,4,DatagramSocket(SocketAddress address),False,NULL
7,DatagramSocket,5,void close(),True,Closes this datagram socket.
7,DatagramSocket,6,InetAddress getInetAddress(),True,Returns the address to which this socket is connected.
7,DatagramSocket,7,int getPort(),True,Returns the port number to which this socket is connected.
7,DatagramSocket,8,int getLocalPort(),True,Returns the port number on the local host to which this socket is bound.
7,DatagramSocket,9,void send(DatagramPacket p),True,Sends a datagram packet from this socket.
7,DatagramSocket,10,void receive(DatagramPacket p),True,Receives a datagram packet from this socket.
7,DatagramSocket,11,void connect(SocketAddress address),True,Connects this socket to a remote socket address (IP address + port number).
7,DatagramSocket,12,"void connect(InetAddress address, int port)",True,Connects the socket to a remote address for this socket.
7,DatagramSocket,13,void disconnect(),True,Disconnects the socket.
7,DatagramSocket,14,boolean isConnected(),True,Returns the connection state of the socket.
7,DatagramSocket,15,void setSoTimeout(int timeout),True,"Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds."
7,DatagramSocket,16,int getSoTimeout(),True,Retrieve setting for SO_TIMEOUT.
7,DatagramSocket,17,void setReuseAddress(boolean on),True,Enable/disable the SO_REUSEADDR socket option.
7,DatagramSocket,18,boolean getReuseAddress(),True,Tests if SO_REUSEADDR is enabled.
7,DatagramSocket,19,void setBroadcast(boolean on),True,Enable/disable SO_BROADCAST.
7,DatagramSocket,20,boolean getBroadcast(),True,Tests if SO_BROADCAST is enabled.
7,DatagramSocket,21,void setTrafficClass(int tc),True,Sets traffic class or type-of-service octet in the IP datagram header for datagrams sent from this DatagramSocket.
7,DatagramSocket,22,int getTrafficClass(),True,Gets traffic class or type-of-service in the IP datagram header for packets sent from this DatagramSocket.
7,DatagramSocket,23,void setLoopbackMode(boolean on),False,NULL
7,DatagramSocket,24,boolean getLoopbackMode(),False,NULL
7,DatagramSocket,25,void setMulticastLoopbackMode(boolean on),False,NULL
7,DatagramSocket,26,boolean getMulticastLoopbackMode(),False,NULL
7,DatagramSocket,27,void setMulticastTTL(int ttl),False,NULL
7,DatagramSocket,28,int getMulticastTTL(),False,NULL
7,DatagramSocket,29,void joinGroup(InetAddress mcastaddr),False,NULL
7,DatagramSocket,30,void leaveGroup(InetAddress mcastaddr),False,NULL
7,DatagramSocket,31,void setTimeToLive(int ttl),False,NULL
7,DatagramSocket,32,int getTimeToLive(),False,NULL
7,DatagramSocket,33,void setInterface(InetAddress ifaddr),False,NULL
7,DatagramSocket,34,InetAddress getInterface(),False,NULL
7,DatagramSocket,35,void setNetworkInterface(NetworkInterface netif),False,NULL
7,DatagramSocket,36,NetworkInterface getNetworkInterface(),False,NULL
7,DatagramSocket,37,void setMulticastInterface(NetworkInterface netif),False,NULL
7,DatagramSocket,38,NetworkInterface getMulticastInterface(),False,NULL
7,DatagramSocket,39,void setMulticastHops(int hops),False,NULL
7,DatagramSocket,40,int getMulticastHops(),False,NULL
7,DatagramSocket,41,void setMulticastIf(InetAddress ifaddr),False,NULL
7,DatagramSocket,42,InetAddress getMulticastIf(),False,NULL
7,DatagramSocket,43,void setMulticastLoopback(boolean on),False,NULL
7,DatagramSocket,44,boolean getMulticastLoopback(),False,NULL
7,DatagramSocket,45,void setMulticastTTL(int ttl),False,NULL
7,DatagramSocket,46,int getMulticastTTL(),False,NULL
7,DatagramSocket,47,void setMulticastHops(int hops),False,NULL
7,DatagramSocket,48,int getMulticastHops(),False,NULL
7,DatagramSocket,49,void setMulticastIf(InetAddress ifaddr),False,NULL
7,DatagramSocket,50,InetAddress getMulticastIf(),False,NULL
7,DatagramSocket,51,void setMulticastLoopback(boolean on),False,NULL
7,DatagramSocket,52,boolean getMulticastLoopback(),False,NULL
7,DatagramSocket,53,void setMulticastTTL(int ttl),False,NULL
7,DatagramSocket,54,int getMulticastTTL(),False,NULL
7,DatagramSocket,55,void setMulticastHops(int hops),False,NULL
7,DatagramSocket,56,int getMulticastHops(),False,NULL
8,DatagramSocketImpl,1,DatagramSocketImpl(),False,NULL
8,DatagramSocketImpl,2,DatagramSocketImpl(int port),False,NULL
8,DatagramSocketImpl,3,"DatagramSocketImpl(InetAddress address, int port)",False,NULL
8,DatagramSocketImpl,4,"DatagramSocketImpl(InetAddress address, int port, int receiveBufferSize)",False,NULL
8,DatagramSocketImpl,5,"DatagramSocketImpl(InetAddress address, int port, int receiveBufferSize, int sendBufferSize)",False,NULL
9,HttpCookie,1,String getComment(),True,"Returns the comment describing the purpose of this cookie, or null if the cookie has no comment."
9,HttpCookie,2,String getDomain(),True,Returns the domain name set for this cookie.
9,HttpCookie,3,Date getExpiryDate(),False,NULL
9,HttpCookie,4,String getName(),True,Returns the name of the cookie.
9,HttpCookie,5,String getPath(),True,Returns the path on the server to which the browser returns this cookie.
9,HttpCookie,6,int getVersion(),True,Returns the version of the protocol this cookie complies with.
9,HttpCookie,7,boolean getSecure(),True,"Returns true if sending this cookie should be restricted to a secure protocol, or false if the it can be sent using any protocol."
9,HttpCookie,8,boolean getHttpOnly(),False,NULL
9,HttpCookie,9,String getValue(),True,Returns the value of the cookie.
9,HttpCookie,10,void setComment(String purpose),True,Specifies a comment that describes a cookie's purpose.
9,HttpCookie,11,void setDomain(String pattern),True,Specifies the domain within which this cookie should be presented.
9,HttpCookie,12,void setExpiryDate(Date when),False,NULL
9,HttpCookie,13,void setPath(String uri),True,Specifies a path for the cookie to which the client should return the cookie.
9,HttpCookie,14,void setSecure(boolean flag),True,"Indicates whether the cookie should only be sent using a secure protocol, such as HTTPS or SSL."
9,HttpCookie,15,void setHttpOnly(boolean httpOnly),True,Indicates whether the cookie should be considered HTTP Only.
9,HttpCookie,16,void setValue(String newValue),True,Assigns a new value to a cookie after the cookie is created.
9,HttpCookie,17,boolean contains(HttpCookie cookie),False,NULL
9,HttpCookie,18,boolean contains(String name),False,NULL
9,HttpCookie,19,"boolean contains(String name, String value)",False,NULL
9,HttpCookie,20,"boolean contains(String name, String value, String domain)",False,NULL
9,HttpCookie,21,"boolean contains(String name, String value, String domain, String path)",False,NULL
9,HttpCookie,22,"boolean contains(String name, String value, String domain, String path, int version)",False,NULL
9,HttpCookie,23,"boolean contains(String name, String value, String domain, String path, int version, boolean secure)",False,NULL
9,HttpCookie,24,"boolean contains(String name, String value, String domain, String path, int version, boolean secure, boolean httpOnly)",False,NULL
9,HttpCookie,25,"boolean contains(String name, String value, String domain, String path, int version, boolean secure, boolean httpOnly, Date when)",False,NULL
10,HttpURLConnection,1,void disconnect(),True,Indicates that other requests to the server are unlikely in the near future.
10,HttpURLConnection,2,void setRequestMethod(String method),True,"Set the method for the URL request, one of: GET POST HEAD OPTIONS PUT DELETE TRACE are legal, subject to protocol restrictions."
10,HttpURLConnection,3,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,4,int getResponseCode(),True,Gets the status code from an HTTP response message.
10,HttpURLConnection,5,InputStream getInputStream(),False,NULL
10,HttpURLConnection,6,InputStream getErrorStream(),True,Returns the error stream if the connection failed but the server sent useful data nonetheless.
10,HttpURLConnection,7,void setDoOutput(boolean doOutput),False,NULL
10,HttpURLConnection,8,OutputStream getOutputStream(),False,NULL
10,HttpURLConnection,9,void setFixedLengthStreamingMode(int contentLength),True,"This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is known in advance."
10,HttpURLConnection,10,void setChunkedStreamingMode(int chunklen),True,"This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is not known in advance."
10,HttpURLConnection,11,void setUseCaches(boolean useCaches),False,NULL
10,HttpURLConnection,12,void setDefaultUseCaches(boolean defaultUseCaches),False,NULL
10,HttpURLConnection,13,void setIfModifiedSince(long date),False,NULL
10,HttpURLConnection,14,void setIfUnmodifiedSince(long date),False,NULL
10,HttpURLConnection,15,void setIfMatch(String etag),False,NULL
10,HttpURLConnection,16,void setIfNoneMatch(String etag),False,NULL
10,HttpURLConnection,17,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,18,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,19,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,20,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,21,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,22,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,23,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,24,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,25,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,26,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,27,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,28,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,29,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,30,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,31,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,32,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,33,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,34,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,35,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,36,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,37,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,38,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,39,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,40,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,41,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,42,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,43,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,44,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,45,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,46,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,47,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,48,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,49,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,50,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,51,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,52,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,53,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,54,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,55,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,56,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,57,"void setRequestProperty(String key, String value)",False,NULL
10,HttpURLConnection,58,"void setRequestProperty(String key, long value)",False,NULL
10,HttpURLConnection,59,"void setRequestProperty(String key, int value)",False,NULL
10,HttpURLConnection,60,"void setRequestProperty(String key, boolean value)",False,NULL
10,HttpURLConnection,61,"void setRequestProperty(String key, String[] values)",False,NULL
10,HttpURLConnection,62,"void setRequestProperty(String key, String value)",False,NULL
11,IDN,1,String toASCII(String input),True,"Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of RFC 3490."
11,IDN,2,String toUnicode(String input),True,"Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of RFC 3490."
11,IDN,3,"String toUnicode(String input, int flags)",True,"Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of RFC 3490."
11,IDN,4,"String toASCII(String input, int flags)",True,"Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of RFC 3490."
11,IDN,5,"String toASCII(String input, int flags, String defaultHost)",False,NULL
12,Inet4Address,1,InetAddress getByName(String host),False,NULL
12,Inet4Address,2,String getHostAddress(),True,Returns the IP address string in textual presentation form.
12,Inet4Address,3,String getHostName(),False,NULL
12,Inet4Address,4,boolean isReachable(int timeout),False,NULL
12,Inet4Address,5,boolean isSiteLocalAddress(),True,Utility routine to check if the InetAddress is a site local address.
13,Inet6Address,1,Inet6Address(byte[] addr),False,NULL
13,Inet6Address,2,Inet6Address(String host),False,NULL
13,Inet6Address,3,InetAddress getByName(String host),False,NULL
13,Inet6Address,4,"InetAddress getByAddress(String host, byte[] addr)",False,NULL
13,Inet6Address,5,byte[] getAddress(),True,Returns the raw IP address of this InetAddress object.
14,InetAddress,1,InetAddress getByName(String host),True,"Determines the IP address of a host, given the host's name."
14,InetAddress,2,InetAddress getLocalHost(),True,Returns the address of the local host.
14,InetAddress,3,String getHostName(),True,Gets the host name for this IP address.
14,InetAddress,4,String getHostAddress(),True,Returns the IP address string in textual presentation.
14,InetAddress,5,boolean isReachable(int timeout),True,Test whether that address is reachable.
15,InetSocketAddress,1,"InetSocketAddress(InetAddress addr, int port)",False,NULL
15,InetSocketAddress,2,"InetSocketAddress(String hostname, int port)",False,NULL
15,InetSocketAddress,3,InetAddress getAddress(),True,Gets the InetAddress.
15,InetSocketAddress,4,int getPort(),True,Gets the port number.
15,InetSocketAddress,5,String toString(),True,Constructs a string representation of this InetSocketAddress.
16,InterfaceAddress,1,getAddress(),False,NULL
16,InterfaceAddress,2,getBroadcast(),False,NULL
16,InterfaceAddress,3,getNetworkPrefixLength(),False,NULL
16,InterfaceAddress,4,getNetwork(),False,NULL
16,InterfaceAddress,5,isLoopbackAddress(),False,NULL
17,JarURLConnection,1,JarURLConnection(URL url),False,NULL
17,JarURLConnection,2,URL getJarFileURL(),True,Returns the URL for the Jar file for this connection.
17,JarURLConnection,3,JarFile getJarFile(),True,Return the JAR file for this connection.
17,JarURLConnection,4,JarEntry getJarEntry(),True,"Return the JAR entry object for this connection, if any."
17,JarURLConnection,5,JarEntry getEntry(String name),False,NULL
18,MulticastSocket,1,MulticastSocket(),False,NULL
18,MulticastSocket,2,MulticastSocket(int port),False,NULL
18,MulticastSocket,3,void joinGroup(InetAddress group),True,Joins a multicast group.
18,MulticastSocket,4,void leaveGroup(InetAddress group),True,Leave a multicast group.
18,MulticastSocket,5,void setTimeToLive(int ttl),True,Set the default time-to-live for multicast packets sent out on this MulticastSocket in order to control the scope of the multicasts.
19,NetPermission,1,boolean equals(Object obj),False,NULL
19,NetPermission,2,boolean implies(Permission p),False,NULL
19,NetPermission,3,String getActions(),False,NULL
19,NetPermission,4,int hashCode(),False,NULL
19,NetPermission,5,boolean isReadOnly(),False,NULL
20,NetworkInterface,1,getByName(String name),False,NULL
20,NetworkInterface,2,getByIndex(int index),False,NULL
20,NetworkInterface,3,getHardwareAddress(),False,NULL
20,NetworkInterface,4,getInterfaceAddresses(),False,NULL
20,NetworkInterface,5,getMTU(),False,NULL
21,PasswordAuthentication,1,"PasswordAuthentication(String user, char[] password)",False,NULL
21,PasswordAuthentication,2,String getUserName(),True,Returns the user name.
21,PasswordAuthentication,3,char[] getPassword(),True,Returns the user password.
21,PasswordAuthentication,4,void setUserName(String user),False,NULL
21,PasswordAuthentication,5,void setPassword(char[] password),False,NULL
22,Proxy,1,"Proxy(Proxy.Type type, SocketAddress sa)",False,NULL
22,Proxy,2,Proxy.Type getType(),False,NULL
22,Proxy,3,SocketAddress getAddress(),False,NULL
22,Proxy,4,Proxy.Type valueOf(String name),False,NULL
22,Proxy,5,String toString(),True,Constructs a string representation of this Proxy.
23,ProxySelector,1,ProxySelector.getDefault(),False,NULL
23,ProxySelector,2,ProxySelector.setDefault(ProxySelector selector),False,NULL
23,ProxySelector,3,ProxySelector.openConnection(URI uri),False,NULL
23,ProxySelector,4,ProxySelector.select(URI uri),False,NULL
23,ProxySelector,5,ProxySelector.close(),False,NULL
24,ResponseCache,1,ResponseCache getDefault(),True,Gets the system-wide response cache.
24,ResponseCache,2,void setDefault(ResponseCache cache),True,Sets (or unsets) the system-wide cache.
24,ResponseCache,3,"void put(URI uri, URLConnection conn)",False,NULL
24,ResponseCache,4,"Response get(URI uri, String requestMethod, HttpURLConnection httpConn)",False,NULL
24,ResponseCache,5,void remove(URI uri),False,NULL
25,SecureCacheResponse,1,boolean isSecure(),False,NULL
25,SecureCacheResponse,2,String getCipherSuite(),True,Returns the cipher suite in use on the original connection that retrieved the network resource.
25,SecureCacheResponse,3,String getLocalCertificateChain(),False,NULL
25,SecureCacheResponse,4,String getPeerCertificateChain(),False,NULL
25,SecureCacheResponse,5,String getLocalPrincipal(),False,NULL
25,SecureCacheResponse,6,String getPeerPrincipal(),False,NULL
25,SecureCacheResponse,7,String getNegotiatedProtocol(),False,NULL
25,SecureCacheResponse,8,String getNegotiatedProtocols(),False,NULL
25,SecureCacheResponse,9,String getNegotiatedApplicationProtocols(),False,NULL
25,SecureCacheResponse,10,String getNegotiatedApplicationProtocol(),False,NULL
25,SecureCacheResponse,11,String getNegotiatedApplicationProtocolParameter(),False,NULL
25,SecureCacheResponse,12,String getNegotiatedApplicationProtocolParameters(),False,NULL
25,SecureCacheResponse,13,String getNegotiatedApplicationProtocolParameter(String protocol),False,NULL
25,SecureCacheResponse,14,String getNegotiatedApplicationProtocolParameters(String protocol),False,NULL
25,SecureCacheResponse,15,"String getNegotiatedApplicationProtocolParameter(String protocol, String parameter)",False,NULL
25,SecureCacheResponse,16,"String getNegotiatedApplicationProtocolParameters(String protocol, String parameter)",False,NULL
25,SecureCacheResponse,17,"String getNegotiatedApplicationProtocolParameter(String protocol, String parameter, String value)",False,NULL
25,SecureCacheResponse,18,"String getNegotiatedApplicationProtocolParameters(String protocol, String parameter, String value)",False,NULL
25,SecureCacheResponse,19,"String getNegotiatedApplicationProtocolParameter(String protocol, String parameter, String value, String usage)",False,NULL
25,SecureCacheResponse,20,"String getNegotiatedApplicationProtocolParameters(String protocol, String parameter, String value, String usage)",False,NULL
26,ServerSocket,1,ServerSocket(int port),False,NULL
26,ServerSocket,2,"ServerSocket(int port, int backlog)",False,NULL
26,ServerSocket,3,"ServerSocket(int port, int backlog, InetAddress bindAddr)",False,NULL
26,ServerSocket,4,Socket accept(),True,Listens for a connection to be made to this socket and accepts it.
26,ServerSocket,5,void bind(SocketAddress endpoint),True,Binds the ServerSocket to a specific address (IP address and port number).
26,ServerSocket,6,void close(),True,Closes this socket.
26,ServerSocket,7,InetAddress getInetAddress(),True,Returns the local address of this server socket.
26,ServerSocket,8,int getLocalPort(),True,Returns the port number on which this socket is listening.
26,ServerSocket,9,SocketAddress getLocalSocketAddress(),True,Returns the address of the endpoint this socket is bound to.
26,ServerSocket,10,int getReceiveBufferSize(),True,"Gets the value of the SO_RCVBUF option for this ServerSocket, that is the proposed buffer size that will be used for Sockets accepted from this ServerSocket."
26,ServerSocket,11,int getReuseAddress(),False,NULL
26,ServerSocket,12,int getSoTimeout(),True,Retrieve setting for SO_TIMEOUT.
26,ServerSocket,13,void setReceiveBufferSize(int size),True,Sets a default proposed value for the SO_RCVBUF option for sockets accepted from this ServerSocket.
26,ServerSocket,14,void setReuseAddress(boolean on),True,Enable/disable the SO_REUSEADDR socket option.
26,ServerSocket,15,void setSoTimeout(int timeout),True,"Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds."
27,Socket,1,"Socket(InetAddress address, int port)",False,NULL
27,Socket,2,"Socket(String host, int port)",False,NULL
27,Socket,3,InputStream getInputStream(),True,Returns an input stream for this socket.
27,Socket,4,OutputStream getOutputStream(),True,Returns an output stream for this socket.
27,Socket,5,void close(),True,Closes this socket.
27,Socket,6,void connect(SocketAddress endpoint),True,Connects this socket to the server.
27,Socket,7,"void connect(SocketAddress endpoint, int timeout)",True,Connects this socket to the server with a specified timeout value.
27,Socket,8,void bind(SocketAddress bindpoint),True,Binds the socket to a local address.
27,Socket,9,InetAddress getInetAddress(),True,Returns the address to which the socket is connected.
27,Socket,10,InetAddress getLocalAddress(),True,Gets the local address to which the socket is bound.
27,Socket,11,int getPort(),True,Returns the remote port number to which this socket is connected.
27,Socket,12,int getLocalPort(),True,Returns the local port number to which this socket is bound.
27,Socket,13,SocketAddress getRemoteSocketAddress(),True,"Returns the address of the endpoint this socket is connected to, or null if it is unconnected."
27,Socket,14,boolean isConnected(),True,Returns the connection state of the socket.
27,Socket,15,boolean isBound(),True,Returns the binding state of the socket.
27,Socket,16,boolean isClosed(),True,Returns the closed state of the socket.
27,Socket,17,void setSoTimeout(int timeout),True,"Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds."
27,Socket,18,int getSoTimeout(),True,Returns setting for SO_TIMEOUT.
27,Socket,19,void setTcpNoDelay(boolean on),True,Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).
27,Socket,20,boolean getTcpNoDelay(),True,Tests if TCP_NODELAY is enabled.
27,Socket,21,void setReuseAddress(boolean on),True,Enable/disable the SO_REUSEADDR socket option.
27,Socket,22,boolean getReuseAddress(),True,Tests if SO_REUSEADDR is enabled.
27,Socket,23,void setKeepAlive(boolean on),True,Enable/disable SO_KEEPALIVE.
27,Socket,24,boolean getKeepAlive(),True,Tests if SO_KEEPALIVE is enabled.
27,Socket,25,void setOOBInline(boolean on),True,"Enable/disable SO_OOBINLINE (receipt of TCP urgent data) By default, this option is disabled and TCP urgent data received on a socket is silently discarded."
27,Socket,26,boolean getOOBInline(),True,Tests if SO_OOBINLINE is enabled.
27,Socket,27,"void setSoLinger(boolean on, int linger)",True,Enable/disable SO_LINGER with the specified linger time in seconds.
27,Socket,28,int getSendBufferSize(),True,"Get value of the SO_SNDBUF option for this Socket, that is the buffer size used by the platform for output on this Socket."
27,Socket,29,void setSendBufferSize(int size),True,Sets the SO_SNDBUF option to the specified value for this Socket.
27,Socket,30,int getReceiveBufferSize(),True,"Gets the value of the SO_RCVBUF option for this Socket, that is the buffer size used by the platform for input on this Socket."
27,Socket,31,void setReceiveBufferSize(int size),True,Sets the SO_RCVBUF option to the specified value for this Socket.
27,Socket,32,"void setPerformancePreferences(int connectionTime, int latency, int bandwidth)",True,Sets performance preferences for this socket.
27,Socket,33,void shutdownInput(),True,"Places the input stream for this socket at ""end of stream""."
27,Socket,34,void shutdownOutput(),True,Disables the output stream for this socket.
27,Socket,35,void sendUrgentData(int data),True,Send one byte of urgent data on the socket.
27,Socket,36,int getTrafficClass(),True,Gets traffic class or type-of-service in the IP header for packets sent from this Socket
27,Socket,37,void setTrafficClass(int tc),True,Sets traffic class or type-of-service octet in the IP header for packets sent from this Socket.
27,Socket,38,int getReceiveBufferSize(),True,"Gets the value of the SO_RCVBUF option for this Socket, that is the buffer size used by the platform for input on this Socket."
27,Socket,39,void setReceiveBufferSize(int size),True,Sets the SO_RCVBUF option to the specified value for this Socket.
27,Socket,40,int getSendBufferSize(),True,"Get value of the SO_SNDBUF option for this Socket, that is the buffer size used by the platform for output on this Socket."
27,Socket,41,void setSendBufferSize(int size),True,Sets the SO_SNDBUF option to the specified value for this Socket.
27,Socket,42,"void setPerformancePreferences(int connectionTime, int latency, int bandwidth)",True,Sets performance preferences for this socket.
27,Socket,43,void shutdownInput(),True,"Places the input stream for this socket at ""end of stream""."
27,Socket,44,void shutdownOutput(),True,Disables the output stream for this socket.
27,Socket,45,void sendUrgentData(int data),True,Send one byte of urgent data on the socket.
27,Socket,46,int getTrafficClass(),True,Gets traffic class or type-of-service in the IP header for packets sent from this Socket
27,Socket,47,void setTrafficClass(int tc),True,Sets traffic class or type-of-service octet in the IP header for packets sent from this Socket.
27,Socket,48,int getReceiveBufferSize(),True,"Gets the value of the SO_RCVBUF option for this Socket, that is the buffer size used by the platform for input on this Socket."
27,Socket,49,void setReceiveBufferSize(int size),True,Sets the SO_RCVBUF option to the specified value for this Socket.
27,Socket,50,int getSendBufferSize(),True,"Get value of the SO_SNDBUF option for this Socket, that is the buffer size used by the platform for output on this Socket."
27,Socket,51,void setSendBufferSize(int size),True,Sets the SO_SNDBUF option to the specified value for this Socket.
27,Socket,52,"void setPerformancePreferences(int connectionTime, int latency, int bandwidth)",True,Sets performance preferences for this socket.
27,Socket,53,void shutdownInput(),True,"Places the input stream for this socket at ""end of stream""."
27,Socket,54,void shutdownOutput(),True,Disables the output stream for this socket.
27,Socket,55,void sendUrgentData(int data),True,Send one byte of urgent data on the socket.
27,Socket,56,int getTrafficClass(),True,Gets traffic class or type-of-service in the IP header for packets sent from this Socket
27,Socket,57,void setTrafficClass(int tc),True,Sets traffic class or type-of-service octet in the IP header for packets sent from this Socket.
27,Socket,58,int getReceiveBufferSize(),True,"Gets the value of the SO_RCVBUF option for this Socket, that is the buffer size used by the platform for input on this Socket."
27,Socket,59,void setReceiveBufferSize(int size),True,Sets the SO_RCVBUF option to the specified value for this Socket.
27,Socket,60,int getSendBufferSize(),True,"Get value of the SO_SNDBUF option for this Socket, that is the buffer size used by the platform for output on this Socket."
27,Socket,61,void setSendBufferSize(int size),True,Sets the SO_SNDBUF option to the specified value for this Socket.
27,Socket,62,"void setPerformancePreferences(int connectionTime, int latency, int bandwidth)",True,Sets performance preferences for this socket.
27,Socket,63,void shutdownInput(),True,"Places the input stream for this socket at ""end of stream""."
27,Socket,64,void shutdownOutput(),True,Disables the output stream for this socket.
27,Socket,65,void sendUrgentData(int data),True,Send one byte of urgent data on the socket.
27,Socket,66,int getTrafficClass(),True,Gets traffic class or type-of-service in the IP header for packets sent from this Socket
27,Socket,67,void setTrafficClass(int tc),True,Sets traffic class or type-of-service octet in the IP header for packets sent from this Socket.
27,Socket,68,int getReceiveBufferSize(),True,"Gets the value of the SO_RCVBUF option for this Socket, that is the buffer size used by the platform for input on this Socket."
27,Socket,69,void setReceiveBufferSize(int size),True,Sets the SO_RCVBUF option to the specified value for this Socket.
27,Socket,70,int getSendBufferSize(),True,"Get value of the SO_SNDBUF option for this Socket, that is the buffer size used by the platform for output on this Socket."
27,Socket,71,void setSendBufferSize(int size),True,Sets the SO_SNDBUF option to the specified value for this Socket.
28,SocketAddress,1,SocketAddress(),False,NULL
28,SocketAddress,2,"SocketAddress(InetAddress address, int port)",False,NULL
28,SocketAddress,3,InetAddress getAddress(),False,NULL
28,SocketAddress,4,int getPort(),False,NULL
28,SocketAddress,5,String toString(),False,NULL
29,SocketImpl,1,protected native void create(boolean stream),False,NULL
29,SocketImpl,2,"protected native void connect(String host, int port)",False,NULL
29,SocketImpl,3,"protected native void bind(InetAddress host, int port)",False,NULL
29,SocketImpl,4,protected native void listen(int backlog),False,NULL
29,SocketImpl,5,protected native SocketImpl accept(SocketImpl s),False,NULL
30,SocketPermission,1,"SocketPermission(String name, String actions)",False,NULL
30,SocketPermission,2,String getActions(),True,Returns the canonical string representation of the actions.
30,SocketPermission,3,String getName(),False,NULL
30,SocketPermission,4,boolean implies(Permission p),True,"Checks if this socket permission object ""implies"" the specified permission."
30,SocketPermission,5,boolean equals(Object obj),True,Checks two SocketPermission objects for equality.
31,StandardSocketOptions,1,SO_BROADCAST,False,NULL
31,StandardSocketOptions,2,SO_KEEPALIVE,False,NULL
31,StandardSocketOptions,3,SO_OOBINLINE,False,NULL
31,StandardSocketOptions,4,SO_REUSEADDR,False,NULL
31,StandardSocketOptions,5,SO_TIMEOUT,False,NULL
32,URI,1,URI(String),False,NULL
32,URI,2,"URI(URI, String)",False,NULL
32,URI,3,String getScheme(),True,Returns the scheme component of this URI.
32,URI,4,String getSchemeSpecificPart(),True,Returns the decoded scheme-specific part of this URI.
32,URI,5,String getAuthority(),True,Returns the decoded authority component of this URI.
32,URI,6,String getPath(),True,Returns the decoded path component of this URI.
32,URI,7,String getQuery(),True,Returns the decoded query component of this URI.
32,URI,8,String getFragment(),True,Returns the decoded fragment component of this URI.
32,URI,9,URI resolve(URI),False,NULL
32,URI,10,String toString(),True,Returns the content of this URI as a string.
33,URL,1,URL(String spec),False,NULL
33,URL,2,"URL(String protocol, String host, int port, String file)",False,NULL
33,URL,3,URLConnection openConnection(),True,Returns a URLConnection instance that represents a connection to the remote object referred to by the URL.
33,URL,4,String toString(),True,Constructs a string representation of this URL.
33,URL,5,URLConnection getContent(),False,NULL
33,URL,6,URLConnection getContent(URLConnection.CacheRequest cachereq),False,NULL
33,URL,7,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout)",False,NULL
33,URL,8,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout)",False,NULL
33,URL,9,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches)",False,NULL
33,URL,10,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches, int ifModifiedSince)",False,NULL
33,URL,11,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches, int ifModifiedSince, int ifUnmodifiedSince)",False,NULL
33,URL,12,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches, int ifModifiedSince, int ifUnmodifiedSince, int ifNoneMatch)",False,NULL
33,URL,13,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches, int ifModifiedSince, int ifUnmodifiedSince, int ifNoneMatch, int ifMatch)",False,NULL
33,URL,14,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches, int ifModifiedSince, int ifUnmodifiedSince, int ifNoneMatch, int ifMatch, int ifRange)",False,NULL
33,URL,15,"URLConnection getContent(URLConnection.CacheRequest cachereq, int connectTimeout, int readTimeout, boolean useCaches, int ifModifiedSince, int ifUnmodifiedSince, int ifNoneMatch, int ifMatch, int ifRange, int range)",False,NULL
34,URLClassLoader,1,URLClassLoader(URL[] urls),False,NULL
34,URLClassLoader,2,"URLClassLoader(URL[] urls, ClassLoader parent)",False,NULL
34,URLClassLoader,3,"URLClassLoader(URL[] urls, ClassLoader parent, URLStreamHandlerFactory factory)",False,NULL
34,URLClassLoader,4,Class<?> loadClass(String name) throws ClassNotFoundException,False,NULL
34,URLClassLoader,5,URL findResource(String name),True,Finds the resource with the specified name on the URL search path.
34,URLClassLoader,6,Enumeration<URL> findResources(String name) throws IOException,True,Returns an Enumeration of URLs representing all of the resources on the URL search path having the specified name.
34,URLClassLoader,7,void close() throws IOException,True,"Closes this URLClassLoader, so that it can no longer be used to load new classes or resources that are defined by this loader."
34,URLClassLoader,8,URL getResource(String name),False,NULL
34,URLClassLoader,9,"URL getResource(String name, String path)",False,NULL
34,URLClassLoader,10,URL getResourceFromPath(String name),False,NULL
34,URLClassLoader,11,"URL getResourceFromPath(String name, String path)",False,NULL
34,URLClassLoader,12,URL getResourceFromJar(String name),False,NULL
34,URLClassLoader,13,"URL getResourceFromJar(String name, String path)",False,NULL
34,URLClassLoader,14,"URL getResourceFromJar(String name, String path, String jar)",False,NULL
34,URLClassLoader,15,"URL getResourceFromJar(String name, String path, String jar, String jarPath)",False,NULL
34,URLClassLoader,16,"URL getResourceFromJar(String name, String path, String jar, String jarPath, String jarFile)",False,NULL
34,URLClassLoader,17,"URL getResourceFromJar(String name, String path, String jar, String jarPath, String jarFile, String jarFilePath)",False,NULL
34,URLClassLoader,18,"URL getResourceFromJar(String name, String path, String jar, String jarPath, String jarFile, String jarFilePath, String jarFilePathJar)",False,NULL
34,URLClassLoader,19,"URL getResourceFromJar(String name, String path, String jar, String jarPath, String jarFile, String jarFilePath, String jarFilePathJar, String jarFilePathJarPath)",False,NULL
34,URLClassLoader,20,"URL getResourceFromJar(String name, String path, String jar, String jarPath, String jarFile, String jarFilePath, String jarFilePathJar, String jarFilePathJarPath, String jarFilePathJarPathJar)",False,NULL
35,URLConnection,1,URL getURL(),True,Returns the value of this URLConnection's URL field.
35,URLConnection,2,void connect() throws IOException,True,"Opens a communications link to the resource referenced by this URL, if such a connection has not already been established."
35,URLConnection,3,InputStream getInputStream() throws IOException,True,Returns an input stream that reads from this open connection.
35,URLConnection,4,OutputStream getOutputStream() throws IOException,True,Returns an output stream that writes to this connection.
35,URLConnection,5,"void setRequestProperty(String key, String value)",True,Sets the general request property.
35,URLConnection,6,String getContentType(),True,Returns the value of the content-type header field.
35,URLConnection,7,int getContentLength(),True,Returns the value of the content-length header field.
35,URLConnection,8,long getContentLengthLong(),True,Returns the value of the content-length header field as a long.
35,URLConnection,9,String getContentEncoding(),True,Returns the value of the content-encoding header field.
35,URLConnection,10,String getHeaderField(String name),True,Returns the value of the named header field.
35,URLConnection,11,"Map<String, List<String>> getHeaderFields()",False,NULL
35,URLConnection,12,int getResponseCode() throws IOException,False,NULL
35,URLConnection,13,String getResponseMessage() throws IOException,False,NULL
35,URLConnection,14,void setDoInput(boolean doInput),True,Sets the value of the doInput field for this URLConnection to the specified value.
35,URLConnection,15,void setDoOutput(boolean doOutput),True,Sets the value of the doOutput field for this URLConnection to the specified value.
35,URLConnection,16,void setUseCaches(boolean useCaches),True,Sets the value of the useCaches field of this URLConnection to the specified value.
35,URLConnection,17,void setDefaultUseCaches(boolean defaultUseCaches),True,Sets the default value of the useCaches field to the specified value.
35,URLConnection,18,void setRequestMethod(String method) throws ProtocolException,False,NULL
35,URLConnection,19,void setConnectTimeout(int timeout),True,"Sets a specified timeout value, in milliseconds, to be used when opening a communications link to the resource referenced by this URLConnection."
35,URLConnection,20,void setReadTimeout(int timeout),True,"Sets the read timeout to a specified timeout, in milliseconds."
36,URLDecoder,1,"String decode(String s, String enc)",True,Decodes a application/x-www-form-urlencoded string using a specific encoding scheme.
36,URLDecoder,2,"String[] decode(String s, String enc, int offset, int len)",False,NULL
36,URLDecoder,3,String decode(String s),True,"Deprecated. The resulting string may vary depending on the platform's default encoding. Instead, use the decode(String,String) method to specify the encoding."
36,URLDecoder,4,"String decode(String s, int offset, int len)",False,NULL
36,URLDecoder,5,"String decode(String s, String enc, int offset, int len, String enc2)",False,NULL
37,URLEncoder,1,"String encode(String s, String enc)",True,Translates a string into application/x-www-form-urlencoded format using a specific encoding scheme.
37,URLEncoder,2,String encode(String s),True,"Deprecated. The resulting string may vary depending on the platform's default encoding. Instead, use the encode(String,String) method to specify the encoding."
37,URLEncoder,3,"String encode(String s, Charset charset)",False,NULL
37,URLEncoder,4,"String encode(String s, String enc, String enc)",False,NULL
37,URLEncoder,5,"String encode(String s, String enc, String enc)",False,NULL
38,URLPermission,1,"URLPermission(String url, String actions)",False,NULL
38,URLPermission,2,String getActions(),True,"Returns the normalized method list and request header list, in the form:"
38,URLPermission,3,String getURLString(),False,NULL
38,URLPermission,4,boolean implies(Permission p),True,Checks if this URLPermission implies the given permission.
38,URLPermission,5,boolean equals(Object obj),True,"Returns true if, this.getActions().equals(p.getActions()) and p's url equals this's url."
39,URLStreamHandler,1,protected URLConnection openConnection(URL u),False,NULL
39,URLStreamHandler,2,"protected URLConnection openConnection(URL u, Proxy p)",False,NULL
39,URLStreamHandler,3,"protected URLConnection openConnection(URL u, Authenticator a)",False,NULL
39,URLStreamHandler,4,"protected URLConnection openConnection(URL u, Proxy p, Authenticator a)",False,NULL
39,URLStreamHandler,5,"protected URLConnection openConnection(URL u, URLStreamHandler handler)",False,NULL
