ClassName,Method,Return Type,Description
Clock,equals(Object obj),boolean,Checks if this clock is equal to another clock.
Clock,"fixed(Instant fixedInstant, ZoneId zone)",static Clock,Obtains a clock that always returns the same instant.
Clock,getZone(),abstract ZoneId,Gets the time-zone being used to create dates and times.
Clock,hashCode(),int,A hash code for this clock.
Clock,instant(),abstract Instant,Gets the current instant of the clock.
Clock,millis(),long,Gets the current millisecond instant of the clock.
Clock,"offset(Clock baseClock, Duration offsetDuration)",static Clock,Obtains a clock that returns instants from the specified clock with the specified duration added
Clock,system(ZoneId zone),static Clock,Obtains a clock that returns the current instant using best available system clock.
Clock,systemDefaultZone(),static Clock,"Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the default time-zone."
Clock,systemUTC(),static Clock,"Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the UTC time-zone."
Clock,"tick(Clock baseClock, Duration tickDuration)",static Clock,Obtains a clock that returns instants from the specified clock truncated to the nearest occurrence of the specified duration.
Clock,tickMinutes(ZoneId zone),static Clock,Obtains a clock that returns the current instant ticking in whole minutes using best available system clock.
Clock,tickSeconds(ZoneId zone),static Clock,Obtains a clock that returns the current instant ticking in whole seconds using best available system clock.
Clock,withZone(ZoneId zone),abstract Clock,Returns a copy of this clock with a different time-zone.
Duration,abs(),Duration,Returns a copy of this duration with a positive length.
Duration,addTo(Temporal temporal),Temporal,Adds this duration to the specified temporal object.
Duration,"between(Temporal startInclusive, Temporal endExclusive)",static Duration,Obtains a Duration representing the duration between two temporal objects.
Duration,compareTo(Duration otherDuration),int,Compares this duration to the specified Duration.
Duration,dividedBy(long divisor),Duration,Returns a copy of this duration divided by the specified value.
Duration,equals(Object otherDuration),boolean,Checks if this duration is equal to the specified Duration.
Duration,from(TemporalAmount amount),static Duration,Obtains an instance of Duration from a temporal amount.
Duration,get(TemporalUnit unit),long,Gets the value of the requested unit.
Duration,getNano(),int,Gets the number of nanoseconds within the second in this duration.
Duration,getSeconds(),long,Gets the number of seconds in this duration.
Duration,getUnits(),List<TemporalUnit>,Gets the set of units supported by this duration.
Duration,hashCode(),int,A hash code for this duration.
Duration,isNegative(),boolean,"Checks if this duration is negative, excluding zero."
Duration,isZero(),boolean,Checks if this duration is zero length.
Duration,minus(Duration duration),Duration,Returns a copy of this duration with the specified duration subtracted.
Duration,"minus(long amountToSubtract, TemporalUnit unit)",Duration,Returns a copy of this duration with the specified duration subtracted.
Duration,minusDays(long daysToSubtract),Duration,Returns a copy of this duration with the specified duration in standard 24 hour days subtracted.
Duration,minusHours(long hoursToSubtract),Duration,Returns a copy of this duration with the specified duration in hours subtracted.
Duration,minusMillis(long millisToSubtract),Duration,Returns a copy of this duration with the specified duration in milliseconds subtracted.
Duration,minusMinutes(long minutesToSubtract),Duration,Returns a copy of this duration with the specified duration in minutes subtracted.
Duration,minusNanos(long nanosToSubtract),Duration,Returns a copy of this duration with the specified duration in nanoseconds subtracted.
Duration,minusSeconds(long secondsToSubtract),Duration,Returns a copy of this duration with the specified duration in seconds subtracted.
Duration,multipliedBy(long multiplicand),Duration,Returns a copy of this duration multiplied by the scalar.
Duration,negated(),Duration,Returns a copy of this duration with the length negated.
Duration,"of(long amount, TemporalUnit unit)",static Duration,Obtains a Duration representing an amount in the specified unit.
Duration,ofDays(long days),static Duration,Obtains a Duration representing a number of standard 24 hour days.
Duration,ofHours(long hours),static Duration,Obtains a Duration representing a number of standard hours.
Duration,ofMillis(long millis),static Duration,Obtains a Duration representing a number of milliseconds.
Duration,ofMinutes(long minutes),static Duration,Obtains a Duration representing a number of standard minutes.
Duration,ofNanos(long nanos),static Duration,Obtains a Duration representing a number of nanoseconds.
Duration,ofSeconds(long seconds),static Duration,Obtains a Duration representing a number of seconds.
Duration,"ofSeconds(long seconds, long nanoAdjustment)",static Duration,Obtains a Duration representing a number of seconds and an adjustment in nanoseconds.
Duration,parse(CharSequence text),static Duration,Obtains a Duration from a text string such as PnDTnHnMn.nS.
Duration,plus(Duration duration),Duration,Returns a copy of this duration with the specified duration added.
Duration,"plus(long amountToAdd, TemporalUnit unit)",Duration,Returns a copy of this duration with the specified duration added.
Duration,plusDays(long daysToAdd),Duration,Returns a copy of this duration with the specified duration in standard 24 hour days added.
Duration,plusHours(long hoursToAdd),Duration,Returns a copy of this duration with the specified duration in hours added.
Duration,plusMillis(long millisToAdd),Duration,Returns a copy of this duration with the specified duration in milliseconds added.
Duration,plusMinutes(long minutesToAdd),Duration,Returns a copy of this duration with the specified duration in minutes added.
Duration,plusNanos(long nanosToAdd),Duration,Returns a copy of this duration with the specified duration in nanoseconds added.
Duration,plusSeconds(long secondsToAdd),Duration,Returns a copy of this duration with the specified duration in seconds added.
Duration,subtractFrom(Temporal temporal),Temporal,Subtracts this duration from the specified temporal object.
Duration,toDays(),long,Gets the number of days in this duration.
Duration,toHours(),long,Gets the number of hours in this duration.
Duration,toMillis(),long,Converts this duration to the total length in milliseconds.
Duration,toMinutes(),long,Gets the number of minutes in this duration.
Duration,toNanos(),long,Converts this duration to the total length in nanoseconds expressed as a long.
Duration,toString(),String,"A string representation of this duration using ISO-8601 seconds based representation, such as PT8H6M12.345S."
Duration,withNanos(int nanoOfSecond),Duration,Returns a copy of this duration with the specified nano-of-second.
Duration,withSeconds(long seconds),Duration,Returns a copy of this duration with the specified amount of seconds.
Instant,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have this instant.
Instant,atOffset(ZoneOffset offset),OffsetDateTime,Combines this instant with an offset to create an OffsetDateTime.
Instant,atZone(ZoneId zone),ZonedDateTime,Combines this instant with a time-zone to create a ZonedDateTime.
Instant,compareTo(Instant otherInstant),int,Compares this instant to the specified instant.
Instant,equals(Object otherInstant),boolean,Checks if this instant is equal to the specified instant.
Instant,from(TemporalAccessor temporal),static Instant,Obtains an instance of Instant from a temporal object.
Instant,get(TemporalField field),int,Gets the value of the specified field from this instant as an int.
Instant,getEpochSecond(),long,Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.
Instant,getLong(TemporalField field),long,Gets the value of the specified field from this instant as a long.
Instant,getNano(),int,"Gets the number of nanoseconds, later along the time-line, from the start of the second."
Instant,hashCode(),int,Returns a hash code for this instant.
Instant,isAfter(Instant otherInstant),boolean,Checks if this instant is after the specified instant.
Instant,isBefore(Instant otherInstant),boolean,Checks if this instant is before the specified instant.
Instant,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
Instant,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
Instant,"minus(long amountToSubtract, TemporalUnit unit)",Instant,Returns a copy of this instant with the specified amount subtracted.
Instant,minus(TemporalAmount amountToSubtract),Instant,Returns a copy of this instant with the specified amount subtracted.
Instant,minusMillis(long millisToSubtract),Instant,Returns a copy of this instant with the specified duration in milliseconds subtracted.
Instant,minusNanos(long nanosToSubtract),Instant,Returns a copy of this instant with the specified duration in nanoseconds subtracted.
Instant,minusSeconds(long secondsToSubtract),Instant,Returns a copy of this instant with the specified duration in seconds subtracted.
Instant,now(),static Instant,Obtains the current instant from the system clock.
Instant,now(Clock clock),static Instant,Obtains the current instant from the specified clock.
Instant,ofEpochMilli(long epochMilli),static Instant,Obtains an instance of Instant using milliseconds from the epoch of 1970-01-01T00:00:00Z.
Instant,ofEpochSecond(long epochSecond),static Instant,Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z.
Instant,"ofEpochSecond(long epochSecond, long nanoAdjustment)",static Instant,Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.
Instant,parse(CharSequence text),static Instant,Obtains an instance of Instant from a text string such as 2007-12-03T10:15:30.00Z.
Instant,"plus(long amountToAdd, TemporalUnit unit)",Instant,Returns a copy of this instant with the specified amount added.
Instant,plus(TemporalAmount amountToAdd),Instant,Returns a copy of this instant with the specified amount added.
Instant,plusMillis(long millisToAdd),Instant,Returns a copy of this instant with the specified duration in milliseconds added.
Instant,plusNanos(long nanosToAdd),Instant,Returns a copy of this instant with the specified duration in nanoseconds added.
Instant,plusSeconds(long secondsToAdd),Instant,Returns a copy of this instant with the specified duration in seconds added.
Instant,query(TemporalQuery<R> query),<R> R,Queries this instant using the specified query.
Instant,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
Instant,toEpochMilli(),long,Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z.
Instant,toString(),String,A string representation of this instant using ISO-8601 representation.
Instant,truncatedTo(TemporalUnit unit),Instant,Returns a copy of this Instant truncated to the specified unit.
Instant,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another instant in terms of the specified unit.
Instant,with(TemporalAdjuster adjuster),Instant,Returns an adjusted copy of this instant.
Instant,"with(TemporalField field, long newValue)",Instant,Returns a copy of this instant with the specified field set to a new value.
LocalDate,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have the same date as this object.
LocalDate,atStartOfDay(),LocalDateTime,Combines this date with the time of midnight to create a LocalDateTime at the start of this date.
LocalDate,atStartOfDay(ZoneId zone),ZonedDateTime,Returns a zoned date-time from this date at the earliest valid time according to the rules in the time-zone.
LocalDate,"atTime(int hour, int minute)",LocalDateTime,Combines this date with a time to create a LocalDateTime.
LocalDate,"atTime(int hour, int minute, int second)",LocalDateTime,Combines this date with a time to create a LocalDateTime.
LocalDate,"atTime(int hour, int minute, int second, int nanoOfSecond)",LocalDateTime,Combines this date with a time to create a LocalDateTime.
LocalDate,atTime(LocalTime time),LocalDateTime,Combines this date with a time to create a LocalDateTime.
LocalDate,atTime(OffsetTime time),OffsetDateTime,Combines this date with an offset time to create an OffsetDateTime.
LocalDate,compareTo(ChronoLocalDate other),int,Compares this date to another date.
LocalDate,equals(Object obj),boolean,Checks if this date is equal to another date.
LocalDate,format(DateTimeFormatter formatter),String,Formats this date using the specified formatter.
LocalDate,from(TemporalAccessor temporal),static LocalDate,Obtains an instance of LocalDate from a temporal object.
LocalDate,get(TemporalField field),int,Gets the value of the specified field from this date as an int.
LocalDate,getChronology(),IsoChronology,"Gets the chronology of this date, which is the ISO calendar system."
LocalDate,getDayOfMonth(),int,Gets the day-of-month field.
LocalDate,getDayOfWeek(),DayOfWeek,"Gets the day-of-week field, which is an enum DayOfWeek."
LocalDate,getDayOfYear(),int,Gets the day-of-year field.
LocalDate,getEra(),Era,Gets the era applicable at this date.
LocalDate,getLong(TemporalField field),long,Gets the value of the specified field from this date as a long.
LocalDate,getMonth(),Month,Gets the month-of-year field using the Month enum.
LocalDate,getMonthValue(),int,Gets the month-of-year field from 1 to 12.
LocalDate,getYear(),int,Gets the year field.
LocalDate,hashCode(),int,A hash code for this date.
LocalDate,isAfter(ChronoLocalDate other),boolean,Checks if this date is after the specified date.
LocalDate,isBefore(ChronoLocalDate other),boolean,Checks if this date is before the specified date.
LocalDate,isEqual(ChronoLocalDate other),boolean,Checks if this date is equal to the specified date.
LocalDate,isLeapYear(),boolean,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
LocalDate,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
LocalDate,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
LocalDate,lengthOfMonth(),int,Returns the length of the month represented by this date.
LocalDate,lengthOfYear(),int,Returns the length of the year represented by this date.
LocalDate,"minus(long amountToSubtract, TemporalUnit unit)",LocalDate,Returns a copy of this date with the specified amount subtracted.
LocalDate,minus(TemporalAmount amountToSubtract),LocalDate,Returns a copy of this date with the specified amount subtracted.
LocalDate,minusDays(long daysToSubtract),LocalDate,Returns a copy of this LocalDate with the specified number of days subtracted.
LocalDate,minusMonths(long monthsToSubtract),LocalDate,Returns a copy of this LocalDate with the specified number of months subtracted.
LocalDate,minusWeeks(long weeksToSubtract),LocalDate,Returns a copy of this LocalDate with the specified number of weeks subtracted.
LocalDate,minusYears(long yearsToSubtract),LocalDate,Returns a copy of this LocalDate with the specified number of years subtracted.
LocalDate,now(),static LocalDate,Obtains the current date from the system clock in the default time-zone.
LocalDate,now(Clock clock),static LocalDate,Obtains the current date from the specified clock.
LocalDate,now(ZoneId zone),static LocalDate,Obtains the current date from the system clock in the specified time-zone.
LocalDate,"of(int year, int month, int dayOfMonth)",static LocalDate,"Obtains an instance of LocalDate from a year, month and day."
LocalDate,"of(int year, Month month, int dayOfMonth)",static LocalDate,"Obtains an instance of LocalDate from a year, month and day."
LocalDate,ofEpochDay(long epochDay),static LocalDate,Obtains an instance of LocalDate from the epoch day count.
LocalDate,"ofYearDay(int year, int dayOfYear)",static LocalDate,Obtains an instance of LocalDate from a year and day-of-year.
LocalDate,parse(CharSequence text),static LocalDate,Obtains an instance of LocalDate from a text string such as 2007-12-03.
LocalDate,"parse(CharSequence text, DateTimeFormatter formatter)",static LocalDate,Obtains an instance of LocalDate from a text string using a specific formatter.
LocalDate,"plus(long amountToAdd, TemporalUnit unit)",LocalDate,Returns a copy of this date with the specified amount added.
LocalDate,plus(TemporalAmount amountToAdd),LocalDate,Returns a copy of this date with the specified amount added.
LocalDate,plusDays(long daysToAdd),LocalDate,Returns a copy of this LocalDate with the specified number of days added.
LocalDate,plusMonths(long monthsToAdd),LocalDate,Returns a copy of this LocalDate with the specified number of months added.
LocalDate,plusWeeks(long weeksToAdd),LocalDate,Returns a copy of this LocalDate with the specified number of weeks added.
LocalDate,plusYears(long yearsToAdd),LocalDate,Returns a copy of this LocalDate with the specified number of years added.
LocalDate,query(TemporalQuery<R> query),<R> R,Queries this date using the specified query.
LocalDate,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
LocalDate,toEpochDay(),long,Converts this date to the Epoch Day.
LocalDate,toString(),String,"Outputs this date as a String, such as 2007-12-03."
LocalDate,until(ChronoLocalDate endDateExclusive),Period,Calculates the period between this date and another date as a Period.
LocalDate,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another date in terms of the specified unit.
LocalDate,with(TemporalAdjuster adjuster),LocalDate,Returns an adjusted copy of this date.
LocalDate,"with(TemporalField field, long newValue)",LocalDate,Returns a copy of this date with the specified field set to a new value.
LocalDate,withDayOfMonth(int dayOfMonth),LocalDate,Returns a copy of this LocalDate with the day-of-month altered.
LocalDate,withDayOfYear(int dayOfYear),LocalDate,Returns a copy of this LocalDate with the day-of-year altered.
LocalDate,withMonth(int month),LocalDate,Returns a copy of this LocalDate with the month-of-year altered.
LocalDate,withYear(int year),LocalDate,Returns a copy of this LocalDate with the year altered.
LocalDateTime,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have the same date and time as this object.
LocalDateTime,atOffset(ZoneOffset offset),OffsetDateTime,Combines this date-time with an offset to create an OffsetDateTime.
LocalDateTime,atZone(ZoneId zone),ZonedDateTime,Combines this date-time with a time-zone to create a ZonedDateTime.
LocalDateTime,compareTo(ChronoLocalDateTime<?> other),int,Compares this date-time to another date-time.
LocalDateTime,equals(Object obj),boolean,Checks if this date-time is equal to another date-time.
LocalDateTime,format(DateTimeFormatter formatter),String,Formats this date-time using the specified formatter.
LocalDateTime,from(TemporalAccessor temporal),static LocalDateTime,Obtains an instance of LocalDateTime from a temporal object.
LocalDateTime,get(TemporalField field),int,Gets the value of the specified field from this date-time as an int.
LocalDateTime,getDayOfMonth(),int,Gets the day-of-month field.
LocalDateTime,getDayOfWeek(),DayOfWeek,"Gets the day-of-week field, which is an enum DayOfWeek."
LocalDateTime,getDayOfYear(),int,Gets the day-of-year field.
LocalDateTime,getHour(),int,Gets the hour-of-day field.
LocalDateTime,getLong(TemporalField field),long,Gets the value of the specified field from this date-time as a long.
LocalDateTime,getMinute(),int,Gets the minute-of-hour field.
LocalDateTime,getMonth(),Month,Gets the month-of-year field using the Month enum.
LocalDateTime,getMonthValue(),int,Gets the month-of-year field from 1 to 12.
LocalDateTime,getNano(),int,Gets the nano-of-second field.
LocalDateTime,getSecond(),int,Gets the second-of-minute field.
LocalDateTime,getYear(),int,Gets the year field.
LocalDateTime,hashCode(),int,A hash code for this date-time.
LocalDateTime,isAfter(ChronoLocalDateTime<?> other),boolean,Checks if this date-time is after the specified date-time.
LocalDateTime,isBefore(ChronoLocalDateTime<?> other),boolean,Checks if this date-time is before the specified date-time.
LocalDateTime,isEqual(ChronoLocalDateTime<?> other),boolean,Checks if this date-time is equal to the specified date-time.
LocalDateTime,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
LocalDateTime,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
LocalDateTime,"minus(long amountToSubtract, TemporalUnit unit)",LocalDateTime,Returns a copy of this date-time with the specified amount subtracted.
LocalDateTime,minus(TemporalAmount amountToSubtract),LocalDateTime,Returns a copy of this date-time with the specified amount subtracted.
LocalDateTime,minusDays(long days),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of days subtracted.
LocalDateTime,minusHours(long hours),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of hours subtracted.
LocalDateTime,minusMinutes(long minutes),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of minutes subtracted.
LocalDateTime,minusMonths(long months),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of months subtracted.
LocalDateTime,minusNanos(long nanos),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of nanoseconds subtracted.
LocalDateTime,minusSeconds(long seconds),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of seconds subtracted.
LocalDateTime,minusWeeks(long weeks),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of weeks subtracted.
LocalDateTime,minusYears(long years),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of years subtracted.
LocalDateTime,now(),static LocalDateTime,Obtains the current date-time from the system clock in the default time-zone.
LocalDateTime,now(Clock clock),static LocalDateTime,Obtains the current date-time from the specified clock.
LocalDateTime,now(ZoneId zone),static LocalDateTime,Obtains the current date-time from the system clock in the specified time-zone.
LocalDateTime,"of(int year, int month, int dayOfMonth, int hour, int minute)",static LocalDateTime,"Obtains an instance of LocalDateTime from year, month, day, hour and minute, setting the second and nanosecond to zero."
LocalDateTime,"of(int year, int month, int dayOfMonth, int hour, int minute, int second)",static LocalDateTime,"Obtains an instance of LocalDateTime from year, month, day, hour, minute and second, setting the nanosecond to zero."
LocalDateTime,"of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond)",static LocalDateTime,"Obtains an instance of LocalDateTime from year, month, day, hour, minute, second and nanosecond."
LocalDateTime,"of(int year, Month month, int dayOfMonth, int hour, int minute)",static LocalDateTime,"Obtains an instance of LocalDateTime from year, month, day, hour and minute, setting the second and nanosecond to zero."
LocalDateTime,"of(int year, Month month, int dayOfMonth, int hour, int minute, int second)",static LocalDateTime,"Obtains an instance of LocalDateTime from year, month, day, hour, minute and second, setting the nanosecond to zero."
LocalDateTime,"of(int year, Month month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond)",static LocalDateTime,"Obtains an instance of LocalDateTime from year, month, day, hour, minute, second and nanosecond."
LocalDateTime,"of(LocalDate date, LocalTime time)",static LocalDateTime,Obtains an instance of LocalDateTime from a date and time.
LocalDateTime,"ofEpochSecond(long epochSecond, int nanoOfSecond, ZoneOffset offset)",static LocalDateTime,Obtains an instance of LocalDateTime using seconds from the epoch of 1970-01-01T00:00:00Z.
LocalDateTime,"ofInstant(Instant instant, ZoneId zone)",static LocalDateTime,Obtains an instance of LocalDateTime from an Instant and zone ID.
LocalDateTime,parse(CharSequence text),static LocalDateTime,Obtains an instance of LocalDateTime from a text string such as 2007-12-03T10:15:30.
LocalDateTime,"parse(CharSequence text, DateTimeFormatter formatter)",static LocalDateTime,Obtains an instance of LocalDateTime from a text string using a specific formatter.
LocalDateTime,"plus(long amountToAdd, TemporalUnit unit)",LocalDateTime,Returns a copy of this date-time with the specified amount added.
LocalDateTime,plus(TemporalAmount amountToAdd),LocalDateTime,Returns a copy of this date-time with the specified amount added.
LocalDateTime,plusDays(long days),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of days added.
LocalDateTime,plusHours(long hours),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of hours added.
LocalDateTime,plusMinutes(long minutes),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of minutes added.
LocalDateTime,plusMonths(long months),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of months added.
LocalDateTime,plusNanos(long nanos),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of nanoseconds added.
LocalDateTime,plusSeconds(long seconds),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of seconds added.
LocalDateTime,plusWeeks(long weeks),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of weeks added.
LocalDateTime,plusYears(long years),LocalDateTime,Returns a copy of this LocalDateTime with the specified number of years added.
LocalDateTime,query(TemporalQuery<R> query),<R> R,Queries this date-time using the specified query.
LocalDateTime,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
LocalDateTime,toLocalDate(),LocalDate,Gets the LocalDate part of this date-time.
LocalDateTime,toLocalTime(),LocalTime,Gets the LocalTime part of this date-time.
LocalDateTime,toString(),String,"Outputs this date-time as a String, such as 2007-12-03T10:15:30."
LocalDateTime,truncatedTo(TemporalUnit unit),LocalDateTime,Returns a copy of this LocalDateTime with the time truncated.
LocalDateTime,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another date-time in terms of the specified unit.
LocalDateTime,with(TemporalAdjuster adjuster),LocalDateTime,Returns an adjusted copy of this date-time.
LocalDateTime,"with(TemporalField field, long newValue)",LocalDateTime,Returns a copy of this date-time with the specified field set to a new value.
LocalDateTime,withDayOfMonth(int dayOfMonth),LocalDateTime,Returns a copy of this LocalDateTime with the day-of-month altered.
LocalDateTime,withDayOfYear(int dayOfYear),LocalDateTime,Returns a copy of this LocalDateTime with the day-of-year altered.
LocalDateTime,withHour(int hour),LocalDateTime,Returns a copy of this LocalDateTime with the hour-of-day altered.
LocalDateTime,withMinute(int minute),LocalDateTime,Returns a copy of this LocalDateTime with the minute-of-hour altered.
LocalDateTime,withMonth(int month),LocalDateTime,Returns a copy of this LocalDateTime with the month-of-year altered.
LocalDateTime,withNano(int nanoOfSecond),LocalDateTime,Returns a copy of this LocalDateTime with the nano-of-second altered.
LocalDateTime,withSecond(int second),LocalDateTime,Returns a copy of this LocalDateTime with the second-of-minute altered.
LocalDateTime,withYear(int year),LocalDateTime,Returns a copy of this LocalDateTime with the year altered.
LocalTime,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have the same time as this object.
LocalTime,atDate(LocalDate date),LocalDateTime,Combines this time with a date to create a LocalDateTime.
LocalTime,atOffset(ZoneOffset offset),OffsetTime,Combines this time with an offset to create an OffsetTime.
LocalTime,compareTo(LocalTime other),int,Compares this time to another time.
LocalTime,equals(Object obj),boolean,Checks if this time is equal to another time.
LocalTime,format(DateTimeFormatter formatter),String,Formats this time using the specified formatter.
LocalTime,from(TemporalAccessor temporal),static LocalTime,Obtains an instance of LocalTime from a temporal object.
LocalTime,get(TemporalField field),int,Gets the value of the specified field from this time as an int.
LocalTime,getHour(),int,Gets the hour-of-day field.
LocalTime,getLong(TemporalField field),long,Gets the value of the specified field from this time as a long.
LocalTime,getMinute(),int,Gets the minute-of-hour field.
LocalTime,getNano(),int,Gets the nano-of-second field.
LocalTime,getSecond(),int,Gets the second-of-minute field.
LocalTime,hashCode(),int,A hash code for this time.
LocalTime,isAfter(LocalTime other),boolean,Checks if this time is after the specified time.
LocalTime,isBefore(LocalTime other),boolean,Checks if this time is before the specified time.
LocalTime,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
LocalTime,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
LocalTime,"minus(long amountToSubtract, TemporalUnit unit)",LocalTime,Returns a copy of this time with the specified amount subtracted.
LocalTime,minus(TemporalAmount amountToSubtract),LocalTime,Returns a copy of this time with the specified amount subtracted.
LocalTime,minusHours(long hoursToSubtract),LocalTime,Returns a copy of this LocalTime with the specified number of hours subtracted.
LocalTime,minusMinutes(long minutesToSubtract),LocalTime,Returns a copy of this LocalTime with the specified number of minutes subtracted.
LocalTime,minusNanos(long nanosToSubtract),LocalTime,Returns a copy of this LocalTime with the specified number of nanoseconds subtracted.
LocalTime,minusSeconds(long secondsToSubtract),LocalTime,Returns a copy of this LocalTime with the specified number of seconds subtracted.
LocalTime,now(),static LocalTime,Obtains the current time from the system clock in the default time-zone.
LocalTime,now(Clock clock),static LocalTime,Obtains the current time from the specified clock.
LocalTime,now(ZoneId zone),static LocalTime,Obtains the current time from the system clock in the specified time-zone.
LocalTime,"of(int hour, int minute)",static LocalTime,Obtains an instance of LocalTime from an hour and minute.
LocalTime,"of(int hour, int minute, int second)",static LocalTime,"Obtains an instance of LocalTime from an hour, minute and second."
LocalTime,"of(int hour, int minute, int second, int nanoOfSecond)",static LocalTime,"Obtains an instance of LocalTime from an hour, minute, second and nanosecond."
LocalTime,ofNanoOfDay(long nanoOfDay),static LocalTime,Obtains an instance of LocalTime from a nanos-of-day value.
LocalTime,ofSecondOfDay(long secondOfDay),static LocalTime,Obtains an instance of LocalTime from a second-of-day value.
LocalTime,parse(CharSequence text),static LocalTime,Obtains an instance of LocalTime from a text string such as 10:15.
LocalTime,"parse(CharSequence text, DateTimeFormatter formatter)",static LocalTime,Obtains an instance of LocalTime from a text string using a specific formatter.
LocalTime,"plus(long amountToAdd, TemporalUnit unit)",LocalTime,Returns a copy of this time with the specified amount added.
LocalTime,plus(TemporalAmount amountToAdd),LocalTime,Returns a copy of this time with the specified amount added.
LocalTime,plusHours(long hoursToAdd),LocalTime,Returns a copy of this LocalTime with the specified number of hours added.
LocalTime,plusMinutes(long minutesToAdd),LocalTime,Returns a copy of this LocalTime with the specified number of minutes added.
LocalTime,plusNanos(long nanosToAdd),LocalTime,Returns a copy of this LocalTime with the specified number of nanoseconds added.
LocalTime,plusSeconds(long secondstoAdd),LocalTime,Returns a copy of this LocalTime with the specified number of seconds added.
LocalTime,query(TemporalQuery<R> query),<R> R,Queries this time using the specified query.
LocalTime,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
LocalTime,toNanoOfDay(),long,"Extracts the time as nanos of day, from 0 to 24 * 60 * 60 * 1,000,000,000 - 1."
LocalTime,toSecondOfDay(),int,"Extracts the time as seconds of day, from 0 to 24 * 60 * 60 - 1."
LocalTime,toString(),String,"Outputs this time as a String, such as 10:15."
LocalTime,truncatedTo(TemporalUnit unit),LocalTime,Returns a copy of this LocalTime with the time truncated.
LocalTime,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another time in terms of the specified unit.
LocalTime,with(TemporalAdjuster adjuster),LocalTime,Returns an adjusted copy of this time.
LocalTime,"with(TemporalField field, long newValue)",LocalTime,Returns a copy of this time with the specified field set to a new value.
LocalTime,withHour(int hour),LocalTime,Returns a copy of this LocalTime with the hour-of-day altered.
LocalTime,withMinute(int minute),LocalTime,Returns a copy of this LocalTime with the minute-of-hour altered.
LocalTime,withNano(int nanoOfSecond),LocalTime,Returns a copy of this LocalTime with the nano-of-second altered.
LocalTime,withSecond(int second),LocalTime,Returns a copy of this LocalTime with the second-of-minute altered.
MonthDay,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have this month-day.
MonthDay,atYear(int year),LocalDate,Combines this month-day with a year to create a LocalDate.
MonthDay,compareTo(MonthDay other),int,Compares this month-day to another month-day.
MonthDay,equals(Object obj),boolean,Checks if this month-day is equal to another month-day.
MonthDay,format(DateTimeFormatter formatter),String,Formats this month-day using the specified formatter.
MonthDay,from(TemporalAccessor temporal),static MonthDay,Obtains an instance of MonthDay from a temporal object.
MonthDay,get(TemporalField field),int,Gets the value of the specified field from this month-day as an int.
MonthDay,getDayOfMonth(),int,Gets the day-of-month field.
MonthDay,getLong(TemporalField field),long,Gets the value of the specified field from this month-day as a long.
MonthDay,getMonth(),Month,Gets the month-of-year field using the Month enum.
MonthDay,getMonthValue(),int,Gets the month-of-year field from 1 to 12.
MonthDay,hashCode(),int,A hash code for this month-day.
MonthDay,isAfter(MonthDay other),boolean,Checks if this month-day is after the specified month-day.
MonthDay,isBefore(MonthDay other),boolean,Checks if this month-day is before the specified month-day.
MonthDay,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
MonthDay,isValidYear(int year),boolean,Checks if the year is valid for this month-day.
MonthDay,now(),static MonthDay,Obtains the current month-day from the system clock in the default time-zone.
MonthDay,now(Clock clock),static MonthDay,Obtains the current month-day from the specified clock.
MonthDay,now(ZoneId zone),static MonthDay,Obtains the current month-day from the system clock in the specified time-zone.
MonthDay,"of(int month, int dayOfMonth)",static MonthDay,Obtains an instance of MonthDay.
MonthDay,"of(Month month, int dayOfMonth)",static MonthDay,Obtains an instance of MonthDay.
MonthDay,parse(CharSequence text),static MonthDay,Obtains an instance of MonthDay from a text string such as --12-03.
MonthDay,"parse(CharSequence text, DateTimeFormatter formatter)",static MonthDay,Obtains an instance of MonthDay from a text string using a specific formatter.
MonthDay,query(TemporalQuery<R> query),<R> R,Queries this month-day using the specified query.
MonthDay,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
MonthDay,toString(),String,"Outputs this month-day as a String, such as --12-03."
MonthDay,with(Month month),MonthDay,Returns a copy of this MonthDay with the month-of-year altered.
MonthDay,withDayOfMonth(int dayOfMonth),MonthDay,Returns a copy of this MonthDay with the day-of-month altered.
MonthDay,withMonth(int month),MonthDay,Returns a copy of this MonthDay with the month-of-year altered.
OffsetDateTime,adjustInto(Temporal temporal),Temporal,"Adjusts the specified temporal object to have the same offset, date and time as this object."
OffsetDateTime,atZoneSameInstant(ZoneId zone),ZonedDateTime,Combines this date-time with a time-zone to create a ZonedDateTime ensuring that the result has the same instant.
OffsetDateTime,atZoneSimilarLocal(ZoneId zone),ZonedDateTime,Combines this date-time with a time-zone to create a ZonedDateTime trying to keep the same local date and time.
OffsetDateTime,compareTo(OffsetDateTime other),int,Compares this date-time to another date-time.
OffsetDateTime,equals(Object obj),boolean,Checks if this date-time is equal to another date-time.
OffsetDateTime,format(DateTimeFormatter formatter),String,Formats this date-time using the specified formatter.
OffsetDateTime,from(TemporalAccessor temporal),static OffsetDateTime,Obtains an instance of OffsetDateTime from a temporal object.
OffsetDateTime,get(TemporalField field),int,Gets the value of the specified field from this date-time as an int.
OffsetDateTime,getDayOfMonth(),int,Gets the day-of-month field.
OffsetDateTime,getDayOfWeek(),DayOfWeek,"Gets the day-of-week field, which is an enum DayOfWeek."
OffsetDateTime,getDayOfYear(),int,Gets the day-of-year field.
OffsetDateTime,getHour(),int,Gets the hour-of-day field.
OffsetDateTime,getLong(TemporalField field),long,Gets the value of the specified field from this date-time as a long.
OffsetDateTime,getMinute(),int,Gets the minute-of-hour field.
OffsetDateTime,getMonth(),Month,Gets the month-of-year field using the Month enum.
OffsetDateTime,getMonthValue(),int,Gets the month-of-year field from 1 to 12.
OffsetDateTime,getNano(),int,Gets the nano-of-second field.
OffsetDateTime,getOffset(),ZoneOffset,"Gets the zone offset, such as '+01:00'."
OffsetDateTime,getSecond(),int,Gets the second-of-minute field.
OffsetDateTime,getYear(),int,Gets the year field.
OffsetDateTime,hashCode(),int,A hash code for this date-time.
OffsetDateTime,isAfter(OffsetDateTime other),boolean,Checks if the instant of this date-time is after that of the specified date-time.
OffsetDateTime,isBefore(OffsetDateTime other),boolean,Checks if the instant of this date-time is before that of the specified date-time.
OffsetDateTime,isEqual(OffsetDateTime other),boolean,Checks if the instant of this date-time is equal to that of the specified date-time.
OffsetDateTime,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
OffsetDateTime,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
OffsetDateTime,"minus(long amountToSubtract, TemporalUnit unit)",OffsetDateTime,Returns a copy of this date-time with the specified amount subtracted.
OffsetDateTime,minus(TemporalAmount amountToSubtract),OffsetDateTime,Returns a copy of this date-time with the specified amount subtracted.
OffsetDateTime,minusDays(long days),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of days subtracted.
OffsetDateTime,minusHours(long hours),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of hours subtracted.
OffsetDateTime,minusMinutes(long minutes),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of minutes subtracted.
OffsetDateTime,minusMonths(long months),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of months subtracted.
OffsetDateTime,minusNanos(long nanos),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of nanoseconds subtracted.
OffsetDateTime,minusSeconds(long seconds),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of seconds subtracted.
OffsetDateTime,minusWeeks(long weeks),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of weeks subtracted.
OffsetDateTime,minusYears(long years),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of years subtracted.
OffsetDateTime,now(),static OffsetDateTime,Obtains the current date-time from the system clock in the default time-zone.
OffsetDateTime,now(Clock clock),static OffsetDateTime,Obtains the current date-time from the specified clock.
OffsetDateTime,now(ZoneId zone),static OffsetDateTime,Obtains the current date-time from the system clock in the specified time-zone.
OffsetDateTime,"of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond, ZoneOffset offset)",static OffsetDateTime,"Obtains an instance of OffsetDateTime from a year, month, day, hour, minute, second, nanosecond and offset."
OffsetDateTime,"of(LocalDate date, LocalTime time, ZoneOffset offset)",static OffsetDateTime,"Obtains an instance of OffsetDateTime from a date, time and offset."
OffsetDateTime,"of(LocalDateTime dateTime, ZoneOffset offset)",static OffsetDateTime,Obtains an instance of OffsetDateTime from a date-time and offset.
OffsetDateTime,"ofInstant(Instant instant, ZoneId zone)",static OffsetDateTime,Obtains an instance of OffsetDateTime from an Instant and zone ID.
OffsetDateTime,parse(CharSequence text),static OffsetDateTime,Obtains an instance of OffsetDateTime from a text string such as 2007-12-03T10:15:30+01:00.
OffsetDateTime,"parse(CharSequence text, DateTimeFormatter formatter)",static OffsetDateTime,Obtains an instance of OffsetDateTime from a text string using a specific formatter.
OffsetDateTime,"plus(long amountToAdd, TemporalUnit unit)",OffsetDateTime,Returns a copy of this date-time with the specified amount added.
OffsetDateTime,plus(TemporalAmount amountToAdd),OffsetDateTime,Returns a copy of this date-time with the specified amount added.
OffsetDateTime,plusDays(long days),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of days added.
OffsetDateTime,plusHours(long hours),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of hours added.
OffsetDateTime,plusMinutes(long minutes),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of minutes added.
OffsetDateTime,plusMonths(long months),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of months added.
OffsetDateTime,plusNanos(long nanos),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of nanoseconds added.
OffsetDateTime,plusSeconds(long seconds),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of seconds added.
OffsetDateTime,plusWeeks(long weeks),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of weeks added.
OffsetDateTime,plusYears(long years),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified number of years added.
OffsetDateTime,query(TemporalQuery<R> query),<R> R,Queries this date-time using the specified query.
OffsetDateTime,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
OffsetDateTime,timeLineOrder(),static Comparator<OffsetDateTime>,Gets a comparator that compares two OffsetDateTime instances based solely on the instant.
OffsetDateTime,toEpochSecond(),long,Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z.
OffsetDateTime,toInstant(),Instant,Converts this date-time to an Instant.
OffsetDateTime,toLocalDate(),LocalDate,Gets the LocalDate part of this date-time.
OffsetDateTime,toLocalDateTime(),LocalDateTime,Gets the LocalDateTime part of this date-time.
OffsetDateTime,toLocalTime(),LocalTime,Gets the LocalTime part of this date-time.
OffsetDateTime,toOffsetTime(),OffsetTime,Converts this date-time to an OffsetTime.
OffsetDateTime,toString(),String,"Outputs this date-time as a String, such as 2007-12-03T10:15:30+01:00."
OffsetDateTime,toZonedDateTime(),ZonedDateTime,Converts this date-time to a ZonedDateTime using the offset as the zone ID.
OffsetDateTime,truncatedTo(TemporalUnit unit),OffsetDateTime,Returns a copy of this OffsetDateTime with the time truncated.
OffsetDateTime,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another date-time in terms of the specified unit.
OffsetDateTime,with(TemporalAdjuster adjuster),OffsetDateTime,Returns an adjusted copy of this date-time.
OffsetDateTime,"with(TemporalField field, long newValue)",OffsetDateTime,Returns a copy of this date-time with the specified field set to a new value.
OffsetDateTime,withDayOfMonth(int dayOfMonth),OffsetDateTime,Returns a copy of this OffsetDateTime with the day-of-month altered.
OffsetDateTime,withDayOfYear(int dayOfYear),OffsetDateTime,Returns a copy of this OffsetDateTime with the day-of-year altered.
OffsetDateTime,withHour(int hour),OffsetDateTime,Returns a copy of this OffsetDateTime with the hour-of-day altered.
OffsetDateTime,withMinute(int minute),OffsetDateTime,Returns a copy of this OffsetDateTime with the minute-of-hour altered.
OffsetDateTime,withMonth(int month),OffsetDateTime,Returns a copy of this OffsetDateTime with the month-of-year altered.
OffsetDateTime,withNano(int nanoOfSecond),OffsetDateTime,Returns a copy of this OffsetDateTime with the nano-of-second altered.
OffsetDateTime,withOffsetSameInstant(ZoneOffset offset),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified offset ensuring that the result is at the same instant.
OffsetDateTime,withOffsetSameLocal(ZoneOffset offset),OffsetDateTime,Returns a copy of this OffsetDateTime with the specified offset ensuring that the result has the same local date-time.
OffsetDateTime,withSecond(int second),OffsetDateTime,Returns a copy of this OffsetDateTime with the second-of-minute altered.
OffsetDateTime,withYear(int year),OffsetDateTime,Returns a copy of this OffsetDateTime with the year altered.
OffsetTime,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have the same offset and time as this object.
OffsetTime,atDate(LocalDate date),OffsetDateTime,Combines this time with a date to create an OffsetDateTime.
OffsetTime,compareTo(OffsetTime other),int,Compares this OffsetTime to another time.
OffsetTime,equals(Object obj),boolean,Checks if this time is equal to another time.
OffsetTime,format(DateTimeFormatter formatter),String,Formats this time using the specified formatter.
OffsetTime,from(TemporalAccessor temporal),static OffsetTime,Obtains an instance of OffsetTime from a temporal object.
OffsetTime,get(TemporalField field),int,Gets the value of the specified field from this time as an int.
OffsetTime,getHour(),int,Gets the hour-of-day field.
OffsetTime,getLong(TemporalField field),long,Gets the value of the specified field from this time as a long.
OffsetTime,getMinute(),int,Gets the minute-of-hour field.
OffsetTime,getNano(),int,Gets the nano-of-second field.
OffsetTime,getOffset(),ZoneOffset,"Gets the zone offset, such as '+01:00'."
OffsetTime,getSecond(),int,Gets the second-of-minute field.
OffsetTime,hashCode(),int,A hash code for this time.
OffsetTime,isAfter(OffsetTime other),boolean,Checks if the instant of this OffsetTime is after that of the specified time applying both times to a common date.
OffsetTime,isBefore(OffsetTime other),boolean,Checks if the instant of this OffsetTime is before that of the specified time applying both times to a common date.
OffsetTime,isEqual(OffsetTime other),boolean,Checks if the instant of this OffsetTime is equal to that of the specified time applying both times to a common date.
OffsetTime,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
OffsetTime,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
OffsetTime,"minus(long amountToSubtract, TemporalUnit unit)",OffsetTime,Returns a copy of this time with the specified amount subtracted.
OffsetTime,minus(TemporalAmount amountToSubtract),OffsetTime,Returns a copy of this time with the specified amount subtracted.
OffsetTime,minusHours(long hours),OffsetTime,Returns a copy of this OffsetTime with the specified number of hours subtracted.
OffsetTime,minusMinutes(long minutes),OffsetTime,Returns a copy of this OffsetTime with the specified number of minutes subtracted.
OffsetTime,minusNanos(long nanos),OffsetTime,Returns a copy of this OffsetTime with the specified number of nanoseconds subtracted.
OffsetTime,minusSeconds(long seconds),OffsetTime,Returns a copy of this OffsetTime with the specified number of seconds subtracted.
OffsetTime,now(),static OffsetTime,Obtains the current time from the system clock in the default time-zone.
OffsetTime,now(Clock clock),static OffsetTime,Obtains the current time from the specified clock.
OffsetTime,now(ZoneId zone),static OffsetTime,Obtains the current time from the system clock in the specified time-zone.
OffsetTime,"of(int hour, int minute, int second, int nanoOfSecond, ZoneOffset offset)",static OffsetTime,"Obtains an instance of OffsetTime from an hour, minute, second and nanosecond."
OffsetTime,"of(LocalTime time, ZoneOffset offset)",static OffsetTime,Obtains an instance of OffsetTime from a local time and an offset.
OffsetTime,"ofInstant(Instant instant, ZoneId zone)",static OffsetTime,Obtains an instance of OffsetTime from an Instant and zone ID.
OffsetTime,parse(CharSequence text),static OffsetTime,Obtains an instance of OffsetTime from a text string such as 10:15:30+01:00.
OffsetTime,"parse(CharSequence text, DateTimeFormatter formatter)",static OffsetTime,Obtains an instance of OffsetTime from a text string using a specific formatter.
OffsetTime,"plus(long amountToAdd, TemporalUnit unit)",OffsetTime,Returns a copy of this time with the specified amount added.
OffsetTime,plus(TemporalAmount amountToAdd),OffsetTime,Returns a copy of this time with the specified amount added.
OffsetTime,plusHours(long hours),OffsetTime,Returns a copy of this OffsetTime with the specified number of hours added.
OffsetTime,plusMinutes(long minutes),OffsetTime,Returns a copy of this OffsetTime with the specified number of minutes added.
OffsetTime,plusNanos(long nanos),OffsetTime,Returns a copy of this OffsetTime with the specified number of nanoseconds added.
OffsetTime,plusSeconds(long seconds),OffsetTime,Returns a copy of this OffsetTime with the specified number of seconds added.
OffsetTime,query(TemporalQuery<R> query),<R> R,Queries this time using the specified query.
OffsetTime,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
OffsetTime,toLocalTime(),LocalTime,Gets the LocalTime part of this date-time.
OffsetTime,toString(),String,"Outputs this time as a String, such as 10:15:30+01:00."
OffsetTime,truncatedTo(TemporalUnit unit),OffsetTime,Returns a copy of this OffsetTime with the time truncated.
OffsetTime,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another time in terms of the specified unit.
OffsetTime,with(TemporalAdjuster adjuster),OffsetTime,Returns an adjusted copy of this time.
OffsetTime,"with(TemporalField field, long newValue)",OffsetTime,Returns a copy of this time with the specified field set to a new value.
OffsetTime,withHour(int hour),OffsetTime,Returns a copy of this OffsetTime with the hour-of-day altered.
OffsetTime,withMinute(int minute),OffsetTime,Returns a copy of this OffsetTime with the minute-of-hour altered.
OffsetTime,withNano(int nanoOfSecond),OffsetTime,Returns a copy of this OffsetTime with the nano-of-second altered.
OffsetTime,withOffsetSameInstant(ZoneOffset offset),OffsetTime,Returns a copy of this OffsetTime with the specified offset ensuring that the result is at the same instant on an implied day.
OffsetTime,withOffsetSameLocal(ZoneOffset offset),OffsetTime,Returns a copy of this OffsetTime with the specified offset ensuring that the result has the same local time.
OffsetTime,withSecond(int second),OffsetTime,Returns a copy of this OffsetTime with the second-of-minute altered.
Period,addTo(Temporal temporal),Temporal,Adds this period to the specified temporal object.
Period,"between(LocalDate startDateInclusive, LocalDate endDateExclusive)",static Period,"Obtains a Period consisting of the number of years, months, and days between two dates."
Period,equals(Object obj),boolean,Checks if this period is equal to another period.
Period,from(TemporalAmount amount),static Period,Obtains an instance of Period from a temporal amount.
Period,get(TemporalUnit unit),long,Gets the value of the requested unit.
Period,getChronology(),IsoChronology,"Gets the chronology of this period, which is the ISO calendar system."
Period,getDays(),int,Gets the amount of days of this period.
Period,getMonths(),int,Gets the amount of months of this period.
Period,getUnits(),List<TemporalUnit>,Gets the set of units supported by this period.
Period,getYears(),int,Gets the amount of years of this period.
Period,hashCode(),int,A hash code for this period.
Period,isNegative(),boolean,Checks if any of the three units of this period are negative.
Period,isZero(),boolean,Checks if all three units of this period are zero.
Period,minus(TemporalAmount amountToSubtract),Period,Returns a copy of this period with the specified period subtracted.
Period,minusDays(long daysToSubtract),Period,Returns a copy of this period with the specified days subtracted.
Period,minusMonths(long monthsToSubtract),Period,Returns a copy of this period with the specified months subtracted.
Period,minusYears(long yearsToSubtract),Period,Returns a copy of this period with the specified years subtracted.
Period,multipliedBy(int scalar),Period,Returns a new instance with each element in this period multiplied by the specified scalar.
Period,negated(),Period,Returns a new instance with each amount in this period negated.
Period,normalized(),Period,Returns a copy of this period with the years and months normalized.
Period,"of(int years, int months, int days)",static Period,"Obtains a Period representing a number of years, months and days."
Period,ofDays(int days),static Period,Obtains a Period representing a number of days.
Period,ofMonths(int months),static Period,Obtains a Period representing a number of months.
Period,ofWeeks(int weeks),static Period,Obtains a Period representing a number of weeks.
Period,ofYears(int years),static Period,Obtains a Period representing a number of years.
Period,parse(CharSequence text),static Period,Obtains a Period from a text string such as PnYnMnD.
Period,plus(TemporalAmount amountToAdd),Period,Returns a copy of this period with the specified period added.
Period,plusDays(long daysToAdd),Period,Returns a copy of this period with the specified days added.
Period,plusMonths(long monthsToAdd),Period,Returns a copy of this period with the specified months added.
Period,plusYears(long yearsToAdd),Period,Returns a copy of this period with the specified years added.
Period,subtractFrom(Temporal temporal),Temporal,Subtracts this period from the specified temporal object.
Period,toString(),String,"Outputs this period as a String, such as P6Y3M1D."
Period,toTotalMonths(),long,Gets the total number of months in this period.
Period,withDays(int days),Period,Returns a copy of this period with the specified amount of days.
Period,withMonths(int months),Period,Returns a copy of this period with the specified amount of months.
Period,withYears(int years),Period,Returns a copy of this period with the specified amount of years.
Year,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have this year.
Year,atDay(int dayOfYear),LocalDate,Combines this year with a day-of-year to create a LocalDate.
Year,atMonth(int month),YearMonth,Combines this year with a month to create a YearMonth.
Year,atMonth(Month month),YearMonth,Combines this year with a month to create a YearMonth.
Year,atMonthDay(MonthDay monthDay),LocalDate,Combines this year with a month-day to create a LocalDate.
Year,compareTo(Year other),int,Compares this year to another year.
Year,equals(Object obj),boolean,Checks if this year is equal to another year.
Year,format(DateTimeFormatter formatter),String,Formats this year using the specified formatter.
Year,from(TemporalAccessor temporal),static Year,Obtains an instance of Year from a temporal object.
Year,get(TemporalField field),int,Gets the value of the specified field from this year as an int.
Year,getLong(TemporalField field),long,Gets the value of the specified field from this year as a long.
Year,getValue(),int,Gets the year value.
Year,hashCode(),int,A hash code for this year.
Year,isAfter(Year other),boolean,Checks if this year is after the specified year.
Year,isBefore(Year other),boolean,Checks if this year is before the specified year.
Year,isLeap(),boolean,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
Year,isLeap(long year),static boolean,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
Year,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
Year,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
Year,isValidMonthDay(MonthDay monthDay),boolean,Checks if the month-day is valid for this year.
Year,length(),int,Gets the length of this year in days.
Year,"minus(long amountToSubtract, TemporalUnit unit)",Year,Returns a copy of this year with the specified amount subtracted.
Year,minus(TemporalAmount amountToSubtract),Year,Returns a copy of this year with the specified amount subtracted.
Year,minusYears(long yearsToSubtract),Year,Returns a copy of this Year with the specified number of years subtracted.
Year,now(),static Year,Obtains the current year from the system clock in the default time-zone.
Year,now(Clock clock),static Year,Obtains the current year from the specified clock.
Year,now(ZoneId zone),static Year,Obtains the current year from the system clock in the specified time-zone.
Year,of(int isoYear),static Year,Obtains an instance of Year.
Year,parse(CharSequence text),static Year,Obtains an instance of Year from a text string such as 2007.
Year,"parse(CharSequence text, DateTimeFormatter formatter)",static Year,Obtains an instance of Year from a text string using a specific formatter.
Year,"plus(long amountToAdd, TemporalUnit unit)",Year,Returns a copy of this year with the specified amount added.
Year,plus(TemporalAmount amountToAdd),Year,Returns a copy of this year with the specified amount added.
Year,plusYears(long yearsToAdd),Year,Returns a copy of this Year with the specified number of years added.
Year,query(TemporalQuery<R> query),<R> R,Queries this year using the specified query.
Year,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
Year,toString(),String,Outputs this year as a String.
Year,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another year in terms of the specified unit.
Year,with(TemporalAdjuster adjuster),Year,Returns an adjusted copy of this year.
Year,"with(TemporalField field, long newValue)",Year,Returns a copy of this year with the specified field set to a new value.
YearMonth,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have this year-month.
YearMonth,atDay(int dayOfMonth),LocalDate,Combines this year-month with a day-of-month to create a LocalDate.
YearMonth,atEndOfMonth(),LocalDate,Returns a LocalDate at the end of the month.
YearMonth,compareTo(YearMonth other),int,Compares this year-month to another year-month.
YearMonth,equals(Object obj),boolean,Checks if this year-month is equal to another year-month.
YearMonth,format(DateTimeFormatter formatter),String,Formats this year-month using the specified formatter.
YearMonth,from(TemporalAccessor temporal),static YearMonth,Obtains an instance of YearMonth from a temporal object.
YearMonth,get(TemporalField field),int,Gets the value of the specified field from this year-month as an int.
YearMonth,getLong(TemporalField field),long,Gets the value of the specified field from this year-month as a long.
YearMonth,getMonth(),Month,Gets the month-of-year field using the Month enum.
YearMonth,getMonthValue(),int,Gets the month-of-year field from 1 to 12.
YearMonth,getYear(),int,Gets the year field.
YearMonth,hashCode(),int,A hash code for this year-month.
YearMonth,isAfter(YearMonth other),boolean,Checks if this year-month is after the specified year-month.
YearMonth,isBefore(YearMonth other),boolean,Checks if this year-month is before the specified year-month.
YearMonth,isLeapYear(),boolean,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
YearMonth,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
YearMonth,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
YearMonth,isValidDay(int dayOfMonth),boolean,Checks if the day-of-month is valid for this year-month.
YearMonth,lengthOfMonth(),int,"Returns the length of the month, taking account of the year."
YearMonth,lengthOfYear(),int,Returns the length of the year.
YearMonth,"minus(long amountToSubtract, TemporalUnit unit)",YearMonth,Returns a copy of this year-month with the specified amount subtracted.
YearMonth,minus(TemporalAmount amountToSubtract),YearMonth,Returns a copy of this year-month with the specified amount subtracted.
YearMonth,minusMonths(long monthsToSubtract),YearMonth,Returns a copy of this YearMonth with the specified number of months subtracted.
YearMonth,minusYears(long yearsToSubtract),YearMonth,Returns a copy of this YearMonth with the specified number of years subtracted.
YearMonth,now(),static YearMonth,Obtains the current year-month from the system clock in the default time-zone.
YearMonth,now(Clock clock),static YearMonth,Obtains the current year-month from the specified clock.
YearMonth,now(ZoneId zone),static YearMonth,Obtains the current year-month from the system clock in the specified time-zone.
YearMonth,"of(int year, int month)",static YearMonth,Obtains an instance of YearMonth from a year and month.
YearMonth,"of(int year, Month month)",static YearMonth,Obtains an instance of YearMonth from a year and month.
YearMonth,parse(CharSequence text),static YearMonth,Obtains an instance of YearMonth from a text string such as 2007-12.
YearMonth,"parse(CharSequence text, DateTimeFormatter formatter)",static YearMonth,Obtains an instance of YearMonth from a text string using a specific formatter.
YearMonth,"plus(long amountToAdd, TemporalUnit unit)",YearMonth,Returns a copy of this year-month with the specified amount added.
YearMonth,plus(TemporalAmount amountToAdd),YearMonth,Returns a copy of this year-month with the specified amount added.
YearMonth,plusMonths(long monthsToAdd),YearMonth,Returns a copy of this YearMonth with the specified number of months added.
YearMonth,plusYears(long yearsToAdd),YearMonth,Returns a copy of this YearMonth with the specified number of years added.
YearMonth,query(TemporalQuery<R> query),<R> R,Queries this year-month using the specified query.
YearMonth,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
YearMonth,toString(),String,"Outputs this year-month as a String, such as 2007-12."
YearMonth,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another year-month in terms of the specified unit.
YearMonth,with(TemporalAdjuster adjuster),YearMonth,Returns an adjusted copy of this year-month.
YearMonth,"with(TemporalField field, long newValue)",YearMonth,Returns a copy of this year-month with the specified field set to a new value.
YearMonth,withMonth(int month),YearMonth,Returns a copy of this YearMonth with the month-of-year altered.
YearMonth,withYear(int year),YearMonth,Returns a copy of this YearMonth with the year altered.
ZonedDateTime,equals(Object obj),boolean,Checks if this date-time is equal to another date-time.
ZonedDateTime,format(DateTimeFormatter formatter),String,Formats this date-time using the specified formatter.
ZonedDateTime,from(TemporalAccessor temporal),static ZonedDateTime,Obtains an instance of ZonedDateTime from a temporal object.
ZonedDateTime,get(TemporalField field),int,Gets the value of the specified field from this date-time as an int.
ZonedDateTime,getDayOfMonth(),int,Gets the day-of-month field.
ZonedDateTime,getDayOfWeek(),DayOfWeek,"Gets the day-of-week field, which is an enum DayOfWeek."
ZonedDateTime,getDayOfYear(),int,Gets the day-of-year field.
ZonedDateTime,getHour(),int,Gets the hour-of-day field.
ZonedDateTime,getLong(TemporalField field),long,Gets the value of the specified field from this date-time as a long.
ZonedDateTime,getMinute(),int,Gets the minute-of-hour field.
ZonedDateTime,getMonth(),Month,Gets the month-of-year field using the Month enum.
ZonedDateTime,getMonthValue(),int,Gets the month-of-year field from 1 to 12.
ZonedDateTime,getNano(),int,Gets the nano-of-second field.
ZonedDateTime,getOffset(),ZoneOffset,"Gets the zone offset, such as '+01:00'."
ZonedDateTime,getSecond(),int,Gets the second-of-minute field.
ZonedDateTime,getYear(),int,Gets the year field.
ZonedDateTime,getZone(),ZoneId,"Gets the time-zone, such as 'Europe/Paris'."
ZonedDateTime,hashCode(),int,A hash code for this date-time.
ZonedDateTime,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
ZonedDateTime,isSupported(TemporalUnit unit),boolean,Checks if the specified unit is supported.
ZonedDateTime,"minus(long amountToSubtract, TemporalUnit unit)",ZonedDateTime,Returns a copy of this date-time with the specified amount subtracted.
ZonedDateTime,minus(TemporalAmount amountToSubtract),ZonedDateTime,Returns a copy of this date-time with the specified amount subtracted.
ZonedDateTime,minusDays(long days),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of days subtracted.
ZonedDateTime,minusHours(long hours),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of hours subtracted.
ZonedDateTime,minusMinutes(long minutes),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of minutes subtracted.
ZonedDateTime,minusMonths(long months),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of months subtracted.
ZonedDateTime,minusNanos(long nanos),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of nanoseconds subtracted.
ZonedDateTime,minusSeconds(long seconds),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of seconds subtracted.
ZonedDateTime,minusWeeks(long weeks),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of weeks subtracted.
ZonedDateTime,minusYears(long years),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of years subtracted.
ZonedDateTime,now(),static ZonedDateTime,Obtains the current date-time from the system clock in the default time-zone.
ZonedDateTime,now(Clock clock),static ZonedDateTime,Obtains the current date-time from the specified clock.
ZonedDateTime,now(ZoneId zone),static ZonedDateTime,Obtains the current date-time from the system clock in the specified time-zone.
ZonedDateTime,"of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond, ZoneId zone)",static ZonedDateTime,"Obtains an instance of ZonedDateTime from a year, month, day, hour, minute, second, nanosecond and time-zone."
ZonedDateTime,"of(LocalDate date, LocalTime time, ZoneId zone)",static ZonedDateTime,Obtains an instance of ZonedDateTime from a local date and time.
ZonedDateTime,"of(LocalDateTime localDateTime, ZoneId zone)",static ZonedDateTime,Obtains an instance of ZonedDateTime from a local date-time.
ZonedDateTime,"ofInstant(Instant instant, ZoneId zone)",static ZonedDateTime,Obtains an instance of ZonedDateTime from an Instant.
ZonedDateTime,"ofInstant(LocalDateTime localDateTime, ZoneOffset offset, ZoneId zone)",static ZonedDateTime,Obtains an instance of ZonedDateTime from the instant formed by combining the local date-time and offset.
ZonedDateTime,"ofLocal(LocalDateTime localDateTime, ZoneId zone, ZoneOffset preferredOffset)",static ZonedDateTime,Obtains an instance of ZonedDateTime from a local date-time using the preferred offset if possible.
ZonedDateTime,"ofStrict(LocalDateTime localDateTime, ZoneOffset offset, ZoneId zone)",static ZonedDateTime,"Obtains an instance of ZonedDateTime strictly validating the combination of local date-time, offset and zone ID."
ZonedDateTime,parse(CharSequence text),static ZonedDateTime,Obtains an instance of ZonedDateTime from a text string such as 2007-12-03T10:15:30+01:00[Europe/Paris].
ZonedDateTime,"parse(CharSequence text, DateTimeFormatter formatter)",static ZonedDateTime,Obtains an instance of ZonedDateTime from a text string using a specific formatter.
ZonedDateTime,"plus(long amountToAdd, TemporalUnit unit)",ZonedDateTime,Returns a copy of this date-time with the specified amount added.
ZonedDateTime,plus(TemporalAmount amountToAdd),ZonedDateTime,Returns a copy of this date-time with the specified amount added.
ZonedDateTime,plusDays(long days),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of days added.
ZonedDateTime,plusHours(long hours),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of hours added.
ZonedDateTime,plusMinutes(long minutes),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of minutes added.
ZonedDateTime,plusMonths(long months),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of months added.
ZonedDateTime,plusNanos(long nanos),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of nanoseconds added.
ZonedDateTime,plusSeconds(long seconds),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of seconds added.
ZonedDateTime,plusWeeks(long weeks),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of weeks added.
ZonedDateTime,plusYears(long years),ZonedDateTime,Returns a copy of this ZonedDateTime with the specified number of years added.
ZonedDateTime,query(TemporalQuery<R> query),<R> R,Queries this date-time using the specified query.
ZonedDateTime,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
ZonedDateTime,toLocalDate(),LocalDate,Gets the LocalDate part of this date-time.
ZonedDateTime,toLocalDateTime(),LocalDateTime,Gets the LocalDateTime part of this date-time.
ZonedDateTime,toLocalTime(),LocalTime,Gets the LocalTime part of this date-time.
ZonedDateTime,toOffsetDateTime(),OffsetDateTime,Converts this date-time to an OffsetDateTime.
ZonedDateTime,toString(),String,"Outputs this date-time as a String, such as 2007-12-03T10:15:30+01:00[Europe/Paris]."
ZonedDateTime,truncatedTo(TemporalUnit unit),ZonedDateTime,Returns a copy of this ZonedDateTime with the time truncated.
ZonedDateTime,"until(Temporal endExclusive, TemporalUnit unit)",long,Calculates the amount of time until another date-time in terms of the specified unit.
ZonedDateTime,with(TemporalAdjuster adjuster),ZonedDateTime,Returns an adjusted copy of this date-time.
ZonedDateTime,"with(TemporalField field, long newValue)",ZonedDateTime,Returns a copy of this date-time with the specified field set to a new value.
ZonedDateTime,withDayOfMonth(int dayOfMonth),ZonedDateTime,Returns a copy of this ZonedDateTime with the day-of-month altered.
ZonedDateTime,withDayOfYear(int dayOfYear),ZonedDateTime,Returns a copy of this ZonedDateTime with the day-of-year altered.
ZonedDateTime,withEarlierOffsetAtOverlap(),ZonedDateTime,Returns a copy of this date-time changing the zone offset to the earlier of the two valid offsets at a local time-line overlap.
ZonedDateTime,withFixedOffsetZone(),ZonedDateTime,Returns a copy of this date-time with the zone ID set to the offset.
ZonedDateTime,withHour(int hour),ZonedDateTime,Returns a copy of this ZonedDateTime with the hour-of-day altered.
ZonedDateTime,withLaterOffsetAtOverlap(),ZonedDateTime,Returns a copy of this date-time changing the zone offset to the later of the two valid offsets at a local time-line overlap.
ZonedDateTime,withMinute(int minute),ZonedDateTime,Returns a copy of this ZonedDateTime with the minute-of-hour altered.
ZonedDateTime,withMonth(int month),ZonedDateTime,Returns a copy of this ZonedDateTime with the month-of-year altered.
ZonedDateTime,withNano(int nanoOfSecond),ZonedDateTime,Returns a copy of this ZonedDateTime with the nano-of-second altered.
ZonedDateTime,withSecond(int second),ZonedDateTime,Returns a copy of this ZonedDateTime with the second-of-minute altered.
ZonedDateTime,withYear(int year),ZonedDateTime,Returns a copy of this ZonedDateTime with the year altered.
ZonedDateTime,withZoneSameInstant(ZoneId zone),ZonedDateTime,"Returns a copy of this date-time with a different time-zone, retaining the instant."
ZonedDateTime,withZoneSameLocal(ZoneId zone),ZonedDateTime,"Returns a copy of this date-time with a different time-zone, retaining the local date-time if possible."
ZoneId,equals(Object obj),boolean,Checks if this time-zone ID is equal to another time-zone ID.
ZoneId,from(TemporalAccessor temporal),static ZoneId,Obtains an instance of ZoneId from a temporal object.
ZoneId,getAvailableZoneIds(),static Set<String>,Gets the set of available zone IDs.
ZoneId,"getDisplayName(TextStyle style, Locale locale)",String,"Gets the textual representation of the zone, such as 'British Time' or '+02:00'."
ZoneId,getId(),abstract String,Gets the unique time-zone ID.
ZoneId,getRules(),abstract ZoneRules,Gets the time-zone rules for this ID allowing calculations to be performed.
ZoneId,hashCode(),int,A hash code for this time-zone ID.
ZoneId,normalized(),ZoneId,"Normalizes the time-zone ID, returning a ZoneOffset where possible."
ZoneId,of(String zoneId),static ZoneId,Obtains an instance of ZoneId from an ID ensuring that the ID is valid and available for use.
ZoneId,"of(String zoneId, Map<String,String> aliasMap)",static ZoneId,Obtains an instance of ZoneId using its ID using a map of aliases to supplement the standard zone IDs.
ZoneId,"ofOffset(String prefix, ZoneOffset offset)",static ZoneId,Obtains an instance of ZoneId wrapping an offset.
ZoneId,systemDefault(),static ZoneId,Gets the system default time-zone.
ZoneId,toString(),String,"Outputs this zone as a String, using the ID."
ZoneOffset,adjustInto(Temporal temporal),Temporal,Adjusts the specified temporal object to have the same offset as this object.
ZoneOffset,compareTo(ZoneOffset other),int,Compares this offset to another offset in descending order.
ZoneOffset,equals(Object obj),boolean,Checks if this offset is equal to another offset.
ZoneOffset,from(TemporalAccessor temporal),static ZoneOffset,Obtains an instance of ZoneOffset from a temporal object.
ZoneOffset,get(TemporalField field),int,Gets the value of the specified field from this offset as an int.
ZoneOffset,getId(),String,Gets the normalized zone offset ID.
ZoneOffset,getLong(TemporalField field),long,Gets the value of the specified field from this offset as a long.
ZoneOffset,getRules(),ZoneRules,Gets the associated time-zone rules.
ZoneOffset,getTotalSeconds(),int,Gets the total zone offset in seconds.
ZoneOffset,hashCode(),int,A hash code for this offset.
ZoneOffset,isSupported(TemporalField field),boolean,Checks if the specified field is supported.
ZoneOffset,of(String offsetId),static ZoneOffset,Obtains an instance of ZoneOffset using the ID.
ZoneOffset,ofHours(int hours),static ZoneOffset,Obtains an instance of ZoneOffset using an offset in hours.
ZoneOffset,"ofHoursMinutes(int hours, int minutes)",static ZoneOffset,Obtains an instance of ZoneOffset using an offset in hours and minutes.
ZoneOffset,"ofHoursMinutesSeconds(int hours, int minutes, int seconds)",static ZoneOffset,"Obtains an instance of ZoneOffset using an offset in hours, minutes and seconds."
ZoneOffset,ofTotalSeconds(int totalSeconds),static ZoneOffset,Obtains an instance of ZoneOffset specifying the total offset in seconds
ZoneOffset,query(TemporalQuery<R> query),<R> R,Queries this offset using the specified query.
ZoneOffset,range(TemporalField field),ValueRange,Gets the range of valid values for the specified field.
ZoneOffset,toString(),String,"Outputs this offset as a String, using the normalized ID."
