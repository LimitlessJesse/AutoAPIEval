Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,JPEGHuffmanTable,1,boolean isValid(),False,NULL
0,JPEGHuffmanTable,2,int getTableClass(),False,NULL
0,JPEGHuffmanTable,3,int getNibbleCount(),False,NULL
0,JPEGHuffmanTable,4,int getValue(int index),False,NULL
0,JPEGHuffmanTable,5,int getCodeLength(int index),False,NULL
1,JPEGImageReadParam,1,void setJPEGQuality(float quality),False,NULL
1,JPEGImageReadParam,2,void setJPEGHuffmanTables(boolean useTables),False,NULL
1,JPEGImageReadParam,3,void setJPEGHuffmanTablesOnly(boolean useTablesOnly),False,NULL
1,JPEGImageReadParam,4,"void setJPEGQuality(float quality, float smoothing)",False,NULL
1,JPEGImageReadParam,5,"void setJPEGQuality(float quality, float smoothing, float gamma)",False,NULL
2,JPEGImageWriteParam,1,void setCompressionMode(int mode),False,NULL
2,JPEGImageWriteParam,2,void setCompressionQuality(float quality),False,NULL
2,JPEGImageWriteParam,3,void setProgressiveMode(boolean progressive),False,NULL
2,JPEGImageWriteParam,4,void setOptimizeHuffmanTables(boolean optimize),True,Tells the writer to generate optimized Huffman tables for the image as part of the writing process.
2,JPEGImageWriteParam,5,void setDestination(ImageOutputStream out),False,NULL
3,JPEGQTable,1,int getQTable(int index),False,NULL
3,JPEGQTable,2,int getQTableSize(),False,NULL
3,JPEGQTable,3,"int getQTableValue(int index, int x, int y)",False,NULL
3,JPEGQTable,4,"void setQTable(int index, int[][] qTable)",False,NULL
3,JPEGQTable,5,"void setQTableValue(int index, int x, int y, int value)",False,NULL
