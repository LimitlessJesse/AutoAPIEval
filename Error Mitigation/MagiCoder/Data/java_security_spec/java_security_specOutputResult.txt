Sample: DSAPrivateKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_2.java:14: error: cannot find symbol
        DSAPrivateKeySpec privateKeySpec = keyPairGenerator.getKeyFactory().getKeySpec(keyPair.getPrivate(), DSAPrivateKeySpec.class);
                                                           ^
  symbol:   method getKeyFactory()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: DSAPrivateKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_3.java:14: error: cannot find symbol
        DSAPrivateKeySpec privateKeySpec = keyPairGenerator.getKeyFactory().getKeySpec(keyPair.getPrivate(), DSAPrivateKeySpec.class);
                                                           ^
  symbol:   method getKeyFactory()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: DSAPrivateKeySpec_4
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_4.java:12: error: method getPrivate in class KeyPair cannot be applied to given types;
        DSAPrivateKeySpec dsaPrivateKeySpec = keyPair.getPrivate(DSAPrivateKeySpec.class);
                                                     ^
  required: no arguments
  found:    Class<DSAPrivateKeySpec>
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: DSAPrivateKeySpec_5
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_5.java:12: error: cannot find symbol
        DSAPrivateKeySpec dsaPrivateKeySpec = new DSAPrivateKeySpec(keyPair.getPrivate().getPrivateExponent(), keyPair.getPrivate().getParams().getP(), keyPair.getPrivate().getParams().getQ(), keyPair.getPrivate().getParams().getG());
                                                                                        ^
  symbol:   method getPrivateExponent()
  location: interface PrivateKey
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_5.java:12: error: cannot find symbol
        DSAPrivateKeySpec dsaPrivateKeySpec = new DSAPrivateKeySpec(keyPair.getPrivate().getPrivateExponent(), keyPair.getPrivate().getParams().getP(), keyPair.getPrivate().getParams().getQ(), keyPair.getPrivate().getParams().getG());
                                                                                                                                   ^
  symbol:   method getParams()
  location: interface PrivateKey
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_5.java:12: error: cannot find symbol
        DSAPrivateKeySpec dsaPrivateKeySpec = new DSAPrivateKeySpec(keyPair.getPrivate().getPrivateExponent(), keyPair.getPrivate().getParams().getP(), keyPair.getPrivate().getParams().getQ(), keyPair.getPrivate().getParams().getG());
                                                                                                                                                                            ^
  symbol:   method getParams()
  location: interface PrivateKey
./Data/java_security_spec/javaFiles/DSAPrivateKeySpec_5.java:12: error: cannot find symbol
        DSAPrivateKeySpec dsaPrivateKeySpec = new DSAPrivateKeySpec(keyPair.getPrivate().getPrivateExponent(), keyPair.getPrivate().getParams().getP(), keyPair.getPrivate().getParams().getQ(), keyPair.getPrivate().getParams().getG());
                                                                                                                                                                                                                     ^
  symbol:   method getParams()
  location: interface PrivateKey
4 errors


================================================================

Sample: DSAPublicKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPublicKeySpec_2.java:14: error: cannot find symbol
        DSAPublicKeySpec publicKeySpec = keyPairGenerator.getKeyFactory().getKeySpec(keyPair.getPublic(), DSAPublicKeySpec.class);
                                                         ^
  symbol:   method getKeyFactory()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: DSAPublicKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPublicKeySpec_3.java:14: error: cannot find symbol
        DSAPublicKeySpec publicKeySpec = keyPairGenerator.getKeyFactory().getKeySpec(keyPair.getPublic(), DSAPublicKeySpec.class);
                                                         ^
  symbol:   method getKeyFactory()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: DSAPublicKeySpec_4
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/DSAPublicKeySpec_4.java:14: error: cannot find symbol
        DSAPublicKeySpec publicKeySpec = keyPairGenerator.getKeyFactory().getKeySpec(keyPair.getPublic(), DSAPublicKeySpec.class);
                                                         ^
  symbol:   method getKeyFactory()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: ECFieldF2m_2
----------------------------------------------------------------
stdout:
The value of m is: 10

================================================================

Sample: ECFieldFp_2
----------------------------------------------------------------
stdout:
The prime p of this prime finite field is: 17

================================================================

Sample: ECPrivateKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_2.java:20: error: cannot find symbol
        ECPrivateKeySpec privSpec = kp.getPrivate().getPrivateKey().getPrivateKey();
                                                   ^
  symbol:   method getPrivateKey()
  location: interface PrivateKey
1 error


================================================================

Sample: ECPrivateKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_3.java:29: error: cannot find symbol
        ECPrivateKeySpec privKeySpec = kp.getPrivate().getECPrivateKey();
                                                      ^
  symbol:   method getECPrivateKey()
  location: interface PrivateKey
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_3.java:36: error: cannot find symbol
        System.out.println("G: " + params.getG());
                                         ^
  symbol:   method getG()
  location: variable params of type ECParameterSpec
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_3.java:37: error: cannot find symbol
        System.out.println("N: " + params.getN());
                                         ^
  symbol:   method getN()
  location: variable params of type ECParameterSpec
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_3.java:38: error: cannot find symbol
        System.out.println("H: " + params.getH());
                                         ^
  symbol:   method getH()
  location: variable params of type ECParameterSpec
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_3.java:39: error: cannot find symbol
        System.out.println("Seed: " + params.getSeed());
                                            ^
  symbol:   method getSeed()
  location: variable params of type ECParameterSpec
5 errors


================================================================

Sample: ECPublicKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPublicKeySpec_2.java:20: error: cannot find symbol
        ECParameterSpec params = publicKey.getParams();
                                          ^
  symbol:   method getParams()
  location: variable publicKey of type PublicKey
./Data/java_security_spec/javaFiles/ECPublicKeySpec_2.java:23: error: cannot find symbol
        ECPoint w = ((ECPublicKeySpec) publicKey.getSpec()).getW();
                                                ^
  symbol:   method getSpec()
  location: variable publicKey of type PublicKey
2 errors


================================================================

Sample: ECPublicKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPublicKeySpec_3.java:13: error: cannot find symbol
        ECPublicKeySpec pubKeySpec = new ECPublicKeySpec(kp.getPublic().getW(), kp.getPublic().getParams());
                                                                       ^
  symbol:   method getW()
  location: interface PublicKey
./Data/java_security_spec/javaFiles/ECPublicKeySpec_3.java:13: error: cannot find symbol
        ECPublicKeySpec pubKeySpec = new ECPublicKeySpec(kp.getPublic().getW(), kp.getPublic().getParams());
                                                                                              ^
  symbol:   method getParams()
  location: interface PublicKey
2 errors


================================================================

Sample: EllipticCurve_2
----------------------------------------------------------------
stdout:
The value of a is: 1

================================================================

Sample: EllipticCurve_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: first coefficient is negative
	at java.base/java.security.spec.EllipticCurve.checkValidity(EllipticCurve.java:59)
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:112)
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:83)
	at EllipticCurve_3.main(EllipticCurve_3.java:13)

================================================================

Sample: EllipticCurve_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: first coefficient is negative
	at java.base/java.security.spec.EllipticCurve.checkValidity(EllipticCurve.java:59)
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:112)
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:83)
	at EllipticCurve_5.main(EllipticCurve_5.java:13)

================================================================

Sample: EllipticCurve_6
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/EllipticCurve_6.java:14: error: constructor ECParameterSpec in class ECParameterSpec cannot be applied to given types;
        ECParameterSpec spec = new ECParameterSpec(field, point, new BigInteger("115792089210356248762697446949407573530086143415290314195533631308867097853948"), 1, new BigInteger("41058363725152142129326129780047268409114441015993725554835256314039467401291"));
                               ^
  required: EllipticCurve,ECPoint,BigInteger,int
  found:    ECFieldFp,ECPoint,BigInteger,int,BigInteger
  reason: actual and formal argument lists differ in length
./Data/java_security_spec/javaFiles/EllipticCurve_6.java:15: error: cannot find symbol
        EllipticCurve curve = new EllipticCurve(spec);
        ^
  symbol:   class EllipticCurve
  location: class EllipticCurve_6
./Data/java_security_spec/javaFiles/EllipticCurve_6.java:15: error: cannot find symbol
        EllipticCurve curve = new EllipticCurve(spec);
                                  ^
  symbol:   class EllipticCurve
  location: class EllipticCurve_6
3 errors


================================================================

Sample: EncodedKeySpec_2
----------------------------------------------------------------
stdout:
Public key encoded: 0��0	*�H�� �� 0���� �b���H}Ԛzѽ�@�g��	,/���;�/��O��+\�XgO�����N�������Y�A��fH��^���i�$��6W��_�֦oq�V��6[��@��E�j��S����$����d�<~� 
Private key encoded: 0�v 0	*�H�� �`0�\ �� �b���H}Ԛzѽ�@�g��	,/���;�/��O��+\�XgO�����N�������Y�A��fH��^���i�$��6W��_�֦oq�V��6[��@��E�j��S����$����d�<~� ��=mμ���۸E:Bm�K���<d�� ��D���?�o�as
��
,�(@3/���k�$FR]��Q�f��N���`��b��_�,�I�±<�ͮ2�&�S�@��h�@A��*����R	�+El�����A �sx�P�Ȗ��F{�Y���oo�*��xmqd�[���ʢ����@%"�b<������,%p�n�A ڲ�d����G���.�W5���V�?�>�`�{��ܐ��~� ����-�1`�/X����A ��
3�#�֤��X&���Ne�Sm�'fUi	�T"������2;�qi�'���� ^ǎ��K��@n_.n#������ƣxc�tK��� ���	2����)b/���[B��T"�W���-C]<��W�m@@ a�� ��ʁ�N^�]fN�҇\@
k�B��$qQ
���@�b/\{-���&��̒
60;X�

================================================================

Sample: EncodedKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/EncodedKeySpec_3.java:26: error: exception InvalidKeySpecException is never thrown in body of corresponding try statement
        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {
                                            ^
1 error


================================================================

Sample: PKCS8EncodedKeySpec_2
----------------------------------------------------------------
stdout:
0�� 0	*�H�� ��0�� � ���yl��.��5�:Rjt�_�i��mo�]�@���1l����۬%��������bS-�[ ���M�J��U�����s�Y- �_c�N��� ��\o�i���`��l�u��p>E�GRM��w�������b��[M̓��3�j��R��2����28�#��h'��ބ^rD��{�ɟ�^"�J���?%[f��Lm����GY���Ah�����Z��t�7��{�F�Bm�����/��Or��>y,/� � S��(d�lfI�D�T�-����տ��Ƀ��-T�~-����!F�!�5(�*"Ѕ$��aе�UѶ/�UoYg	 ��ِ���G����V��lY@��VJWW����������	�����]�v��t��s�^)
|i�}j�����`ޣ���c���kE��n��޲�Cɫ�cwrA�x!�4��-{�2��J;�0(l�0�hV�2��E���%�$4JD	0dڴ�J=`T0��e�� ���}j[��ߘW��i��ŵ���� ��Rȅ�q����3U��O��h:��.��Ќ��?\������;����@Ū���#e�o�zVc����:�Y�xG^��LU���ٵ.R���;q�S�kb�A7R���( �����Uyc,���{�a�ķ�� �'����ƨ��w]���r��?�0��'�X$M�
����!Μ1r��m�g!v��ϯ��梻MLL� :��ш�O������W\���������<�����$Jd$<�2*���M��@@�K>�d�U�� �,���B�R*�$U�A��6��t�e+p��
�G�]���wɜN�h7�SzS�H��A�ywZ��Ub�^u�ԟ��6O���DϞ����t����~b8�����n�s�PR<�@�%A�'�2\X�&�=��� ���6�jL�t�����j}#�W��x�,�ӵ!D��]�n������@f	w�2NP��4i�I��y^>K9,Wq�[엉3�Keh�S�Y:z�`96�0�lp�yӂm���޲I�}f)6�A��� �[�^\z���s-Q�Է�����1�l( fC����O�.k��>l�]Ƙ�'>�;�E��\�=�G>��)ya2u�������
��F�63r��DjR��tA�\�N���_<咠6	 "&9hwj��E

================================================================

Sample: PKCS8EncodedKeySpec_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Illegal base64 character 2e
	at java.base/java.util.Base64$Decoder.decode0(Base64.java:848)
	at java.base/java.util.Base64$Decoder.decode(Base64.java:566)
	at java.base/java.util.Base64$Decoder.decode(Base64.java:589)
	at PKCS8EncodedKeySpec_3.main(PKCS8EncodedKeySpec_3.java:11)

================================================================

Sample: PSSParameterSpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/PSSParameterSpec_2.java:5: error: no suitable constructor found for PSSParameterSpec(String,String,int,int)
        PSSParameterSpec pssParameterSpec = new PSSParameterSpec("SHA-256", "MGF1", 32, 1);
                                            ^
    constructor PSSParameterSpec.PSSParameterSpec() is not applicable
      (actual and formal argument lists differ in length)
    constructor PSSParameterSpec.PSSParameterSpec(String,String,AlgorithmParameterSpec,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor PSSParameterSpec.PSSParameterSpec(int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: RSAKeyGenParameterSpec_1
----------------------------------------------------------------
stdout:
Public Exponent: 65537

================================================================

Sample: RSAKeyGenParameterSpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/RSAKeyGenParameterSpec_2.java:12: error: cannot find symbol
        RSAKeyGenParameterSpec keySpec = (RSAKeyGenParameterSpec) keyPairGenerator.getParameters();
                                                                                  ^
  symbol:   method getParameters()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: RSAOtherPrimeInfo_3
----------------------------------------------------------------
stdout:
Prime: 1234567890

================================================================

Sample: RSAPrivateCrtKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/RSAPrivateCrtKeySpec_3.java:13: error: cannot find symbol
        RSAPrivateCrtKeySpec privateCrtKeySpec = keyPair.getPrivate().getPrivateCrtKeySpec();
                                                                     ^
  symbol:   method getPrivateCrtKeySpec()
  location: interface PrivateKey
1 error


================================================================

Sample: RSAPrivateCrtKeySpec_5
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/RSAPrivateCrtKeySpec_5.java:13: error: cannot find symbol
        RSAPrivateCrtKeySpec privateCrtKeySpec = keyPair.getPrivate().getPrivateKey().getPrivateKey().getPrivate();
                                                                     ^
  symbol:   method getPrivateKey()
  location: interface PrivateKey
1 error


================================================================

Sample: RSAPrivateCrtKeySpec_6
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/RSAPrivateCrtKeySpec_6.java:13: error: cannot find symbol
        RSAPrivateCrtKeySpec privateCrtKeySpec = keyPair.getPrivate().getPrivateKey().getPrivateKey().getPrivate();
                                                                     ^
  symbol:   method getPrivateKey()
  location: interface PrivateKey
1 error


================================================================

Sample: RSAPublicKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/RSAPublicKeySpec_2.java:15: error: incompatible types: byte[] cannot be converted to RSAPublicKeySpec
        RSAPublicKeySpec publicKeySpec = keyPair.getPublic().getEncoded();
                                                                       ^
1 error


================================================================

Sample: RSAPublicKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/RSAPublicKeySpec_3.java:15: error: cannot find symbol
        RSAPublicKeySpec publicKeySpec = keyPairGenerator.getKeyFactory().getKeySpec(keyPair.getPublic(), RSAPublicKeySpec.class);
                                                         ^
  symbol:   method getKeyFactory()
  location: variable keyPairGenerator of type KeyPairGenerator
1 error


================================================================

Sample: X509EncodedKeySpec_2
----------------------------------------------------------------
stdout:
48 -126 1 34 48 13 6 9 42 -122 72 -122 -9 13 1 1 1 5 0 3 -126 1 15 0 48 -126 1 10 2 -126 1 1 0 -84 -1 -14 -30 -41 -110 111 111 -121 -61 -105 -9 -78 0 -60 -75 23 -20 -43 54 42 -41 81 73 123 -102 58 13 49 -63 -106 -23 -22 -120 -3 122 9 -44 87 76 10 -12 35 85 -92 -52 85 -23 23 10 126 -20 79 20 16 2 -26 -50 -21 95 -78 0 63 -75 -91 -79 34 -124 62 105 89 -73 74 -5 -79 -62 -62 104 -21 1 -27 -117 -47 -110 -122 -9 -95 -19 -87 10 42 63 40 21 34 -5 -28 72 59 77 5 -63 33 103 -116 29 -60 6 69 3 -70 -53 13 126 -50 -47 26 61 -81 36 -4 -57 92 3 -94 -30 -107 83 17 -45 -114 47 126 -105 78 101 77 115 -8 -75 74 70 -63 75 -103 -15 125 -49 -65 6 104 -103 33 -38 68 -74 -18 126 120 99 -27 106 14 91 -94 92 -27 -60 -106 -100 103 8 -96 -127 -59 70 -54 30 -66 -125 2 -84 -113 118 -24 -124 -128 -114 50 -69 57 18 -19 1 31 56 -25 -88 -61 -5 64 -125 -69 -20 71 86 116 -115 -96 81 -109 48 -38 -95 60 87 116 -43 62 -54 35 -110 55 -116 87 -25 -63 -59 84 -38 75 76 87 -82 -13 -76 -28 -27 -42 -18 47 -41 -61 -18 13 -94 71 -54 53 49 -87 -96 109 -105 36 19 2 3 1 0 1 
================================================================

Sample: X509EncodedKeySpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/X509EncodedKeySpec_3.java:20: error: exception InvalidKeySpecException is never thrown in body of corresponding try statement
        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {
                                            ^
1 error


================================================================

