Sample: 0 AttachmentPart
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class A single attachment to a SOAPMessage object.

@@ Instruction
I want to use javax.xml.soap.AttachmentPart package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public boolean add(E e)`: This method appends the specified element to the end of this list.
2. `public E get(int index)`: This method returns the element at the specified position in this list.
3. `public E remove(int index)`: This method removes the element at the specified position in this list.
4. `public int size()`: This method returns the number of elements in this list.
5. `public boolean isEmpty()`: This method returns true if this list contains no elements.
================================================================

Sample: 1 MessageFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class A factory for creating SOAPMessage objects.

@@ Instruction
I want to use javax.xml.soap.MessageFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPMessage createMessage()`: This method creates a new SOAPMessage object.

2. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart body)`: This method creates a new SOAPMessage object with the specified MimeHeaders and SOAPPart.

3. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart body, SOAPEnvelope envelope)`: This method creates a new SOAPMessage object with the specified MimeHeaders, SOAPPart, and SOAPEnvelope.

4. `SOAPMessage createMessage(SOAPPart body)`: This method creates a new SOAPMessage object with the specified SOAPPart.

5. `SOAPMessage createMessage(SOAPPart body, SOAPEnvelope envelope)`: This method creates a new SOAPMessage object with the specified SOAPPart and SOAPEnvelope.

6. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart body, SOAPEnvelope envelope, boolean isSOAP12)`: This method creates a new SOAPMessage object with the specified MimeHeaders, SOAPPart, SOAPEnvelope, and boolean value indicating whether the message is SOAP 1.2.

7. `SOAPMessage createMessage(SOAPPart body, SOAPEnvelope envelope, boolean isSOAP12)`: This method creates a new SOAPMessage object with the specified SOAPPart, SOAPEnvelope, and boolean value indicating whether the message is SOAP 1.2.

8. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart body, boolean isSOAP12)`: This method creates a new SOAPMessage object with the specified MimeHeaders and SOAPPart, and boolean value indicating whether the message is SOAP 1.2.

9. `SOAPMessage createMessage(SOAPPart body, boolean isSOAP12)`: This method creates a new SOAPMessage object with the specified SOAPPart and boolean value indicating whether the message is SOAP 1.2.

10. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart body, SOAPEnvelope envelope, boolean isSOAP12, boolean isMimeMultipart)`: This method creates a new SOAPMessage object with the specified MimeHeaders, SOAPPart, SOAPEnvelope, boolean values indicating whether the message is SOAP 1.2 and whether the message is a MIME multipart message.
================================================================

Sample: 2 MimeHeader
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class An object that stores a MIME header name and its value.

@@ Instruction
I want to use javax.xml.soap.MimeHeader package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

Sample: 3 MimeHeaders
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class A container for MimeHeader objects, which represent the MIME headers present in a MIME part of a message.

@@ Instruction
I want to use javax.xml.soap.MimeHeaders package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(String name, String value)`: This method adds a header with the specified name and value.
3. `Enumeration<String> getAllHeaders()`: This method returns an enumeration of all the header names in this MimeHeaders object.
4. `String getHeader(String name)`: This method returns the first header with the specified name.
5. `Enumeration<String> getHeaders(String name)`: This method returns an enumeration of all the headers with the specified name.
================================================================

Sample: 4 SAAJMetaFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class The access point for the implementation classes of the factories defined in the SAAJ API.

@@ Instruction
I want to use javax.xml.soap.SAAJMetaFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPMessage createMessage()`: This method creates a new SOAP message.
2. `SOAPMessage createMessage(SOAPPart part)`: This method creates a new SOAP message with the specified SOAP part.
3. `SOAPPart createPart()`: This method creates a new SOAP part.
4. `SOAPPart createPart(String contentType)`: This method creates a new SOAP part with the specified content type.
5. `SOAPEnvelope createEnvelope()`: This method creates a new SOAP envelope.

Note: The methods `createMessage()`, `createMessage(SOAPPart part)`, `createPart()`, `createPart(String contentType)`, and `createEnvelope()` do not inherent from their parent class.
================================================================

Sample: 5 SAAJResult
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class Acts as a holder for the results of a JAXP transformation or a JAXB marshalling, in the form of a SAAJ tree.

@@ Instruction
I want to use javax.xml.soap.SAAJResult package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPMessage getMessage()`: This method returns the SOAPMessage object.
2. `SOAPPart getSOAPPart()`: This method returns the SOAPPart object.
3. `SOAPEnvelope getSOAPEnvelope()`: This method returns the SOAPEnvelope object.
4. `SOAPHeader getSOAPHeader()`: This method returns the SOAPHeader object.
5. `SOAPBody getSOAPBody()`: This method returns the SOAPBody object.
6. `SOAPFault getSOAPFault()`: This method returns the SOAPFault object.
7. `SOAPElement getResult()`: This method returns the SOAPElement object.
8. `SOAPElement getResult(QName localName)`: This method returns the SOAPElement object.
9. `SOAPElement getResult(QName namespaceURI, String localName)`: This method returns the SOAPElement object.
10. `SOAPElement getResult(String namespaceURI, String localName)`: This method returns the SOAPElement object.
11. `SOAPElement getResult(String localName)`: This method returns the SOAPElement object.
12. `SOAPElement getResult(QName namespaceURI, String localName, String prefix)`: This method returns the SOAPElement object.
13. `SOAPElement getResult(String namespaceURI, String localName, String prefix)`: This method returns the SOAPElement object.
14. `SOAPElement getResult(String localName, String prefix)`: This method returns the SOAPElement object.
15. `SOAPElement getResult(QName localName, String prefix)`: This method returns the SOAPElement object.
16. `SOAPElement getResult(QName namespaceURI, String localName, String prefix, String uri)`: This method returns the SOAPElement object.
17. `SOAPElement getResult(String namespaceURI, String localName, String prefix, String uri)`: This method returns the SOAPElement object.
18. `SOAPElement getResult(String localName, String prefix, String uri)`: This method returns the SOAPElement object.
19. `SOAPElement getResult(QName localName, String prefix, String uri)`: This method returns the SOAPElement object.
20. `SOAPElement getResult(QName namespaceURI, String localName, String prefix, String uri, String type)`: This method returns the SOAPElement object.
21. `SOAPElement getResult(String namespaceURI, String localName, String prefix, String uri, String type)`: This method returns the SOAPElement object.
22. `SOAPElement getResult(String localName, String prefix, String uri, String type)`: This method returns the SOAPElement object.
23. `SOAPElement getResult(QName localName, String prefix, String uri, String type)`: This method returns the SOAPElement object.
24. `SOAPElement getResult(QName namespaceURI, String localName, String prefix, String uri, String type, String typeNamespace)`: This method returns the SOAPElement object.
25. `SOAPElement getResult(String namespaceURI, String localName, String prefix, String uri, String type, String typeNamespace)`: This method returns the SOAPElement object.
26. `SOAPElement getResult(String localName, String prefix, String uri, String type, String typeNamespace)`: This method returns the SOAPElement object.
27. `SOAPElement getResult(QName localName, String prefix, String uri, String type, String typeNamespace)`: This method returns the SOAPElement object.
================================================================

Sample: 6 SOAPConnection
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class A point-to-point connection that a client can use for sending messages directly to a remote party (represented by a URL, for instance).

@@ Instruction
I want to use javax.xml.soap.SOAPConnection package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPConnection.sendRequest(SOAPMessage request, URL endpoint)`: This method sends a SOAP request to the specified URL and returns a SOAP response.

2. `SOAPConnection.call(SOAPMessage request, URL endpoint)`: This method sends a SOAP request to the specified URL and returns a SOAP response.

3. `SOAPConnection.close()`: This method closes the SOAP connection.

4. `SOAPConnection.getType()`: This method returns the type of the SOAP connection.

5. `SOAPConnection.getTransport()`: This method returns the transport used by the SOAP connection.
================================================================

Sample: 7 SOAPConnectionFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class A factory for creating SOAPConnection objects.

@@ Instruction
I want to use javax.xml.soap.SOAPConnectionFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPConnectionFactory newInstance()`: This method returns a new SOAPConnectionFactory object.

2. `SOAPConnection createConnection()`: This method creates a new SOAPConnection object.

3. `SOAPConnection createConnection(String username, String password)`: This method creates a new SOAPConnection object with the specified username and password.

4. `SOAPConnection createConnection(String username, String password, String nonce, String created, String digest)`: This method creates a new SOAPConnection object with the specified username, password, nonce, created, and digest.

5. `SOAPConnection createConnection(String username, String password, String nonce, String created, String digest, String realm)`: This method creates a new SOAPConnection object with the specified username, password, nonce, created, digest, and realm.
================================================================

Sample: 8 SOAPElementFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class - Use javax.xml.soap.SOAPFactory for creating SOAPElements.

@@ Instruction
I want to use javax.xml.soap.SOAPElementFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPElement createNameElement(String prefix, String namespaceURI, String localName)`: This method creates a new SOAPElement with the specified prefix, namespace URI, and local name.

2. `SOAPElement createNameElement(String namespaceURI, String localName)`: This method creates a new SOAPElement with the specified namespace URI and local name.

3. `SOAPElement createNameElement(String localName)`: This method creates a new SOAPElement with the specified local name.

4. `SOAPElement createTextElement(String text)`: This method creates a new SOAPElement with the specified text content.

5. `SOAPElement createTextElement(String text, String dataType)`: This method creates a new SOAPElement with the specified text content and data type.
================================================================

Sample: 9 SOAPFactory
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class SOAPFactory is a factory for creating various objects that exist in the SOAP XML tree.

@@ Instruction
I want to use javax.xml.soap.SOAPFactory package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPFactory createSOAPFactory()`: This method creates a SOAPFactory object.

2. `SOAPMessage createMessage()`: This method creates a SOAPMessage object.

3. `SOAPPart createPart()`: This method creates a SOAPPart object.

4. `SOAPEnvelope createEnvelope()`: This method creates a SOAPEnvelope object.

5. `SOAPHeader createHeader()`: This method creates a SOAPHeader object.

6. `SOAPBody createBody()`: This method creates a SOAPBody object.

7. `SOAPElement createElement(QName qname)`: This method creates a SOAPElement object.

8. `SOAPElement createElement(QName qname, SOAPElement parent)`: This method creates a SOAPElement object.

9. `SOAPElement createElement(QName qname, SOAPElement parent, SOAPElement next)`: This method creates a SOAPElement object.

10. `SOAPElement createElement(QName qname, SOAPElement parent, SOAPElement next, SOAPElement previous)`: This method creates a SOAPElement object.

11. `SOAPElement createElement(String localName, String namespaceURI)`: This method creates a SOAPElement object.

12. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent)`: This method creates a SOAPElement object.

13. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next)`: This method creates a SOAPElement object.

14. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next, SOAPElement previous)`: This method creates a SOAPElement object.

15. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next, SOAPElement previous, SOAPElement firstChild)`: This method creates a SOAPElement object.

16. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next, SOAPElement previous, SOAPElement firstChild, SOAPElement lastChild)`: This method creates a SOAPElement object.

17. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next, SOAPElement previous, SOAPElement firstChild, SOAPElement lastChild, SOAPElement previousSibling)`: This method creates a SOAPElement object.

18. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next, SOAPElement previous, SOAPElement firstChild, SOAPElement lastChild, SOAPElement previousSibling, SOAPElement nextSibling)`: This method creates a SOAPElement object.

19. `SOAPElement createElement(String localName, String namespaceURI, SOAPElement parent, SOAPElement next, SOAPElement previous, SOAPElement firstChild, SOAPElement lastChild, SOAPElement previousSibling, SOAPElement nextSibling, SOAPElement ownerDocument)`: This method creates a SOAPElement object.
================================================================

Sample: 10 SOAPMessage
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class The root class for all SOAP messages.

@@ Instruction
I want to use javax.xml.soap.SOAPMessage package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart soapPart)`: This method creates a new SOAP message with the specified MIME headers and SOAP part.

2. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart soapPart, String messageID)`: This method creates a new SOAP message with the specified MIME headers, SOAP part, and message ID.

3. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart soapPart, String messageID, String referenceID)`: This method creates a new SOAP message with the specified MIME headers, SOAP part, message ID, and reference ID.

4. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart soapPart, String messageID, String referenceID, String action)`: This method creates a new SOAP message with the specified MIME headers, SOAP part, message ID, reference ID, and action.

5. `SOAPMessage createMessage(MimeHeaders headers, SOAPPart soapPart, String messageID, String referenceID, String action, String relayState)`: This method creates a new SOAP message with the specified MIME headers, SOAP part, message ID, reference ID, action, and relay state.
================================================================

Sample: 11 SOAPPart
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides the API for creating and building SOAP messages.
Here is the description of the class The container for the SOAP-specific portion of a SOAPMessage object.

@@ Instruction
I want to use javax.xml.soap.SOAPPart package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SOAPPart createInstance()`: This method creates a new SOAPPart object.

2. `SOAPEnvelope getEnvelope()`: This method returns the SOAPEnvelope object that is the root of this SOAPPart.

3. `SOAPEnvelope createEnvelope()`: This method creates a new SOAPEnvelope object and adds it to this SOAPPart.

4. `SOAPHeader getHeader()`: This method returns the SOAPHeader object that is the header of this SOAPPart.

5. `SOAPHeader createHeader()`: This method creates a new SOAPHeader object and adds it to this SOAPPart.

6. `SOAPBody getBody()`: This method returns the SOAPBody object that is the body of this SOAPPart.

7. `SOAPBody createBody()`: This method creates a new SOAPBody object and adds it to this SOAPPart.

8. `SOAPHeader getSOAPHeader()`: This method returns the SOAPHeader object that is the header of this SOAPPart.

9. `SOAPHeader createSOAPHeader()`: This method creates a new SOAPHeader object and adds it to this SOAPPart.

10. `SOAPBody getSOAPBody()`: This method returns the SOAPBody object that is the body of this SOAPPart.

11. `SOAPBody createSOAPBody()`: This method creates a new SOAPBody object and adds it to this SOAPPart.

12. `SOAPHeader getSOAPHeaderElement()`: This method returns the SOAPHeader object that is the header of this SOAPPart.

13. `SOAPHeader createSOAPHeaderElement()`: This method creates a new SOAPHeader object and adds it to this SOAPPart.

14. `SOAPBody getSOAPBodyElement()`: This method returns the SOAPBody object that is the body of this SOAPPart.

15. `SOAPBody createSOAPBodyElement()`: This method creates a new SOAPBody object and adds it to this SOAPPart.
================================================================

