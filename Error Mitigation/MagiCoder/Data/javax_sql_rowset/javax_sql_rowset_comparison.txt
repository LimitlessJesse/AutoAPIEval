Sample: 0 BaseRowSet
----------------------------------------------------------------

@@ Context
Here is the description of the package Standard interfaces and base classes for JDBC RowSetimplementations.
Here is the description of the class An abstract class providing a RowSet object with its basic functionality.

@@ Instruction
I want to use javax.sql.rowset.BaseRowSet package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public void setRow(int rowNumber, Object[] row)`: This method sets the specified row in the RowSet to the specified Object array.
2. `public void setRow(int rowNumber, Object[] row, int[] columnPositions)`: This method sets the specified row in the RowSet to the specified Object array, using the specified column positions.
3. `public void setRow(int rowNumber, Object[] row, String[] columnNames)`: This method sets the specified row in the RowSet to the specified Object array, using the specified column names.
4. `public void setRow(int rowNumber, Object[] row, int[] columnPositions, boolean[] columnNullabilities)`: This method sets the specified row in the RowSet to the specified Object array, using the specified column positions and nullabilities.
5. `public void setRow(int rowNumber, Object[] row, String[] columnNames, boolean[] columnNullabilities)`: This method sets the specified row in the RowSet to the specified Object array, using the specified column names and nullabilities.
================================================================

Sample: 1 RowSetMetaDataImpl
----------------------------------------------------------------

@@ Context
Here is the description of the package Standard interfaces and base classes for JDBC RowSetimplementations.
Here is the description of the class Provides implementations for the methods that set and get metadata information about a RowSet object's columns.

@@ Instruction
I want to use javax.sql.rowset.RowSetMetaDataImpl package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int getColumnCount()`: This method returns the number of columns in the RowSet.
2. `public String getColumnName(int column)`: This method returns the name of the specified column.
3. `public int getColumnType(int column)`: This method returns the SQL type of the specified column.
4. `public String getColumnTypeName(int column)`: This method returns the name of the SQL type of the specified column.
5. `public int getPrecision(int column)`: This method returns the precision of the specified column.
6. `public int getScale(int column)`: This method returns the scale of the specified column.
7. `public int getColumnDisplaySize(int column)`: This method returns the display size of the specified column.
8. `public String getSchemaName(int column)`: This method returns the schema name of the specified column.
9. `public String getCatalogName(int column)`: This method returns the catalog name of the specified column.
10. `public String getTableName(int column)`: This method returns the table name of the specified column.
11. `public String getColumnLabel(int column)`: This method returns the label of the specified column.
12. `public String getColumnClassName(int column)`: This method returns the fully qualified class name of the specified column.
13. `public boolean isAutoIncrement(int column)`: This method returns whether the specified column is auto-increment.
14. `public boolean isCaseSensitive(int column)`: This method returns whether the specified column is case sensitive.
15. `public boolean isSearchable(int column)`: This method returns whether the specified column is searchable.
16. `public boolean isCurrency(int column)`: This method returns whether the specified column is a currency.
17. `public boolean isNullable(int column)`: This method returns whether the specified column is nullable.
18. `public boolean isSigned(int column)`: This method returns whether the specified column is signed.
19. `public boolean isWritable(int column)`: This method returns whether the specified column is writable.
20. `public boolean isReadOnly(int column)`: This method returns whether the specified column is read-only.
21. `public boolean isDefinitelyWritable(int column)`: This method returns whether the specified column is definitely writable.
22. `public boolean isLobs()`: This method returns whether the RowSet contains LOBs.
23. `public boolean isAutoIncrement(String columnName)`: This method returns whether the specified column is auto-increment.
24. `public boolean isCaseSensitive(String columnName)`: This method returns whether the specified column is case sensitive.
25. `public boolean isSearchable(String columnName)`: This method returns whether the specified column is searchable.
26. `public boolean isCurrency(String columnName)`: This method returns whether the specified column is a currency.
27. `public boolean isNullable(String columnName)`: This method returns whether the specified column is nullable.
28. `public boolean isSigned(String columnName)`: This method returns whether the specified column is signed.
29. `public boolean isWritable(String columnName)`: This method returns whether the specified column is writable.
30. `public boolean isReadOnly(String columnName)`: This method returns whether the specified column is read-only.
31. `public boolean isDefinitelyWritable(String columnName)`: This method returns whether the specified column is definitely writable.
================================================================

Sample: 2 RowSetProvider
----------------------------------------------------------------

@@ Context
Here is the description of the package Standard interfaces and base classes for JDBC RowSetimplementations.
Here is the description of the class A factory API that enables applications to obtain a RowSetFactory implementation that can be used to create different types of RowSet implementations.

@@ Instruction
I want to use javax.sql.rowset.RowSetProvider package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `RowSetFactory getRowSetFactory()`: This method returns a RowSetFactory object that can be used to create different types of RowSet implementations.

2. `RowSet createRowSet()`: This method creates a new RowSet object.

3. `RowSet createCachedRowSet()`: This method creates a new CachedRowSet object.

4. `RowSet createWebRowSet()`: This method creates a new WebRowSet object.

5. `RowSet createFilteredRowSet()`: This method creates a new FilteredRowSet object.
================================================================

