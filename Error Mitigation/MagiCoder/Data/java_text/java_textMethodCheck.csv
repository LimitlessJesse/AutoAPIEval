Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,Annotation,1,Annotation getAnnotation(String annotationType),False,NULL
0,Annotation,2,Annotation[] getAnnotations(),False,NULL
0,Annotation,3,Annotation[] getDeclaredAnnotations(),False,NULL
0,Annotation,4,boolean isAnnotationPresent(String annotationType),False,NULL
0,Annotation,5,Annotation[] getAnnotationsByType(Class<? extends Annotation> annotationType),False,NULL
1,AttributedCharacterIterator.Attribute,1,int getRunLimit(),False,NULL
1,AttributedCharacterIterator.Attribute,2,"int getRunLimit(int start, int end)",False,NULL
1,AttributedCharacterIterator.Attribute,3,"int getRunLimit(int start, int end, int[] runs)",False,NULL
1,AttributedCharacterIterator.Attribute,4,"int getRunLimit(int start, int end, int[] runs, int offset)",False,NULL
1,AttributedCharacterIterator.Attribute,5,"int getRunLimit(int start, int end, int[] runs, int offset, int length)",False,NULL
2,AttributedString,1,AttributedCharacterIterator iterator(),False,NULL
2,AttributedString,2,AttributeSet getAttributes(),False,NULL
2,AttributedString,3,"AttributeSet getAttributes(int start, int end)",False,NULL
2,AttributedString,4,int getRunLimit(),False,NULL
2,AttributedString,5,"int getRunStart(int start, int end)",False,NULL
3,Bidi,1,"Bidi.getRunDirection(int start, int limit)",False,NULL
3,Bidi,2,"Bidi.reorderVisual(char[] text, int start, int limit)",False,NULL
3,Bidi,3,"Bidi.reorderLogical(char[] text, int start, int limit)",False,NULL
3,Bidi,4,"Bidi.reorderInVisualContext(char[] text, int start, int limit)",False,NULL
3,Bidi,5,"Bidi.reorderInLogicalContext(char[] text, int start, int limit)",False,NULL
4,BreakIterator,1,int first(),True,Returns the first boundary.
4,BreakIterator,2,int following(int offset),True,Returns the first boundary following the specified character offset.
4,BreakIterator,3,int last(),True,Returns the last boundary.
4,BreakIterator,4,int next(int offset),True,Returns the nth boundary from the current boundary.
4,BreakIterator,5,int previous(),True,Returns the boundary preceding the current boundary.
5,ChoiceFormat,1,ChoiceFormat(String pattern),False,NULL
5,ChoiceFormat,2,"String format(double[] limits, String[] formats, String result)",False,NULL
5,ChoiceFormat,3,String format(double number),False,NULL
5,ChoiceFormat,4,String toPattern(),True,Gets the pattern.
5,ChoiceFormat,5,double[] getLimits(),True,Get the limits passed in the constructor.
6,CollationElementIterator,1,int getMaxExpansion(),False,NULL
6,CollationElementIterator,2,int getOffset(),True,Returns the character offset in the original text corresponding to the next collation element.
6,CollationElementIterator,3,int getLimit(),False,NULL
6,CollationElementIterator,4,boolean hasNext(),False,NULL
6,CollationElementIterator,5,CollationElement next(),False,NULL
6,CollationElementIterator,6,void setOffset(int newOffset),True,"Sets the iterator to point to the collation element corresponding to the specified character (the parameter is a CHARACTER offset in the original string, not an offset into its corresponding sequence of collation elements)."
6,CollationElementIterator,7,void setLimit(int newLimit),False,NULL
6,CollationElementIterator,8,void reset(),True,Resets the cursor to the beginning of the string.
6,CollationElementIterator,9,void setText(String newText),True,Set a new string over which to iterate.
6,CollationElementIterator,10,String getText(),False,NULL
7,CollationKey,1,CollationKey getCollationKey(),False,NULL
7,CollationKey,2,int compareTo(CollationKey key),True,Compare this CollationKey to the target CollationKey.
7,CollationKey,3,int hashCode(),False,NULL
7,CollationKey,4,boolean equals(Object obj),False,NULL
7,CollationKey,5,String toString(),False,NULL
8,Collator,1,"int compare(String s1, String s2)",True,Compares the source string to the target string according to the collation rules for this Collator.
8,Collator,2,"int compare(Object o1, Object o2)",True,Compares its two arguments for order.
8,Collator,3,"int compare(String source, String target)",True,Compares the source string to the target string according to the collation rules for this Collator.
8,Collator,4,"int compare(String source, String target, int sourceIndex, int targetIndex, int sourceCount, int targetCount)",False,NULL
8,Collator,5,int hashCode(),True,Generates the hash code for this Collator.
9,DateFormat,1,final String format(Date date),False,NULL
9,DateFormat,2,Date parse(String source) throws ParseException,True,Parses text from the beginning of the given string to produce a date.
9,DateFormat,3,final void setTimeZone(TimeZone value),False,NULL
9,DateFormat,4,final void setLenient(boolean lenient),False,NULL
9,DateFormat,5,final boolean isLenient(),False,NULL
10,DateFormat.Field,1,"StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)",False,NULL
10,DateFormat.Field,2,"Date parse(String source, ParsePosition pos)",False,NULL
10,DateFormat.Field,3,Date parse(String source),False,NULL
10,DateFormat.Field,4,String format(Date date),False,NULL
10,DateFormat.Field,5,"StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)",False,NULL
11,DateFormatSymbols,1,getEras(),False,NULL
11,DateFormatSymbols,2,getMonths(),False,NULL
11,DateFormatSymbols,3,getShortMonths(),False,NULL
11,DateFormatSymbols,4,getShortWeekdays(),False,NULL
11,DateFormatSymbols,5,getWeekdays(),False,NULL
12,DecimalFormat,1,DecimalFormat(String pattern),False,NULL
12,DecimalFormat,2,String format(double number),False,NULL
12,DecimalFormat,3,String format(long number),False,NULL
12,DecimalFormat,4,Number parse(String source),False,NULL
12,DecimalFormat,5,"Number parse(String source, ParsePosition parsePosition)",True,Parses text from a string to produce a Number.
13,DecimalFormatSymbols,1,DecimalFormatSymbols(),False,NULL
13,DecimalFormatSymbols,2,void setDecimalSeparator(char newValue),True,Sets the character used for decimal sign.
13,DecimalFormatSymbols,3,char getDecimalSeparator(),True,Gets the character used for decimal sign.
13,DecimalFormatSymbols,4,void setGroupingSeparator(char newValue),True,Sets the character used for thousands separator.
13,DecimalFormatSymbols,5,char getGroupingSeparator(),True,Gets the character used for thousands separator.
13,DecimalFormatSymbols,6,void setPerMill(char newValue),True,Sets the character used for per mille sign.
13,DecimalFormatSymbols,7,char getPerMill(),True,Gets the character used for per mille sign.
13,DecimalFormatSymbols,8,void setZeroDigit(char newValue),True,Sets the character used for zero.
13,DecimalFormatSymbols,9,char getZeroDigit(),True,Gets the character used for zero.
13,DecimalFormatSymbols,10,void setDigit(char newValue),True,Sets the character used for a digit in a pattern.
13,DecimalFormatSymbols,11,char getDigit(),True,Gets the character used for a digit in a pattern.
13,DecimalFormatSymbols,12,void setMinusSign(char newValue),True,Sets the character used to represent minus sign.
13,DecimalFormatSymbols,13,char getMinusSign(),True,Gets the character used to represent minus sign.
13,DecimalFormatSymbols,14,void setPatternSeparator(char newValue),True,Sets the character used to separate positive and negative subpatterns in a pattern.
13,DecimalFormatSymbols,15,char getPatternSeparator(),True,Gets the character used to separate positive and negative subpatterns in a pattern.
13,DecimalFormatSymbols,16,void setCurrencySymbol(String newValue),True,Sets the currency symbol for the currency of these DecimalFormatSymbols in their locale.
13,DecimalFormatSymbols,17,String getCurrencySymbol(),True,Returns the currency symbol for the currency of these DecimalFormatSymbols in their locale.
13,DecimalFormatSymbols,18,void setMonetaryDecimalSeparator(char newValue),True,Sets the monetary decimal separator.
13,DecimalFormatSymbols,19,char getMonetaryDecimalSeparator(),True,Returns the monetary decimal separator.
13,DecimalFormatSymbols,20,void setExponentSeparator(String newValue),True,Sets the string used to separate the mantissa from the exponent.
13,DecimalFormatSymbols,21,String getExponentSeparator(),True,Returns the string used to separate the mantissa from the exponent.
13,DecimalFormatSymbols,22,void setPercent(char newValue),True,Sets the character used for percent sign.
13,DecimalFormatSymbols,23,char getPercent(),True,Gets the character used for percent sign.
13,DecimalFormatSymbols,24,void setNaNSymbol(String newValue),False,NULL
13,DecimalFormatSymbols,25,String getNaNSymbol(),False,NULL
13,DecimalFormatSymbols,26,void setInfinitySymbol(String newValue),False,NULL
13,DecimalFormatSymbols,27,String getInfinitySymbol(),False,NULL
14,FieldPosition,1,int getBeginIndex(),True,Retrieves the index of the first character in the requested field.
14,FieldPosition,2,int getEndIndex(),True,Retrieves the index of the character following the last character in the requested field.
14,FieldPosition,3,void setBeginIndex(int newBegin),True,Sets the begin index.
14,FieldPosition,4,void setEndIndex(int newEnd),True,Sets the end index.
14,FieldPosition,5,void setFieldWidth(int newWidth),False,NULL
15,Format,1,String format(Object obj),True,Formats an object to produce a string.
15,Format,2,"StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",True,Formats an object and appends the resulting text to a given string buffer.
15,Format,3,"String format(Object obj, Formatter formatter)",False,NULL
15,Format,4,"String format(Object obj, Formatter formatter, FieldPosition pos)",False,NULL
15,Format,5,"String format(Object obj, Formatter formatter, FieldPosition pos, ObjectBuffer buffer)",False,NULL
16,Format.Field,1,"StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",False,NULL
16,Format.Field,2,String format(Object obj),False,NULL
16,Format.Field,3,"StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos)",False,NULL
16,Format.Field,4,String format(long number),False,NULL
16,Format.Field,5,"StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos)",False,NULL
16,Format.Field,6,String format(double number),False,NULL
16,Format.Field,7,"StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",False,NULL
16,Format.Field,8,String format(Object obj),False,NULL
16,Format.Field,9,"StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos)",False,NULL
16,Format.Field,10,String format(long number),False,NULL
16,Format.Field,11,"StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos)",False,NULL
16,Format.Field,12,String format(double number),False,NULL
17,MessageFormat,1,String format(Object... args),False,NULL
17,MessageFormat,2,String format(Object[] args),False,NULL
17,MessageFormat,3,"String format(Object arg0, Object arg1, Object... arg2)",False,NULL
17,MessageFormat,4,"StringBuffer format(StringBuffer toAppendTo, Object... args)",False,NULL
17,MessageFormat,5,"StringBuffer format(StringBuffer toAppendTo, Object[] args)",False,NULL
18,MessageFormat.Field,1,"AttributedCharacterIterator formatToCharacterIterator(String pattern, Object... arguments)",False,NULL
18,MessageFormat.Field,2,"String format(String pattern, Object... arguments)",False,NULL
18,MessageFormat.Field,3,"String format(Locale locale, String pattern, Object... arguments)",False,NULL
18,MessageFormat.Field,4,"String format(String pattern, Object arg0, Object arg1, Object... arguments)",False,NULL
18,MessageFormat.Field,5,"String format(Locale locale, String pattern, Object arg0, Object arg1, Object... arguments)",False,NULL
19,Normalizer,1,"String normalize(String src, Form form)",False,NULL
19,Normalizer,2,"String[] split(String src, int limit)",False,NULL
19,Normalizer,3,String strip(String src),False,NULL
19,Normalizer,4,String toLowerCase(Locale locale),False,NULL
19,Normalizer,5,String toUpperCase(Locale locale),False,NULL
20,NumberFormat,1,NumberFormat getInstance(),True,Returns a general-purpose number format for the current default FORMAT locale.
20,NumberFormat,2,NumberFormat getInstance(Locale locale),True,Returns a general-purpose number format for the specified locale.
20,NumberFormat,3,String format(double number),True,Specialization of format.
20,NumberFormat,4,String format(long number),True,Specialization of format.
20,NumberFormat,5,Number parse(String source),True,Parses text from the beginning of the given string to produce a number.
21,NumberFormat.Field,1,NumberFormat.Field getFieldAttribute(String fieldName),False,NULL
21,NumberFormat.Field,2,FieldPosition[] getFieldPositions(),False,NULL
21,NumberFormat.Field,3,NumberFormat.Field[] getFields(),False,NULL
21,NumberFormat.Field,4,NumberFormat.Field getIntegerField(),False,NULL
21,NumberFormat.Field,5,NumberFormat.Field getNumberField(),False,NULL
21,NumberFormat.Field,6,NumberFormat.Field getPercentField(),False,NULL
21,NumberFormat.Field,7,NumberFormat.Field getZeroDigitField(),False,NULL
21,NumberFormat.Field,8,NumberFormat.Field getCurrencyField(),False,NULL
21,NumberFormat.Field,9,NumberFormat.Field getFractionField(),False,NULL
21,NumberFormat.Field,10,NumberFormat.Field getExponentField(),False,NULL
21,NumberFormat.Field,11,NumberFormat.Field getGroupingField(),False,NULL
21,NumberFormat.Field,12,NumberFormat.Field getPatternField(),False,NULL
21,NumberFormat.Field,13,NumberFormat.Field getSignField(),False,NULL
21,NumberFormat.Field,14,NumberFormat.Field getTypeField(),False,NULL
21,NumberFormat.Field,15,NumberFormat.Field getUnitField(),False,NULL
21,NumberFormat.Field,16,NumberFormat.Field getValueField(),False,NULL
21,NumberFormat.Field,17,NumberFormat.Field getCurrency(),False,NULL
21,NumberFormat.Field,18,NumberFormat.Field getInteger(),False,NULL
21,NumberFormat.Field,19,NumberFormat.Field getNumber(),False,NULL
21,NumberFormat.Field,20,NumberFormat.Field getPercent(),False,NULL
21,NumberFormat.Field,21,NumberFormat.Field getZeroDigit(),False,NULL
21,NumberFormat.Field,22,NumberFormat.Field getFraction(),False,NULL
21,NumberFormat.Field,23,NumberFormat.Field getExponent(),False,NULL
21,NumberFormat.Field,24,NumberFormat.Field getGrouping(),False,NULL
21,NumberFormat.Field,25,NumberFormat.Field getPattern(),False,NULL
21,NumberFormat.Field,26,NumberFormat.Field getSign(),False,NULL
21,NumberFormat.Field,27,NumberFormat.Field getType(),False,NULL
21,NumberFormat.Field,28,NumberFormat.Field getUnit(),False,NULL
21,NumberFormat.Field,29,NumberFormat.Field getValue(),False,NULL
22,ParsePosition,1,int getErrorIndex(),True,"Retrieve the index at which an error occurred, or -1 if the error index has not been set."
22,ParsePosition,2,void setErrorIndex(int errorIndex),True,Set the index at which a parse error occurred.
22,ParsePosition,3,void setIndex(int newIndex),True,Set the current parse position.
22,ParsePosition,4,int getIndex(),True,Retrieve the current parse position.
22,ParsePosition,5,void setErrorIndex(int errorIndex),True,Set the index at which a parse error occurred.
23,RuleBasedCollator,1,"int compare(String source, String target)",True,Compares the character data stored in two different strings based on the collation rules.
23,RuleBasedCollator,2,"int compare(Object o1, Object o2)",False,NULL
23,RuleBasedCollator,3,int getCollationKey(String source).getSourceString(),False,NULL
23,RuleBasedCollator,4,int getCollationKey(String source).getWeight(int weight),False,NULL
23,RuleBasedCollator,5,int getCollationKey(String source).getMaximumLength(),False,NULL
23,RuleBasedCollator,6,int getCollationKey(String source).getSourceString(),False,NULL
23,RuleBasedCollator,7,int getCollationKey(String source).getWeight(int weight),False,NULL
23,RuleBasedCollator,8,int getCollationKey(String source).getMaximumLength(),False,NULL
23,RuleBasedCollator,9,int getCollationKey(String source).getSourceString(),False,NULL
23,RuleBasedCollator,10,int getCollationKey(String source).getWeight(int weight),False,NULL
23,RuleBasedCollator,11,int getCollationKey(String source).getMaximumLength(),False,NULL
23,RuleBasedCollator,12,int getCollationKey(String source).getSourceString(),False,NULL
23,RuleBasedCollator,13,int getCollationKey(String source).getWeight(int weight),False,NULL
23,RuleBasedCollator,14,int getCollationKey(String source).getMaximumLength(),False,NULL
23,RuleBasedCollator,15,int getCollationKey(String source).getSourceString(),False,NULL
23,RuleBasedCollator,16,int getCollationKey(String source).getWeight(int weight),False,NULL
23,RuleBasedCollator,17,int getCollationKey(String source).getMaximumLength(),False,NULL
23,RuleBasedCollator,18,int getCollationKey(String source).getSourceString(),False,NULL
23,RuleBasedCollator,19,int getCollationKey(String source).getWeight(int weight),False,NULL
23,RuleBasedCollator,20,int getCollationKey(String source).getMaximumLength(),False,NULL
24,SimpleDateFormat,1,final String format(Date date),False,NULL
24,SimpleDateFormat,2,final Date parse(String source),False,NULL
24,SimpleDateFormat,3,final void applyPattern(String pattern),False,NULL
24,SimpleDateFormat,4,final String toPattern(),False,NULL
24,SimpleDateFormat,5,final boolean isLenient(),False,NULL
25,StringCharacterIterator,1,char first(),True,Implements CharacterIterator.first() for String.
25,StringCharacterIterator,2,char last(),True,Implements CharacterIterator.last() for String.
25,StringCharacterIterator,3,char current(),True,Implements CharacterIterator.current() for String.
25,StringCharacterIterator,4,char next(),True,Implements CharacterIterator.next() for String.
25,StringCharacterIterator,5,char previous(),True,Implements CharacterIterator.previous() for String.
25,StringCharacterIterator,6,char setIndex(int position),True,Implements CharacterIterator.setIndex() for String.
25,StringCharacterIterator,7,int getBeginIndex(),True,Implements CharacterIterator.getBeginIndex() for String.
25,StringCharacterIterator,8,int getEndIndex(),True,Implements CharacterIterator.getEndIndex() for String.
25,StringCharacterIterator,9,int getIndex(),True,Implements CharacterIterator.getIndex() for String.
25,StringCharacterIterator,10,Object clone(),True,Creates a copy of this iterator.
25,StringCharacterIterator,11,boolean equals(Object obj),True,Compares the equality of two StringCharacterIterator objects.
25,StringCharacterIterator,12,int hashCode(),True,Computes a hashcode for this iterator.
25,StringCharacterIterator,13,String toString(),False,NULL
