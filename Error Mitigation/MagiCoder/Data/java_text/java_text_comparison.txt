Sample: 0 Annotation
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics.

@@ Instruction
I want to use java.text.Annotation package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Annotation getAnnotation(String annotationType)`: This method returns the annotation for the specified type.
2. `Annotation[] getAnnotations()`: This method returns an array of all annotations present on this element.
3. `Annotation[] getDeclaredAnnotations()`: This method returns an array of all annotations present on this element.
4. `boolean isAnnotationPresent(String annotationType)`: This method returns true if an annotation for the specified type is present on this element.
5. `Annotation[] getAnnotationsByType(Class<? extends Annotation> annotationType)`: This method returns an array of all annotations of the specified type present on this element.
================================================================

Sample: 1 AttributedCharacterIterator.Attribute
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class Defines attribute keys that are used to identify text attributes.

@@ Instruction
I want to use java.text.AttributedCharacterIterator.Attribute package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `int getRunLimit()`: This method returns the maximum number of runs in the text.
2. `int getRunLimit(int start, int end)`: This method returns the maximum number of runs in the text from the start index to the end index.
3. `int getRunLimit(int start, int end, int[] runs)`: This method returns the maximum number of runs in the text from the start index to the end index, storing the runs in the array.
4. `int getRunLimit(int start, int end, int[] runs, int offset)`: This method returns the maximum number of runs in the text from the start index to the end index, storing the runs in the array starting at the specified offset.
5. `int getRunLimit(int start, int end, int[] runs, int offset, int length)`: This method returns the maximum number of runs in the text from the start index to the end index, storing the runs in the array starting at the specified offset and length.
================================================================

Sample: 2 AttributedString
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class An AttributedString holds text and related attribute information.

@@ Instruction
I want to use java.text.AttributedString package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public AttributedCharacterIterator iterator()`: This method returns an AttributedCharacterIterator over the characters in this AttributedString.

2. `public AttributeSet getAttributes()`: This method returns the AttributeSet of this AttributedString.

3. `public AttributeSet getAttributes(int start, int end)`: This method returns the AttributeSet of the specified range in this AttributedString.

4. `public int getRunLimit()`: This method returns the maximum number of runs in this AttributedString.

5. `public int getRunStart(int start, int end)`: This method returns the start index of the run that contains the specified index.
================================================================

Sample: 3 Bidi
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class This class implements the Unicode Bidirectional Algorithm.

@@ Instruction
I want to use java.text.Bidi package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Bidi.getRunDirection(int start, int limit)`: This method returns the direction of the run of characters in the specified range.
2. `Bidi.reorderVisual(char[] text, int start, int limit)`: This method reorders the characters in the specified range according to the visual order.
3. `Bidi.reorderLogical(char[] text, int start, int limit)`: This method reorders the characters in the specified range according to the logical order.
4. `Bidi.reorderInVisualContext(char[] text, int start, int limit)`: This method reorders the characters in the specified range according to the visual order, taking into account the context of the characters before and after the range.
5. `Bidi.reorderInLogicalContext(char[] text, int start, int limit)`: This method reorders the characters in the specified range according to the logical order, taking into account the context of the characters before and after the range.
================================================================

Sample: 4 BreakIterator
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class The BreakIterator class implements methods for finding the location of boundaries in text.

@@ Instruction
I want to use java.text.BreakIterator package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int first()`: Returns the offset to the first character following the last boundary found by the last call to next.
2. `public int following(int offset)`: Returns the offset to the character following the specified offset.
3. `public int last()`: Returns the offset to the last character in the text.
4. `public int next(int offset)`: Returns the offset to the next boundary after the specified offset.
5. `public int previous()`: Returns the offset to the previous boundary.
================================================================

Sample: 5 ChoiceFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class A ChoiceFormat allows you to attach a format to a range of numbers.

@@ Instruction
I want to use java.text.ChoiceFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ChoiceFormat(String pattern)`: This constructor creates a ChoiceFormat object that uses the specified pattern.

2. `String format(double[] limits, String[] formats, String result)`: This method formats the specified number according to the specified pattern.

3. `String format(double number)`: This method formats the specified number according to the pattern used to create this ChoiceFormat object.

4. `String toPattern()`: This method returns the pattern used to create this ChoiceFormat object.

5. `double[] getLimits()`: This method returns the limits used to create this ChoiceFormat object.
================================================================

Sample: 6 CollationElementIterator
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class The CollationElementIterator class is used as an iterator to walk through each character of an international string.

@@ Instruction
I want to use java.text.CollationElementIterator package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `int getMaxExpansion()`: This method returns the maximum expansion factor for the collation elements.
2. `int getOffset()`: This method returns the current offset.
3. `int getLimit()`: This method returns the current limit.
4. `boolean hasNext()`: This method returns true if the iteration has more elements.
5. `CollationElement next()`: This method returns the next collation element in the iteration.
6. `void setOffset(int newOffset)`: This method sets the current offset.
7. `void setLimit(int newLimit)`: This method sets the current limit.
8. `void reset()`: This method resets the CollationElementIterator to its initial state.
9. `void setText(String newText)`: This method sets the text to be iterated.
10. `String getText()`: This method returns the text being iterated.
================================================================

Sample: 7 CollationKey
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class A CollationKey represents a String under the rules of a specific Collator object.

@@ Instruction
I want to use java.text.CollationKey package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `CollationKey getCollationKey()`: This method returns the CollationKey object.
2. `int compareTo(CollationKey key)`: This method compares this CollationKey object with the specified CollationKey object.
3. `int hashCode()`: This method returns the hash code value for this CollationKey object.
4. `boolean equals(Object obj)`: This method compares this CollationKey object with the specified object.
5. `String toString()`: This method returns a string representation of the CollationKey object.
================================================================

Sample: 8 Collator
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class The Collator class performs locale-sensitive String comparison.

@@ Instruction
I want to use java.text.Collator package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `int compare(String s1, String s2)`: This method compares two strings lexicographically.
2. `int compare(Object o1, Object o2)`: This method compares two objects lexicographically.
3. `int compare(String source, String target)`: This method compares two strings lexicographically.
4. `int compare(String source, String target, int sourceIndex, int targetIndex, int sourceCount, int targetCount)`: This method compares two strings lexicographically.
5. `int hashCode()`: This method returns the hash code value for this collator.
================================================================

Sample: 9 DateFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class DateFormat is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner.

@@ Instruction
I want to use java.text.DateFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public final String format(Date date)`: This method formats a Date into a date-time string.

2. `public Date parse(String source) throws ParseException`: This method parses the specified string into a Date.

3. `public final void setTimeZone(TimeZone value)`: This method sets the time zone to be used for formatting and parsing.

4. `public final void setLenient(boolean lenient)`: This method sets whether date/time interpretation is lenient.

5. `public final boolean isLenient()`: This method returns whether date/time interpretation is lenient.
================================================================

Sample: 10 DateFormat.Field
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from DateFormat.formatToCharacterIterator and as field identifiers in FieldPosition.

@@ Instruction
I want to use java.text.DateFormat.Field package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)`: This method formats the given date into a string buffer.

2. `public Date parse(String source, ParsePosition pos)`: This method parses the given string into a date.

3. `public Date parse(String source)`: This method parses the given string into a date.

4. `public String format(Date date)`: This method formats the given date into a string.

5. `public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)`: This method formats the given date into a string buffer.
================================================================

Sample: 11 DateFormatSymbols
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class DateFormatSymbols is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data.

@@ Instruction
I want to use java.text.DateFormatSymbols package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getEras()`: Returns an array of strings representing the eras.
2. `getMonths()`: Returns an array of strings representing the names of the months.
3. `getShortMonths()`: Returns an array of strings representing the abbreviated names of the months.
4. `getShortWeekdays()`: Returns an array of strings representing the abbreviated names of the days of the week.
5. `getWeekdays()`: Returns an array of strings representing the names of the days of the week.
================================================================

Sample: 12 DecimalFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class DecimalFormat is a concrete subclass of NumberFormat that formats decimal numbers.

@@ Instruction
I want to use java.text.DecimalFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DecimalFormat(String pattern)`: This constructor creates a DecimalFormat object that formats decimal numbers according to the given pattern.

2. `String format(double number)`: This method formats the given double value according to this format's pattern.

3. `String format(long number)`: This method formats the given long value according to this format's pattern.

4. `Number parse(String source)`: This method parses the string source, interpreting it as a number.

5. `Number parse(String source, ParsePosition parsePosition)`: This method parses the string source starting at the given position, interpreting it as a number.
================================================================

Sample: 13 DecimalFormatSymbols
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by DecimalFormat to format numbers.

@@ Instruction
I want to use java.text.DecimalFormatSymbols package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DecimalFormatSymbols()`: This is the constructor of the DecimalFormatSymbols class.

2. `void setDecimalSeparator(char newValue)`: This method sets the decimal separator.

3. `char getDecimalSeparator()`: This method returns the decimal separator.

4. `void setGroupingSeparator(char newValue)`: This method sets the grouping separator.

5. `char getGroupingSeparator()`: This method returns the grouping separator.

6. `void setPerMill(char newValue)`: This method sets the per-mill character.

7. `char getPerMill()`: This method returns the per-mill character.

8. `void setZeroDigit(char newValue)`: This method sets the zero digit character.

9. `char getZeroDigit()`: This method returns the zero digit character.

10. `void setDigit(char newValue)`: This method sets the digit character.

11. `char getDigit()`: This method returns the digit character.

12. `void setMinusSign(char newValue)`: This method sets the minus sign character.

13. `char getMinusSign()`: This method returns the minus sign character.

14. `void setPatternSeparator(char newValue)`: This method sets the pattern separator character.

15. `char getPatternSeparator()`: This method returns the pattern separator character.

16. `void setCurrencySymbol(String newValue)`: This method sets the currency symbol.

17. `String getCurrencySymbol()`: This method returns the currency symbol.

18. `void setMonetaryDecimalSeparator(char newValue)`: This method sets the monetary decimal separator.

19. `char getMonetaryDecimalSeparator()`: This method returns the monetary decimal separator.

20. `void setExponentSeparator(String newValue)`: This method sets the exponent separator.

21. `String getExponentSeparator()`: This method returns the exponent separator.

22. `void setPercent(char newValue)`: This method sets the percent character.

23. `char getPercent()`: This method returns the percent character.

24. `void setNaNSymbol(String newValue)`: This method sets the NaN symbol.

25. `String getNaNSymbol()`: This method returns the NaN symbol.

26. `void setInfinitySymbol(String newValue)`: This method sets the infinity symbol.

27. `String getInfinitySymbol()`: This method returns the infinity symbol.
================================================================

Sample: 14 FieldPosition
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class FieldPosition is a simple class used by Format and its subclasses to identify fields in formatted output.

@@ Instruction
I want to use java.text.FieldPosition package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int getBeginIndex()`: This method returns the index of the first character of the field.
2. `public int getEndIndex()`: This method returns the index of the first character after the field.
3. `public void setBeginIndex(int newBegin)`: This method sets the index of the first character of the field.
4. `public void setEndIndex(int newEnd)`: This method sets the index of the first character after the field.
5. `public void setFieldWidth(int newWidth)`: This method sets the width of the field.
================================================================

Sample: 15 Format
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class Format is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers.

@@ Instruction
I want to use java.text.Format package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `String format(Object obj)`: This method formats the given object and returns the formatted string.

2. `StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given object and appends the result to the given string buffer.

3. `String format(Object obj, Formatter formatter)`: This method formats the given object and returns the formatted string.

4. `String format(Object obj, Formatter formatter, FieldPosition pos)`: This method formats the given object and appends the result to the given string buffer.

5. `String format(Object obj, Formatter formatter, FieldPosition pos, ObjectBuffer buffer)`: This method formats the given object and appends the result to the given string buffer.
================================================================

Sample: 16 Format.Field
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from Format.formatToCharacterIterator and as field identifiers in FieldPosition.

@@ Instruction
I want to use java.text.Format.Field package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given object and appends the result to the given string buffer.

2. `public String format(Object obj)`: This method formats the given object and returns the result as a string.

3. `public StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given long value and appends the result to the given string buffer.

4. `public String format(long number)`: This method formats the given long value and returns the result as a string.

5. `public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given double value and appends the result to the given string buffer.

6. `public String format(double number)`: This method formats the given double value and returns the result as a string.

7. `public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given object and appends the result to the given string buffer.

8. `public String format(Object obj)`: This method formats the given object and returns the result as a string.

9. `public StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given long value and appends the result to the given string buffer.

10. `public String format(long number)`: This method formats the given long value and returns the result as a string.

11. `public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos)`: This method formats the given double value and appends the result to the given string buffer.

12. `public String format(double number)`: This method formats the given double value and returns the result as a string.
================================================================

Sample: 17 MessageFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class MessageFormat provides a means to produce concatenated messages in a language-neutral way.

@@ Instruction
I want to use java.text.MessageFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public String format(Object... args)`: This method formats the message using the specified arguments.

2. `public String format(Object[] args)`: This method formats the message using the specified arguments.

3. `public String format(Object arg0, Object arg1, Object... arg2)`: This method formats the message using the specified arguments.

4. `public StringBuffer format(StringBuffer toAppendTo, Object... args)`: This method formats the message using the specified arguments and appends the result to the end of the specified StringBuffer.

5. `public StringBuffer format(StringBuffer toAppendTo, Object[] args)`: This method formats the message using the specified arguments and appends the result to the end of the specified StringBuffer.
================================================================

Sample: 18 MessageFormat.Field
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from MessageFormat.formatToCharacterIterator.

@@ Instruction
I want to use java.text.MessageFormat.Field package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public static AttributedCharacterIterator formatToCharacterIterator(String pattern, Object... arguments)`: This method formats the specified arguments according to the specified pattern and returns an AttributedCharacterIterator.

2. `public static String format(String pattern, Object... arguments)`: This method formats the specified arguments according to the specified pattern and returns the resulting string.

3. `public static String format(Locale locale, String pattern, Object... arguments)`: This method formats the specified arguments according to the specified pattern and locale and returns the resulting string.

4. `public static String format(String pattern, Object arg0, Object arg1, Object... arguments)`: This method formats the specified arguments according to the specified pattern and returns the resulting string.

5. `public static String format(Locale locale, String pattern, Object arg0, Object arg1, Object... arguments)`: This method formats the specified arguments according to the specified pattern and locale and returns the resulting string.
================================================================

Sample: 19 Normalizer
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class This class provides the method normalize which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text.

@@ Instruction
I want to use java.text.Normalizer package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `String normalize(String src, Form form)`: This method normalizes the input string according to the specified form.

2. `String[] split(String src, int limit)`: This method splits the input string into an array of strings.

3. `String strip(String src)`: This method removes leading and trailing whitespace from the input string.

4. `String toLowerCase(Locale locale)`: This method converts the input string to lowercase.

5. `String toUpperCase(Locale locale)`: This method converts the input string to uppercase.
================================================================

Sample: 20 NumberFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class NumberFormat is the abstract base class for all number formats.

@@ Instruction
I want to use java.text.NumberFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `NumberFormat getInstance()`: This method returns a NumberFormat instance for the default locale.

2. `NumberFormat getInstance(Locale locale)`: This method returns a NumberFormat instance for the specified locale.

3. `String format(double number)`: This method formats the given double number.

4. `String format(long number)`: This method formats the given long number.

5. `Number parse(String source)`: This method parses the given string source to a number.
================================================================

Sample: 21 NumberFormat.Field
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from NumberFormat.formatToCharacterIterator and as field identifiers in FieldPosition.

@@ Instruction
I want to use java.text.NumberFormat.Field package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `NumberFormat.Field getFieldAttribute(String fieldName)`: This method returns the Field object associated with the specified field name.

2. `FieldPosition[] getFieldPositions()`: This method returns an array of FieldPosition objects.

3. `NumberFormat.Field[] getFields()`: This method returns an array of Field objects.

4. `NumberFormat.Field getIntegerField()`: This method returns the Field object associated with the integer field.

5. `NumberFormat.Field getNumberField()`: This method returns the Field object associated with the number field.

6. `NumberFormat.Field getPercentField()`: This method returns the Field object associated with the percent field.

7. `NumberFormat.Field getZeroDigitField()`: This method returns the Field object associated with the zero digit field.

8. `NumberFormat.Field getCurrencyField()`: This method returns the Field object associated with the currency field.

9. `NumberFormat.Field getFractionField()`: This method returns the Field object associated with the fraction field.

10. `NumberFormat.Field getExponentField()`: This method returns the Field object associated with the exponent field.

11. `NumberFormat.Field getGroupingField()`: This method returns the Field object associated with the grouping field.

12. `NumberFormat.Field getPatternField()`: This method returns the Field object associated with the pattern field.

13. `NumberFormat.Field getSignField()`: This method returns the Field object associated with the sign field.

14. `NumberFormat.Field getTypeField()`: This method returns the Field object associated with the type field.

15. `NumberFormat.Field getUnitField()`: This method returns the Field object associated with the unit field.

16. `NumberFormat.Field getValueField()`: This method returns the Field object associated with the value field.

17. `NumberFormat.Field getCurrency()`: This method returns the Field object associated with the currency field.

18. `NumberFormat.Field getInteger()`: This method returns the Field object associated with the integer field.

19. `NumberFormat.Field getNumber()`: This method returns the Field object associated with the number field.

20. `NumberFormat.Field getPercent()`: This method returns the Field object associated with the percent field.

21. `NumberFormat.Field getZeroDigit()`: This method returns the Field object associated with the zero digit field.

22. `NumberFormat.Field getFraction()`: This method returns the Field object associated with the fraction field.

23. `NumberFormat.Field getExponent()`: This method returns the Field object associated with the exponent field.

24. `NumberFormat.Field getGrouping()`: This method returns the Field object associated with the grouping field.

25. `NumberFormat.Field getPattern()`: This method returns the Field object associated with the pattern field.

26. `NumberFormat.Field getSign()`: This method returns the Field object associated with the sign field.

27. `NumberFormat.Field getType()`: This method returns the Field object associated with the type field.

28. `NumberFormat.Field getUnit()`: This method returns the Field object associated with the unit field.

29. `NumberFormat.Field getValue()`: This method returns the Field object associated with the value field.
================================================================

Sample: 22 ParsePosition
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class ParsePosition is a simple class used by Format and its subclasses to keep track of the current position during parsing.

@@ Instruction
I want to use java.text.ParsePosition package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public int getErrorIndex()`: This method returns the index within the source string of the character following the last character parsed successfully, or -1 if the end of the string has been reached.

2. `public void setErrorIndex(int errorIndex)`: This method sets the index within the source string of the character following the last character parsed successfully.

3. `public void setIndex(int newIndex)`: This method sets the current parsing position.

4. `public int getIndex()`: This method returns the current parsing position.

5. `public void setErrorIndex(int errorIndex)`: This method sets the index within the source string of the character following the last character parsed successfully.
================================================================

Sample: 23 RuleBasedCollator
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class The RuleBasedCollator class is a concrete subclass of Collator that provides a simple, data-driven, table collator.

@@ Instruction
I want to use java.text.RuleBasedCollator package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `int compare(String source, String target)`: This method compares two strings lexicographically.
2. `int compare(Object o1, Object o2)`: This method compares two objects lexicographically.
3. `int getCollationKey(String source).getSourceString()`: This method returns the source string used to create the collation key.
4. `int getCollationKey(String source).getWeight(int weight)`: This method returns the weight of the specified character.
5. `int getCollationKey(String source).getMaximumLength()`: This method returns the maximum length of the collation key.
6. `int getCollationKey(String source).getSourceString()`: This method returns the source string used to create the collation key.
7. `int getCollationKey(String source).getWeight(int weight)`: This method returns the weight of the specified character.
8. `int getCollationKey(String source).getMaximumLength()`: This method returns the maximum length of the collation key.
9. `int getCollationKey(String source).getSourceString()`: This method returns the source string used to create the collation key.
10. `int getCollationKey(String source).getWeight(int weight)`: This method returns the weight of the specified character.
11. `int getCollationKey(String source).getMaximumLength()`: This method returns the maximum length of the collation key.
12. `int getCollationKey(String source).getSourceString()`: This method returns the source string used to create the collation key.
13. `int getCollationKey(String source).getWeight(int weight)`: This method returns the weight of the specified character.
14. `int getCollationKey(String source).getMaximumLength()`: This method returns the maximum length of the collation key.
15. `int getCollationKey(String source).getSourceString()`: This method returns the source string used to create the collation key.
16. `int getCollationKey(String source).getWeight(int weight)`: This method returns the weight of the specified character.
17. `int getCollationKey(String source).getMaximumLength()`: This method returns the maximum length of the collation key.
18. `int getCollationKey(String source).getSourceString()`: This method returns the source string used to create the collation key.
19. `int getCollationKey(String source).getWeight(int weight)`: This method returns the weight of the specified character.
20. `int getCollationKey(String source).getMaximumLength()`: This method returns the maximum length of the collation key.
================================================================

Sample: 24 SimpleDateFormat
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class SimpleDateFormat is a concrete class for formatting and parsing dates in a locale-sensitive manner.

@@ Instruction
I want to use java.text.SimpleDateFormat package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `public final String format(Date date)`: This method formats a Date into a date/time string.

2. `public final Date parse(String source)`: This method parses the specified string into a Date.

3. `public final void applyPattern(String pattern)`: This method sets the date format to the specified pattern string.

4. `public final String toPattern()`: This method returns the pattern string of this date format.

5. `public final boolean isLenient()`: This method returns whether or not date/time interpretation is lenient.
================================================================

Sample: 25 StringCharacterIterator
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for handling text, dates, numbers, and messagesin a manner independent of natural languages.
Here is the description of the class StringCharacterIterator implements the CharacterIterator protocol for a String.

@@ Instruction
I want to use java.text.StringCharacterIterator package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `char first()`: Returns the first character in the string.
2. `char last()`: Returns the last character in the string.
3. `char current()`: Returns the current character.
4. `char next()`: Returns the next character and advances the current position.
5. `char previous()`: Returns the previous character and moves the current position back.
6. `char setIndex(int position)`: Sets the current position to the specified position.
7. `int getBeginIndex()`: Returns the beginning index of the string.
8. `int getEndIndex()`: Returns the ending index of the string.
9. `int getIndex()`: Returns the current position.
10. `Object clone()`: Returns a clone of this object.
11. `boolean equals(Object obj)`: Compares this object to the specified object.
12. `int hashCode()`: Returns a hash code value for the object.
13. `String toString()`: Returns a string representation of the object.
================================================================

