Sample: BreakIterator_1
----------------------------------------------------------------
stdout:
First boundary: 0

================================================================

Sample: BreakIterator_2
----------------------------------------------------------------
stdout:
Hello
,
 
world
!
 
This
 
is
 
a
 
test
.

================================================================

Sample: BreakIterator_3
----------------------------------------------------------------
stdout:
The last boundary is at index: 29

================================================================

Sample: BreakIterator_4
----------------------------------------------------------------
stdout:
Hello
,
 
world
!
 
This
 
is
 
a
 
test
.

================================================================

Sample: BreakIterator_5
----------------------------------------------------------------
stdout:
Hello
,
 
world
!
 
This
 
is
 
a
 
test
.
Previous word: .

================================================================

Sample: CollationElementIterator_2
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_2.java:9: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator(text);
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
./Data/java_text/javaFiles/CollationElementIterator_2.java:11: error: cannot find symbol
        if (iterator.hasNext()) {
                    ^
  symbol:   method hasNext()
  location: variable iterator of type CollationElementIterator
2 errors


================================================================

Sample: CollationElementIterator_6
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_6.java:9: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator(text);
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
1 error


================================================================

Sample: CollationElementIterator_8
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_8.java:9: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator(str);
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
./Data/java_text/javaFiles/CollationElementIterator_8.java:11: error: cannot find symbol
        if (iterator.next() == CollationElementIterator.WORD_BOUNDARY) {
                                                       ^
  symbol:   variable WORD_BOUNDARY
  location: class CollationElementIterator
2 errors


================================================================

Sample: CollationElementIterator_9
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_9.java:8: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator("Hello");
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
./Data/java_text/javaFiles/CollationElementIterator_9.java:9: error: cannot find symbol
        while (iterator.next()!= CollationElementIterator.DONE) {
                                                         ^
  symbol:   variable DONE
  location: class CollationElementIterator
./Data/java_text/javaFiles/CollationElementIterator_9.java:10: error: cannot find symbol
            System.out.println(iterator.getRuleStatus());
                                       ^
  symbol:   method getRuleStatus()
  location: variable iterator of type CollationElementIterator
3 errors


================================================================

Sample: CollationKey_2
----------------------------------------------------------------
stdout:
Hello is less than World

================================================================

Sample: Collator_1
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Collator_2
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Collator_3
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Collator_5
----------------------------------------------------------------
stdout:
Hash code: 681002966

================================================================

Sample: DateFormat_2
----------------------------------------------------------------
stderr:
java.text.ParseException: Unparseable date: "2022-01-01"
	at java.base/java.text.DateFormat.parse(DateFormat.java:399)
	at DateFormat_2.main(DateFormat_2.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: DecimalFormat_5
----------------------------------------------------------------
stdout:
123.456

================================================================

Sample: DecimalFormatSymbols_2
----------------------------------------------------------------
stdout:
.

================================================================

Sample: DecimalFormatSymbols_3
----------------------------------------------------------------
stdout:
The decimal separator is: .

================================================================

Sample: DecimalFormatSymbols_4
----------------------------------------------------------------
stdout:
,

================================================================

Sample: DecimalFormatSymbols_5
----------------------------------------------------------------
stdout:
Grouping Separator: ,

================================================================

Sample: DecimalFormatSymbols_6
----------------------------------------------------------------
stdout:
‰

================================================================

Sample: DecimalFormatSymbols_7
----------------------------------------------------------------
stdout:
Per mille sign: ‰

================================================================

Sample: DecimalFormatSymbols_8
----------------------------------------------------------------
================================================================

Sample: DecimalFormatSymbols_9
----------------------------------------------------------------
stdout:
Zero digit: 0

================================================================

Sample: DecimalFormatSymbols_10
----------------------------------------------------------------
stdout:
*

================================================================

Sample: DecimalFormatSymbols_11
----------------------------------------------------------------
stdout:
The character used for a digit in a pattern is: #

================================================================

Sample: DecimalFormatSymbols_12
----------------------------------------------------------------
================================================================

Sample: DecimalFormatSymbols_13
----------------------------------------------------------------
stdout:
Minus sign: -

================================================================

Sample: DecimalFormatSymbols_14
----------------------------------------------------------------
stdout:
-

================================================================

Sample: DecimalFormatSymbols_15
----------------------------------------------------------------
stdout:
Pattern Separator: ;

================================================================

Sample: DecimalFormatSymbols_16
----------------------------------------------------------------
stdout:
$

================================================================

Sample: DecimalFormatSymbols_17
----------------------------------------------------------------
stdout:
Currency Symbol: $

================================================================

Sample: DecimalFormatSymbols_18
----------------------------------------------------------------
================================================================

Sample: DecimalFormatSymbols_19
----------------------------------------------------------------
stdout:
Monetary Decimal Separator: .

================================================================

Sample: DecimalFormatSymbols_20
----------------------------------------------------------------
stdout:
E

================================================================

Sample: DecimalFormatSymbols_21
----------------------------------------------------------------
stdout:
Exponent Separator: e

================================================================

Sample: DecimalFormatSymbols_22
----------------------------------------------------------------
================================================================

Sample: DecimalFormatSymbols_23
----------------------------------------------------------------
stdout:
Percent sign: %

================================================================

Sample: FieldPosition_1
----------------------------------------------------------------
stdout:
The begin index is: 0

================================================================

Sample: FieldPosition_2
----------------------------------------------------------------
stdout:
The end index is: 0

================================================================

Sample: FieldPosition_3
----------------------------------------------------------------
stdout:
Begin Index: 5

================================================================

Sample: FieldPosition_4
----------------------------------------------------------------
stdout:
End Index: 10

================================================================

Sample: Format_1
----------------------------------------------------------------
stdout:
21/08/2024 09:31:15

================================================================

Sample: Format_2
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: NumberFormat_1
----------------------------------------------------------------
stdout:
1,234,567.89

================================================================

Sample: NumberFormat_2
----------------------------------------------------------------
stdout:
java.text.DecimalFormat@674dc

================================================================

Sample: NumberFormat_3
----------------------------------------------------------------
stdout:
123,456.789

================================================================

Sample: NumberFormat_4
----------------------------------------------------------------
stdout:
1,234,567,890

================================================================

Sample: NumberFormat_5
----------------------------------------------------------------
stdout:
123.45

================================================================

Sample: ParsePosition_1
----------------------------------------------------------------
stdout:
Error index: 5

================================================================

Sample: ParsePosition_2
----------------------------------------------------------------
stdout:
Error index: 5

================================================================

Sample: ParsePosition_3
----------------------------------------------------------------
stdout:
Current parse position: 5

================================================================

Sample: ParsePosition_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/ParsePosition_4.java:10: error: incompatible types: ParsePosition cannot be converted to int
        int result = Integer.parseInt(str, 10, pos, null);
                                               ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ParsePosition_5
----------------------------------------------------------------
stdout:
Error index: 5

================================================================

Sample: RuleBasedCollator_1
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/RuleBasedCollator_1.java:6: error: cannot find symbol
        RuleBasedCollator collator = (RuleBasedCollator) Collator.getInstance(new Locale("en", "US"));
                                                         ^
  symbol:   variable Collator
  location: class RuleBasedCollator_1
1 error


================================================================

Sample: StringCharacterIterator_1
----------------------------------------------------------------
stdout:
H

================================================================

Sample: StringCharacterIterator_2
----------------------------------------------------------------
stdout:
The last character is: o

================================================================

Sample: StringCharacterIterator_3
----------------------------------------------------------------
stdout:
H

================================================================

Sample: StringCharacterIterator_4
----------------------------------------------------------------
stdout:
e
l
l
o
,
 
W
o
r
l
d
!

================================================================

Sample: StringCharacterIterator_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/StringCharacterIterator_5.java:5: error: no suitable constructor found for StringCharacterIterator(String,int,int)
        StringCharacterIterator iterator = new StringCharacterIterator("Hello, World!", 0, "Hello, World!".length());
                                           ^
    constructor StringCharacterIterator.StringCharacterIterator(String) is not applicable
      (actual and formal argument lists differ in length)
    constructor StringCharacterIterator.StringCharacterIterator(String,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor StringCharacterIterator.StringCharacterIterator(String,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: StringCharacterIterator_6
----------------------------------------------------------------
stdout:
Character at position 5 is: ,

================================================================

Sample: StringCharacterIterator_7
----------------------------------------------------------------
stdout:
Begin index: 0

================================================================

Sample: StringCharacterIterator_8
----------------------------------------------------------------
stdout:
The end index is: 13

================================================================

Sample: StringCharacterIterator_9
----------------------------------------------------------------
stdout:
0

================================================================

Sample: StringCharacterIterator_10
----------------------------------------------------------------
stdout:
Original iterator: java.text.StringCharacterIterator@5955b818
Cloned iterator: java.text.StringCharacterIterator@5955b818

================================================================

Sample: StringCharacterIterator_11
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: StringCharacterIterator_12
----------------------------------------------------------------
stdout:
Hashcode: 69609655

================================================================

