ClassName,Method,Return Type,Description
ParameterBlock,add(byte b),ParameterBlock,Adds a Byte to the list of parameters.
ParameterBlock,add(char c),ParameterBlock,Adds a Character to the list of parameters.
ParameterBlock,add(double d),ParameterBlock,Adds a Double to the list of parameters.
ParameterBlock,add(float f),ParameterBlock,Adds a Float to the list of parameters.
ParameterBlock,add(int i),ParameterBlock,Adds a Integer to the list of parameters.
ParameterBlock,add(long l),ParameterBlock,Adds a Long to the list of parameters.
ParameterBlock,add(Object obj),ParameterBlock,Adds an object to the list of parameters.
ParameterBlock,add(short s),ParameterBlock,Adds a Short to the list of parameters.
ParameterBlock,addSource(Object source),ParameterBlock,Adds an image to end of the list of sources.
ParameterBlock,clone(),Object,Creates a copy of a ParameterBlock.
ParameterBlock,getByteParameter(int index),byte,A convenience method to return a parameter as a byte.
ParameterBlock,getCharParameter(int index),char,A convenience method to return a parameter as a char.
ParameterBlock,getDoubleParameter(int index),double,A convenience method to return a parameter as a double.
ParameterBlock,getFloatParameter(int index),float,A convenience method to return a parameter as a float.
ParameterBlock,getIntParameter(int index),int,A convenience method to return a parameter as an int.
ParameterBlock,getLongParameter(int index),long,A convenience method to return a parameter as a long.
ParameterBlock,getNumParameters(),int,Returns the number of parameters (not including source images).
ParameterBlock,getNumSources(),int,Returns the number of source images.
ParameterBlock,getObjectParameter(int index),Object,Gets a parameter as an object.
ParameterBlock,getParamClasses(),Class[],Returns an array of Class objects describing the types of the parameters.
ParameterBlock,getParameters(),Vector<Object>,Returns the entire Vector of parameters.
ParameterBlock,getRenderableSource(int index),RenderableImage,Returns a source as a RenderableImage.
ParameterBlock,getRenderedSource(int index),RenderedImage,Returns a source as a RenderedImage.
ParameterBlock,getShortParameter(int index),short,A convenience method to return a parameter as a short.
ParameterBlock,getSource(int index),Object,Returns a source as a general Object.
ParameterBlock,getSources(),Vector<Object>,Returns the entire Vector of sources.
ParameterBlock,removeParameters(),void,Clears the list of parameters.
ParameterBlock,removeSources(),void,Clears the list of source images.
ParameterBlock,"set(byte b, int index)",ParameterBlock,Replaces an Object in the list of parameters with a Byte.
ParameterBlock,"set(char c, int index)",ParameterBlock,Replaces an Object in the list of parameters with a Character.
ParameterBlock,"set(double d, int index)",ParameterBlock,Replaces an Object in the list of parameters with a Double.
ParameterBlock,"set(float f, int index)",ParameterBlock,Replaces an Object in the list of parameters with a Float.
ParameterBlock,"set(int i, int index)",ParameterBlock,Replaces an Object in the list of parameters with an Integer.
ParameterBlock,"set(long l, int index)",ParameterBlock,Replaces an Object in the list of parameters with a Long.
ParameterBlock,"set(Object obj, int index)",ParameterBlock,Replaces an Object in the list of parameters.
ParameterBlock,"set(short s, int index)",ParameterBlock,Replaces an Object in the list of parameters with a Short.
ParameterBlock,setParameters(Vector<Object> parameters),void,Sets the entire Vector of parameters to a given Vector.
ParameterBlock,"setSource(Object source, int index)",ParameterBlock,Replaces an entry in the list of source with a new source.
ParameterBlock,setSources(Vector<Object> sources),void,Sets the entire Vector of sources to a given Vector.
ParameterBlock,shallowClone(),Object,Creates a shallow copy of a ParameterBlock.
RenderableImageOp,createDefaultRendering(),RenderedImage,Gets a RenderedImage instance of this image with a default width and height in pixels.
RenderableImageOp,createRendering(RenderContext renderContext),RenderedImage,Creates a RenderedImage which represents this RenderableImageOp (including its Renderable sources) rendered according to the given RenderContext.
RenderableImageOp,"createScaledRendering(int w, int h, RenderingHints hints)",RenderedImage,"Creates a RenderedImage instance of this image with width w, and height h in pixels."
RenderableImageOp,getHeight(),float,Gets the height in user coordinate space.
RenderableImageOp,getMinX(),float,Gets the minimum X coordinate of the rendering-independent image data.
RenderableImageOp,getMinY(),float,Gets the minimum Y coordinate of the rendering-independent image data.
RenderableImageOp,getParameterBlock(),ParameterBlock,Returns a reference to the current parameter block.
RenderableImageOp,getProperty(String name),Object,Gets a property from the property set of this image.
RenderableImageOp,getPropertyNames(),String[],Return a list of names recognized by getProperty.
RenderableImageOp,getSources(),Vector<RenderableImage>,Returns a vector of RenderableImages that are the sources of image data for this RenderableImage.
RenderableImageOp,getWidth(),float,Gets the width in user coordinate space.
RenderableImageOp,isDynamic(),boolean,"Returns true if successive renderings (that is, calls to createRendering() or createScaledRendering()) with the same arguments may produce different results."
RenderableImageOp,setParameterBlock(ParameterBlock paramBlock),ParameterBlock,"Change the current ParameterBlock of the operation, allowing editing of image rendering chains."
RenderableImageProducer,addConsumer(ImageConsumer ic),void,Adds an ImageConsumer to the list of consumers interested in data for this image.
RenderableImageProducer,isConsumer(ImageConsumer ic),boolean,Determine if an ImageConsumer is on the list of consumers currently interested in data for this image.
RenderableImageProducer,removeConsumer(ImageConsumer ic),void,Remove an ImageConsumer from the list of consumers interested in data for this image.
RenderableImageProducer,requestTopDownLeftRightResend(ImageConsumer ic),void,"Requests that a given ImageConsumer have the image data delivered one more time in top-down, left-right order."
RenderableImageProducer,run(),void,The runnable method for this class.
RenderableImageProducer,setRenderContext(RenderContext rc),void,Sets a new RenderContext to use for the next startProduction() call.
RenderableImageProducer,startProduction(ImageConsumer ic),void,"Adds an ImageConsumer to the list of consumers interested in data for this image, and immediately starts delivery of the image data through the ImageConsumer interface."
RenderContext,clone(),Object,Makes a copy of a RenderContext.
RenderContext,concatenateTransform(AffineTransform modTransform),void,Modifies the current user-to-device transform by appending another transform.
RenderContext,concetenateTransform(AffineTransform modTransform),void,Deprecated. replaced by concatenateTransform(AffineTransform).
RenderContext,getAreaOfInterest(),Shape,Gets the ares of interest currently contained in the RenderContext.
RenderContext,getRenderingHints(),RenderingHints,Gets the rendering hints of this RenderContext.
RenderContext,getTransform(),AffineTransform,Gets the current user-to-device AffineTransform.
RenderContext,preConcatenateTransform(AffineTransform modTransform),void,Modifies the current user-to-device transform by prepending another transform.
RenderContext,preConcetenateTransform(AffineTransform modTransform),void,Deprecated. replaced by preConcatenateTransform(AffineTransform).
RenderContext,setAreaOfInterest(Shape newAoi),void,Sets the current area of interest.
RenderContext,setRenderingHints(RenderingHints hints),void,Sets the rendering hints of this RenderContext.
RenderContext,setTransform(AffineTransform newTransform),void,Sets the current user-to-device AffineTransform contained in the RenderContext to a given transform.
