Sample: 0 DESedeKeySpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies a DES-EDE ("triple-DES") key.

@@ Instruction
I want to use javax.crypto.spec.DESedeKeySpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DESedeKeySpec(byte[] key, int offset, int len)`: This constructor creates a new DESedeKeySpec with the specified key data.

2. `byte[] getKey()`: This method returns the key data.

3. `int getKeyLength()`: This method returns the length of the key in bytes.

4. `int getAlgorithmParameterSpecType()`: This method returns the type of the algorithm parameter specification.

5. `AlgorithmParameterSpec getAlgorithmParameterSpec()`: This method returns the algorithm parameter specification.

6. `AlgorithmParameterSpec getAlgorithmParameterSpec(String type)`: This method returns the algorithm parameter specification of the specified type.

7. `AlgorithmParameterSpec getAlgorithmParameterSpec(Class<? extends AlgorithmParameterSpec> type)`: This method returns the algorithm parameter specification of the specified type.

8. `AlgorithmParameterSpec getAlgorithmParameterSpec(String type, String provider)`: This method returns the algorithm parameter specification of the specified type and provider.

9. `AlgorithmParameterSpec getAlgorithmParameterSpec(Class<? extends AlgorithmParameterSpec> type, String provider)`: This method returns the algorithm parameter specification of the specified type and provider.

10. `AlgorithmParameterSpec getAlgorithmParameterSpec(String type, Provider provider)`: This method returns the algorithm parameter specification of the specified type and provider.

11. `AlgorithmParameterSpec getAlgorithmParameterSpec(Class<? extends AlgorithmParameterSpec> type, Provider provider)`: This method returns the algorithm parameter specification of the specified type and provider.
================================================================

Sample: 1 DESKeySpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies a DES key.

@@ Instruction
I want to use javax.crypto.spec.DESKeySpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DESKeySpec(byte[] key, int offset, int len)`: This constructor creates a DESKeySpec object from the given byte array.

2. `byte[] getKey()`: This method returns the key.

3. `int getKeyLength()`: This method returns the length of the key.

4. `int getOffset()`: This method returns the offset.

5. `int getLength()`: This method returns the length.
================================================================

Sample: 2 DHGenParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement.

@@ Instruction
I want to use javax.crypto.spec.DHGenParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DHGenParameterSpec(int keySize, PrimeField field)`: This constructor creates a new DHGenParameterSpec with the specified key size and prime field.

2. `DHGenParameterSpec(int keySize, PrimeField field, BigInteger p, BigInteger g)`: This constructor creates a new DHGenParameterSpec with the specified key size, prime field, prime number p, and generator g.

3. `int getKeySize()`: This method returns the key size.

4. `PrimeField getField()`: This method returns the prime field.

5. `BigInteger getP()`: This method returns the prime number p.

6. `BigInteger getG()`: This method returns the generator g.
================================================================

Sample: 3 DHParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the set of parameters used with the Diffie-Hellman algorithm, as specified in PKCS #3: Diffie-Hellman Key-Agreement Standard.

@@ Instruction
I want to use javax.crypto.spec.DHParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DHParameterSpec(BigInteger p, BigInteger g)`: This constructor creates a new DHParameterSpec with the specified prime and base.

2. `BigInteger getP()`: Returns the prime modulus.

3. `BigInteger getG()`: Returns the base.

4. `int getL()`: Returns the length in bits of the prime modulus.

5. `void setL(int l)`: Sets the length in bits of the prime modulus.

6. `void setP(BigInteger p)`: Sets the prime modulus.

7. `void setG(BigInteger g)`: Sets the base.

8. `boolean equals(Object obj)`: Compares this DHParameterSpec with the specified object.

9. `int hashCode()`: Returns a hash code for this DHParameterSpec.

10. `String toString()`: Returns a string representation of this DHParameterSpec.
================================================================

Sample: 4 DHPrivateKeySpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies a Diffie-Hellman private key with its associated parameters.

@@ Instruction
I want to use javax.crypto.spec.DHPrivateKeySpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DHPrivateKeySpec(BigInteger x, DHParameterSpec params)`: This constructor creates a new DHPrivateKeySpec with the specified private value and DH parameter set.

2. `BigInteger getX()`: This method returns the private value for this private key.

3. `DHParameterSpec getParams()`: This method returns the DH parameter set for this private key.

4. `int hashCode()`: This method returns the hash code value for this object.

5. `boolean equals(Object obj)`: This method compares this DHPrivateKeySpec with the specified object for equality.
================================================================

Sample: 5 DHPublicKeySpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies a Diffie-Hellman public key with its associated parameters.

@@ Instruction
I want to use javax.crypto.spec.DHPublicKeySpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `DHPublicKeySpec(BigInteger y, BigInteger p, BigInteger g)`: This constructor creates a new DHPublicKeySpec with the specified parameters.

2. `BigInteger getG()`: This method returns the value of the public key parameter g.

3. `BigInteger getP()`: This method returns the value of the public key parameter p.

4. `BigInteger getY()`: This method returns the value of the public key parameter y.

5. `int hashCode()`: This method returns the hash code value for this DHPublicKeySpec.

6. `boolean equals(Object obj)`: This method compares this DHPublicKeySpec with the specified object for equality.

7. `String toString()`: This method returns a string representation of this DHPublicKeySpec.
================================================================

Sample: 6 GCMParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class Specifies the set of parameters required by a Cipher using the Galois/Counter Mode (GCM) mode.

@@ Instruction
I want to use javax.crypto.spec.GCMParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `GCMParameterSpec(int tLen, byte[] iv)`: This constructor creates a new GCMParameterSpec with the specified tag length and initialization vector.

2. `byte[] getIV()`: This method returns the initialization vector.

3. `int getTLen()`: This method returns the tag length.

4. `boolean equals(Object obj)`: This method compares this GCMParameterSpec with the specified object.

5. `int hashCode()`: This method returns the hash code value for this GCMParameterSpec.
================================================================

Sample: 7 IvParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies an initialization vector (IV).

@@ Instruction
I want to use javax.crypto.spec.IvParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `IvParameterSpec(byte[] iv)`: This constructor creates an IvParameterSpec with the specified initialization vector.

2. `byte[] getIV()`: This method returns the initialization vector.

3. `int hashCode()`: This method returns the hash code value for this object.

4. `boolean equals(Object obj)`: This method compares this IvParameterSpec with the specified object.

5. `String toString()`: This method returns a string representation of this IvParameterSpec.
================================================================

Sample: 8 OAEPParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the set of parameters used with OAEP Padding, as defined in the PKCS#1 v2.2 standard.

@@ Instruction
I want to use javax.crypto.spec.OAEPParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `OAEPParameterSpec(String mgfAlgorithm, String maskAlgorithm, int maskLength)`: This constructor creates a new OAEPParameterSpec with the specified mask generation function (MGF) algorithm, mask algorithm, and mask length.

2. `String getMGFAlgorithm()`: This method returns the mask generation function (MGF) algorithm.

3. `String getMaskAlgorithm()`: This method returns the mask algorithm.

4. `int getMaskLength()`: This method returns the mask length.

5. `boolean equals(Object obj)`: This method compares this OAEPParameterSpec with the specified object for equality.

6. `int hashCode()`: This method returns the hash code value for this OAEPParameterSpec.
================================================================

Sample: 9 PBEKeySpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class A user-chosen password that can be used with password-based encryption (PBE).

@@ Instruction
I want to use javax.crypto.spec.PBEKeySpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PBEKeySpec(char[] password, byte[] salt, int iterationCount)`: This constructor creates a new PBEKeySpec with the specified password, salt, and iteration count.

2. `byte[] getSalt()`: This method returns the salt used in this PBEKeySpec.

3. `int getIterationCount()`: This method returns the iteration count used in this PBEKeySpec.

4. `char[] getPassword()`: This method returns the password used in this PBEKeySpec.

5. `int getKeyLength()`: This method returns the key length used in this PBEKeySpec.
================================================================

Sample: 10 PBEParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the set of parameters used with password-based encryption (PBE), as defined in the PKCS #5 standard.

@@ Instruction
I want to use javax.crypto.spec.PBEParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PBEParameterSpec(byte[] salt, int iterationCount)`: This constructor creates a new PBEParameterSpec with the specified salt and iteration count.

2. `byte[] getSalt()`: This method returns the salt for this PBEParameterSpec.

3. `int getIterationCount()`: This method returns the iteration count for this PBEParameterSpec.

4. `boolean equals(Object obj)`: This method compares this PBEParameterSpec with the specified object.

5. `int hashCode()`: This method returns the hash code value for this PBEParameterSpec.
================================================================

Sample: 11 PSource
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the source for encoding input P in OAEP Padding, as defined in the PKCS#1 v2.2 standard.

@@ Instruction
I want to use javax.crypto.spec.PSource package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PSource.PSpecified`: This method returns a new instance of the PSource.PSpecified class.

2. `PSource.PSalted`: This method returns a new instance of the PSource.PSalted class.

3. `PSource.PSpecified.getAlgorithmParameterSpec()`: This method returns the algorithm parameter spec.

4. `PSource.PSalted.getSalt()`: This method returns the salt.

5. `PSource.PSalted.getIterationCount()`: This method returns the iteration count.
================================================================

Sample: 12 PSource.PSpecified
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class is used to explicitly specify the value for encoding input P in OAEP Padding.

@@ Instruction
I want to use javax.crypto.spec.PSource.PSpecified package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `PSpecified(byte[] seed)`: This constructor creates a new PSpecified object with the specified seed.

2. `byte[] getSeed()`: This method returns the seed used to generate the PSpecified object.

3. `int getDigestAlgorithm()`: This method returns the digest algorithm used to generate the PSpecified object.

4. `int getMGFAlgorithm()`: This method returns the mask generation function (MGF) algorithm used to generate the PSpecified object.

5. `int getSaltLength()`: This method returns the length of the salt used to generate the PSpecified object.
================================================================

Sample: 13 RC2ParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the parameters used with the RC2 algorithm.

@@ Instruction
I want to use javax.crypto.spec.RC2ParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `RC2ParameterSpec(int keySize, byte[] iv)`: This constructor creates a new RC2ParameterSpec object with the specified key size and initialization vector.

2. `int getKeySize()`: This method returns the key size.

3. `byte[] getIV()`: This method returns the initialization vector.

4. `boolean equals(Object obj)`: This method compares this RC2ParameterSpec object with the specified object.

5. `int hashCode()`: This method returns the hash code value for this RC2ParameterSpec object.
================================================================

Sample: 14 RC5ParameterSpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies the parameters used with the RC5 algorithm.

@@ Instruction
I want to use javax.crypto.spec.RC5ParameterSpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `RC5ParameterSpec(int rounds, byte[] key)`: This constructor creates a new RC5ParameterSpec with the specified number of rounds and key.

2. `int getRounds()`: This method returns the number of rounds used in the RC5 algorithm.

3. `byte[] getKey()`: This method returns the key used in the RC5 algorithm.

4. `int hashCode()`: This method returns the hash code value for this RC5ParameterSpec.

5. `boolean equals(Object obj)`: This method compares this RC5ParameterSpec with the specified object. The result is true if and only if the argument is not null and is a RC5ParameterSpec object that represents the same rounds and key as this object.
================================================================

Sample: 15 SecretKeySpec
----------------------------------------------------------------

@@ Context
Here is the description of the package Provides classes and interfaces for key specifications and algorithmparameter specifications.
Here is the description of the class This class specifies a secret key in a provider-independent fashion.

@@ Instruction
I want to use javax.crypto.spec.SecretKeySpec package from Java
Given the context, recommend a list of useful with at most 5 apis for this package, 
Do not recommend methods inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `SecretKeySpec(byte[] key, String algorithm)`: This constructor creates a new SecretKeySpec with the specified key data and algorithm.

2. `byte[] getEncoded()`: This method returns the key data in a form suitable for storage or transmission.

3. `String getAlgorithm()`: This method returns the name of the algorithm parameter specification represented by this object.

4. `String getFormat()`: This method returns the name of the format of the key data.

5. `String getProvider()`: This method returns the name of the provider of the cryptographic algorithm.
================================================================

