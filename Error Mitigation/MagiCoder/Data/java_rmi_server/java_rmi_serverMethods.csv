ClassName,Method,Return Type,Description
LogStream,getDefaultStream(),static PrintStream,Deprecated. no replacement
LogStream,getOutputStream(),OutputStream,Deprecated. no replacement
LogStream,log(String name),static LogStream,Deprecated. no replacement
LogStream,parseLevel(String s),static int,Deprecated. no replacement
LogStream,setDefaultStream(PrintStream newDefault),static void,Deprecated. no replacement
LogStream,setOutputStream(OutputStream out),void,Deprecated. no replacement
LogStream,toString(),String,Deprecated. no replacement
LogStream,"write(byte[] b, int off, int len)",void,Deprecated. no replacement
LogStream,write(int b),void,Deprecated. no replacement
ObjID,equals(Object obj),boolean,Compares the specified object with this ObjID for equality.
ObjID,hashCode(),int,"Returns the hash code value for this object identifier, the object number."
ObjID,read(ObjectInput in),static ObjID,Constructs and returns a new ObjID instance by unmarshalling a binary representation from an ObjectInput instance.
ObjID,toString(),String,Returns a string representation of this object identifier.
ObjID,write(ObjectOutput out),void,Marshals a binary representation of this ObjID to an ObjectOutput instance.
Operation,getOperation(),String,Deprecated. no replacement
Operation,toString(),String,Deprecated. no replacement
RemoteObject,equals(Object obj),boolean,Compares two remote objects for equality.
RemoteObject,getRef(),RemoteRef,Returns the remote reference for the remote object.
RemoteObject,hashCode(),int,Returns a hashcode for a remote object.
RemoteObject,toString(),String,Returns a String that represents the value of this remote object.
RemoteObject,toStub(Remote obj),static Remote,Returns the stub for the remote object obj passed as a parameter.
RemoteObjectInvocationHandler,"invoke(Object proxy, Method method, Object[] args)",Object,"Processes a method invocation made on the encapsulating proxy instance, proxy, and returns the result."
RemoteServer,getClientHost(),static String,Returns a string representation of the client host for the remote method invocation being processed in the current thread.
RemoteServer,getLog(),static PrintStream,Returns stream for the RMI call log.
RemoteServer,setLog(OutputStream out),static void,Log RMI calls to the output stream out.
RemoteStub,"setRef(RemoteStub stub, RemoteRef ref)",protected static void,"Deprecated. No replacement. The setRef method was intended for setting the remote reference of a remote stub. This is unnecessary, since RemoteStubs can be created and initialized with a remote reference through use of the RemoteStub(RemoteRef) constructor."
RMIClassLoader,getClassAnnotation(Class<?> cl),static String,Returns the annotation string (representing a location for the class definition) that RMI will use to annotate the class descriptor when marshalling objects of the given class.
RMIClassLoader,getClassLoader(String codebase),static ClassLoader,Returns a class loader that loads classes from the given codebase URL path.
RMIClassLoader,getDefaultProviderInstance(),static RMIClassLoaderSpi,Returns the canonical instance of the default provider for the service provider interface RMIClassLoaderSpi.
RMIClassLoader,getSecurityContext(ClassLoader loader),static Object,"Deprecated. no replacement. As of the Java 2 platform v1.2, RMI no longer uses this method to obtain a class loader's security context."
RMIClassLoader,loadClass(String name),static Class<?>,"Deprecated. replaced by loadClass(String,String) method"
RMIClassLoader,"loadClass(String codebase, String name)",static Class<?>,Loads a class from a codebase URL path.
RMIClassLoader,"loadClass(String codebase, String name, ClassLoader defaultLoader)",static Class<?>,"Loads a class from a codebase URL path, optionally using the supplied loader."
RMIClassLoader,"loadClass(URL codebase, String name)",static Class<?>,Loads a class from a codebase URL.
RMIClassLoader,"loadProxyClass(String codebase, String[] interfaces, ClassLoader defaultLoader)",static Class<?>,Loads a dynamic proxy class (see Proxy) that implements a set of interfaces with the given names from a codebase URL path.
RMIClassLoaderSpi,getClassAnnotation(Class<?> cl),abstract String,Provides the implementation for RMIClassLoader.getClassAnnotation(Class).
RMIClassLoaderSpi,getClassLoader(String codebase),abstract ClassLoader,Provides the implementation for RMIClassLoader.getClassLoader(String).
RMIClassLoaderSpi,"loadClass(String codebase, String name, ClassLoader defaultLoader)",abstract Class<?>,"Provides the implementation for RMIClassLoader.loadClass(URL,String), RMIClassLoader.loadClass(String,String), and RMIClassLoader.loadClass(String,String,ClassLoader)."
RMIClassLoaderSpi,"loadProxyClass(String codebase, String[] interfaces, ClassLoader defaultLoader)",abstract Class<?>,"Provides the implementation for RMIClassLoader.loadProxyClass(String,String[],ClassLoader)."
RMISocketFactory,createServerSocket(int port),abstract ServerSocket,Create a server socket on the specified port (port 0 indicates an anonymous port).
RMISocketFactory,"createSocket(String host, int port)",abstract Socket,Creates a client socket connected to the specified host and port.
RMISocketFactory,getDefaultSocketFactory(),static RMISocketFactory,Returns a reference to the default socket factory used by this RMI implementation.
RMISocketFactory,getFailureHandler(),static RMIFailureHandler,Returns the handler for socket creation failure set by the setFailureHandler method.
RMISocketFactory,getSocketFactory(),static RMISocketFactory,Returns the socket factory set by the setSocketFactory method.
RMISocketFactory,setFailureHandler(RMIFailureHandler fh),static void,Sets the failure handler to be called by the RMI runtime if server socket creation fails.
RMISocketFactory,setSocketFactory(RMISocketFactory fac),static void,Set the global socket factory from which RMI gets sockets (if the remote object is not associated with a specific client and/or server socket factory).
UID,equals(Object obj),boolean,Compares the specified object with this UID for equality.
UID,hashCode(),int,Returns the hash code value for this UID.
UID,read(DataInput in),static UID,Constructs and returns a new UID instance by unmarshalling a binary representation from an DataInput instance.
UID,toString(),String,Returns a string representation of this UID.
UID,write(DataOutput out),void,Marshals a binary representation of this UID to a DataOutput instance.
UnicastRemoteObject,clone(),Object,Returns a clone of the remote object that is distinct from the original.
UnicastRemoteObject,exportObject(Remote obj),static RemoteStub,"Deprecated. This method is deprecated because it supports only static stubs. Use exportObject(Remote, port) or exportObject(Remote, port, csf, ssf) instead."
UnicastRemoteObject,"exportObject(Remote obj, int port)",static Remote,"Exports the remote object to make it available to receive incoming calls, using the particular supplied port."
UnicastRemoteObject,"exportObject(Remote obj, int port, RMIClientSocketFactory csf, RMIServerSocketFactory ssf)",static Remote,"Exports the remote object to make it available to receive incoming calls, using a transport specified by the given socket factory."
UnicastRemoteObject,"unexportObject(Remote obj, boolean force)",static boolean,"Removes the remote object, obj, from the RMI runtime."
