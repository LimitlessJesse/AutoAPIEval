Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DOMResult,1,Node getNode(),True,,"

getNode
public Node getNode()
Get the node that will contain the result DOM tree.
If no node was set via
 DOMResult(Node node),
 DOMResult(Node node, String systeId),
 DOMResult(Node node, Node nextSibling),
 DOMResult(Node node, Node nextSibling, String systemId) or
 setNode(Node node),
 then the node will be set by the transformation, and may be obtained from this method once the transformation is complete.
 Calling this method before the transformation will return null.

Returns:
The node to which the transformation will be appended.


"
0,DOMResult,2,void setNode(Node node),True,,"

setNode
public void setNode(Node node)
Set the node that will contain the result DOM tree.
In practice, the node should be
 a Document node,
 a DocumentFragment node, or
 a Element node.
 In other words, a node that accepts children.
An IllegalStateException is thrown if
 nextSibling is not null and
 node is not a parent of nextSibling.
 An IllegalStateException is thrown if node is null and
 nextSibling is not null.

Parameters:
node - The node to which the transformation will be appended.
Throws:
IllegalStateException - If nextSibling is not
   null and
   nextSibling is not a child of node or
   node is null and
   nextSibling is not null.


"
0,DOMResult,3,void setSystemId(String systemId),True,,"

setSystemId
public void setSystemId(String systemId)
Set the systemId that may be used in association with the node.

Specified by:
setSystemId in interface Result
Parameters:
systemId - The system identifier as a URI string.


"
0,DOMResult,4,void setNextSibling(Node nextSibling),True,,"

setNextSibling
public void setNextSibling(Node nextSibling)
Set the child node before which the result nodes will be inserted.
Use nextSibling to specify the child node
 before which the result nodes should be inserted.
 If nextSibling is not a descendant of node,
 then an IllegalArgumentException is thrown.
 If node is null and nextSibling is not null,
 then an IllegalStateException is thrown.
 If nextSibling is null,
 then the behavior is the same as calling DOMResult(Node node),
 i.e. append the result nodes as the last child of the specified node.

Parameters:
nextSibling - The child node before which the result nodes will be inserted.
Throws:
IllegalArgumentException - If nextSibling is not a
   descendant of node.
IllegalStateException - If node is null
   and nextSibling is not null.
Since:
1.5


"
0,DOMResult,5,void setOwnerDocument(Document doc),False,,NULL
1,DOMSource,1,Node getNode(),True,,"

getNode
public Node getNode()
Get the node that represents a Source DOM tree.

Returns:
The node that is to be transformed.


"
1,DOMSource,2,void setNode(Node node),True,,"

setNode
public void setNode(Node node)
Set the node that will represents a Source DOM tree.

Parameters:
node - The node that is to be transformed.


"
1,DOMSource,3,void setSystemId(String systemId),True,,"

setSystemId
public void setSystemId(String systemID)
Set the base ID (URL or system ID) from where URLs
 will be resolved.

Specified by:
setSystemId in interface Source
Parameters:
systemID - Base URL for this DOM tree.


"
1,DOMSource,4,String getSystemId(),True,,"

getSystemId
public String getSystemId()
Get the base ID (URL or system ID) from where URLs
 will be resolved.

Specified by:
getSystemId in interface Source
Returns:
Base URL for this DOM tree.


"
1,DOMSource,5,DOMSource(Node node),False,,NULL
