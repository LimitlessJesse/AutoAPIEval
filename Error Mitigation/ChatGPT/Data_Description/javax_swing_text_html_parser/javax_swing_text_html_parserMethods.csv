ClassName,Method,Return Type,Description,Full Description
AttributeList,getModifier(),int,NULL,"

getModifier
public int getModifier()

Returns:
attribute modifier
See Also:
DTDConstants


"
AttributeList,getName(),String,NULL,"

getName
public String getName()

Returns:
attribute name


"
AttributeList,getNext(),AttributeList,NULL,"

getNext
public AttributeList getNext()

Returns:
the next attribute in the list


"
AttributeList,getType(),int,NULL,"

getType
public int getType()

Returns:
attribute type
See Also:
DTDConstants


"
AttributeList,getValue(),String,NULL,"

getValue
public String getValue()

Returns:
default attribute value


"
AttributeList,getValues(),Enumeration<?>,NULL,"

getValues
public Enumeration<?> getValues()

Returns:
possible attribute values


"
AttributeList,name2type(String nm),static int,NULL,"

name2type
public static int name2type(String nm)

"
AttributeList,toString(),String,Returns a string representation of the object.,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Overrides:
toString in class Object
Returns:
string representation


"
AttributeList,type2name(int tp),static String,NULL,"

type2name
public static String type2name(int tp)

"
ContentModel,empty(),boolean,Return true if the content model could match an empty input stream.,"

empty
public boolean empty()
Return true if the content model could
 match an empty input stream.

"
ContentModel,first(),Element,Return the element that must be next.,"

first
public Element first()
Return the element that must be next.

"
ContentModel,first(Object token),boolean,Return true if the token could potentially be the first token in the input stream.,"

first
public boolean first(Object token)
Return true if the token could potentially be the
 first token in the input stream.

"
ContentModel,getElements(Vector<Element> elemVec),void,Update elemVec with the list of elements that are part of the this contentModel.,"

getElements
public void getElements(Vector<Element> elemVec)
Update elemVec with the list of elements that are
 part of the this contentModel.

"
ContentModel,toString(),String,Convert to a string.,"

toString
public String toString()
Convert to a string.

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
DocumentParser,handleComment(char[] text),protected void,Called when an HTML comment is encountered.,"

handleComment
protected void handleComment(char[] text)
Description copied from class: Parser
Called when an HTML comment is encountered.

Overrides:
handleComment in class Parser


"
DocumentParser,handleEmptyTag(TagElement tag),protected void,Handle Empty Tag.,"

handleEmptyTag
protected void handleEmptyTag(TagElement tag)
                       throws ChangedCharSetException
Handle Empty Tag.

Overrides:
handleEmptyTag in class Parser
Throws:
ChangedCharSetException


"
DocumentParser,handleEndTag(TagElement tag),protected void,Handle End Tag.,"

handleEndTag
protected void handleEndTag(TagElement tag)
Handle End Tag.

Overrides:
handleEndTag in class Parser


"
DocumentParser,"handleError(int ln, String errorMsg)",protected void,An error has occurred.,"

handleError
protected void handleError(int ln,
                           String errorMsg)
Description copied from class: Parser
An error has occurred.

Overrides:
handleError in class Parser


"
DocumentParser,handleStartTag(TagElement tag),protected void,Handle Start Tag.,"

handleStartTag
protected void handleStartTag(TagElement tag)
Handle Start Tag.

Overrides:
handleStartTag in class Parser


"
DocumentParser,handleText(char[] data),protected void,Handle Text.,"

handleText
protected void handleText(char[] data)
Handle Text.

Overrides:
handleText in class Parser


"
DocumentParser,"parse(Reader in, HTMLEditorKit.ParserCallback callback, boolean ignoreCharSet)",void,NULL,"

parse
public void parse(Reader in,
                  HTMLEditorKit.ParserCallback callback,
                  boolean ignoreCharSet)
           throws IOException

Throws:
IOException


"
DTD,"defAttributeList(String name, int type, int modifier, String value, String values, AttributeList atts)",protected AttributeList,Creates and returns an AttributeList.,"

defAttributeList
protected AttributeList defAttributeList(String name,
                                         int type,
                                         int modifier,
                                         String value,
                                         String values,
                                         AttributeList atts)
Creates and returns an AttributeList.

Parameters:
name - the attribute list's name
Returns:
the new AttributeList


"
DTD,"defContentModel(int type, Object obj, ContentModel next)",protected ContentModel,Creates and returns a new content model.,"

defContentModel
protected ContentModel defContentModel(int type,
                                       Object obj,
                                       ContentModel next)
Creates and returns a new content model.

Parameters:
type - the type of the new content model
Returns:
the new ContentModel


"
DTD,"defElement(String name, int type, boolean omitStart, boolean omitEnd, ContentModel content, String[] exclusions, String[] inclusions, AttributeList atts)",protected Element,Creates and returns an Element.,"

defElement
protected Element defElement(String name,
                             int type,
                             boolean omitStart,
                             boolean omitEnd,
                             ContentModel content,
                             String[] exclusions,
                             String[] inclusions,
                             AttributeList atts)
Creates and returns an Element.

Parameters:
name - the element's name
Returns:
the new Element


"
DTD,"defEntity(String name, int type, int ch)",Entity,Creates and returns a character Entity.,"

defEntity
public Entity defEntity(String name,
                        int type,
                        int ch)
Creates and returns a character Entity.

Parameters:
name - the entity's name
Returns:
the new character Entity


"
DTD,"defEntity(String name, int type, String str)",protected Entity,Creates and returns an Entity.,"

defEntity
protected Entity defEntity(String name,
                           int type,
                           String str)
Creates and returns an Entity.

Parameters:
name - the entity's name
Returns:
the new Entity


"
DTD,"defineAttributes(String name, AttributeList atts)",void,Defines attributes for an Element.,"

defineAttributes
public void defineAttributes(String name,
                             AttributeList atts)
Defines attributes for an Element.

Parameters:
name - the name of the Element
atts - the AttributeList specifying the
    Element


"
DTD,"defineElement(String name, int type, boolean omitStart, boolean omitEnd, ContentModel content, BitSet exclusions, BitSet inclusions, AttributeList atts)",Element,Returns the Element which matches the specified parameters.,"

defineElement
public Element defineElement(String name,
                             int type,
                             boolean omitStart,
                             boolean omitEnd,
                             ContentModel content,
                             BitSet exclusions,
                             BitSet inclusions,
                             AttributeList atts)
Returns the Element which matches the
 specified parameters.  If one doesn't exist, a new
 one is created and returned.

Parameters:
name - the name of the Element
type - the type of the Element
omitStart - true if start should be omitted
omitEnd - true if end should be omitted
content - the ContentModel
atts - the AttributeList specifying the
    Element
Returns:
the Element specified


"
DTD,"defineEntity(String name, int type, char[] data)",Entity,Defines an entity.,"

defineEntity
public Entity defineEntity(String name,
                           int type,
                           char[] data)
Defines an entity.  If the Entity specified
 by name, type, and data
 exists, it is returned; otherwise a new Entity
 is created and is returned.

Parameters:
name - the name of the Entity as a String
type - the type of the Entity
data - the Entity's data
Returns:
the Entity requested or a new Entity
   if not found


"
DTD,getDTD(String name),static DTD,Returns a DTD with the specified name.,"

getDTD
public static DTD getDTD(String name)
                  throws IOException
Returns a DTD with the specified name.  If
 a DTD with that name doesn't exist, one is created
 and returned.  Any uppercase characters in the name
 are converted to lowercase.

Parameters:
name - the name of the DTD
Returns:
the DTD which corresponds to name
Throws:
IOException


"
DTD,getElement(int index),Element,Gets an element by index.,"

getElement
public Element getElement(int index)
Gets an element by index.

Parameters:
index - the requested index
Returns:
the Element corresponding to
   index


"
DTD,getElement(String name),Element,Gets an element by name.,"

getElement
public Element getElement(String name)
Gets an element by name. A new element is
 created if the element doesn't exist.

Parameters:
name - the requested String
Returns:
the Element corresponding to
   name, which may be newly created


"
DTD,getEntity(int ch),Entity,Gets a character entity.,"

getEntity
public Entity getEntity(int ch)
Gets a character entity.

Returns:
the Entity corresponding to the
    ch character


"
DTD,getEntity(String name),Entity,Gets an entity by name.,"

getEntity
public Entity getEntity(String name)
Gets an entity by name.

Returns:
the Entity corresponding to the
   name String


"
DTD,getName(),String,Gets the name of the DTD.,"

getName
public String getName()
Gets the name of the DTD.

Returns:
the name of the DTD


"
DTD,"putDTDHash(String name, DTD dtd)",static void,NULL,"

putDTDHash
public static void putDTDHash(String name,
                              DTD dtd)

"
DTD,read(DataInputStream in),void,Recreates a DTD from an archived format.,"

read
public void read(DataInputStream in)
          throws IOException
Recreates a DTD from an archived format.

Parameters:
in - the DataInputStream to read from
Throws:
IOException


"
DTD,toString(),String,Returns a string representation of this DTD.,"

toString
public String toString()
Returns a string representation of this DTD.

Overrides:
toString in class Object
Returns:
the string representation of this DTD


"
Element,getAttribute(String name),AttributeList,Get an attribute by name.,"

getAttribute
public AttributeList getAttribute(String name)
Get an attribute by name.

"
Element,getAttributeByValue(String name),AttributeList,Get an attribute by value.,"

getAttributeByValue
public AttributeList getAttributeByValue(String name)
Get an attribute by value.

"
Element,getAttributes(),AttributeList,Get the attributes.,"

getAttributes
public AttributeList getAttributes()
Get the attributes.

"
Element,getContent(),ContentModel,Get content model,"

getContent
public ContentModel getContent()
Get content model

"
Element,getIndex(),int,Get index.,"

getIndex
public int getIndex()
Get index.

"
Element,getName(),String,Get the name of the element.,"

getName
public String getName()
Get the name of the element.

"
Element,getType(),int,Get type.,"

getType
public int getType()
Get type.

"
Element,isEmpty(),boolean,Check if empty,"

isEmpty
public boolean isEmpty()
Check if empty

"
Element,name2type(String nm),static int,NULL,"

name2type
public static int name2type(String nm)

"
Element,omitEnd(),boolean,Return true if the end tag can be omitted.,"

omitEnd
public boolean omitEnd()
Return true if the end tag can be omitted.

"
Element,omitStart(),boolean,Return true if the start tag can be omitted.,"

omitStart
public boolean omitStart()
Return true if the start tag can be omitted.

"
Element,toString(),String,Convert to a string.,"

toString
public String toString()
Convert to a string.

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
Entity,getData(),char[],Returns the data.,"

getData
public char[] getData()
Returns the data.

Returns:
the data


"
Entity,getName(),String,Gets the name of the entity.,"

getName
public String getName()
Gets the name of the entity.

Returns:
the name of the entity, as a String


"
Entity,getString(),String,Returns the data as a String.,"

getString
public String getString()
Returns the data as a String.

Returns:
the data as a String


"
Entity,getType(),int,Gets the type of the entity.,"

getType
public int getType()
Gets the type of the entity.

Returns:
the type of the entity


"
Entity,isGeneral(),boolean,Returns true if it is a general entity.,"

isGeneral
public boolean isGeneral()
Returns true if it is a general entity.

Returns:
true if it is a general entity


"
Entity,isParameter(),boolean,Returns true if it is a parameter entity.,"

isParameter
public boolean isParameter()
Returns true if it is a parameter entity.

Returns:
true if it is a parameter entity


"
Entity,name2type(String nm),static int,Converts nm string to the corresponding entity type.,"

name2type
public static int name2type(String nm)
Converts nm string to the corresponding
 entity type.  If the string does not have a corresponding
 entity type, returns the type corresponding to ""CDATA"".
 Valid entity types are: ""PUBLIC"", ""CDATA"", ""SDATA"", ""PI"",
 ""STARTTAG"", ""ENDTAG"", ""MS"", ""MD"", ""SYSTEM"".

Parameters:
nm - the string to be converted
Returns:
the corresponding entity type, or the type corresponding
   to ""CDATA"", if none exists


"
Parser,endTag(boolean omitted),protected void,Handle an end tag.,"

endTag
protected void endTag(boolean omitted)
Handle an end tag. The end tag is popped
 from the tag stack.

"
Parser,error(String err),protected void,NULL,"

error
protected void error(String err)

"
Parser,"error(String err, String arg1)",protected void,NULL,"

error
protected void error(String err,
                     String arg1)

"
Parser,"error(String err, String arg1, String arg2)",protected void,NULL,"

error
protected void error(String err,
                     String arg1,
                     String arg2)

"
Parser,"error(String err, String arg1, String arg2, String arg3)",protected void,Invoke the error handler.,"

error
protected void error(String err,
                     String arg1,
                     String arg2,
                     String arg3)
Invoke the error handler.

"
Parser,flushAttributes(),protected void,NULL,"

flushAttributes
protected void flushAttributes()

"
Parser,getAttributes(),protected SimpleAttributeSet,NULL,"

getAttributes
protected SimpleAttributeSet getAttributes()

"
Parser,getCurrentLine(),protected int,NULL,"

getCurrentLine
protected int getCurrentLine()

Returns:
the line number of the line currently being parsed


"
Parser,getCurrentPos(),protected int,NULL,"

getCurrentPos
protected int getCurrentPos()

"
Parser,handleComment(char[] text),protected void,Called when an HTML comment is encountered.,"

handleComment
protected void handleComment(char[] text)
Called when an HTML comment is encountered.

"
Parser,handleEmptyTag(TagElement tag),protected void,Called when an empty tag is encountered.,"

handleEmptyTag
protected void handleEmptyTag(TagElement tag)
                       throws ChangedCharSetException
Called when an empty tag is encountered.

Throws:
ChangedCharSetException


"
Parser,handleEndTag(TagElement tag),protected void,Called when an end tag is encountered.,"

handleEndTag
protected void handleEndTag(TagElement tag)
Called when an end tag is encountered.

"
Parser,handleEOFInComment(),protected void,NULL,"

handleEOFInComment
protected void handleEOFInComment()

"
Parser,"handleError(int ln, String msg)",protected void,An error has occurred.,"

handleError
protected void handleError(int ln,
                           String msg)
An error has occurred.

"
Parser,handleStartTag(TagElement tag),protected void,Called when a start tag is encountered.,"

handleStartTag
protected void handleStartTag(TagElement tag)
Called when a start tag is encountered.

"
Parser,handleText(char[] text),protected void,Called when PCDATA is encountered.,"

handleText
protected void handleText(char[] text)
Called when PCDATA is encountered.

"
Parser,handleTitle(char[] text),protected void,Called when an HTML title tag is encountered.,"

handleTitle
protected void handleTitle(char[] text)
Called when an HTML title tag is encountered.

"
Parser,makeTag(Element elem),protected TagElement,NULL,"

makeTag
protected TagElement makeTag(Element elem)

"
Parser,"makeTag(Element elem, boolean fictional)",protected TagElement,Makes a TagElement.,"

makeTag
protected TagElement makeTag(Element elem,
                             boolean fictional)
Makes a TagElement.

"
Parser,markFirstTime(Element elem),protected void,Marks the first time a tag has been seen in a document,"

markFirstTime
protected void markFirstTime(Element elem)
Marks the first time a tag has been seen in a document

"
Parser,parse(Reader in),void,"Parse an HTML stream, given a DTD.","

parse
public void parse(Reader in)
           throws IOException
Parse an HTML stream, given a DTD.

Throws:
IOException


"
Parser,parseDTDMarkup(),String,Parses th Document Declaration Type markup declaration.,"

parseDTDMarkup
public String parseDTDMarkup()
                      throws IOException
Parses th Document Declaration Type markup declaration.
 Currently ignores it.

Throws:
IOException


"
Parser,parseMarkupDeclarations(StringBuffer strBuff),protected boolean,Parse markup declarations.,"

parseMarkupDeclarations
protected boolean parseMarkupDeclarations(StringBuffer strBuff)
                                   throws IOException
Parse markup declarations.
 Currently only handles the Document Type Declaration markup.
 Returns true if it is a markup declaration false otherwise.

Throws:
IOException


"
Parser,startTag(TagElement tag),protected void,Handle a start tag.,"

startTag
protected void startTag(TagElement tag)
                 throws ChangedCharSetException
Handle a start tag. The new tag is pushed
 onto the tag stack. The attribute list is
 checked for required attributes.

Throws:
ChangedCharSetException


"
ParserDelegator,"createDTD(DTD dtd, String name)",protected static DTD,NULL,"

createDTD
protected static DTD createDTD(DTD dtd,
                               String name)

"
ParserDelegator,"parse(Reader r, HTMLEditorKit.ParserCallback cb, boolean ignoreCharSet)",void,Parse the given stream and drive the given callback with the results of the parse.,"

parse
public void parse(Reader r,
                  HTMLEditorKit.ParserCallback cb,
                  boolean ignoreCharSet)
           throws IOException
Description copied from class: HTMLEditorKit.Parser
Parse the given stream and drive the given callback
 with the results of the parse.  This method should
 be implemented to be thread-safe.

Specified by:
parse in class HTMLEditorKit.Parser
Throws:
IOException


"
ParserDelegator,setDefaultDTD(),protected static void,NULL,"

setDefaultDTD
protected static void setDefaultDTD()

"
TagElement,breaksFlow(),boolean,NULL,"

breaksFlow
public boolean breaksFlow()

"
TagElement,fictional(),boolean,NULL,"

fictional
public boolean fictional()

"
TagElement,getElement(),Element,NULL,"

getElement
public Element getElement()

"
TagElement,getHTMLTag(),HTML.Tag,NULL,"

getHTMLTag
public HTML.Tag getHTMLTag()

"
TagElement,isPreformatted(),boolean,NULL,"

isPreformatted
public boolean isPreformatted()

"
