Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,HttpContext,1,void setHandler(HttpHandler handler),True,,"

setHandler
public void setHandler(HttpHandler handler)
JAX-WS runtime sets its handler during
 Endpoint.publish(HttpContext) to handle
 HTTP requests for this context. Container or its extensions
 use this handler to process the requests.

Parameters:
handler - the handler to set for this context


"
0,HttpContext,2,HttpHandler getHandler(),False,,NULL
0,HttpContext,3,"Map<String, Object> getAttributes()",False,,NULL
0,HttpContext,4,URI getPath(),False,,NULL
0,HttpContext,5,void setPath(URI path),False,,NULL
1,HttpExchange,1,InputStream getRequestInputStream(),False,,NULL
1,HttpExchange,2,OutputStream getResponseOutputStream(),False,,NULL
1,HttpExchange,3,String getRequestURI(),True,,"

getRequestURI
public abstract String getRequestURI()
Returns the part of the request's URI from the protocol
 name up to the query string in the first line of the HTTP request.
 Container doesn't decode this string.

Returns:
the request URI


"
1,HttpExchange,4,String getRequestMethod(),True,,"

getRequestMethod
public abstract String getRequestMethod()
Get the HTTP request method

Returns:
the request method


"
1,HttpExchange,5,void setStatus(int status),True,,"

setStatus
public abstract void setStatus(int status)
Sets the HTTP status code for the response.

 
 This method must be called prior to calling getResponseBody().

Parameters:
status - the response code to send
See Also:
getResponseBody()


"
2,HttpHandler,1,void handle(HttpExchange exchange),True,,"

handle
public abstract void handle(HttpExchange exchange)
                     throws IOException
Handles a given request and generates an appropriate response.
 See HttpExchange for a description of the steps
 involved in handling an exchange. Container invokes this method
 when it receives an incoming request.

Parameters:
exchange - the exchange containing the request from the
      client and used to send the response
Throws:
IOException - when an I/O error happens during request
      handling


"
2,HttpHandler,2,String getRequestMethod(),False,,NULL
2,HttpHandler,3,URI getRequestURI(),False,,NULL
2,HttpHandler,4,"Map<String, List<String>> getRequestHeaders()",False,,NULL
2,HttpHandler,5,OutputStream getResponseBody(),False,,NULL
