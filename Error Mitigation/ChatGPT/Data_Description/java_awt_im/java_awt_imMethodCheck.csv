Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,InputContext,1,void dispatchInputMethodEvent(InputMethodEvent event),False,,NULL
0,InputContext,2,void reconvert(),True,,"

reconvert
public void reconvert()
Asks the current input method to reconvert text from the
 current client component. The input method obtains the text to
 be reconverted from the client component using the
 InputMethodRequests.getSelectedText
 method. The other InputMethodRequests methods
 must be prepared to deal with further information requests by
 the input method. The composed and/or committed text will be
 sent to the client component as a sequence of
 InputMethodEvents. If the input method cannot
 reconvert the given text, the text is returned as committed
 text in an InputMethodEvent.

Throws:
UnsupportedOperationException - if there is no current input
 method available or the current input method does not support
 the reconversion operation.
Since:
1.3


"
0,InputContext,3,void setCharacterSubsets(Character.Subset[] subsets),True,,"

setCharacterSubsets
public void setCharacterSubsets(Character.Subset[] subsets)
Sets the subsets of the Unicode character set that input methods of this input
 context should be allowed to input. Null may be passed in to
 indicate that all characters are allowed. The initial value
 is null. The setting applies to the current input method as well
 as input methods selected after this call is made. However,
 applications cannot rely on this call having the desired effect,
 since this setting cannot be passed on to all host input methods -
 applications still need to apply their own character validation.
 If no input methods are available, then this method has no effect.

Parameters:
subsets - The subsets of the Unicode character set from which characters may be input


"
0,InputContext,4,void setCompositionEnabled(boolean enable),True,,"

setCompositionEnabled
public void setCompositionEnabled(boolean enable)
Enables or disables the current input method for composition,
 depending on the value of the parameter enable.
 
 An input method that is enabled for composition interprets incoming
 events for both composition and control purposes, while a
 disabled input method does not interpret events for composition.
 Note however that events are passed on to the input method regardless
 whether it is enabled or not, and that an input method that is disabled
 for composition may still interpret events for control purposes,
 including to enable or disable itself for composition.
 
 For input methods provided by host operating systems, it is not always possible to
 determine whether this operation is supported. For example, an input method may enable
 composition only for some locales, and do nothing for other locales. For such input
 methods, it is possible that this method does not throw
 UnsupportedOperationException,
 but also does not affect whether composition is enabled.

Parameters:
enable - whether to enable the current input method for composition
Throws:
UnsupportedOperationException - if there is no current input
 method available or the current input method does not support
 the enabling/disabling operation
Since:
1.3
See Also:
isCompositionEnabled()


"
0,InputContext,5,void setLocale(Locale locale),False,,NULL
1,InputMethodHighlight,1,int getState(),True,,"

getState
public int getState()
Returns the conversion state of the text range.

Returns:
The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT.
See Also:
RAW_TEXT, 
CONVERTED_TEXT


"
1,InputMethodHighlight,2,int getPainter(),False,,NULL
1,InputMethodHighlight,3,int getSelected(),False,,NULL
1,InputMethodHighlight,4,int getConverted(),False,,NULL
1,InputMethodHighlight,5,int getStyle(),False,,NULL
2,InputSubset,1,boolean contains(Object o),False,,NULL
2,InputSubset,2,int size(),False,,NULL
2,InputSubset,3,boolean isEmpty(),False,,NULL
2,InputSubset,4,String toString(),False,,NULL
