Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DelegationPermission,1,String getName(),False,,NULL
0,DelegationPermission,2,boolean implies(Permission permission),True,,"

implies
public boolean implies(Permission p)
Checks if this Kerberos delegation permission object ""implies"" the
 specified permission.
 
 If none of the above are true, implies returns false.

Overrides:
implies in class BasicPermission
Parameters:
p - the permission to check against.
Returns:
true if the specified permission is implied by this object,
 false if not.


"
0,DelegationPermission,3,boolean equals(Object obj),True,,"

equals
public boolean equals(Object obj)
Checks two DelegationPermission objects for equality.
 

Overrides:
equals in class BasicPermission
Parameters:
obj - the object to test for equality with this object.
Returns:
true if obj is a DelegationPermission, and
  has the same subordinate and service principal as this.
  DelegationPermission object.
See Also:
Object.hashCode(), 
HashMap


"
0,DelegationPermission,4,int hashCode(),True,,"

hashCode
public int hashCode()
Returns the hash code value for this object.

Overrides:
hashCode in class BasicPermission
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
0,DelegationPermission,5,String getActions(),False,,NULL
1,KerberosKey,1,int getKeyVersionNumber(),False,,NULL
1,KerberosKey,2,byte[] getEncoded(),True,,"

getEncoded
public final byte[] getEncoded()
Returns the key material of this secret key.

Specified by:
getEncoded in interface Key
Returns:
the key material


"
1,KerberosKey,3,String getAlgorithm(),True,,"

getAlgorithm
public final String getAlgorithm()
Returns the standard algorithm name for this key. For
 example, ""DES"" would indicate that this key is a DES key.
 See Appendix A in the 
 Java Cryptography Architecture API Specification & Reference
 
 for information about standard algorithm names.

Specified by:
getAlgorithm in interface Key
Returns:
the name of the algorithm associated with this key.


"
1,KerberosKey,4,int getKeyType(),True,,"

getKeyType
public final int getKeyType()
Returns the key type for this long-term key.

Returns:
the key type.


"
1,KerberosKey,5,String toString(),True,,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
2,KerberosPrincipal,1,String getName(),True,,"

getName
public String getName()
The returned string corresponds to the single-string
 representation of a Kerberos Principal name as specified in
 Section 2.1 of RFC 1964.

Specified by:
getName in interface Principal
Returns:
the principal name.


"
2,KerberosPrincipal,2,boolean equals(Object other),True,,"

equals
public boolean equals(Object other)
Compares the specified Object with this Principal for equality.
 Returns true if the given object is also a
 KerberosPrincipal and the two
 KerberosPrincipal instances are equivalent.
 More formally two KerberosPrincipal instances are equal
 if the values returned by getName() are equal.

Specified by:
equals in interface Principal
Overrides:
equals in class Object
Parameters:
other - the Object to compare to
Returns:
true if the Object passed in represents the same principal
 as this one, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
2,KerberosPrincipal,3,int hashCode(),True,,"

hashCode
public int hashCode()
Returns a hashcode for this principal. The hash code is defined to
 be the result of the following  calculation:
 
  hashCode = getName().hashCode();
 

Specified by:
hashCode in interface Principal
Overrides:
hashCode in class Object
Returns:
a hashCode() for the KerberosPrincipal
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
2,KerberosPrincipal,4,String toString(),True,,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Specified by:
toString in interface Principal
Overrides:
toString in class Object
Returns:
a string representation of the object.


"
2,KerberosPrincipal,5,boolean isRealmDeduced(),False,,NULL
3,KerberosTicket,1,String getClientName(),False,,NULL
3,KerberosTicket,2,long getEndTime(),False,,NULL
3,KerberosTicket,3,boolean isForwardable(),True,,"

isForwardable
public final boolean isForwardable()
Determines if this ticket is forwardable.

Returns:
true if this ticket is forwardable, false if not.


"
3,KerberosTicket,4,boolean isRenewable(),True,,"

isRenewable
public final boolean isRenewable()
Determines is this ticket is renewable. If so, the refresh method can be called, assuming the validity period for
 renewing is not already over.

Returns:
true if this ticket is renewable, false if not.


"
3,KerberosTicket,5,boolean isPostdated(),True,,"

isPostdated
public final boolean isPostdated()
Determines is this ticket is post-dated.

Returns:
true if this ticket is post-dated, false if not.


"
4,KeyTab,1,PrincipalName getPrincipal(),False,,NULL
4,KeyTab,2,boolean exists(),True,,"

exists
public boolean exists()
Checks if the keytab file exists. Implementation of this method
 should make sure that the result matches the latest status of the
 keytab file.
 
 The caller can use the result to determine if it should fallback to
 another mechanism to read the keys.

Returns:
true if the keytab file exists; false otherwise.
Throws:
SecurityException - if a security manager exists and the read
 access to the keytab file is not permitted


"
4,KeyTab,3,KeyTab getInstance(File file),True,,"

getInstance
public static KeyTab getInstance(File file)
Returns a KeyTab instance from a File object
 that is bound to an unknown service principal.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the file and does not read it.
 
 Developers should call getInstance(KerberosPrincipal,File)
 when the bound service principal is known.

Parameters:
file - the keytab File object, must not be null
Returns:
the keytab instance
Throws:
NullPointerException - if the file argument is null


"
4,KeyTab,4,void delete(),False,,NULL
4,KeyTab,5,boolean isBound(),True,,"

isBound
public boolean isBound()
Returns if the keytab is bound to a principal

Returns:
if the keytab is bound to a principal
Since:
1.8


"
