ClassName,Method,Return Type,Description,Full Description
DelegationPermission,equals(Object obj),boolean,Checks two DelegationPermission objects for equality.,"

equals
public boolean equals(Object obj)
Checks two DelegationPermission objects for equality.
 

Overrides:
equals in class BasicPermission
Parameters:
obj - the object to test for equality with this object.
Returns:
true if obj is a DelegationPermission, and
  has the same subordinate and service principal as this.
  DelegationPermission object.
See Also:
Object.hashCode(), 
HashMap


"
DelegationPermission,hashCode(),int,Returns the hash code value for this object.,"

hashCode
public int hashCode()
Returns the hash code value for this object.

Overrides:
hashCode in class BasicPermission
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
DelegationPermission,implies(Permission p),boolean,"Checks if this Kerberos delegation permission object ""implies"" the specified permission.","

implies
public boolean implies(Permission p)
Checks if this Kerberos delegation permission object ""implies"" the
 specified permission.
 
 If none of the above are true, implies returns false.

Overrides:
implies in class BasicPermission
Parameters:
p - the permission to check against.
Returns:
true if the specified permission is implied by this object,
 false if not.


"
DelegationPermission,newPermissionCollection(),PermissionCollection,Returns a PermissionCollection object for storing DelegationPermission objects.,"

newPermissionCollection
public PermissionCollection newPermissionCollection()
Returns a PermissionCollection object for storing
 DelegationPermission objects.
 
 DelegationPermission objects must be stored in a manner that
 allows them to be inserted into the collection in any order, but
 that also enables the PermissionCollection implies method to
 be implemented in an efficient (and consistent) manner.

Overrides:
newPermissionCollection in class BasicPermission
Returns:
a new PermissionCollection object suitable for storing
 DelegationPermissions.


"
KerberosKey,destroy(),void,Destroys this key.,"

destroy
public void destroy()
             throws DestroyFailedException
Destroys this key. A call to any of its other methods after this
 will cause an  IllegalStateException to be thrown.

Specified by:
destroy in interface Destroyable
Throws:
DestroyFailedException - if some error occurs while destorying
 this key.


"
KerberosKey,equals(Object other),boolean,Compares the specified Object with this KerberosKey for equality.,"

equals
public boolean equals(Object other)
Compares the specified Object with this KerberosKey for equality.
 Returns true if the given object is also a
 KerberosKey and the two
 KerberosKey instances are equivalent.

Overrides:
equals in class Object
Parameters:
other - the Object to compare to
Returns:
true if the specified object is equal to this KerberosKey,
 false otherwise. NOTE: Returns false if either of the KerberosKey
 objects has been destroyed.
Since:
1.6
See Also:
Object.hashCode(), 
HashMap


"
KerberosKey,getAlgorithm(),String,Returns the standard algorithm name for this key.,"

getAlgorithm
public final String getAlgorithm()
Returns the standard algorithm name for this key. For
 example, ""DES"" would indicate that this key is a DES key.
 See Appendix A in the 
 Java Cryptography Architecture API Specification & Reference
 
 for information about standard algorithm names.

Specified by:
getAlgorithm in interface Key
Returns:
the name of the algorithm associated with this key.


"
KerberosKey,getEncoded(),byte[],Returns the key material of this secret key.,"

getEncoded
public final byte[] getEncoded()
Returns the key material of this secret key.

Specified by:
getEncoded in interface Key
Returns:
the key material


"
KerberosKey,getFormat(),String,Returns the name of the encoding format for this secret key.,"

getFormat
public final String getFormat()
Returns the name of the encoding format for this secret key.

Specified by:
getFormat in interface Key
Returns:
the String ""RAW""


"
KerberosKey,getKeyType(),int,Returns the key type for this long-term key.,"

getKeyType
public final int getKeyType()
Returns the key type for this long-term key.

Returns:
the key type.


"
KerberosKey,getPrincipal(),KerberosPrincipal,Returns the principal that this key belongs to.,"

getPrincipal
public final KerberosPrincipal getPrincipal()
Returns the principal that this key belongs to.

Returns:
the principal this key belongs to.


"
KerberosKey,getVersionNumber(),int,Returns the key version number.,"

getVersionNumber
public final int getVersionNumber()
Returns the key version number.

Returns:
the key version number.


"
KerberosKey,hashCode(),int,Returns a hashcode for this KerberosKey.,"

hashCode
public int hashCode()
Returns a hashcode for this KerberosKey.

Overrides:
hashCode in class Object
Returns:
a hashCode() for the KerberosKey
Since:
1.6
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
KerberosKey,isDestroyed(),boolean,Determines if this key has been destroyed.,"

isDestroyed
public boolean isDestroyed()
Determines if this key has been destroyed.

Specified by:
isDestroyed in interface Destroyable
Returns:
true if this Object has been destroyed,
          false otherwise.


"
KerberosKey,toString(),String,Returns a string representation of the object.,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
KerberosPrincipal,equals(Object other),boolean,Compares the specified Object with this Principal for equality.,"

equals
public boolean equals(Object other)
Compares the specified Object with this Principal for equality.
 Returns true if the given object is also a
 KerberosPrincipal and the two
 KerberosPrincipal instances are equivalent.
 More formally two KerberosPrincipal instances are equal
 if the values returned by getName() are equal.

Specified by:
equals in interface Principal
Overrides:
equals in class Object
Parameters:
other - the Object to compare to
Returns:
true if the Object passed in represents the same principal
 as this one, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
KerberosPrincipal,getName(),String,The returned string corresponds to the single-string representation of a Kerberos Principal name as specified in Section 2.1 of RFC 1964.,"

getName
public String getName()
The returned string corresponds to the single-string
 representation of a Kerberos Principal name as specified in
 Section 2.1 of RFC 1964.

Specified by:
getName in interface Principal
Returns:
the principal name.


"
KerberosPrincipal,getNameType(),int,Returns the name type of the KerberosPrincipal.,"

getNameType
public int getNameType()
Returns the name type of the KerberosPrincipal. Valid name types
 are specified in Section 6.2 of
  RFC4120.

Returns:
the name type.


"
KerberosPrincipal,getRealm(),String,Returns the realm component of this Kerberos principal.,"

getRealm
public String getRealm()
Returns the realm component of this Kerberos principal.

Returns:
the realm component of this Kerberos principal.


"
KerberosPrincipal,hashCode(),int,Returns a hashcode for this principal.,"

hashCode
public int hashCode()
Returns a hashcode for this principal. The hash code is defined to
 be the result of the following  calculation:
 
  hashCode = getName().hashCode();
 

Specified by:
hashCode in interface Principal
Overrides:
hashCode in class Object
Returns:
a hashCode() for the KerberosPrincipal
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
KerberosPrincipal,toString(),String,Returns a string representation of the object.,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Specified by:
toString in interface Principal
Overrides:
toString in class Object
Returns:
a string representation of the object.


"
KerberosTicket,destroy(),void,Destroys the ticket and destroys any sensitive information stored in it.,"

destroy
public void destroy()
             throws DestroyFailedException
Destroys the ticket and destroys any sensitive information stored in
 it.

Specified by:
destroy in interface Destroyable
Throws:
DestroyFailedException - if the destroy operation fails. 


"
KerberosTicket,equals(Object other),boolean,Compares the specified Object with this KerberosTicket for equality.,"

equals
public boolean equals(Object other)
Compares the specified Object with this KerberosTicket for equality.
 Returns true if the given object is also a
 KerberosTicket and the two
 KerberosTicket instances are equivalent.

Overrides:
equals in class Object
Parameters:
other - the Object to compare to
Returns:
true if the specified object is equal to this KerberosTicket,
 false otherwise. NOTE: Returns false if either of the KerberosTicket
 objects has been destroyed.
Since:
1.6
See Also:
Object.hashCode(), 
HashMap


"
KerberosTicket,getAuthTime(),Date,Returns the time that the client was authenticated.,"

getAuthTime
public final Date getAuthTime()
Returns the time that the client was authenticated.

Returns:
the time that the client was authenticated
         or null if not set.


"
KerberosTicket,getClient(),KerberosPrincipal,Returns the client principal associated with this ticket.,"

getClient
public final KerberosPrincipal getClient()
Returns the client principal associated with this ticket.

Returns:
the client principal.


"
KerberosTicket,getClientAddresses(),InetAddress[],Returns a list of addresses from where the ticket can be used.,"

getClientAddresses
public final InetAddress[] getClientAddresses()
Returns a list of addresses from where the ticket can be used.

Returns:
ths list of addresses or null, if the field was not
 provided.


"
KerberosTicket,getEncoded(),byte[],Returns an ASN.1 encoding of the entire ticket.,"

getEncoded
public final byte[] getEncoded()
Returns an ASN.1 encoding of the entire ticket.

Returns:
an ASN.1 encoding of the entire ticket.


"
KerberosTicket,getEndTime(),Date,Returns the expiration time for this ticket's validity period.,"

getEndTime
public final Date getEndTime()
Returns the expiration time for this ticket's validity period.

Returns:
the expiration time for this ticket's validity period.


"
KerberosTicket,getFlags(),boolean[],Returns the flags associated with this ticket.,"

getFlags
public final boolean[] getFlags()
Returns the flags associated with this ticket. Each element in the
 returned array indicates the value for the corresponding bit in the
 ASN.1 BitString that represents the ticket flags.

Returns:
the flags associated with this ticket.


"
KerberosTicket,getRenewTill(),Date,"Returns the latest expiration time for this ticket, including all renewals.","

getRenewTill
public final Date getRenewTill()
Returns the latest expiration time for this ticket, including all
 renewals. This will return a null value for non-renewable tickets.

Returns:
the latest expiration time for this ticket.


"
KerberosTicket,getServer(),KerberosPrincipal,Returns the service principal associated with this ticket.,"

getServer
public final KerberosPrincipal getServer()
Returns the service principal associated with this ticket.

Returns:
the service principal.


"
KerberosTicket,getSessionKey(),SecretKey,Returns the session key associated with this ticket.,"

getSessionKey
public final SecretKey getSessionKey()
Returns the session key associated with this ticket.

Returns:
the session key.


"
KerberosTicket,getSessionKeyType(),int,Returns the key type of the session key associated with this ticket as defined by the Kerberos Protocol Specification.,"

getSessionKeyType
public final int getSessionKeyType()
Returns the key type of the session key associated with this
 ticket as defined by the Kerberos Protocol Specification.

Returns:
the key type of the session key associated with this
 ticket.
See Also:
getSessionKey()


"
KerberosTicket,getStartTime(),Date,Returns the start time for this ticket's validity period.,"

getStartTime
public final Date getStartTime()
Returns the start time for this ticket's validity period.

Returns:
the start time for this ticket's validity period
         or null if not set.


"
KerberosTicket,hashCode(),int,Returns a hashcode for this KerberosTicket.,"

hashCode
public int hashCode()
Returns a hashcode for this KerberosTicket.

Overrides:
hashCode in class Object
Returns:
a hashCode() for the KerberosTicket
Since:
1.6
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
KerberosTicket,isCurrent(),boolean,Determines if this ticket is still current.,"

isCurrent
public boolean isCurrent()
Determines if this ticket is still current.

Specified by:
isCurrent in interface Refreshable
Returns:
true if this Object is currently current,
          false otherwise.


"
KerberosTicket,isDestroyed(),boolean,Determines if this ticket has been destroyed.,"

isDestroyed
public boolean isDestroyed()
Determines if this ticket has been destroyed.

Specified by:
isDestroyed in interface Destroyable
Returns:
true if this Object has been destroyed,
          false otherwise.


"
KerberosTicket,isForwardable(),boolean,Determines if this ticket is forwardable.,"

isForwardable
public final boolean isForwardable()
Determines if this ticket is forwardable.

Returns:
true if this ticket is forwardable, false if not.


"
KerberosTicket,isForwarded(),boolean,Determines if this ticket had been forwarded or was issued based on authentication involving a forwarded ticket-granting ticket.,"

isForwarded
public final boolean isForwarded()
Determines if this ticket had been forwarded or was issued based on
 authentication involving a forwarded ticket-granting ticket.

Returns:
true if this ticket had been forwarded or was issued based on
 authentication involving a forwarded ticket-granting ticket,
 false otherwise.


"
KerberosTicket,isInitial(),boolean,"Determines if this ticket was issued using the Kerberos AS-Exchange protocol, and not issued based on some ticket-granting ticket.","

isInitial
public final boolean isInitial()
Determines if this ticket was issued using the Kerberos AS-Exchange
 protocol, and not issued based on some ticket-granting ticket.

Returns:
true if this ticket was issued using the Kerberos AS-Exchange
 protocol, false if not.


"
KerberosTicket,isPostdated(),boolean,Determines is this ticket is post-dated.,"

isPostdated
public final boolean isPostdated()
Determines is this ticket is post-dated.

Returns:
true if this ticket is post-dated, false if not.


"
KerberosTicket,isProxiable(),boolean,Determines if this ticket is proxiable.,"

isProxiable
public final boolean isProxiable()
Determines if this ticket is proxiable.

Returns:
true if this ticket is proxiable, false if not.


"
KerberosTicket,isProxy(),boolean,Determines is this ticket is a proxy-ticket.,"

isProxy
public final boolean isProxy()
Determines is this ticket is a proxy-ticket.

Returns:
true if this ticket is a proxy-ticket, false if not.


"
KerberosTicket,isRenewable(),boolean,Determines is this ticket is renewable.,"

isRenewable
public final boolean isRenewable()
Determines is this ticket is renewable. If so, the refresh method can be called, assuming the validity period for
 renewing is not already over.

Returns:
true if this ticket is renewable, false if not.


"
KerberosTicket,refresh(),void,Extends the validity period of this ticket.,"

refresh
public void refresh()
             throws RefreshFailedException
Extends the validity period of this ticket. The ticket will contain
 a new session key if the refresh operation succeeds. The refresh
 operation will fail if the ticket is not renewable or the latest
 allowable renew time has passed. Any other error returned by the
 KDC will also cause this method to fail.

 Note: This method is not synchronized with the the accessor
 methods of this object. Hence callers need to be aware of multiple
 threads that might access this and try to renew it at the same
 time.

Specified by:
refresh in interface Refreshable
Throws:
RefreshFailedException - if the ticket is not renewable, or
 the latest allowable renew time has passed, or the KDC returns some
 error.
See Also:
isRenewable(), 
getRenewTill()


"
KerberosTicket,toString(),String,Returns a string representation of the object.,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
KeyTab,equals(Object other),boolean,Compares the specified Object with this KeyTab for equality.,"

equals
public boolean equals(Object other)
Compares the specified Object with this KeyTab for equality.
 Returns true if the given object is also a
 KeyTab and the two
 KeyTab instances are equivalent.

Overrides:
equals in class Object
Parameters:
other - the Object to compare to
Returns:
true if the specified object is equal to this KeyTab
See Also:
Object.hashCode(), 
HashMap


"
KeyTab,exists(),boolean,Checks if the keytab file exists.,"

exists
public boolean exists()
Checks if the keytab file exists. Implementation of this method
 should make sure that the result matches the latest status of the
 keytab file.
 
 The caller can use the result to determine if it should fallback to
 another mechanism to read the keys.

Returns:
true if the keytab file exists; false otherwise.
Throws:
SecurityException - if a security manager exists and the read
 access to the keytab file is not permitted


"
KeyTab,getInstance(),static KeyTab,Returns the default KeyTab instance that is bound to an unknown service principal.,"

getInstance
public static KeyTab getInstance()
Returns the default KeyTab instance that is bound
 to an unknown service principal.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the default keytab file and
 does not read it.
 
 Developers should call getInstance(KerberosPrincipal)
 when the bound service principal is known.

Returns:
the default keytab instance.


"
KeyTab,getInstance(File file),static KeyTab,Returns a KeyTab instance from a File object that is bound to an unknown service principal.,"

getInstance
public static KeyTab getInstance(File file)
Returns a KeyTab instance from a File object
 that is bound to an unknown service principal.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the file and does not read it.
 
 Developers should call getInstance(KerberosPrincipal,File)
 when the bound service principal is known.

Parameters:
file - the keytab File object, must not be null
Returns:
the keytab instance
Throws:
NullPointerException - if the file argument is null


"
KeyTab,getInstance(KerberosPrincipal princ),static KeyTab,Returns the default KeyTab instance that is bound to the specified service principal.,"

getInstance
public static KeyTab getInstance(KerberosPrincipal princ)
Returns the default KeyTab instance that is bound
 to the specified service principal.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the default keytab file and
 does not read it.

Parameters:
princ - the bound service principal, must not be null
Returns:
the default keytab instance
Throws:
NullPointerException - if princ is null
Since:
1.8


"
KeyTab,"getInstance(KerberosPrincipal princ, File file)",static KeyTab,Returns a KeyTab instance from a File object that is bound to the specified service principal.,"

getInstance
public static KeyTab getInstance(KerberosPrincipal princ,
                                 File file)
Returns a KeyTab instance from a File object
 that is bound to the specified service principal.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the file and does not read it.

Parameters:
princ - the bound service principal, must not be null
file - the keytab File object, must not be null
Returns:
the keytab instance
Throws:
NullPointerException - if either of the arguments is null
Since:
1.8


"
KeyTab,getKeys(KerberosPrincipal principal),KerberosKey[],Returns fresh keys for the given Kerberos principal.,"

getKeys
public KerberosKey[] getKeys(KerberosPrincipal principal)
Returns fresh keys for the given Kerberos principal.
 
 Implementation of this method should make sure the returned keys match
 the latest content of the keytab file. The result is a newly created
 copy that can be modified by the caller without modifying the keytab
 object. The caller should destroy the
 result keys after they are used.
 
 Please note that the keytab file can be created after the
 KeyTab object is instantiated and its content may change over
 time. Therefore, an application should call this method only when it
 needs to use the keys. Any previous result from an earlier invocation
 could potentially be expired.
 
 If there is any error (say, I/O error or format error)
 during the reading process of the KeyTab file, a saved result should be
 returned. If there is no saved result (say, this is the first time this
 method is called, or, all previous read attempts failed), an empty array
 should be returned. This can make sure the result is not drastically
 changed during the (probably slow) update of the keytab file.
 
 Each time this method is called and the reading of the file succeeds
 with no exception (say, I/O error or file format error),
 the result should be saved for principal. The implementation can
 also save keys for other principals having keys in the same keytab object
 if convenient.
 
 Any unsupported key read from the keytab is ignored and not included
 in the result.
 
 If this keytab is bound to a specific principal, calling this method on
 another principal will return an empty array.

Parameters:
principal - the Kerberos principal, must not be null.
Returns:
the keys (never null, may be empty)
Throws:
NullPointerException - if the principal
 argument is null
SecurityException - if a security manager exists and the read
 access to the keytab file is not permitted


"
KeyTab,getPrincipal(),KerberosPrincipal,Returns the service principal this KeyTab object is bound to.,"

getPrincipal
public KerberosPrincipal getPrincipal()
Returns the service principal this KeyTab object
 is bound to. Returns null if it's not bound.
 
 Please note the deprecated constructors create a KeyTab object bound for
 some unknown principal. In this case, this method also returns null.
 User can call isBound() to verify this case.

Returns:
the service principal
Since:
1.8


"
KeyTab,getUnboundInstance(),static KeyTab,Returns the default unbound KeyTab instance.,"

getUnboundInstance
public static KeyTab getUnboundInstance()
Returns the default unbound KeyTab instance.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the default keytab file and
 does not read it.

Returns:
the default keytab instance
Since:
1.8


"
KeyTab,getUnboundInstance(File file),static KeyTab,Returns an unbound KeyTab instance from a File object.,"

getUnboundInstance
public static KeyTab getUnboundInstance(File file)
Returns an unbound KeyTab instance from a File
 object.
 
 The result of this method is never null. This method only associates
 the returned KeyTab object with the file and does not read it.

Parameters:
file - the keytab File object, must not be null
Returns:
the keytab instance
Throws:
NullPointerException - if the file argument is null
Since:
1.8


"
KeyTab,hashCode(),int,Returns a hashcode for this KeyTab.,"

hashCode
public int hashCode()
Returns a hashcode for this KeyTab.

Overrides:
hashCode in class Object
Returns:
a hashCode() for the KeyTab
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
KeyTab,isBound(),boolean,Returns if the keytab is bound to a principal,"

isBound
public boolean isBound()
Returns if the keytab is bound to a principal

Returns:
if the keytab is bound to a principal
Since:
1.8


"
KeyTab,toString(),String,Returns a string representation of the object.,"

toString
public String toString()
Description copied from class: Object
Returns a string representation of the object. In general, the
 toString method returns a string that
 ""textually represents"" this object. The result should
 be a concise but informative representation that is easy for a
 person to read.
 It is recommended that all subclasses override this method.
 
 The toString method for class Object
 returns a string consisting of the name of the class of which the
 object is an instance, the at-sign character `@', and
 the unsigned hexadecimal representation of the hash code of the
 object. In other words, this method returns a string equal to the
 value of:
 

 getClass().getName() + '@' + Integer.toHexString(hashCode())
 

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
ServicePermission,equals(Object obj),boolean,Checks two ServicePermission objects for equality.,"

equals
public boolean equals(Object obj)
Checks two ServicePermission objects for equality.
 

Specified by:
equals in class Permission
Parameters:
obj - the object to test for equality with this object.
Returns:
true if obj is a ServicePermission, and has the
  same service principal, and actions as this
 ServicePermission object.
See Also:
Object.hashCode(), 
HashMap


"
ServicePermission,getActions(),String,Returns the canonical string representation of the actions.,"

getActions
public String getActions()
Returns the canonical string representation of the actions.
 Always returns present actions in the following order:
 initiate, accept.

Specified by:
getActions in class Permission
Returns:
the actions of this Permission.


"
ServicePermission,hashCode(),int,Returns the hash code value for this object.,"

hashCode
public int hashCode()
Returns the hash code value for this object.

Specified by:
hashCode in class Permission
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
ServicePermission,implies(Permission p),boolean,"Checks if this Kerberos service permission object ""implies"" the specified permission.","

implies
public boolean implies(Permission p)
Checks if this Kerberos service permission object ""implies"" the
 specified permission.
 
 If none of the above are true, implies returns false.

Specified by:
implies in class Permission
Parameters:
p - the permission to check against.
Returns:
true if the specified permission is implied by this object,
 false if not.


"
ServicePermission,newPermissionCollection(),PermissionCollection,Returns a PermissionCollection object for storing ServicePermission objects.,"

newPermissionCollection
public PermissionCollection newPermissionCollection()
Returns a PermissionCollection object for storing
 ServicePermission objects.
 
 ServicePermission objects must be stored in a manner that
 allows them to be inserted into the collection in any order, but
 that also enables the PermissionCollection implies method to
 be implemented in an efficient (and consistent) manner.

Overrides:
newPermissionCollection in class Permission
Returns:
a new PermissionCollection object suitable for storing
 ServicePermissions.


"
