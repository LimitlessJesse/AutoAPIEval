Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
1,BorderUIResource,1,BorderUIResource getBorderUIResource(),False,,NULL
1,BorderUIResource,2,ColorUIResource getHighlightColor(),False,,NULL
1,BorderUIResource,3,DimensionUIResource getMaximumSize(JComponent c),False,,NULL
1,BorderUIResource,4,"void installColorsAndFont(JComponent c, String uiClassName)",False,,NULL
1,BorderUIResource,5,void installUI(JComponent c),False,,NULL
2,BorderUIResource.BevelBorderUIResource,1,int getHighlightOuterColor(),False,,NULL
2,BorderUIResource.BevelBorderUIResource,2,int getHighlightInnerColor(),False,,NULL
2,BorderUIResource.BevelBorderUIResource,3,int getShadowOuterColor(),False,,NULL
2,BorderUIResource.BevelBorderUIResource,4,int getShadowInnerColor(),False,,NULL
2,BorderUIResource.BevelBorderUIResource,5,int getHighlight(),False,,NULL
3,BorderUIResource.CompoundBorderUIResource,1,BorderUIResource getOutsideBorder(),False,,NULL
3,BorderUIResource.CompoundBorderUIResource,2,BorderUIResource getInsideBorder(),False,,NULL
3,BorderUIResource.CompoundBorderUIResource,3,InsetsUIResource getOutsideBorderInsets(Component c),False,,NULL
3,BorderUIResource.CompoundBorderUIResource,4,InsetsUIResource getInsideBorderInsets(Component c),False,,NULL
3,BorderUIResource.CompoundBorderUIResource,5,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",False,,NULL
4,BorderUIResource.EmptyBorderUIResource,1,Insets getBorderInsets(Component c),False,,NULL
4,BorderUIResource.EmptyBorderUIResource,2,boolean isBorderOpaque(),False,,NULL
4,BorderUIResource.EmptyBorderUIResource,3,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",False,,NULL
4,BorderUIResource.EmptyBorderUIResource,4,"void setBorderInsets(Component c, Insets insets)",False,,NULL
4,BorderUIResource.EmptyBorderUIResource,5,void updateBorderUIResource(Border border),False,,NULL
5,BorderUIResource.EtchedBorderUIResource,1,BorderUIResource.EtchedBorderUIResource(int type),False,,NULL
5,BorderUIResource.EtchedBorderUIResource,2,int getEtchType(),False,,NULL
5,BorderUIResource.EtchedBorderUIResource,3,Color getHighlightColor(Component c),False,,NULL
5,BorderUIResource.EtchedBorderUIResource,4,Color getShadowColor(Component c),False,,NULL
5,BorderUIResource.EtchedBorderUIResource,5,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",False,,NULL
6,BorderUIResource.LineBorderUIResource,1,Color getLineColor(),False,,NULL
6,BorderUIResource.LineBorderUIResource,2,int getThickness(),False,,NULL
6,BorderUIResource.LineBorderUIResource,3,void setLineColor(Color color),False,,NULL
6,BorderUIResource.LineBorderUIResource,4,void setThickness(int thickness),False,,NULL
6,BorderUIResource.LineBorderUIResource,5,boolean isBorderOpaque(),False,,NULL
7,BorderUIResource.MatteBorderUIResource,1,int getTop(),False,,NULL
7,BorderUIResource.MatteBorderUIResource,2,int getLeft(),False,,NULL
7,BorderUIResource.MatteBorderUIResource,3,int getBottom(),False,,NULL
7,BorderUIResource.MatteBorderUIResource,4,int getRight(),False,,NULL
7,BorderUIResource.MatteBorderUIResource,5,Color getMatteColor(),False,,NULL
8,BorderUIResource.TitledBorderUIResource,1,String getTitle(),False,,NULL
8,BorderUIResource.TitledBorderUIResource,2,void setTitle(String title),False,,NULL
8,BorderUIResource.TitledBorderUIResource,3,int getTitleJustification(),False,,NULL
8,BorderUIResource.TitledBorderUIResource,4,void setTitleJustification(int titleJustification),False,,NULL
8,BorderUIResource.TitledBorderUIResource,5,int getTitlePosition(),False,,NULL
11,ColorUIResource,1,ColorUIResource(int rgb),False,,NULL
11,ColorUIResource,2,void setRGB(int rgb),False,,NULL
11,ColorUIResource,3,int getRGB(),False,,NULL
11,ColorUIResource,4,void setAlpha(int alpha),False,,NULL
11,ColorUIResource,5,int getAlpha(),False,,NULL
12,ComboBoxUI,1,void installUI(JComponent c),False,,NULL
12,ComboBoxUI,2,void uninstallUI(JComponent c),False,,NULL
12,ComboBoxUI,3,"void setPopupVisible(ComboBoxEditor editor, boolean v)",False,,NULL
12,ComboBoxUI,4,boolean isPopupVisible(ComboBoxEditor editor),False,,NULL
12,ComboBoxUI,5,void setEditable(boolean aFlag),False,,NULL
15,DesktopIconUI,1,void setIcon(Icon icon),False,,NULL
15,DesktopIconUI,2,Icon getIcon(),False,,NULL
15,DesktopIconUI,3,void setUI(DesktopIconUI ui),False,,NULL
15,DesktopIconUI,4,DesktopIconUI getUI(),False,,NULL
15,DesktopIconUI,5,void updateUI(),False,,NULL
16,DesktopPaneUI,1,ComponentUI createUI(JComponent c),False,,NULL
16,DesktopPaneUI,2,void installUI(JComponent c),False,,NULL
16,DesktopPaneUI,3,void uninstallUI(JComponent c),False,,NULL
16,DesktopPaneUI,4,"void update(Graphics g, JComponent c)",False,,NULL
16,DesktopPaneUI,5,"void paint(Graphics g, JComponent c)",False,,NULL
17,DimensionUIResource,1,int width(),False,,NULL
17,DimensionUIResource,2,int height(),False,,NULL
17,DimensionUIResource,3,DimensionUIResource getSize(),False,,NULL
17,DimensionUIResource,4,"void setSize(int width, int height)",False,,NULL
17,DimensionUIResource,5,void setSize(Dimension d),False,,NULL
18,FileChooserUI,1,"void ensureFileIsVisible(JFileChooser fc, File f)",True,,"

ensureFileIsVisible
public abstract void ensureFileIsVisible(JFileChooser fc,
                                         File f)

"
18,FileChooserUI,2,File getDirectory(),False,,NULL
18,FileChooserUI,3,File getSelectedFile(),False,,NULL
18,FileChooserUI,4,File[] getSelectedFiles(),False,,NULL
18,FileChooserUI,5,void rescanCurrentDirectory(JFileChooser fc),True,,"

rescanCurrentDirectory
public abstract void rescanCurrentDirectory(JFileChooser fc)

"
19,FontUIResource,1,FontUIResource deriveFont(int style),False,,NULL
19,FontUIResource,2,FontUIResource deriveFont(float size),False,,NULL
19,FontUIResource,3,"FontUIResource deriveFont(int style, float size)",False,,NULL
19,FontUIResource,4,"FontUIResource deriveFont(Map<? extends AttributedCharacterIterator.Attribute, ?> attributes)",False,,NULL
19,FontUIResource,5,FontUIResource deriveFont(AffineTransform trans),False,,NULL
22,InsetsUIResource,1,int getTop(),False,,NULL
22,InsetsUIResource,2,int getLeft(),False,,NULL
22,InsetsUIResource,3,int getBottom(),False,,NULL
22,InsetsUIResource,4,int getRight(),False,,NULL
22,InsetsUIResource,5,"InsetsUIResource deriveInsets(int top, int left, int bottom, int right)",False,,NULL
23,InternalFrameUI,1,void installUI(JComponent c),False,,NULL
23,InternalFrameUI,2,void uninstallUI(JComponent c),False,,NULL
23,InternalFrameUI,3,Dimension getPreferredSize(JComponent c),False,,NULL
23,InternalFrameUI,4,Dimension getMinimumSize(JComponent c),False,,NULL
23,InternalFrameUI,5,Dimension getMaximumSize(JComponent c),False,,NULL
24,LabelUI,1,void installUI(JComponent c),False,,NULL
24,LabelUI,2,void uninstallUI(JComponent c),False,,NULL
24,LabelUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
24,LabelUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
24,LabelUI,5,Dimension getMinimumSize(JComponent c),False,,NULL
25,LayerUI,1,void installUI(JComponent c),True,,"

installUI
public void installUI(JComponent c)
Configures the JLayer this LayerUI is set to.
 The default implementation registers the passed JLayer component
 as a PropertyChangeListener for the property changes of this LayerUI.

Overrides:
installUI in class ComponentUI
Parameters:
c - the JLayer component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
25,LayerUI,2,void uninstallUI(JComponent c),True,,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses the configuration which was previously set
 in the installUI(JComponent) method.
 The default implementation unregisters the passed JLayer component
 as a PropertyChangeListener for the property changes of this LayerUI.

Overrides:
uninstallUI in class ComponentUI
Parameters:
c - the component from which this UI delegate is being removed.
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
25,LayerUI,3,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component.
 Subclasses should override this method and use
 the specified Graphics object to
 render the content of the component.
 
 The default implementation paints the passed component as is.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics context in which to paint
c - the component being painted
See Also:
ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)


"
25,LayerUI,4,"void update(Graphics g, JComponent c)",False,,NULL
25,LayerUI,5,"void applyPropertyChange(PropertyChangeEvent pce, JLayer l)",False,,NULL
26,ListUI,1,int locationToIndex(Point location),False,,NULL
26,ListUI,2,"Rectangle getCellBounds(int index1, int index2)",False,,NULL
26,ListUI,3,void updateLayoutState(),False,,NULL
26,ListUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
26,ListUI,5,"int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction)",False,,NULL
28,MenuItemUI,1,MenuItemUI createUI(JComponent c),False,,NULL
28,MenuItemUI,2,"void update(Graphics g, JComponent c)",False,,NULL
28,MenuItemUI,3,Dimension getPreferredSize(JComponent c),False,,NULL
28,MenuItemUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
28,MenuItemUI,5,void installUI(JComponent c),False,,NULL
29,OptionPaneUI,1,void selectInitialValue(JOptionPane optionPane),True,,"

selectInitialValue
public abstract void selectInitialValue(JOptionPane op)
Requests the component representing the default value to have
 focus.

"
29,OptionPaneUI,2,void updateOptionPane(JOptionPane optionPane),False,,NULL
29,OptionPaneUI,3,void installUI(JComponent c),False,,NULL
29,OptionPaneUI,4,void uninstallUI(JComponent c),False,,NULL
29,OptionPaneUI,5,"void showMessageDialog(Component parentComponent, Object message)",False,,NULL
30,PanelUI,1,ComponentUI createUI(JComponent c),False,,NULL
30,PanelUI,2,void installUI(JComponent c),False,,NULL
30,PanelUI,3,void uninstallUI(JComponent c),False,,NULL
30,PanelUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
30,PanelUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
31,PopupMenuUI,1,void installUI(JComponent c),False,,NULL
31,PopupMenuUI,2,void uninstallUI(JComponent c),False,,NULL
31,PopupMenuUI,3,boolean isPopupTrigger(MouseEvent e),True,,"

isPopupTrigger
public boolean isPopupTrigger(MouseEvent e)

Since:
1.3


"
31,PopupMenuUI,4,"void update(Graphics g, JComponent c)",False,,NULL
31,PopupMenuUI,5,boolean isFocusTraversable(JPopupMenu popup),False,,NULL
32,ProgressBarUI,1,"void paintDeterminate(Graphics g, JComponent c)",False,,NULL
32,ProgressBarUI,2,"void paintIndeterminate(Graphics g, JComponent c)",False,,NULL
32,ProgressBarUI,3,Rectangle getBox(Rectangle r),False,,NULL
32,ProgressBarUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
32,ProgressBarUI,5,void setBorder(Border border),False,,NULL
33,RootPaneUI,1,void installUI(JComponent c),False,,NULL
33,RootPaneUI,2,void uninstallUI(JComponent c),False,,NULL
33,RootPaneUI,3,"void update(Graphics g, JComponent c)",False,,NULL
33,RootPaneUI,4,"boolean contains(JComponent c, int x, int y)",False,,NULL
33,RootPaneUI,5,"void paint(Graphics g, JComponent c)",False,,NULL
34,ScrollBarUI,1,"void paintTrack(Graphics g, JComponent c, Rectangle trackBounds)",False,,NULL
34,ScrollBarUI,2,"void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds)",False,,NULL
34,ScrollBarUI,3,void paintDecreaseHighlight(Graphics g),False,,NULL
34,ScrollBarUI,4,void paintIncreaseHighlight(Graphics g),False,,NULL
34,ScrollBarUI,5,void layoutContainer(Container scrollbar),False,,NULL
36,SeparatorUI,1,void installUI(JComponent c),False,,NULL
36,SeparatorUI,2,void uninstallUI(JComponent c),False,,NULL
36,SeparatorUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
36,SeparatorUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
36,SeparatorUI,5,Dimension getMinimumSize(JComponent c),False,,NULL
37,SliderUI,1,void paintThumb(Graphics g),False,,NULL
37,SliderUI,2,void paintTrack(Graphics g),False,,NULL
37,SliderUI,3,void paintTicks(Graphics g),False,,NULL
37,SliderUI,4,void paintLabels(Graphics g),False,,NULL
37,SliderUI,5,void paintFocus(Graphics g),False,,NULL
38,SpinnerUI,1,void installUI(JComponent c),False,,NULL
38,SpinnerUI,2,void uninstallUI(JComponent c),False,,NULL
38,SpinnerUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
38,SpinnerUI,4,Dimension getPreferredSize(JComponent c),False,,NULL
38,SpinnerUI,5,void layout(JComponent c),False,,NULL
39,SplitPaneUI,1,BasicSplitPaneUI createUI(JComponent x),False,,NULL
39,SplitPaneUI,2,"void finishedPaintingChildren(JSplitPane jc, Graphics g)",True,,"

finishedPaintingChildren
public abstract void finishedPaintingChildren(JSplitPane jc,
                                              Graphics g)
Messaged after the JSplitPane the receiver is providing the look
 and feel for paints its children.

"
39,SplitPaneUI,3,int getDividerLocation(JSplitPane jc),True,,"

getDividerLocation
public abstract int getDividerLocation(JSplitPane jc)
Returns the location of the divider.

"
39,SplitPaneUI,4,int getMaximumDividerLocation(JSplitPane jc),True,,"

getMaximumDividerLocation
public abstract int getMaximumDividerLocation(JSplitPane jc)
Returns the maximum possible location of the divider.

"
39,SplitPaneUI,5,void resetToPreferredSizes(JSplitPane jc),True,,"

resetToPreferredSizes
public abstract void resetToPreferredSizes(JSplitPane jc)
Messaged to relayout the JSplitPane based on the preferred size
 of the children components.

"
40,TabbedPaneUI,1,"Rectangle getTabBounds(JTabbedPane tabbedPane, int index)",True,,"

getTabBounds
public abstract Rectangle getTabBounds(JTabbedPane pane,
                                       int index)

"
40,TabbedPaneUI,2,int getTabRunCount(JTabbedPane tabbedPane),True,,"

getTabRunCount
public abstract int getTabRunCount(JTabbedPane pane)

"
40,TabbedPaneUI,3,"int tabForCoordinate(JTabbedPane tabbedPane, int x, int y)",True,,"

tabForCoordinate
public abstract int tabForCoordinate(JTabbedPane pane,
                                     int x,
                                     int y)

"
40,TabbedPaneUI,4,"void paintTab(Graphics g, int tabPlacement, Rectangle[] rects, int tabIndex, Rectangle iconRect, Rectangle textRect)",False,,NULL
40,TabbedPaneUI,5,"void scrollTabLayout(JTabbedPane tabbedPane, int tabPlacement, int selectedIndex, int x, int y, int width, int height)",False,,NULL
41,TableHeaderUI,1,TableCellRenderer getCellRenderer(int columnIndex),False,,NULL
41,TableHeaderUI,2,void setCellRenderer(TableCellRenderer renderer),False,,NULL
41,TableHeaderUI,3,void setReorderingAllowed(boolean reorderingAllowed),False,,NULL
41,TableHeaderUI,4,void setResizingAllowed(boolean resizingAllowed),False,,NULL
41,TableHeaderUI,5,void setUI(TableHeaderUI ui),False,,NULL
43,TextUI,1,int modelToView(int pos),False,,NULL
43,TextUI,2,int viewToModel(Point pt),False,,NULL
43,TextUI,3,"void damageRange(JTextComponent t, int p0, int p1)",True,,"

damageRange
public abstract void damageRange(JTextComponent t,
                                 int p0,
                                 int p1)
Causes the portion of the view responsible for the
 given part of the model to be repainted.

Parameters:
p0 - the beginning of the range >= 0
p1 - the end of the range >= p0


"
43,TextUI,4,void installUI(JComponent c),False,,NULL
43,TextUI,5,void uninstallUI(JComponent c),False,,NULL
44,ToolBarUI,1,void setRollover(boolean rollover),False,,NULL
44,ToolBarUI,2,void setFloatable(boolean floatable),False,,NULL
44,ToolBarUI,3,void setOrientation(int orientation),False,,NULL
44,ToolBarUI,4,void setBorderPainted(boolean borderPainted),False,,NULL
44,ToolBarUI,5,void setMargin(Insets m),False,,NULL
46,TreeUI,1,void installUI(JComponent c),False,,NULL
46,TreeUI,2,void uninstallUI(JComponent c),False,,NULL
46,TreeUI,3,"void paint(Graphics g, JComponent c)",False,,NULL
46,TreeUI,4,"Rectangle getPathBounds(JTree tree, TreePath path)",True,,"

getPathBounds
public abstract Rectangle getPathBounds(JTree tree,
                                        TreePath path)
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.  Will return null if
 any component in path is currently valid.

"
46,TreeUI,5,"TreePath getClosestPathForLocation(JTree tree, int x, int y)",True,,"

getClosestPathForLocation
public abstract TreePath getClosestPathForLocation(JTree tree,
                                                   int x,
                                                   int y)
Returns the path to the node that is closest to x,y.  If
 there is nothing currently visible this will return null, otherwise
 it'll always return a valid path.  If you need to test if the
 returned object is exactly at x, y you should get the bounds for
 the returned path and test x, y against that.

"
