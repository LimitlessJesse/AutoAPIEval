Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,HandlerBase,1,void setDocumentLocator(Locator locator),True,,"

setDocumentLocator
public void setDocumentLocator(Locator locator)
Deprecated. 
Receive a Locator object for document events.

 By default, do nothing.  Application writers may override this
 method in a subclass if they wish to store the locator for use
 with other document events.

Specified by:
setDocumentLocator in interface DocumentHandler
Parameters:
locator - A locator for all SAX document events.
See Also:
DocumentHandler.setDocumentLocator(org.xml.sax.Locator), 
Locator


"
0,HandlerBase,2,void startDocument(),True,,"

startDocument
public void startDocument()
                   throws SAXException
Deprecated. 
Receive notification of the beginning of the document.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the beginning
 of a document (such as allocating the root node of a tree or
 creating an output file).

Specified by:
startDocument in interface DocumentHandler
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.startDocument()


"
0,HandlerBase,3,void endDocument(),True,,"

endDocument
public void endDocument()
                 throws SAXException
Deprecated. 
Receive notification of the end of the document.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the end
 of a document (such as finalising a tree or closing an output
 file).

Specified by:
endDocument in interface DocumentHandler
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.endDocument()


"
0,HandlerBase,4,"void startElement(String name, AttributeList atts)",True,,"

startElement
public void startElement(String name,
                         AttributeList attributes)
                  throws SAXException
Deprecated. 
Receive notification of the start of an element.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the start of
 each element (such as allocating a new tree node or writing
 output to a file).

Specified by:
startElement in interface DocumentHandler
Parameters:
name - The element type name.
attributes - The specified or defaulted attributes.
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.startElement(java.lang.String, org.xml.sax.AttributeList)


"
0,HandlerBase,5,void endElement(String name),True,,"

endElement
public void endElement(String name)
                throws SAXException
Deprecated. 
Receive notification of the end of an element.

 By default, do nothing.  Application writers may override this
 method in a subclass to take specific actions at the end of
 each element (such as finalising a tree node or writing
 output to a file).

Specified by:
endElement in interface DocumentHandler
Parameters:
name - the element name
Throws:
SAXException - Any SAX exception, possibly
            wrapping another exception.
See Also:
DocumentHandler.endElement(java.lang.String)


"
1,InputSource,1,void setSystemId(String systemId),True,,"

setSystemId
public void setSystemId(String systemId)
Set the system identifier for this input source.

 The system identifier is optional if there is a byte stream
 or a character stream, but it is still useful to provide one,
 since the application can use it to resolve relative URIs
 and can include it in error messages and warnings (the parser
 will attempt to open a connection to the URI only if
 there is no byte stream or character stream specified).
If the application knows the character encoding of the
 object pointed to by the system identifier, it can register
 the encoding using the setEncoding method.
If the system identifier is a URL, it must be fully
 resolved (it may not be a relative URL).

Parameters:
systemId - The system identifier as a string.
See Also:
setEncoding(java.lang.String), 
getSystemId(), 
Locator.getSystemId(), 
SAXParseException.getSystemId()


"
1,InputSource,2,void setPublicId(String publicId),True,,"

setPublicId
public void setPublicId(String publicId)
Set the public identifier for this input source.

 The public identifier is always optional: if the application
 writer includes one, it will be provided as part of the
 location information.

Parameters:
publicId - The public identifier as a string.
See Also:
getPublicId(), 
Locator.getPublicId(), 
SAXParseException.getPublicId()


"
1,InputSource,3,void setByteStream(InputStream byteStream),True,,"

setByteStream
public void setByteStream(InputStream byteStream)
Set the byte stream for this input source.

 The SAX parser will ignore this if there is also a character
 stream specified, but it will use a byte stream in preference
 to opening a URI connection itself.
If the application knows the character encoding of the
 byte stream, it should set it with the setEncoding method.

Parameters:
byteStream - A byte stream containing an XML document or
        other entity.
See Also:
setEncoding(java.lang.String), 
getByteStream(), 
getEncoding(), 
InputStream


"
1,InputSource,4,void setCharacterStream(Reader characterStream),True,,"

setCharacterStream
public void setCharacterStream(Reader characterStream)
Set the character stream for this input source.

 If there is a character stream specified, the SAX parser
 will ignore any byte stream and will not attempt to open
 a URI connection to the system identifier.

Parameters:
characterStream - The character stream containing the
        XML document or other entity.
See Also:
getCharacterStream(), 
Reader


"
1,InputSource,5,void setEncoding(String encoding),True,,"

setEncoding
public void setEncoding(String encoding)
Set the character encoding, if known.

 The encoding must be a string acceptable for an
 XML encoding declaration (see section 4.3.3 of the XML 1.0
 recommendation).
This method has no effect when the application provides a
 character stream.

Parameters:
encoding - A string describing the character encoding.
See Also:
setSystemId(java.lang.String), 
setByteStream(java.io.InputStream), 
getEncoding()


"
