ClassName,Method,Return Type,Description,Full Description
MarshalledObject,equals(Object obj),boolean,Compares this MarshalledObject to another object.,"

equals
public boolean equals(Object obj)
Compares this MarshalledObject to another object.
 Returns true if and only if the argument refers to a
 MarshalledObject that contains exactly the same
 serialized representation of an object as this one does. The
 comparison ignores any class codebase annotation, meaning that
 two objects are equivalent if they have the same serialized
 representation except for the codebase of each class
 in the serialized representation.

Overrides:
equals in class Object
Parameters:
obj - the object to compare with this MarshalledObject
Returns:
true if the argument contains an equivalent
 serialized object; false otherwise
Since:
1.2
See Also:
Object.hashCode(), 
HashMap


"
MarshalledObject,get(),T,Returns a new copy of the contained marshalledobject.,"

get
public T get()
      throws IOException,
             ClassNotFoundException
Returns a new copy of the contained marshalledobject.  The internal
 representation is deserialized with the semantics used for
 unmarshaling parameters for RMI calls.

Returns:
a copy of the contained object
Throws:
IOException - if an IOException occurs while
 deserializing the object from its internal representation.
ClassNotFoundException - if a
 ClassNotFoundException occurs while deserializing the
 object from its internal representation.
 could not be found
Since:
1.2


"
MarshalledObject,hashCode(),int,Return a hash code for this MarshalledObject.,"

hashCode
public int hashCode()
Return a hash code for this MarshalledObject.

Overrides:
hashCode in class Object
Returns:
a hash code
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
Naming,"bind(String name, Remote obj)",static void,Binds the specified name to a remote object.,"

bind
public static void bind(String name,
                        Remote obj)
                 throws AlreadyBoundException,
                        MalformedURLException,
                        RemoteException
Binds the specified name to a remote object.

Parameters:
name - a name in URL format (without the scheme component)
obj - a reference for the remote object (usually a stub)
Throws:
AlreadyBoundException - if name is already bound
MalformedURLException - if the name is not an appropriately
  formatted URL
RemoteException - if registry could not be contacted
AccessException - if this operation is not permitted (if
 originating from a non-local host, for example)
Since:
JDK1.1


"
Naming,list(String name),static String[],Returns an array of the names bound in the registry.,"

list
public static String[] list(String name)
                     throws RemoteException,
                            MalformedURLException
Returns an array of the names bound in the registry.  The names are
 URL-formatted (without the scheme component) strings. The array contains
 a snapshot of the names present in the registry at the time of the
 call.

Parameters:
name - a registry name in URL format (without the scheme
          component)
Returns:
an array of names (in the appropriate format) bound
          in the registry
Throws:
MalformedURLException - if the name is not an appropriately
  formatted URL
RemoteException - if registry could not be contacted.
Since:
JDK1.1


"
Naming,lookup(String name),static Remote,"Returns a reference, a stub, for the remote object associated with the specified name.","

lookup
public static Remote lookup(String name)
                     throws NotBoundException,
                            MalformedURLException,
                            RemoteException
Returns a reference, a stub, for the remote object associated
 with the specified name.

Parameters:
name - a name in URL format (without the scheme component)
Returns:
a reference for a remote object
Throws:
NotBoundException - if name is not currently bound
RemoteException - if registry could not be contacted
AccessException - if this operation is not permitted
MalformedURLException - if the name is not an appropriately
  formatted URL
Since:
JDK1.1


"
Naming,"rebind(String name, Remote obj)",static void,Rebinds the specified name to a new remote object.,"

rebind
public static void rebind(String name,
                          Remote obj)
                   throws RemoteException,
                          MalformedURLException
Rebinds the specified name to a new remote object. Any existing
 binding for the name is replaced.

Parameters:
name - a name in URL format (without the scheme component)
obj - new remote object to associate with the name
Throws:
MalformedURLException - if the name is not an appropriately
  formatted URL
RemoteException - if registry could not be contacted
AccessException - if this operation is not permitted (if
 originating from a non-local host, for example)
Since:
JDK1.1


"
Naming,unbind(String name),static void,Destroys the binding for the specified name that is associated with a remote object.,"

unbind
public static void unbind(String name)
                   throws RemoteException,
                          NotBoundException,
                          MalformedURLException
Destroys the binding for the specified name that is associated
 with a remote object.

Parameters:
name - a name in URL format (without the scheme component)
Throws:
NotBoundException - if name is not currently bound
MalformedURLException - if the name is not an appropriately
  formatted URL
RemoteException - if registry could not be contacted
AccessException - if this operation is not permitted (if
 originating from a non-local host, for example)
Since:
JDK1.1


"
