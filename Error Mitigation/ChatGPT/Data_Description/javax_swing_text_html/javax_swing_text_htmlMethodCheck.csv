Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,BlockView,1,float getTopInset(),False,,NULL
0,BlockView,2,float getBottomInset(),False,,NULL
0,BlockView,3,float getLeftInset(),False,,NULL
0,BlockView,4,float getRightInset(),False,,NULL
0,BlockView,5,"void setInsets(float top, float left, float bottom, float right)",False,,NULL
1,CSS,1,CSS.Attribute getAttribute(String name),True,,"

getAttribute
public static final CSS.Attribute getAttribute(String name)
Translates a string to a CSS.Attribute object.
 This will return null if there is no attribute
 by the given name.

Parameters:
name - the name of the CSS attribute to fetch the
  typesafe enumeration for
Returns:
the CSS.Attribute object,
  or null if the string
  doesn't represent a valid attribute key


"
1,CSS,2,String[] getNames(),False,,NULL
1,CSS,3,CSS.Attribute resolve(String name),False,,NULL
1,CSS,4,int size(),False,,NULL
1,CSS,5,Iterator<CSS.Attribute> iterator(),False,,NULL
2,CSS.Attribute,1,String getName(),False,,NULL
2,CSS.Attribute,2,boolean isInherited(),True,,"

isInherited
public boolean isInherited()
Indicates if the attribute should be inherited
 from the parent or not.

"
2,CSS.Attribute,3,boolean isKnownProperty(),False,,NULL
2,CSS.Attribute,4,boolean isShorthand(),False,,NULL
2,CSS.Attribute,5,String toString(),True,,"

toString
public String toString()
The string representation of the attribute.  This
 should exactly match the string specified in the
 CSS specification.

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
3,FormSubmitEvent,1,"FormSubmitEvent(Object source, URL url, String method, Map<String, String> data)",False,,NULL
3,FormSubmitEvent,2,URL getURL(),False,,NULL
3,FormSubmitEvent,3,String getMethod(),False,,NULL
3,FormSubmitEvent,4,"Map<String, String> getData()",False,,NULL
3,FormSubmitEvent,5,String toString(),False,,NULL
4,FormView,1,"void paint(java.awt.Graphics g, java.awt.Shape allocation)",False,,NULL
4,FormView,2,float getPreferredSpan(int axis),False,,NULL
4,FormView,3,void setParent(javax.swing.text.View parent),False,,NULL
4,FormView,4,void setPropertiesFromAttributes(),False,,NULL
4,FormView,5,"void changedUpdate(javax.swing.event.DocumentEvent e, java.awt.Shape a, javax.swing.text.ViewFactory f)",False,,NULL
5,HTML,1,void setDefaultStyleSheet(StyleSheet s),False,,NULL
5,HTML,2,void setParser(Parser p),False,,NULL
5,HTML,3,"void setInnerHTML(Element elem, String html)",False,,NULL
5,HTML,4,"void insertAfterEnd(Element elem, String html)",False,,NULL
5,HTML,5,"void insertBeforeStart(Element elem, String html)",False,,NULL
6,HTML.Attribute,1,String getKey(),False,,NULL
6,HTML.Attribute,2,String toString(),True,,"

toString
public String toString()
Returns the string representation of this attribute.

Overrides:
toString in class Object
Returns:
the string representation of this attribute


"
6,HTML.Attribute,3,boolean isKnown(),False,,NULL
6,HTML.Attribute,4,boolean isObsolete(),False,,NULL
6,HTML.Attribute,5,boolean isSimple(),False,,NULL
7,HTML.Tag,1,String toString(),True,,"

toString
public String toString()
Returns the string representation of the
 tag.

Overrides:
toString in class Object
Returns:
the String representation of the tag


"
7,HTML.Tag,2,boolean isBlock(),True,,"

isBlock
public boolean isBlock()
Returns true if this tag is a block
 tag, which is a tag used to add structure to a
 document.

Returns:
true if this tag is a block
   tag, otherwise returns false


"
7,HTML.Tag,3,boolean isPreformatted(),True,,"

isPreformatted
public boolean isPreformatted()
Returns true if this tag is pre-formatted,
 which is true if the tag is either PRE or
 TEXTAREA.

Returns:
true if this tag is pre-formatted,
   otherwise returns false


"
7,HTML.Tag,4,boolean isEmpty(),False,,NULL
7,HTML.Tag,5,boolean isMetaContent(),False,,NULL
8,HTML.UnknownTag,1,void registerTag(HTML.Tag t),False,,NULL
8,HTML.UnknownTag,2,void deRegisterTag(HTML.Tag t),False,,NULL
8,HTML.UnknownTag,3,void setParser(HTMLEditorKit.Parser p),False,,NULL
8,HTML.UnknownTag,4,void setStyleSheet(StyleSheet s),False,,NULL
8,HTML.UnknownTag,5,void setDefaultStyleSheet(StyleSheet s),False,,NULL
9,HTMLDocument,1,Element getElement(String key),True,,"

getElement
public Element getElement(String id)
Returns the element that has the given id Attribute.
 If the element can't be found, null is returned.
 Note that this method works on an Attribute,
 not a character tag.  In the following HTML snippet:
 <a id=""HelloThere""> the attribute is
 'id' and the character tag is 'a'.
 This is a convenience method for
 getElement(RootElement, HTML.Attribute.id, id).
 This is not thread-safe.

Parameters:
id - the string representing the desired Attribute
Returns:
the element with the specified Attribute
          or null if it can't be found,
          or null if id is null
Since:
1.3
See Also:
HTML.Attribute


"
9,HTMLDocument,2,void setBase(URL url),True,,"

setBase
public void setBase(URL u)
Sets the location to resolve relative URLs against.  By
 default this will be the document's URL if the document
 was loaded from a URL.  If a base tag is found and
 can be parsed, it will be used as the base location.
 This also sets the base of the StyleSheet
 to be u as well as the base of the document.

Parameters:
u - the desired base URL


"
9,HTMLDocument,3,void setPreservesUnknownTags(boolean preserves),True,,"

setPreservesUnknownTags
public void setPreservesUnknownTags(boolean preservesTags)
Determines how unknown tags are handled by the parser.
 If set to true, unknown
 tags are put in the model, otherwise they are dropped.

Parameters:
preservesTags - true if unknown tags should be
          saved in the model, otherwise tags are dropped
See Also:
HTML.Tag


"
9,HTMLDocument,4,void setParser(Parser p),False,,NULL
9,HTMLDocument,5,"void setInnerHTML(Element elem, String htmlText)",True,,"

setInnerHTML
public void setInnerHTML(Element elem,
                         String htmlText)
                  throws BadLocationException,
                         IOException
Replaces the children of the given element with the contents
 specified as an HTML string.

 This will be seen as at least two events, n inserts followed by
 a remove.
Consider the following structure (the elem
 parameter is in bold).

     <body>
       |
     <div>
      /  \
    <p>   <p>
 
Invoking setInnerHTML(elem, ""<ul><li>"")
 results in the following structure (new elements are in red).

     <body>
       |
     <div>
         \
         <ul>
           \
           <li>
 
Parameter elem must not be a leaf element,
 otherwise an IllegalArgumentException is thrown.
 If either elem or htmlText parameter
 is null, no changes are made to the document.
For this to work correctly, the document must have an
 HTMLEditorKit.Parser set. This will be the case
 if the document was created from an HTMLEditorKit via the
 createDefaultDocument method.

Parameters:
elem - the branch element whose children will be replaced
htmlText - the string to be parsed and assigned to elem
Throws:
IllegalArgumentException - if elem is a leaf
IllegalStateException - if an HTMLEditorKit.Parser
         has not been defined
BadLocationException
IOException
Since:
1.3


"
10,HTMLDocument.Iterator,1,boolean isValid(),True,,"

isValid
public abstract boolean isValid()
Indicates if the iterator is currently
 representing an occurrence of a tag.  If
 false there are no more tags for this iterator.

Returns:
true if the iterator is currently representing an
              occurrence of a tag, otherwise returns false


"
10,HTMLDocument.Iterator,2,void next(),True,,"

next
public abstract void next()
Move the iterator forward to the next occurrence
 of the tag it represents.

"
10,HTMLDocument.Iterator,3,String getTag(),False,,NULL
10,HTMLDocument.Iterator,4,int getStartOffset(),True,,"

getStartOffset
public abstract int getStartOffset()
Returns the start of the range for which the current occurrence of
 the tag is defined and has the same attributes.

Returns:
the start of the range, or -1 if it can't be found


"
10,HTMLDocument.Iterator,5,int getEndOffset(),True,,"

getEndOffset
public abstract int getEndOffset()
Returns the end of the range for which the current occurrence of
 the tag is defined and has the same attributes.

Returns:
the end of the range


"
11,HTMLEditorKit,1,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag)",True,,"

insertHTML
public void insertHTML(HTMLDocument doc,
                       int offset,
                       String html,
                       int popDepth,
                       int pushDepth,
                       HTML.Tag insertTag)
                throws BadLocationException,
                       IOException
Inserts HTML into an existing document.

Parameters:
doc - the document to insert into
offset - the offset to insert HTML at
popDepth - the number of ElementSpec.EndTagTypes to generate before
        inserting
pushDepth - the number of ElementSpec.StartTagTypes with a direction
        of ElementSpec.JoinNextDirection that should be generated
        before inserting, but after the end tags have been generated
insertTag - the first tag to start inserting into document
Throws:
RuntimeException - (will eventually be a BadLocationException)
            if pos is invalid
BadLocationException
IOException


"
11,HTMLEditorKit,2,"void write(Writer out, Document doc, int pos, int len)",True,,"

write
public void write(Writer out,
                  Document doc,
                  int pos,
                  int len)
           throws IOException,
                  BadLocationException
Write content from a document to the given stream
 in a format appropriate for this kind of content handler.

Overrides:
write in class DefaultEditorKit
Parameters:
out - the stream to write to
doc - the source for the write
pos - the location in the document to fetch the
   content
len - the amount to write out
Throws:
IOException - on any I/O error
BadLocationException - if pos represents an invalid
   location within the document


"
11,HTMLEditorKit,3,"void read(Reader in, Document doc, int pos)",True,,"

read
public void read(Reader in,
                 Document doc,
                 int pos)
          throws IOException,
                 BadLocationException
Inserts content from the given stream. If doc is
 an instance of HTMLDocument, this will read
 HTML 3.2 text. Inserting HTML into a non-empty document must be inside
 the body Element, if you do not insert into the body an exception will
 be thrown. When inserting into a non-empty document all tags outside
 of the body (head, title) will be dropped.

Overrides:
read in class DefaultEditorKit
Parameters:
in - the stream to read from
doc - the destination for the insertion
pos - the location in the document to place the
   content
Throws:
IOException - on any I/O error
BadLocationException - if pos represents an invalid
   location within the document
RuntimeException - (will eventually be a BadLocationException)
            if pos is invalid


"
11,HTMLEditorKit,4,"void insertAfterEnd(Element elem, String html)",False,,NULL
11,HTMLEditorKit,5,"void insertBeforeStart(Element elem, String html)",False,,NULL
13,HTMLEditorKit.HTMLTextAction,1,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag)",False,,NULL
13,HTMLEditorKit.HTMLTextAction,2,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Tag alternateTag)",False,,NULL
13,HTMLEditorKit.HTMLTextAction,3,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Tag alternateTag, HTML.Tag[] insertTags)",False,,NULL
13,HTMLEditorKit.HTMLTextAction,4,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Tag alternateTag, HTML.Tag[] insertTags, HTML.Tag[] alternateTags)",False,,NULL
13,HTMLEditorKit.HTMLTextAction,5,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Tag alternateTag, HTML.Tag[] insertTags, HTML.Tag[] alternateTags, HTML.Tag[] insertAfterTags)",False,,NULL
14,HTMLEditorKit.InsertHTMLTextAction,1,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag)",False,,NULL
14,HTMLEditorKit.InsertHTMLTextAction,2,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Attribute[] attrs)",False,,NULL
14,HTMLEditorKit.InsertHTMLTextAction,3,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Attribute[] attrs, boolean isContainer)",False,,NULL
14,HTMLEditorKit.InsertHTMLTextAction,4,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Attribute[] attrs, boolean isContainer, boolean replaceSelection)",False,,NULL
14,HTMLEditorKit.InsertHTMLTextAction,5,"void insertHTML(HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag insertTag, HTML.Attribute[] attrs, boolean isContainer, boolean replaceSelection, boolean adjustSelection)",False,,NULL
15,HTMLEditorKit.LinkController,1,void mouseClicked(MouseEvent e),True,,"

mouseClicked
public void mouseClicked(MouseEvent e)
Called for a mouse click event.
 If the component is read-only (ie a browser) then
 the clicked event is used to drive an attempt to
 follow the reference specified by a link.

Specified by:
mouseClicked in interface MouseListener
Overrides:
mouseClicked in class MouseAdapter
Parameters:
e - the mouse event
See Also:
MouseListener.mouseClicked(java.awt.event.MouseEvent)


"
15,HTMLEditorKit.LinkController,2,void mouseEntered(MouseEvent e),False,,NULL
15,HTMLEditorKit.LinkController,3,void mouseExited(MouseEvent e),False,,NULL
15,HTMLEditorKit.LinkController,4,void mousePressed(MouseEvent e),False,,NULL
15,HTMLEditorKit.LinkController,5,void mouseReleased(MouseEvent e),False,,NULL
16,HTMLEditorKit.Parser,1,"void parse(Reader r, HTMLEditorKit.ParserCallback cb, boolean ignoreCharSet)",True,,"

parse
public abstract void parse(Reader r,
                           HTMLEditorKit.ParserCallback cb,
                           boolean ignoreCharSet)
                    throws IOException
Parse the given stream and drive the given callback
 with the results of the parse.  This method should
 be implemented to be thread-safe.

Throws:
IOException


"
16,HTMLEditorKit.Parser,2,"void parse(Reader r, HTMLEditorKit.ParserCallback cb, int pos, boolean ignoreCharSet)",False,,NULL
16,HTMLEditorKit.Parser,3,"void parse(InputStream in, HTMLEditorKit.ParserCallback cb, boolean ignoreCharSet)",False,,NULL
16,HTMLEditorKit.Parser,4,"void parse(Reader r, HTMLEditorKit.ParserCallback cb, int pos)",False,,NULL
16,HTMLEditorKit.Parser,5,"void parse(InputStream in, HTMLEditorKit.ParserCallback cb)",False,,NULL
19,HTMLWriter,1,void write(),True,,"

write
public void write()
           throws IOException,
                  BadLocationException
Iterates over the
 Element tree and controls the writing out of
 all the tags and its attributes.

Specified by:
write in class AbstractWriter
Throws:
IOException - on any I/O error
BadLocationException - if pos represents an invalid
            location within the document.


"
19,HTMLWriter,2,void writeAttributes(AttributeSet attributes),True,,"

writeAttributes
protected void writeAttributes(AttributeSet attr)
                        throws IOException
Writes out the attribute set.  Ignores all
 attributes with a key of type HTML.Tag,
 attributes with a key of type StyleConstants,
 and attributes with a key of type
 HTML.Attribute.ENDTAG.

Overrides:
writeAttributes in class AbstractWriter
Parameters:
attr - an AttributeSet
Throws:
IOException - on any I/O error


"
19,HTMLWriter,3,void writeEndTag(Element elem),False,,NULL
19,HTMLWriter,4,void writeStartTag(Element elem),False,,NULL
19,HTMLWriter,5,void writeStyleSheet(StyleSheet styleSheet),False,,NULL
20,ImageView,1,void setLoadsSynchronously(boolean loadsSynchronously),True,,"

setLoadsSynchronously
public void setLoadsSynchronously(boolean newValue)
Sets how the image is loaded. If newValue is true,
 the image we be loaded when first asked for, otherwise it will
 be loaded asynchronously. The default is to not load synchronously,
 that is to load the image asynchronously.

"
20,ImageView,2,void setProperties(Hashtable props),False,,NULL
20,ImageView,3,void setDocument(HTMLDocument doc),False,,NULL
20,ImageView,4,void setElement(Element elem),False,,NULL
20,ImageView,5,void setAttributes(AttributeSet attr),False,,NULL
21,InlineView,1,void setAttributes(AttributeSet attr),False,,NULL
21,InlineView,2,"void paint(Graphics g, Shape a)",False,,NULL
21,InlineView,3,float getPreferredSpan(int axis),False,,NULL
21,InlineView,4,"Shape modelToView(int pos, Shape a, Position.Bias b)",False,,NULL
21,InlineView,5,"int viewToModel(float x, float y, Shape a, Position.Bias[] biasReturn)",False,,NULL
22,ListView,1,void setModel(ListModel model),False,,NULL
22,ListView,2,void setSelectionModel(ListSelectionModel selectionModel),False,,NULL
22,ListView,3,void setCellRenderer(ListCellRenderer cellRenderer),False,,NULL
22,ListView,4,void setLayoutOrientation(int layoutOrientation),False,,NULL
22,ListView,5,void setVisibleRowCount(int visibleRowCount),False,,NULL
23,MinimalHTMLWriter,1,void write(),True,,"

write
public void write()
           throws IOException,
                  BadLocationException
Generates HTML output
 from a StyledDocument.

Specified by:
write in class AbstractWriter
Throws:
IOException - on any I/O error
BadLocationException - if pos represents an invalid
            location within the document.


"
23,MinimalHTMLWriter,2,void writeAttributes(AttributeSet attr),True,,"

writeAttributes
protected void writeAttributes(AttributeSet attr)
                        throws IOException
Writes out all the attributes for the
 following types:
  StyleConstants.ParagraphConstants,
  StyleConstants.CharacterConstants,
  StyleConstants.FontConstants,
  StyleConstants.ColorConstants.
 The attribute name and value are separated by a colon.
 Each pair is separated by a semicolon.

Overrides:
writeAttributes in class AbstractWriter
Parameters:
attr - an AttributeSet.
Throws:
IOException - on any I/O error


"
23,MinimalHTMLWriter,3,void writeEmbeddedTags(AttributeSet attr),False,,NULL
23,MinimalHTMLWriter,4,void writeStartTag(Element elem),False,,NULL
23,MinimalHTMLWriter,5,void writeEndTag(Element elem),False,,NULL
24,ObjectView,1,void setParameters(AttributeSet attr),False,,NULL
24,ObjectView,2,void setDocument(Document doc),False,,NULL
24,ObjectView,3,void setParent(View parent),False,,NULL
24,ObjectView,4,void setElement(Element elem),False,,NULL
24,ObjectView,5,void setContainer(Container c),False,,NULL
25,Option,1,void setLabel(String label),True,,"

setLabel
public void setLabel(String label)
Sets the label to be used for the option.

"
25,Option,2,String getLabel(),True,,"

getLabel
public String getLabel()
Fetch the label associated with the option.

"
25,Option,3,void setValue(String value),False,,NULL
25,Option,4,String getValue(),True,,"

getValue
public String getValue()
Convenience method to return the string associated
 with the value attribute.  If the
 value has not been specified, the label will be
 returned.

"
25,Option,5,void setSelected(boolean selected),False,,NULL
26,ParagraphView,1,float getMinimumSpan(int axis),True,,"

getMinimumSpan
public float getMinimumSpan(int axis)
Determines the minimum span for this view along an
 axis.  Returns 0 if the view is not visible, otherwise
 it calls the superclass method to get the minimum span.

Overrides:
getMinimumSpan in class BoxView
Parameters:
axis - may be either View.X_AXIS or
  View.Y_AXIS
Returns:
the minimum span the view can be rendered into
See Also:
BoxView.getMinimumSpan(int)


"
26,ParagraphView,2,float getPreferredSpan(int axis),True,,"

getPreferredSpan
public float getPreferredSpan(int axis)
Determines the preferred span for this view.  Returns
 0 if the view is not visible, otherwise it calls the
 superclass method to get the preferred span.
 axis.

Overrides:
getPreferredSpan in class BoxView
Parameters:
axis - may be either View.X_AXIS or View.Y_AXIS
Returns:
the span the view would like to be rendered into;
           typically the view is told to render into the span
           that is returned, although there is no guarantee;
           the parent may choose to resize or break the view
See Also:
BoxView.getPreferredSpan(int)


"
26,ParagraphView,3,void setParent(View parent),True,,"

setParent
public void setParent(View parent)
Establishes the parent view for this view.  This is
 guaranteed to be called before any other methods if the
 parent view is functioning properly.
 
 This is implemented
 to forward to the superclass as well as call the
 setPropertiesFromAttributes
 method to set the paragraph properties from the css
 attributes.  The call is made at this time to ensure
 the ability to resolve upward through the parents
 view attributes.

Overrides:
setParent in class FlowView
Parameters:
parent - the new parent, or null if the view is
  being removed from a parent it was previously added
  to


"
26,ParagraphView,4,void setPropertiesFromAttributes(),True,,"

setPropertiesFromAttributes
protected void setPropertiesFromAttributes()
Sets up the paragraph from css attributes instead of
 the values found in StyleConstants (i.e. which are used
 by the superclass).  Since

Overrides:
setPropertiesFromAttributes in class ParagraphView


"
26,ParagraphView,5,"void setInsets(float top, float left, float bottom, float right)",False,,NULL
27,StyleSheet,1,void addRule(String rule),True,,"

addRule
public void addRule(String rule)
Adds a set of rules to the sheet.  The rules are expected to
 be in valid CSS format.  Typically this would be called as
 a result of parsing a <style> tag.

"
27,StyleSheet,2,void removeRule(String rule),False,,NULL
27,StyleSheet,3,String getRule(String selector),False,,NULL
27,StyleSheet,4,Enumeration<String> getRuleNames(),False,,NULL
27,StyleSheet,5,void importStyleSheet(URL url),True,,"

importStyleSheet
public void importStyleSheet(URL url)
Imports a style sheet from url. The resulting rules
 are directly added to the receiver. If you do not want the rules
 to become part of the receiver, create a new StyleSheet and use
 addStyleSheet to link it in.

Since:
1.3


"
28,StyleSheet.BoxPainter,1,"void paint(java.awt.Graphics g, int x, int y, int w, int h, javax.swing.text.View v)",False,,NULL
28,StyleSheet.BoxPainter,2,java.awt.Rectangle getPaintingInsets(),False,,NULL
28,StyleSheet.BoxPainter,3,java.awt.Dimension getPreferredSize(javax.swing.text.View v),False,,NULL
28,StyleSheet.BoxPainter,4,"void paint(java.awt.Graphics g, float x, float y, float w, float h, javax.swing.text.View v)",False,,NULL
28,StyleSheet.BoxPainter,5,java.awt.Rectangle getInteriorAllocation(javax.swing.text.View v),False,,NULL
29,StyleSheet.ListPainter,1,"void paint(java.awt.Graphics g, java.awt.Shape allocation)",False,,NULL
29,StyleSheet.ListPainter,2,"java.awt.Shape modelToView(int pos, java.awt.Shape a, javax.swing.text.Position.Bias b)",False,,NULL
29,StyleSheet.ListPainter,3,"int viewToModel(float x, float y, java.awt.Shape a, javax.swing.text.Position.Bias[] biasReturn)",False,,NULL
29,StyleSheet.ListPainter,4,void setStyleSheet(javax.swing.text.html.StyleSheet styleSheet),False,,NULL
29,StyleSheet.ListPainter,5,void setBulleted(boolean bulleted),False,,NULL
