Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,_DynAnyFactoryStub,1,DynAny create_dyn_any(org.omg.CORBA.TypeCode type),False,,NULL
0,_DynAnyFactoryStub,2,DynAny create_dyn_any_from_type_code(),False,,NULL
0,_DynAnyFactoryStub,3,DynAny create_dyn_any_from_type_code(org.omg.CORBA.TypeCode type),False,,NULL
0,_DynAnyFactoryStub,4,DynAny create_dyn_any_from_any(org.omg.CORBA.Any value),False,,NULL
0,_DynAnyFactoryStub,5,DynAny create_basic_dyn_any(org.omg.CORBA.TypeCode type),False,,NULL
1,_DynAnyStub,1,void from_any(org.omg.CORBA.Any a),False,,NULL
1,_DynAnyStub,2,org.omg.CORBA.Any to_any(),False,,NULL
1,_DynAnyStub,3,void destroy(),True,,"

destroy
public void destroy()
Destroys a DynAny object.
 This operation frees any resources used to represent the data value associated with a DynAny object.
 It must be invoked on references obtained from one of the creation operations on the ORB interface
 or on a reference returned by DynAny.copy() to avoid resource leaks.
 Invoking destroy on component DynAny objects (for example, on objects returned by the
 current_component operation) does nothing.
 Destruction of a DynAny object implies destruction of all DynAny objects obtained from it.
 That is, references to components of a destroyed DynAny become invalid.
 Invocations on such references raise OBJECT_NOT_EXIST.
 It is possible to manipulate a component of a DynAny beyond the life time of the DynAny
 from which the component was obtained by making a copy of the component with the copy operation
 before destroying the DynAny from which the component was obtained.

Specified by:
destroy in interface DynAnyOperations


"
1,_DynAnyStub,4,org.omg.CORBA.TypeCode type(),False,,NULL
1,_DynAnyStub,5,org.omg.CORBA.Any to_any(),False,,NULL
2,_DynArrayStub,1,void set_elements(int length),False,,NULL
2,_DynArrayStub,2,int get_elements(),False,,NULL
2,_DynArrayStub,3,void set_elements_as_dyn_any(DynAny[] value),True,,"

set_elements_as_dyn_any
public void set_elements_as_dyn_any(DynAny[] value)
                             throws TypeMismatch,
                                    InvalidValue
Sets the DynArray to contain the passed elements.

Specified by:
set_elements_as_dyn_any in interface DynArrayOperations
Throws:
TypeMismatch - if one or more elements have a type that is inconsistent with the DynArrays TypeCode
InvalidValue - if the sequence does not contain the same number of elements as the array dimension


"
2,_DynArrayStub,4,DynAny[] get_elements_as_dyn_any(),True,,"

get_elements_as_dyn_any
public DynAny[] get_elements_as_dyn_any()
Returns the elements of the DynArray as DynAnys.

Specified by:
get_elements_as_dyn_any in interface DynArrayOperations


"
2,_DynArrayStub,5,void set_elements_as_dyn_any(DynAny[] value),True,,"

set_elements_as_dyn_any
public void set_elements_as_dyn_any(DynAny[] value)
                             throws TypeMismatch,
                                    InvalidValue
Sets the DynArray to contain the passed elements.

Specified by:
set_elements_as_dyn_any in interface DynArrayOperations
Throws:
TypeMismatch - if one or more elements have a type that is inconsistent with the DynArrays TypeCode
InvalidValue - if the sequence does not contain the same number of elements as the array dimension


"
3,_DynEnumStub,1,void set_as_string(String value),True,,"

set_as_string
public void set_as_string(String value)
                   throws InvalidValue
Sets the value of the DynEnum to the enumerated value whose IDL identifier is passed in the value parameter.

Specified by:
set_as_string in interface DynEnumOperations
Throws:
InvalidValue - If value contains a string that is not a valid IDL identifier
            for the corresponding enumerated type


"
3,_DynEnumStub,2,String get_as_string(),True,,"

get_as_string
public String get_as_string()
Returns the value of the DynEnum as an IDL identifier.

Specified by:
get_as_string in interface DynEnumOperations


"
3,_DynEnumStub,3,void set_as_ulong(int value),True,,"

set_as_ulong
public void set_as_ulong(int value)
                  throws InvalidValue
Sets the value of the DynEnum as the enumerated value's ordinal value.

Specified by:
set_as_ulong in interface DynEnumOperations
Throws:
InvalidValue - If value contains a value that is outside the range of ordinal values
            for the corresponding enumerated type


"
3,_DynEnumStub,4,int get_as_ulong(),True,,"

get_as_ulong
public int get_as_ulong()
Returns the value of the DynEnum as the enumerated value's ordinal value.
 Enumerators have ordinal values 0 to n-1, as they appear from left to right
 in the corresponding IDL definition.

Specified by:
get_as_ulong in interface DynEnumOperations


"
3,_DynEnumStub,5,void set_as_ulonglong(long value),False,,NULL
4,_DynFixedStub,1,void assign(long value),False,,NULL
4,_DynFixedStub,2,long get_value(),False,,NULL
4,_DynFixedStub,3,void from_any(org.omg.CORBA.Any value),False,,NULL
4,_DynFixedStub,4,org.omg.CORBA.Any to_any(),False,,NULL
4,_DynFixedStub,5,void destroy(),True,,"

destroy
public void destroy()
Destroys a DynAny object.
 This operation frees any resources used to represent the data value associated with a DynAny object.
 It must be invoked on references obtained from one of the creation operations on the ORB interface
 or on a reference returned by DynAny.copy() to avoid resource leaks.
 Invoking destroy on component DynAny objects (for example, on objects returned by the
 current_component operation) does nothing.
 Destruction of a DynAny object implies destruction of all DynAny objects obtained from it.
 That is, references to components of a destroyed DynAny become invalid.
 Invocations on such references raise OBJECT_NOT_EXIST.
 It is possible to manipulate a component of a DynAny beyond the life time of the DynAny
 from which the component was obtained by making a copy of the component with the copy operation
 before destroying the DynAny from which the component was obtained.

Specified by:
destroy in interface DynAnyOperations


"
5,_DynSequenceStub,1,int component_count(),True,,"

component_count
public int component_count()
Returns the number of components of a DynAny.
 For a DynAny without components, it returns zero.
 The operation only counts the components at the top level.
 For example, if component_count is invoked on a DynStruct with a single member,
 the return value is 1, irrespective of the type of the member.
 
For sequences, the operation returns the current number of elements.
 For structures, exceptions, and value types, the operation returns the number of members.
 For arrays, the operation returns the number of elements.
 For unions, the operation returns 2 if the discriminator indicates that a named member is active,
 otherwise, it returns 1.
 For DynFixed and DynEnum, the operation returns zero.
 

Specified by:
component_count in interface DynAnyOperations


"
5,_DynSequenceStub,2,void set_length(int len),True,,"

set_length
public void set_length(int len)
                throws InvalidValue
Sets the length of the sequence.
 Increasing the length of a sequence adds new elements at the tail without affecting the values
 of already existing elements. Newly added elements are default-initialized.
 Increasing the length of a sequence sets the current position to the first newly-added element
 if the previous current position was -1. Otherwise, if the previous current position was not -1,
 the current position is not affected.
 Decreasing the length of a sequence removes elements from the tail without affecting the value
 of those elements that remain. The new current position after decreasing the length of a sequence
 is determined as follows:
 
If the length of the sequence is set to zero, the current position is set to -1.
 If the current position is -1 before decreasing the length, it remains at -1.
 If the current position indicates a valid element and that element is not removed when the length
     is decreased, the current position remains unaffected.
 If the current position indicates a valid element and that element is removed,
     the current position is set to -1.
 

Specified by:
set_length in interface DynSequenceOperations
Throws:
InvalidValue - if this is a bounded sequence and len is larger than the bound


"
5,_DynSequenceStub,3,void from_any(Any value),True,,"

from_any
public void from_any(Any value)
              throws TypeMismatch,
                     InvalidValue
Initializes the value associated with a DynAny object with the value contained in an any.
 The current position of the target DynAny is set to zero for values that have components
 and to -1 for values that do not have components.

Specified by:
from_any in interface DynAnyOperations
Throws:
TypeMismatch - if the type of the passed Any is not equivalent to the type of target DynAny
InvalidValue - if the passed Any does not contain a legal value (such as a null string)


"
5,_DynSequenceStub,4,Any to_any(),True,,"

to_any
public Any to_any()
Creates an any value from a DynAny object.
 A copy of the TypeCode associated with the DynAny object is assigned to the resulting any.
 The value associated with the DynAny object is copied into the any.

Specified by:
to_any in interface DynAnyOperations
Returns:
a new Any object with the same value and TypeCode


"
5,_DynSequenceStub,5,DynAny[] get_elements(),False,,NULL
6,_DynStructStub,1,void from_any(org.omg.CORBA.Any a),False,,NULL
6,_DynStructStub,2,org.omg.CORBA.Any to_any(),False,,NULL
6,_DynStructStub,3,void destroy(),True,,"

destroy
public void destroy()
Destroys a DynAny object.
 This operation frees any resources used to represent the data value associated with a DynAny object.
 It must be invoked on references obtained from one of the creation operations on the ORB interface
 or on a reference returned by DynAny.copy() to avoid resource leaks.
 Invoking destroy on component DynAny objects (for example, on objects returned by the
 current_component operation) does nothing.
 Destruction of a DynAny object implies destruction of all DynAny objects obtained from it.
 That is, references to components of a destroyed DynAny become invalid.
 Invocations on such references raise OBJECT_NOT_EXIST.
 It is possible to manipulate a component of a DynAny beyond the life time of the DynAny
 from which the component was obtained by making a copy of the component with the copy operation
 before destroying the DynAny from which the component was obtained.

Specified by:
destroy in interface DynAnyOperations


"
6,_DynStructStub,4,org.omg.CORBA.TypeCode type(),False,,NULL
6,_DynStructStub,5,org.omg.CORBA.Any get_members(),False,,NULL
7,_DynUnionStub,1,org.omg.DynamicAny.DynAny get_discriminator(),False,,NULL
7,_DynUnionStub,2,void set_discriminator(org.omg.DynamicAny.DynAny discriminator),False,,NULL
7,_DynUnionStub,3,org.omg.CORBA.TypeCode type(),False,,NULL
7,_DynUnionStub,4,org.omg.DynamicAny.DynAny member(),False,,NULL
7,_DynUnionStub,5,void member(org.omg.DynamicAny.DynAny value),False,,NULL
8,_DynValueStub,1,void from_any(Any a),True,,"

from_any
public void from_any(Any value)
              throws TypeMismatch,
                     InvalidValue
Initializes the value associated with a DynAny object with the value contained in an any.
 The current position of the target DynAny is set to zero for values that have components
 and to -1 for values that do not have components.

Specified by:
from_any in interface DynAnyOperations
Throws:
TypeMismatch - if the type of the passed Any is not equivalent to the type of target DynAny
InvalidValue - if the passed Any does not contain a legal value (such as a null string)


"
8,_DynValueStub,2,Any to_any(),True,,"

to_any
public Any to_any()
Creates an any value from a DynAny object.
 A copy of the TypeCode associated with the DynAny object is assigned to the resulting any.
 The value associated with the DynAny object is copied into the any.

Specified by:
to_any in interface DynAnyOperations
Returns:
a new Any object with the same value and TypeCode


"
8,_DynValueStub,3,"void from_any(Any a, TypeCode tc)",False,,NULL
8,_DynValueStub,4,void from_value(java.lang.Object value),False,,NULL
8,_DynValueStub,5,java.lang.Object get_value(),False,,NULL
9,AnySeqHelper,1,int get_length(),False,,NULL
9,AnySeqHelper,2,"void insert(int index, org.omg.CORBA.Any element)",False,,NULL
9,AnySeqHelper,3,org.omg.CORBA.Any get_element(int index),False,,NULL
9,AnySeqHelper,4,void set_elements(org.omg.CORBA.Any[] value),False,,NULL
9,AnySeqHelper,5,void remove(int index),False,,NULL
10,DynAnyFactoryHelper,1,DynAny create_dyn_any(org.omg.CORBA.Any value),False,,NULL
10,DynAnyFactoryHelper,2,DynAny create_dyn_any_from_typecode(org.omg.CORBA.TypeCode type),False,,NULL
10,DynAnyFactoryHelper,3,DynAny create_dyn_any(org.omg.CORBA.TypeCode type),False,,NULL
10,DynAnyFactoryHelper,4,"DynAny create_dyn_any(org.omg.CORBA.TypeCode type, org.omg.CORBA.Any value)",False,,NULL
10,DynAnyFactoryHelper,5,DynAny create_basic_dyn_any(org.omg.CORBA.TypeCode type),False,,NULL
11,DynAnyHelper,1,DynAny create_dyn_any(org.omg.CORBA.Any a),False,,NULL
11,DynAnyHelper,2,DynAny create_basic_dyn_any(org.omg.CORBA.TypeCode tc),False,,NULL
11,DynAnyHelper,3,DynAny create_dyn_any_from_type_code(org.omg.CORBA.TypeCode tc),False,,NULL
11,DynAnyHelper,4,"DynAny create_dyn_any_from_type_code(org.omg.CORBA.TypeCode tc, org.omg.CORBA.Any a)",False,,NULL
11,DynAnyHelper,5,DynAny create_most_specific_dyn_any(org.omg.CORBA.Any a),False,,NULL
12,DynAnySeqHelper,1,org.omg.DynamicAny.DynAnySeq create(),False,,NULL
12,DynAnySeqHelper,2,void insert(org.omg.CORBA.Any a),False,,NULL
12,DynAnySeqHelper,3,org.omg.CORBA.Any get(int index),False,,NULL
12,DynAnySeqHelper,4,int length(),False,,NULL
12,DynAnySeqHelper,5,void remove(int index),False,,NULL
13,DynArrayHelper,1,int get_length(),False,,NULL
13,DynArrayHelper,2,void set_length(int len),False,,NULL
13,DynArrayHelper,3,Any get_elements(),False,,NULL
13,DynArrayHelper,4,void set_elements(Any value),False,,NULL
13,DynArrayHelper,5,void assign(DynArray dyn_array),False,,NULL
14,DynEnumHelper,1,String get_as_string(),False,,NULL
14,DynEnumHelper,2,int get_as_ulong(),False,,NULL
14,DynEnumHelper,3,void set_as_string(String value),False,,NULL
14,DynEnumHelper,4,void set_as_ulong(int value),False,,NULL
14,DynEnumHelper,5,String get_as_string(),False,,NULL
15,DynFixedHelper,1,void insert_fixed(BigDecimal value),False,,NULL
15,DynFixedHelper,2,BigDecimal get_value(),False,,NULL
15,DynFixedHelper,3,void set_value(BigDecimal value),False,,NULL
15,DynFixedHelper,4,int digits(),False,,NULL
15,DynFixedHelper,5,int scale(),False,,NULL
17,DynStructHelper,1,org.omg.DynamicAny.DynStruct create_dyn_struct(),False,,NULL
17,DynStructHelper,2,org.omg.DynamicAny.DynAny create_dyn_any(),False,,NULL
17,DynStructHelper,3,org.omg.CORBA.TypeCode get_dyn_struct_tc(),False,,NULL
17,DynStructHelper,4,void insert_boolean(boolean value),False,,NULL
17,DynStructHelper,5,void insert_long(long value),False,,NULL
20,FieldNameHelper,1,String getFieldName(int index),False,,NULL
20,FieldNameHelper,2,int getFieldIndex(String name),False,,NULL
20,FieldNameHelper,3,String[] getFieldNames(),False,,NULL
20,FieldNameHelper,4,int getMemberIndex(String name),False,,NULL
20,FieldNameHelper,5,String getMemberName(int index),False,,NULL
21,NameDynAnyPair,1,String name(),False,,NULL
21,NameDynAnyPair,2,org.omg.DynamicAny.DynAny value(),False,,NULL
21,NameDynAnyPair,3,void name(String value),False,,NULL
21,NameDynAnyPair,4,void value(org.omg.DynamicAny.DynAny value),False,,NULL
21,NameDynAnyPair,5,org.omg.DynamicAny.NameDynAnyPair copy(),False,,NULL
22,NameDynAnyPairHelper,1,NameDynAnyPair insert(int index),False,,NULL
22,NameDynAnyPairHelper,2,void remove(int index),False,,NULL
22,NameDynAnyPairHelper,3,NameDynAnyPair get(int index),False,,NULL
22,NameDynAnyPairHelper,4,int count(),False,,NULL
22,NameDynAnyPairHelper,5,void clear(),False,,NULL
23,NameDynAnyPairSeqHelper,1,NameDynAnyPairSeq create(),False,,NULL
23,NameDynAnyPairSeqHelper,2,void insert(NameDynAnyPair value),False,,NULL
23,NameDynAnyPairSeqHelper,3,NameDynAnyPair get(int index),False,,NULL
23,NameDynAnyPairSeqHelper,4,int size(),False,,NULL
23,NameDynAnyPairSeqHelper,5,void remove(int index),False,,NULL
24,NameValuePair,1,Any value(),False,,NULL
24,NameValuePair,2,String id(),False,,NULL
24,NameValuePair,3,void insert(NameValuePair elem),False,,NULL
24,NameValuePair,4,void insert_any(Any value),False,,NULL
24,NameValuePair,5,void set_value(Any value),False,,NULL
26,NameValuePairSeqHelper,1,NameValuePairSeq create(),False,,NULL
26,NameValuePairSeqHelper,2,int length(),False,,NULL
26,NameValuePairSeqHelper,3,"void insert(DynamicAny d, NameValuePairSeq seq)",False,,NULL
26,NameValuePairSeqHelper,4,void remove(DynamicAny d),False,,NULL
