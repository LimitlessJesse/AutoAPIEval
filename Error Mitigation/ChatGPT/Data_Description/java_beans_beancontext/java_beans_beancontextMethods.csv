ClassName,Method,Return Type,Description,Full Description
BeanContextChildSupport,"addPropertyChangeListener(String name, PropertyChangeListener pcl)",void,Add a PropertyChangeListener for a specific property.,"

addPropertyChangeListener
public void addPropertyChangeListener(String name,
                                      PropertyChangeListener pcl)
Add a PropertyChangeListener for a specific property.
 The same listener object may be added more than once.  For each
 property,  the listener will be invoked the number of times it was added
 for that property.
 If name or pcl is null, no exception is thrown
 and no action is taken.

Specified by:
addPropertyChangeListener in interface BeanContextChild
Parameters:
name - The name of the property to listen on
pcl - The PropertyChangeListener to be added


"
BeanContextChildSupport,"addVetoableChangeListener(String name, VetoableChangeListener vcl)",void,Add a VetoableChangeListener for a specific property.,"

addVetoableChangeListener
public void addVetoableChangeListener(String name,
                                      VetoableChangeListener vcl)
Add a VetoableChangeListener for a specific property.
 The same listener object may be added more than once.  For each
 property,  the listener will be invoked the number of times it was added
 for that property.
 If name or vcl is null, no exception is thrown
 and no action is taken.

Specified by:
addVetoableChangeListener in interface BeanContextChild
Parameters:
name - The name of the property to listen on
vcl - The VetoableChangeListener to be added


"
BeanContextChildSupport,"firePropertyChange(String name, Object oldValue, Object newValue)",void,Report a bound property update to any registered listeners.,"

firePropertyChange
public void firePropertyChange(String name,
                               Object oldValue,
                               Object newValue)
Report a bound property update to any registered listeners. No event is
 fired if old and new are equal and non-null.

Parameters:
name - The programmatic name of the property that was changed
oldValue - The old value of the property
newValue - The new value of the property


"
BeanContextChildSupport,"fireVetoableChange(String name, Object oldValue, Object newValue)",void,Report a vetoable property update to any registered listeners.,"

fireVetoableChange
public void fireVetoableChange(String name,
                               Object oldValue,
                               Object newValue)
                        throws PropertyVetoException
Report a vetoable property update to any registered listeners.
 If anyone vetos the change, then fire a new event
 reverting everyone to the old value and then rethrow
 the PropertyVetoException. 

 No event is fired if old and new are equal and non-null.
 

Parameters:
name - The programmatic name of the property that is about to
 change
oldValue - The old value of the property
newValue - - The new value of the property
Throws:
PropertyVetoException - if the recipient wishes the property
 change to be rolled back.


"
BeanContextChildSupport,getBeanContext(),BeanContext,Gets the nesting BeanContext for this BeanContextChildSupport.,"

getBeanContext
public BeanContext getBeanContext()
Gets the nesting BeanContext
 for this BeanContextChildSupport.

Specified by:
getBeanContext in interface BeanContextChild
Returns:
the nesting BeanContext for
 this BeanContextChildSupport.


"
BeanContextChildSupport,getBeanContextChildPeer(),BeanContextChild,Gets the BeanContextChild associated with this BeanContextChildSupport.,"

getBeanContextChildPeer
public BeanContextChild getBeanContextChildPeer()
Gets the BeanContextChild associated with this
 BeanContextChildSupport.

Returns:
the BeanContextChild peer of this class


"
BeanContextChildSupport,initializeBeanContextResources(),protected void,This method may be overridden by subclasses to provide their own initialization behaviors.,"

initializeBeanContextResources
protected void initializeBeanContextResources()
This method may be overridden by subclasses to provide their own
 initialization behaviors. When invoked any resources required by the
 BeanContextChild should be obtained from the current BeanContext.

"
BeanContextChildSupport,isDelegated(),boolean,Reports whether or not this class is a delegate of another.,"

isDelegated
public boolean isDelegated()
Reports whether or not this class is a delegate of another.

Returns:
true if this class is a delegate of another


"
BeanContextChildSupport,releaseBeanContextResources(),protected void,This method may be overridden by subclasses to provide their own release behaviors.,"

releaseBeanContextResources
protected void releaseBeanContextResources()
This method may be overridden by subclasses to provide their own
 release behaviors. When invoked any resources held by this instance
 obtained from its current BeanContext property should be released
 since the object is no longer nested within that BeanContext.

"
BeanContextChildSupport,"removePropertyChangeListener(String name, PropertyChangeListener pcl)",void,Remove a PropertyChangeListener for a specific property.,"

removePropertyChangeListener
public void removePropertyChangeListener(String name,
                                         PropertyChangeListener pcl)
Remove a PropertyChangeListener for a specific property.
 If pcl was added more than once to the same event
 source for the specified property, it will be notified one less time
 after being removed.
 If name is null, no exception is thrown
 and no action is taken.
 If pcl is null, or was never added for the specified
 property, no exception is thrown and no action is taken.

Specified by:
removePropertyChangeListener in interface BeanContextChild
Parameters:
name - The name of the property that was listened on
pcl - The PropertyChangeListener to be removed


"
BeanContextChildSupport,"removeVetoableChangeListener(String name, VetoableChangeListener vcl)",void,Removes a VetoableChangeListener.,"

removeVetoableChangeListener
public void removeVetoableChangeListener(String name,
                                         VetoableChangeListener vcl)
Removes a VetoableChangeListener.
 If pcl was added more than once to the same event
 source for the specified property, it will be notified one less time
 after being removed.
 If name is null, no exception is thrown
 and no action is taken.
 If vcl is null, or was never added for the specified
 property, no exception is thrown and no action is taken.

Specified by:
removeVetoableChangeListener in interface BeanContextChild
Parameters:
name - The name of the property that was listened on
vcl - The VetoableChangeListener to be removed


"
BeanContextChildSupport,serviceAvailable(BeanContextServiceAvailableEvent bcsae),void,A new service is available from the nesting BeanContext.,"

serviceAvailable
public void serviceAvailable(BeanContextServiceAvailableEvent bcsae)
A new service is available from the nesting BeanContext.

 Subclasses may override this method in order to implement their own
 behaviors

Specified by:
serviceAvailable in interface BeanContextServicesListener
Parameters:
bcsae - The BeanContextServiceAvailableEvent fired as a
 result of a service becoming available


"
BeanContextChildSupport,serviceRevoked(BeanContextServiceRevokedEvent bcsre),void,A service provided by the nesting BeanContext has been revoked.,"

serviceRevoked
public void serviceRevoked(BeanContextServiceRevokedEvent bcsre)
A service provided by the nesting BeanContext has been revoked.

 Subclasses may override this method in order to implement their own
 behaviors.

Specified by:
serviceRevoked in interface BeanContextServiceRevokedListener
Parameters:
bcsre - The BeanContextServiceRevokedEvent fired as a
 result of a service being revoked


"
BeanContextChildSupport,setBeanContext(BeanContext bc),void,Sets the BeanContext for this BeanContextChildSupport.,"

setBeanContext
public void setBeanContext(BeanContext bc)
                    throws PropertyVetoException
Sets the BeanContext for
 this BeanContextChildSupport.

Specified by:
setBeanContext in interface BeanContextChild
Parameters:
bc - the new value to be assigned to the BeanContext
 property
Throws:
PropertyVetoException - if the change is rejected


"
BeanContextChildSupport,validatePendingSetBeanContext(BeanContext newValue),boolean,Called from setBeanContext to validate (or otherwise) the pending change in the nesting BeanContext property value.,"

validatePendingSetBeanContext
public boolean validatePendingSetBeanContext(BeanContext newValue)
Called from setBeanContext to validate (or otherwise) the
 pending change in the nesting BeanContext property value.
 Returning false will cause setBeanContext to throw
 PropertyVetoException.

Parameters:
newValue - the new value that has been requested for
  the BeanContext property
Returns:
true if the change operation is to be vetoed


"
BeanContextEvent,getBeanContext(),BeanContext,Gets the BeanContext associated with this event.,"

getBeanContext
public BeanContext getBeanContext()
Gets the BeanContext associated with this event.

Returns:
the BeanContext associated with this event.


"
BeanContextEvent,getPropagatedFrom(),BeanContext,Gets the BeanContext from which this event was propagated.,"

getPropagatedFrom
public BeanContext getPropagatedFrom()
Gets the BeanContext from which this event was propagated.

Returns:
the BeanContext from which this
 event was propagated


"
BeanContextEvent,isPropagated(),boolean,Reports whether or not this event is propagated from some other BeanContext.,"

isPropagated
public boolean isPropagated()
Reports whether or not this event is
 propagated from some other BeanContext.

Returns:
true if propagated, false
 if not


"
BeanContextEvent,setPropagatedFrom(BeanContext bc),void,Sets the BeanContext from which this event was propagated.,"

setPropagatedFrom
public void setPropagatedFrom(BeanContext bc)
Sets the BeanContext from which this event was propagated.

Parameters:
bc - the BeanContext from which this event
 was propagated


"
BeanContextMembershipEvent,contains(Object child),boolean,Is the child specified affected by the event?,"

contains
public boolean contains(Object child)
Is the child specified affected by the event?

Parameters:
child - the object to check for being affected
Returns:
true if affected, false
 if not


"
BeanContextMembershipEvent,iterator(),Iterator,Gets the array of children affected by this event.,"

iterator
public Iterator iterator()
Gets the array of children affected by this event.

Returns:
the array of children effected


"
BeanContextMembershipEvent,size(),int,Gets the number of children affected by the notification.,"

size
public int size()
Gets the number of children affected by the notification.

Returns:
the number of children affected by the notification


"
BeanContextMembershipEvent,toArray(),Object[],Gets the array of children affected by this event.,"

toArray
public Object[] toArray()
Gets the array of children affected by this event.

Returns:
the array of children affected


"
BeanContextServiceAvailableEvent,getCurrentServiceSelectors(),Iterator,Gets the list of service dependent selectors.,"

getCurrentServiceSelectors
public Iterator getCurrentServiceSelectors()
Gets the list of service dependent selectors.

Returns:
the current selectors available from the service


"
BeanContextServiceAvailableEvent,getServiceClass(),Class,Gets the service class that is the subject of this notification.,"

getServiceClass
public Class getServiceClass()
Gets the service class that is the subject of this notification.

Returns:
A Class reference to the newly available service


"
BeanContextServiceAvailableEvent,getSourceAsBeanContextServices(),BeanContextServices,Gets the source as a reference of type BeanContextServices.,"

getSourceAsBeanContextServices
public BeanContextServices getSourceAsBeanContextServices()
Gets the source as a reference of type BeanContextServices.

Returns:
The context in which the service has become available


"
BeanContextServiceRevokedEvent,getServiceClass(),Class,Gets the service class that is the subject of this notification,"

getServiceClass
public Class getServiceClass()
Gets the service class that is the subject of this notification

Returns:
A Class reference to the
 service that is being revoked


"
BeanContextServiceRevokedEvent,getSourceAsBeanContextServices(),BeanContextServices,Gets the source as a reference of type BeanContextServices,"

getSourceAsBeanContextServices
public BeanContextServices getSourceAsBeanContextServices()
Gets the source as a reference of type BeanContextServices

Returns:
the BeanContextServices from which
 this service is being revoked


"
BeanContextServiceRevokedEvent,isCurrentServiceInvalidNow(),boolean,"Reports if the current service is being forcibly revoked, in which case the references are now invalidated and unusable.","

isCurrentServiceInvalidNow
public boolean isCurrentServiceInvalidNow()
Reports if the current service is being forcibly revoked,
 in which case the references are now invalidated and unusable.

Returns:
true if current service is being forcibly revoked


"
BeanContextServiceRevokedEvent,isServiceClass(Class service),boolean,Checks this event to determine whether or not the service being revoked is of a particular class.,"

isServiceClass
public boolean isServiceClass(Class service)
Checks this event to determine whether or not
 the service being revoked is of a particular class.

Parameters:
service - the service of interest (should be non-null)
Returns:
true if the service being revoked is of the
 same class as the specified service


"
BeanContextServicesSupport,addBeanContextServicesListener(BeanContextServicesListener bcsl),void,add a BeanContextServicesListener,"

addBeanContextServicesListener
public void addBeanContextServicesListener(BeanContextServicesListener bcsl)
add a BeanContextServicesListener

Specified by:
addBeanContextServicesListener in interface BeanContextServices
Parameters:
bcsl - the BeanContextServicesListener to add
Throws:
NullPointerException - if the argument is null


"
BeanContextServicesSupport,"addService(Class serviceClass, BeanContextServiceProvider bcsp)",boolean,add a service,"

addService
public boolean addService(Class serviceClass,
                          BeanContextServiceProvider bcsp)
add a service

Specified by:
addService in interface BeanContextServices
Parameters:
serviceClass - the service class
bcsp - the service provider
Returns:
true if the service was successful added, false otherwise


"
BeanContextServicesSupport,"addService(Class serviceClass, BeanContextServiceProvider bcsp, boolean fireEvent)",protected boolean,add a service,"

addService
protected boolean addService(Class serviceClass,
                             BeanContextServiceProvider bcsp,
                             boolean fireEvent)
add a service

Parameters:
serviceClass - the service class
bcsp - the service provider
fireEvent - whether or not an event should be fired
Returns:
true if the service was successfully added


"
BeanContextServicesSupport,bcsPreDeserializationHook(ObjectInputStream ois),protected void,called from BeanContextSupport readObject before it deserializes the children ...,"

bcsPreDeserializationHook
protected void bcsPreDeserializationHook(ObjectInputStream ois)
                                  throws IOException,
                                         ClassNotFoundException
called from BeanContextSupport readObject before it deserializes the
 children ...

 This class will deserialize any Serializable BeanContextServiceProviders
 serialized earlier thus making them available to the children when they
 deserialized.

 subclasses may envelope this method to insert their own serialization
 processing that has to occur prior to serialization of the children

Overrides:
bcsPreDeserializationHook in class BeanContextSupport
Parameters:
ois - the ObjectInputStream to use during deserialization
Throws:
IOException - if deserialization failed
ClassNotFoundException - if needed classes are not found


"
BeanContextServicesSupport,bcsPreSerializationHook(ObjectOutputStream oos),protected void,called from BeanContextSupport writeObject before it serializes the children ...,"

bcsPreSerializationHook
protected void bcsPreSerializationHook(ObjectOutputStream oos)
                                throws IOException
called from BeanContextSupport writeObject before it serializes the
 children ...

 This class will serialize any Serializable BeanContextServiceProviders
 herein.

 subclasses may envelope this method to insert their own serialization
 processing that has to occur prior to serialization of the children

Overrides:
bcsPreSerializationHook in class BeanContextSupport
Parameters:
oos - the ObjectOutputStream to use during serialization
Throws:
IOException - if serialization failed


"
BeanContextServicesSupport,"childJustRemovedHook(Object child, BeanContextSupport.BCSChild bcsc)",protected void,called from superclass child removal operations after a child has been successfully removed.,"

childJustRemovedHook
protected void childJustRemovedHook(Object child,
                                    BeanContextSupport.BCSChild bcsc)
called from superclass child removal operations after a child
 has been successfully removed. called with child synchronized.

 This subclass uses this hook to immediately revoke any services
 being used by this child if it is a BeanContextChild.

 subclasses may envelope this method in order to implement their
 own child removal side-effects.

Overrides:
childJustRemovedHook in class BeanContextSupport
Parameters:
child - the child
bcsc - the BCSChild


"
BeanContextServicesSupport,"createBCSChild(Object targetChild, Object peer)",protected BeanContextSupport.BCSChild,Subclasses can override this method to insert their own subclass of Child without having to override add() or the other Collection methods that add children to the set.,"

createBCSChild
protected BeanContextSupport.BCSChild createBCSChild(Object targetChild,
                                                     Object peer)

 Subclasses can override this method to insert their own subclass
 of Child without having to override add() or the other Collection
 methods that add children to the set.
 

Overrides:
createBCSChild in class BeanContextSupport
Parameters:
targetChild - the child to create the Child on behalf of
peer - the peer if the targetChild and peer are related by BeanContextProxy


"
BeanContextServicesSupport,"createBCSSServiceProvider(Class sc, BeanContextServiceProvider bcsp)",protected BeanContextServicesSupport.BCSSServiceProvider,subclasses can override this method to create new subclasses of BCSSServiceProvider without having to override addService() in order to instantiate.,"

createBCSSServiceProvider
protected BeanContextServicesSupport.BCSSServiceProvider createBCSSServiceProvider(Class sc,
                                                                                   BeanContextServiceProvider bcsp)
subclasses can override this method to create new subclasses of
 BCSSServiceProvider without having to override addService() in
 order to instantiate.

Parameters:
sc - the class
bcsp - the service provider
Returns:
a service provider without overriding addService()


"
BeanContextServicesSupport,fireServiceAdded(BeanContextServiceAvailableEvent bcssae),protected void,Fires a BeanContextServiceAvailableEvent indicating that a new service has become available.,"

fireServiceAdded
protected final void fireServiceAdded(BeanContextServiceAvailableEvent bcssae)
Fires a BeanContextServiceAvailableEvent indicating that a new
 service has become available.

Parameters:
bcssae - the BeanContextServiceAvailableEvent


"
BeanContextServicesSupport,fireServiceAdded(Class serviceClass),protected void,Fires a BeanContextServiceEvent notifying of a new service.,"

fireServiceAdded
protected final void fireServiceAdded(Class serviceClass)
Fires a BeanContextServiceEvent notifying of a new service.

Parameters:
serviceClass - the service class


"
BeanContextServicesSupport,fireServiceRevoked(BeanContextServiceRevokedEvent bcsre),protected void,Fires a BeanContextServiceEvent notifying of a service being revoked.,"

fireServiceRevoked
protected final void fireServiceRevoked(BeanContextServiceRevokedEvent bcsre)
Fires a BeanContextServiceEvent notifying of a service being revoked.

Parameters:
bcsre - the BeanContextServiceRevokedEvent


"
BeanContextServicesSupport,"fireServiceRevoked(Class serviceClass, boolean revokeNow)",protected void,Fires a BeanContextServiceRevokedEvent indicating that a particular service is no longer available.,"

fireServiceRevoked
protected final void fireServiceRevoked(Class serviceClass,
                                        boolean revokeNow)
Fires a BeanContextServiceRevokedEvent
 indicating that a particular service is
 no longer available.

Parameters:
serviceClass - the service class
revokeNow - whether or not the event should be revoked now


"
BeanContextServicesSupport,getBeanContextServicesPeer(),BeanContextServices,Gets the BeanContextServices associated with this BeanContextServicesSupport.,"

getBeanContextServicesPeer
public BeanContextServices getBeanContextServicesPeer()
Gets the BeanContextServices associated with this
 BeanContextServicesSupport.

Returns:
the instance of BeanContext
 this object is providing the implementation for.


"
BeanContextServicesSupport,getChildBeanContextServicesListener(Object child),protected static BeanContextServicesListener,Gets the BeanContextServicesListener (if any) of the specified child.,"

getChildBeanContextServicesListener
protected static final BeanContextServicesListener getChildBeanContextServicesListener(Object child)
Gets the BeanContextServicesListener (if any) of the specified
 child.

Parameters:
child - the specified child
Returns:
the BeanContextServicesListener (if any) of the specified child


"
BeanContextServicesSupport,getCurrentServiceClasses(),Iterator,Gets the currently available services for this context.,"

getCurrentServiceClasses
public Iterator getCurrentServiceClasses()
Description copied from interface: BeanContextServices
Gets the currently available services for this context.

Specified by:
getCurrentServiceClasses in interface BeanContextServices
Returns:
an iterator for all the currently registered service classes.


"
BeanContextServicesSupport,getCurrentServiceSelectors(Class serviceClass),Iterator,"Gets the list of service dependent service parameters (Service Selectors) for the specified service, by calling getCurrentServiceSelectors() on the underlying BeanContextServiceProvider.","

getCurrentServiceSelectors
public Iterator getCurrentServiceSelectors(Class serviceClass)
Description copied from interface: BeanContextServices
Gets the list of service dependent service parameters
 (Service Selectors) for the specified service, by
 calling getCurrentServiceSelectors() on the
 underlying BeanContextServiceProvider.

Specified by:
getCurrentServiceSelectors in interface BeanContextServices
Parameters:
serviceClass - the specified service
Returns:
an iterator for all the currently available service selectors
 (if any) available for the specified service.


"
BeanContextServicesSupport,"getService(BeanContextChild child, Object requestor, Class serviceClass, Object serviceSelector, BeanContextServiceRevokedListener bcsrl)",Object,obtain a service which may be delegated,"

getService
public Object getService(BeanContextChild child,
                         Object requestor,
                         Class serviceClass,
                         Object serviceSelector,
                         BeanContextServiceRevokedListener bcsrl)
                  throws TooManyListenersException
obtain a service which may be delegated

Specified by:
getService in interface BeanContextServices
Parameters:
child - the BeanContextChild
 associated with this request
requestor - the object requesting the service
serviceClass - class of the requested service
serviceSelector - the service dependent parameter
bcsrl - the
 BeanContextServiceRevokedListener to notify
 if the service should later become revoked
Returns:
a reference to this context's named
 Service as requested or null
Throws:
TooManyListenersException - if there are too many listeners


"
BeanContextServicesSupport,hasService(Class serviceClass),boolean,"has a service, which may be delegated","

hasService
public boolean hasService(Class serviceClass)
has a service, which may be delegated

Specified by:
hasService in interface BeanContextServices
Parameters:
serviceClass - the service in question
Returns:
true if the service is available


"
BeanContextServicesSupport,initialize(),void,called by BeanContextSupport superclass during construction and deserialization to initialize subclass transient state.,"

initialize
public void initialize()
called by BeanContextSupport superclass during construction and
 deserialization to initialize subclass transient state.

 subclasses may envelope this method, but should not override it or
 call it directly.

Overrides:
initialize in class BeanContextSupport


"
BeanContextServicesSupport,initializeBeanContextResources(),protected void,called from setBeanContext to notify a BeanContextChild to allocate resources obtained from the nesting BeanContext.,"

initializeBeanContextResources
protected void initializeBeanContextResources()
called from setBeanContext to notify a BeanContextChild
 to allocate resources obtained from the nesting BeanContext.

 subclasses may envelope this method to implement their own semantics.

Overrides:
initializeBeanContextResources in class BeanContextChildSupport


"
BeanContextServicesSupport,releaseBeanContextResources(),protected void,called from setBeanContext to notify a BeanContextChild to release resources obtained from the nesting BeanContext.,"

releaseBeanContextResources
protected void releaseBeanContextResources()
called from setBeanContext to notify a BeanContextChild
 to release resources obtained from the nesting BeanContext.

 This method revokes any services obtained from its parent.

 subclasses may envelope this method to implement their own semantics.

Overrides:
releaseBeanContextResources in class BeanContextChildSupport


"
BeanContextServicesSupport,"releaseService(BeanContextChild child, Object requestor, Object service)",void,release a service,"

releaseService
public void releaseService(BeanContextChild child,
                           Object requestor,
                           Object service)
release a service

Specified by:
releaseService in interface BeanContextServices
Parameters:
child - the BeanContextChild
requestor - the requestor
service - the service


"
BeanContextServicesSupport,removeBeanContextServicesListener(BeanContextServicesListener bcsl),void,remove a BeanContextServicesListener,"

removeBeanContextServicesListener
public void removeBeanContextServicesListener(BeanContextServicesListener bcsl)
remove a BeanContextServicesListener

Specified by:
removeBeanContextServicesListener in interface BeanContextServices
Parameters:
bcsl - the BeanContextServicesListener
 to remove from this context


"
BeanContextServicesSupport,"revokeService(Class serviceClass, BeanContextServiceProvider bcsp, boolean revokeCurrentServicesNow)",void,remove a service,"

revokeService
public void revokeService(Class serviceClass,
                          BeanContextServiceProvider bcsp,
                          boolean revokeCurrentServicesNow)
remove a service

Specified by:
revokeService in interface BeanContextServices
Parameters:
serviceClass - the service class
bcsp - the service provider
revokeCurrentServicesNow - whether or not to revoke the service


"
BeanContextServicesSupport,serviceAvailable(BeanContextServiceAvailableEvent bcssae),void,"BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself.","

serviceAvailable
public void serviceAvailable(BeanContextServiceAvailableEvent bcssae)
BeanContextServicesListener callback, propagates event to all
 currently registered listeners and BeanContextServices children,
 if this BeanContextService does not already implement this service
 itself.

 subclasses may override or envelope this method to implement their
 own propagation semantics.

Specified by:
serviceAvailable in interface BeanContextServicesListener
Overrides:
serviceAvailable in class BeanContextChildSupport
Parameters:
bcssae - The BeanContextServiceAvailableEvent fired as a
 result of a service becoming available


"
BeanContextServicesSupport,serviceRevoked(BeanContextServiceRevokedEvent bcssre),void,"BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself.","

serviceRevoked
public void serviceRevoked(BeanContextServiceRevokedEvent bcssre)
BeanContextServicesListener callback, propagates event to all
 currently registered listeners and BeanContextServices children,
 if this BeanContextService does not already implement this service
 itself.

 subclasses may override or envelope this method to implement their
 own propagation semantics.

Specified by:
serviceRevoked in interface BeanContextServiceRevokedListener
Overrides:
serviceRevoked in class BeanContextChildSupport
Parameters:
bcssre - The BeanContextServiceRevokedEvent fired as a
 result of a service being revoked


"
BeanContextServicesSupport.BCSSServiceProvider,getServiceProvider(),protected BeanContextServiceProvider,Returns the service provider.,"

getServiceProvider
protected BeanContextServiceProvider getServiceProvider()
Returns the service provider.

Returns:
the service provider


"
BeanContextSupport,add(Object targetChild),boolean,Adds/nests a child within this BeanContext.,"

add
public boolean add(Object targetChild)
Adds/nests a child within this BeanContext.
 
 Invoked as a side effect of java.beans.Beans.instantiate().
 If the child object is not valid for adding then this method
 throws an IllegalStateException.
 

Specified by:
add in interface Collection
Parameters:
targetChild - The child objects to nest
 within this BeanContext
Returns:
true if the child was added successfully.
See Also:
validatePendingAdd(java.lang.Object)


"
BeanContextSupport,addAll(Collection c),boolean,"add Collection to set of Children (Unsupported) implementations must synchronized on the hierarchy lock and ""children"" protected field","

addAll
public boolean addAll(Collection c)
add Collection to set of Children (Unsupported)
 implementations must synchronized on the hierarchy lock and ""children"" protected field

Specified by:
addAll in interface Collection
Parameters:
c - collection containing elements to be added to this collection
Returns:
this implementation unconditionally throws UnsupportedOperationException
Throws:
UnsupportedOperationException - thrown unconditionally by this implementation
See Also:
Collection.add(Object)


"
BeanContextSupport,addBeanContextMembershipListener(BeanContextMembershipListener bcml),void,Adds a BeanContextMembershipListener,"

addBeanContextMembershipListener
public void addBeanContextMembershipListener(BeanContextMembershipListener bcml)
Adds a BeanContextMembershipListener

Specified by:
addBeanContextMembershipListener in interface BeanContext
Parameters:
bcml - the BeanContextMembershipListener to add
Throws:
NullPointerException - if the argument is null


"
BeanContextSupport,avoidingGui(),boolean,Used to determine if the BeanContext child is avoiding using its GUI.,"

avoidingGui
public boolean avoidingGui()
Used to determine if the BeanContext
 child is avoiding using its GUI.

Specified by:
avoidingGui in interface Visibility
Returns:
is this instance avoiding using its GUI?
See Also:
Visibility


"
BeanContextSupport,bcsChildren(),protected Iterator,Returns an iterator of all children of this BeanContext.,"

bcsChildren
protected Iterator bcsChildren()
Returns an iterator of all children
 of this BeanContext.

Returns:
an iterator for all the current BCSChild values


"
BeanContextSupport,bcsPreDeserializationHook(ObjectInputStream ois),protected void,called by readObject after defaultReadObject() but prior to deserialization of any children.,"

bcsPreDeserializationHook
protected void bcsPreDeserializationHook(ObjectInputStream ois)
                                  throws IOException,
                                         ClassNotFoundException
called by readObject after defaultReadObject() but prior to
 deserialization of any children.

 This method may be overridden by subclasses to perform custom
 deserialization of their state prior to this superclass deserializing
 the children.

 This method should not however be used by subclasses to replace their
 own implementation (if any) of readObject().

Parameters:
ois - the ObjectInputStream to use during deserialization
Throws:
IOException - if deserialization failed
ClassNotFoundException - if needed classes are not found


"
BeanContextSupport,bcsPreSerializationHook(ObjectOutputStream oos),protected void,called by writeObject after defaultWriteObject() but prior to serialization of currently serializable children.,"

bcsPreSerializationHook
protected void bcsPreSerializationHook(ObjectOutputStream oos)
                                throws IOException
called by writeObject after defaultWriteObject() but prior to
 serialization of currently serializable children.

 This method may be overridden by subclasses to perform custom
 serialization of their state prior to this superclass serializing
 the children.

 This method should not however be used by subclasses to replace their
 own implementation (if any) of writeObject().

Parameters:
oos - the ObjectOutputStream to use during serialization
Throws:
IOException - if serialization failed


"
BeanContextSupport,"childDeserializedHook(Object child, BeanContextSupport.BCSChild bcsc)",protected void,Called by readObject with the newly deserialized child and BCSChild.,"

childDeserializedHook
protected void childDeserializedHook(Object child,
                                     BeanContextSupport.BCSChild bcsc)
Called by readObject with the newly deserialized child and BCSChild.

Parameters:
child - the newly deserialized child
bcsc - the newly deserialized BCSChild


"
BeanContextSupport,"childJustAddedHook(Object child, BeanContextSupport.BCSChild bcsc)",protected void,subclasses may override this method to simply extend add() semantics after the child has been added and before the event notification has occurred.,"

childJustAddedHook
protected void childJustAddedHook(Object child,
                                  BeanContextSupport.BCSChild bcsc)
subclasses may override this method to simply extend add() semantics
 after the child has been added and before the event notification has
 occurred. The method is called with the child synchronized.

Parameters:
child - the child
bcsc - the BCSChild


"
BeanContextSupport,"childJustRemovedHook(Object child, BeanContextSupport.BCSChild bcsc)",protected void,subclasses may override this method to simply extend remove() semantics after the child has been removed and before the event notification has occurred.,"

childJustRemovedHook
protected void childJustRemovedHook(Object child,
                                    BeanContextSupport.BCSChild bcsc)
subclasses may override this method to simply extend remove() semantics
 after the child has been removed and before the event notification has
 occurred. The method is called with the child synchronized.

Parameters:
child - the child
bcsc - the BCSChild


"
BeanContextSupport,"classEquals(Class first, Class second)",protected static boolean,"Tests to see if two class objects, or their names are equal.","

classEquals
protected static final boolean classEquals(Class first,
                                           Class second)
Tests to see if two class objects,
 or their names are equal.

Parameters:
first - the first object
second - the second object
Returns:
true if equal, false if not


"
BeanContextSupport,clear(),void,"clear the children (Unsupported) implementations must synchronized on the hierarchy lock and ""children"" protected field","

clear
public void clear()
clear the children (Unsupported)
 implementations must synchronized on the hierarchy lock and ""children"" protected field

Specified by:
clear in interface Collection
Throws:
UnsupportedOperationException - thrown unconditionally by this implementation


"
BeanContextSupport,contains(Object o),boolean,Determines whether or not the specified object is currently a child of this BeanContext.,"

contains
public boolean contains(Object o)
Determines whether or not the specified object
 is currently a child of this BeanContext.

Specified by:
contains in interface Collection
Parameters:
o - the Object in question
Returns:
if this object is a child


"
BeanContextSupport,containsAll(Collection c),boolean,Tests to see if all objects in the specified Collection are children of this BeanContext.,"

containsAll
public boolean containsAll(Collection c)
Tests to see if all objects in the
 specified Collection are children of
 this BeanContext.

Specified by:
containsAll in interface Collection
Parameters:
c - the specified Collection
Returns:
true if all objects
 in the collection are children of
 this BeanContext, false if not.
See Also:
Collection.contains(Object)


"
BeanContextSupport,containsKey(Object o),boolean,Determines whether or not the specified object is currently a child of this BeanContext.,"

containsKey
public boolean containsKey(Object o)
Determines whether or not the specified object
 is currently a child of this BeanContext.

Parameters:
o - the Object in question
Returns:
if this object is a child


"
BeanContextSupport,copyChildren(),protected Object[],Gets a copy of the this BeanContext's children.,"

copyChildren
protected final Object[] copyChildren()
Gets a copy of the this BeanContext's children.

Returns:
a copy of the current nested children


"
BeanContextSupport,"createBCSChild(Object targetChild, Object peer)",protected BeanContextSupport.BCSChild,Subclasses can override this method to insert their own subclass of Child without having to override add() or the other Collection methods that add children to the set.,"

createBCSChild
protected BeanContextSupport.BCSChild createBCSChild(Object targetChild,
                                                     Object peer)

 Subclasses can override this method to insert their own subclass
 of Child without having to override add() or the other Collection
 methods that add children to the set.
 

Parameters:
targetChild - the child to create the Child on behalf of
peer - the peer if the tragetChild and the peer are related by an implementation of BeanContextProxy     * @return Subtype-specific subclass of Child without overriding collection methods


"
BeanContextSupport,"deserialize(ObjectInputStream ois, Collection coll)",protected void,used by readObject to deserialize a collection.,"

deserialize
protected final void deserialize(ObjectInputStream ois,
                                 Collection coll)
                          throws IOException,
                                 ClassNotFoundException
used by readObject to deserialize a collection.

Parameters:
ois - the ObjectInputStream to use
coll - the Collection
Throws:
IOException - if deserialization failed
ClassNotFoundException - if needed classes are not found


"
BeanContextSupport,dontUseGui(),void,notify this instance that it may no longer render a GUI.,"

dontUseGui
public void dontUseGui()
notify this instance that it may no longer render a GUI.

Specified by:
dontUseGui in interface Visibility


"
BeanContextSupport,fireChildrenAdded(BeanContextMembershipEvent bcme),protected void,Fire a BeanContextshipEvent on the BeanContextMembershipListener interface,"

fireChildrenAdded
protected final void fireChildrenAdded(BeanContextMembershipEvent bcme)
Fire a BeanContextshipEvent on the BeanContextMembershipListener interface

Parameters:
bcme - the event to fire


"
BeanContextSupport,fireChildrenRemoved(BeanContextMembershipEvent bcme),protected void,Fire a BeanContextshipEvent on the BeanContextMembershipListener interface,"

fireChildrenRemoved
protected final void fireChildrenRemoved(BeanContextMembershipEvent bcme)
Fire a BeanContextshipEvent on the BeanContextMembershipListener interface

Parameters:
bcme - the event to fire


"
BeanContextSupport,getBeanContextPeer(),BeanContext,Gets the instance of BeanContext that this object is providing the implementation for.,"

getBeanContextPeer
public BeanContext getBeanContextPeer()
Gets the instance of BeanContext that
 this object is providing the implementation for.

Returns:
the BeanContext instance


"
BeanContextSupport,getChildBeanContextChild(Object child),protected static BeanContextChild,Gets the BeanContextChild (if any) of the specified child,"

getChildBeanContextChild
protected static final BeanContextChild getChildBeanContextChild(Object child)
Gets the BeanContextChild (if any) of the specified child

Parameters:
child - the specified child
Returns:
the BeanContextChild (if any) of the specified child
Throws:
IllegalArgumentException - if child implements both BeanContextChild and BeanContextProxy


"
BeanContextSupport,getChildBeanContextMembershipListener(Object child),protected static BeanContextMembershipListener,Gets the BeanContextMembershipListener (if any) of the specified child,"

getChildBeanContextMembershipListener
protected static final BeanContextMembershipListener getChildBeanContextMembershipListener(Object child)
Gets the BeanContextMembershipListener
 (if any) of the specified child

Parameters:
child - the specified child
Returns:
the BeanContextMembershipListener (if any) of the specified child


"
BeanContextSupport,getChildPropertyChangeListener(Object child),protected static PropertyChangeListener,Gets the PropertyChangeListener (if any) of the specified child,"

getChildPropertyChangeListener
protected static final PropertyChangeListener getChildPropertyChangeListener(Object child)
Gets the PropertyChangeListener
 (if any) of the specified child

Parameters:
child - the specified child
Returns:
the PropertyChangeListener (if any) of the specified child


"
BeanContextSupport,getChildSerializable(Object child),protected static Serializable,Gets the Serializable (if any) associated with the specified Child,"

getChildSerializable
protected static final Serializable getChildSerializable(Object child)
Gets the Serializable (if any) associated with the specified Child

Parameters:
child - the specified child
Returns:
the Serializable (if any) associated with the specified Child


"
BeanContextSupport,getChildVetoableChangeListener(Object child),protected static VetoableChangeListener,Gets the VetoableChangeListener (if any) of the specified child,"

getChildVetoableChangeListener
protected static final VetoableChangeListener getChildVetoableChangeListener(Object child)
Gets the VetoableChangeListener
 (if any) of the specified child

Parameters:
child - the specified child
Returns:
the VetoableChangeListener (if any) of the specified child


"
BeanContextSupport,getChildVisibility(Object child),protected static Visibility,Gets the Component (if any) associated with the specified child.,"

getChildVisibility
protected static final Visibility getChildVisibility(Object child)
Gets the Component (if any) associated with the specified child.

Parameters:
child - the specified child
Returns:
the Component (if any) associated with the specified child.


"
BeanContextSupport,getLocale(),Locale,Gets the locale for this BeanContext.,"

getLocale
public Locale getLocale()
Gets the locale for this BeanContext.

Returns:
the current Locale of the BeanContext


"
BeanContextSupport,"getResource(String name, BeanContextChild bcc)",URL,"Analagous to java.lang.ClassLoader.getResource(), this method allows a BeanContext implementation to interpose behavior between the child Component and underlying ClassLoader.","

getResource
public URL getResource(String name,
                       BeanContextChild bcc)
Description copied from interface: BeanContext
Analagous to java.lang.ClassLoader.getResource(), this
 method allows a BeanContext implementation to interpose
 behavior between the child Component
 and underlying ClassLoader.

Specified by:
getResource in interface BeanContext
Parameters:
name - the name of the resource requested.
bcc - the child object making the request.
Returns:
the requested resource as an InputStream


"
BeanContextSupport,"getResourceAsStream(String name, BeanContextChild bcc)",InputStream,"Analagous to java.lang.ClassLoader.getResourceAsStream(), this method allows a BeanContext implementation to interpose behavior between the child Component and underlying ClassLoader.","

getResourceAsStream
public InputStream getResourceAsStream(String name,
                                       BeanContextChild bcc)
Description copied from interface: BeanContext
Analagous to java.lang.ClassLoader.getResourceAsStream(),
 this method allows a BeanContext implementation
 to interpose behavior between the child Component
 and underlying ClassLoader.

Specified by:
getResourceAsStream in interface BeanContext
Parameters:
name - the name of the resource requested.
bcc - the child object making the request.
Returns:
the requested resource as an InputStream
Throws:
NullPointerException - if the argument is null


"
BeanContextSupport,initialize(),protected void,protected method called from constructor and readObject to initialize transient state of BeanContextSupport instance.,"

initialize
protected void initialize()
protected method called from constructor and readObject to initialize
 transient state of BeanContextSupport instance.

 This class uses this method to instantiate inner class listeners used
 to monitor PropertyChange and VetoableChange events on children.

 subclasses may envelope this method to add their own initialization
 behavior

"
BeanContextSupport,instantiateChild(String beanName),Object,"The instantiateChild method is a convenience hook in BeanContext to simplify the task of instantiating a Bean, nested, into a BeanContext.","

instantiateChild
public Object instantiateChild(String beanName)
                        throws IOException,
                               ClassNotFoundException

 The instantiateChild method is a convenience hook
 in BeanContext to simplify
 the task of instantiating a Bean, nested,
 into a BeanContext.
 

 The semantics of the beanName parameter are defined by java.beans.Beans.instantiate.
 

Specified by:
instantiateChild in interface BeanContext
Parameters:
beanName - the name of the Bean to instantiate within this BeanContext
Returns:
the new object
Throws:
IOException - if there is an I/O error when the bean is being deserialized
ClassNotFoundException - if the class
 identified by the beanName parameter is not found


"
BeanContextSupport,isDesignTime(),boolean,Reports whether or not this object is in currently in design time mode.,"

isDesignTime
public boolean isDesignTime()
Reports whether or not this object is in
 currently in design time mode.

Specified by:
isDesignTime in interface DesignMode
Returns:
true if in design time mode,
 false if not


"
BeanContextSupport,isEmpty(),boolean,Reports whether or not this BeanContext is empty.,"

isEmpty
public boolean isEmpty()
Reports whether or not this
 BeanContext is empty.
 A BeanContext is considered
 empty when it contains zero
 nested children.

Specified by:
isEmpty in interface Collection
Returns:
if there are not children


"
BeanContextSupport,isSerializing(),boolean,Is this BeanContext in the process of being serialized?,"

isSerializing
public boolean isSerializing()
Is this BeanContext in the
 process of being serialized?

Returns:
if this BeanContext is
 currently being serialized


"
BeanContextSupport,iterator(),Iterator,Gets all JavaBean or BeanContext instances currently nested in this BeanContext.,"

iterator
public Iterator iterator()
Gets all JavaBean or BeanContext instances
 currently nested in this BeanContext.

Specified by:
iterator in interface Iterable
Specified by:
iterator in interface Collection
Returns:
an Iterator of the nested children


"
BeanContextSupport,needsGui(),boolean,"This method is typically called from the environment in order to determine if the implementor ""needs"" a GUI.","

needsGui
public boolean needsGui()

 This method is typically called from the environment in order to determine
 if the implementor ""needs"" a GUI.
 

 The algorithm used herein tests the BeanContextPeer, and its current children
 to determine if they are either Containers, Components, or if they implement
 Visibility and return needsGui() == true.
 

Specified by:
needsGui in interface Visibility
Returns:
true if the implementor needs a GUI


"
BeanContextSupport,okToUseGui(),void,Notify this instance that it may now render a GUI,"

okToUseGui
public void okToUseGui()
Notify this instance that it may now render a GUI

Specified by:
okToUseGui in interface Visibility


"
BeanContextSupport,propertyChange(PropertyChangeEvent pce),void,subclasses may envelope to monitor child property changes.,"

propertyChange
public void propertyChange(PropertyChangeEvent pce)
subclasses may envelope to monitor child property changes.

Specified by:
propertyChange in interface PropertyChangeListener
Parameters:
pce - A PropertyChangeEvent object describing the event source
          and the property that has changed.


"
BeanContextSupport,readChildren(ObjectInputStream ois),void,When an instance of this class is used as a delegate for the implementation of the BeanContext protocols (and its subprotocols) there exists a 'chicken and egg' problem during deserialization,"

readChildren
public final void readChildren(ObjectInputStream ois)
                        throws IOException,
                               ClassNotFoundException
When an instance of this class is used as a delegate for the
 implementation of the BeanContext protocols (and its subprotocols)
 there exists a 'chicken and egg' problem during deserialization

Parameters:
ois - the ObjectInputStream to use
Throws:
IOException - if deserialization failed
ClassNotFoundException - if needed classes are not found


"
BeanContextSupport,remove(Object targetChild),boolean,Removes a child from this BeanContext.,"

remove
public boolean remove(Object targetChild)
Removes a child from this BeanContext.  If the child object is not
 for adding then this method throws an IllegalStateException.

Specified by:
remove in interface Collection
Parameters:
targetChild - The child objects to remove
Returns:
true if an element was removed as a result of this call
See Also:
validatePendingRemove(java.lang.Object)


"
BeanContextSupport,"remove(Object targetChild, boolean callChildSetBC)",protected boolean,internal remove used when removal caused by unexpected setBeanContext or by remove() invocation.,"

remove
protected boolean remove(Object targetChild,
                         boolean callChildSetBC)
internal remove used when removal caused by
 unexpected setBeanContext or
 by remove() invocation.

Parameters:
targetChild - the JavaBean, BeanContext, or Object to be removed
callChildSetBC - used to indicate that
 the child should be notified that it is no
 longer nested in this BeanContext.
Returns:
whether or not was present before being removed


"
BeanContextSupport,removeAll(Collection c),boolean,"remove all specified children (Unsupported) implementations must synchronized on the hierarchy lock and ""children"" protected field","

removeAll
public boolean removeAll(Collection c)
remove all specified children (Unsupported)
 implementations must synchronized on the hierarchy lock and ""children"" protected field

Specified by:
removeAll in interface Collection
Parameters:
c - collection containing elements to be removed from this collection
Returns:
this implementation unconditionally throws UnsupportedOperationException
Throws:
UnsupportedOperationException - thrown unconditionally by this implementation
See Also:
Collection.remove(Object), 
Collection.contains(Object)


"
BeanContextSupport,removeBeanContextMembershipListener(BeanContextMembershipListener bcml),void,Removes a BeanContextMembershipListener,"

removeBeanContextMembershipListener
public void removeBeanContextMembershipListener(BeanContextMembershipListener bcml)
Removes a BeanContextMembershipListener

Specified by:
removeBeanContextMembershipListener in interface BeanContext
Parameters:
bcml - the BeanContextMembershipListener to remove
Throws:
NullPointerException - if the argument is null


"
BeanContextSupport,retainAll(Collection c),boolean,"retain only specified children (Unsupported) implementations must synchronized on the hierarchy lock and ""children"" protected field","

retainAll
public boolean retainAll(Collection c)
retain only specified children (Unsupported)
 implementations must synchronized on the hierarchy lock and ""children"" protected field

Specified by:
retainAll in interface Collection
Parameters:
c - collection containing elements to be retained in this collection
Returns:
this implementation unconditionally throws UnsupportedOperationException
Throws:
UnsupportedOperationException - thrown unconditionally by this implementation
See Also:
Collection.remove(Object), 
Collection.contains(Object)


"
BeanContextSupport,"serialize(ObjectOutputStream oos, Collection coll)",protected void,Used by writeObject to serialize a Collection.,"

serialize
protected final void serialize(ObjectOutputStream oos,
                               Collection coll)
                        throws IOException
Used by writeObject to serialize a Collection.

Parameters:
oos - the ObjectOutputStream
 to use during serialization
coll - the Collection to serialize
Throws:
IOException - if serialization failed


"
BeanContextSupport,setDesignTime(boolean dTime),void,Sets the new design time value for this BeanContext.,"

setDesignTime
public void setDesignTime(boolean dTime)
Sets the new design time value for this BeanContext.

Specified by:
setDesignTime in interface DesignMode
Parameters:
dTime - the new designTime value
See Also:
BeanContext, 
BeanContextMembershipListener, 
PropertyChangeEvent


"
BeanContextSupport,setLocale(Locale newLocale),void,Sets the locale of this BeanContext.,"

setLocale
public void setLocale(Locale newLocale)
               throws PropertyVetoException
Sets the locale of this BeanContext.

Parameters:
newLocale - the new locale. This method call will have
        no effect if newLocale is null.
Throws:
PropertyVetoException - if the new value is rejected


"
BeanContextSupport,size(),int,Gets the number of children currently nested in this BeanContext.,"

size
public int size()
Gets the number of children currently nested in
 this BeanContext.

Specified by:
size in interface Collection
Returns:
number of children


"
BeanContextSupport,toArray(),Object[],Gets all JavaBean or BeanContext instances currently nested in this BeanContext.,"

toArray
public Object[] toArray()
Gets all JavaBean or BeanContext
 instances currently nested in this BeanContext.

Specified by:
toArray in interface Collection
Returns:
an array containing all of the elements in this collection


"
BeanContextSupport,toArray(Object[] arry),Object[],Gets an array containing all children of this BeanContext that match the types contained in arry.,"

toArray
public Object[] toArray(Object[] arry)
Gets an array containing all children of
 this BeanContext that match
 the types contained in arry.

Specified by:
toArray in interface Collection
Parameters:
arry - The array of object
 types that are of interest.
Returns:
an array of children


"
BeanContextSupport,validatePendingAdd(Object targetChild),protected boolean,"Subclasses of this class may override, or envelope, this method to add validation behavior for the BeanContext to examine child objects immediately prior to their being added to the BeanContext.","

validatePendingAdd
protected boolean validatePendingAdd(Object targetChild)

 Subclasses of this class may override, or envelope, this method to
 add validation behavior for the BeanContext to examine child objects
 immediately prior to their being added to the BeanContext.
 

Parameters:
targetChild - the child to create the Child on behalf of
Returns:
true iff the child may be added to this BeanContext, otherwise false.


"
BeanContextSupport,validatePendingRemove(Object targetChild),protected boolean,"Subclasses of this class may override, or envelope, this method to add validation behavior for the BeanContext to examine child objects immediately prior to their being removed from the BeanContext.","

validatePendingRemove
protected boolean validatePendingRemove(Object targetChild)

 Subclasses of this class may override, or envelope, this method to
 add validation behavior for the BeanContext to examine child objects
 immediately prior to their being removed from the BeanContext.
 

Parameters:
targetChild - the child to create the Child on behalf of
Returns:
true iff the child may be removed from this BeanContext, otherwise false.


"
BeanContextSupport,vetoableChange(PropertyChangeEvent pce),void,subclasses may envelope to monitor veto child property changes.,"

vetoableChange
public void vetoableChange(PropertyChangeEvent pce)
                    throws PropertyVetoException
subclasses may envelope to monitor veto child property changes.

Specified by:
vetoableChange in interface VetoableChangeListener
Parameters:
pce - a PropertyChangeEvent object describing the
                event source and the property that has changed.
Throws:
PropertyVetoException - if the recipient wishes the property
              change to be rolled back.


"
BeanContextSupport,writeChildren(ObjectOutputStream oos),void,Used to serialize all children of this BeanContext.,"

writeChildren
public final void writeChildren(ObjectOutputStream oos)
                         throws IOException
Used to serialize all children of
 this BeanContext.

Parameters:
oos - the ObjectOutputStream
 to use during serialization
Throws:
IOException - if serialization failed


"
BeanContextSupport.BCSIterator,hasNext(),boolean,Returns true if the iteration has more elements.,"

hasNext
public boolean hasNext()
Description copied from interface: Iterator
Returns true if the iteration has more elements.
 (In other words, returns true if Iterator.next() would
 return an element rather than throwing an exception.)

Specified by:
hasNext in interface Iterator
Returns:
true if the iteration has more elements


"
BeanContextSupport.BCSIterator,next(),Object,Returns the next element in the iteration.,"

next
public Object next()
Description copied from interface: Iterator
Returns the next element in the iteration.

Specified by:
next in interface Iterator
Returns:
the next element in the iteration


"
BeanContextSupport.BCSIterator,remove(),void,Removes from the underlying collection the last element returned by this iterator (optional operation).,"

remove
public void remove()
Description copied from interface: Iterator
Removes from the underlying collection the last element returned
 by this iterator (optional operation).  This method can be called
 only once per call to Iterator.next().  The behavior of an iterator
 is unspecified if the underlying collection is modified while the
 iteration is in progress in any way other than by calling this
 method.

Specified by:
remove in interface Iterator


"
