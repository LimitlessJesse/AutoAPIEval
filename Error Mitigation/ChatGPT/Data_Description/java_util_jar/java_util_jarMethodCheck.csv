Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,Attributes,1,String getValue(String name),True,,"

getValue
public String getValue(String name)
Returns the value of the specified attribute name, specified as
 a string, or null if the attribute was not found. The attribute
 name is case-insensitive.
 
 This method is defined as:
 
      return (String)get(new Attributes.Name((String)name));
 

Parameters:
name - the attribute name as a string
Returns:
the String value of the specified attribute name, or null if
         not found.
Throws:
IllegalArgumentException - if the attribute name is invalid


"
0,Attributes,2,"String putValue(String name, String value)",True,,"

putValue
public String putValue(String name,
                       String value)
Associates the specified value with the specified attribute name,
 specified as a String. The attributes name is case-insensitive.
 If the Map previously contained a mapping for the attribute name,
 the old value is replaced.
 
 This method is defined as:
 
      return (String)put(new Attributes.Name(name), value);
 

Parameters:
name - the attribute name as a string
value - the attribute value
Returns:
the previous value of the attribute, or null if none
Throws:
IllegalArgumentException - if the attribute name is invalid


"
0,Attributes,3,boolean containsKey(Object name),True,,"

containsKey
public boolean containsKey(Object name)
Returns true if this Map contains the specified attribute name (key).

Specified by:
containsKey in interface Map<Object,Object>
Parameters:
name - the attribute name
Returns:
true if this Map contains the specified attribute name


"
0,Attributes,4,"Set<Map.Entry<Object, Object>> entrySet()",False,,NULL
0,Attributes,5,void clear(),True,,"

clear
public void clear()
Removes all attributes from this Map.

Specified by:
clear in interface Map<Object,Object>


"
1,Attributes.Name,1,String toString(),True,,"

toString
public String toString()
Returns the attribute name as a String.

Overrides:
toString in class Object
Returns:
a string representation of the object.


"
1,Attributes.Name,2,int hashCode(),True,,"

hashCode
public int hashCode()
Computes the hash value for this attribute name.

Overrides:
hashCode in class Object
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
1,Attributes.Name,3,boolean equals(Object o),True,,"

equals
public boolean equals(Object o)
Compares this attribute name to another for equality.

Overrides:
equals in class Object
Parameters:
o - the object to compare
Returns:
true if this attribute name is equal to the
         specified attribute object
See Also:
Object.hashCode(), 
HashMap


"
1,Attributes.Name,4,int length(),False,,NULL
1,Attributes.Name,5,char charAt(int index),False,,NULL
2,JarEntry,1,String getName(),False,,NULL
2,JarEntry,2,long getSize(),False,,NULL
2,JarEntry,3,long getTime(),False,,NULL
2,JarEntry,4,InputStream getInputStream(),False,,NULL
2,JarEntry,5,Attributes getAttributes(),True,,"

getAttributes
public Attributes getAttributes()
                         throws IOException
Returns the Manifest Attributes for this
 entry, or null if none.

Returns:
the Manifest Attributes for this
 entry, or null if none
Throws:
IOException - if an I/O error has occurred


"
3,JarFile,1,Enumeration<JarEntry> entries(),True,,"

entries
public Enumeration<JarEntry> entries()
Returns an enumeration of the zip file entries.

Overrides:
entries in class ZipFile
Returns:
an enumeration of the ZIP file entries


"
3,JarFile,2,JarEntry getJarEntry(String name),True,,"

getJarEntry
public JarEntry getJarEntry(String name)
Returns the JarEntry for the given entry name or
 null if not found.

Parameters:
name - the jar file entry name
Returns:
the JarEntry for the given entry name or
         null if not found.
Throws:
IllegalStateException - may be thrown if the jar file has been closed
See Also:
JarEntry


"
3,JarFile,3,Manifest getManifest(),True,,"

getManifest
public Manifest getManifest()
                     throws IOException
Returns the jar file manifest, or null if none.

Returns:
the jar file manifest, or null if none
Throws:
IllegalStateException - may be thrown if the jar file has been closed
IOException - if an I/O error has occurred


"
3,JarFile,4,void close(),False,,NULL
3,JarFile,5,InputStream getInputStream(ZipEntry ze),True,,"

getInputStream
public InputStream getInputStream(ZipEntry ze)
                           throws IOException
Returns an input stream for reading the contents of the specified
 zip file entry.

Overrides:
getInputStream in class ZipFile
Parameters:
ze - the zip file entry
Returns:
an input stream for reading the contents of the specified
         zip file entry
Throws:
ZipException - if a zip file format error has occurred
IOException - if an I/O error has occurred
SecurityException - if any of the jar file entries
         are incorrectly signed.
IllegalStateException - may be thrown if the jar file has been closed


"
4,JarInputStream,1,JarEntry getNextJarEntry(),True,,"

getNextJarEntry
public JarEntry getNextJarEntry()
                         throws IOException
Reads the next JAR file entry and positions the stream at the
 beginning of the entry data. If verification has been enabled,
 any invalid signature detected while positioning the stream for
 the next entry will result in an exception.

Returns:
the next JAR file entry, or null if there are no more entries
Throws:
ZipException - if a ZIP file error has occurred
IOException - if an I/O error has occurred
SecurityException - if any of the jar file entries
         are incorrectly signed.


"
4,JarInputStream,2,void closeEntry(),False,,NULL
4,JarInputStream,3,Manifest getManifest(),True,,"

getManifest
public Manifest getManifest()
Returns the Manifest for this JAR file, or
 null if none.

Returns:
the Manifest for this JAR file, or
         null if none.


"
4,JarInputStream,4,"int read(byte[] buffer, int offset, int length)",True,,"

read
public int read(byte[] b,
                int off,
                int len)
         throws IOException
Reads from the current JAR file entry into an array of bytes.
 If len is not zero, the method
 blocks until some input is available; otherwise, no
 bytes are read and 0 is returned.
 If verification has been enabled, any invalid signature
 on the current entry will be reported at some point before the
 end of the entry is reached.

Overrides:
read in class ZipInputStream
Parameters:
b - the buffer into which the data is read
off - the start offset in the destination array b
len - the maximum number of bytes to read
Returns:
the actual number of bytes read, or -1 if the end of the
         entry is reached
Throws:
NullPointerException - If b is null.
IndexOutOfBoundsException - If off is negative,
 len is negative, or len is greater than
 b.length - off
ZipException - if a ZIP file error has occurred
IOException - if an I/O error has occurred
SecurityException - if any of the jar file entries
         are incorrectly signed.
See Also:
FilterInputStream.in


"
4,JarInputStream,5,JarEntry getNextEntry(),False,,NULL
5,JarOutputStream,1,void putNextEntry(ZipEntry e),True,,"

putNextEntry
public void putNextEntry(ZipEntry ze)
                  throws IOException
Begins writing a new JAR file entry and positions the stream
 to the start of the entry data. This method will also close
 any previous entry. The default compression method will be
 used if no compression method was specified for the entry.
 The current time will be used if the entry has no set modification
 time.

Overrides:
putNextEntry in class ZipOutputStream
Parameters:
ze - the ZIP/JAR entry to be written
Throws:
ZipException - if a ZIP error has occurred
IOException - if an I/O error has occurred


"
5,JarOutputStream,2,void setComment(String comment),False,,NULL
5,JarOutputStream,3,void setLevel(int level),False,,NULL
5,JarOutputStream,4,void finish(),False,,NULL
5,JarOutputStream,5,void closeEntry(),False,,NULL
6,Manifest,1,Attributes getMainAttributes(),True,,"

getMainAttributes
public Attributes getMainAttributes()
Returns the main Attributes for the Manifest.

Returns:
the main Attributes for the Manifest


"
6,Manifest,2,Attributes getAttributes(String name),True,,"

getAttributes
public Attributes getAttributes(String name)
Returns the Attributes for the specified entry name.
 This method is defined as:
 
      return (Attributes)getEntries().get(name)
 
 Though null is a valid name, when
 getAttributes(null) is invoked on a Manifest
 obtained from a jar file, null will be returned.  While jar
 files themselves do not allow null-named attributes, it is
 possible to invoke getEntries() on a Manifest, and
 on that result, invoke put with a null key and an
 arbitrary value.  Subsequent invocations of
 getAttributes(null) will return the just-put
 value.
 
 Note that this method does not return the manifest's main attributes;
 see getMainAttributes().

Parameters:
name - entry name
Returns:
the Attributes for the specified entry name


"
6,Manifest,3,void clear(),True,,"

clear
public void clear()
Clears the main Attributes as well as the entries in this Manifest.

"
6,Manifest,4,void write(OutputStream out) throws IOException,True,,"

write
public void write(OutputStream out)
           throws IOException
Writes the Manifest to the specified OutputStream.
 Attributes.Name.MANIFEST_VERSION must be set in
 MainAttributes prior to invoking this method.

Parameters:
out - the output stream
Throws:
IOException - if an I/O error has occurred
See Also:
getMainAttributes()


"
6,Manifest,5,void read(InputStream is) throws IOException,True,,"

read
public void read(InputStream is)
          throws IOException
Reads the Manifest from the specified InputStream. The entry
 names and attributes read will be merged in with the current
 manifest entries.

Parameters:
is - the input stream
Throws:
IOException - if an I/O error has occurred


"
7,Pack200,1,"void pack(File in, OutputStream out)",False,,NULL
7,Pack200,2,"void pack(JarFile in, OutputStream out)",False,,NULL
7,Pack200,3,"void unpack(InputStream in, JarOutputStream out)",False,,NULL
7,Pack200,4,"void unpack(File in, JarOutputStream out)",False,,NULL
7,Pack200,5,"SortedMap<String, String> properties()",False,,NULL
