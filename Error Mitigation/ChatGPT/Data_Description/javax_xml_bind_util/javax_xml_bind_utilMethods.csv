ClassName,Method,Return Type,Description,Full Description
JAXBResult,getResult(),Object,Gets the unmarshalled object created by the transformation.,"

getResult
public Object getResult()
                 throws JAXBException
Gets the unmarshalled object created by the transformation.

Returns:
Always return a non-null object.
Throws:
IllegalStateException - if this method is called before an object is unmarshalled.
JAXBException - if there is any unmarshalling error.
      Note that the implementation is allowed to throw SAXException
      during the parsing when it finds an error.


"
ValidationEventCollector,getEvents(),ValidationEvent[],Return an array of ValidationEvent objects containing a copy of each of the collected errors and warnings.,"

getEvents
public ValidationEvent[] getEvents()
Return an array of ValidationEvent objects containing a copy of each of
 the collected errors and warnings.

Returns:
a copy of all the collected errors and warnings or an empty array
      if there weren't any


"
ValidationEventCollector,handleEvent(ValidationEvent event),boolean,Receive notification of a validation warning or error.,"

handleEvent
public boolean handleEvent(ValidationEvent event)
Description copied from interface: ValidationEventHandler
Receive notification of a validation warning or error.

 The ValidationEvent will have a
 ValidationEventLocator embedded in it that
 indicates where the error or warning occurred.

 
 If an unchecked runtime exception is thrown from this method, the JAXB
 provider will treat it as if the method returned false and interrupt
 the current unmarshal, validate, or marshal operation.

Specified by:
handleEvent in interface ValidationEventHandler
Parameters:
event - the encapsulated validation event information.  It is a
 provider error if this parameter is null.
Returns:
true if the JAXB Provider should attempt to continue the current
         unmarshal, validate, or marshal operation after handling this
         warning/error, false if the provider should terminate the current
         operation with the appropriate UnmarshalException,
         ValidationException, or MarshalException.


"
ValidationEventCollector,hasEvents(),boolean,Returns true if this event collector contains at least one ValidationEvent.,"

hasEvents
public boolean hasEvents()
Returns true if this event collector contains at least one
 ValidationEvent.

Returns:
true if this event collector contains at least one
         ValidationEvent, false otherwise


"
ValidationEventCollector,reset(),void,Clear all collected errors and warnings.,"

reset
public void reset()
Clear all collected errors and warnings.

"
