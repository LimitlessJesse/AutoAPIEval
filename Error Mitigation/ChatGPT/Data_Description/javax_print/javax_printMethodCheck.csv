Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DocFlavor,1,String getMimeType(),True,,"

getMimeType
public String getMimeType()
Returns this doc flavor object's MIME type string based on the
 canonical form. Each parameter value is enclosed in quotes.

Returns:
the mime type


"
0,DocFlavor,2,Class<?> getRepresentationClass(),False,,NULL
0,DocFlavor,3,String getMediaType(),True,,"

getMediaType
public String getMediaType()
Returns this doc flavor object's media type (from the MIME type).

Returns:
the media type


"
0,DocFlavor,4,String getMediaSubtype(),True,,"

getMediaSubtype
public String getMediaSubtype()
Returns this doc flavor object's media subtype (from the MIME type).

Returns:
the media sub-type


"
0,DocFlavor,5,String getParameter(String paramName),True,,"

getParameter
public String getParameter(String paramName)
Returns a String representing a MIME
 parameter.
 Mime types may include parameters which are usually optional.
 The charset for text types is a commonly useful example.
 This convenience method will return the value of the specified
 parameter if one was specified in the mime type for this flavor.
 

Parameters:
paramName - the name of the paramater. This name is internally
 converted to the canonical lower case format before performing
 the match.
Returns:
String representing a mime parameter, or
 null if that parameter is not in the mime type string.
Throws:
NullPointerException - if paramName is null.


"
1,DocFlavor.BYTE_ARRAY,1,boolean equals(Object obj),False,,NULL
1,DocFlavor.BYTE_ARRAY,2,int hashCode(),False,,NULL
1,DocFlavor.BYTE_ARRAY,3,String toString(),False,,NULL
1,DocFlavor.BYTE_ARRAY,4,String getMediaType(),False,,NULL
1,DocFlavor.BYTE_ARRAY,5,String getRepresentationClassName(),False,,NULL
2,DocFlavor.CHAR_ARRAY,1,DocFlavor.CHAR_ARRAY(byte[] representation),False,,NULL
2,DocFlavor.CHAR_ARRAY,2,DocFlavor.CHAR_ARRAY(String mimeType),False,,NULL
2,DocFlavor.CHAR_ARRAY,3,"DocFlavor.CHAR_ARRAY(String mimeType, String className)",False,,NULL
2,DocFlavor.CHAR_ARRAY,4,"DocFlavor.CHAR_ARRAY(String mimeType, String className, String humanPresentableName)",False,,NULL
2,DocFlavor.CHAR_ARRAY,5,boolean equals(Object obj),False,,NULL
3,DocFlavor.INPUT_STREAM,1,String getMediaType(),False,,NULL
3,DocFlavor.INPUT_STREAM,2,String getMediaSubtype(),False,,NULL
3,DocFlavor.INPUT_STREAM,3,String getMimeType(),False,,NULL
3,DocFlavor.INPUT_STREAM,4,String getRepresentationClassName(),False,,NULL
3,DocFlavor.INPUT_STREAM,5,DocFlavor.BYTE_ARRAY getByteStreamFlavor(),False,,NULL
4,DocFlavor.READER,1,DocFlavor[] getSupportedDocFlavors(),False,,NULL
4,DocFlavor.READER,2,boolean equals(Object obj),False,,NULL
4,DocFlavor.READER,3,String toString(),False,,NULL
4,DocFlavor.READER,4,int hashCode(),False,,NULL
4,DocFlavor.READER,5,String getMimeType(),False,,NULL
5,DocFlavor.SERVICE_FORMATTED,1,DocFlavor[] getSupportedDocFlavors(),False,,NULL
5,DocFlavor.SERVICE_FORMATTED,2,String getMediaType(),False,,NULL
5,DocFlavor.SERVICE_FORMATTED,3,String getMimeType(),False,,NULL
5,DocFlavor.SERVICE_FORMATTED,4,String getRepresentationClassName(),False,,NULL
5,DocFlavor.SERVICE_FORMATTED,5,String toString(),False,,NULL
6,DocFlavor.STRING,1,DocFlavor.STRING(),False,,NULL
6,DocFlavor.STRING,2,boolean equals(Object obj),False,,NULL
6,DocFlavor.STRING,3,String toString(),False,,NULL
6,DocFlavor.STRING,4,int hashCode(),False,,NULL
6,DocFlavor.STRING,5,String getMimeType(),False,,NULL
7,DocFlavor.URL,1,DocFlavor[] getSupportedDocFlavors(),False,,NULL
7,DocFlavor.URL,2,boolean equals(Object obj),False,,NULL
7,DocFlavor.URL,3,String toString(),False,,NULL
7,DocFlavor.URL,4,int hashCode(),False,,NULL
7,DocFlavor.URL,5,String getMimeType(),False,,NULL
8,PrintServiceLookup,1,PrintService lookupDefaultPrintService(),True,,"

lookupDefaultPrintService
public static final PrintService lookupDefaultPrintService()
Locates the default print service for this environment.
 This may return null.
 If multiple lookup services each specify a default, the
 chosen service is not precisely defined, but a
 platform native service, rather than an installed service,
 is usually returned as the default.  If there is no clearly
 identifiable
 platform native default print service, the default is the first
 to be located in an implementation-dependent manner.
 
 This may include making use of any preferences API that is available
 as part of the Java or native platform.
 This algorithm may be overridden by a user setting the property
 javax.print.defaultPrinter.
 A service specified must be discovered to be valid and currently
 available to be returned as the default.

Returns:
the default PrintService.


"
8,PrintServiceLookup,2,"PrintService[] lookupPrintServices(DocFlavor flavor, AttributeSet attributes)",True,,"

lookupPrintServices
public static final PrintService[] lookupPrintServices(DocFlavor flavor,
                                                       AttributeSet attributes)
Locates print services capable of printing the specified
 DocFlavor.

Parameters:
flavor - the flavor to print. If null, this constraint is not
        used.
attributes - attributes that the print service must support.
 If null this constraint is not used.
Returns:
array of matching PrintService objects
 representing print services that support the specified flavor
 attributes.  If no services match, the array is zero-length.


"
8,PrintServiceLookup,3,"PrintService[] lookupPrintServices(DocFlavor flavor, AttributeSet attributes, String serviceTypeName)",False,,NULL
8,PrintServiceLookup,4,"MultiDocPrintService[] lookupMultiDocPrintServices(DocFlavor[] flavors, AttributeSet attributes)",True,,"

lookupMultiDocPrintServices
public static final MultiDocPrintService[] lookupMultiDocPrintServices(DocFlavor[] flavors,
                                                                       AttributeSet attributes)
Locates MultiDoc print Services capable of printing MultiDocs
 containing all the specified doc flavors.
  This method is useful to help locate a service that can print
 a MultiDoc in which the elements may be different
 flavors. An application could perform this itself by multiple lookups
 on each DocFlavor in turn and collating the results,
 but the lookup service may be able to do this more efficiently.

Parameters:
flavors - the flavors to print. If null or empty this
        constraint is not used.
 Otherwise return only multidoc print services that can print all
 specified doc flavors.
attributes - attributes that the print service must
 support.  If null this constraint is not used.
Returns:
array of matching MultiDocPrintService objects.
 If no services match, the array is zero-length.


"
8,PrintServiceLookup,5,"MultiDocPrintService[] lookupMultiDocPrintServices(DocFlavor[] flavors, AttributeSet attributes, String serviceTypeName)",False,,NULL
9,ServiceUI,1,"PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes)",False,,NULL
9,ServiceUI,2,"PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes)",False,,NULL
9,ServiceUI,3,"PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes, PrintServiceLookup serviceLookup)",False,,NULL
9,ServiceUI,4,"PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes, PrintServiceLookup serviceLookup, boolean doctojob)",False,,NULL
9,ServiceUI,5,"PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes, PrintServiceLookup serviceLookup, boolean doctojob, boolean showPrintToFile)",False,,NULL
10,ServiceUIFactory,1,ServiceUIFactory createUI(int role),False,,NULL
10,ServiceUIFactory,2,ServiceUIFactory getDefaultUI(int role),False,,NULL
10,ServiceUIFactory,3,"ServiceUIFactory getUIForPrintService(PrintService service, int role)",False,,NULL
10,ServiceUIFactory,4,ServiceUIFactory[] getUIFactories(),False,,NULL
10,ServiceUIFactory,5,void registerUIFactory(ServiceUIFactory factory),False,,NULL
11,SimpleDoc,1,byte[] getBytes(),False,,NULL
11,SimpleDoc,2,DocFlavor getDocFlavor(),True,,"

getDocFlavor
public DocFlavor getDocFlavor()
Determines the doc flavor in which this doc object will supply its
 piece of print data.

Specified by:
getDocFlavor in interface Doc
Returns:
Doc flavor.


"
11,SimpleDoc,3,InputStream getStreamForBytes(),True,,"

getStreamForBytes
public InputStream getStreamForBytes()
                              throws IOException
Obtains an input stream for extracting byte print data from
 this doc.
 The Doc implementation is required to support this
 method if the DocFlavor has one of the following print
 data representation classes; otherwise this method
 returns null:
 
 byte[]
 java.io.InputStream

 The doc's print data representation object is obtained.  Then, an
 input stream for reading the print data
 from the print data representation object as a stream of bytes is
 created and returned.
 However, if the print data representation object is itself an
 input stream then the print data representation object is simply
 returned.
 

Specified by:
getStreamForBytes in interface Doc
Returns:
an InputStream for reading the print data
          bytes from this doc.  If an input stream cannot be
          provided because this doc does not meet
          the criteria stated above, null is returned.
Throws:
IOException - if there was an I/O error while creating the input stream.


"
11,SimpleDoc,4,Reader getReaderForText(),True,,"

getReaderForText
public Reader getReaderForText()
                        throws IOException
Obtains a reader for extracting character print data from this doc.
 The Doc implementation is required to support this
 method if the DocFlavor has one of the following print
 data representation classes, and return null
 otherwise:
 
 char[]
 java.lang.String
 java.io.Reader

 The doc's print data representation object is used to construct and
 return a Reader for reading the print data as a stream
 of characters from the print data representation object.
 However, if the print data representation object is itself a
 Reader then the print data representation object is
 simply returned.
 

Specified by:
getReaderForText in interface Doc
Returns:
a Reader for reading the print data
          characters from this doc.
          If a reader cannot be provided because this doc does not meet
          the criteria stated above, null is returned.
Throws:
IOException - if there was an I/O error while creating
             the reader.


"
11,SimpleDoc,5,String getMimeType(),False,,NULL
12,StreamPrintService,1,OutputStream getOutputStream(),True,,"

getOutputStream
public OutputStream getOutputStream()
Gets the output stream.

Returns:
the stream to which this service will send formatted print data.


"
12,StreamPrintService,2,String getOutputFormat(),True,,"

getOutputFormat
public abstract String getOutputFormat()
Returns the document format emitted by this print service.
 Must be in mimetype format, compatible with the mime type
 components of DocFlavors @see DocFlavor.

Returns:
mime type identifying the output format.


"
12,StreamPrintService,3,boolean supportsMultipleCopies(),False,,NULL
12,StreamPrintService,4,boolean supportsColor(),False,,NULL
12,StreamPrintService,5,boolean supportsMonochrome(),False,,NULL
13,StreamPrintServiceFactory,1,StreamPrintService[] getStreamPrintServices(),False,,NULL
13,StreamPrintServiceFactory,2,StreamPrintService getStreamPrintServiceByName(String name),False,,NULL
13,StreamPrintServiceFactory,3,String[] getSupportedMimeTypes(),False,,NULL
13,StreamPrintServiceFactory,4,boolean isStreamPrintServiceFactoryFor(Object obj),False,,NULL
13,StreamPrintServiceFactory,5,boolean isSupportedDocFlavor(DocFlavor flavor),False,,NULL
