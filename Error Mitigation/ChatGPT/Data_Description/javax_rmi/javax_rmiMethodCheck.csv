Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,PortableRemoteObject,1,void unexportObject(Remote obj),True,,"

unexportObject
public static void unexportObject(Remote obj)
                           throws NoSuchObjectException
Deregisters a server object from the runtime, allowing the object to become
 available for garbage collection.

Parameters:
obj - the object to unexport.
Throws:
NoSuchObjectException - if the remote object is not
 currently exported.


"
0,PortableRemoteObject,2,Remote toStub(Remote obj),True,,"

toStub
public static Remote toStub(Remote obj)
                     throws NoSuchObjectException
Returns a stub for the given server object.

Parameters:
obj - the server object for which a stub is required. Must either be a subclass
 of PortableRemoteObject or have been previously the target of a call to
 exportObject(java.rmi.Remote).
Returns:
the most derived stub for the object.
Throws:
NoSuchObjectException - if a stub cannot be located for the given server object.


"
0,PortableRemoteObject,3,"void connect(Remote target, Remote source)",True,,"

connect
public static void connect(Remote target,
                           Remote source)
                    throws RemoteException
Makes a Remote object ready for remote communication. This normally
 happens implicitly when the object is sent or received as an argument
 on a remote method call, but in some circumstances it is useful to
 perform this action by making an explicit call.  See the
 Stub.connect(org.omg.CORBA.ORB) method for more information.

Parameters:
target - the object to connect.
source - a previously connected object.
Throws:
RemoteException - if source is not connected
 or if target is already connected to a different ORB than
 source.


"
0,PortableRemoteObject,4,void exportObject(Remote obj),True,,"

exportObject
public static void exportObject(Remote obj)
                         throws RemoteException
Makes a server object ready to receive remote calls. Note
 that subclasses of PortableRemoteObject do not need to call this
 method, as it is called by the constructor.

Parameters:
obj - the server object to export.
Throws:
RemoteException - if export fails.


"
0,PortableRemoteObject,5,"void unexportObject(Remote obj, boolean force)",False,,NULL
