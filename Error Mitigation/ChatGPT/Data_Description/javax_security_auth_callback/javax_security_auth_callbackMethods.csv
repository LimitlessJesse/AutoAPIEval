ClassName,Method,Return Type,Description,Full Description
ChoiceCallback,allowMultipleSelections(),boolean,Get the boolean determining whether multiple selections from the choices list are allowed.,"

allowMultipleSelections
public boolean allowMultipleSelections()
Get the boolean determining whether multiple selections from
 the choices list are allowed.

 

Returns:
whether multiple selections are allowed.


"
ChoiceCallback,getChoices(),String[],Get the list of choices.,"

getChoices
public String[] getChoices()
Get the list of choices.

 

Returns:
the list of choices.


"
ChoiceCallback,getDefaultChoice(),int,Get the defaultChoice.,"

getDefaultChoice
public int getDefaultChoice()
Get the defaultChoice.

 

Returns:
the defaultChoice, represented as an index into
          the choices list.


"
ChoiceCallback,getPrompt(),String,Get the prompt.,"

getPrompt
public String getPrompt()
Get the prompt.

 

Returns:
the prompt.


"
ChoiceCallback,getSelectedIndexes(),int[],Get the selected choices.,"

getSelectedIndexes
public int[] getSelectedIndexes()
Get the selected choices.

 

Returns:
the selected choices, represented as indexes into the
          choices list.
See Also:
setSelectedIndexes(int[])


"
ChoiceCallback,setSelectedIndex(int selection),void,Set the selected choice.,"

setSelectedIndex
public void setSelectedIndex(int selection)
Set the selected choice.

 

Parameters:
selection - the selection represented as an index into the
          choices list.
See Also:
getSelectedIndexes()


"
ChoiceCallback,setSelectedIndexes(int[] selections),void,Set the selected choices.,"

setSelectedIndexes
public void setSelectedIndexes(int[] selections)
Set the selected choices.

 

Parameters:
selections - the selections represented as indexes into the
          choices list.
Throws:
UnsupportedOperationException - if multiple selections are
          not allowed, as determined by
          allowMultipleSelections.
See Also:
getSelectedIndexes()


"
ConfirmationCallback,getDefaultOption(),int,Get the default option.,"

getDefaultOption
public int getDefaultOption()
Get the default option.

 

Returns:
the default option, represented as
          YES, NO, OK or
          CANCEL if an optionType
          was specified to the constructor of this
          ConfirmationCallback.
          Otherwise, this method returns the default option as
          an index into the
          options array specified to the constructor
          of this ConfirmationCallback.


"
ConfirmationCallback,getMessageType(),int,Get the message type.,"

getMessageType
public int getMessageType()
Get the message type.

 

Returns:
the message type (INFORMATION,
          WARNING or ERROR).


"
ConfirmationCallback,getOptions(),String[],Get the confirmation options.,"

getOptions
public String[] getOptions()
Get the confirmation options.

 

Returns:
the list of confirmation options, or null if this
          ConfirmationCallback was instantiated with
          an optionType instead of options.


"
ConfirmationCallback,getOptionType(),int,Get the option type.,"

getOptionType
public int getOptionType()
Get the option type.

  If this method returns UNSPECIFIED_OPTION, then this
 ConfirmationCallback was instantiated with
 options instead of an optionType.
 In this case, invoke the getOptions method
 to determine which confirmation options to display.

 

Returns:
the option type (YES_NO_OPTION,
          YES_NO_CANCEL_OPTION or
          OK_CANCEL_OPTION), or
          UNSPECIFIED_OPTION if this
          ConfirmationCallback was instantiated with
          options instead of an optionType.


"
ConfirmationCallback,getPrompt(),String,Get the prompt.,"

getPrompt
public String getPrompt()
Get the prompt.

 

Returns:
the prompt, or null if this ConfirmationCallback
          was instantiated without a prompt.


"
ConfirmationCallback,getSelectedIndex(),int,Get the selected confirmation option.,"

getSelectedIndex
public int getSelectedIndex()
Get the selected confirmation option.

 

Returns:
the selected confirmation option represented as
          YES, NO, OK or
          CANCEL if an optionType
          was specified to the constructor of this
          ConfirmationCallback.
          Otherwise, this method returns the selected confirmation
          option as an index into the
          options array specified to the constructor
          of this ConfirmationCallback.
See Also:
setSelectedIndex(int)


"
ConfirmationCallback,setSelectedIndex(int selection),void,Set the selected confirmation option.,"

setSelectedIndex
public void setSelectedIndex(int selection)
Set the selected confirmation option.

 

Parameters:
selection - the selection represented as YES,
          NO, OK or CANCEL
          if an optionType was specified to the constructor
          of this ConfirmationCallback.
          Otherwise, the selection represents the index into the
          options array specified to the constructor
          of this ConfirmationCallback.
See Also:
getSelectedIndex()


"
LanguageCallback,getLocale(),Locale,Get the retrieved Locale.,"

getLocale
public Locale getLocale()
Get the retrieved Locale.

 

Returns:
the retrieved Locale, or null
          if no Locale could be retrieved.
See Also:
setLocale(java.util.Locale)


"
LanguageCallback,setLocale(Locale locale),void,Set the retrieved Locale.,"

setLocale
public void setLocale(Locale locale)
Set the retrieved Locale.

 

Parameters:
locale - the retrieved Locale.
See Also:
getLocale()


"
NameCallback,getDefaultName(),String,Get the default name.,"

getDefaultName
public String getDefaultName()
Get the default name.

 

Returns:
the default name, or null if this NameCallback
          was not instantiated with a defaultName.


"
NameCallback,getName(),String,Get the retrieved name.,"

getName
public String getName()
Get the retrieved name.

 

Returns:
the retrieved name (which may be null)
See Also:
setName(java.lang.String)


"
NameCallback,getPrompt(),String,Get the prompt.,"

getPrompt
public String getPrompt()
Get the prompt.

 

Returns:
the prompt.


"
NameCallback,setName(String name),void,Set the retrieved name.,"

setName
public void setName(String name)
Set the retrieved name.

 

Parameters:
name - the retrieved name (which may be null).
See Also:
getName()


"
PasswordCallback,clearPassword(),void,Clear the retrieved password.,"

clearPassword
public void clearPassword()
Clear the retrieved password.

"
PasswordCallback,getPassword(),char[],Get the retrieved password.,"

getPassword
public char[] getPassword()
Get the retrieved password.

  This method returns a copy of the retrieved password.

 

Returns:
the retrieved password, which may be null.
See Also:
setPassword(char[])


"
PasswordCallback,getPrompt(),String,Get the prompt.,"

getPrompt
public String getPrompt()
Get the prompt.

 

Returns:
the prompt.


"
PasswordCallback,isEchoOn(),boolean,Return whether the password should be displayed as it is being typed.,"

isEchoOn
public boolean isEchoOn()
Return whether the password
 should be displayed as it is being typed.

 

Returns:
the whether the password
          should be displayed as it is being typed.


"
PasswordCallback,setPassword(char[] password),void,Set the retrieved password.,"

setPassword
public void setPassword(char[] password)
Set the retrieved password.

  This method makes a copy of the input password
 before storing it.

 

Parameters:
password - the retrieved password, which may be null.
See Also:
getPassword()


"
TextInputCallback,getDefaultText(),String,Get the default text.,"

getDefaultText
public String getDefaultText()
Get the default text.

 

Returns:
the default text, or null if this TextInputCallback
          was not instantiated with defaultText.


"
TextInputCallback,getPrompt(),String,Get the prompt.,"

getPrompt
public String getPrompt()
Get the prompt.

 

Returns:
the prompt.


"
TextInputCallback,getText(),String,Get the retrieved text.,"

getText
public String getText()
Get the retrieved text.

 

Returns:
the retrieved text, which may be null.
See Also:
setText(java.lang.String)


"
TextInputCallback,setText(String text),void,Set the retrieved text.,"

setText
public void setText(String text)
Set the retrieved text.

 

Parameters:
text - the retrieved text, which may be null.
See Also:
getText()


"
TextOutputCallback,getMessage(),String,Get the message to be displayed.,"

getMessage
public String getMessage()
Get the message to be displayed.

 

Returns:
the message to be displayed.


"
TextOutputCallback,getMessageType(),int,Get the message type.,"

getMessageType
public int getMessageType()
Get the message type.

 

Returns:
the message type (INFORMATION,
                  WARNING or ERROR).


"
