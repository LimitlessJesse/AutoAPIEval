Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,IsoFields,1,TemporalField quarterOfYear(),False,,NULL
0,IsoFields,2,TemporalField weekBasedYear(),False,,NULL
0,IsoFields,3,TemporalField weekOfWeekBasedYear(),False,,NULL
0,IsoFields,4,TemporalField dayOfWeek(),False,,NULL
0,IsoFields,5,TemporalField weekOfMonth(),False,,NULL
1,JulianFields,1,long getJulianDay(LocalDate date),False,,NULL
1,JulianFields,2,LocalDate getDate(long julianDay),False,,NULL
1,JulianFields,3,boolean isSupportedField(TemporalField field),False,,NULL
1,JulianFields,4,ValueRange rangeRefinedBy(TemporalField field),False,,NULL
1,JulianFields,5,"TemporalAccessor resolve(Map<TemporalField, Long> fieldValues, TemporalAccessor partialTemporal, ResolverStyle resolverStyle)",False,,NULL
2,TemporalAdjusters,1,TemporalAdjuster firstDayOfMonth(),True,,"

firstDayOfMonth
public static TemporalAdjuster firstDayOfMonth()
Returns the ""first day of month"" adjuster, which returns a new date set to
 the first day of the current month.
 
 The ISO calendar system behaves as follows:
 The input 2011-01-15 will return 2011-01-01.
 The input 2011-02-15 will return 2011-02-01.
 
 The behavior is suitable for use with most calendar systems.
 It is equivalent to:
 
  temporal.with(DAY_OF_MONTH, 1);
 

Returns:
the first day-of-month adjuster, not null


"
2,TemporalAdjusters,2,TemporalAdjuster lastDayOfMonth(),True,,"

lastDayOfMonth
public static TemporalAdjuster lastDayOfMonth()
Returns the ""last day of month"" adjuster, which returns a new date set to
 the last day of the current month.
 
 The ISO calendar system behaves as follows:
 The input 2011-01-15 will return 2011-01-31.
 The input 2011-02-15 will return 2011-02-28.
 The input 2012-02-15 will return 2012-02-29 (leap year).
 The input 2011-04-15 will return 2011-04-30.
 
 The behavior is suitable for use with most calendar systems.
 It is equivalent to:
 
  long lastDay = temporal.range(DAY_OF_MONTH).getMaximum();
  temporal.with(DAY_OF_MONTH, lastDay);
 

Returns:
the last day-of-month adjuster, not null


"
2,TemporalAdjusters,3,TemporalAdjuster firstDayOfNextMonth(),True,,"

firstDayOfNextMonth
public static TemporalAdjuster firstDayOfNextMonth()
Returns the ""first day of next month"" adjuster, which returns a new date set to
 the first day of the next month.
 
 The ISO calendar system behaves as follows:
 The input 2011-01-15 will return 2011-02-01.
 The input 2011-02-15 will return 2011-03-01.
 
 The behavior is suitable for use with most calendar systems.
 It is equivalent to:
 
  temporal.with(DAY_OF_MONTH, 1).plus(1, MONTHS);
 

Returns:
the first day of next month adjuster, not null


"
2,TemporalAdjusters,4,TemporalAdjuster firstDayOfYear(),True,,"

firstDayOfYear
public static TemporalAdjuster firstDayOfYear()
Returns the ""first day of year"" adjuster, which returns a new date set to
 the first day of the current year.
 
 The ISO calendar system behaves as follows:
 The input 2011-01-15 will return 2011-01-01.
 The input 2011-02-15 will return 2011-01-01.

 The behavior is suitable for use with most calendar systems.
 It is equivalent to:
 
  temporal.with(DAY_OF_YEAR, 1);
 

Returns:
the first day-of-year adjuster, not null


"
2,TemporalAdjusters,5,TemporalAdjuster lastDayOfYear(),True,,"

lastDayOfYear
public static TemporalAdjuster lastDayOfYear()
Returns the ""last day of year"" adjuster, which returns a new date set to
 the last day of the current year.
 
 The ISO calendar system behaves as follows:
 The input 2011-01-15 will return 2011-12-31.
 The input 2011-02-15 will return 2011-12-31.

 The behavior is suitable for use with most calendar systems.
 It is equivalent to:
 
  long lastDay = temporal.range(DAY_OF_YEAR).getMaximum();
  temporal.with(DAY_OF_YEAR, lastDay);
 

Returns:
the last day-of-year adjuster, not null


"
3,TemporalQueries,1,TemporalQuery<R> precision(),False,,NULL
3,TemporalQueries,2,TemporalQuery<R> zone(),False,,NULL
3,TemporalQueries,3,TemporalQuery<R> offset(),False,,NULL
3,TemporalQueries,4,TemporalQuery<R> dayOfWeek(),False,,NULL
3,TemporalQueries,5,TemporalQuery<R> localDate(),False,,NULL
4,ValueRange,1,long getMaximum(),True,,"

getMaximum
public long getMaximum()
Gets the maximum value that the field can take.
 
 For example, the ISO day-of-month runs to between 28 and 31 days.
 The maximum is therefore 31.

Returns:
the maximum value for this field


"
4,ValueRange,2,long getMinimum(),True,,"

getMinimum
public long getMinimum()
Gets the minimum value that the field can take.
 
 For example, the ISO day-of-month always starts at 1.
 The minimum is therefore 1.

Returns:
the minimum value for this field


"
4,ValueRange,3,boolean isFixed(),True,,"

isFixed
public boolean isFixed()
Is the value range fixed and fully known.
 
 For example, the ISO day-of-month runs from 1 to between 28 and 31.
 Since there is uncertainty about the maximum value, the range is not fixed.
 However, for the month of January, the range is always 1 to 31, thus it is fixed.

Returns:
true if the set of values is fixed


"
4,ValueRange,4,boolean isIntValue(),True,,"

isIntValue
public boolean isIntValue()
Checks if all values in the range fit in an int.
 
 This checks that all valid values are within the bounds of an int.
 
 For example, the ISO month-of-year has values from 1 to 12, which fits in an int.
 By comparison, ISO nano-of-day runs from 1 to 86,400,000,000,000 which does not fit in an int.
 
 This implementation uses getMinimum() and getMaximum().

Returns:
true if a valid value always fits in an int


"
4,ValueRange,5,boolean isValidIntValue(long value),True,,"

isValidIntValue
public boolean isValidIntValue(long value)
Checks if the value is within the valid range and that all values
 in the range fit in an int.
 
 This method combines isIntValue() and isValidValue(long).

Parameters:
value - the value to check
Returns:
true if the value is valid and fits in an int


"
5,WeekFields,1,java.time.temporal.WeekFields of(Locale locale),False,,NULL
5,WeekFields,2,java.time.temporal.ValueRange range(ChronoField field),False,,NULL
5,WeekFields,3,java.time.temporal.TemporalField dayOfWeek(),False,,NULL
5,WeekFields,4,java.time.temporal.TemporalField weekOfMonth(),False,,NULL
5,WeekFields,5,java.time.temporal.TemporalField weekOfYear(),False,,NULL
