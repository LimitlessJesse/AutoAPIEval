Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,AncestorEvent,1,Object getSource(),False,,NULL
0,AncestorEvent,2,AncestorListener[] getAncestorListeners(),False,,NULL
0,AncestorEvent,3,boolean isAncestorOf(Component c),False,,NULL
0,AncestorEvent,4,void addAncestorListener(AncestorListener listener),False,,NULL
0,AncestorEvent,5,void removeAncestorListener(AncestorListener listener),False,,NULL
1,CaretEvent,1,int getDot(),True,,"

getDot
public abstract int getDot()
Fetches the location of the caret.

Returns:
the dot >= 0


"
1,CaretEvent,2,int getMark(),True,,"

getMark
public abstract int getMark()
Fetches the location of other end of a logical
 selection.  If there is no selection, this
 will be the same as dot.

Returns:
the mark >= 0


"
1,CaretEvent,3,boolean isVisible(),False,,NULL
1,CaretEvent,4,void setDot(int dot),False,,NULL
1,CaretEvent,5,void setMark(int mark),False,,NULL
3,DocumentEvent.EventType,1,javax.swing.event.DocumentEvent.EventType getType(),False,,NULL
3,DocumentEvent.EventType,2,int getIndex(),False,,NULL
3,DocumentEvent.EventType,3,int getLength(),False,,NULL
3,DocumentEvent.EventType,4,Document getDocument(),False,,NULL
3,DocumentEvent.EventType,5,DocumentEvent.ElementChange getChange(Element elem),False,,NULL
5,HyperlinkEvent,1,URL getURL(),True,,"

getURL
public URL getURL()
Gets the URL that the link refers to.

Returns:
the URL


"
5,HyperlinkEvent,2,EventType getEventType(),False,,NULL
5,HyperlinkEvent,3,String getDescription(),True,,"

getDescription
public String getDescription()
Get the description of the link as a string.
 This may be useful if a URL can't be formed
 from the description, in which case the associated
 URL would be null.

"
5,HyperlinkEvent,4,int getSourceElement(),False,,NULL
5,HyperlinkEvent,5,String getURLDescription(),False,,NULL
6,HyperlinkEvent.EventType,1,String toString(),True,,"

toString
public String toString()
Converts the type to a string.

Overrides:
toString in class Object
Returns:
the string


"
6,HyperlinkEvent.EventType,2,boolean equals(Object obj),False,,NULL
6,HyperlinkEvent.EventType,3,int hashCode(),False,,NULL
6,HyperlinkEvent.EventType,4,HyperlinkEvent.EventType valueOf(String name),False,,NULL
6,HyperlinkEvent.EventType,5,HyperlinkEvent.EventType[] values(),False,,NULL
9,ListDataEvent,1,int getIndex0(),True,,"

getIndex0
public int getIndex0()
Returns the lower index of the range. For a single
 element, this value is the same as that returned by getIndex1().

Returns:
an int representing the lower index value


"
9,ListDataEvent,2,int getIndex1(),True,,"

getIndex1
public int getIndex1()
Returns the upper index of the range. For a single
 element, this value is the same as that returned by getIndex0().

Returns:
an int representing the upper index value


"
9,ListDataEvent,3,"ListDataEvent(Object source, int type, int index0, int index1)",False,,NULL
9,ListDataEvent,4,int getType(),True,,"

getType
public int getType()
Returns the event type. The possible values are:
 
 CONTENTS_CHANGED
 INTERVAL_ADDED
 INTERVAL_REMOVED


Returns:
an int representing the type value


"
9,ListDataEvent,5,String toString(),True,,"

toString
public String toString()
Returns a string representation of this ListDataEvent. This method
 is intended to be used only for debugging purposes, and the
 content and format of the returned string may vary between
 implementations. The returned string may be empty but may not
 be null.

Overrides:
toString in class EventObject
Returns:
a string representation of this ListDataEvent.
Since:
1.4


"
10,ListSelectionEvent,1,int getFirstIndex(),True,,"

getFirstIndex
public int getFirstIndex()
Returns the index of the first row whose selection may have changed.
 getFirstIndex() <= getLastIndex()

Returns:
the first row whose selection value may have changed,
         where zero is the first row


"
10,ListSelectionEvent,2,int getLastIndex(),True,,"

getLastIndex
public int getLastIndex()
Returns the index of the last row whose selection may have changed.
 getLastIndex() >= getFirstIndex()

Returns:
the last row whose selection value may have changed,
         where zero is the first row


"
10,ListSelectionEvent,3,boolean getValueIsAdjusting(),True,,"

getValueIsAdjusting
public boolean getValueIsAdjusting()
Returns whether or not this is one in a series of multiple events,
 where changes are still being made. See the documentation for
 ListSelectionModel.setValueIsAdjusting(boolean) for
 more details on how this is used.

Returns:
true if this is one in a series of multiple events,
         where changes are still being made


"
10,ListSelectionEvent,4,int getSourceIndex(),False,,NULL
10,ListSelectionEvent,5,String toString(),True,,"

toString
public String toString()
Returns a String that displays and identifies this
 object's properties.

Overrides:
toString in class EventObject
Returns:
a String representation of this object


"
11,MenuDragMouseEvent,1,int getX(),False,,NULL
11,MenuDragMouseEvent,2,int getY(),False,,NULL
11,MenuDragMouseEvent,3,MenuElement getPath(),False,,NULL
11,MenuDragMouseEvent,4,MenuSelectionManager getMenuSelectionManager(),True,,"

getMenuSelectionManager
public MenuSelectionManager getMenuSelectionManager()
Returns the current menu selection manager.

Returns:
a MenuSelectionManager object


"
11,MenuDragMouseEvent,5,MenuElement[] getPath(),True,,"

getPath
public MenuElement[] getPath()
Returns the path to the selected menu item.

Returns:
an array of MenuElement objects representing the path value


"
15,PopupMenuEvent,1,PopupMenuEvent(Object source),False,,NULL
15,PopupMenuEvent,2,Component getComponent(),False,,NULL
15,PopupMenuEvent,3,JPopupMenu getPopupMenu(),False,,NULL
15,PopupMenuEvent,4,String paramString(),False,,NULL
15,PopupMenuEvent,5,String toString(),False,,NULL
16,RowSorterEvent,1,int getType(),False,,NULL
16,RowSorterEvent,2,RowSorter getSource(),True,,"

getSource
public RowSorter getSource()
Returns the source of the event as a RowSorter.

Overrides:
getSource in class EventObject
Returns:
the source of the event as a RowSorter


"
16,RowSorterEvent,3,int getPreviousRowCount(),True,,"

getPreviousRowCount
public int getPreviousRowCount()
Returns the number of rows before the sort.  This method is only
 useful for events of type SORTED and if the
 last locations have not been provided will return 0.

Returns:
the number of rows in terms of the view prior to the sort


"
16,RowSorterEvent,4,int getPreviousRowIndex(),False,,NULL
16,RowSorterEvent,5,int getRowCount(),False,,NULL
17,SwingPropertyChangeSupport,1,"void firePropertyChange(String propertyName, Object oldValue, Object newValue)",False,,NULL
17,SwingPropertyChangeSupport,2,"void fireIndexedPropertyChange(String propertyName, int index, Object oldValue, Object newValue)",False,,NULL
17,SwingPropertyChangeSupport,3,void firePropertyChange(PropertyChangeEvent evt),True,,"

firePropertyChange
public void firePropertyChange(PropertyChangeEvent evt)
Fires a property change event to listeners
 that have been registered to track updates of
 all properties or a property with the specified name.
 
 No event is fired if the given event's old and new values are equal and non-null.

 
 If isNotifyOnEDT() is true and called off the
 Event Dispatch Thread this implementation uses
 SwingUtilities.invokeLater to send out the notification
 on the Event Dispatch Thread. This ensures  listeners
 are only ever notified on the Event Dispatch Thread.

Overrides:
firePropertyChange in class PropertyChangeSupport
Parameters:
evt - the PropertyChangeEvent to be fired
Throws:
NullPointerException - if evt is
         null
Since:
1.6


"
17,SwingPropertyChangeSupport,4,void removePropertyChangeListener(PropertyChangeListener listener),False,,NULL
17,SwingPropertyChangeSupport,5,"void addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",False,,NULL
18,TableColumnModelEvent,1,int getFromIndex(),True,,"

getFromIndex
public int getFromIndex()
Returns the fromIndex.  Valid for removed or moved events

"
18,TableColumnModelEvent,2,int getToIndex(),True,,"

getToIndex
public int getToIndex()
Returns the toIndex.  Valid for add and moved events

"
18,TableColumnModelEvent,3,TableColumnModel getColumnModel(),False,,NULL
18,TableColumnModelEvent,4,int getType(),False,,NULL
18,TableColumnModelEvent,5,TableColumn getColumn(),False,,NULL
19,TableModelEvent,1,int getFirstRow(),True,,"

getFirstRow
public int getFirstRow()
Returns the first row that changed.  HEADER_ROW means the meta data,
 ie. names, types and order of the columns.

"
19,TableModelEvent,2,int getLastRow(),True,,"

getLastRow
public int getLastRow()
Returns the last row that changed.

"
19,TableModelEvent,3,int getType(),True,,"

getType
public int getType()
Returns the type of event - one of: INSERT, UPDATE and DELETE.

"
19,TableModelEvent,4,int getColumn(),True,,"

getColumn
public int getColumn()
Returns the column for the event.  If the return
  value is ALL_COLUMNS; it means every column in the specified
  rows changed.

"
19,TableModelEvent,5,TableModel getSource(),False,,NULL
20,TreeExpansionEvent,1,Object getSource(),False,,NULL
20,TreeExpansionEvent,2,TreePath getPath(),True,,"

getPath
public TreePath getPath()
Returns the path to the value that has been expanded/collapsed.

"
20,TreeExpansionEvent,3,boolean isExpanded(),False,,NULL
20,TreeExpansionEvent,4,boolean isCollapsed(),False,,NULL
20,TreeExpansionEvent,5,String toString(),False,,NULL
21,TreeModelEvent,1,Object getSource(),False,,NULL
21,TreeModelEvent,2,int getChildIndices(),False,,NULL
21,TreeModelEvent,3,Object[] getChildren(),True,,"

getChildren
public Object[] getChildren()
Returns the objects that are children of the node identified by
 getPath at the locations specified by
 getChildIndices. If this is a removal event the
 returned objects are no longer children of the parent node.

Returns:
an array of Object containing the children specified by
         the event
See Also:
getPath(), 
getChildIndices()


"
21,TreeModelEvent,4,TreePath getTreePath(),True,,"

getTreePath
public TreePath getTreePath()
For all events, except treeStructureChanged,
 returns the parent of the changed nodes.
 For treeStructureChanged events, returns the ancestor of the
 structure that has changed. This and
 getChildIndices are used to get a list of the effected
 nodes.
 
 The one exception to this is a treeNodesChanged event that is to
 identify the root, in which case this will return the root
 and getChildIndices will return null.

Returns:
the TreePath used in identifying the changed nodes.
See Also:
TreePath.getLastPathComponent()


"
21,TreeModelEvent,5,int[] getChildIndices(),True,,"

getChildIndices
public int[] getChildIndices()
Returns the values of the child indexes. If this is a removal event
 the indexes point to locations in the initial list where items
 were removed. If it is an insert, the indices point to locations
 in the final list where the items were added. For node changes,
 the indices point to the locations of the modified nodes.

Returns:
an array of int containing index locations for
         the children specified by the event


"
22,TreeSelectionEvent,1,int getNewLeadSelectionRow(),False,,NULL
22,TreeSelectionEvent,2,int getOldLeadSelectionRow(),False,,NULL
22,TreeSelectionEvent,3,TreePath getPath(),True,,"

getPath
public TreePath getPath()
Returns the first path element.

"
22,TreeSelectionEvent,4,TreePath[] getPaths(),True,,"

getPaths
public TreePath[] getPaths()
Returns the paths that have been added or removed from the
 selection.

"
22,TreeSelectionEvent,5,boolean isAddedPath(),True,,"

isAddedPath
public boolean isAddedPath()
Returns whether the path identified by getPath was
 added to the selection.  A return value of true
 indicates the path identified by getPath was added to
 the selection. A return value of false indicates getPath was selected, but is no longer selected.

Returns:
true if getPath was added to the selection,
         false otherwise


"
23,UndoableEditEvent,1,UndoableEdit getEdit(),True,,"

getEdit
public UndoableEdit getEdit()
Returns the edit value.

Returns:
the UndoableEdit object encapsulating the edit


"
23,UndoableEditEvent,2,boolean isSignificant(),False,,NULL
23,UndoableEditEvent,3,boolean isUndo(),False,,NULL
23,UndoableEditEvent,4,boolean isRedo(),False,,NULL
23,UndoableEditEvent,5,String toString(),False,,NULL
