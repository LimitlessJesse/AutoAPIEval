ClassName,Method,Return Type,Description,Full Description
AbstractBorder,"getBaseline(Component c, int width, int height)",int,Returns the baseline.,"

getBaseline
public int getBaseline(Component c,
                       int width,
                       int height)
Returns the baseline.  A return value less than 0 indicates the border
 does not have a reasonable baseline.
 
 The default implementation returns -1.  Subclasses that support
 baseline should override appropriately.  If a value >= 0 is
 returned, then the component has a valid baseline for any
 size >= the minimum size and getBaselineResizeBehavior
 can be used to determine how the baseline changes with size.

Parameters:
c - Component baseline is being requested for
width - the width to get the baseline for
height - the height to get the baseline for
Returns:
the baseline or < 0 indicating there is no reasonable
         baseline
Throws:
IllegalArgumentException - if width or height is < 0
Since:
1.6
See Also:
Component.getBaseline(int,int), 
Component.getBaselineResizeBehavior()


"
AbstractBorder,getBaselineResizeBehavior(Component c),Component.BaselineResizeBehavior,Returns an enum indicating how the baseline of a component changes as the size changes.,"

getBaselineResizeBehavior
public Component.BaselineResizeBehavior getBaselineResizeBehavior(Component c)
Returns an enum indicating how the baseline of a component
 changes as the size changes.  This method is primarily meant for
 layout managers and GUI builders.
 
 The default implementation returns
 BaselineResizeBehavior.OTHER, subclasses that support
 baseline should override appropriately.  Subclasses should
 never return null; if the baseline can not be
 calculated return BaselineResizeBehavior.OTHER.  Callers
 should first ask for the baseline using
 getBaseline and if a value >= 0 is returned use
 this method.  It is acceptable for this method to return a
 value other than BaselineResizeBehavior.OTHER even if
 getBaseline returns a value less than 0.

Parameters:
c - Component to return baseline resize behavior for
Returns:
an enum indicating how the baseline changes as the border is
         resized
Since:
1.6
See Also:
Component.getBaseline(int,int), 
Component.getBaselineResizeBehavior()


"
AbstractBorder,getBorderInsets(Component c),Insets,"This default implementation returns a new Insets object that is initialized by the getBorderInsets(Component,Insets) method.","

getBorderInsets
public Insets getBorderInsets(Component c)
This default implementation returns a new Insets object
 that is initialized by the getBorderInsets(Component,Insets)
 method.
 By default the top, left, bottom,
 and right fields are set to 0.

Specified by:
getBorderInsets in interface Border
Parameters:
c - the component for which this border insets value applies
Returns:
a new Insets object


"
AbstractBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitializes the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitializes the insets parameter with this Border's current Insets.

Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
AbstractBorder,"getInteriorRectangle(Component c, Border b, int x, int y, int width, int height)",static Rectangle,Returns a rectangle using the arguments minus the insets of the border.,"

getInteriorRectangle
public static Rectangle getInteriorRectangle(Component c,
                                             Border b,
                                             int x,
                                             int y,
                                             int width,
                                             int height)
Returns a rectangle using the arguments minus the
 insets of the border. This is useful for determining the area
 that components should draw in that will not intersect the border.

Parameters:
c - the component for which this border is being computed
b - the Border object
x - the x position of the border
y - the y position of the border
width - the width of the border
height - the height of the border
Returns:
a Rectangle containing the interior coordinates


"
AbstractBorder,"getInteriorRectangle(Component c, int x, int y, int width, int height)",Rectangle,This convenience method calls the static method.,"

getInteriorRectangle
public Rectangle getInteriorRectangle(Component c,
                                      int x,
                                      int y,
                                      int width,
                                      int height)
This convenience method calls the static method.

Parameters:
c - the component for which this border is being computed
x - the x position of the border
y - the y position of the border
width - the width of the border
height - the height of the border
Returns:
a Rectangle containing the interior coordinates


"
AbstractBorder,isBorderOpaque(),boolean,This default implementation returns false.,"

isBorderOpaque
public boolean isBorderOpaque()
This default implementation returns false.

Specified by:
isBorderOpaque in interface Border
Returns:
false


"
AbstractBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,This default implementation does no painting.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
This default implementation does no painting.

Specified by:
paintBorder in interface Border
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
BevelBorder,getBevelType(),int,Returns the type of the bevel border.,"

getBevelType
public int getBevelType()
Returns the type of the bevel border.

"
BevelBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
BevelBorder,getHighlightInnerColor(),Color,Returns the inner highlight color of the bevel border.,"

getHighlightInnerColor
public Color getHighlightInnerColor()
Returns the inner highlight color of the bevel border.
 Will return null if no highlight color was specified
 at instantiation.

Since:
1.3


"
BevelBorder,getHighlightInnerColor(Component c),Color,Returns the inner highlight color of the bevel border when rendered on the specified component.,"

getHighlightInnerColor
public Color getHighlightInnerColor(Component c)
Returns the inner highlight color of the bevel border
 when rendered on the specified component.  If no highlight
 color was specified at instantiation, the highlight color
 is derived from the specified component's background color.

Parameters:
c - the component for which the highlight may be derived
Since:
1.3


"
BevelBorder,getHighlightOuterColor(),Color,Returns the outer highlight color of the bevel border.,"

getHighlightOuterColor
public Color getHighlightOuterColor()
Returns the outer highlight color of the bevel border.
 Will return null if no highlight color was specified
 at instantiation.

Since:
1.3


"
BevelBorder,getHighlightOuterColor(Component c),Color,Returns the outer highlight color of the bevel border when rendered on the specified component.,"

getHighlightOuterColor
public Color getHighlightOuterColor(Component c)
Returns the outer highlight color of the bevel border
 when rendered on the specified component.  If no highlight
 color was specified at instantiation, the highlight color
 is derived from the specified component's background color.

Parameters:
c - the component for which the highlight may be derived
Since:
1.3


"
BevelBorder,getShadowInnerColor(),Color,Returns the inner shadow color of the bevel border.,"

getShadowInnerColor
public Color getShadowInnerColor()
Returns the inner shadow color of the bevel border.
 Will return null if no shadow color was specified
 at instantiation.

Since:
1.3


"
BevelBorder,getShadowInnerColor(Component c),Color,Returns the inner shadow color of the bevel border when rendered on the specified component.,"

getShadowInnerColor
public Color getShadowInnerColor(Component c)
Returns the inner shadow color of the bevel border
 when rendered on the specified component.  If no shadow
 color was specified at instantiation, the shadow color
 is derived from the specified component's background color.

Parameters:
c - the component for which the shadow may be derived
Since:
1.3


"
BevelBorder,getShadowOuterColor(),Color,Returns the outer shadow color of the bevel border.,"

getShadowOuterColor
public Color getShadowOuterColor()
Returns the outer shadow color of the bevel border.
 Will return null if no shadow color was specified
 at instantiation.

Since:
1.3


"
BevelBorder,getShadowOuterColor(Component c),Color,Returns the outer shadow color of the bevel border when rendered on the specified component.,"

getShadowOuterColor
public Color getShadowOuterColor(Component c)
Returns the outer shadow color of the bevel border
 when rendered on the specified component.  If no shadow
 color was specified at instantiation, the shadow color
 is derived from the specified component's background color.

Parameters:
c - the component for which the shadow may be derived
Since:
1.3


"
BevelBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
BevelBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the specified
 position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
BevelBorder,"paintLoweredBevel(Component c, Graphics g, int x, int y, int width, int height)",protected void,NULL,"

paintLoweredBevel
protected void paintLoweredBevel(Component c,
                                 Graphics g,
                                 int x,
                                 int y,
                                 int width,
                                 int height)

"
BevelBorder,"paintRaisedBevel(Component c, Graphics g, int x, int y, int width, int height)",protected void,NULL,"

paintRaisedBevel
protected void paintRaisedBevel(Component c,
                                Graphics g,
                                int x,
                                int y,
                                int width,
                                int height)

"
CompoundBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
CompoundBorder,getInsideBorder(),Border,Returns the inside border object.,"

getInsideBorder
public Border getInsideBorder()
Returns the inside border object.

"
CompoundBorder,getOutsideBorder(),Border,Returns the outside border object.,"

getOutsideBorder
public Border getOutsideBorder()
Returns the outside border object.

"
CompoundBorder,isBorderOpaque(),boolean,Returns whether or not the compound border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the compound border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
true if the inside and outside borders
         are each either null or opaque;
         or false otherwise


"
CompoundBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the compound border by painting the outside border with the specified position and size and then painting the inside border at the specified position and size offset by the insets of the outside border.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the compound border by painting the outside border
 with the specified position and size and then painting the
 inside border at the specified position and size offset by
 the insets of the outside border.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
EmptyBorder,getBorderInsets(),Insets,Returns the insets of the border.,"

getBorderInsets
public Insets getBorderInsets()
Returns the insets of the border.

Since:
1.3


"
EmptyBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
EmptyBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.
 Returns false by default.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
EmptyBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Does no drawing by default.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Does no drawing by default.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
EtchedBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
EtchedBorder,getEtchType(),int,Returns which etch-type is set on the etched border.,"

getEtchType
public int getEtchType()
Returns which etch-type is set on the etched border.

"
EtchedBorder,getHighlightColor(),Color,Returns the highlight color of the etched border.,"

getHighlightColor
public Color getHighlightColor()
Returns the highlight color of the etched border.
 Will return null if no highlight color was specified
 at instantiation.

Since:
1.3


"
EtchedBorder,getHighlightColor(Component c),Color,Returns the highlight color of the etched border when rendered on the specified component.,"

getHighlightColor
public Color getHighlightColor(Component c)
Returns the highlight color of the etched border
 when rendered on the specified component.  If no highlight
 color was specified at instantiation, the highlight color
 is derived from the specified component's background color.

Parameters:
c - the component for which the highlight may be derived
Since:
1.3


"
EtchedBorder,getShadowColor(),Color,Returns the shadow color of the etched border.,"

getShadowColor
public Color getShadowColor()
Returns the shadow color of the etched border.
 Will return null if no shadow color was specified
 at instantiation.

Since:
1.3


"
EtchedBorder,getShadowColor(Component c),Color,Returns the shadow color of the etched border when rendered on the specified component.,"

getShadowColor
public Color getShadowColor(Component c)
Returns the shadow color of the etched border
 when rendered on the specified component.  If no shadow
 color was specified at instantiation, the shadow color
 is derived from the specified component's background color.

Parameters:
c - the component for which the shadow may be derived
Since:
1.3


"
EtchedBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
EtchedBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the
 specified position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
LineBorder,createBlackLineBorder(),static Border,Convenience method for getting the Color.black LineBorder of thickness 1.,"

createBlackLineBorder
public static Border createBlackLineBorder()
Convenience method for getting the Color.black LineBorder of thickness 1.

"
LineBorder,createGrayLineBorder(),static Border,Convenience method for getting the Color.gray LineBorder of thickness 1.,"

createGrayLineBorder
public static Border createGrayLineBorder()
Convenience method for getting the Color.gray LineBorder of thickness 1.

"
LineBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
LineBorder,getLineColor(),Color,Returns the color of the border.,"

getLineColor
public Color getLineColor()
Returns the color of the border.

"
LineBorder,getRoundedCorners(),boolean,Returns whether this border will be drawn with rounded corners.,"

getRoundedCorners
public boolean getRoundedCorners()
Returns whether this border will be drawn with rounded corners.

Since:
1.3


"
LineBorder,getThickness(),int,Returns the thickness of the border.,"

getThickness
public int getThickness()
Returns the thickness of the border.

"
LineBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
LineBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the
 specified position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
MatteBorder,getBorderInsets(),Insets,Returns the insets of the border.,"

getBorderInsets
public Insets getBorderInsets()
Returns the insets of the border.

Overrides:
getBorderInsets in class EmptyBorder
Since:
1.3


"
MatteBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class EmptyBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object
Since:
1.3


"
MatteBorder,getMatteColor(),Color,Returns the color used for tiling the border or null if a tile icon is being used.,"

getMatteColor
public Color getMatteColor()
Returns the color used for tiling the border or null
 if a tile icon is being used.

Since:
1.3


"
MatteBorder,getTileIcon(),Icon,Returns the icon used for tiling the border or null if a solid color is being used.,"

getTileIcon
public Icon getTileIcon()
Returns the icon used for tiling the border or null
 if a solid color is being used.

Since:
1.3


"
MatteBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class EmptyBorder
Returns:
false


"
MatteBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the matte border.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the matte border.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class EmptyBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
SoftBevelBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class BevelBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
SoftBevelBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class BevelBorder
Returns:
false


"
SoftBevelBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the specified
 position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class BevelBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
StrokeBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitializes the insets parameter with this border's current insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitializes the insets parameter
 with this border's current insets.
 Every inset is the smallest (closest to negative infinity) integer value
 that is greater than or equal to the line width of the stroke
 that is used to paint the border.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the Insets object to be reinitialized
Returns:
the reinitialized insets parameter
Throws:
NullPointerException - if the specified insets is null
See Also:
Math.ceil(double)


"
StrokeBorder,getPaint(),Paint,Returns the Paint object used to generate a color during the border rendering.,"

getPaint
public Paint getPaint()
Returns the Paint object used to generate a color
 during the border rendering.

Returns:
the Paint object or null
         if the paint parameter is not set


"
StrokeBorder,getStroke(),BasicStroke,Returns the BasicStroke object used to stroke a shape during the border rendering.,"

getStroke
public BasicStroke getStroke()
Returns the BasicStroke object used to stroke a shape
 during the border rendering.

Returns:
the BasicStroke object


"
StrokeBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component
 with the specified position and size.
 If the border was not specified with a Paint object,
 the component's foreground color will be used to render the border.
 If the component's foreground color is not available,
 the default color of the Graphics object will be used.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border
Throws:
NullPointerException - if the specified g is null


"
TitledBorder,"getBaseline(Component c, int width, int height)",int,Returns the baseline.,"

getBaseline
public int getBaseline(Component c,
                       int width,
                       int height)
Returns the baseline.

Overrides:
getBaseline in class AbstractBorder
Parameters:
c - Component baseline is being requested for
width - the width to get the baseline for
height - the height to get the baseline for
Returns:
the baseline or < 0 indicating there is no reasonable
         baseline
Throws:
NullPointerException
IllegalArgumentException - if width or height is < 0
Since:
1.6
See Also:
JComponent.getBaseline(int, int)


"
TitledBorder,getBaselineResizeBehavior(Component c),Component.BaselineResizeBehavior,Returns an enum indicating how the baseline of the border changes as the size changes.,"

getBaselineResizeBehavior
public Component.BaselineResizeBehavior getBaselineResizeBehavior(Component c)
Returns an enum indicating how the baseline of the border
 changes as the size changes.

Overrides:
getBaselineResizeBehavior in class AbstractBorder
Parameters:
c - Component to return baseline resize behavior for
Returns:
an enum indicating how the baseline changes as the border is
         resized
Throws:
NullPointerException
Since:
1.6
See Also:
JComponent.getBaseline(int, int)


"
TitledBorder,getBorder(),Border,Returns the border of the titled border.,"

getBorder
public Border getBorder()
Returns the border of the titled border.

Returns:
the border of the titled border


"
TitledBorder,"getBorderInsets(Component c, Insets insets)",Insets,Reinitialize the insets parameter with this Border's current Insets.,"

getBorderInsets
public Insets getBorderInsets(Component c,
                              Insets insets)
Reinitialize the insets parameter with this Border's current Insets.

Overrides:
getBorderInsets in class AbstractBorder
Parameters:
c - the component for which this border insets value applies
insets - the object to be reinitialized
Returns:
the insets object


"
TitledBorder,getFont(Component c),protected Font,NULL,"

getFont
protected Font getFont(Component c)

"
TitledBorder,getMinimumSize(Component c),Dimension,Returns the minimum dimensions this border requires in order to fully display the border and title.,"

getMinimumSize
public Dimension getMinimumSize(Component c)
Returns the minimum dimensions this border requires
 in order to fully display the border and title.

Parameters:
c - the component where this border will be drawn
Returns:
the Dimension object


"
TitledBorder,getTitle(),String,Returns the title of the titled border.,"

getTitle
public String getTitle()
Returns the title of the titled border.

Returns:
the title of the titled border


"
TitledBorder,getTitleColor(),Color,Returns the title-color of the titled border.,"

getTitleColor
public Color getTitleColor()
Returns the title-color of the titled border.

Returns:
the title-color of the titled border


"
TitledBorder,getTitleFont(),Font,Returns the title-font of the titled border.,"

getTitleFont
public Font getTitleFont()
Returns the title-font of the titled border.

Returns:
the title-font of the titled border


"
TitledBorder,getTitleJustification(),int,Returns the title-justification of the titled border.,"

getTitleJustification
public int getTitleJustification()
Returns the title-justification of the titled border.

Returns:
the title-justification of the titled border


"
TitledBorder,getTitlePosition(),int,Returns the title-position of the titled border.,"

getTitlePosition
public int getTitlePosition()
Returns the title-position of the titled border.

Returns:
the title-position of the titled border


"
TitledBorder,isBorderOpaque(),boolean,Returns whether or not the border is opaque.,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
TitledBorder,"paintBorder(Component c, Graphics g, int x, int y, int width, int height)",void,Paints the border for the specified component with the specified position and size.,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
Paints the border for the specified component with the
 specified position and size.

Specified by:
paintBorder in interface Border
Overrides:
paintBorder in class AbstractBorder
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
TitledBorder,setBorder(Border border),void,Sets the border of the titled border.,"

setBorder
public void setBorder(Border border)
Sets the border of the titled border.

Parameters:
border - the border


"
TitledBorder,setTitle(String title),void,Sets the title of the titled border.,"

setTitle
public void setTitle(String title)
Sets the title of the titled border.

Parameters:
title - the title for the border


"
TitledBorder,setTitleColor(Color titleColor),void,Sets the title-color of the titled border.,"

setTitleColor
public void setTitleColor(Color titleColor)
Sets the title-color of the titled border.

Parameters:
titleColor - the color for the border title


"
TitledBorder,setTitleFont(Font titleFont),void,Sets the title-font of the titled border.,"

setTitleFont
public void setTitleFont(Font titleFont)
Sets the title-font of the titled border.

Parameters:
titleFont - the font for the border title


"
TitledBorder,setTitleJustification(int titleJustification),void,Sets the title-justification of the titled border.,"

setTitleJustification
public void setTitleJustification(int titleJustification)
Sets the title-justification of the titled border.

Parameters:
titleJustification - the justification for the border


"
TitledBorder,setTitlePosition(int titlePosition),void,Sets the title-position of the titled border.,"

setTitlePosition
public void setTitlePosition(int titlePosition)
Sets the title-position of the titled border.

Parameters:
titlePosition - the position for the border


"
