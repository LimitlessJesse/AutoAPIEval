Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,AbstractBorder,1,Insets getBorderInsets(Component c),True,,"

getBorderInsets
public Insets getBorderInsets(Component c)
This default implementation returns a new Insets object
 that is initialized by the getBorderInsets(Component,Insets)
 method.
 By default the top, left, bottom,
 and right fields are set to 0.

Specified by:
getBorderInsets in interface Border
Parameters:
c - the component for which this border insets value applies
Returns:
a new Insets object


"
0,AbstractBorder,2,boolean isBorderOpaque(),True,,"

isBorderOpaque
public boolean isBorderOpaque()
This default implementation returns false.

Specified by:
isBorderOpaque in interface Border
Returns:
false


"
0,AbstractBorder,3,"void paintBorder(Component c, Graphics g, int x, int y, int width, int height)",True,,"

paintBorder
public void paintBorder(Component c,
                        Graphics g,
                        int x,
                        int y,
                        int width,
                        int height)
This default implementation does no painting.

Specified by:
paintBorder in interface Border
Parameters:
c - the component for which this border is being painted
g - the paint graphics
x - the x position of the painted border
y - the y position of the painted border
width - the width of the painted border
height - the height of the painted border


"
0,AbstractBorder,4,"void setBorderInsets(Component c, Insets insets)",False,,NULL
0,AbstractBorder,5,void setBorderOpaque(boolean isOpaque),False,,NULL
1,BevelBorder,1,int getBevelType(),True,,"

getBevelType
public int getBevelType()
Returns the type of the bevel border.

"
1,BevelBorder,2,int getHighlightOuterColor(),False,,NULL
1,BevelBorder,3,int getHighlightInnerColor(),False,,NULL
1,BevelBorder,4,int getShadowOuterColor(),False,,NULL
1,BevelBorder,5,int getShadowInnerColor(),False,,NULL
2,CompoundBorder,1,Border getInsideBorder(),True,,"

getInsideBorder
public Border getInsideBorder()
Returns the inside border object.

"
2,CompoundBorder,2,Border getOutsideBorder(),True,,"

getOutsideBorder
public Border getOutsideBorder()
Returns the outside border object.

"
2,CompoundBorder,3,void setInsideBorder(Border insideBorder),False,,NULL
2,CompoundBorder,4,void setOutsideBorder(Border outsideBorder),False,,NULL
2,CompoundBorder,5,"CompoundBorder(Border outsideBorder, Border insideBorder)",False,,NULL
3,EmptyBorder,1,Insets getBorderInsets(Component c),False,,NULL
3,EmptyBorder,2,boolean isBorderOpaque(),True,,"

isBorderOpaque
public boolean isBorderOpaque()
Returns whether or not the border is opaque.
 Returns false by default.

Specified by:
isBorderOpaque in interface Border
Overrides:
isBorderOpaque in class AbstractBorder
Returns:
false


"
3,EmptyBorder,3,"void setBorderInsets(Component c, Insets insets)",False,,NULL
3,EmptyBorder,4,void setBorderOpaque(boolean isOpaque),False,,NULL
3,EmptyBorder,5,"EmptyBorder(int top, int left, int bottom, int right)",False,,NULL
4,EtchedBorder,1,int getEtchType(),True,,"

getEtchType
public int getEtchType()
Returns which etch-type is set on the etched border.

"
4,EtchedBorder,2,Color getHighlightColor(),True,,"

getHighlightColor
public Color getHighlightColor()
Returns the highlight color of the etched border.
 Will return null if no highlight color was specified
 at instantiation.

Since:
1.3


"
4,EtchedBorder,3,Color getShadowColor(),True,,"

getShadowColor
public Color getShadowColor()
Returns the shadow color of the etched border.
 Will return null if no shadow color was specified
 at instantiation.

Since:
1.3


"
4,EtchedBorder,4,void setEtchType(int etchType),False,,NULL
4,EtchedBorder,5,void setHighlightColor(Color highlight),False,,NULL
5,LineBorder,1,int getThickness(),True,,"

getThickness
public int getThickness()
Returns the thickness of the border.

"
5,LineBorder,2,Color getLineColor(),True,,"

getLineColor
public Color getLineColor()
Returns the color of the border.

"
5,LineBorder,3,void setThickness(int thickness),False,,NULL
5,LineBorder,4,void setLineColor(Color color),False,,NULL
5,LineBorder,5,"LineBorder(Color color, int thickness, boolean roundedCorners)",False,,NULL
6,MatteBorder,1,Color getMatteColor(),True,,"

getMatteColor
public Color getMatteColor()
Returns the color used for tiling the border or null
 if a tile icon is being used.

Since:
1.3


"
6,MatteBorder,2,int getTileIconWidth(),False,,NULL
6,MatteBorder,3,int getTileIconHeight(),False,,NULL
6,MatteBorder,4,int getTileIconXOffset(),False,,NULL
6,MatteBorder,5,int getTileIconYOffset(),False,,NULL
7,SoftBevelBorder,1,int getBevelType(),False,,NULL
7,SoftBevelBorder,2,Color getHighlightInnerColor(),False,,NULL
7,SoftBevelBorder,3,Color getShadowInnerColor(),False,,NULL
7,SoftBevelBorder,4,int getHighlightOuter(),False,,NULL
7,SoftBevelBorder,5,int getShadowOuter(),False,,NULL
8,StrokeBorder,1,Stroke getStroke(),False,,NULL
8,StrokeBorder,2,void setStroke(Stroke s),False,,NULL
8,StrokeBorder,3,Paint getPaint(),True,,"

getPaint
public Paint getPaint()
Returns the Paint object used to generate a color
 during the border rendering.

Returns:
the Paint object or null
         if the paint parameter is not set


"
8,StrokeBorder,4,void setPaint(Paint p),False,,NULL
8,StrokeBorder,5,Insets getBorderInsets(Component c),False,,NULL
9,TitledBorder,1,String getTitle(),True,,"

getTitle
public String getTitle()
Returns the title of the titled border.

Returns:
the title of the titled border


"
9,TitledBorder,2,void setTitle(String title),True,,"

setTitle
public void setTitle(String title)
Sets the title of the titled border.

Parameters:
title - the title for the border


"
9,TitledBorder,3,int getTitlePosition(),True,,"

getTitlePosition
public int getTitlePosition()
Returns the title-position of the titled border.

Returns:
the title-position of the titled border


"
9,TitledBorder,4,void setTitlePosition(int titlePosition),True,,"

setTitlePosition
public void setTitlePosition(int titlePosition)
Sets the title-position of the titled border.

Parameters:
titlePosition - the position for the border


"
9,TitledBorder,5,int getTitleJustification(),True,,"

getTitleJustification
public int getTitleJustification()
Returns the title-justification of the titled border.

Returns:
the title-justification of the titled border


"
