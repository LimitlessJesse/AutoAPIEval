Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,JPEGHuffmanTable,1,int[] getLengths(),False,,NULL
0,JPEGHuffmanTable,2,int[] getValues(),False,,NULL
0,JPEGHuffmanTable,3,int hashCode(),False,,NULL
0,JPEGHuffmanTable,4,boolean equals(Object obj),False,,NULL
0,JPEGHuffmanTable,5,String toString(),True,,"

toString
public String toString()
Returns a String representing this Huffman table.

Overrides:
toString in class Object
Returns:
a String representing this Huffman table.


"
1,JPEGImageReadParam,1,"void setTable(int tableIndex, int[] table)",False,,NULL
1,JPEGImageReadParam,2,int[] getTable(int tableIndex),False,,NULL
1,JPEGImageReadParam,3,void setDecodeTables(int[] decodeTables),False,,NULL
1,JPEGImageReadParam,4,int[] getDecodeTables(),False,,NULL
1,JPEGImageReadParam,5,"void setMarkerData(int marker, byte[] markerData)",False,,NULL
2,JPEGImageWriteParam,1,void setOptimizeHuffmanTables(boolean optimize),True,,"

setOptimizeHuffmanTables
public void setOptimizeHuffmanTables(boolean optimize)
Tells the writer to generate optimized Huffman tables
 for the image as part of the writing process.  The
 default is false.  If this flag is set
 to true, it overrides any tables specified
 in the metadata.  Note that this means that any image
 written with this flag set to true will
 always contain Huffman tables.

Parameters:
optimize - A boolean indicating whether to generate
 optimized Huffman tables when writing.
See Also:
getOptimizeHuffmanTables()


"
2,JPEGImageWriteParam,2,"void setJPEGQTable(int tableNum, JPEGQTable qTable)",False,,NULL
2,JPEGImageWriteParam,3,JPEGQTable getJPEGQTable(int tableNum),False,,NULL
2,JPEGImageWriteParam,4,void unsetJPEGQTable(int tableNum),False,,NULL
2,JPEGImageWriteParam,5,boolean areTablesSet(),True,,"

areTablesSet
public boolean areTablesSet()
Returns true if tables are currently set.

Returns:
true if tables are present.


"
3,JPEGQTable,1,"int getElement(int x, int y)",False,,NULL
3,JPEGQTable,2,"void setElement(int x, int y, int value)",False,,NULL
3,JPEGQTable,3,int[] getTable(),True,,"

getTable
public int[] getTable()
Returns a copy of the current quantization table as an array
 of ints in natural (not zig-zag) order.

Returns:
A copy of the current quantization table.


"
3,JPEGQTable,4,void setTable(int[] table),False,,NULL
3,JPEGQTable,5,"JPEGQTable getScaledInstance(float scaleFactor, boolean forceBaseline)",True,,"

getScaledInstance
public JPEGQTable getScaledInstance(float scaleFactor,
                                    boolean forceBaseline)
Returns a new quantization table where the values are multiplied
 by scaleFactor and then clamped to the range 1..32767
 (or to 1..255 if forceBaseline is true).
 
 Values of scaleFactor less than 1 tend to improve
 the quality level of the table, and values greater than 1.0
 degrade the quality level of the table.

Parameters:
scaleFactor - multiplication factor for the table.
forceBaseline - if true,
 the values will be clamped to the range 1..255
Returns:
a new quantization table that is a linear multiple
 of the current table.


"
