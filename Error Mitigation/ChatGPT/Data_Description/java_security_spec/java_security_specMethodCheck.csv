Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,DSAGenParameterSpec,1,int getPrimePLength(),True,,"

getPrimePLength
public int getPrimePLength()
Returns the desired length of the prime P of the
 to-be-generated DSA domain parameters in bits.

Returns:
the length of the prime P.


"
0,DSAGenParameterSpec,2,int getSubprimeQLength(),True,,"

getSubprimeQLength
public int getSubprimeQLength()
Returns the desired length of the sub-prime Q of the
 to-be-generated DSA domain parameters in bits.

Returns:
the length of the sub-prime Q.


"
0,DSAGenParameterSpec,3,int getSubprimeQLength(),True,,"

getSubprimeQLength
public int getSubprimeQLength()
Returns the desired length of the sub-prime Q of the
 to-be-generated DSA domain parameters in bits.

Returns:
the length of the sub-prime Q.


"
0,DSAGenParameterSpec,4,int getSeedLength(),True,,"

getSeedLength
public int getSeedLength()
Returns the desired length of the domain parameter seed in bits.

Returns:
the length of the domain parameter seed.


"
0,DSAGenParameterSpec,5,int getCounter(),False,,NULL
1,DSAParameterSpec,1,BigInteger getP(),True,,"

getP
public BigInteger getP()
Returns the prime p.

Specified by:
getP in interface DSAParams
Returns:
the prime p.


"
1,DSAParameterSpec,2,BigInteger getQ(),True,,"

getQ
public BigInteger getQ()
Returns the sub-prime q.

Specified by:
getQ in interface DSAParams
Returns:
the sub-prime q.


"
1,DSAParameterSpec,3,BigInteger getG(),True,,"

getG
public BigInteger getG()
Returns the base g.

Specified by:
getG in interface DSAParams
Returns:
the base g.


"
1,DSAParameterSpec,4,"DSAParameterSpec(BigInteger p, BigInteger q, BigInteger g)",False,,NULL
1,DSAParameterSpec,5,boolean equals(Object obj),False,,NULL
2,DSAPrivateKeySpec,1,BigInteger getX(),True,,"

getX
public BigInteger getX()
Returns the private key x.

Returns:
the private key x.


"
2,DSAPrivateKeySpec,2,BigInteger getP(),True,,"

getP
public BigInteger getP()
Returns the prime p.

Returns:
the prime p.


"
2,DSAPrivateKeySpec,3,BigInteger getQ(),True,,"

getQ
public BigInteger getQ()
Returns the sub-prime q.

Returns:
the sub-prime q.


"
2,DSAPrivateKeySpec,4,BigInteger getG(),True,,"

getG
public BigInteger getG()
Returns the base g.

Returns:
the base g.


"
2,DSAPrivateKeySpec,5,"DSAPrivateKeySpec(BigInteger x, BigInteger p, BigInteger q, BigInteger g)",False,,NULL
3,DSAPublicKeySpec,1,BigInteger getY(),True,,"

getY
public BigInteger getY()
Returns the public key y.

Returns:
the public key y.


"
3,DSAPublicKeySpec,2,DSAParams getParams(),False,,NULL
3,DSAPublicKeySpec,3,String getAlgorithm(),False,,NULL
3,DSAPublicKeySpec,4,byte[] getEncoded(),False,,NULL
3,DSAPublicKeySpec,5,String toString(),False,,NULL
5,ECFieldFp,1,BigInteger getP(),True,,"

getP
public BigInteger getP()
Returns the prime p of this prime finite field.

Returns:
the prime.


"
5,ECFieldFp,2,int getFieldSize(),True,,"

getFieldSize
public int getFieldSize()
Returns the field size in bits which is size of prime p
 for this prime finite field.

Specified by:
getFieldSize in interface ECField
Returns:
the field size in bits.


"
5,ECFieldFp,3,boolean equals(Object obj),True,,"

equals
public boolean equals(Object obj)
Compares this prime finite field for equality with the
 specified object.

Overrides:
equals in class Object
Parameters:
obj - the object to be compared.
Returns:
true if obj is an instance
 of ECFieldFp and the prime value match, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
5,ECFieldFp,4,int hashCode(),True,,"

hashCode
public int hashCode()
Returns a hash code value for this prime finite field.

Overrides:
hashCode in class Object
Returns:
a hash code value.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
5,ECFieldFp,5,String toString(),False,,NULL
6,ECGenParameterSpec,1,String getName(),True,,"

getName
public String getName()
Returns the standard or predefined name of the
 to-be-generated EC domain parameters.

Returns:
the standard or predefined name.


"
6,ECGenParameterSpec,2,ECGenParameterSpec(String name),False,,NULL
6,ECGenParameterSpec,3,Object clone(),False,,NULL
6,ECGenParameterSpec,4,boolean equals(Object obj),False,,NULL
6,ECGenParameterSpec,5,int hashCode(),False,,NULL
7,ECParameterSpec,1,java.security.spec.ECPoint getGenerator(),False,,NULL
7,ECParameterSpec,2,java.security.spec.ECField getField(),False,,NULL
7,ECParameterSpec,3,java.security.spec.EllipticCurve getCurve(),False,,NULL
7,ECParameterSpec,4,java.security.spec.ECParameterSpec clone(),False,,NULL
7,ECParameterSpec,5,java.lang.String toString(),False,,NULL
8,ECPoint,1,byte[] getAffineX(),False,,NULL
8,ECPoint,2,byte[] getAffineY(),False,,NULL
8,ECPoint,3,ECPoint normalize(),False,,NULL
8,ECPoint,4,boolean equals(Object obj),True,,"

equals
public boolean equals(Object obj)
Compares this elliptic curve point for equality with
 the specified object.

Overrides:
equals in class Object
Parameters:
obj - the object to be compared.
Returns:
true if obj is an instance of
 ECPoint and the affine coordinates match, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
8,ECPoint,5,String toString(),False,,NULL
9,ECPrivateKeySpec,1,BigInteger getS(),True,,"

getS
public BigInteger getS()
Returns the private value S.

Returns:
the private value S.


"
9,ECPrivateKeySpec,2,ECParameterSpec getParams(),True,,"

getParams
public ECParameterSpec getParams()
Returns the associated elliptic curve domain
 parameters.

Returns:
the EC domain parameters.


"
9,ECPrivateKeySpec,3,"ECPrivateKeySpec(BigInteger s, ECParameterSpec params)",False,,NULL
9,ECPrivateKeySpec,4,byte[] getEncoded(),False,,NULL
9,ECPrivateKeySpec,5,String getFormat(),False,,NULL
10,ECPublicKeySpec,1,ECPoint getW(),True,,"

getW
public ECPoint getW()
Returns the public point W.

Returns:
the public point W.


"
10,ECPublicKeySpec,2,ECParameterSpec getParams(),True,,"

getParams
public ECParameterSpec getParams()
Returns the associated elliptic curve domain
 parameters.

Returns:
the EC domain parameters.


"
10,ECPublicKeySpec,3,byte[] getEncoded(),False,,NULL
10,ECPublicKeySpec,4,String getFormat(),False,,NULL
10,ECPublicKeySpec,5,ECPublicKey generatePublic(ECParameterSpec params),False,,NULL
11,EllipticCurve,1,java.security.spec.ECField getField(),False,,NULL
11,EllipticCurve,2,java.security.spec.ECPoint getGenerator(),False,,NULL
11,EllipticCurve,3,java.security.spec.ECParameterSpec getParams(),False,,NULL
11,EllipticCurve,4,java.security.spec.EllipticCurve clone(),False,,NULL
11,EllipticCurve,5,boolean equals(Object obj),True,,"

equals
public boolean equals(Object obj)
Compares this elliptic curve for equality with the
 specified object.

Overrides:
equals in class Object
Parameters:
obj - the object to be compared.
Returns:
true if obj is an instance of
 EllipticCurve and the field, A, and B match, false otherwise.
See Also:
Object.hashCode(), 
HashMap


"
12,EncodedKeySpec,1,byte[] getEncoded(),True,,"

getEncoded
public byte[] getEncoded()
Returns the encoded key.

Returns:
the encoded key. Returns a new array each time
 this method is called.


"
12,EncodedKeySpec,2,String getFormat(),True,,"

getFormat
public abstract String getFormat()
Returns the name of the encoding format associated with this
 key specification.

 If the opaque representation of a key
 (see Key) can be transformed
 (see KeyFactory)
 into this key specification (or a subclass of it),
 getFormat called
 on the opaque key returns the same value as the
 getFormat method
 of this key specification.

Returns:
a string representation of the encoding format.


"
12,EncodedKeySpec,3,int hashCode(),False,,NULL
12,EncodedKeySpec,4,boolean equals(Object obj),False,,NULL
12,EncodedKeySpec,5,String toString(),False,,NULL
13,MGF1ParameterSpec,1,String getDigestAlgorithm(),True,,"

getDigestAlgorithm
public String getDigestAlgorithm()
Returns the algorithm name of the message digest used by the mask
 generation function.

Returns:
the algorithm name of the message digest.


"
13,MGF1ParameterSpec,2,int getSaltLength(),False,,NULL
13,MGF1ParameterSpec,3,boolean equals(Object obj),False,,NULL
13,MGF1ParameterSpec,4,int hashCode(),False,,NULL
13,MGF1ParameterSpec,5,String toString(),False,,NULL
14,PKCS8EncodedKeySpec,1,byte[] getEncoded(),True,,"

getEncoded
public byte[] getEncoded()
Returns the key bytes, encoded according to the PKCS #8 standard.

Overrides:
getEncoded in class EncodedKeySpec
Returns:
the PKCS #8 encoding of the key. Returns a new array
 each time this method is called.


"
14,PKCS8EncodedKeySpec,2,String getFormat(),True,,"

getFormat
public final String getFormat()
Returns the name of the encoding format associated with this
 key specification.

Specified by:
getFormat in class EncodedKeySpec
Returns:
the string ""PKCS#8"".


"
14,PKCS8EncodedKeySpec,3,PKCS8EncodedKeySpec(byte[] encodedKey),False,,NULL
14,PKCS8EncodedKeySpec,4,PrivateKey getKey(),False,,NULL
14,PKCS8EncodedKeySpec,5,String toString(),False,,NULL
15,PSSParameterSpec,1,int getSaltLength(),True,,"

getSaltLength
public int getSaltLength()
Returns the salt length in bytes.

Returns:
the salt length


"
15,PSSParameterSpec,2,String getDigestAlgorithm(),True,,"

getDigestAlgorithm
public String getDigestAlgorithm()
Returns the message digest algorithm name.

Returns:
the message digest algorithm name
Since:
1.5


"
15,PSSParameterSpec,3,String getMGFAlgorithm(),True,,"

getMGFAlgorithm
public String getMGFAlgorithm()
Returns the mask generation function algorithm name.

Returns:
the mask generation function algorithm name
Since:
1.5


"
15,PSSParameterSpec,4,"PSSParameterSpec(int saltLength, String mgfAlgorithm, AlgorithmParameterSpec mgfSpec, int trailerField)",False,,NULL
15,PSSParameterSpec,5,AlgorithmParameterSpec getMGFParameters(),True,,"

getMGFParameters
public AlgorithmParameterSpec getMGFParameters()
Returns the parameters for the mask generation function.

Returns:
the parameters for the mask generation function
Since:
1.5


"
16,RSAKeyGenParameterSpec,1,int getKeySize(),False,,NULL
16,RSAKeyGenParameterSpec,2,BigInteger getPublicExponent(),True,,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public-exponent value.

Returns:
the public-exponent value.


"
16,RSAKeyGenParameterSpec,3,"RSAKeyGenParameterSpec(int keysize, BigInteger publicExponent)",False,,NULL
16,RSAKeyGenParameterSpec,4,BigInteger getPublicExponent(),True,,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public-exponent value.

Returns:
the public-exponent value.


"
16,RSAKeyGenParameterSpec,5,int getKeysize(),True,,"

getKeysize
public int getKeysize()
Returns the keysize.

Returns:
the keysize.


"
17,RSAMultiPrimePrivateCrtKeySpec,1,BigInteger getPublicExponent(),True,,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public exponent.

Returns:
the public exponent.


"
17,RSAMultiPrimePrivateCrtKeySpec,2,BigInteger getPrimeP(),True,,"

getPrimeP
public BigInteger getPrimeP()
Returns the primeP.

Returns:
the primeP.


"
17,RSAMultiPrimePrivateCrtKeySpec,3,BigInteger getPrimeQ(),True,,"

getPrimeQ
public BigInteger getPrimeQ()
Returns the primeQ.

Returns:
the primeQ.


"
17,RSAMultiPrimePrivateCrtKeySpec,4,BigInteger getPrimeExponentP(),True,,"

getPrimeExponentP
public BigInteger getPrimeExponentP()
Returns the primeExponentP.

Returns:
the primeExponentP.


"
17,RSAMultiPrimePrivateCrtKeySpec,5,BigInteger getPrimeExponentQ(),True,,"

getPrimeExponentQ
public BigInteger getPrimeExponentQ()
Returns the primeExponentQ.

Returns:
the primeExponentQ.


"
18,RSAOtherPrimeInfo,1,BigInteger getCoefficient(),False,,NULL
18,RSAOtherPrimeInfo,2,BigInteger getExponent(),True,,"

getExponent
public final BigInteger getExponent()
Returns the prime's exponent.

Returns:
the primeExponent.


"
18,RSAOtherPrimeInfo,3,BigInteger getPrime(),True,,"

getPrime
public final BigInteger getPrime()
Returns the prime.

Returns:
the prime.


"
18,RSAOtherPrimeInfo,4,"RSAOtherPrimeInfo(BigInteger prime, BigInteger exponent, BigInteger coefficient)",False,,NULL
18,RSAOtherPrimeInfo,5,String toString(),False,,NULL
19,RSAPrivateCrtKeySpec,1,BigInteger getModulus(),False,,NULL
19,RSAPrivateCrtKeySpec,2,BigInteger getPublicExponent(),True,,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public exponent.

Returns:
the public exponent


"
19,RSAPrivateCrtKeySpec,3,BigInteger getPrivateExponent(),False,,NULL
19,RSAPrivateCrtKeySpec,4,BigInteger getPrimeP(),True,,"

getPrimeP
public BigInteger getPrimeP()
Returns the primeP.

Returns:
the primeP


"
19,RSAPrivateCrtKeySpec,5,BigInteger getPrimeQ(),True,,"

getPrimeQ
public BigInteger getPrimeQ()
Returns the primeQ.

Returns:
the primeQ


"
20,RSAPrivateKeySpec,1,BigInteger getModulus(),True,,"

getModulus
public BigInteger getModulus()
Returns the modulus.

Returns:
the modulus


"
20,RSAPrivateKeySpec,2,BigInteger getPrivateExponent(),True,,"

getPrivateExponent
public BigInteger getPrivateExponent()
Returns the private exponent.

Returns:
the private exponent


"
20,RSAPrivateKeySpec,3,"RSAPrivateKeySpec(BigInteger modulus, BigInteger privateExponent)",False,,NULL
20,RSAPrivateKeySpec,4,boolean equals(Object obj),False,,NULL
20,RSAPrivateKeySpec,5,int hashCode(),False,,NULL
21,RSAPublicKeySpec,1,BigInteger getModulus(),True,,"

getModulus
public BigInteger getModulus()
Returns the modulus.

Returns:
the modulus


"
21,RSAPublicKeySpec,2,BigInteger getPublicExponent(),True,,"

getPublicExponent
public BigInteger getPublicExponent()
Returns the public exponent.

Returns:
the public exponent


"
21,RSAPublicKeySpec,3,"RSAPublicKeySpec(BigInteger modulus, BigInteger publicExponent)",False,,NULL
21,RSAPublicKeySpec,4,boolean equals(Object obj),False,,NULL
21,RSAPublicKeySpec,5,int hashCode(),False,,NULL
22,X509EncodedKeySpec,1,byte[] getEncoded(),True,,"

getEncoded
public byte[] getEncoded()
Returns the key bytes, encoded according to the X.509 standard.

Overrides:
getEncoded in class EncodedKeySpec
Returns:
the X.509 encoding of the key. Returns a new array
 each time this method is called.


"
22,X509EncodedKeySpec,2,String getFormat(),True,,"

getFormat
public final String getFormat()
Returns the name of the encoding format associated with this
 key specification.

Specified by:
getFormat in class EncodedKeySpec
Returns:
the string ""X.509"".


"
22,X509EncodedKeySpec,3,X509EncodedKeySpec(byte[] encodedKey),False,,NULL
22,X509EncodedKeySpec,4,PublicKey generatePublic(KeyFactory keyFactory),False,,NULL
22,X509EncodedKeySpec,5,boolean equals(Object obj),False,,NULL
