Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
1,MidiFileReader,1,Sequence getSequence(File file),True,,"

getSequence
public abstract Sequence getSequence(File file)
                              throws InvalidMidiDataException,
                                     IOException
Obtains a MIDI sequence from the File provided. The File
 must point to valid MIDI file data.

Parameters:
file - the File from which the Sequence should be
         constructed
Returns:
a Sequence object based on the MIDI file data pointed to
         by the File
Throws:
InvalidMidiDataException - if the File does not point to
         valid MIDI file data recognized by the system
IOException - if an I/O exception occurs


"
1,MidiFileReader,2,Sequence getSequence(InputStream stream),True,,"

getSequence
public abstract Sequence getSequence(InputStream stream)
                              throws InvalidMidiDataException,
                                     IOException
Obtains a MIDI sequence from the input stream provided. The stream must
 point to valid MIDI file data. In general, MIDI file readers may need to
 read some data from the stream before determining whether they support
 it. These parsers must be able to mark the stream, read enough data to
 determine whether they support the stream, and, if not, reset the
 stream's read pointer to its original position. If the input stream does
 not support this, this method may fail with an IOException.

Parameters:
stream - the input stream from which the Sequence should
         be constructed
Returns:
a Sequence object based on the MIDI file data contained
         in the input stream.
Throws:
InvalidMidiDataException - if the stream does not point to valid
         MIDI file data recognized by the system
IOException - if an I/O exception occurs
See Also:
InputStream.markSupported(), 
InputStream.mark(int)


"
1,MidiFileReader,3,Sequence getSequence(URL url),True,,"

getSequence
public abstract Sequence getSequence(URL url)
                              throws InvalidMidiDataException,
                                     IOException
Obtains a MIDI sequence from the URL provided. The URL must point to
 valid MIDI file data.

Parameters:
url - the URL for which the Sequence should be constructed
Returns:
a Sequence object based on the MIDI file data pointed to
         by the URL
Throws:
InvalidMidiDataException - if the URL does not point to valid MIDI
         file data recognized by the system
IOException - if an I/O exception occurs


"
1,MidiFileReader,4,int[] getMidiFileTypes(),False,,NULL
1,MidiFileReader,5,int[] getMidiFileTypes(Sequence sequence),False,,NULL
2,MidiFileWriter,1,int[] getMidiFileTypes(),True,,"

getMidiFileTypes
public abstract int[] getMidiFileTypes()
Obtains the set of MIDI file types for which file writing support is
 provided by this file writer.

Returns:
array of file types. If no file types are supported, an array of
         length 0 is returned.


"
2,MidiFileWriter,2,int[] getMidiFileTypes(Sequence sequence),True,,"

getMidiFileTypes
public abstract int[] getMidiFileTypes(Sequence sequence)
Obtains the file types that this file writer can write from the sequence
 specified.

Parameters:
sequence - the sequence for which MIDI file type support is
         queried
Returns:
array of file types. If no file types are supported, returns an
         array of length 0.


"
2,MidiFileWriter,3,"int[] getMidiFileTypes(Sequence sequence, int[] fileTypes)",False,,NULL
2,MidiFileWriter,4,"int write(Sequence in, int fileType, OutputStream out)",True,,"

write
public abstract int write(Sequence in,
                          int fileType,
                          OutputStream out)
                   throws IOException
Writes a stream of bytes representing a MIDI file of the file type
 indicated to the output stream provided.

Parameters:
in - sequence containing MIDI data to be written to the file
fileType - type of the file to be written to the output stream
out - stream to which the file data should be written
Returns:
the number of bytes written to the output stream
Throws:
IOException - if an I/O exception occurs
IllegalArgumentException - if the file type is not supported by
         this file writer
See Also:
isFileTypeSupported(int, Sequence), 
getMidiFileTypes(Sequence)


"
2,MidiFileWriter,5,"int write(Sequence in, int fileType, File file)",True,,"

write
public abstract int write(Sequence in,
                          int fileType,
                          File out)
                   throws IOException
Writes a stream of bytes representing a MIDI file of the file type
 indicated to the external file provided.

Parameters:
in - sequence containing MIDI data to be written to the external
         file
fileType - type of the file to be written to the external file
out - external file to which the file data should be written
Returns:
the number of bytes written to the file
Throws:
IOException - if an I/O exception occurs
IllegalArgumentException - if the file type is not supported by
         this file writer
See Also:
isFileTypeSupported(int, Sequence), 
getMidiFileTypes(Sequence)


"
3,SoundbankReader,1,Soundbank getSoundbank(URL url),True,,"

getSoundbank
public abstract Soundbank getSoundbank(URL url)
                                throws InvalidMidiDataException,
                                       IOException
Obtains a soundbank object from the URL provided.

Parameters:
url - URL representing the soundbank.
Returns:
soundbank object
Throws:
InvalidMidiDataException - if the URL does not point to valid MIDI
         soundbank data recognized by this soundbank reader
IOException - if an I/O error occurs


"
3,SoundbankReader,2,Soundbank getSoundbank(InputStream stream),True,,"

getSoundbank
public abstract Soundbank getSoundbank(InputStream stream)
                                throws InvalidMidiDataException,
                                       IOException
Obtains a soundbank object from the InputStream provided.

Parameters:
stream - InputStream representing the soundbank
Returns:
soundbank object
Throws:
InvalidMidiDataException - if the stream does not point to valid
         MIDI soundbank data recognized by this soundbank reader
IOException - if an I/O error occurs


"
3,SoundbankReader,3,Soundbank getSoundbank(File file),True,,"

getSoundbank
public abstract Soundbank getSoundbank(File file)
                                throws InvalidMidiDataException,
                                       IOException
Obtains a soundbank object from the File provided.

Parameters:
file - the File representing the soundbank
Returns:
soundbank object
Throws:
InvalidMidiDataException - if the file does not point to valid MIDI
         soundbank data recognized by this soundbank reader
IOException - if an I/O error occurs


"
3,SoundbankReader,4,"Soundbank getSoundbank(URL url, String name)",False,,NULL
3,SoundbankReader,5,"Soundbank getSoundbank(InputStream stream, String name)",False,,NULL
