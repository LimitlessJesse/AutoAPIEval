Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,BasicAttribute,1,void add(Attribute attr),False,,NULL
0,BasicAttribute,2,boolean remove(Attribute attr),False,,NULL
0,BasicAttribute,3,int size(),True,,"

size
public int size()
Description copied from interface: Attribute
Retrieves the number of values in this attribute.

Specified by:
size in interface Attribute
Returns:
The nonnegative number of values in this attribute.


"
0,BasicAttribute,4,Attribute get(int index),False,,NULL
0,BasicAttribute,5,boolean contains(Attribute attr),False,,NULL
1,BasicAttributes,1,"void put(String attrID, Object val)",False,,NULL
1,BasicAttributes,2,Object remove(String attrID),False,,NULL
1,BasicAttributes,3,boolean isCaseIgnored(),True,,"

isCaseIgnored
public boolean isCaseIgnored()
Description copied from interface: Attributes
Determines whether the attribute set ignores the case of
 attribute identifiers when retrieving or adding attributes.

Specified by:
isCaseIgnored in interface Attributes
Returns:
true if case is ignored; false otherwise.


"
1,BasicAttributes,4,NamingEnumeration<? extends Attribute> getAll(),False,,NULL
1,BasicAttributes,5,boolean containsKey(String attrID),False,,NULL
2,InitialDirContext,1,Attributes getAttributes(Name name),True,,"

getAttributes
public Attributes getAttributes(Name name)
                         throws NamingException
Description copied from interface: DirContext
Retrieves all of the attributes associated with a named object.
 See the class description regarding attribute models, attribute
 type names, and operational attributes.

Specified by:
getAttributes in interface DirContext
Parameters:
name - the name of the object from which to retrieve attributes
Returns:
the set of attributes associated with name.
          Returns an empty attribute set if name has no attributes;
          never null.
Throws:
NamingException - if a naming exception is encountered
See Also:
DirContext.getAttributes(String), 
DirContext.getAttributes(Name, String[])


"
2,InitialDirContext,2,"void bind(Name name, Object obj)",False,,NULL
2,InitialDirContext,3,"void rebind(Name name, Object obj)",False,,NULL
2,InitialDirContext,4,void unbind(Name name),False,,NULL
2,InitialDirContext,5,NamingEnumeration<NameClassPair> list(Name name),False,,NULL
3,ModificationItem,1,int getModificationOp(),True,,"

getModificationOp
public int getModificationOp()
Retrieves the modification code of this modification item.

Returns:
The modification code.  It is one of:
         DirContext.ADD_ATTRIBUTE
         DirContext.REPLACE_ATTRIBUTE
         DirContext.REMOVE_ATTRIBUTE


"
3,ModificationItem,2,Name getName(),False,,NULL
3,ModificationItem,3,Object getValue(),False,,NULL
3,ModificationItem,4,"ModificationItem(int mod_op, Name attr_name, Object attr_val)",False,,NULL
3,ModificationItem,5,void setValue(Object attr_val),False,,NULL
4,SearchControls,1,void setReturningAttributes(String[] attributes),True,,"

setReturningAttributes
public void setReturningAttributes(String[] attrs)
Specifies the attributes that will be returned as part of the search.

 null indicates that all attributes will be returned.
 An empty array indicates no attributes are returned.

Parameters:
attrs - An array of attribute ids identifying the attributes that
              will be returned. Can be null.
See Also:
getReturningAttributes()


"
4,SearchControls,2,void setReturningObjFlag(boolean returningObjFlag),True,,"

setReturningObjFlag
public void setReturningObjFlag(boolean on)
Enables/disables returning objects returned as part of the result.

 If disabled, only the name and class of the object is returned.
 If enabled, the object will be returned.

Parameters:
on - if true, objects will be returned; if false,
                  objects will not be returned.
See Also:
getReturningObjFlag()


"
4,SearchControls,3,void setSearchScope(int searchScope),True,,"

setSearchScope
public void setSearchScope(int scope)
Sets the search scope to one of:
 OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.

Parameters:
scope - The search scope of this SearchControls.
See Also:
getSearchScope()


"
4,SearchControls,4,void setTimeLimit(long ms),False,,NULL
4,SearchControls,5,void setDerefLinkFlag(boolean derefLinkFlag),True,,"

setDerefLinkFlag
public void setDerefLinkFlag(boolean on)
Enables/disables link dereferencing during the search.

Parameters:
on - if true links will be dereferenced; if false, not followed.
See Also:
getDerefLinkFlag()


"
5,SearchResult,1,Attributes getAttributes(),True,,"

getAttributes
public Attributes getAttributes()
Retrieves the attributes in this search result.

Returns:
The non-null attributes in this search result. Can be empty.
See Also:
setAttributes(javax.naming.directory.Attributes)


"
5,SearchResult,2,String getName(),False,,NULL
5,SearchResult,3,String getNameInNamespace(),False,,NULL
5,SearchResult,4,Object getObject(),False,,NULL
5,SearchResult,5,DirContext getDirContext(),False,,NULL
