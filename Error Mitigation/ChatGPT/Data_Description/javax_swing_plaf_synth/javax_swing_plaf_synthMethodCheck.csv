Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,ColorType,1,Color getColor(),False,,NULL
0,ColorType,2,void setColor(Color color),False,,NULL
0,ColorType,3,String toString(),True,,"

toString
public String toString()
Returns the textual description of this ColorType.
 This is the same value that the ColorType was created
 with.

Overrides:
toString in class Object
Returns:
the description of the string


"
0,ColorType,4,boolean isOpaque(),False,,NULL
0,ColorType,5,boolean isSystemColor(),False,,NULL
1,Region,1,javax.swing.plaf.synth.Region getParent(),False,,NULL
1,Region,2,"javax.swing.plaf.synth.SynthStyle getStyle(javax.swing.JComponent c, javax.swing.plaf.synth.SynthStyle style)",False,,NULL
1,Region,3,javax.swing.plaf.synth.Region getRegion(javax.swing.JComponent c),False,,NULL
1,Region,4,javax.swing.plaf.synth.Region[] values(),False,,NULL
1,Region,5,boolean isSubregionOf(javax.swing.plaf.synth.Region region),False,,NULL
2,SynthButtonUI,1,SynthButtonUI createUI(JComponent c),False,,NULL
2,SynthButtonUI,2,void installUI(JComponent c),False,,NULL
2,SynthButtonUI,3,void uninstallUI(JComponent c),False,,NULL
2,SynthButtonUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
2,SynthButtonUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
3,SynthCheckBoxMenuItemUI,1,void installUI(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,2,void uninstallUI(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,3,SynthContext getContext(JComponent c),False,,NULL
3,SynthCheckBoxMenuItemUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
3,SynthCheckBoxMenuItemUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthMenuItemUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
4,SynthCheckBoxUI,1,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
4,SynthCheckBoxUI,2,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthRadioButtonUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
4,SynthCheckBoxUI,3,"void paintFocus(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
4,SynthCheckBoxUI,4,"void paintIcon(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
4,SynthCheckBoxUI,5,"void paintText(SynthContext context, Graphics g, String text, int x, int y, int w, int h)",False,,NULL
5,SynthColorChooserUI,1,void installUI(JComponent c),False,,NULL
5,SynthColorChooserUI,2,void uninstallUI(JComponent c),False,,NULL
5,SynthColorChooserUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
5,SynthColorChooserUI,4,"Color getColor(JComponent c, ColorType type)",False,,NULL
5,SynthColorChooserUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
6,SynthComboBoxUI,1,void installUI(JComponent c),True,,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

 Overridden to ensure that ButtonHandler is created prior to any of
 the other installXXX methods, since several of them reference
 buttonHandler.

Overrides:
installUI in class BasicComboBoxUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
6,SynthComboBoxUI,2,void uninstallUI(JComponent c),True,,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicComboBoxUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
6,SynthComboBoxUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
6,SynthComboBoxUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicComboBoxUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
6,SynthComboBoxUI,5,"void update(Graphics g, JComponent c)",True,,"

update
public void update(Graphics g,
                   JComponent c)
Notifies this UI delegate to repaint the specified component.
 This method paints the component background, then calls
 the paint(SynthContext,Graphics) method.

 In general, this method does not need to be overridden by subclasses.
 All Look and Feel rendering code should reside in the paint method.

Overrides:
update in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
7,SynthContext,1,SynthStyle getStyle(),True,,"

getStyle
public SynthStyle getStyle()
Returns the style associated with this Region.

Returns:
SynthStyle associated with the region.


"
7,SynthContext,2,Component getComponent(),False,,NULL
7,SynthContext,3,Region getRegion(),True,,"

getRegion
public Region getRegion()
Returns the Region identifying this state.

Returns:
Region of the hosting component


"
7,SynthContext,4,int getComponentState(),True,,"

getComponentState
public int getComponentState()
Returns the state of the widget, which is a bitmask of the
 values defined in SynthConstants. A region will at least
 be in one of
 ENABLED, MOUSE_OVER, PRESSED
 or DISABLED.

Returns:
State of Component
See Also:
SynthConstants


"
7,SynthContext,5,int getComponentType(),False,,NULL
8,SynthDesktopIconUI,1,"void paintIcon(Graphics g, JComponent c, Rectangle iconBounds, Icon icon)",False,,NULL
8,SynthDesktopIconUI,2,Dimension getPreferredSize(JComponent c),False,,NULL
8,SynthDesktopIconUI,3,void installDefaults(),True,,"

installDefaults
protected void installDefaults()

Overrides:
installDefaults in class BasicDesktopIconUI


"
8,SynthDesktopIconUI,4,void uninstallDefaults(),True,,"

uninstallDefaults
protected void uninstallDefaults()

Overrides:
uninstallDefaults in class BasicDesktopIconUI


"
8,SynthDesktopIconUI,5,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
9,SynthDesktopPaneUI,1,void installUI(JComponent c),False,,NULL
9,SynthDesktopPaneUI,2,void uninstallUI(JComponent c),False,,NULL
9,SynthDesktopPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
9,SynthDesktopPaneUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicDesktopPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
9,SynthDesktopPaneUI,5,SynthDesktopPaneUI createUI(JComponent c),False,,NULL
10,SynthEditorPaneUI,1,void installUI(JComponent c),False,,NULL
10,SynthEditorPaneUI,2,void uninstallUI(JComponent c),False,,NULL
10,SynthEditorPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
10,SynthEditorPaneUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
10,SynthEditorPaneUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,1,void installUI(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,2,void uninstallUI(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,3,SynthContext getContext(JComponent c),False,,NULL
11,SynthFormattedTextFieldUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
11,SynthFormattedTextFieldUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
13,SynthInternalFrameUI,1,void installUI(JComponent c),False,,NULL
13,SynthInternalFrameUI,2,void uninstallUI(JComponent c),False,,NULL
13,SynthInternalFrameUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
13,SynthInternalFrameUI,4,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
13,SynthInternalFrameUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
14,SynthLabelUI,1,void installUI(JComponent c),False,,NULL
14,SynthLabelUI,2,void uninstallUI(JComponent c),False,,NULL
14,SynthLabelUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
14,SynthLabelUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicLabelUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
14,SynthLabelUI,5,Dimension getPreferredSize(JComponent c),True,,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicLabelUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
15,SynthListUI,1,void installUI(JComponent c),False,,NULL
15,SynthListUI,2,void uninstallUI(JComponent c),False,,NULL
15,SynthListUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
15,SynthListUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
15,SynthListUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
16,SynthLookAndFeel,1,"void load(InputStream input, Class<?> resourceType)",True,,"

load
public void load(InputStream input,
                 Class<?> resourceBase)
          throws ParseException
Loads the set of SynthStyles that will be used by
 this SynthLookAndFeel. resourceBase is
 used to resolve any path based resources, for example an
 Image would be resolved by
 resourceBase.getResource(path). Refer to
 Synth File Format
 for more information.

Parameters:
input - InputStream to load from
resourceBase - used to resolve any images or other resources
Throws:
ParseException - if there is an error in parsing
IllegalArgumentException - if input or resourceBase is null


"
16,SynthLookAndFeel,2,void apply(SynthContext context),False,,NULL
16,SynthLookAndFeel,3,"SynthStyle getStyle(JComponent c, Region id)",True,,"

getStyle
public static SynthStyle getStyle(JComponent c,
                                  Region region)
Gets a SynthStyle for the specified region of the specified component.
 This is not for general consumption, only custom UIs should call this
 method.

Parameters:
c - JComponent to get the SynthStyle for
region - Identifies the region of the specified component
Returns:
SynthStyle to use.


"
16,SynthLookAndFeel,4,void unload(JComponent c),False,,NULL
16,SynthLookAndFeel,5,void initialize(),True,,"

initialize
public void initialize()
Called by UIManager when this look and feel is installed.

Overrides:
initialize in class BasicLookAndFeel
See Also:
LookAndFeel.uninitialize(), 
UIManager.setLookAndFeel(javax.swing.LookAndFeel)


"
17,SynthMenuBarUI,1,void installUI(JComponent c),False,,NULL
17,SynthMenuBarUI,2,void uninstallUI(JComponent c),False,,NULL
17,SynthMenuBarUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
17,SynthMenuBarUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
17,SynthMenuBarUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
18,SynthMenuItemUI,1,void installDefaults(JMenuItem menuItem),False,,NULL
18,SynthMenuItemUI,2,void uninstallDefaults(JMenuItem menuItem),False,,NULL
18,SynthMenuItemUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
18,SynthMenuItemUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
18,SynthMenuItemUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
19,SynthMenuUI,1,void installUI(JComponent c),False,,NULL
19,SynthMenuUI,2,void uninstallUI(JComponent c),True,,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicMenuItemUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
19,SynthMenuUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
19,SynthMenuUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
19,SynthMenuUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
20,SynthOptionPaneUI,1,void installUI(JComponent c),False,,NULL
20,SynthOptionPaneUI,2,void uninstallUI(JComponent c),False,,NULL
20,SynthOptionPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
20,SynthOptionPaneUI,4,void optionPanePropertyChange(PropertyChangeEvent e),False,,NULL
20,SynthOptionPaneUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
21,SynthPainter,1,"void paint(SynthContext context, Graphics g, int state)",False,,NULL
21,SynthPainter,2,"void paintBorder(SynthContext context, Graphics g, int state)",False,,NULL
21,SynthPainter,3,"void paintBackground(SynthContext context, Graphics g, int state)",False,,NULL
21,SynthPainter,4,"void paintText(SynthContext context, Graphics g, String text, int state)",False,,NULL
21,SynthPainter,5,"void paintIcon(SynthContext context, Graphics g, int iconIndex, int state)",False,,NULL
22,SynthPanelUI,1,SynthPanelUI createUI(JComponent c),False,,NULL
22,SynthPanelUI,2,void installUI(JComponent c),True,,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class BasicPanelUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
22,SynthPanelUI,3,void uninstallUI(JComponent c),True,,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class BasicPanelUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
22,SynthPanelUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
22,SynthPanelUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
23,SynthPasswordFieldUI,1,void installUI(JComponent c),False,,NULL
23,SynthPasswordFieldUI,2,void uninstallUI(JComponent c),False,,NULL
23,SynthPasswordFieldUI,3,SynthContext getContext(JComponent c),False,,NULL
23,SynthPasswordFieldUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
23,SynthPasswordFieldUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthTextFieldUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
24,SynthPopupMenuUI,1,void installUI(JComponent c),False,,NULL
24,SynthPopupMenuUI,2,void uninstallUI(JComponent c),False,,NULL
24,SynthPopupMenuUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
24,SynthPopupMenuUI,4,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
24,SynthPopupMenuUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
25,SynthProgressBarUI,1,"void paintDeterminate(Graphics g, JComponent c)",False,,NULL
25,SynthProgressBarUI,2,"void paintIndeterminate(Graphics g, JComponent c)",False,,NULL
25,SynthProgressBarUI,3,void setIndeterminate(boolean newValue),False,,NULL
25,SynthProgressBarUI,4,void setStringPainted(boolean b),False,,NULL
25,SynthProgressBarUI,5,void setString(String s),False,,NULL
26,SynthRadioButtonMenuItemUI,1,void installDefaults(JRadioButtonMenuItem menuItem),False,,NULL
26,SynthRadioButtonMenuItemUI,2,SynthContext getContext(JComponent c),False,,NULL
26,SynthRadioButtonMenuItemUI,3,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
26,SynthRadioButtonMenuItemUI,4,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Overrides:
paintBorder in class SynthMenuItemUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
26,SynthRadioButtonMenuItemUI,5,"void paintIcon(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
27,SynthRadioButtonUI,1,void installDefaults(AbstractButton b),False,,NULL
27,SynthRadioButtonUI,2,void uninstallDefaults(AbstractButton b),False,,NULL
27,SynthRadioButtonUI,3,SynthContext getContext(JComponent c),False,,NULL
27,SynthRadioButtonUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
27,SynthRadioButtonUI,5,"void paintForeground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
28,SynthRootPaneUI,1,void installUI(JComponent c),False,,NULL
28,SynthRootPaneUI,2,void uninstallUI(JComponent c),False,,NULL
28,SynthRootPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
28,SynthRootPaneUI,4,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
28,SynthRootPaneUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
29,SynthScrollBarUI,1,"void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds)",False,,NULL
29,SynthScrollBarUI,2,"void paintTrack(Graphics g, JComponent c, Rectangle trackBounds)",False,,NULL
29,SynthScrollBarUI,3,void paintDecreaseHighlight(Graphics g),False,,NULL
29,SynthScrollBarUI,4,void paintIncreaseHighlight(Graphics g),False,,NULL
29,SynthScrollBarUI,5,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicScrollBarUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
30,SynthScrollPaneUI,1,void installUI(JComponent c),False,,NULL
30,SynthScrollPaneUI,2,void uninstallUI(JComponent c),False,,NULL
30,SynthScrollPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
30,SynthScrollPaneUI,4,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
30,SynthScrollPaneUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
31,SynthSeparatorUI,1,void installUI(JComponent c),True,,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class ComponentUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
31,SynthSeparatorUI,2,void uninstallUI(JComponent c),True,,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class ComponentUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
31,SynthSeparatorUI,3,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
31,SynthSeparatorUI,4,Dimension getPreferredSize(JComponent c),True,,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class ComponentUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
31,SynthSeparatorUI,5,Dimension getMinimumSize(JComponent c),True,,"

getMinimumSize
public Dimension getMinimumSize(JComponent c)
Returns the specified component's minimum size appropriate for
 the look and feel.  If null is returned, the minimum
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method invokes getPreferredSize and returns that value.

Overrides:
getMinimumSize in class ComponentUI
Parameters:
c - the component whose minimum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a Dimension object or null
See Also:
JComponent.getMinimumSize(), 
LayoutManager.minimumLayoutSize(java.awt.Container), 
ComponentUI.getPreferredSize(javax.swing.JComponent)


"
32,SynthSliderUI,1,"void setThumbLocation(int x, int y)",True,,"

setThumbLocation
public void setThumbLocation(int x,
                             int y)

Overrides:
setThumbLocation in class BasicSliderUI


"
32,SynthSliderUI,2,"void setThumbSize(int width, int height)",False,,NULL
32,SynthSliderUI,3,"void setTrackBounds(int x, int y, int width, int height)",False,,NULL
32,SynthSliderUI,4,void setTickRect(Rectangle tickRect),False,,NULL
32,SynthSliderUI,5,void setThumbActive(boolean active),False,,NULL
33,SynthSpinnerUI,1,void installUI(JComponent c),False,,NULL
33,SynthSpinnerUI,2,void uninstallUI(JComponent c),False,,NULL
33,SynthSpinnerUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
33,SynthSpinnerUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
33,SynthSpinnerUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
34,SynthSplitPaneUI,1,void installUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,2,void uninstallUI(JComponent c),False,,NULL
34,SynthSplitPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
34,SynthSplitPaneUI,4,BasicSplitPaneDivider createDefaultDivider(),True,,"

createDefaultDivider
public BasicSplitPaneDivider createDefaultDivider()
Creates the default divider.

Overrides:
createDefaultDivider in class BasicSplitPaneUI


"
34,SynthSplitPaneUI,5,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicSplitPaneUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
35,SynthStyle,1,SynthPainter getPainter(),False,,NULL
35,SynthStyle,2,void setFont(Font font),False,,NULL
35,SynthStyle,3,"Color getColor(SynthContext context, ColorType type)",True,,"

getColor
public Color getColor(SynthContext context,
                      ColorType type)
Returns the color for the specified state. This gives precedence to
 foreground and background of the JComponent. If the
 Color from the JComponent is not appropriate,
 or not used, this will invoke getColorForState. Subclasses
 should generally not have to override this, instead override
 getColorForState(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.ColorType).

Parameters:
context - SynthContext identifying requester
type - Type of color being requested.
Returns:
Color


"
35,SynthStyle,4,"Insets getInsets(SynthContext context, Insets insets)",True,,"

getInsets
public Insets getInsets(SynthContext context,
                        Insets insets)
Returns the Insets that are used to calculate sizing information.

Parameters:
context - SynthContext identifying requester
insets - Insets to place return value in.
Returns:
Sizing Insets.


"
35,SynthStyle,5,"void set(String key, Object value)",False,,NULL
36,SynthStyleFactory,1,SynthStyle getStyle(SynthContext context),False,,NULL
36,SynthStyleFactory,2,"SynthStyle getStyle(SynthContext context, Region region)",False,,NULL
36,SynthStyleFactory,3,"SynthStyle getStyle(SynthContext context, Region region, int state)",False,,NULL
36,SynthStyleFactory,4,"SynthStyle getStyle(SynthContext context, Region region, int state, int direction)",False,,NULL
36,SynthStyleFactory,5,"SynthStyle getStyle(SynthContext context, SynthStyle style, Region region, int state)",False,,NULL
37,SynthTabbedPaneUI,1,void installUI(JComponent c),False,,NULL
37,SynthTabbedPaneUI,2,void uninstallUI(JComponent c),False,,NULL
37,SynthTabbedPaneUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
37,SynthTabbedPaneUI,4,SynthStyle getStyle(JComponent c),False,,NULL
37,SynthTabbedPaneUI,5,"void paintTabBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
38,SynthTableHeaderUI,1,void installUI(JComponent c),False,,NULL
38,SynthTableHeaderUI,2,void uninstallUI(JComponent c),False,,NULL
38,SynthTableHeaderUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
38,SynthTableHeaderUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTableHeaderUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
38,SynthTableHeaderUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
39,SynthTableUI,1,void installUI(JComponent c),False,,NULL
39,SynthTableUI,2,void uninstallUI(JComponent c),False,,NULL
39,SynthTableUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
39,SynthTableUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTableUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
39,SynthTableUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
40,SynthTextAreaUI,1,void installUI(JComponent c),False,,NULL
40,SynthTextAreaUI,2,void uninstallUI(JComponent c),False,,NULL
40,SynthTextAreaUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
40,SynthTextAreaUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
40,SynthTextAreaUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
41,SynthTextFieldUI,1,void installUI(JComponent c),False,,NULL
41,SynthTextFieldUI,2,void uninstallUI(JComponent c),False,,NULL
41,SynthTextFieldUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
41,SynthTextFieldUI,4,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
41,SynthTextFieldUI,5,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
42,SynthTextPaneUI,1,void installUI(JComponent c),True,,"

installUI
public void installUI(JComponent c)
Installs the UI for a component.  This does the following
 things.
 

 Sets opaqueness of the associated component according to its style,
 if the opaque property has not already been set by the client program.
 
 Installs the default caret and highlighter into the
 associated component. These properties are only set if their
 current value is either null or an instance of
 UIResource.
 
 Attaches to the editor and model.  If there is no
 model, a default one is created.
 
 Creates the view factory and the view hierarchy used
 to represent the model.
 

Overrides:
installUI in class BasicEditorPaneUI
Parameters:
c - the editor component
See Also:
BasicTextUI.installUI(javax.swing.JComponent), 
ComponentUI.installUI(javax.swing.JComponent)


"
42,SynthTextPaneUI,2,void uninstallUI(JComponent c),False,,NULL
42,SynthTextPaneUI,3,SynthContext getContext(JComponent c),False,,NULL
42,SynthTextPaneUI,4,"void paint(Graphics g, JComponent c)",False,,NULL
42,SynthTextPaneUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
43,SynthToggleButtonUI,1,"void setIcon(JToggleButton button, Icon icon)",False,,NULL
43,SynthToggleButtonUI,2,Icon getIcon(JToggleButton button),False,,NULL
43,SynthToggleButtonUI,3,"void setPressedIcon(JToggleButton button, Icon icon)",False,,NULL
43,SynthToggleButtonUI,4,Icon getPressedIcon(JToggleButton button),False,,NULL
43,SynthToggleButtonUI,5,"void setRolloverIcon(JToggleButton button, Icon icon)",False,,NULL
44,SynthToolBarUI,1,void installUI(JComponent c),False,,NULL
44,SynthToolBarUI,2,void uninstallUI(JComponent c),False,,NULL
44,SynthToolBarUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
44,SynthToolBarUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class ComponentUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
44,SynthToolBarUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
45,SynthToolTipUI,1,void installUI(JComponent c),False,,NULL
45,SynthToolTipUI,2,void uninstallUI(JComponent c),False,,NULL
45,SynthToolTipUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
45,SynthToolTipUI,4,Dimension getPreferredSize(JComponent c),True,,"

getPreferredSize
public Dimension getPreferredSize(JComponent c)
Returns the specified component's preferred size appropriate for
 the look and feel.  If null is returned, the preferred
 size will be calculated by the component's layout manager instead
 (this is the preferred approach for any component with a specific
 layout manager installed).  The default implementation of this
 method returns null.

Overrides:
getPreferredSize in class BasicToolTipUI
Parameters:
c - the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
JComponent.getPreferredSize(), 
LayoutManager.preferredLayoutSize(java.awt.Container)


"
45,SynthToolTipUI,5,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicToolTipUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
46,SynthTreeUI,1,void installUI(JComponent c),False,,NULL
46,SynthTreeUI,2,void uninstallUI(JComponent c),False,,NULL
46,SynthTreeUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
46,SynthTreeUI,4,"void paint(Graphics g, JComponent c)",True,,"

paint
public void paint(Graphics g,
                  JComponent c)
Paints the specified component according to the Look and Feel.
 This method is not used by Synth Look and Feel.
 Painting is handled by the paint(SynthContext,Graphics) method.

Overrides:
paint in class BasicTreeUI
Parameters:
g - the Graphics object used for painting
c - the component being painted
See Also:
paint(SynthContext,Graphics)


"
46,SynthTreeUI,5,Dimension getPreferredSize(JComponent c),False,,NULL
47,SynthViewportUI,1,void installUI(JComponent c),True,,"

installUI
public void installUI(JComponent c)
Configures the specified component appropriately for the look and feel.
 This method is invoked when the ComponentUI instance is being installed
 as the UI delegate on the specified component.  This method should
 completely configure the component for the look and feel,
 including the following:
 
Install default property values for color, fonts, borders,
     icons, opacity, etc. on the component.  Whenever possible,
     property values initialized by the client program should not
     be overridden.
 Install a LayoutManager on the component if necessary.
 Create/add any required sub-components to the component.
 Create/install event listeners on the component.
 Create/install a PropertyChangeListener on the component in order
     to detect and respond to component property changes appropriately.
 Install keyboard UI (mnemonics, traversal, etc.) on the component.
 Initialize any appropriate instance data.
 

Overrides:
installUI in class ComponentUI
Parameters:
c - the component where this UI delegate is being installed
See Also:
ComponentUI.uninstallUI(javax.swing.JComponent), 
JComponent.setUI(javax.swing.plaf.ComponentUI), 
JComponent.updateUI()


"
47,SynthViewportUI,2,void uninstallUI(JComponent c),True,,"

uninstallUI
public void uninstallUI(JComponent c)
Reverses configuration which was done on the specified component during
 installUI.  This method is invoked when this
 UIComponent instance is being removed as the UI delegate
 for the specified component.  This method should undo the
 configuration performed in installUI, being careful to
 leave the JComponent instance in a clean state (no
 extraneous listeners, look-and-feel-specific property objects, etc.).
 This should include the following:
 
Remove any UI-set borders from the component.
 Remove any UI-set layout managers on the component.
 Remove any UI-added sub-components from the component.
 Remove any UI-added event/property listeners from the component.
 Remove any UI-installed keyboard UI from the component.
 Nullify any allocated instance data objects to allow for GC.
 

Overrides:
uninstallUI in class ComponentUI
Parameters:
c - the component from which this UI delegate is being removed;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.installUI(javax.swing.JComponent), 
JComponent.updateUI()


"
47,SynthViewportUI,3,SynthContext getContext(JComponent c),True,,"

getContext
public SynthContext getContext(JComponent c)
Returns the Context for the specified component.

Specified by:
getContext in interface SynthUI
Parameters:
c - Component requesting SynthContext.
Returns:
SynthContext describing component.


"
47,SynthViewportUI,4,"void paintBorder(SynthContext context, Graphics g, int x, int y, int w, int h)",True,,"

paintBorder
public void paintBorder(SynthContext context,
                        Graphics g,
                        int x,
                        int y,
                        int w,
                        int h)
Paints the border. The method is never called,
 because the JViewport class does not support a border.
 This implementation does nothing.

Specified by:
paintBorder in interface SynthUI
Parameters:
context - a component context
g - the Graphics to paint on
x - the X coordinate
y - the Y coordinate
w - width of the border
h - height of the border


"
47,SynthViewportUI,5,"void paintBackground(SynthContext context, Graphics g, int x, int y, int w, int h)",False,,NULL
