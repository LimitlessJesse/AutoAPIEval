ClassName,Method,Return Type,Description,Full Description
AclEntry,equals(Object ob),boolean,Compares the specified object with this ACL entry for equality.,"

equals
public boolean equals(Object ob)
Compares the specified object with this ACL entry for equality.

  If the given object is not an AclEntry then this method
 immediately returns false.

  For two ACL entries to be considered equals requires that they are
 both the same type, their who components are equal, their permissions
 components are equal, and their flags components are equal.

  This method satisfies the general contract of the Object.equals method. 

Overrides:
equals in class Object
Parameters:
ob - the object to which this object is to be compared
Returns:
true if, and only if, the given object is an AclEntry that
          is identical to this AclEntry
See Also:
Object.hashCode(), 
HashMap


"
AclEntry,flags(),Set<AclEntryFlag>,Returns a copy of the flags component.,"

flags
public Set<AclEntryFlag> flags()
Returns a copy of the flags component.

  The returned set is a modifiable copy of the flags.

Returns:
the flags component


"
AclEntry,hashCode(),int,Returns the hash-code value for this ACL entry.,"

hashCode
public int hashCode()
Returns the hash-code value for this ACL entry.

  This method satisfies the general contract of the Object.hashCode() method.

Overrides:
hashCode in class Object
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
AclEntry,newBuilder(),static AclEntry.Builder,Constructs a new builder.,"

newBuilder
public static AclEntry.Builder newBuilder()
Constructs a new builder. The initial value of the type and who
 components is null. The initial value of the permissions and
 flags components is the empty set.

Returns:
a new builder


"
AclEntry,newBuilder(AclEntry entry),static AclEntry.Builder,Constructs a new builder with the components of an existing ACL entry.,"

newBuilder
public static AclEntry.Builder newBuilder(AclEntry entry)
Constructs a new builder with the components of an existing ACL entry.

Parameters:
entry - an ACL entry
Returns:
a new builder


"
AclEntry,permissions(),Set<AclEntryPermission>,Returns a copy of the permissions component.,"

permissions
public Set<AclEntryPermission> permissions()
Returns a copy of the permissions component.

  The returned set is a modifiable copy of the permissions.

Returns:
the permissions component


"
AclEntry,principal(),UserPrincipal,Returns the principal component.,"

principal
public UserPrincipal principal()
Returns the principal component.

Returns:
the principal component


"
AclEntry,toString(),String,Returns the string representation of this ACL entry.,"

toString
public String toString()
Returns the string representation of this ACL entry.

Overrides:
toString in class Object
Returns:
the string representation of this entry


"
AclEntry,type(),AclEntryType,Returns the ACL entry type.,"

type
public AclEntryType type()
Returns the ACL entry type.

Returns:
the ACL entry type


"
AclEntry.Builder,build(),AclEntry,Constructs an AclEntry from the components of this builder.,"

build
public AclEntry build()
Constructs an AclEntry from the components of this builder.
 The type and who components are required to have been set in order
 to construct an AclEntry.

Returns:
a new ACL entry
Throws:
IllegalStateException - if the type or who component have not been set


"
AclEntry.Builder,setFlags(AclEntryFlag... flags),AclEntry.Builder,Sets the flags component of this builder.,"

setFlags
public AclEntry.Builder setFlags(AclEntryFlag... flags)
Sets the flags component of this builder. On return, the flags
 component of this builder is a copy of the flags in the given
 array.

Parameters:
flags - the flags component
Returns:
this builder


"
AclEntry.Builder,setFlags(Set<AclEntryFlag> flags),AclEntry.Builder,Sets the flags component of this builder.,"

setFlags
public AclEntry.Builder setFlags(Set<AclEntryFlag> flags)
Sets the flags component of this builder. On return, the flags
 component of this builder is a copy of the given set.

Parameters:
flags - the flags component
Returns:
this builder
Throws:
ClassCastException - if the set contains elements that are not of type AclEntryFlag


"
AclEntry.Builder,setPermissions(AclEntryPermission... perms),AclEntry.Builder,Sets the permissions component of this builder.,"

setPermissions
public AclEntry.Builder setPermissions(AclEntryPermission... perms)
Sets the permissions component of this builder. On return, the
 permissions component of this builder is a copy of the permissions in
 the given array.

Parameters:
perms - the permissions component
Returns:
this builder


"
AclEntry.Builder,setPermissions(Set<AclEntryPermission> perms),AclEntry.Builder,Sets the permissions component of this builder.,"

setPermissions
public AclEntry.Builder setPermissions(Set<AclEntryPermission> perms)
Sets the permissions component of this builder. On return, the
 permissions component of this builder is a copy of the given set.

Parameters:
perms - the permissions component
Returns:
this builder
Throws:
ClassCastException - if the set contains elements that are not of type AclEntryPermission


"
AclEntry.Builder,setPrincipal(UserPrincipal who),AclEntry.Builder,Sets the principal component of this builder.,"

setPrincipal
public AclEntry.Builder setPrincipal(UserPrincipal who)
Sets the principal component of this builder.

Parameters:
who - the principal component
Returns:
this builder


"
AclEntry.Builder,setType(AclEntryType type),AclEntry.Builder,Sets the type component of this builder.,"

setType
public AclEntry.Builder setType(AclEntryType type)
Sets the type component of this builder.

Parameters:
type - the component type
Returns:
this builder


"
FileTime,compareTo(FileTime other),int,Compares the value of two FileTime objects for order.,"

compareTo
public int compareTo(FileTime other)
Compares the value of two FileTime objects for order.

Specified by:
compareTo in interface Comparable<FileTime>
Parameters:
other - the other FileTime to be compared
Returns:
0 if this FileTime is equal to other, a
          value less than 0 if this FileTime represents a time
          that is before other, and a value greater than 0 if this
          FileTime represents a time that is after other


"
FileTime,equals(Object obj),boolean,Tests this FileTime for equality with the given object.,"

equals
public boolean equals(Object obj)
Tests this FileTime for equality with the given object.

  The result is true if and only if the argument is not null and is a FileTime that represents the same time. This
 method satisfies the general contract of the Object.equals method.

Overrides:
equals in class Object
Parameters:
obj - the object to compare with
Returns:
true if, and only if, the given object is a FileTime that represents the same time
See Also:
Object.hashCode(), 
HashMap


"
FileTime,from(Instant instant),static FileTime,Returns a FileTime representing the same point of time value on the time-line as the provided Instant object.,"

from
public static FileTime from(Instant instant)
Returns a FileTime representing the same point of time value
 on the time-line as the provided Instant object.

Parameters:
instant - the instant to convert
Returns:
a FileTime representing the same point on the time-line
          as the provided instant
Since:
1.8


"
FileTime,"from(long value, TimeUnit unit)",static FileTime,Returns a FileTime representing a value at the given unit of granularity.,"

from
public static FileTime from(long value,
                            TimeUnit unit)
Returns a FileTime representing a value at the given unit of
 granularity.

Parameters:
value - the value since the epoch (1970-01-01T00:00:00Z); can be
          negative
unit - the unit of granularity to interpret the value
Returns:
a FileTime representing the given value


"
FileTime,fromMillis(long value),static FileTime,Returns a FileTime representing the given value in milliseconds.,"

fromMillis
public static FileTime fromMillis(long value)
Returns a FileTime representing the given value in milliseconds.

Parameters:
value - the value, in milliseconds, since the epoch
          (1970-01-01T00:00:00Z); can be negative
Returns:
a FileTime representing the given value


"
FileTime,hashCode(),int,Computes a hash code for this file time.,"

hashCode
public int hashCode()
Computes a hash code for this file time.

  The hash code is based upon the value represented, and satisfies the
 general contract of the Object.hashCode() method.

Overrides:
hashCode in class Object
Returns:
the hash-code value
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
FileTime,to(TimeUnit unit),long,Returns the value at the given unit of granularity.,"

to
public long to(TimeUnit unit)
Returns the value at the given unit of granularity.

  Conversion from a coarser granularity that would numerically overflow
 saturate to Long.MIN_VALUE if negative or Long.MAX_VALUE
 if positive.

Parameters:
unit - the unit of granularity for the return value
Returns:
value in the given unit of granularity, since the epoch
          since the epoch (1970-01-01T00:00:00Z); can be negative


"
FileTime,toInstant(),Instant,Converts this FileTime object to an Instant.,"

toInstant
public Instant toInstant()
Converts this FileTime object to an Instant.

  The conversion creates an Instant that represents the
 same point on the time-line as this FileTime.

  FileTime can store points on the time-line further in the
 future and further in the past than Instant. Conversion
 from such further time points saturates to Instant.MIN if
 earlier than Instant.MIN or Instant.MAX if later
 than Instant.MAX.

Returns:
an instant representing the same point on the time-line as
          this FileTime object
Since:
1.8


"
FileTime,toMillis(),long,Returns the value in milliseconds.,"

toMillis
public long toMillis()
Returns the value in milliseconds.

  Conversion from a coarser granularity that would numerically overflow
 saturate to Long.MIN_VALUE if negative or Long.MAX_VALUE
 if positive.

Returns:
the value in milliseconds, since the epoch (1970-01-01T00:00:00Z)


"
FileTime,toString(),String,Returns the string representation of this FileTime.,"

toString
public String toString()
Returns the string representation of this FileTime. The string
 is returned in the ISO 8601 format:
 
     YYYY-MM-DDThh:mm:ss[.s+]Z
 
 where ""[.s+]"" represents a dot followed by one of more digits
 for the decimal fraction of a second. It is only present when the decimal
 fraction of a second is not zero. For example, FileTime.fromMillis(1234567890000L).toString() yields ""2009-02-13T23:31:30Z"", and FileTime.fromMillis(1234567890123L).toString()
 yields ""2009-02-13T23:31:30.123Z"".

  A FileTime is primarily intended to represent the value of a
 file's time stamp. Where used to represent extreme values, where
 the year is less than ""0001"" or greater than ""9999"" then
 this method deviates from ISO 8601 in the same manner as the
 XML Schema
 language. That is, the year may be expanded to more than four digits
 and may be negative-signed. If more than four digits then leading zeros
 are not present. The year before ""0001"" is ""-0001"".

Overrides:
toString in class Object
Returns:
the string representation of this file time


"
PosixFilePermissions,asFileAttribute(Set<PosixFilePermission> perms),static FileAttribute<Set<PosixFilePermission>>,"Creates a FileAttribute, encapsulating a copy of the given file permissions, suitable for passing to the createFile or createDirectory methods.","

asFileAttribute
public static FileAttribute<Set<PosixFilePermission>> asFileAttribute(Set<PosixFilePermission> perms)
Creates a FileAttribute, encapsulating a copy of the given file
 permissions, suitable for passing to the createFile or createDirectory
 methods.

Parameters:
perms - the set of permissions
Returns:
an attribute encapsulating the given file permissions with
          name ""posix:permissions""
Throws:
ClassCastException - if the set contains elements that are not of type PosixFilePermission


"
PosixFilePermissions,fromString(String perms),static Set<PosixFilePermission>,Returns the set of permissions corresponding to a given String representation.,"

fromString
public static Set<PosixFilePermission> fromString(String perms)
Returns the set of permissions corresponding to a given String
 representation.

  The perms parameter is a String representing the
 permissions. It has 9 characters that are interpreted as three sets of
 three. The first set refers to the owner's permissions; the next to the
 group permissions and the last to others. Within each set, the first
 character is 'r' to indicate permission to read, the second
 character is 'w' to indicate permission to write, and the third
 character is 'x' for execute permission. Where a permission is
 not set then the corresponding character is set to '-'.

  Usage Example:
 Suppose we require the set of permissions that indicate the owner has read,
 write, and execute permissions, the group has read and execute permissions
 and others have none.
 
   Set<PosixFilePermission> perms = PosixFilePermissions.fromString(""rwxr-x---"");
 

Parameters:
perms - string representing a set of permissions
Returns:
the resulting set of permissions
Throws:
IllegalArgumentException - if the string cannot be converted to a set of permissions
See Also:
toString(Set)


"
PosixFilePermissions,toString(Set<PosixFilePermission> perms),static String,Returns the String representation of a set of permissions.,"

toString
public static String toString(Set<PosixFilePermission> perms)
Returns the String representation of a set of permissions. It
 is guaranteed that the returned String can be parsed by the
 fromString(java.lang.String) method.

  If the set contains null or elements that are not of type
 PosixFilePermission then these elements are ignored.

Parameters:
perms - the set of permissions
Returns:
the string representation of the permission set


"
UserPrincipalLookupService,lookupPrincipalByGroupName(String group),abstract GroupPrincipal,Lookup a group principal by group name.,"

lookupPrincipalByGroupName
public abstract GroupPrincipal lookupPrincipalByGroupName(String group)
                                                   throws IOException
Lookup a group principal by group name.

  Where an implementation does not support any notion of group then
 this method always throws UserPrincipalNotFoundException. Where
 the namespace for user accounts and groups is the same, then this method
 is identical to invoking lookupPrincipalByName.

Parameters:
group - the string representation of the group to lookup
Returns:
a group principal
Throws:
UserPrincipalNotFoundException - the principal does not exist or is not a group
IOException - if an I/O error occurs
SecurityException - In the case of the default provider, and a security manager is
          installed, it checks RuntimePermission(""lookupUserInformation"")


"
UserPrincipalLookupService,lookupPrincipalByName(String name),abstract UserPrincipal,Lookup a user principal by name.,"

lookupPrincipalByName
public abstract UserPrincipal lookupPrincipalByName(String name)
                                             throws IOException
Lookup a user principal by name.

Parameters:
name - the string representation of the user principal to lookup
Returns:
a user principal
Throws:
UserPrincipalNotFoundException - the principal does not exist
IOException - if an I/O error occurs
SecurityException - In the case of the default provider, and a security manager is
          installed, it checks RuntimePermission(""lookupUserInformation"")


"
