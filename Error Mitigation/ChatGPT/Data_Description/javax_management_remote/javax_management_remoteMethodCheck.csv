Sample Number,ClassName,Snippet Number,Method,Exist,Description,Full Description
0,JMXConnectionNotification,1,String getConnectionId(),True,,"

getConnectionId
public String getConnectionId()
The connection ID to which this notification pertains.

Returns:
the connection ID.


"
0,JMXConnectionNotification,2,String getConnectionInfo(),False,,NULL
0,JMXConnectionNotification,3,String getConnectionNotificationType(),False,,NULL
0,JMXConnectionNotification,4,String getUserName(),False,,NULL
0,JMXConnectionNotification,5,String toString(),False,,NULL
1,JMXConnectorFactory,1,"JMXConnector connect(Map<String, ?> environment)",False,,NULL
1,JMXConnectorFactory,2,JMXConnector connect(JMXServiceURL serviceURL),True,,"

connect
public static JMXConnector connect(JMXServiceURL serviceURL)
                            throws IOException
Creates a connection to the connector server at the given
 address.
This method is equivalent to connect(serviceURL, null).

Parameters:
serviceURL - the address of the connector server to
 connect to.
Returns:
a JMXConnector whose connect method has been called.
Throws:
NullPointerException - if serviceURL is null.
IOException - if the connector client or the
 connection cannot be made because of a communication problem.
SecurityException - if the connection cannot be made
 for security reasons.


"
1,JMXConnectorFactory,3,"JMXConnector connect(JMXServiceURL serviceURL, Map<String, ?> environment)",True,,"

connect
public static JMXConnector connect(JMXServiceURL serviceURL,
                                   Map<String,?> environment)
                            throws IOException
Creates a connection to the connector server at the given
 address.
This method is equivalent to:

 JMXConnector conn = JMXConnectorFactory.newJMXConnector(serviceURL,
                                                         environment);
 conn.connect(environment);
 

Parameters:
serviceURL - the address of the connector server to connect to.
environment - a set of attributes to determine how the
 connection is made.  This parameter can be null.  Keys in this
 map must be Strings.  The appropriate type of each associated
 value depends on the attribute.  The contents of
 environment are not changed by this call.
Returns:
a JMXConnector representing the newly-made
 connection.  Each successful call to this method produces a
 different object.
Throws:
NullPointerException - if serviceURL is null.
IOException - if the connector client or the
 connection cannot be made because of a communication problem.
SecurityException - if the connection cannot be made
 for security reasons.


"
1,JMXConnectorFactory,4,"JMXConnector newJMXConnector(JMXServiceURL serviceURL, Map<String, ?> environment)",True,,"

newJMXConnector
public static JMXConnector newJMXConnector(JMXServiceURL serviceURL,
                                           Map<String,?> environment)
                                    throws IOException
Creates a connector client for the connector server at the
 given address.  The resultant client is not connected until its
 connect method is called.

Parameters:
serviceURL - the address of the connector server to connect to.
environment - a set of attributes to determine how the
 connection is made.  This parameter can be null.  Keys in this
 map must be Strings.  The appropriate type of each associated
 value depends on the attribute.  The contents of
 environment are not changed by this call.
Returns:
a JMXConnector representing the new
 connector client.  Each successful call to this method produces
 a different object.
Throws:
NullPointerException - if serviceURL is null.
IOException - if the connector client cannot be made
 because of a communication problem.
MalformedURLException - if there is no provider for the
 protocol in serviceURL.
JMXProviderException - if there is a provider for the
 protocol in serviceURL but it cannot be used for
 some reason.


"
1,JMXConnectorFactory,5,"JMXConnector newJMXConnector(Map<String, ?> environment)",False,,NULL
2,JMXConnectorServer,1,void start(),False,,NULL
2,JMXConnectorServer,2,void stop(),False,,NULL
2,JMXConnectorServer,3,void setMBeanServer(javax.management.MBeanServer mbs),False,,NULL
2,JMXConnectorServer,4,void setObjectName(javax.management.ObjectName name),False,,NULL
2,JMXConnectorServer,5,javax.management.remote.JMXServiceURL getAddress(),False,,NULL
3,JMXConnectorServerFactory,1,"JMXConnectorServer newJMXConnectorServer(Map<String, ?> environment)",False,,NULL
3,JMXConnectorServerFactory,2,"JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL, Map<String, ?> environment)",False,,NULL
3,JMXConnectorServerFactory,3,"JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL, Map<String, ?> environment, MBeanServer mbeanServer)",True,,"

newJMXConnectorServer
public static JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL,
                                                       Map<String,?> environment,
                                                       MBeanServer mbeanServer)
                                                throws IOException
Creates a connector server at the given address.  The
 resultant server is not started until its start method is called.

Parameters:
serviceURL - the address of the new connector server.  The
 actual address of the new connector server, as returned by its
 getAddress method, will
 not necessarily be exactly the same.  For example, it might
 include a port number if the original address did not.
environment - a set of attributes to control the new
 connector server's behavior.  This parameter can be null.
 Keys in this map must be Strings.  The appropriate type of each
 associated value depends on the attribute.  The contents of
 environment are not changed by this call.
mbeanServer - the MBean server that this connector server
 is attached to.  Null if this connector server will be attached
 to an MBean server by being registered in it.
Returns:
a JMXConnectorServer representing the new
 connector server.  Each successful call to this method produces
 a different object.
Throws:
NullPointerException - if serviceURL is null.
IOException - if the connector server cannot be made
 because of a communication problem.
MalformedURLException - if there is no provider for the
 protocol in serviceURL.
JMXProviderException - if there is a provider for the
 protocol in serviceURL but it cannot be used for
 some reason.


"
3,JMXConnectorServerFactory,4,"JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL, Map<String, ?> environment, MBeanServer mbeanServer, MBeanServerForwarder mbsf)",False,,NULL
3,JMXConnectorServerFactory,5,"JMXConnectorServer newJMXConnectorServer(JMXServiceURL serviceURL, Map<String, ?> environment, MBeanServer mbeanServer, MBeanServerForwarder mbsf, boolean doStart)",False,,NULL
4,JMXPrincipal,1,String getName(),True,,"

getName
public String getName()
Returns the name of this principal.

 

Specified by:
getName in interface Principal
Returns:
the name of this JMXPrincipal.


"
4,JMXPrincipal,2,boolean equals(Object obj),True,,"

equals
public boolean equals(Object o)
Compares the specified Object with this JMXPrincipal
 for equality.  Returns true if the given object is also a
 JMXPrincipal and the two JMXPrincipals
 have the same name.

 

Specified by:
equals in interface Principal
Overrides:
equals in class Object
Parameters:
o - Object to be compared for equality with this
 JMXPrincipal.
Returns:
true if the specified Object is equal to this
 JMXPrincipal.
See Also:
Object.hashCode(), 
HashMap


"
4,JMXPrincipal,3,int hashCode(),True,,"

hashCode
public int hashCode()
Returns a hash code for this JMXPrincipal.

 

Specified by:
hashCode in interface Principal
Overrides:
hashCode in class Object
Returns:
a hash code for this JMXPrincipal.
See Also:
Object.equals(java.lang.Object), 
System.identityHashCode(java.lang.Object)


"
4,JMXPrincipal,4,String toString(),True,,"

toString
public String toString()
Returns a string representation of this JMXPrincipal.

 

Specified by:
toString in interface Principal
Overrides:
toString in class Object
Returns:
a string representation of this JMXPrincipal.


"
4,JMXPrincipal,5,JMXPrincipal clone(),False,,NULL
5,JMXServiceURL,1,String getProtocol(),True,,"

getProtocol
public String getProtocol()
The protocol part of the Service URL.

Returns:
the protocol part of the Service URL.  This is never null.


"
5,JMXServiceURL,2,String getHost(),True,,"

getHost
public String getHost()
The host part of the Service URL.  If the Service URL was
 constructed with the constructor that takes a URL string
 parameter, the result is the substring specifying the host in
 that URL.  If the Service URL was constructed with a
 constructor that takes a separate host parameter, the result is
 the string that was specified.  If that string was null, the
 result is
 InetAddress.getLocalHost().getHostName().
In either case, if the host was specified using the
 [...] syntax for numeric IPv6 addresses, the
 square brackets are not included in the return value here.

Returns:
the host part of the Service URL.  This is never null.


"
5,JMXServiceURL,3,int getPort(),True,,"

getPort
public int getPort()
The port of the Service URL.  If no port was
 specified, the returned value is 0.

Returns:
the port of the Service URL, or 0 if none.


"
5,JMXServiceURL,4,String getURLPath(),True,,"

getURLPath
public String getURLPath()
The URL Path part of the Service URL.  This is an empty
 string, or a string beginning with a slash (/), or
 a string beginning with a semicolon (;).

Returns:
the URL Path part of the Service URL.  This is never
 null.


"
5,JMXServiceURL,5,"Map<String, ?> getEnvironment()",False,,NULL
6,NotificationResult,1,NotificationResult getNextResult(),False,,NULL
6,NotificationResult,2,int getSequenceNumber(),False,,NULL
6,NotificationResult,3,boolean hasBufferedNotifications(),False,,NULL
6,NotificationResult,4,int getBufferSize(),False,,NULL
6,NotificationResult,5,NotificationResult[] getAllResults(),False,,NULL
7,SubjectDelegationPermission,1,String getName(),False,,NULL
7,SubjectDelegationPermission,2,boolean implies(Permission p),False,,NULL
7,SubjectDelegationPermission,3,PermissionCollection newPermissionCollection(),False,,NULL
7,SubjectDelegationPermission,4,boolean equals(Object obj),False,,NULL
7,SubjectDelegationPermission,5,int hashCode(),False,,NULL
8,TargetedNotification,1,ObjectName getTarget(),False,,NULL
8,TargetedNotification,2,Notification getNotification(),True,,"

getNotification
public Notification getNotification()
The emitted notification.

Returns:
The notification.


"
8,TargetedNotification,3,String getListenerID(),False,,NULL
8,TargetedNotification,4,void setNotification(Notification notification),False,,NULL
8,TargetedNotification,5,void setListenerID(String listenerID),False,,NULL
