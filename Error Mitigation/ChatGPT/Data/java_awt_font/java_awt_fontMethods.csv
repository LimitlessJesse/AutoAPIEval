ClassName,Method,Return Type,Description
FontRenderContext,equals(FontRenderContext rhs),boolean,"Return true if rhs has the same transform, antialiasing, and fractional metrics values as this."
FontRenderContext,equals(Object obj),boolean,"Return true if obj is an instance of FontRenderContext and has the same transform, antialiasing, and fractional metrics values as this."
FontRenderContext,getAntiAliasingHint(),Object,Return the text anti-aliasing rendering mode hint used in this FontRenderContext.
FontRenderContext,getFractionalMetricsHint(),Object,Return the text fractional metrics rendering mode hint used in this FontRenderContext.
FontRenderContext,getTransform(),AffineTransform,Gets the transform that is used to scale typographical points to pixels in this FontRenderContext.
FontRenderContext,getTransformType(),int,Returns the integer type of the affine transform for this FontRenderContext as specified by AffineTransform.getType()
FontRenderContext,hashCode(),int,Return a hashcode for this FontRenderContext.
FontRenderContext,isAntiAliased(),boolean,Returns a boolean which indicates whether or not some form of antialiasing is specified by this FontRenderContext.
FontRenderContext,isTransformed(),boolean,Indicates whether or not this FontRenderContext object measures text in a transformed render context.
FontRenderContext,usesFractionalMetrics(),boolean,Returns a boolean which whether text fractional metrics mode is used in this FontRenderContext.
GlyphMetrics,getAdvance(),float,Returns the advance of the glyph along the baseline (either horizontal or vertical).
GlyphMetrics,getAdvanceX(),float,Returns the x-component of the advance of the glyph.
GlyphMetrics,getAdvanceY(),float,Returns the y-component of the advance of the glyph.
GlyphMetrics,getBounds2D(),Rectangle2D,Returns the bounds of the glyph.
GlyphMetrics,getLSB(),float,Returns the left (top) side bearing of the glyph.
GlyphMetrics,getRSB(),float,Returns the right (bottom) side bearing of the glyph.
GlyphMetrics,getType(),int,Returns the raw glyph type code.
GlyphMetrics,isCombining(),boolean,Returns true if this is a combining glyph.
GlyphMetrics,isComponent(),boolean,Returns true if this is a component glyph.
GlyphMetrics,isLigature(),boolean,Returns true if this is a ligature glyph.
GlyphMetrics,isStandard(),boolean,Returns true if this is a standard glyph.
GlyphMetrics,isWhitespace(),boolean,Returns true if this is a whitespace glyph.
GlyphVector,equals(GlyphVector set),abstract boolean,Tests if the specified GlyphVector exactly equals this GlyphVector.
GlyphVector,getFont(),abstract Font,Returns the Font associated with this GlyphVector.
GlyphVector,getFontRenderContext(),abstract FontRenderContext,Returns the FontRenderContext associated with this GlyphVector.
GlyphVector,getGlyphCharIndex(int glyphIndex),int,Returns the character index of the specified glyph.
GlyphVector,"getGlyphCharIndices(int beginGlyphIndex, int numEntries, int[] codeReturn)",int[],Returns the character indices of the specified glyphs.
GlyphVector,getGlyphCode(int glyphIndex),abstract int,Returns the glyphcode of the specified glyph.
GlyphVector,"getGlyphCodes(int beginGlyphIndex, int numEntries, int[] codeReturn)",abstract int[],Returns an array of glyphcodes for the specified glyphs.
GlyphVector,getGlyphJustificationInfo(int glyphIndex),abstract GlyphJustificationInfo,Returns the justification information for the glyph at the specified index into this GlyphVector.
GlyphVector,getGlyphLogicalBounds(int glyphIndex),abstract Shape,Returns the logical bounds of the specified glyph within this GlyphVector.
GlyphVector,getGlyphMetrics(int glyphIndex),abstract GlyphMetrics,Returns the metrics of the glyph at the specified index into this GlyphVector.
GlyphVector,getGlyphOutline(int glyphIndex),abstract Shape,Returns a Shape whose interior corresponds to the visual representation of the specified glyph within this GlyphVector.
GlyphVector,"getGlyphOutline(int glyphIndex, float x, float y)",Shape,"Returns a Shape whose interior corresponds to the visual representation of the specified glyph within this GlyphVector, offset to x, y."
GlyphVector,"getGlyphPixelBounds(int index, FontRenderContext renderFRC, float x, float y)",Rectangle,Returns the pixel bounds of the glyph at index when this GlyphVector is rendered in a Graphics with the given FontRenderContext at the given location.
GlyphVector,getGlyphPosition(int glyphIndex),abstract Point2D,Returns the position of the specified glyph relative to the origin of this GlyphVector.
GlyphVector,"getGlyphPositions(int beginGlyphIndex, int numEntries, float[] positionReturn)",abstract float[],Returns an array of glyph positions for the specified glyphs.
GlyphVector,getGlyphTransform(int glyphIndex),abstract AffineTransform,Returns the transform of the specified glyph within this GlyphVector.
GlyphVector,getGlyphVisualBounds(int glyphIndex),abstract Shape,Returns the visual bounds of the specified glyph within the GlyphVector.
GlyphVector,getLayoutFlags(),int,Returns flags describing the global state of the GlyphVector.
GlyphVector,getLogicalBounds(),abstract Rectangle2D,Returns the logical bounds of this GlyphVector.
GlyphVector,getNumGlyphs(),abstract int,Returns the number of glyphs in this GlyphVector.
GlyphVector,getOutline(),abstract Shape,Returns a Shape whose interior corresponds to the visual representation of this GlyphVector.
GlyphVector,"getOutline(float x, float y)",abstract Shape,"Returns a Shape whose interior corresponds to the visual representation of this GlyphVector when rendered at x, y."
GlyphVector,"getPixelBounds(FontRenderContext renderFRC, float x, float y)",Rectangle,Returns the pixel bounds of this GlyphVector when rendered in a graphics with the given FontRenderContext at the given location.
GlyphVector,getVisualBounds(),abstract Rectangle2D,Returns the visual bounds of this GlyphVector The visual bounds is the bounding box of the outline of this GlyphVector.
GlyphVector,performDefaultLayout(),abstract void,Assigns default positions to each glyph in this GlyphVector.
GlyphVector,"setGlyphPosition(int glyphIndex, Point2D newPos)",abstract void,Sets the position of the specified glyph within this GlyphVector.
GlyphVector,"setGlyphTransform(int glyphIndex, AffineTransform newTX)",abstract void,Sets the transform of the specified glyph within this GlyphVector.
GraphicAttribute,"draw(Graphics2D graphics, float x, float y)",abstract void,Renders this GraphicAttribute at the specified location.
GraphicAttribute,getAdvance(),abstract float,Returns the advance of this GraphicAttribute.
GraphicAttribute,getAlignment(),int,Returns the alignment of this GraphicAttribute.
GraphicAttribute,getAscent(),abstract float,Returns the ascent of this GraphicAttribute.
GraphicAttribute,getBounds(),Rectangle2D,Returns a Rectangle2D that encloses all of the bits drawn by this GraphicAttribute relative to the rendering position.
GraphicAttribute,getDescent(),abstract float,Returns the descent of this GraphicAttribute.
GraphicAttribute,getJustificationInfo(),GlyphJustificationInfo,Returns the justification information for this GraphicAttribute.
GraphicAttribute,getOutline(AffineTransform tx),Shape,Return a Shape that represents the region that this GraphicAttribute renders.
ImageGraphicAttribute,"draw(Graphics2D graphics, float x, float y)",void,Renders this GraphicAttribute at the specified location.
ImageGraphicAttribute,equals(ImageGraphicAttribute rhs),boolean,Compares this ImageGraphicAttribute to the specified ImageGraphicAttribute.
ImageGraphicAttribute,equals(Object rhs),boolean,Compares this ImageGraphicAttribute to the specified Object.
ImageGraphicAttribute,getAdvance(),float,Returns the advance of this ImageGraphicAttribute.
ImageGraphicAttribute,getAscent(),float,Returns the ascent of this ImageGraphicAttribute.
ImageGraphicAttribute,getBounds(),Rectangle2D,"Returns a Rectangle2D that encloses all of the bits rendered by this ImageGraphicAttribute, relative to the rendering position."
ImageGraphicAttribute,getDescent(),float,Returns the descent of this ImageGraphicAttribute.
ImageGraphicAttribute,hashCode(),int,Returns a hashcode for this ImageGraphicAttribute.
LayoutPath,"pathToPoint(Point2D location, boolean preceding, Point2D point)",abstract void,Convert a location relative to the path to a point in user coordinates.
LayoutPath,"pointToPath(Point2D point, Point2D location)",abstract boolean,Convert a point in user space to a location relative to the path.
LineBreakMeasurer,"deleteChar(AttributedCharacterIterator newParagraph, int deletePos)",void,"Updates this LineBreakMeasurer after a single character is deleted from the text, and sets the current position to the beginning of the paragraph."
LineBreakMeasurer,getPosition(),int,Returns the current position of this LineBreakMeasurer.
LineBreakMeasurer,"insertChar(AttributedCharacterIterator newParagraph, int insertPos)",void,"Updates this LineBreakMeasurer after a single character is inserted into the text, and sets the current position to the beginning of the paragraph."
LineBreakMeasurer,nextLayout(float wrappingWidth),TextLayout,"Returns the next layout, and updates the current position."
LineBreakMeasurer,"nextLayout(float wrappingWidth, int offsetLimit, boolean requireNextWord)",TextLayout,"Returns the next layout, and updates the current position."
LineBreakMeasurer,nextOffset(float wrappingWidth),int,Returns the position at the end of the next layout.
LineBreakMeasurer,"nextOffset(float wrappingWidth, int offsetLimit, boolean requireNextWord)",int,Returns the position at the end of the next layout.
LineBreakMeasurer,setPosition(int newPosition),void,Sets the current position of this LineBreakMeasurer.
LineMetrics,getAscent(),abstract float,Returns the ascent of the text.
LineMetrics,getBaselineIndex(),abstract int,Returns the baseline index of the text.
LineMetrics,getBaselineOffsets(),abstract float[],"Returns the baseline offsets of the text, relative to the baseline of the text."
LineMetrics,getDescent(),abstract float,Returns the descent of the text.
LineMetrics,getHeight(),abstract float,Returns the height of the text.
LineMetrics,getLeading(),abstract float,Returns the leading of the text.
LineMetrics,getNumChars(),abstract int,Returns the number of characters (char values) in the text whose metrics are encapsulated by this LineMetrics object.
LineMetrics,getStrikethroughOffset(),abstract float,Returns the position of the strike-through line relative to the baseline.
LineMetrics,getStrikethroughThickness(),abstract float,Returns the thickness of the strike-through line.
LineMetrics,getUnderlineOffset(),abstract float,Returns the position of the underline relative to the baseline.
LineMetrics,getUnderlineThickness(),abstract float,Returns the thickness of the underline.
NumericShaper,equals(Object o),boolean,"Returns true if the specified object is an instance of NumericShaper and shapes identically to this one, regardless of the range representations, the bit mask or the enum."
NumericShaper,getContextualShaper(int ranges),static NumericShaper,Returns a contextual shaper for the provided unicode range(s).
NumericShaper,"getContextualShaper(int ranges, int defaultContext)",static NumericShaper,Returns a contextual shaper for the provided unicode range(s).
NumericShaper,getContextualShaper(Set<NumericShaper.Range> ranges),static NumericShaper,Returns a contextual shaper for the provided Unicode range(s).
NumericShaper,"getContextualShaper(Set<NumericShaper.Range> ranges, NumericShaper.Range defaultContext)",static NumericShaper,Returns a contextual shaper for the provided Unicode range(s).
NumericShaper,getRanges(),int,Returns an int that ORs together the values for all the ranges that will be shaped.
NumericShaper,getRangeSet(),Set<NumericShaper.Range>,Returns a Set representing all the Unicode ranges in this NumericShaper that will be shaped.
NumericShaper,getShaper(int singleRange),static NumericShaper,Returns a shaper for the provided unicode range.
NumericShaper,getShaper(NumericShaper.Range singleRange),static NumericShaper,Returns a shaper for the provided Unicode range.
NumericShaper,hashCode(),int,Returns a hash code for this shaper.
NumericShaper,isContextual(),boolean,Returns a boolean indicating whether or not this shaper shapes contextually.
NumericShaper,"shape(char[] text, int start, int count)",void,Converts the digits in the text that occur between start and start + count.
NumericShaper,"shape(char[] text, int start, int count, int context)",void,"Converts the digits in the text that occur between start and start + count, using the provided context."
NumericShaper,"shape(char[] text, int start, int count, NumericShaper.Range context)",void,"Converts the digits in the text that occur between start and start + count, using the provided context."
NumericShaper,toString(),String,Returns a String that describes this shaper.
ShapeGraphicAttribute,"draw(Graphics2D graphics, float x, float y)",void,Renders this GraphicAttribute at the specified location.
ShapeGraphicAttribute,equals(Object rhs),boolean,Compares this ShapeGraphicAttribute to the specified Object.
ShapeGraphicAttribute,equals(ShapeGraphicAttribute rhs),boolean,Compares this ShapeGraphicAttribute to the specified ShapeGraphicAttribute.
ShapeGraphicAttribute,getAdvance(),float,Returns the advance of this ShapeGraphicAttribute.
ShapeGraphicAttribute,getAscent(),float,Returns the ascent of this ShapeGraphicAttribute.
ShapeGraphicAttribute,getBounds(),Rectangle2D,Returns a Rectangle2D that encloses all of the bits drawn by this ShapeGraphicAttribute relative to the rendering position.
ShapeGraphicAttribute,getDescent(),float,Returns the descent of this ShapeGraphicAttribute.
ShapeGraphicAttribute,getOutline(AffineTransform tx),Shape,Return a Shape that represents the region that this ShapeGraphicAttribute renders.
ShapeGraphicAttribute,hashCode(),int,Returns a hashcode for this ShapeGraphicAttribute.
TextAttribute,readResolve(),protected Object,Resolves instances being deserialized to the predefined constants.
TextHitInfo,afterOffset(int offset),static TextHitInfo,"Creates a TextHitInfo at the specified offset, associated with the character after the offset."
TextHitInfo,beforeOffset(int offset),static TextHitInfo,"Creates a TextHitInfo at the specified offset, associated with the character before the offset."
TextHitInfo,equals(Object obj),boolean,Returns true if the specified Object is a TextHitInfo and equals this TextHitInfo.
TextHitInfo,equals(TextHitInfo hitInfo),boolean,Returns true if the specified TextHitInfo has the same charIndex and isLeadingEdge as this TextHitInfo.
TextHitInfo,getCharIndex(),int,Returns the index of the character hit.
TextHitInfo,getInsertionIndex(),int,Returns the insertion index.
TextHitInfo,getOffsetHit(int delta),TextHitInfo,Creates a TextHitInfo whose character index is offset by delta from the charIndex of this TextHitInfo.
TextHitInfo,getOtherHit(),TextHitInfo,Creates a TextHitInfo on the other side of the insertion point.
TextHitInfo,hashCode(),int,Returns the hash code.
TextHitInfo,isLeadingEdge(),boolean,Returns true if the leading edge of the character was hit.
TextHitInfo,leading(int charIndex),static TextHitInfo,Creates a TextHitInfo on the leading edge of the character at the specified charIndex.
TextHitInfo,toString(),String,Returns a String representing the hit for debugging use only.
TextHitInfo,trailing(int charIndex),static TextHitInfo,Creates a hit on the trailing edge of the character at the specified charIndex.
TextLayout,clone(),protected Object,Creates a copy of this TextLayout.
TextLayout,"draw(Graphics2D g2, float x, float y)",void,Renders this TextLayout at the specified location in the specified Graphics2D context.
TextLayout,equals(Object obj),boolean,Returns true if the specified Object is a TextLayout object and if the specified Object equals this TextLayout.
TextLayout,equals(TextLayout rhs),boolean,Returns true if the two layouts are equal.
TextLayout,getAdvance(),float,Returns the advance of this TextLayout.
TextLayout,getAscent(),float,Returns the ascent of this TextLayout.
TextLayout,getBaseline(),byte,Returns the baseline for this TextLayout.
TextLayout,getBaselineOffsets(),float[],Returns the offsets array for the baselines used for this TextLayout.
TextLayout,"getBlackBoxBounds(int firstEndpoint, int secondEndpoint)",Shape,Returns the black box bounds of the characters in the specified range.
TextLayout,getBounds(),Rectangle2D,Returns the bounds of this TextLayout.
TextLayout,getCaretInfo(TextHitInfo hit),float[],Returns information about the caret corresponding to hit.
TextLayout,"getCaretInfo(TextHitInfo hit, Rectangle2D bounds)",float[],Returns information about the caret corresponding to hit.
TextLayout,getCaretShape(TextHitInfo hit),Shape,Returns a Shape representing the caret at the specified hit inside the natural bounds of this TextLayout.
TextLayout,"getCaretShape(TextHitInfo hit, Rectangle2D bounds)",Shape,Returns a Shape representing the caret at the specified hit inside the specified bounds.
TextLayout,getCaretShapes(int offset),Shape[],Returns two paths corresponding to the strong and weak caret.
TextLayout,"getCaretShapes(int offset, Rectangle2D bounds)",Shape[],Returns two paths corresponding to the strong and weak caret.
TextLayout,"getCaretShapes(int offset, Rectangle2D bounds, TextLayout.CaretPolicy policy)",Shape[],Returns two paths corresponding to the strong and weak caret.
TextLayout,getCharacterCount(),int,Returns the number of characters represented by this TextLayout.
TextLayout,getCharacterLevel(int index),byte,Returns the level of the character at index.
TextLayout,getDescent(),float,Returns the descent of this TextLayout.
TextLayout,getJustifiedLayout(float justificationWidth),TextLayout,Creates a copy of this TextLayout justified to the specified width.
TextLayout,getLayoutPath(),LayoutPath,"Return the LayoutPath, or null if the layout path is the default path (x maps to advance, y maps to offset)."
TextLayout,getLeading(),float,Returns the leading of the TextLayout.
TextLayout,"getLogicalHighlightShape(int firstEndpoint, int secondEndpoint)",Shape,"Returns a Shape enclosing the logical selection in the specified range, extended to the natural bounds of this TextLayout."
TextLayout,"getLogicalHighlightShape(int firstEndpoint, int secondEndpoint, Rectangle2D bounds)",Shape,"Returns a Shape enclosing the logical selection in the specified range, extended to the specified bounds."
TextLayout,"getLogicalRangesForVisualSelection(TextHitInfo firstEndpoint, TextHitInfo secondEndpoint)",int[],Returns the logical ranges of text corresponding to a visual selection.
TextLayout,getNextLeftHit(int offset),TextHitInfo,"Returns the hit for the next caret to the left (top); if no such hit, returns null."
TextLayout,"getNextLeftHit(int offset, TextLayout.CaretPolicy policy)",TextHitInfo,"Returns the hit for the next caret to the left (top); if no such hit, returns null."
TextLayout,getNextLeftHit(TextHitInfo hit),TextHitInfo,"Returns the hit for the next caret to the left (top); if no such hit, returns null."
TextLayout,getNextRightHit(int offset),TextHitInfo,"Returns the hit for the next caret to the right (bottom); if no such hit, returns null."
TextLayout,"getNextRightHit(int offset, TextLayout.CaretPolicy policy)",TextHitInfo,"Returns the hit for the next caret to the right (bottom); if no such hit, returns null."
TextLayout,getNextRightHit(TextHitInfo hit),TextHitInfo,"Returns the hit for the next caret to the right (bottom); if there is no such hit, returns null."
TextLayout,getOutline(AffineTransform tx),Shape,Returns a Shape representing the outline of this TextLayout.
TextLayout,"getPixelBounds(FontRenderContext frc, float x, float y)",Rectangle,Returns the pixel bounds of this TextLayout when rendered in a graphics with the given FontRenderContext at the given location.
TextLayout,getVisibleAdvance(),float,"Returns the advance of this TextLayout, minus trailing whitespace."
TextLayout,"getVisualHighlightShape(TextHitInfo firstEndpoint, TextHitInfo secondEndpoint)",Shape,"Returns a Shape enclosing the visual selection in the specified range, extended to the bounds."
TextLayout,"getVisualHighlightShape(TextHitInfo firstEndpoint, TextHitInfo secondEndpoint, Rectangle2D bounds)",Shape,"Returns a path enclosing the visual selection in the specified range, extended to bounds."
TextLayout,getVisualOtherHit(TextHitInfo hit),TextHitInfo,Returns the hit on the opposite side of the specified hit's caret.
TextLayout,handleJustify(float justificationWidth),protected void,Justify this layout.
TextLayout,hashCode(),int,Returns the hash code of this TextLayout.
TextLayout,"hitTestChar(float x, float y)",TextHitInfo,Returns a TextHitInfo corresponding to the specified point.
TextLayout,"hitTestChar(float x, float y, Rectangle2D bounds)",TextHitInfo,Returns a TextHitInfo corresponding to the specified point.
TextLayout,"hitToPoint(TextHitInfo hit, Point2D point)",void,Convert a hit to a point in standard coordinates.
TextLayout,isLeftToRight(),boolean,Returns true if this TextLayout has a left-to-right base direction or false if it has a right-to-left base direction.
TextLayout,isVertical(),boolean,Returns true if this TextLayout is vertical.
TextLayout,toString(),String,Returns debugging information for this TextLayout.
TextLayout.CaretPolicy,"getStrongCaret(TextHitInfo hit1, TextHitInfo hit2, TextLayout layout)",TextHitInfo,Chooses one of the specified TextHitInfo instances as a strong caret in the specified TextLayout.
TextMeasurer,clone(),protected Object,Creates and returns a copy of this object.
TextMeasurer,"deleteChar(AttributedCharacterIterator newParagraph, int deletePos)",void,Updates the TextMeasurer after a single character has been deleted from the paragraph currently represented by this TextMeasurer.
TextMeasurer,"getAdvanceBetween(int start, int limit)",float,Returns the graphical width of a line beginning at start and including characters up to limit.
TextMeasurer,"getLayout(int start, int limit)",TextLayout,Returns a TextLayout on the given character range.
TextMeasurer,"getLineBreakIndex(int start, float maxAdvance)",int,Returns the index of the first character which will not fit on on a line beginning at start and possible measuring up to maxAdvance in graphical width.
TextMeasurer,"insertChar(AttributedCharacterIterator newParagraph, int insertPos)",void,Updates the TextMeasurer after a single character has been inserted into the paragraph currently represented by this TextMeasurer.
TransformAttribute,equals(Object rhs),boolean,Returns true if rhs is a TransformAttribute whose transform is equal to this TransformAttribute's transform.
TransformAttribute,getTransform(),AffineTransform,Returns a copy of the wrapped transform.
TransformAttribute,hashCode(),int,Returns a hash code value for the object.
TransformAttribute,isIdentity(),boolean,Returns true if the wrapped transform is an identity transform.
