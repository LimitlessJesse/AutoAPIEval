Sample: 0 Binder
----------------------------------------------------------------
1. `void updateXML(Object jaxbObject)`: Updates the XML representation of the specified JAXB object.
2. `void updateXML(Object jaxbObject, Node xmlNode)`: Updates the XML representation of the specified JAXB object using the provided XML node.
3. `void updateJAXB(Node xmlNode)`: Updates the JAXB object representation based on the specified XML node.
4. `void setSchema(Schema schema)`: Sets the schema to be used for validation during marshalling and unmarshalling.
5. `void setEventHandler(ValidationEventHandler handler)`: Sets the event handler for validation events during marshalling and unmarshalling.
================================================================

Sample: 1 DatatypeConverter
----------------------------------------------------------------
1. `String parseString(String lexicalXSDDateTime)`: This method parses the lexical representation of an xsd:dateTime datatype into a String.
2. `String printDateTime(Calendar val)`: This method converts a Calendar value to a lexical representation of an xsd:dateTime datatype as a String.
3. `byte[] parseBase64Binary(String lexicalXSDBase64Binary)`: This method decodes the lexical representation of an xsd:base64Binary datatype into a byte array.
4. `String printBase64Binary(byte[] val)`: This method encodes a byte array into a lexical representation of an xsd:base64Binary datatype as a String.
5. `int parseInt(String lexicalXSDInt)`: This method parses the lexical representation of an xsd:int datatype into an int value.
================================================================

Sample: 2 JAXB
----------------------------------------------------------------
1. `Object unmarshal(File xmlFile)`: This method unmarshals the content of the specified XML file into an object.
2. `void marshal(Object obj, File xmlFile)`: This method marshals the specified object into the specified XML file.
3. `void setSchema(Schema schema)`: This method sets the schema to be used for validation during unmarshalling and marshalling.
4. `void setProperty(String name, Object value)`: This method sets a property for the JAXB implementation.
5. `ValidationEventHandler getEventHandler()`: This method returns the current event handler for validation events.
================================================================

Sample: 3 JAXBContext
----------------------------------------------------------------
1. `JAXBContext newInstance(Class<?>... classesToBeBound)`: This method creates a new instance of JAXBContext for the specified classes to be bound.
2. `Unmarshaller createUnmarshaller()`: This method creates a new Unmarshaller object for this context.
3. `Marshaller createMarshaller()`: This method creates a new Marshaller object for this context.
4. `Validator createValidator()`: This method creates a new Validator object for this context.
5. `void generateSchema(SchemaOutputResolver outputResolver)`: This method generates an XML schema for the classes bound in this context.
================================================================

Sample: 4 JAXBElement
----------------------------------------------------------------
1. JAXBElement<T> getValue(): This method returns the value of this JAXBElement.
2. QName getName(): This method returns the qualified name of the XML element.
3. T getValue(): This method returns the value of this JAXBElement.
4. Class<T> getDeclaredType(): This method returns the declared type of the JAXBElement.
5. boolean isNil(): This method returns true if the element is nil, false otherwise.
================================================================

Sample: 5 JAXBElement.GlobalScope
----------------------------------------------------------------
1. `QName getName()`: This method returns the qualified name of the global scope element.
2. `Class getDeclaredType()`: This method returns the declared type of the global scope element.
3. `Class getScope()`: This method returns the scope of the global scope element.
4. `Object getValue()`: This method returns the value of the global scope element.
5. `void setValue(Object value)`: This method sets the value of the global scope element.
================================================================

Sample: 6 JAXBIntrospector
----------------------------------------------------------------
1. `Object getValue(Object obj)`: This method returns the value of a property of the given object.
2. `JAXBObject getObject(Object obj)`: This method returns a JAXB object for the given object.
3. `boolean isElement(Object obj)`: This method checks if the given object is an element in the XML binding.
4. `boolean isNil(Object obj)`: This method checks if the given object is nil in the XML binding.
5. `boolean isValid(Object obj)`: This method checks if the given object is valid according to the XML binding rules.
================================================================

Sample: 7 JAXBPermission
----------------------------------------------------------------
1. `void checkPermission(java.security.Permission perm)`: This method checks if the specified permission is allowed.
2. `boolean implies(java.security.Permission permission)`: This method checks if the specified permission is implied by this permission.
3. `java.security.PermissionCollection newPermissionCollection()`: This method creates a new PermissionCollection object for storing permissions.
4. `void setReadOnly()`: This method sets this permission object to be read-only.
5. `java.lang.String getActions()`: This method returns the actions of this permission.
================================================================

Sample: 8 Marshaller.Listener
----------------------------------------------------------------
1. `void beforeMarshal(Object source)`: This method is called just before marshalling begins.
2. `void afterMarshal(Object source)`: This method is called just after marshalling ends.
3. `void marshalError(RuntimeException exception)`: This method is called when a marshal operation fails with an exception.
4. `void beforeMarshalContext(Marshaller marshaller)`: This method is called just before marshalling context is created.
5. `void afterMarshalContext(Marshaller marshaller)`: This method is called just after marshalling context is created.
================================================================

Sample: 9 SchemaOutputResolver
----------------------------------------------------------------
1. `Result createOutput(String namespaceUri, String suggestedFileName)`: This method creates a new Result object for the specified namespace URI and suggested file name.
2. `void addSchema(Schema schema)`: This method adds a Schema object to the resolver.
3. `void addDocument(String systemId, String namespaceUri)`: This method adds a document with the specified system ID and namespace URI to the resolver.
4. `void addResource(String resourceName)`: This method adds a resource with the specified name to the resolver.
5. `void addGeneratedFile(String fileName)`: This method adds a generated file with the specified name to the resolver.
================================================================

Sample: 10 Unmarshaller.Listener
----------------------------------------------------------------
1. `void beforeUnmarshal(Object target, Object parent)`: This method is called immediately before the unmarshalling of the target object.
2. `void afterUnmarshal(Object target, Object parent)`: This method is called immediately after the unmarshalling of the target object.
3. `void beforeUnmarshal(Unmarshaller unmarshaller, Object parent)`: This method is called before the target object is unmarshalled.
4. `void afterUnmarshal(Unmarshaller unmarshaller, Object parent)`: This method is called after the target object is unmarshalled.
5. `void afterUnmarshal(Unmarshaller unmarshaller, Object parent, Object target)`: This method is called after the target object is unmarshalled, with access to the target object.
================================================================

