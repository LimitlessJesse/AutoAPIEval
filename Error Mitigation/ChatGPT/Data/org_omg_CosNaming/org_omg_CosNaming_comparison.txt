Sample: 0 _BindingIteratorImplBase
----------------------------------------------------------------
1. `void _set_delegate(org.omg.CORBA.portable.Delegate delegate)`: This method sets the delegate for this BindingIterator.
2. `org.omg.CORBA.Object _get_element()`: This method returns the next binding in the NamingContext.
3. `boolean _next_n(int how_many, org.omg.CosNaming.BindingListHolder bl)`: This method retrieves the next set of bindings in the NamingContext.
4. `void destroy()`: This method destroys the BindingIterator.
5. `void _set_orb(org.omg.CORBA.ORB orb)`: This method sets the ORB for this BindingIterator.
================================================================

Sample: 1 _BindingIteratorStub
----------------------------------------------------------------
1. `org.omg.CosNaming.BindingListHolder next_one()`
2. `void destroy()`
3. `org.omg.CosNaming.BindingListHolder next_n(int how_many)`
4. `void _set_delegate(org.omg.CORBA.portable.Delegate delegate)`
5. `void _set_delegate(org.omg.CORBA.portable.ObjectImpl impl)`
================================================================

Sample: 2 _NamingContextExtStub
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the specified name in the naming context.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: Rebinds the given object to the specified name in the naming context.
3. `void unbind(NameComponent[] n)`: Unbinds the object associated with the specified name in the naming context.
4. `org.omg.CORBA.Object resolve(NameComponent[] n)`: Resolves the object associated with the specified name in the naming context.
5. `NamingContextExt to_context()`: Returns the NamingContextExt object itself.
================================================================

Sample: 3 _NamingContextImplBase
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the given name.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: Rebinds the given object to the given name, replacing any existing binding.
3. `void unbind(NameComponent[] n)`: Unbinds the object bound to the given name.
4. `org.omg.CORBA.Object resolve(NameComponent[] n)`: Resolves the given name to the bound object.
5. `NamingContext new_context()`: Creates a new NamingContext.
================================================================

Sample: 4 _NamingContextStub
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the specified name in the naming context.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the specified name in the naming context, replacing any existing binding.
3. `org.omg.CORBA.Object resolve(NameComponent[] n)`: Resolves the given name to the corresponding object in the naming context.
4. `void unbind(NameComponent[] n)`: Removes the binding for the specified name from the naming context.
5. `NamingContextExt new_context()`: Creates a new naming context as a child of the current naming context.
================================================================

Sample: 5 Binding
----------------------------------------------------------------
1. `NameComponent[] components()`: This method returns an array of NameComponent objects.
2. `void components(NameComponent[] newComponents)`: This method sets the array of NameComponent objects.
3. `NameComponent name()`: This method returns the NameComponent object.
4. `void name(NameComponent newName)`: This method sets the NameComponent object.
5. `org.omg.CORBA.Object binding_type()`: This method returns the CORBA Object associated with the binding.
================================================================

Sample: 6 BindingHelper
----------------------------------------------------------------
1. `NameComponent[] createNameComponent(String id)`: This method creates a NameComponent with the given id.
2. `Binding createBinding(NameComponent[] n, org.omg.CORBA.Object obj)`: This method creates a Binding with the given NameComponent array and CORBA object.
3. `NameComponent[] extractNameComponent(Binding b)`: This method extracts the NameComponent array from the given Binding.
4. `org.omg.CORBA.Object extractObject(Binding b)`: This method extracts the CORBA object from the given Binding.
5. `void bind(NamingContext nc, NameComponent[] n, org.omg.CORBA.Object obj)`: This method binds the given CORBA object to the specified NameComponent array in the provided NamingContext.
================================================================

Sample: 7 BindingHolder
----------------------------------------------------------------
1. void set_binding(org.omg.CosNaming.Binding b)
2. org.omg.CosNaming.Binding get_binding()
3. void set_value(org.omg.CORBA.Any v)
4. org.omg.CORBA.Any get_value()
5. void set_retrieved(boolean r)
================================================================

Sample: 8 BindingIteratorHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.Binding next_one()`
2. `org.omg.CosNaming.BindingListHolder next_n(int how_many)`
3. `void destroy()`
4. `void _set_delegate(org.omg.CORBA.portable.Delegate delegate)`
5. `org.omg.CORBA.Object _get_delegate()`
================================================================

Sample: 9 BindingIteratorHolder
----------------------------------------------------------------
1. `org.omg.CosNaming.BindingIterator next_one()`
2. `org.omg.CosNaming.BindingListHolder next_n(int how_many)`
3. `void destroy()`
4. `org.omg.CosNaming.BindingIterator duplicate()`
5. `void destroy()`

================================================================

Sample: 10 BindingIteratorPOA
----------------------------------------------------------------
1. `org.omg.CosNaming.Binding next_one()`: This method returns the next binding in the iteration.
2. `org.omg.CosNaming.Binding[] next_n(int how_many)`: This method returns an array of bindings containing the next 'how_many' bindings in the iteration.
3. `void destroy()`: This method destroys the BindingIterator, releasing any resources associated with it.
4. `boolean next_n(int how_many, org.omg.CosNaming.BindingListHolder bl, org.omg.CosNaming.BindingIteratorHolder bi)`: This method returns true if there are more bindings to be returned, false otherwise.
5. `void _OB_op_destroy(boolean etherealize)`: This method destroys the BindingIterator, with the option to etherealize it.
================================================================

Sample: 11 BindingListHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.BindingListHelper read(org.omg.CORBA.portable.InputStream input)`: This method reads a BindingList from the input stream.
2. `void write(org.omg.CORBA.portable.OutputStream output, org.omg.CosNaming.Binding[] value)`: This method writes a BindingList to the output stream.
3. `static org.omg.CosNaming.Binding[] narrow(org.omg.CORBA.Object obj)`: This method narrows the given CORBA object to a Binding array.
4. `static void insert(org.omg.CORBA.Any a, org.omg.CosNaming.Binding[] that)`: This method inserts a Binding array into a CORBA Any object.
5. `static org.omg.CosNaming.Binding[] extract(org.omg.CORBA.Any a)`: This method extracts a Binding array from a CORBA Any object.
================================================================

Sample: 12 BindingListHolder
----------------------------------------------------------------
1. `void set_binding(org.omg.CosNaming.Binding[] value)`: This method sets the value of this BindingListHolder to the specified array of Bindings.
2. `org.omg.CosNaming.Binding[] get_binding()`: This method returns the array of Bindings held by this BindingListHolder.
3. `void set_max_length(int value)`: This method sets the maximum length of the array of Bindings that this BindingListHolder can hold.
4. `int get_max_length()`: This method returns the maximum length of the array of Bindings that this BindingListHolder can hold.
5. `void set(int index, org.omg.CosNaming.Binding value)`: This method sets the Binding at the specified index in the array of Bindings held by this BindingListHolder.
================================================================

Sample: 13 BindingType
----------------------------------------------------------------
1. `boolean isObject()`: This method returns true if the binding is for an object that is not a naming context.
2. `boolean isNamingContext()`: This method returns true if the binding is for a naming context.
3. `void setObject(boolean isObject)`: This method sets whether the binding is for an object that is not a naming context.
4. `void setNamingContext(boolean isNamingContext)`: This method sets whether the binding is for a naming context.
5. `String toString()`: This method returns a string representation of the binding type.
================================================================

Sample: 14 BindingTypeHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.BindingType org.omg.CosNaming.BindingTypeHelper.narrow(org.omg.CORBA.Object obj)`: This method returns the narrow interface for the given object.
2. `org.omg.CORBA.TypeCode org.omg.CosNaming.BindingTypeHelper.type()`: This method returns the TypeCode object for the BindingType struct.
3. `org.omg.CosNaming.BindingType org.omg.CosNaming.BindingTypeHelper.extract(org.omg.CORBA.Any a)`: This method extracts the BindingType value from the Any object.
4. `void org.omg.CosNaming.BindingTypeHelper.insert(org.omg.CORBA.Any a, org.omg.CosNaming.BindingType that)`: This method inserts the BindingType value into the Any object.
5. `org.omg.CosNaming.BindingType org.omg.CosNaming.BindingTypeHelper.read(org.omg.CORBA.portable.InputStream istream)`: This method reads a BindingType value from the input stream.
================================================================

Sample: 15 BindingTypeHolder
----------------------------------------------------------------
1. `void setType(int value)`: Sets the value of the BindingTypeHolder.
2. `int getType()`: Returns the value of the BindingTypeHolder.
3. `BindingTypeHolder()`: Constructs a new BindingTypeHolder with a default value.
4. `BindingTypeHolder(int initialValue)`: Constructs a new BindingTypeHolder with the specified initial value.
5. `String toString()`: Returns a string representation of the BindingTypeHolder.
================================================================

Sample: 16 IstringHelper
----------------------------------------------------------------
1. `String extract(org.omg.CORBA.Any a)`: This method extracts a string from the given Any object.
2. `void insert(org.omg.CORBA.Any a, String that)`: This method inserts a string into the given Any object.
3. `void write(org.omg.CORBA.portable.OutputStream out, String value)`: This method writes a string to the given OutputStream.
4. `String read(org.omg.CORBA.portable.InputStream in)`: This method reads a string from the given InputStream.
5. `String id()`: This method returns the repository ID for the IstringHelper interface.
================================================================

Sample: 17 NameComponent
----------------------------------------------------------------
1. `void setName(String name)`: This method sets the name of the NameComponent.
2. `String getName()`: This method returns the name of the NameComponent.
3. `void setId(String id)`: This method sets the id of the NameComponent.
4. `String getId()`: This method returns the id of the NameComponent.
5. `boolean equals(Object obj)`: This method compares this NameComponent to the specified object.
================================================================

Sample: 18 NameComponentHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.NameComponent[] insert(org.omg.CosNaming.NameComponent[] a, org.omg.CosNaming.NameComponent element)`: This method inserts the specified element at the end of the array.
2. `org.omg.CosNaming.NameComponent extract(org.omg.CORBA.Any a)`: This method extracts the NameComponent from the Any object.
3. `void write(org.omg.CORBA.portable.OutputStream out, org.omg.CosNaming.NameComponent value)`: This method writes the NameComponent to the OutputStream.
4. `org.omg.CosNaming.NameComponent read(org.omg.CORBA.portable.InputStream in)`: This method reads a NameComponent from the InputStream.
5. `org.omg.CosNaming.NameComponent[] narrow(org.omg.CORBA.Object obj)`: This method narrows the Object to a NameComponent array.
================================================================

Sample: 19 NameComponentHolder
----------------------------------------------------------------
1. `void insert(NameComponent value)`: This method inserts the specified NameComponent into the NameComponentHolder.
2. `NameComponent[] value()`: This method returns the array of NameComponents stored in the NameComponentHolder.
3. `void value(NameComponent[] newValue)`: This method sets the array of NameComponents in the NameComponentHolder to the specified value.
4. `void clear()`: This method clears the NameComponentHolder, removing all stored NameComponents.
5. `int size()`: This method returns the number of NameComponents stored in the NameComponentHolder.
================================================================

Sample: 20 NameHelper
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the given name.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: Rebinds the given object to the given name, replacing any existing binding.
3. `org.omg.CORBA.Object resolve(NameComponent[] n)`: Resolves the given name to the corresponding object.
4. `void unbind(NameComponent[] n)`: Unbinds the object bound to the given name.
5. `NameComponent[] to_name(String s)`: Converts the given string into a sequence of name components.
================================================================

Sample: 21 NameHolder
----------------------------------------------------------------
1. `void insert(int pos, NameComponent name)`: Inserts the specified name component at the specified position in the NameHolder.
2. `NameComponent remove(int pos)`: Removes the name component at the specified position in the NameHolder and returns it.
3. `int size()`: Returns the number of name components in the NameHolder.
4. `void clear()`: Removes all name components from the NameHolder.
5. `NameComponent[] toArray()`: Returns an array containing all of the name components in the NameHolder.
================================================================

Sample: 22 NamingContextExtHelper
----------------------------------------------------------------
1. `NameComponent[] to_name(String name)`: This method converts a string name into an array of NameComponent.
2. `void bind_context(NameComponent[] n, NamingContext nc)`: This method binds a NamingContext to a name in the context.
3. `void rebind_context(NameComponent[] n, NamingContext nc)`: This method rebinds a NamingContext to a name in the context, overwriting any existing binding.
4. `NamingContext resolve(NameComponent[] n)`: This method resolves the given name to a NamingContext.
5. `void unbind_context(NameComponent[] n)`: This method unbinds a NamingContext from the given name in the context.
================================================================

Sample: 23 NamingContextExtHolder
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the specified name in the naming context.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: Rebinds the given object to the specified name in the naming context, replacing any existing binding.
3. `void unbind(NameComponent[] n)`: Unbinds the object bound to the specified name in the naming context.
4. `org.omg.CORBA.Object resolve(NameComponent[] n)`: Resolves the object bound to the specified name in the naming context.
5. `NamingContextExt to_context()`: Returns the NamingContextExt object itself.
================================================================

Sample: 24 NamingContextExtPOA
----------------------------------------------------------------
1. `void bind_context(NameComponent[] n, NamingContext nc)`: Binds the given NamingContext to the given name.
2. `void rebind_context(NameComponent[] n, NamingContext nc)`: Rebinds the given NamingContext to the given name.
3. `void destroy`: Destroys the NamingContextExt object.
4. `NamingContextExt to_context`: Returns the NamingContextExt object as a NamingContext.
5. `NamingContextExt to_naming_context`: Returns the NamingContextExt object as a NamingContextExt.
================================================================

Sample: 25 NamingContextHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.NameComponent[] to_name(String name)`: This method converts a string name into an array of NameComponent objects.
2. `org.omg.CORBA.Object resolve(org.omg.CosNaming.NameComponent[] n)`: This method resolves the given NameComponent array to obtain the corresponding object.
3. `void bind(org.omg.CosNaming.NameComponent[] n, org.omg.CORBA.Object obj)`: This method binds the given object to the specified NameComponent array.
4. `void rebind(org.omg.CosNaming.NameComponent[] n, org.omg.CORBA.Object obj)`: This method rebinds the given object to the specified NameComponent array, replacing any existing binding.
5. `void unbind(org.omg.CosNaming.NameComponent[] n)`: This method removes the binding associated with the specified NameComponent array.
================================================================

Sample: 26 NamingContextHolder
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the given object to the specified name in the naming context.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: Rebinds the given object to the specified name in the naming context, replacing any existing binding.
3. `org.omg.CORBA.Object resolve(NameComponent[] n)`: Resolves the given name in the naming context to obtain the bound object.
4. `void unbind(NameComponent[] n)`: Unbinds the object bound to the specified name in the naming context.
5. `NamingContextExt narrow(org.omg.CORBA.Object obj)`: Narrows the given object reference to a NamingContextExt object.
================================================================

Sample: 27 NamingContextPOA
----------------------------------------------------------------
1. `org.omg.CosNaming.NameComponent[] to_name(String name)`: This method converts a string name into a sequence of NameComponents.
2. `org.omg.CosNaming.NamingContext bind_new_context()`: This method creates a new NamingContext object and binds it to a name in the current context.
3. `org.omg.CORBA.Object resolve(org.omg.CosNaming.NameComponent[] n)`: This method resolves the given NameComponent sequence to an object reference.
4. `void rebind(org.omg.CosNaming.NameComponent[] n, org.omg.CORBA.Object obj)`: This method rebinds the given NameComponent sequence to a new object reference.
5. `void unbind(org.omg.CosNaming.NameComponent[] n)`: This method removes the binding for the given NameComponent sequence.
================================================================

