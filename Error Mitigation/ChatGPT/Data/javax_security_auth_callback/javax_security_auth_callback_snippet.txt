Sample: 0 ChoiceCallback_2
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ChoiceCallback;

public class Main {
    public static void main(String[] args) {
        ChoiceCallback choiceCallback = new ChoiceCallback("Choose an option", new String[]{"Option 1", "Option 2"}, 0, false);
        String[] choices = choiceCallback.getChoices();
        for (String choice : choices) {
            System.out.println(choice);
        }
    }
}
```
================================================================

Sample: 1 ChoiceCallback_3
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ChoiceCallback;

public class Main {
    public static void main(String[] args) {
        ChoiceCallback choiceCallback = new ChoiceCallback("Select an option", new String[]{"Option 1", "Option 2"}, 0, false);
        choiceCallback.setSelectedIndex(1);
        int selectedIndex = choiceCallback.getSelectedIndex();
        System.out.println("Selected index: " + selectedIndex);
    }
}
```
================================================================

Sample: 2 ChoiceCallback_5
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ChoiceCallback;

public class Main {
    public static void main(String[] args) {
        ChoiceCallback callback = new ChoiceCallback("Choose an option", new String[]{"Option 1", "Option 2"}, 0, true);
        boolean allowMultipleSelections = callback.allowMultipleSelections();
        System.out.println("Allow multiple selections: " + allowMultipleSelections);
    }
}
```
================================================================

Sample: 3 ConfirmationCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ConfirmationCallback;

public class Main {
    public static void main(String[] args) {
        ConfirmationCallback callback = new ConfirmationCallback(ConfirmationCallback.YES_NO_CANCEL, ConfirmationCallback.YES);
        int selectedIndex = callback.getSelectedIndex();
        System.out.println("Selected Index: " + selectedIndex);
    }
}
```
================================================================

Sample: 4 ConfirmationCallback_3
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ConfirmationCallback;

public class Main {
    public static void main(String[] args) {
        ConfirmationCallback callback = new ConfirmationCallback(ConfirmationCallback.YES_NO, ConfirmationCallback.YES);
        callback.setSelectedIndex(ConfirmationCallback.NO);
        int selectedIndex = callback.getSelectedIndex();
        System.out.println("Selected index: " + selectedIndex);
    }
}
```
================================================================

Sample: 5 LanguageCallback_1
----------------------------------------------------------------
`Locale getLocale()`: This method retrieves the Locale used for localizing text.

Code snippet:
```java
import javax.security.auth.callback.LanguageCallback;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        LanguageCallback languageCallback = new LanguageCallback();
        Locale locale = languageCallback.getLocale();
        
        if (locale != null) {
            System.out.println("Retrieved Locale: " + locale);
        } else {
            System.out.println("No Locale could be retrieved.");
        }
    }
}
```
================================================================

Sample: 6 LanguageCallback_2
----------------------------------------------------------------
`void setLocale(Locale locale)`: This method sets the retrieved Locale.

Code snippet:
```java
import javax.security.auth.callback.LanguageCallback;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        LanguageCallback languageCallback = new LanguageCallback();
        Locale locale = new Locale("en", "US");
        languageCallback.setLocale(locale);
    }
}
```
================================================================

Sample: 7 NameCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.NameCallback;

public class Main {
    public static void main(String[] args) {
        NameCallback nameCallback = new NameCallback("Please enter your name: ");
        String retrievedName = nameCallback.getName();
        System.out.println("Retrieved name: " + retrievedName);
    }
}
```
================================================================

Sample: 8 NameCallback_2
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.NameCallback;

public class Main {
    public static void main(String[] args) {
        NameCallback callback = new NameCallback("Please enter your name: ");
        callback.setName("John Doe");
        System.out.println("Retrieved name: " + callback.getName());
    }
}
```
================================================================

Sample: 9 NameCallback_5
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.NameCallback;

public class Main {
    public static void main(String[] args) {
        NameCallback nameCallback = new NameCallback("prompt");
        String defaultName = nameCallback.getDefaultName();
        System.out.println("Default name: " + defaultName);
    }
}
```
================================================================

Sample: 10 PasswordCallback_1
----------------------------------------------------------------
`char[] getPassword()`: This method returns a copy of the retrieved password.

Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("prompt", false);
        char[] password = passwordCallback.getPassword();
        System.out.println("Retrieved password: " + new String(password));
    }
}
```
================================================================

Sample: 11 PasswordCallback_2
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("prompt", false);
        passwordCallback.clearPassword();
    }
}
```
================================================================

Sample: 12 PasswordCallback_3
----------------------------------------------------------------
`void setPassword(char[] password)`: This method sets the retrieved password by making a copy of the input password before storing it.

Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("Enter password: ", false);
        char[] password = "myPassword".toCharArray();
        passwordCallback.setPassword(password);
    }
}
```
================================================================

Sample: 13 PasswordCallback_4
----------------------------------------------------------------
`String getPrompt()`: This method returns the prompt.

Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("Enter password: ", false);
        String prompt = passwordCallback.getPrompt();
        System.out.println(prompt);
    }
}
```
================================================================

Sample: 14 PasswordCallback_5
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("prompt", false);
        boolean echoOn = passwordCallback.isEchoOn();
        System.out.println("Echo on: " + echoOn);
    }
}
```
================================================================

Sample: 15 TextInputCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.TextInputCallback;

public class Main {
    public static void main(String[] args) {
        TextInputCallback callback = new TextInputCallback("Enter text:");
        String retrievedText = callback.getText();
        System.out.println("Retrieved text: " + retrievedText);
    }
}
```
================================================================

Sample: 16 TextInputCallback_2
----------------------------------------------------------------
`void setText(String text)`: This method sets the retrieved text.

Code snippet:
```java
import javax.security.auth.callback.TextInputCallback;

public class Main {
    public static void main(String[] args) {
        TextInputCallback callback = new TextInputCallback("Enter text: ");
        callback.setText("Sample text");
        System.out.println("Text set: " + callback.getText());
    }
}
```
================================================================

Sample: 17 TextOutputCallback_2
----------------------------------------------------------------
`String getMessage()`: This method returns the message to be displayed.

Code snippet:
```java
import javax.security.auth.callback.TextOutputCallback;

public class Main {
    public static void main(String[] args) {
        TextOutputCallback callback = new TextOutputCallback(TextOutputCallback.INFORMATION, "This is an information message.");
        String message = callback.getMessage();
        System.out.println(message);
    }
}
```
================================================================

Sample: 18 TextOutputCallback_3
----------------------------------------------------------------
`int getMessageType()`: This method returns the message type (INFORMATION, WARNING, or ERROR).

Code snippet:
```java
import javax.security.auth.callback.TextOutputCallback;

public class Main {
    public static void main(String[] args) {
        TextOutputCallback callback = new TextOutputCallback(TextOutputCallback.INFORMATION, "This is an information message");
        int messageType = callback.getMessageType();
        System.out.println("Message type: " + messageType);
    }
}
```
================================================================

