Sample: 0 Charset
----------------------------------------------------------------
1. `static SortedMap<String,Charset> availableCharsets()`: This method returns a sorted map of all available charsets.
2. `static Charset defaultCharset()`: This method returns the default charset.
3. `static Charset forName(String charsetName)`: This method returns a charset object for the given charset name.
4. `boolean contains(Charset cs)`: This method checks if the given charset is supported.
5. `CharsetDecoder newDecoder()`: This method creates a new decoder for this charset.
================================================================

Sample: 1 CharsetDecoder
----------------------------------------------------------------
1. CharsetDecoder onMalformedInput(CodingErrorAction newAction)
   - Return type: CharsetDecoder
   - Parameters: CodingErrorAction newAction

2. CharsetDecoder onUnmappableCharacter(CodingErrorAction newAction)
   - Return type: CharsetDecoder
   - Parameters: CodingErrorAction newAction

3. CharsetDecoder replaceWith(byte[] newReplacement)
   - Return type: CharsetDecoder
   - Parameters: byte[] newReplacement

4. CharsetDecoder replaceWith(String newReplacement)
   - Return type: CharsetDecoder
   - Parameters: String newReplacement

5. CharsetDecoder reset()
   - Return type: CharsetDecoder
   - Parameters: None
================================================================

Sample: 2 CharsetEncoder
----------------------------------------------------------------
1. `boolean canEncode()`: This method returns true if the encoder can encode the input characters without throwing any exceptions.
2. `ByteBuffer encode(CharBuffer in)`: This method encodes the remaining characters from the input CharBuffer into a new ByteBuffer.
3. `Charset charset()`: This method returns the Charset that created this encoder.
4. `CodingErrorAction malformedInputAction()`: This method returns the current action for handling malformed input errors.
5. `CodingErrorAction unmappableCharacterAction()`: This method returns the current action for handling unmappable character errors.
================================================================

Sample: 3 CoderResult
----------------------------------------------------------------
1. `boolean isOverflow()`: This method returns true if this result represents an overflow condition.
2. `boolean isUnderflow()`: This method returns true if this result represents an underflow condition.
3. `boolean isError()`: This method returns true if this result represents an error condition.
4. `boolean isMalformed()`: This method returns true if this result represents a malformed-input error condition.
5. `boolean isUnmappable()`: This method returns true if this result represents an unmappable-character error condition.
================================================================

Sample: 4 CodingErrorAction
----------------------------------------------------------------
1. `CodingErrorAction valueOf(String name)`: This method returns the enum constant of the specified name.
2. `CodingErrorAction[] values()`: This method returns an array containing the constants of this enum type, in the order they are declared.
3. `String toString()`: This method returns the name of this enum constant, as contained in the declaration.
4. `static CodingErrorAction valueOf(int ordinal)`: This method returns the enum constant of the specified ordinal value.
5. `int ordinal()`: This method returns the ordinal of this enumeration constant.
================================================================

Sample: 5 StandardCharsets
----------------------------------------------------------------
1. `Charset forName(String charsetName)`: This method returns a charset object for the given charset name.
2. `SortedMap<String, Charset> availableCharsets()`: This method returns a sorted map of all available charsets.
3. `Charset defaultCharset()`: This method returns the default charset.
4. `CharsetEncoder newEncoder()`: This method returns a new charset encoder for this charset.
5. `CharsetDecoder newDecoder()`: This method returns a new charset decoder for this charset.
================================================================

