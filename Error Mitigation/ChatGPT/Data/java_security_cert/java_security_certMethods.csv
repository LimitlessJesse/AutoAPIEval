ClassName,Method,Return Type,Description
Certificate,equals(Object other),boolean,Compares this certificate for equality with the specified object.
Certificate,getEncoded(),abstract byte[],Returns the encoded form of this certificate.
Certificate,getPublicKey(),abstract PublicKey,Gets the public key from this certificate.
Certificate,getType(),String,Returns the type of this certificate.
Certificate,hashCode(),int,Returns a hashcode value for this certificate from its encoded form.
Certificate,toString(),abstract String,Returns a string representation of this certificate.
Certificate,verify(PublicKey key),abstract void,Verifies that this certificate was signed using the private key that corresponds to the specified public key.
Certificate,"verify(PublicKey key, Provider sigProvider)",void,Verifies that this certificate was signed using the private key that corresponds to the specified public key.
Certificate,"verify(PublicKey key, String sigProvider)",abstract void,Verifies that this certificate was signed using the private key that corresponds to the specified public key.
Certificate,writeReplace(),protected Object,Replace the Certificate to be serialized.
Certificate.CertificateRep,readResolve(),protected Object,Resolve the Certificate Object.
CertificateFactory,generateCertificate(InputStream inStream),Certificate,Generates a certificate object and initializes it with the data read from the input stream inStream.
CertificateFactory,generateCertificates(InputStream inStream),Collection<? extends Certificate>,Returns a (possibly empty) collection view of the certificates read from the given input stream inStream.
CertificateFactory,generateCertPath(InputStream inStream),CertPath,Generates a CertPath object and initializes it with the data read from the InputStream inStream.
CertificateFactory,"generateCertPath(InputStream inStream, String encoding)",CertPath,Generates a CertPath object and initializes it with the data read from the InputStream inStream.
CertificateFactory,generateCertPath(List<? extends Certificate> certificates),CertPath,Generates a CertPath object and initializes it with a List of Certificates.
CertificateFactory,generateCRL(InputStream inStream),CRL,Generates a certificate revocation list (CRL) object and initializes it with the data read from the input stream inStream.
CertificateFactory,generateCRLs(InputStream inStream),Collection<? extends CRL>,Returns a (possibly empty) collection view of the CRLs read from the given input stream inStream.
CertificateFactory,getCertPathEncodings(),Iterator<String>,"Returns an iteration of the CertPath encodings supported by this certificate factory, with the default encoding first."
CertificateFactory,getInstance(String type),static CertificateFactory,Returns a certificate factory object that implements the specified certificate type.
CertificateFactory,"getInstance(String type, Provider provider)",static CertificateFactory,Returns a certificate factory object for the specified certificate type.
CertificateFactory,"getInstance(String type, String provider)",static CertificateFactory,Returns a certificate factory object for the specified certificate type.
CertificateFactory,getProvider(),Provider,Returns the provider of this certificate factory.
CertificateFactory,getType(),String,Returns the name of the certificate type associated with this certificate factory.
CertificateFactorySpi,engineGenerateCertificate(InputStream inStream),abstract Certificate,Generates a certificate object and initializes it with the data read from the input stream inStream.
CertificateFactorySpi,engineGenerateCertificates(InputStream inStream),abstract Collection<? extends Certificate>,Returns a (possibly empty) collection view of the certificates read from the given input stream inStream.
CertificateFactorySpi,engineGenerateCertPath(InputStream inStream),CertPath,Generates a CertPath object and initializes it with the data read from the InputStream inStream.
CertificateFactorySpi,"engineGenerateCertPath(InputStream inStream, String encoding)",CertPath,Generates a CertPath object and initializes it with the data read from the InputStream inStream.
CertificateFactorySpi,engineGenerateCertPath(List<? extends Certificate> certificates),CertPath,Generates a CertPath object and initializes it with a List of Certificates.
CertificateFactorySpi,engineGenerateCRL(InputStream inStream),abstract CRL,Generates a certificate revocation list (CRL) object and initializes it with the data read from the input stream inStream.
CertificateFactorySpi,engineGenerateCRLs(InputStream inStream),abstract Collection<? extends CRL>,Returns a (possibly empty) collection view of the CRLs read from the given input stream inStream.
CertificateFactorySpi,engineGetCertPathEncodings(),Iterator<String>,"Returns an iteration of the CertPath encodings supported by this certificate factory, with the default encoding first."
CertPath,equals(Object other),boolean,Compares this certification path for equality with the specified object.
CertPath,getCertificates(),abstract List<? extends Certificate>,Returns the list of certificates in this certification path.
CertPath,getEncoded(),abstract byte[],"Returns the encoded form of this certification path, using the default encoding."
CertPath,getEncoded(String encoding),abstract byte[],"Returns the encoded form of this certification path, using the specified encoding."
CertPath,getEncodings(),abstract Iterator<String>,"Returns an iteration of the encodings supported by this certification path, with the default encoding first."
CertPath,getType(),String,Returns the type of Certificates in this certification path.
CertPath,hashCode(),int,Returns the hashcode for this certification path.
CertPath,toString(),String,Returns a string representation of this certification path.
CertPath,writeReplace(),protected Object,Replaces the CertPath to be serialized with a CertPathRep object.
CertPath.CertPathRep,readResolve(),protected Object,Returns a CertPath constructed from the type and data.
CertPathBuilder,build(CertPathParameters params),CertPathBuilderResult,Attempts to build a certification path using the specified algorithm parameter set.
CertPathBuilder,getAlgorithm(),String,Returns the name of the algorithm of this CertPathBuilder.
CertPathBuilder,getDefaultType(),static String,"Returns the default CertPathBuilder type as specified by the certpathbuilder.type security property, or the string ""PKIX"" if no such property exists."
CertPathBuilder,getInstance(String algorithm),static CertPathBuilder,Returns a CertPathBuilder object that implements the specified algorithm.
CertPathBuilder,"getInstance(String algorithm, Provider provider)",static CertPathBuilder,Returns a CertPathBuilder object that implements the specified algorithm.
CertPathBuilder,"getInstance(String algorithm, String provider)",static CertPathBuilder,Returns a CertPathBuilder object that implements the specified algorithm.
CertPathBuilder,getProvider(),Provider,Returns the provider of this CertPathBuilder.
CertPathBuilder,getRevocationChecker(),CertPathChecker,Returns a CertPathChecker that the encapsulated CertPathBuilderSpi implementation uses to check the revocation status of certificates.
CertPathBuilderSpi,engineBuild(CertPathParameters params),abstract CertPathBuilderResult,Attempts to build a certification path using the specified algorithm parameter set.
CertPathBuilderSpi,engineGetRevocationChecker(),CertPathChecker,Returns a CertPathChecker that this implementation uses to check the revocation status of certificates.
CertPathValidator,getAlgorithm(),String,Returns the algorithm name of this CertPathValidator.
CertPathValidator,getDefaultType(),static String,"Returns the default CertPathValidator type as specified by the certpathvalidator.type security property, or the string ""PKIX"" if no such property exists."
CertPathValidator,getInstance(String algorithm),static CertPathValidator,Returns a CertPathValidator object that implements the specified algorithm.
CertPathValidator,"getInstance(String algorithm, Provider provider)",static CertPathValidator,Returns a CertPathValidator object that implements the specified algorithm.
CertPathValidator,"getInstance(String algorithm, String provider)",static CertPathValidator,Returns a CertPathValidator object that implements the specified algorithm.
CertPathValidator,getProvider(),Provider,Returns the Provider of this CertPathValidator.
CertPathValidator,getRevocationChecker(),CertPathChecker,Returns a CertPathChecker that the encapsulated CertPathValidatorSpi implementation uses to check the revocation status of certificates.
CertPathValidator,"validate(CertPath certPath, CertPathParameters params)",CertPathValidatorResult,Validates the specified certification path using the specified algorithm parameter set.
CertPathValidatorSpi,engineGetRevocationChecker(),CertPathChecker,Returns a CertPathChecker that this implementation uses to check the revocation status of certificates.
CertPathValidatorSpi,"engineValidate(CertPath certPath, CertPathParameters params)",abstract CertPathValidatorResult,Validates the specified certification path using the specified algorithm parameter set.
CertStore,getCertificates(CertSelector selector),Collection<? extends Certificate>,Returns a Collection of Certificates that match the specified selector.
CertStore,getCertStoreParameters(),CertStoreParameters,Returns the parameters used to initialize this CertStore.
CertStore,getCRLs(CRLSelector selector),Collection<? extends CRL>,Returns a Collection of CRLs that match the specified selector.
CertStore,getDefaultType(),static String,"Returns the default CertStore type as specified by the certstore.type security property, or the string ""LDAP"" if no such property exists."
CertStore,"getInstance(String type, CertStoreParameters params)",static CertStore,Returns a CertStore object that implements the specified CertStore type and is initialized with the specified parameters.
CertStore,"getInstance(String type, CertStoreParameters params, Provider provider)",static CertStore,Returns a CertStore object that implements the specified CertStore type.
CertStore,"getInstance(String type, CertStoreParameters params, String provider)",static CertStore,Returns a CertStore object that implements the specified CertStore type.
CertStore,getProvider(),Provider,Returns the provider of this CertStore.
CertStore,getType(),String,Returns the type of this CertStore.
CertStoreSpi,engineGetCertificates(CertSelector selector),abstract Collection<? extends Certificate>,Returns a Collection of Certificates that match the specified selector.
CertStoreSpi,engineGetCRLs(CRLSelector selector),abstract Collection<? extends CRL>,Returns a Collection of CRLs that match the specified selector.
CollectionCertStoreParameters,clone(),Object,Returns a copy of this object.
CollectionCertStoreParameters,getCollection(),Collection<?>,Returns the Collection from which Certificates and CRLs are retrieved.
CollectionCertStoreParameters,toString(),String,Returns a formatted string describing the parameters.
CRL,getType(),String,Returns the type of this CRL.
CRL,isRevoked(Certificate cert),abstract boolean,Checks whether the given certificate is on this CRL.
CRL,toString(),abstract String,Returns a string representation of this CRL.
LDAPCertStoreParameters,clone(),Object,Returns a copy of this object.
LDAPCertStoreParameters,getPort(),int,Returns the port number of the LDAP server.
LDAPCertStoreParameters,getServerName(),String,Returns the DNS name of the LDAP server.
LDAPCertStoreParameters,toString(),String,Returns a formatted string describing the parameters.
PKIXBuilderParameters,getMaxPathLength(),int,Returns the value of the maximum number of intermediate non-self-issued certificates that may exist in a certification path.
PKIXBuilderParameters,setMaxPathLength(int maxPathLength),void,Sets the value of the maximum number of non-self-issued intermediate certificates that may exist in a certification path.
PKIXBuilderParameters,toString(),String,Returns a formatted string describing the parameters.
PKIXCertPathBuilderResult,getCertPath(),CertPath,Returns the built and validated certification path.
PKIXCertPathBuilderResult,toString(),String,Return a printable representation of this PKIXCertPathBuilderResult.
PKIXCertPathChecker,check(Certificate cert),void,Performs the check(s) on the specified certificate using its internal state.
PKIXCertPathChecker,"check(Certificate cert, Collection<String> unresolvedCritExts)",abstract void,Performs the check(s) on the specified certificate using its internal state and removes any critical extensions that it processes from the specified collection of OID strings that represent the unresolved critical extensions.
PKIXCertPathChecker,clone(),Object,Returns a clone of this object.
PKIXCertPathChecker,getSupportedExtensions(),abstract Set<String>,Returns an immutable Set of X.509 certificate extensions that this PKIXCertPathChecker supports (i.e.
PKIXCertPathChecker,init(boolean forward),abstract void,Initializes the internal state of this PKIXCertPathChecker.
PKIXCertPathChecker,isForwardCheckingSupported(),abstract boolean,Indicates if forward checking is supported.
PKIXCertPathValidatorResult,clone(),Object,Returns a copy of this object.
PKIXCertPathValidatorResult,getPolicyTree(),PolicyNode,Returns the root node of the valid policy tree resulting from the PKIX certification path validation algorithm.
PKIXCertPathValidatorResult,getPublicKey(),PublicKey,"Returns the public key of the subject (target) of the certification path, including any inherited public key parameters if applicable."
PKIXCertPathValidatorResult,getTrustAnchor(),TrustAnchor,Returns the TrustAnchor describing the CA that served as a trust anchor for the certification path.
PKIXCertPathValidatorResult,toString(),String,Return a printable representation of this PKIXCertPathValidatorResult.
PKIXParameters,addCertPathChecker(PKIXCertPathChecker checker),void,Adds a PKIXCertPathChecker to the list of certification path checkers.
PKIXParameters,addCertStore(CertStore store),void,Adds a CertStore to the end of the list of CertStores used in finding certificates and CRLs.
PKIXParameters,clone(),Object,Makes a copy of this PKIXParameters object.
PKIXParameters,getCertPathCheckers(),List<PKIXCertPathChecker>,Returns the List of certification path checkers.
PKIXParameters,getCertStores(),List<CertStore>,Returns an immutable List of CertStores that are used to find certificates and CRLs.
PKIXParameters,getDate(),Date,Returns the time for which the validity of the certification path should be determined.
PKIXParameters,getInitialPolicies(),Set<String>,"Returns an immutable Set of initial policy identifiers (OID strings), indicating that any one of these policies would be acceptable to the certificate user for the purposes of certification path processing."
PKIXParameters,getPolicyQualifiersRejected(),boolean,Gets the PolicyQualifiersRejected flag.
PKIXParameters,getSigProvider(),String,"Returns the signature provider's name, or null if not set."
PKIXParameters,getTargetCertConstraints(),CertSelector,Returns the required constraints on the target certificate.
PKIXParameters,getTrustAnchors(),Set<TrustAnchor>,Returns an immutable Set of the most-trusted CAs.
PKIXParameters,isAnyPolicyInhibited(),boolean,Checks whether the any policy OID should be processed if it is included in a certificate.
PKIXParameters,isExplicitPolicyRequired(),boolean,Checks if explicit policy is required.
PKIXParameters,isPolicyMappingInhibited(),boolean,Checks if policy mapping is inhibited.
PKIXParameters,isRevocationEnabled(),boolean,Checks the RevocationEnabled flag.
PKIXParameters,setAnyPolicyInhibited(boolean val),void,Sets state to determine if the any policy OID should be processed if it is included in a certificate.
PKIXParameters,setCertPathCheckers(List<PKIXCertPathChecker> checkers),void,Sets a List of additional certification path checkers.
PKIXParameters,setCertStores(List<CertStore> stores),void,Sets the list of CertStores to be used in finding certificates and CRLs.
PKIXParameters,setDate(Date date),void,Sets the time for which the validity of the certification path should be determined.
PKIXParameters,setExplicitPolicyRequired(boolean val),void,Sets the ExplicitPolicyRequired flag.
PKIXParameters,setInitialPolicies(Set<String> initialPolicies),void,"Sets the Set of initial policy identifiers (OID strings), indicating that any one of these policies would be acceptable to the certificate user for the purposes of certification path processing."
PKIXParameters,setPolicyMappingInhibited(boolean val),void,Sets the PolicyMappingInhibited flag.
PKIXParameters,setPolicyQualifiersRejected(boolean qualifiersRejected),void,Sets the PolicyQualifiersRejected flag.
PKIXParameters,setRevocationEnabled(boolean val),void,Sets the RevocationEnabled flag.
PKIXParameters,setSigProvider(String sigProvider),void,Sets the signature provider's name.
PKIXParameters,setTargetCertConstraints(CertSelector selector),void,Sets the required constraints on the target certificate.
PKIXParameters,setTrustAnchors(Set<TrustAnchor> trustAnchors),void,Sets the Set of most-trusted CAs.
PKIXParameters,toString(),String,Returns a formatted string describing the parameters.
PKIXRevocationChecker,clone(),PKIXRevocationChecker,Returns a clone of this object.
PKIXRevocationChecker,getOcspExtensions(),List<Extension>,Gets the optional OCSP request extensions.
PKIXRevocationChecker,getOcspResponder(),URI,Gets the URI that identifies the location of the OCSP responder.
PKIXRevocationChecker,getOcspResponderCert(),X509Certificate,Gets the OCSP responder's certificate.
PKIXRevocationChecker,getOcspResponses(),"Map<X509Certificate,byte[]>",Gets the OCSP responses.
PKIXRevocationChecker,getOptions(),Set<PKIXRevocationChecker.Option>,Gets the revocation options.
PKIXRevocationChecker,getSoftFailExceptions(),abstract List<CertPathValidatorException>,Returns a list containing the exceptions that are ignored by the revocation checker when the SOFT_FAIL option is set.
PKIXRevocationChecker,setOcspExtensions(List<Extension> extensions),void,Sets the optional OCSP request extensions.
PKIXRevocationChecker,setOcspResponder(URI uri),void,Sets the URI that identifies the location of the OCSP responder.
PKIXRevocationChecker,setOcspResponderCert(X509Certificate cert),void,Sets the OCSP responder's certificate.
PKIXRevocationChecker,"setOcspResponses(Map<X509Certificate,byte[]> responses)",void,Sets the OCSP responses.
PKIXRevocationChecker,setOptions(Set<PKIXRevocationChecker.Option> options),void,Sets the revocation options.
PolicyQualifierInfo,getEncoded(),byte[],Returns the ASN.1 DER encoded form of this PolicyQualifierInfo.
PolicyQualifierInfo,getPolicyQualifier(),byte[],Returns the ASN.1 DER encoded form of the qualifier field of this PolicyQualifierInfo.
PolicyQualifierInfo,getPolicyQualifierId(),String,Returns the policyQualifierId field of this PolicyQualifierInfo.
PolicyQualifierInfo,toString(),String,Return a printable representation of this PolicyQualifierInfo.
TrustAnchor,getCA(),X500Principal,Returns the name of the most-trusted CA as an X500Principal.
TrustAnchor,getCAName(),String,Returns the name of the most-trusted CA in RFC 2253 String format.
TrustAnchor,getCAPublicKey(),PublicKey,Returns the public key of the most-trusted CA.
TrustAnchor,getNameConstraints(),byte[],Returns the name constraints parameter.
TrustAnchor,getTrustedCert(),X509Certificate,Returns the most-trusted CA certificate.
TrustAnchor,toString(),String,Returns a formatted string describing the TrustAnchor.
X509Certificate,checkValidity(),abstract void,Checks that the certificate is currently valid.
X509Certificate,checkValidity(Date date),abstract void,Checks that the given date is within the certificate's validity period.
X509Certificate,getBasicConstraints(),abstract int,"Gets the certificate constraints path length from the critical BasicConstraints extension, (OID = 2.5.29.19)."
X509Certificate,getExtendedKeyUsage(),List<String>,"Gets an unmodifiable list of Strings representing the OBJECT IDENTIFIERs of the ExtKeyUsageSyntax field of the extended key usage extension, (OID = 2.5.29.37)."
X509Certificate,getIssuerAlternativeNames(),Collection<List<?>>,"Gets an immutable collection of issuer alternative names from the IssuerAltName extension, (OID = 2.5.29.18)."
X509Certificate,getIssuerDN(),abstract Principal,"Denigrated, replaced by getIssuerX500Principal()."
X509Certificate,getIssuerUniqueID(),abstract boolean[],Gets the issuerUniqueID value from the certificate.
X509Certificate,getIssuerX500Principal(),X500Principal,Returns the issuer (issuer distinguished name) value from the certificate as an X500Principal.
X509Certificate,getKeyUsage(),abstract boolean[],"Gets a boolean array representing bits of the KeyUsage extension, (OID = 2.5.29.15)."
X509Certificate,getNotAfter(),abstract Date,Gets the notAfter date from the validity period of the certificate.
X509Certificate,getNotBefore(),abstract Date,Gets the notBefore date from the validity period of the certificate.
X509Certificate,getSerialNumber(),abstract BigInteger,Gets the serialNumber value from the certificate.
X509Certificate,getSigAlgName(),abstract String,Gets the signature algorithm name for the certificate signature algorithm.
X509Certificate,getSigAlgOID(),abstract String,Gets the signature algorithm OID string from the certificate.
X509Certificate,getSigAlgParams(),abstract byte[],Gets the DER-encoded signature algorithm parameters from this certificate's signature algorithm.
X509Certificate,getSignature(),abstract byte[],Gets the signature value (the raw signature bits) from the certificate.
X509Certificate,getSubjectAlternativeNames(),Collection<List<?>>,"Gets an immutable collection of subject alternative names from the SubjectAltName extension, (OID = 2.5.29.17)."
X509Certificate,getSubjectDN(),abstract Principal,"Denigrated, replaced by getSubjectX500Principal()."
X509Certificate,getSubjectUniqueID(),abstract boolean[],Gets the subjectUniqueID value from the certificate.
X509Certificate,getSubjectX500Principal(),X500Principal,Returns the subject (subject distinguished name) value from the certificate as an X500Principal.
X509Certificate,getTBSCertificate(),abstract byte[],"Gets the DER-encoded certificate information, the tbsCertificate from this certificate."
X509Certificate,getVersion(),abstract int,Gets the version (version number) value from the certificate.
X509Certificate,"verify(PublicKey key, Provider sigProvider)",void,Verifies that this certificate was signed using the private key that corresponds to the specified public key.
X509CertSelector,"addPathToName(int type, byte[] name)",void,Adds a name to the pathToNames criterion.
X509CertSelector,"addPathToName(int type, String name)",void,Adds a name to the pathToNames criterion.
X509CertSelector,"addSubjectAlternativeName(int type, byte[] name)",void,Adds a name to the subjectAlternativeNames criterion.
X509CertSelector,"addSubjectAlternativeName(int type, String name)",void,Adds a name to the subjectAlternativeNames criterion.
X509CertSelector,clone(),Object,Returns a copy of this object.
X509CertSelector,getAuthorityKeyIdentifier(),byte[],Returns the authorityKeyIdentifier criterion.
X509CertSelector,getBasicConstraints(),int,Returns the basic constraints constraint.
X509CertSelector,getCertificate(),X509Certificate,Returns the certificateEquals criterion.
X509CertSelector,getCertificateValid(),Date,Returns the certificateValid criterion.
X509CertSelector,getExtendedKeyUsage(),Set<String>,Returns the extendedKeyUsage criterion.
X509CertSelector,getIssuer(),X500Principal,Returns the issuer criterion as an X500Principal.
X509CertSelector,getIssuerAsBytes(),byte[],Returns the issuer criterion as a byte array.
X509CertSelector,getIssuerAsString(),String,"Denigrated, use getIssuer() or getIssuerAsBytes() instead."
X509CertSelector,getKeyUsage(),boolean[],Returns the keyUsage criterion.
X509CertSelector,getMatchAllSubjectAltNames(),boolean,Indicates if the X509Certificate must contain all or at least one of the subjectAlternativeNames specified in the setSubjectAlternativeNames or addSubjectAlternativeName methods.
X509CertSelector,getNameConstraints(),byte[],Returns the name constraints criterion.
X509CertSelector,getPathToNames(),Collection<List<?>>,Returns a copy of the pathToNames criterion.
X509CertSelector,getPolicy(),Set<String>,Returns the policy criterion.
X509CertSelector,getPrivateKeyValid(),Date,Returns the privateKeyValid criterion.
X509CertSelector,getSerialNumber(),BigInteger,Returns the serialNumber criterion.
X509CertSelector,getSubject(),X500Principal,Returns the subject criterion as an X500Principal.
X509CertSelector,getSubjectAlternativeNames(),Collection<List<?>>,Returns a copy of the subjectAlternativeNames criterion.
X509CertSelector,getSubjectAsBytes(),byte[],Returns the subject criterion as a byte array.
X509CertSelector,getSubjectAsString(),String,"Denigrated, use getSubject() or getSubjectAsBytes() instead."
X509CertSelector,getSubjectKeyIdentifier(),byte[],Returns the subjectKeyIdentifier criterion.
X509CertSelector,getSubjectPublicKey(),PublicKey,Returns the subjectPublicKey criterion.
X509CertSelector,getSubjectPublicKeyAlgID(),String,Returns the subjectPublicKeyAlgID criterion.
X509CertSelector,match(Certificate cert),boolean,Decides whether a Certificate should be selected.
X509CertSelector,setAuthorityKeyIdentifier(byte[] authorityKeyID),void,Sets the authorityKeyIdentifier criterion.
X509CertSelector,setBasicConstraints(int minMaxPathLen),void,Sets the basic constraints constraint.
X509CertSelector,setCertificate(X509Certificate cert),void,Sets the certificateEquals criterion.
X509CertSelector,setCertificateValid(Date certValid),void,Sets the certificateValid criterion.
X509CertSelector,setExtendedKeyUsage(Set<String> keyPurposeSet),void,Sets the extendedKeyUsage criterion.
X509CertSelector,setIssuer(byte[] issuerDN),void,Sets the issuer criterion.
X509CertSelector,setIssuer(String issuerDN),void,"Denigrated, use setIssuer(X500Principal) or setIssuer(byte[]) instead."
X509CertSelector,setIssuer(X500Principal issuer),void,Sets the issuer criterion.
X509CertSelector,setKeyUsage(boolean[] keyUsage),void,Sets the keyUsage criterion.
X509CertSelector,setMatchAllSubjectAltNames(boolean matchAllNames),void,Enables/disables matching all of the subjectAlternativeNames specified in the setSubjectAlternativeNames or addSubjectAlternativeName methods.
X509CertSelector,setNameConstraints(byte[] bytes),void,Sets the name constraints criterion.
X509CertSelector,setPathToNames(Collection<List<?>> names),void,Sets the pathToNames criterion.
X509CertSelector,setPolicy(Set<String> certPolicySet),void,Sets the policy constraint.
X509CertSelector,setPrivateKeyValid(Date privateKeyValid),void,Sets the privateKeyValid criterion.
X509CertSelector,setSerialNumber(BigInteger serial),void,Sets the serialNumber criterion.
X509CertSelector,setSubject(byte[] subjectDN),void,Sets the subject criterion.
X509CertSelector,setSubject(String subjectDN),void,"Denigrated, use setSubject(X500Principal) or setSubject(byte[]) instead."
X509CertSelector,setSubject(X500Principal subject),void,Sets the subject criterion.
X509CertSelector,setSubjectAlternativeNames(Collection<List<?>> names),void,Sets the subjectAlternativeNames criterion.
X509CertSelector,setSubjectKeyIdentifier(byte[] subjectKeyID),void,Sets the subjectKeyIdentifier criterion.
X509CertSelector,setSubjectPublicKey(byte[] key),void,Sets the subjectPublicKey criterion.
X509CertSelector,setSubjectPublicKey(PublicKey key),void,Sets the subjectPublicKey criterion.
X509CertSelector,setSubjectPublicKeyAlgID(String oid),void,Sets the subjectPublicKeyAlgID criterion.
X509CertSelector,toString(),String,Return a printable representation of the CertSelector.
X509CRL,equals(Object other),boolean,Compares this CRL for equality with the given object.
X509CRL,getEncoded(),abstract byte[],Returns the ASN.1 DER-encoded form of this CRL.
X509CRL,getIssuerDN(),abstract Principal,"Denigrated, replaced by getIssuerX500Principal()."
X509CRL,getIssuerX500Principal(),X500Principal,Returns the issuer (issuer distinguished name) value from the CRL as an X500Principal.
X509CRL,getNextUpdate(),abstract Date,Gets the nextUpdate date from the CRL.
X509CRL,getRevokedCertificate(BigInteger serialNumber),abstract X509CRLEntry,"Gets the CRL entry, if any, with the given certificate serialNumber."
X509CRL,getRevokedCertificate(X509Certificate certificate),X509CRLEntry,"Get the CRL entry, if any, for the given certificate."
X509CRL,getRevokedCertificates(),abstract Set<? extends X509CRLEntry>,Gets all the entries from this CRL.
X509CRL,getSigAlgName(),abstract String,Gets the signature algorithm name for the CRL signature algorithm.
X509CRL,getSigAlgOID(),abstract String,Gets the signature algorithm OID string from the CRL.
X509CRL,getSigAlgParams(),abstract byte[],Gets the DER-encoded signature algorithm parameters from this CRL's signature algorithm.
X509CRL,getSignature(),abstract byte[],Gets the signature value (the raw signature bits) from the CRL.
X509CRL,getTBSCertList(),abstract byte[],"Gets the DER-encoded CRL information, the tbsCertList from this CRL."
X509CRL,getThisUpdate(),abstract Date,Gets the thisUpdate date from the CRL.
X509CRL,getVersion(),abstract int,Gets the version (version number) value from the CRL.
X509CRL,hashCode(),int,Returns a hashcode value for this CRL from its encoded form.
X509CRL,verify(PublicKey key),abstract void,Verifies that this CRL was signed using the private key that corresponds to the given public key.
X509CRL,"verify(PublicKey key, Provider sigProvider)",void,Verifies that this CRL was signed using the private key that corresponds to the given public key.
X509CRL,"verify(PublicKey key, String sigProvider)",abstract void,Verifies that this CRL was signed using the private key that corresponds to the given public key.
X509CRLEntry,equals(Object other),boolean,Compares this CRL entry for equality with the given object.
X509CRLEntry,getCertificateIssuer(),X500Principal,Get the issuer of the X509Certificate described by this entry.
X509CRLEntry,getEncoded(),abstract byte[],"Returns the ASN.1 DER-encoded form of this CRL Entry, that is the inner SEQUENCE."
X509CRLEntry,getRevocationDate(),abstract Date,"Gets the revocation date from this X509CRLEntry, the revocationDate."
X509CRLEntry,getRevocationReason(),CRLReason,"Returns the reason the certificate has been revoked, as specified in the Reason Code extension of this CRL entry."
X509CRLEntry,getSerialNumber(),abstract BigInteger,"Gets the serial number from this X509CRLEntry, the userCertificate."
X509CRLEntry,hasExtensions(),abstract boolean,Returns true if this CRL entry has extensions.
X509CRLEntry,hashCode(),int,Returns a hashcode value for this CRL entry from its encoded form.
X509CRLEntry,toString(),abstract String,Returns a string representation of this CRL entry.
X509CRLSelector,addIssuer(X500Principal issuer),void,Adds a name to the issuerNames criterion.
X509CRLSelector,addIssuerName(byte[] name),void,Adds a name to the issuerNames criterion.
X509CRLSelector,addIssuerName(String name),void,"Denigrated, use addIssuer(X500Principal) or addIssuerName(byte[]) instead."
X509CRLSelector,clone(),Object,Returns a copy of this object.
X509CRLSelector,getCertificateChecking(),X509Certificate,Returns the certificate being checked.
X509CRLSelector,getDateAndTime(),Date,Returns the dateAndTime criterion.
X509CRLSelector,getIssuerNames(),Collection<Object>,Returns a copy of the issuerNames criterion.
X509CRLSelector,getIssuers(),Collection<X500Principal>,Returns the issuerNames criterion.
X509CRLSelector,getMaxCRL(),BigInteger,Returns the maxCRLNumber criterion.
X509CRLSelector,getMinCRL(),BigInteger,Returns the minCRLNumber criterion.
X509CRLSelector,match(CRL crl),boolean,Decides whether a CRL should be selected.
X509CRLSelector,setCertificateChecking(X509Certificate cert),void,Sets the certificate being checked.
X509CRLSelector,setDateAndTime(Date dateAndTime),void,Sets the dateAndTime criterion.
X509CRLSelector,setIssuerNames(Collection<?> names),void,Note: use setIssuers(Collection) instead or only specify the byte array form of distinguished names when using this method.
X509CRLSelector,setIssuers(Collection<X500Principal> issuers),void,Sets the issuerNames criterion.
X509CRLSelector,setMaxCRLNumber(BigInteger maxCRL),void,Sets the maxCRLNumber criterion.
X509CRLSelector,setMinCRLNumber(BigInteger minCRL),void,Sets the minCRLNumber criterion.
X509CRLSelector,toString(),String,Returns a printable representation of the X509CRLSelector.
