Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,Authenticator,1,"void setPasswordAuthentication(String host, int port, String protocol, String prompt, String scheme, String authType, URL url, PasswordAuthentication auth)",False
0,Authenticator,2,"PasswordAuthentication requestPasswordAuthentication(InetAddress addr, int port, String protocol, String prompt, String scheme)",True
0,Authenticator,3,void setDefault(Authenticator a),True
0,Authenticator,4,Authenticator getDefault(),False
0,Authenticator,5,void setRequestingHost(String host),False
1,CacheRequest,1,void abort(),True
1,CacheRequest,2,OutputStream getBody(),True
1,CacheRequest,3,void close(),False
1,CacheRequest,4,void delete(),False
1,CacheRequest,5,"void setResponseHeaders(Map<String, List<String>> headers)",False
2,CacheResponse,1,"Map<String, List<String>> getHeaders()",False
2,CacheResponse,2,InputStream getBody(),True
2,CacheResponse,3,URI getURI(),False
2,CacheResponse,4,String getCipherSuite(),False
2,CacheResponse,5,List<Certificate> getServerCertificates(),False
3,ContentHandler,1,Object getContent(URLConnection urlc),True
3,ContentHandler,2,String getContentType(URLConnection urlc),False
3,ContentHandler,3,"Object getContent(URLConnection urlc, Class[] classes)",True
3,ContentHandler,4,ContentHandler createContentHandler(String mimetype),False
3,ContentHandler,5,"void setURL(URLConnection urlc, URL url)",False
4,CookieHandler,1,CookieHandler getDefault(),True
4,CookieHandler,2,void setDefault(CookieHandler cHandler),True
4,CookieHandler,3,"Map<String, List<String>> get(URI uri, Map<String, List<String>> requestHeaders)",False
4,CookieHandler,4,"void put(URI uri, Map<String, List<String>> responseHeaders)",True
4,CookieHandler,5,void setCookiePolicy(CookiePolicy policy),False
5,CookieManager,1,void setCookiePolicy(CookiePolicy cookiePolicy),True
5,CookieManager,2,"Map<String, List<String>> get(URI uri, Map<String, List<String>> requestHeaders)",False
5,CookieManager,3,"void put(URI uri, Map<String, List<String>> responseHeaders)",True
5,CookieManager,4,"void put(URI uri, HttpCookie cookie)",False
5,CookieManager,5,"Map<URI, List<HttpCookie>> getCookieStore()",False
6,DatagramPacket,1,void setData(byte[] buf),True
6,DatagramPacket,2,byte[] getData(),True
6,DatagramPacket,3,void setLength(int length),True
6,DatagramPacket,4,int getLength(),True
6,DatagramPacket,5,SocketAddress getSocketAddress(),True
7,DatagramSocket,1,void bind(SocketAddress bindpoint),True
7,DatagramSocket,2,void close(),True
7,DatagramSocket,3,void connect(SocketAddress address),True
7,DatagramSocket,4,void disconnect(),True
7,DatagramSocket,5,void send(DatagramPacket p),True
8,DatagramSocketImpl,1,void create(),True
8,DatagramSocketImpl,2,"void bind(int port, InetAddress laddr)",True
8,DatagramSocketImpl,3,void send(DatagramPacket p),True
8,DatagramSocketImpl,4,void receive(DatagramPacket p),True
8,DatagramSocketImpl,5,void close(),True
9,HttpCookie,1,String getName(),True
9,HttpCookie,2,String getValue(),True
9,HttpCookie,3,void setPath(String path),True
9,HttpCookie,4,void setMaxAge(long expiry),True
9,HttpCookie,5,void setSecure(boolean secure),True
10,HttpURLConnection,1,void setRequestMethod(String method),True
10,HttpURLConnection,2,int getResponseCode(),True
10,HttpURLConnection,3,"void setRequestProperty(String key, String value)",False
10,HttpURLConnection,4,InputStream getInputStream(),False
10,HttpURLConnection,5,void connect(),False
11,IDN,1,String toASCII(String input),True
11,IDN,2,String toUnicode(String input),True
11,IDN,3,boolean isLDHLabel(String label),False
11,IDN,4,boolean isValid(String input),False
11,IDN,5,String nameprep(String input),False
12,Inet4Address,1,Inet4Address getByAddress(byte[] addr),False
12,Inet4Address,2,"Inet4Address getByAddress(String host, byte[] addr)",False
12,Inet4Address,3,Inet4Address getByName(String host),False
12,Inet4Address,4,Inet4Address getLocalHost(),False
12,Inet4Address,5,Inet4Address getLoopbackAddress(),False
13,Inet6Address,1,Inet6Address getByAddress(byte[] addr),False
13,Inet6Address,2,int getScopeId(),True
13,Inet6Address,3,boolean isAnyLocalAddress(),True
13,Inet6Address,4,boolean isLinkLocalAddress(),True
13,Inet6Address,5,boolean isSiteLocalAddress(),True
14,InetAddress,1,InetAddress getByName(String host),True
14,InetAddress,2,byte[] getAddress(),True
14,InetAddress,3,String getHostAddress(),True
14,InetAddress,4,String getHostName(),True
14,InetAddress,5,boolean isReachable(int timeout),True
15,InetSocketAddress,1,int getPort(),True
15,InetSocketAddress,2,String getHostName(),True
15,InetSocketAddress,3,InetAddress getAddress(),True
15,InetSocketAddress,4,boolean isUnresolved(),True
15,InetSocketAddress,5,String toString(),True
16,InterfaceAddress,1,InetAddress getAddress(),True
16,InterfaceAddress,2,short getNetworkPrefixLength(),True
16,InterfaceAddress,3,boolean equals(Object obj),True
16,InterfaceAddress,4,int hashCode(),True
16,InterfaceAddress,5,String toString(),True
17,JarURLConnection,1,JarFile getJarFile(),True
17,JarURLConnection,2,JarEntry getJarEntry(),True
17,JarURLConnection,3,Attributes getAttributes(),True
17,JarURLConnection,4,Manifest getManifest(),True
17,JarURLConnection,5,void setUseCaches(boolean useCaches),False
18,MulticastSocket,1,"void joinGroup(SocketAddress mcastaddr, NetworkInterface netIf)",True
18,MulticastSocket,2,"void leaveGroup(SocketAddress mcastaddr, NetworkInterface netIf)",True
18,MulticastSocket,3,void setInterface(InetAddress inf),True
18,MulticastSocket,4,void setTimeToLive(int ttl),True
18,MulticastSocket,5,void setLoopbackMode(boolean disable),True
19,NetPermission,1,"void checkConnect(String host, int port)",False
19,NetPermission,2,void checkListen(int port),False
19,NetPermission,3,"void checkAccept(String host, int port)",False
19,NetPermission,4,void checkMulticast(InetAddress maddr),False
19,NetPermission,5,void checkPropertiesAccess(),False
20,NetworkInterface,1,String getName(),True
20,NetworkInterface,2,Enumeration<InetAddress> getInetAddresses(),True
20,NetworkInterface,3,boolean isUp(),True
20,NetworkInterface,4,boolean isLoopback(),True
20,NetworkInterface,5,boolean isVirtual(),True
21,PasswordAuthentication,1,String getUserName(),True
21,PasswordAuthentication,2,char[] getPassword(),True
21,PasswordAuthentication,3,void setUserName(String username),False
21,PasswordAuthentication,4,void setPassword(char[] password),False
21,PasswordAuthentication,5,boolean equals(Object obj),False
22,Proxy,1,Proxy.Type type(),True
22,Proxy,2,SocketAddress address(),True
22,Proxy,3,String toString(),True
22,Proxy,4,boolean equals(Object obj),True
22,Proxy,5,int hashCode(),True
23,ProxySelector,1,List<Proxy> select(URI uri),True
23,ProxySelector,2,"void connectFailed(URI uri, SocketAddress sa, IOException ioe)",True
23,ProxySelector,3,List<Proxy> select(URI uri),True
23,ProxySelector,4,"void connectFailed(URI uri, SocketAddress sa, IOException ioe)",True
23,ProxySelector,5,ProxySelector getDefault(),True
24,ResponseCache,1,ResponseCache getDefault(),True
24,ResponseCache,2,void setDefault(ResponseCache responseCache),True
24,ResponseCache,3,"CacheResponse get(URI uri, String requestMethod, Map<String, List<String>> requestHeaders)",True
24,ResponseCache,4,"CacheRequest put(URI uri, URLConnection connection)",True
24,ResponseCache,5,"void delete(URI uri, String requestMethod, Map<String, List<String>> requestHeaders)",False
25,SecureCacheResponse,1,"Map<String, List<String>> getHeaders()",False
25,SecureCacheResponse,2,InputStream getBody(),False
25,SecureCacheResponse,3,String getCipherSuite(),True
25,SecureCacheResponse,4,List<Certificate> getLocalCertificateChain(),True
25,SecureCacheResponse,5,List<Certificate> getServerCertificateChain(),True
26,ServerSocket,1,void bind(SocketAddress endpoint),True
26,ServerSocket,2,Socket accept(),True
26,ServerSocket,3,void close(),True
26,ServerSocket,4,InetAddress getInetAddress(),True
26,ServerSocket,5,int getLocalPort(),True
27,Socket,1,void connect(SocketAddress endpoint),True
27,Socket,2,InputStream getInputStream(),True
27,Socket,3,OutputStream getOutputStream(),True
27,Socket,4,void setSoTimeout(int timeout),True
27,Socket,5,void close(),True
28,SocketAddress,1,SocketAddress getAddress(),False
28,SocketAddress,2,boolean equals(Object obj),False
28,SocketAddress,3,int hashCode(),False
28,SocketAddress,4,String toString(),False
28,SocketAddress,5,"SocketAddress createSocketAddress(String hostname, int port)",False
29,SocketImpl,1,"void setOption(int optID, Object value)",False
29,SocketImpl,2,Object getOption(int optID),False
29,SocketImpl,3,void create(boolean stream),True
29,SocketImpl,4,"void connect(String host, int port)",True
29,SocketImpl,5,"void bind(InetAddress host, int port)",True
30,SocketPermission,1,"void checkConnect(String host, int port)",False
30,SocketPermission,2,void checkListen(int port),False
30,SocketPermission,3,"void checkAccept(String host, int port)",False
30,SocketPermission,4,void checkMulticast(InetAddress maddr),False
30,SocketPermission,5,void checkResolve(String host),False
31,StandardSocketOptions,1,StandardSocketOptions<Boolean> SO_KEEPALIVE(),False
31,StandardSocketOptions,2,StandardSocketOptions<Integer> SO_RCVBUF(),False
31,StandardSocketOptions,3,StandardSocketOptions<Integer> SO_SNDBUF(),False
31,StandardSocketOptions,4,StandardSocketOptions<Integer> TCP_NODELAY(),False
31,StandardSocketOptions,5,StandardSocketOptions<Boolean> SO_REUSEADDR(),False
32,URI,1,String getScheme(),True
32,URI,2,String getHost(),True
32,URI,3,int getPort(),True
32,URI,4,String getPath(),True
32,URI,5,String getQuery(),True
33,URL,1,String getFile(),True
33,URL,2,String getHost(),True
33,URL,3,int getPort(),True
33,URL,4,String getProtocol(),True
33,URL,5,String toString(),True
34,URLClassLoader,1,Class<?> findClass(String name),True
34,URLClassLoader,2,URL findResource(String name),True
34,URLClassLoader,3,Enumeration<URL> findResources(String name),True
34,URLClassLoader,4,void close(),True
34,URLClassLoader,5,void addURL(URL url),True
35,URLConnection,1,void connect(),True
35,URLConnection,2,InputStream getInputStream(),True
35,URLConnection,3,OutputStream getOutputStream(),True
35,URLConnection,4,int getContentLength(),True
35,URLConnection,5,String getContentType(),True
36,URLDecoder,1,String decode(String s),True
36,URLDecoder,2,"String decode(String s, String enc)",True
36,URLDecoder,3,"String decode(String s, Charset charset)",False
36,URLDecoder,4,"String decode(String s, String enc, boolean plusAsBlank)",False
36,URLDecoder,5,"String decode(String s, Charset charset, boolean plusAsBlank)",False
37,URLEncoder,1,String encode(String s),True
37,URLEncoder,2,"String encode(String s, String enc)",True
37,URLEncoder,3,"String encode(String s, Charset charset)",False
37,URLEncoder,4,"String encode(String s, CharsetEncoder enc)",False
37,URLEncoder,5,"String encode(String s, CharsetEncoder enc, CharBuffer cb)",False
38,URLPermission,1,String getActions(),True
38,URLPermission,2,String getHost(),False
38,URLPermission,3,int getPort(),False
38,URLPermission,4,String getProtocol(),False
38,URLPermission,5,String getURL(),False
39,URLStreamHandler,1,URLConnection openConnection(URL u),True
39,URLStreamHandler,2,"void parseURL(URL u, String spec, int start, int limit)",True
39,URLStreamHandler,3,int getDefaultPort(),True
39,URLStreamHandler,4,"boolean equals(URL u1, URL u2)",True
39,URLStreamHandler,5,int hashCode(URL u),True
