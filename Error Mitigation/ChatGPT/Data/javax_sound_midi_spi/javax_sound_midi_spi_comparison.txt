Sample: 0 MidiDeviceProvider
----------------------------------------------------------------
1. MidiDevice.Info[] getDeviceInfo(): This method returns an array of MidiDevice.Info objects representing the available devices provided by this MidiDeviceProvider.
2. MidiDevice getDevice(MidiDevice.Info info): This method returns a new instance of the MidiDevice represented by the specified MidiDevice.Info object.
3. boolean isDeviceSupported(MidiDevice.Info info): This method checks if the specified MidiDevice.Info object represents a supported device by this MidiDeviceProvider.
4. MidiDevice.Info[] getDeviceInfo(): This method returns an array of MidiDevice.Info objects representing the available devices provided by this MidiDeviceProvider.
5. MidiDevice getDevice(MidiDevice.Info info): This method returns a new instance of the MidiDevice represented by the specified MidiDevice.Info object.
================================================================

Sample: 1 MidiFileReader
----------------------------------------------------------------
1. `Sequence getSequence(File file)`: This method returns a Sequence object representing the MIDI data in the specified File.
2. `Sequence getSequence(InputStream stream)`: This method returns a Sequence object representing the MIDI data read from the specified InputStream.
3. `Sequence getSequence(URL url)`: This method returns a Sequence object representing the MIDI data read from the specified URL.
4. `int[] getMidiFileTypes()`: This method returns an array of supported MIDI file types.
5. `int[] getMidiFileTypes(Sequence sequence)`: This method returns an array of supported MIDI file types for the specified Sequence.
================================================================

Sample: 2 MidiFileWriter
----------------------------------------------------------------
1. `int[] getMidiFileTypes()`: This method returns an array of supported MIDI file types.
2. `int[] getMidiFileTypes(Sequence sequence)`: This method returns an array of supported MIDI file types for the specified sequence.
3. `int[] getMidiFileTypes(Sequence sequence, int[] fileTypes)`: This method returns an array of supported MIDI file types for the specified sequence and file types.
4. `int write(Sequence in, int fileType, OutputStream out)`: This method writes a sequence to the specified output stream in the specified file type.
5. `int write(Sequence in, int fileType, File file)`: This method writes a sequence to the specified file in the specified file type.
================================================================

Sample: 3 SoundbankReader
----------------------------------------------------------------
1. `Soundbank getSoundbank(URL url)`: This method returns a Soundbank object by reading from the specified URL.
2. `Soundbank getSoundbank(InputStream stream)`: This method returns a Soundbank object by reading from the specified InputStream.
3. `Soundbank getSoundbank(File file)`: This method returns a Soundbank object by reading from the specified File.
4. `Soundbank getSoundbank(URL url, String name)`: This method returns a Soundbank object with the specified name by reading from the specified URL.
5. `Soundbank getSoundbank(InputStream stream, String name)`: This method returns a Soundbank object with the specified name by reading from the specified InputStream.
================================================================

