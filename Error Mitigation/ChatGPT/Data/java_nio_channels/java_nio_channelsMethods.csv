ClassName,Method,Return Type,Description
AsynchronousChannelGroup,"awaitTermination(long timeout, TimeUnit unit)",abstract boolean,Awaits termination of the group.
AsynchronousChannelGroup,isShutdown(),abstract boolean,Tells whether or not this asynchronous channel group is shutdown.
AsynchronousChannelGroup,isTerminated(),abstract boolean,Tells whether or not this group has terminated.
AsynchronousChannelGroup,provider(),AsynchronousChannelProvider,Returns the provider that created this channel group.
AsynchronousChannelGroup,shutdown(),abstract void,Initiates an orderly shutdown of the group.
AsynchronousChannelGroup,shutdownNow(),abstract void,Shuts down the group and closes all open channels in the group.
AsynchronousChannelGroup,"withCachedThreadPool(ExecutorService executor, int initialSize)",static AsynchronousChannelGroup,Creates an asynchronous channel group with a given thread pool that creates new threads as needed.
AsynchronousChannelGroup,"withFixedThreadPool(int nThreads, ThreadFactory threadFactory)",static AsynchronousChannelGroup,Creates an asynchronous channel group with a fixed thread pool.
AsynchronousChannelGroup,withThreadPool(ExecutorService executor),static AsynchronousChannelGroup,Creates an asynchronous channel group with a given thread pool.
AsynchronousFileChannel,force(boolean metaData),abstract void,Forces any updates to this channel's file to be written to the storage device that contains it.
AsynchronousFileChannel,lock(),Future<FileLock>,Acquires an exclusive lock on this channel's file.
AsynchronousFileChannel,"lock(A attachment, CompletionHandler<FileLock,? super A> handler)",<A> void,Acquires an exclusive lock on this channel's file.
AsynchronousFileChannel,"lock(long position, long size, boolean shared)",abstract Future<FileLock>,Acquires a lock on the given region of this channel's file.
AsynchronousFileChannel,"lock(long position, long size, boolean shared, A attachment, CompletionHandler<FileLock,? super A> handler)",abstract <A> void,Acquires a lock on the given region of this channel's file.
AsynchronousFileChannel,"open(Path file, OpenOption... options)",static AsynchronousFileChannel,"Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file."
AsynchronousFileChannel,"open(Path file, Set<? extends OpenOption> options, ExecutorService executor, FileAttribute<?>... attrs)",static AsynchronousFileChannel,"Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file."
AsynchronousFileChannel,"read(ByteBuffer dst, long position)",abstract Future<Integer>,"Reads a sequence of bytes from this channel into the given buffer, starting at the given file position."
AsynchronousFileChannel,"read(ByteBuffer dst, long position, A attachment, CompletionHandler<Integer,? super A> handler)",abstract <A> void,"Reads a sequence of bytes from this channel into the given buffer, starting at the given file position."
AsynchronousFileChannel,size(),abstract long,Returns the current size of this channel's file.
AsynchronousFileChannel,truncate(long size),abstract AsynchronousFileChannel,Truncates this channel's file to the given size.
AsynchronousFileChannel,tryLock(),FileLock,Attempts to acquire an exclusive lock on this channel's file.
AsynchronousFileChannel,"tryLock(long position, long size, boolean shared)",abstract FileLock,Attempts to acquire a lock on the given region of this channel's file.
AsynchronousFileChannel,"write(ByteBuffer src, long position)",abstract Future<Integer>,"Writes a sequence of bytes to this channel from the given buffer, starting at the given file position."
AsynchronousFileChannel,"write(ByteBuffer src, long position, A attachment, CompletionHandler<Integer,? super A> handler)",abstract <A> void,"Writes a sequence of bytes to this channel from the given buffer, starting at the given file position."
AsynchronousServerSocketChannel,accept(),abstract Future<AsynchronousSocketChannel>,Accepts a connection.
AsynchronousServerSocketChannel,"accept(A attachment, CompletionHandler<AsynchronousSocketChannel,? super A> handler)",abstract <A> void,Accepts a connection.
AsynchronousServerSocketChannel,bind(SocketAddress local),AsynchronousServerSocketChannel,Binds the channel's socket to a local address and configures the socket to listen for connections.
AsynchronousServerSocketChannel,"bind(SocketAddress local, int backlog)",abstract AsynchronousServerSocketChannel,Binds the channel's socket to a local address and configures the socket to listen for connections.
AsynchronousServerSocketChannel,getLocalAddress(),abstract SocketAddress,Returns the socket address that this channel's socket is bound to.
AsynchronousServerSocketChannel,open(),static AsynchronousServerSocketChannel,Opens an asynchronous server-socket channel.
AsynchronousServerSocketChannel,open(AsynchronousChannelGroup group),static AsynchronousServerSocketChannel,Opens an asynchronous server-socket channel.
AsynchronousServerSocketChannel,provider(),AsynchronousChannelProvider,Returns the provider that created this channel.
AsynchronousServerSocketChannel,"setOption(SocketOption<T> name, T value)",abstract <T> AsynchronousServerSocketChannel,Sets the value of a socket option.
AsynchronousSocketChannel,bind(SocketAddress local),abstract AsynchronousSocketChannel,Binds the channel's socket to a local address.
AsynchronousSocketChannel,connect(SocketAddress remote),abstract Future<Void>,Connects this channel.
AsynchronousSocketChannel,"connect(SocketAddress remote, A attachment, CompletionHandler<Void,? super A> handler)",abstract <A> void,Connects this channel.
AsynchronousSocketChannel,getLocalAddress(),abstract SocketAddress,Returns the socket address that this channel's socket is bound to.
AsynchronousSocketChannel,getRemoteAddress(),abstract SocketAddress,Returns the remote address to which this channel's socket is connected.
AsynchronousSocketChannel,open(),static AsynchronousSocketChannel,Opens an asynchronous socket channel.
AsynchronousSocketChannel,open(AsynchronousChannelGroup group),static AsynchronousSocketChannel,Opens an asynchronous socket channel.
AsynchronousSocketChannel,provider(),AsynchronousChannelProvider,Returns the provider that created this channel.
AsynchronousSocketChannel,read(ByteBuffer dst),abstract Future<Integer>,Reads a sequence of bytes from this channel into the given buffer.
AsynchronousSocketChannel,"read(ByteBuffer[] dsts, int offset, int length, long timeout, TimeUnit unit, A attachment, CompletionHandler<Long,? super A> handler)",abstract <A> void,Reads a sequence of bytes from this channel into a subsequence of the given buffers.
AsynchronousSocketChannel,"read(ByteBuffer dst, A attachment, CompletionHandler<Integer,? super A> handler)",<A> void,Reads a sequence of bytes from this channel into the given buffer.
AsynchronousSocketChannel,"read(ByteBuffer dst, long timeout, TimeUnit unit, A attachment, CompletionHandler<Integer,? super A> handler)",abstract <A> void,Reads a sequence of bytes from this channel into the given buffer.
AsynchronousSocketChannel,"setOption(SocketOption<T> name, T value)",abstract <T> AsynchronousSocketChannel,Sets the value of a socket option.
AsynchronousSocketChannel,shutdownInput(),abstract AsynchronousSocketChannel,Shutdown the connection for reading without closing the channel.
AsynchronousSocketChannel,shutdownOutput(),abstract AsynchronousSocketChannel,Shutdown the connection for writing without closing the channel.
AsynchronousSocketChannel,write(ByteBuffer src),abstract Future<Integer>,Writes a sequence of bytes to this channel from the given buffer.
AsynchronousSocketChannel,"write(ByteBuffer[] srcs, int offset, int length, long timeout, TimeUnit unit, A attachment, CompletionHandler<Long,? super A> handler)",abstract <A> void,Writes a sequence of bytes to this channel from a subsequence of the given buffers.
AsynchronousSocketChannel,"write(ByteBuffer src, A attachment, CompletionHandler<Integer,? super A> handler)",<A> void,Writes a sequence of bytes to this channel from the given buffer.
AsynchronousSocketChannel,"write(ByteBuffer src, long timeout, TimeUnit unit, A attachment, CompletionHandler<Integer,? super A> handler)",abstract <A> void,Writes a sequence of bytes to this channel from the given buffer.
Channels,newChannel(InputStream in),static ReadableByteChannel,Constructs a channel that reads bytes from the given stream.
Channels,newChannel(OutputStream out),static WritableByteChannel,Constructs a channel that writes bytes to the given stream.
Channels,newInputStream(AsynchronousByteChannel ch),static InputStream,Constructs a stream that reads bytes from the given channel.
Channels,newInputStream(ReadableByteChannel ch),static InputStream,Constructs a stream that reads bytes from the given channel.
Channels,newOutputStream(AsynchronousByteChannel ch),static OutputStream,Constructs a stream that writes bytes to the given channel.
Channels,newOutputStream(WritableByteChannel ch),static OutputStream,Constructs a stream that writes bytes to the given channel.
Channels,"newReader(ReadableByteChannel ch, CharsetDecoder dec, int minBufferCap)",static Reader,Constructs a reader that decodes bytes from the given channel using the given decoder.
Channels,"newReader(ReadableByteChannel ch, String csName)",static Reader,Constructs a reader that decodes bytes from the given channel according to the named charset.
Channels,"newWriter(WritableByteChannel ch, CharsetEncoder enc, int minBufferCap)",static Writer,Constructs a writer that encodes characters using the given encoder and writes the resulting bytes to the given channel.
Channels,"newWriter(WritableByteChannel ch, String csName)",static Writer,Constructs a writer that encodes characters according to the named charset and writes the resulting bytes to the given channel.
DatagramChannel,bind(SocketAddress local),abstract DatagramChannel,Binds the channel's socket to a local address.
DatagramChannel,connect(SocketAddress remote),abstract DatagramChannel,Connects this channel's socket.
DatagramChannel,disconnect(),abstract DatagramChannel,Disconnects this channel's socket.
DatagramChannel,getLocalAddress(),abstract SocketAddress,Returns the socket address that this channel's socket is bound to.
DatagramChannel,getRemoteAddress(),abstract SocketAddress,Returns the remote address to which this channel's socket is connected.
DatagramChannel,isConnected(),abstract boolean,Tells whether or not this channel's socket is connected.
DatagramChannel,open(),static DatagramChannel,Opens a datagram channel.
DatagramChannel,open(ProtocolFamily family),static DatagramChannel,Opens a datagram channel.
DatagramChannel,read(ByteBuffer dst),abstract int,Reads a datagram from this channel.
DatagramChannel,read(ByteBuffer[] dsts),long,Reads a datagram from this channel.
DatagramChannel,"read(ByteBuffer[] dsts, int offset, int length)",abstract long,Reads a datagram from this channel.
DatagramChannel,receive(ByteBuffer dst),abstract SocketAddress,Receives a datagram via this channel.
DatagramChannel,"send(ByteBuffer src, SocketAddress target)",abstract int,Sends a datagram via this channel.
DatagramChannel,"setOption(SocketOption<T> name, T value)",abstract <T> DatagramChannel,Sets the value of a socket option.
DatagramChannel,socket(),abstract DatagramSocket,Retrieves a datagram socket associated with this channel.
DatagramChannel,validOps(),int,Returns an operation set identifying this channel's supported operations.
DatagramChannel,write(ByteBuffer src),abstract int,Writes a datagram to this channel.
DatagramChannel,write(ByteBuffer[] srcs),long,Writes a datagram to this channel.
DatagramChannel,"write(ByteBuffer[] srcs, int offset, int length)",abstract long,Writes a datagram to this channel.
FileChannel,force(boolean metaData),abstract void,Forces any updates to this channel's file to be written to the storage device that contains it.
FileChannel,lock(),FileLock,Acquires an exclusive lock on this channel's file.
FileChannel,"lock(long position, long size, boolean shared)",abstract FileLock,Acquires a lock on the given region of this channel's file.
FileChannel,"map(FileChannel.MapMode mode, long position, long size)",abstract MappedByteBuffer,Maps a region of this channel's file directly into memory.
FileChannel,"open(Path path, OpenOption... options)",static FileChannel,"Opens or creates a file, returning a file channel to access the file."
FileChannel,"open(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs)",static FileChannel,"Opens or creates a file, returning a file channel to access the file."
FileChannel,position(),abstract long,Returns this channel's file position.
FileChannel,position(long newPosition),abstract FileChannel,Sets this channel's file position.
FileChannel,read(ByteBuffer dst),abstract int,Reads a sequence of bytes from this channel into the given buffer.
FileChannel,read(ByteBuffer[] dsts),long,Reads a sequence of bytes from this channel into the given buffers.
FileChannel,"read(ByteBuffer[] dsts, int offset, int length)",abstract long,Reads a sequence of bytes from this channel into a subsequence of the given buffers.
FileChannel,"read(ByteBuffer dst, long position)",abstract int,"Reads a sequence of bytes from this channel into the given buffer, starting at the given file position."
FileChannel,size(),abstract long,Returns the current size of this channel's file.
FileChannel,"transferFrom(ReadableByteChannel src, long position, long count)",abstract long,Transfers bytes into this channel's file from the given readable byte channel.
FileChannel,"transferTo(long position, long count, WritableByteChannel target)",abstract long,Transfers bytes from this channel's file to the given writable byte channel.
FileChannel,truncate(long size),abstract FileChannel,Truncates this channel's file to the given size.
FileChannel,tryLock(),FileLock,Attempts to acquire an exclusive lock on this channel's file.
FileChannel,"tryLock(long position, long size, boolean shared)",abstract FileLock,Attempts to acquire a lock on the given region of this channel's file.
FileChannel,write(ByteBuffer src),abstract int,Writes a sequence of bytes to this channel from the given buffer.
FileChannel,write(ByteBuffer[] srcs),long,Writes a sequence of bytes to this channel from the given buffers.
FileChannel,"write(ByteBuffer[] srcs, int offset, int length)",abstract long,Writes a sequence of bytes to this channel from a subsequence of the given buffers.
FileChannel,"write(ByteBuffer src, long position)",abstract int,"Writes a sequence of bytes to this channel from the given buffer, starting at the given file position."
FileChannel.MapMode,toString(),String,Returns a string describing this file-mapping mode.
FileLock,acquiredBy(),Channel,Returns the channel upon whose file this lock was acquired.
FileLock,channel(),FileChannel,Returns the file channel upon whose file this lock was acquired.
FileLock,close(),void,This method invokes the release() method.
FileLock,isShared(),boolean,Tells whether this lock is shared.
FileLock,isValid(),abstract boolean,Tells whether or not this lock is valid.
FileLock,"overlaps(long position, long size)",boolean,Tells whether or not this lock overlaps the given lock range.
FileLock,position(),long,Returns the position within the file of the first byte of the locked region.
FileLock,release(),abstract void,Releases this lock.
FileLock,size(),long,Returns the size of the locked region in bytes.
FileLock,toString(),String,"Returns a string describing the range, type, and validity of this lock."
MembershipKey,block(InetAddress source),abstract MembershipKey,Block multicast datagrams from the given source address.
MembershipKey,channel(),abstract MulticastChannel,Returns the channel for which this membership key was created.
MembershipKey,drop(),abstract void,Drop membership.
MembershipKey,group(),abstract InetAddress,Returns the multicast group for which this membership key was created.
MembershipKey,isValid(),abstract boolean,Tells whether or not this membership is valid.
MembershipKey,networkInterface(),abstract NetworkInterface,Returns the network interface for which this membership key was created.
MembershipKey,sourceAddress(),abstract InetAddress,"Returns the source address if this membership key is source-specific, or null if this membership is not source-specific."
MembershipKey,unblock(InetAddress source),abstract MembershipKey,Unblock multicast datagrams from the given source address that was previously blocked using the block method.
Pipe,open(),static Pipe,Opens a pipe.
Pipe,sink(),abstract Pipe.SinkChannel,Returns this pipe's sink channel.
Pipe,source(),abstract Pipe.SourceChannel,Returns this pipe's source channel.
Pipe.SinkChannel,validOps(),int,Returns an operation set identifying this channel's supported operations.
Pipe.SourceChannel,validOps(),int,Returns an operation set identifying this channel's supported operations.
SelectableChannel,blockingLock(),abstract Object,Retrieves the object upon which the configureBlocking and register methods synchronize.
SelectableChannel,configureBlocking(boolean block),abstract SelectableChannel,Adjusts this channel's blocking mode.
SelectableChannel,isBlocking(),abstract boolean,Tells whether or not every I/O operation on this channel will block until it completes.
SelectableChannel,isRegistered(),abstract boolean,Tells whether or not this channel is currently registered with any selectors.
SelectableChannel,keyFor(Selector sel),abstract SelectionKey,Retrieves the key representing the channel's registration with the given selector.
SelectableChannel,provider(),abstract SelectorProvider,Returns the provider that created this channel.
SelectableChannel,"register(Selector sel, int ops)",SelectionKey,"Registers this channel with the given selector, returning a selection key."
SelectableChannel,"register(Selector sel, int ops, Object att)",abstract SelectionKey,"Registers this channel with the given selector, returning a selection key."
SelectableChannel,validOps(),abstract int,Returns an operation set identifying this channel's supported operations.
SelectionKey,attach(Object ob),Object,Attaches the given object to this key.
SelectionKey,attachment(),Object,Retrieves the current attachment.
SelectionKey,cancel(),abstract void,Requests that the registration of this key's channel with its selector be cancelled.
SelectionKey,channel(),abstract SelectableChannel,Returns the channel for which this key was created.
SelectionKey,interestOps(),abstract int,Retrieves this key's interest set.
SelectionKey,interestOps(int ops),abstract SelectionKey,Sets this key's interest set to the given value.
SelectionKey,isAcceptable(),boolean,Tests whether this key's channel is ready to accept a new socket connection.
SelectionKey,isConnectable(),boolean,"Tests whether this key's channel has either finished, or failed to finish, its socket-connection operation."
SelectionKey,isReadable(),boolean,Tests whether this key's channel is ready for reading.
SelectionKey,isValid(),abstract boolean,Tells whether or not this key is valid.
SelectionKey,isWritable(),boolean,Tests whether this key's channel is ready for writing.
SelectionKey,readyOps(),abstract int,Retrieves this key's ready-operation set.
SelectionKey,selector(),abstract Selector,Returns the selector for which this key was created.
Selector,close(),abstract void,Closes this selector.
Selector,isOpen(),abstract boolean,Tells whether or not this selector is open.
Selector,keys(),abstract Set<SelectionKey>,Returns this selector's key set.
Selector,open(),static Selector,Opens a selector.
Selector,provider(),abstract SelectorProvider,Returns the provider that created this channel.
Selector,select(),abstract int,Selects a set of keys whose corresponding channels are ready for I/O operations.
Selector,select(long timeout),abstract int,Selects a set of keys whose corresponding channels are ready for I/O operations.
Selector,selectedKeys(),abstract Set<SelectionKey>,Returns this selector's selected-key set.
Selector,selectNow(),abstract int,Selects a set of keys whose corresponding channels are ready for I/O operations.
Selector,wakeup(),abstract Selector,Causes the first selection operation that has not yet returned to return immediately.
ServerSocketChannel,accept(),abstract SocketChannel,Accepts a connection made to this channel's socket.
ServerSocketChannel,bind(SocketAddress local),ServerSocketChannel,Binds the channel's socket to a local address and configures the socket to listen for connections.
ServerSocketChannel,"bind(SocketAddress local, int backlog)",abstract ServerSocketChannel,Binds the channel's socket to a local address and configures the socket to listen for connections.
ServerSocketChannel,getLocalAddress(),abstract SocketAddress,Returns the socket address that this channel's socket is bound to.
ServerSocketChannel,open(),static ServerSocketChannel,Opens a server-socket channel.
ServerSocketChannel,"setOption(SocketOption<T> name, T value)",abstract <T> ServerSocketChannel,Sets the value of a socket option.
ServerSocketChannel,socket(),abstract ServerSocket,Retrieves a server socket associated with this channel.
ServerSocketChannel,validOps(),int,Returns an operation set identifying this channel's supported operations.
SocketChannel,bind(SocketAddress local),abstract SocketChannel,Binds the channel's socket to a local address.
SocketChannel,connect(SocketAddress remote),abstract boolean,Connects this channel's socket.
SocketChannel,finishConnect(),abstract boolean,Finishes the process of connecting a socket channel.
SocketChannel,getLocalAddress(),abstract SocketAddress,Returns the socket address that this channel's socket is bound to.
SocketChannel,getRemoteAddress(),abstract SocketAddress,Returns the remote address to which this channel's socket is connected.
SocketChannel,isConnected(),abstract boolean,Tells whether or not this channel's network socket is connected.
SocketChannel,isConnectionPending(),abstract boolean,Tells whether or not a connection operation is in progress on this channel.
SocketChannel,open(),static SocketChannel,Opens a socket channel.
SocketChannel,open(SocketAddress remote),static SocketChannel,Opens a socket channel and connects it to a remote address.
SocketChannel,read(ByteBuffer dst),abstract int,Reads a sequence of bytes from this channel into the given buffer.
SocketChannel,read(ByteBuffer[] dsts),long,Reads a sequence of bytes from this channel into the given buffers.
SocketChannel,"read(ByteBuffer[] dsts, int offset, int length)",abstract long,Reads a sequence of bytes from this channel into a subsequence of the given buffers.
SocketChannel,"setOption(SocketOption<T> name, T value)",abstract <T> SocketChannel,Sets the value of a socket option.
SocketChannel,shutdownInput(),abstract SocketChannel,Shutdown the connection for reading without closing the channel.
SocketChannel,shutdownOutput(),abstract SocketChannel,Shutdown the connection for writing without closing the channel.
SocketChannel,socket(),abstract Socket,Retrieves a socket associated with this channel.
SocketChannel,validOps(),int,Returns an operation set identifying this channel's supported operations.
SocketChannel,write(ByteBuffer src),abstract int,Writes a sequence of bytes to this channel from the given buffer.
SocketChannel,write(ByteBuffer[] srcs),long,Writes a sequence of bytes to this channel from the given buffers.
SocketChannel,"write(ByteBuffer[] srcs, int offset, int length)",abstract long,Writes a sequence of bytes to this channel from a subsequence of the given buffers.
