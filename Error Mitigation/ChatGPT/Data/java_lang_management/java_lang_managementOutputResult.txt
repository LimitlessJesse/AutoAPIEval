Sample: LockInfo_1
----------------------------------------------------------------
stdout:
Class Name: java.lang.Object

================================================================

Sample: LockInfo_2
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/LockInfo_2.java:6: error: constructor LockInfo in class LockInfo cannot be applied to given types;
        LockInfo lockInfo = new LockInfo(lock);
                            ^
  required: Object
  found:    Object
  reason: LockInfo(Object) is not public in LockInfo; cannot be accessed from outside package
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: LockInfo_3
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/LockInfo_3.java:5: error: incompatible types: Object cannot be converted to String
        LockInfo lock = new LockInfo(new Object(), 123);
                                     ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ManagementFactory_1
----------------------------------------------------------------
stdout:
sun.management.MemoryImpl@646007f4

================================================================

Sample: ManagementFactory_2
----------------------------------------------------------------
stdout:
6

================================================================

Sample: ManagementFactory_3
----------------------------------------------------------------
stdout:
Operating System Name: Linux
Operating System Version: 5.15.0-117-generic
Operating System Arch: amd64

================================================================

Sample: ManagementFactory_4
----------------------------------------------------------------
stdout:
Name: 1556270@wrybill
Class Path: .
Library Path: /usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
VM Version: 17.0.12+7-Ubuntu-1ubuntu220.04

================================================================

Sample: ManagementFactory_5
----------------------------------------------------------------
stdout:
Loaded Class Count: 2329
Total Loaded Class Count: 2329
Unloaded Class Count: 0

================================================================

Sample: MemoryNotificationInfo_1
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/MemoryNotificationInfo_1.java:5: error: no suitable constructor found for MemoryNotificationInfo(no arguments)
        MemoryNotificationInfo info = new MemoryNotificationInfo() {
                                      ^
    constructor MemoryNotificationInfo.MemoryNotificationInfo(String,MemoryUsage,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor MemoryNotificationInfo.MemoryNotificationInfo(CompositeData) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: MemoryNotificationInfo_2
----------------------------------------------------------------
stdout:
Init: 100
Used: 200
Committed: 300
Max: 400

================================================================

Sample: MemoryUsage_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: committed = 200 should be < max = 20
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:166)
	at MemoryUsage_1.main(MemoryUsage_1.java:5)

================================================================

Sample: MemoryUsage_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: used = 50 should be <= committed = 30
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:162)
	at MemoryUsage_2.main(MemoryUsage_2.java:5)

================================================================

Sample: MemoryUsage_3
----------------------------------------------------------------
stdout:
Committed Memory: 300 bytes

================================================================

Sample: MemoryUsage_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: used = 2048 should be <= committed = 512
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:162)
	at MemoryUsage_4.main(MemoryUsage_4.java:5)

================================================================

Sample: MemoryUsage_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: used = 50 should be <= committed = 20
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:162)
	at MemoryUsage_5.main(MemoryUsage_5.java:5)

================================================================

Sample: MonitorInfo_1
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/MonitorInfo_1.java:5: error: constructor MonitorInfo in class MonitorInfo cannot be applied to given types;
        MonitorInfo monitorInfo = new MonitorInfo();
                                  ^
  required: String,int,int,StackTraceElement
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: ThreadInfo_1
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/ThreadInfo_1.java:5: error: no suitable constructor found for ThreadInfo(no arguments)
        ThreadInfo threadInfo = new ThreadInfo();
                                ^
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[],Object[],int[],Object[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(CompositeData) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: ThreadInfo_2
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/ThreadInfo_2.java:5: error: no suitable constructor found for ThreadInfo(no arguments)
        ThreadInfo threadInfo = new ThreadInfo();
                                ^
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[],Object[],int[],Object[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(CompositeData) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: ThreadInfo_3
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/ThreadInfo_3.java:5: error: no suitable constructor found for ThreadInfo(no arguments)
        ThreadInfo threadInfo = new ThreadInfo();
                                ^
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[],Object[],int[],Object[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(CompositeData) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: ThreadInfo_4
----------------------------------------------------------------
stdout:
Thread ID: 1
Thread ID: 2
Thread ID: 3
Thread ID: 4
Thread ID: 20
Thread ID: 21

================================================================

Sample: ThreadInfo_5
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/ThreadInfo_5.java:6: error: no suitable constructor found for ThreadInfo(no arguments)
        ThreadInfo threadInfo = new ThreadInfo(); // Assuming you have a ThreadInfo object
                                ^
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(Thread,int,Object,Thread,long,long,long,long,StackTraceElement[],Object[],int[],Object[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ThreadInfo.ThreadInfo(CompositeData) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

