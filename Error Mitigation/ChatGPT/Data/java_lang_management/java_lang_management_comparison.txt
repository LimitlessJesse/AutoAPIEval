Sample: 0 LockInfo
----------------------------------------------------------------
1. `String getClassName()`: This method returns the fully qualified name of the class that owns the lock.
2. `int getIdentityHashCode()`: This method returns the identity hash code of the object that owns the lock.
3. `String toString()`: This method returns a string representation of the lock information.
4. `boolean equals(Object obj)`: This method compares the specified object with this LockInfo for equality.
5. `int hashCode()`: This method returns a hash code value for the LockInfo.
================================================================

Sample: 1 ManagementFactory
----------------------------------------------------------------
1. `MemoryMXBean getMemoryMXBean()`: This method returns an instance of MemoryMXBean which provides access to memory system management functions.
2. `ThreadMXBean getThreadMXBean()`: This method returns an instance of ThreadMXBean which provides access to thread system management functions.
3. `OperatingSystemMXBean getOperatingSystemMXBean()`: This method returns an instance of OperatingSystemMXBean which provides access to operating system system management functions.
4. `RuntimeMXBean getRuntimeMXBean()`: This method returns an instance of RuntimeMXBean which provides access to runtime system management functions.
5. `ClassLoadingMXBean getClassLoadingMXBean()`: This method returns an instance of ClassLoadingMXBean which provides access to class loading system management functions.
================================================================

Sample: 2 ManagementPermission
----------------------------------------------------------------
1. void checkPermission(Permission perm)
2. boolean implies(Permission p)
3. String getActions()
4. PermissionCollection newPermissionCollection()
5. boolean equals(Object obj)
================================================================

Sample: 3 MemoryNotificationInfo
----------------------------------------------------------------
1. `String getPoolName()`: This method returns the name of the memory pool that triggered the notification.
2. `MemoryUsage getUsage()`: This method returns the memory usage information associated with the notification.
3. `MemoryUsage getUsageBeforeGc()`: This method returns the memory usage information before garbage collection associated with the notification.
4. `String getMemoryManagerName()`: This method returns the name of the memory manager that triggered the notification.
5. `String getEventType()`: This method returns the type of memory notification event.
================================================================

Sample: 4 MemoryUsage
----------------------------------------------------------------
1. `long getInit()`: This method returns the initial amount of memory in bytes that the Java virtual machine allocates for the memory pool.
2. `long getUsed()`: This method returns the amount of used memory in bytes.
3. `long getCommitted()`: This method returns the amount of memory in bytes that is committed for the Java virtual machine to use.
4. `long getMax()`: This method returns the maximum amount of memory in bytes that can be used for memory management.
5. `String toString()`: This method returns a string representation of the MemoryUsage object.
================================================================

Sample: 5 MonitorInfo
----------------------------------------------------------------
1. `int getLockedStackDepth()`: This method returns the depth of the stack trace where the object monitor lock was acquired.
2. `int getLockedStackFrame()`: This method returns the index of the stack frame that holds the object monitor lock.
3. `long getLockedTime()`: This method returns the total accumulated time (in milliseconds) that the object monitor has been locked.
4. `String getClassName()`: This method returns the fully qualified name of the class of the object being monitored.
5. `String getIdentityHashCode()`: This method returns the identity hash code of the object being monitored.
================================================================

Sample: 6 ThreadInfo
----------------------------------------------------------------
1. `long getThreadId()`: This method returns the ID of the thread.
2. `String getThreadName()`: This method returns the name of the thread.
3. `Thread.State getThreadState()`: This method returns the state of the thread.
4. `StackTraceElement[] getStackTrace()`: This method returns an array of stack trace elements representing the stack dump of the thread.
5. `LockInfo getLockInfo()`: This method returns information about the object on which the thread is blocked.
================================================================

