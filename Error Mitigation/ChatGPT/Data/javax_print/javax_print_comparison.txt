Sample: 0 DocFlavor
----------------------------------------------------------------
1. `String getMimeType()`: This method returns the MIME type string representing the document flavor.
2. `Class<?> getRepresentationClass()`: This method returns the representation class of the data for this flavor.
3. `String getMediaType()`: This method returns the media type string representing the document flavor.
4. `String getMediaSubtype()`: This method returns the media subtype string representing the document flavor.
5. `String getParameter(String paramName)`: This method returns the parameter value for the specified parameter name.
================================================================

Sample: 1 DocFlavor.BYTE_ARRAY
----------------------------------------------------------------
1. `boolean equals(Object obj)`: This method compares this DocFlavor to the specified object.
2. `int hashCode()`: This method returns a hash code value for the object.
3. `String toString()`: This method returns a string representation of the object.
4. `String getMediaType()`: This method returns the MIME type string of this DocFlavor.
5. `String getRepresentationClassName()`: This method returns the fully-qualified name of the class of the object used to represent the print data.
================================================================

Sample: 2 DocFlavor.CHAR_ARRAY
----------------------------------------------------------------
1. `DocFlavor.CHAR_ARRAY(byte[] representation)`: This method creates a new doc flavor object using a byte array as the print data representation.
2. `DocFlavor.CHAR_ARRAY(String mimeType)`: This method creates a new doc flavor object using a specified MIME type.
3. `DocFlavor.CHAR_ARRAY(String mimeType, String className)`: This method creates a new doc flavor object using a specified MIME type and class name.
4. `DocFlavor.CHAR_ARRAY(String mimeType, String className, String humanPresentableName)`: This method creates a new doc flavor object using a specified MIME type, class name, and human presentable name.
5. `boolean equals(Object obj)`: This method compares this doc flavor object to the specified object for equality.
================================================================

Sample: 3 DocFlavor.INPUT_STREAM
----------------------------------------------------------------
1. `String getMediaType()`: This method returns the MIME type string of this doc flavor.
2. `String getMediaSubtype()`: This method returns the media subtype string of this doc flavor.
3. `String getMimeType()`: This method returns the MIME type string of this doc flavor including parameters.
4. `String getRepresentationClassName()`: This method returns the fully-qualified name of the class of the object from which this doc flavor's representation is obtained.
5. `DocFlavor.BYTE_ARRAY getByteStreamFlavor()`: This method returns a doc flavor object for byte array print data representation class.
================================================================

Sample: 4 DocFlavor.READER
----------------------------------------------------------------
1. `DocFlavor[] getSupportedDocFlavors()`: This method returns an array of supported doc flavors for the character stream print data representation class.
2. `boolean equals(Object obj)`: This method compares this DocFlavor object to the specified object.
3. `String toString()`: This method returns a string representation of the DocFlavor object.
4. `int hashCode()`: This method returns a hash code value for the DocFlavor object.
5. `String getMimeType()`: This method returns the MIME type string for this DocFlavor object.
================================================================

Sample: 5 DocFlavor.SERVICE_FORMATTED
----------------------------------------------------------------
1. `DocFlavor[] getSupportedDocFlavors()`: This method returns an array of supported doc flavors for service formatted print data.
2. `String getMediaType()`: This method returns the media type of the doc flavor.
3. `String getMimeType()`: This method returns the MIME type of the doc flavor.
4. `String getRepresentationClassName()`: This method returns the fully-qualified name of the class of the representation object.
5. `String toString()`: This method returns a string representation of the doc flavor.
================================================================

Sample: 6 DocFlavor.STRING
----------------------------------------------------------------
1. `DocFlavor.STRING()`: This method creates a new DocFlavor object for representing a string print data.
2. `boolean equals(Object obj)`: This method compares this DocFlavor to the specified object.
3. `String toString()`: This method returns a string representation of the DocFlavor.
4. `int hashCode()`: This method returns a hash code value for the DocFlavor.
5. `String getMimeType()`: This method returns the MIME type string for this DocFlavor.
================================================================

Sample: 7 DocFlavor.URL
----------------------------------------------------------------
1. `DocFlavor[] getSupportedDocFlavors()`: This method returns an array of supported DocFlavor objects.
2. `boolean equals(Object obj)`: This method compares this DocFlavor object to the specified object.
3. `String toString()`: This method returns a string representation of the DocFlavor object.
4. `int hashCode()`: This method returns a hash code value for the DocFlavor object.
5. `String getMimeType()`: This method returns the MIME type string for this DocFlavor object.
================================================================

Sample: 8 PrintServiceLookup
----------------------------------------------------------------
1. `PrintService lookupDefaultPrintService()`: This method returns the default print service.
2. `PrintService[] lookupPrintServices(DocFlavor flavor, AttributeSet attributes)`: This method returns an array of print services that support the given document flavor and attributes.
3. `PrintService[] lookupPrintServices(DocFlavor flavor, AttributeSet attributes, String serviceTypeName)`: This method returns an array of print services that support the given document flavor, attributes, and service type name.
4. `MultiDocPrintService[] lookupMultiDocPrintServices(DocFlavor[] flavors, AttributeSet attributes)`: This method returns an array of multi-doc print services that support the given document flavors and attributes.
5. `MultiDocPrintService[] lookupMultiDocPrintServices(DocFlavor[] flavors, AttributeSet attributes, String serviceTypeName)`: This method returns an array of multi-doc print services that support the given document flavors, attributes, and service type name.
================================================================

Sample: 9 ServiceUI
----------------------------------------------------------------
1. `PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes)`: This method displays a print dialog to the user and returns the selected PrintService.

2. `PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes)`: This method displays a print dialog to the user and returns the selected PrintService, taking into account additional print request attributes.

3. `PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes, PrintServiceLookup serviceLookup)`: This method displays a print dialog to the user and returns the selected PrintService, using a custom PrintServiceLookup implementation.

4. `PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes, PrintServiceLookup serviceLookup, boolean doctojob)`: This method displays a print dialog to the user and returns the selected PrintService, with the option to convert the document to a job.

5. `PrintService printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, AttributeSet attributes, PrintRequestAttributeSet attributes, PrintServiceLookup serviceLookup, boolean doctojob, boolean showPrintToFile)`: This method displays a print dialog to the user and returns the selected PrintService, with additional options for converting the document to a job and showing the print to file option.
================================================================

Sample: 10 ServiceUIFactory
----------------------------------------------------------------
1. `ServiceUIFactory createUI(int role)`: This method creates a UI for the specified role.
2. `ServiceUIFactory getDefaultUI(int role)`: This method returns the default UI for the specified role.
3. `ServiceUIFactory getUIForPrintService(PrintService service, int role)`: This method returns a UI for the specified print service and role.
4. `ServiceUIFactory[] getUIFactories()`: This method returns an array of all registered UI factories.
5. `void registerUIFactory(ServiceUIFactory factory)`: This method registers a new UI factory.
================================================================

Sample: 11 SimpleDoc
----------------------------------------------------------------
1. `byte[] getBytes()`: This method returns the byte array of the document's data.
2. `DocFlavor getDocFlavor()`: This method returns the DocFlavor of the document.
3. `InputStream getStreamForBytes()`: This method returns an InputStream for reading the document's data as a stream of bytes.
4. `Reader getReaderForText()`: This method returns a Reader for reading the document's data as a stream of characters.
5. `String getMimeType()`: This method returns the MIME type of the document.
================================================================

Sample: 12 StreamPrintService
----------------------------------------------------------------
1. `OutputStream getOutputStream()`: This method returns the output stream associated with this StreamPrintService.
2. `String getOutputFormat()`: This method returns the output format supported by this StreamPrintService.
3. `boolean supportsMultipleCopies()`: This method returns true if this StreamPrintService supports printing multiple copies of the data.
4. `boolean supportsColor()`: This method returns true if this StreamPrintService supports color printing.
5. `boolean supportsMonochrome()`: This method returns true if this StreamPrintService supports monochrome (black and white) printing.
================================================================

Sample: 13 StreamPrintServiceFactory
----------------------------------------------------------------
1. `StreamPrintService[] getStreamPrintServices()`: This method returns an array of StreamPrintService instances available for this factory.
2. `StreamPrintService getStreamPrintServiceByName(String name)`: This method returns a StreamPrintService instance by its name.
3. `String[] getSupportedMimeTypes()`: This method returns an array of supported mime types for printing.
4. `boolean isStreamPrintServiceFactoryFor(Object obj)`: This method checks if this factory is the factory for a particular object.
5. `boolean isSupportedDocFlavor(DocFlavor flavor)`: This method checks if a particular document flavor is supported by this factory.
================================================================

