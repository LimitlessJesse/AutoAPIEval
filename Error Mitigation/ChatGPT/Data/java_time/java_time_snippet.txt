Sample: 0 Clock_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.Clock;
import java.time.ZoneId;

public class Main {
    public static void main(String[] args) {
        Clock clock = Clock.systemDefaultZone();
        ZoneId zone = clock.getZone();
        System.out.println("Time zone being used: " + zone);
    }
}
```
================================================================

Sample: 1 Clock_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.Clock;
import java.time.Instant;

public class Main {
    public static void main(String[] args) {
        Clock clock = Clock.systemDefaultZone();
        Instant currentInstant = clock.instant();
        System.out.println("Current Instant: " + currentInstant);
    }
}
```
================================================================

Sample: 2 Clock_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.Clock;

public class Main {
    public static void main(String[] args) {
        Clock clock = Clock.systemDefaultZone();
        long millis = clock.millis();
        System.out.println("Current millisecond instant: " + millis);
    }
}
```
================================================================

Sample: 3 Clock_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.Clock;
import java.time.ZoneId;

public class Main {
    public static void main(String[] args) {
        Clock clock = Clock.systemDefaultZone();
        Clock newClock = clock.withZone(ZoneId.of("America/New_York"));
        System.out.println("Original Clock: " + clock.instant());
        System.out.println("New Clock with Zone America/New_York: " + newClock.instant());
    }
}
```
================================================================

Sample: 4 Clock_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.Clock;

public class Main {
    public static void main(String[] args) {
        Clock clock = Clock.systemUTC();
        System.out.println(clock.instant());
    }
}
```
================================================================

Sample: 5 Duration_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.Duration;

public class Main {
    public static void main(String[] args) {
        Duration duration = Duration.ofSeconds(60);
        System.out.println("Duration in seconds: " + duration.getSeconds());
    }
}
```
================================================================

Sample: 6 Duration_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.Duration;

public class Main {
    public static void main(String[] args) {
        Duration duration = Duration.ofMinutes(5);
        System.out.println(duration); // Output: PT5M
    }
}
```
================================================================

Sample: 7 Duration_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.Duration;

public class Main {
    public static void main(String[] args) {
        Duration duration = Duration.ofHours(2);
        System.out.println(duration); // Output: PT2H
    }
}
```
================================================================

Sample: 8 Duration_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.Duration;

public class Main {
    public static void main(String[] args) {
        Duration duration = Duration.ofDays(5);
        System.out.println(duration); // Output: PT120H
    }
}
```
================================================================

Sample: 9 Duration_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.Duration;

public class Main {
    public static void main(String[] args) {
        Duration duration1 = Duration.ofSeconds(30);
        Duration duration2 = Duration.ofSeconds(10);
        
        Duration result = duration1.plus(duration2);
        
        System.out.println("Result: " + result.getSeconds() + " seconds");
    }
}
```
================================================================

Sample: 10 Instant_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.Instant;

public class Main {
    public static void main(String[] args) {
        Instant currentInstant = Instant.now();
        System.out.println("Current Instant: " + currentInstant);
    }
}
```
================================================================

Sample: 11 Instant_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.Instant;

public class Main {
    public static void main(String[] args) {
        long epochSecond = 1609459200; // 2021-01-01T00:00:00Z
        Instant instant = Instant.ofEpochSecond(epochSecond);
        System.out.println("Instant: " + instant);
    }
}
```
================================================================

Sample: 12 Instant_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.Instant;

public class Main {
    public static void main(String[] args) {
        Instant instant1 = Instant.ofEpochSecond(3, 1);
        Instant instant2 = Instant.ofEpochSecond(4, -999_999_999);
        Instant instant3 = Instant.ofEpochSecond(2, 1000_000_001);

        System.out.println(instant1);
        System.out.println(instant2);
        System.out.println(instant3);
    }
}
```
================================================================

Sample: 13 Instant_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.Instant;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class Main {
    public static void main(String[] args) {
        String text = "2007-12-03T10:15:30.00Z";
        
        try {
            Instant instant = Instant.parse(text);
            System.out.println("Parsed Instant: " + instant);
        } catch (DateTimeParseException e) {
            System.out.println("Error parsing Instant: " + e.getMessage());
        }
    }
}
```
================================================================

Sample: 14 LocalDate_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        LocalDate currentDate = LocalDate.now();
        System.out.println("Current date: " + currentDate);
    }
}
```
================================================================

Sample: 15 LocalDate_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        LocalDate date = LocalDate.of(2022, 10, 15);
        System.out.println("Date: " + date);
    }
}
```
================================================================

Sample: 16 LocalDate_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class Main {
    public static void main(String[] args) {
        String dateText = "2007-12-03";
        LocalDate parsedDate = LocalDate.parse(dateText, DateTimeFormatter.ISO_LOCAL_DATE);
        System.out.println("Parsed LocalDate: " + parsedDate);
    }
}
```
================================================================

Sample: 17 LocalDate_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        LocalDate date = LocalDate.of(2008, 12, 31);
        LocalDate newDate = date.plusDays(1);
        System.out.println("Original date: " + date);
        System.out.println("Date after adding 1 day: " + newDate);
    }
}
```
================================================================

Sample: 18 LocalDate_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        LocalDate date = LocalDate.of(2009, 1, 1);
        LocalDate newDate = date.minusDays(1);
        System.out.println("Original date: " + date);
        System.out.println("Date after subtracting one day: " + newDate);
    }
}
```
================================================================

Sample: 19 LocalDateTime_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDateTime;

public class Main {
    public static void main(String[] args) {
        LocalDateTime currentDateTime = LocalDateTime.now();
        System.out.println("Current Date-Time: " + currentDateTime);
    }
}
```
================================================================

Sample: 20 LocalDateTime_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDateTime;

public class Main {
    public static void main(String[] args) {
        LocalDateTime dateTime = LocalDateTime.of(2022, 10, 15, 8, 30);
        System.out.println("LocalDateTime: " + dateTime);
    }
}
```
================================================================

Sample: 21 LocalDateTime_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class Main {
    public static void main(String[] args) {
        String text = "2007-12-03T10:15:30";
        LocalDateTime dateTime = LocalDateTime.parse(text, DateTimeFormatter.ISO_LOCAL_DATE_TIME);
        System.out.println(dateTime);
    }
}
```
================================================================

Sample: 22 LocalDateTime_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDateTime;

public class Main {
    public static void main(String[] args) {
        LocalDateTime dateTime = LocalDateTime.of(2008, 12, 31, 0, 0);
        LocalDateTime newDateTime = dateTime.plusDays(1);
        System.out.println("Original date: " + dateTime);
        System.out.println("Date after adding 1 day: " + newDateTime);
    }
}
```
================================================================

Sample: 23 LocalDateTime_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDateTime;

public class Main {
    public static void main(String[] args) {
        LocalDateTime dateTime = LocalDateTime.parse("2007-12-03T10:15:30");
        LocalDateTime newDateTime = dateTime.minusHours(2);
        
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("DateTime after subtracting 2 hours: " + newDateTime);
    }
}
```
================================================================

Sample: 24 LocalTime_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalTime;

public class Main {
    public static void main(String[] args) {
        LocalTime time = LocalTime.of(10, 15, 30);
        int hour = time.getHour();
        System.out.println("Hour: " + hour);
    }
}
```
================================================================

Sample: 25 LocalTime_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalTime;

public class Main {
    public static void main(String[] args) {
        LocalTime time = LocalTime.of(10, 15, 30);
        int minute = time.getMinute();
        System.out.println("Minute: " + minute);
    }
}
```
================================================================

Sample: 26 LocalTime_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalTime;

public class Main {
    public static void main(String[] args) {
        LocalTime time = LocalTime.of(10, 15, 30);
        int second = time.getSecond();
        System.out.println("Second: " + second);
    }
}
```
================================================================

Sample: 27 LocalTime_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalTime;

public class Main {
    public static void main(String[] args) {
        LocalTime time = LocalTime.of(10, 15, 30);
        LocalTime newTime = time.plusHours(2);
        System.out.println("Original Time: " + time);
        System.out.println("Time after adding 2 hours: " + newTime);
    }
}
```
================================================================

Sample: 28 LocalTime_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalTime;

public class Main {
    public static void main(String[] args) {
        LocalTime time = LocalTime.of(10, 15, 30);
        LocalTime newTime = time.minusMinutes(5);
        System.out.println("Original Time: " + time);
        System.out.println("Time after subtracting 5 minutes: " + newTime);
    }
}
```
================================================================

Sample: 29 MonthDay_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.MonthDay;

public class Main {
    public static void main(String[] args) {
        MonthDay monthDay = MonthDay.of(12, 3);
        int monthValue = monthDay.getMonthValue();
        System.out.println("Month value: " + monthValue);
    }
}
```
================================================================

Sample: 30 MonthDay_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.MonthDay;
import java.time.Month;

public class Main {
    public static void main(String[] args) {
        MonthDay monthDay = MonthDay.of(12, 3);
        Month month = monthDay.getMonth();
        System.out.println("Month: " + month);
    }
}
```
================================================================

Sample: 31 MonthDay_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.MonthDay;

public class Main {
    public static void main(String[] args) {
        MonthDay monthDay = MonthDay.of(12, 3);
        int year = 2022;
        boolean isValid = monthDay.isValidYear(year);
        System.out.println("Is year " + year + " valid for month-day " + monthDay + "? " + isValid);
    }
}
```
================================================================

Sample: 32 MonthDay_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.MonthDay;

public class Main {
    public static void main(String[] args) {
        MonthDay monthDay = MonthDay.of(12, 3);
        System.out.println(monthDay.toString());
    }
}
```
================================================================

Sample: 33 MonthDay_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.MonthDay;
import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        MonthDay monthDay = MonthDay.of(12, 3);
        LocalDate localDate = monthDay.atYear(2021);
        System.out.println(localDate);
    }
}
```
================================================================

Sample: 34 OffsetDateTime_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetDateTime;

public class Main {
    public static void main(String[] args) {
        OffsetDateTime dateTime = OffsetDateTime.parse("2007-12-03T10:15:30+01:00");
        OffsetDateTime newDateTime = dateTime.plusDays(5);
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("DateTime after adding 5 days: " + newDateTime);
    }
}
```
================================================================

Sample: 35 OffsetDateTime_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetDateTime;

public class Main {
    public static void main(String[] args) {
        OffsetDateTime dateTime = OffsetDateTime.parse("2007-12-03T10:15:30+01:00");
        OffsetDateTime newDateTime = dateTime.minusHours(2);
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("DateTime after subtracting 2 hours: " + newDateTime);
    }
}
```
================================================================

Sample: 36 OffsetDateTime_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetDateTime;

public class Main {
    public static void main(String[] args) {
        OffsetDateTime dateTime = OffsetDateTime.parse("2007-12-03T10:15:30+01:00");
        OffsetDateTime newDateTime = dateTime.withYear(2022);
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("Modified DateTime with Year 2022: " + newDateTime);
    }
}
```
================================================================

Sample: 37 OffsetDateTime_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetDateTime;
import java.time.ZoneOffset;

public class Main {
    public static void main(String[] args) {
        OffsetDateTime dateTime = OffsetDateTime.parse("2007-12-03T10:15:30+01:00");
        ZoneOffset newOffset = ZoneOffset.ofHours(3);
        
        OffsetDateTime newDateTime = dateTime.withOffsetSameInstant(newOffset);
        
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("New DateTime with Offset Same Instant: " + newDateTime);
    }
}
```
================================================================

Sample: 38 OffsetDateTime_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetDateTime;
import java.time.temporal.ChronoUnit;

public class Main {
    public static void main(String[] args) {
        OffsetDateTime dateTime = OffsetDateTime.parse("2007-12-03T10:15:30+01:00");
        OffsetDateTime truncatedDateTime = dateTime.truncatedTo(ChronoUnit.MINUTES);
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("Truncated DateTime: " + truncatedDateTime);
    }
}
```
================================================================

Sample: 39 OffsetTime_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetTime;

public class Main {
    public static void main(String[] args) {
        OffsetTime offsetTime = OffsetTime.parse("10:15:30+01:00");
        System.out.println("Original OffsetTime: " + offsetTime);

        OffsetTime newOffsetTime = offsetTime.withHour(15);
        System.out.println("OffsetTime with hour altered: " + newOffsetTime);
    }
}
```
================================================================

Sample: 40 OffsetTime_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetTime;

public class Main {
    public static void main(String[] args) {
        OffsetTime offsetTime = OffsetTime.parse("10:15:30+01:00");
        OffsetTime newOffsetTime = offsetTime.withMinute(45);
        System.out.println("Original OffsetTime: " + offsetTime);
        System.out.println("OffsetTime with minute set to 45: " + newOffsetTime);
    }
}
```
================================================================

Sample: 41 OffsetTime_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetTime;

public class Main {
    public static void main(String[] args) {
        OffsetTime offsetTime = OffsetTime.parse("10:15:30+01:00");
        System.out.println("Original OffsetTime: " + offsetTime);

        OffsetTime updatedOffsetTime = offsetTime.withSecond(45);
        System.out.println("Updated OffsetTime with second set to 45: " + updatedOffsetTime);
    }
}
```
================================================================

Sample: 42 OffsetTime_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetTime;
import java.time.ZoneOffset;

public class Main {
    public static void main(String[] args) {
        OffsetTime offsetTime = OffsetTime.parse("10:30:00+02:00");
        ZoneOffset newOffset = ZoneOffset.ofHours(3);
        
        OffsetTime newOffsetTime = offsetTime.withOffsetSameLocal(newOffset);
        
        System.out.println("Original OffsetTime: " + offsetTime);
        System.out.println("OffsetTime with new offset: " + newOffsetTime);
    }
}
```
================================================================

Sample: 43 OffsetTime_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetTime;
import java.time.temporal.ChronoUnit;

public class Main {
    public static void main(String[] args) {
        OffsetTime offsetTime = OffsetTime.parse("10:15:30+01:00");
        OffsetTime truncatedTime = offsetTime.truncatedTo(ChronoUnit.MINUTES);
        System.out.println("Original OffsetTime: " + offsetTime);
        System.out.println("Truncated OffsetTime: " + truncatedTime);
    }
}
```
================================================================

Sample: 44 Period_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;
import java.time.Period;

public class Main {
    public static void main(String[] args) {
        LocalDate startDate = LocalDate.of(2020, 1, 1);
        LocalDate endDate = LocalDate.of(2021, 1, 1);
        
        Period period = Period.between(startDate, endDate);
        
        System.out.println("Years: " + period.getYears());
        System.out.println("Months: " + period.getMonths());
        System.out.println("Days: " + period.getDays());
    }
}
```
================================================================

Sample: 45 Period_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.Period;

public class Main {
    public static void main(String[] args) {
        String text = "P2Y";
        Period period = Period.parse(text);
        System.out.println(period);
    }
}
```
================================================================

Sample: 46 Period_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.Period;

public class Main {
    public static void main(String[] args) {
        Period period = Period.of(2, 3, 4);
        System.out.println("Period: " + period.getYears() + " years, " + period.getMonths() + " months, " + period.getDays() + " days");
    }
}
```
================================================================

Sample: 47 Period_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.Period;

public class Main {
    public static void main(String[] args) {
        Period period = Period.ofDays(5);
        System.out.println("Period of days: " + period);
    }
}
```
================================================================

Sample: 48 Period_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.Period;

public class Main {
    public static void main(String[] args) {
        Period period = Period.ofMonths(6);
        System.out.println("Period of 6 months: " + period);
    }
}
```
================================================================

Sample: 49 Year_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.Year;

public class Main {
    public static void main(String[] args) {
        Year year = Year.of(2022);
        int yearValue = year.getValue();
        System.out.println("Year value: " + yearValue);
    }
}
```
================================================================

Sample: 50 Year_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.Year;

public class Main {
    public static void main(String[] args) {
        Year year = Year.of(2000);
        boolean isLeapYear = year.isLeap();
        System.out.println("Is 2000 a leap year? " + isLeapYear);
    }
}
```
================================================================

Sample: 51 Year_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.Year;

public class Main {
    public static void main(String[] args) {
        Year year = Year.of(2021);
        Year newYear = year.minusYears(5);
        System.out.println("Original year: " + year);
        System.out.println("Year after subtracting 5 years: " + newYear);
    }
}
```
================================================================

Sample: 52 Year_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.Year;

public class Main {
    public static void main(String[] args) {
        Year year = Year.of(2007);
        Year newYear = year.plusYears(5);
        System.out.println("Original year: " + year);
        System.out.println("Year after adding 5 years: " + newYear);
    }
}
```
================================================================

Sample: 53 Year_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDate;
import java.time.Year;

public class Main {
    public static void main(String[] args) {
        Year year = Year.of(2022);
        LocalDate date = year.atDay(100);
        System.out.println(date);
    }
}
```
================================================================

Sample: 54 YearMonth_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.YearMonth;

public class Main {
    public static void main(String[] args) {
        YearMonth yearMonth = YearMonth.of(2022, 1);
        int length = yearMonth.lengthOfMonth();
        System.out.println("Length of the month: " + length);
    }
}
```
================================================================

Sample: 55 YearMonth_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.YearMonth;

public class Main {
    public static void main(String[] args) {
        YearMonth yearMonth = YearMonth.of(2022, 9);
        YearMonth newYearMonth = yearMonth.plusYears(5);
        
        System.out.println("Original YearMonth: " + yearMonth);
        System.out.println("YearMonth after adding 5 years: " + newYearMonth);
    }
}
```
================================================================

Sample: 56 YearMonth_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.YearMonth;

public class Main {
    public static void main(String[] args) {
        YearMonth yearMonth = YearMonth.of(2022, 9);
        YearMonth newYearMonth = yearMonth.minusYears(2);
        System.out.println("Original YearMonth: " + yearMonth);
        System.out.println("YearMonth after subtracting 2 years: " + newYearMonth);
    }
}
```
================================================================

Sample: 57 YearMonth_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.YearMonth;

public class Main {
    public static void main(String[] args) {
        YearMonth yearMonth = YearMonth.of(2022, 9);
        YearMonth newYearMonth = yearMonth.plusMonths(3);
        System.out.println("Original YearMonth: " + yearMonth);
        System.out.println("YearMonth after adding 3 months: " + newYearMonth);
    }
}
```
================================================================

Sample: 58 YearMonth_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.YearMonth;

public class Main {
    public static void main(String[] args) {
        YearMonth yearMonth = YearMonth.of(2022, 9);
        YearMonth newYearMonth = yearMonth.minusMonths(3);
        System.out.println("Original YearMonth: " + yearMonth);
        System.out.println("YearMonth after subtracting 3 months: " + newYearMonth);
    }
}
```
================================================================

Sample: 59 ZonedDateTime_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;

public class Main {
    public static void main(String[] args) {
        ZonedDateTime zonedDateTime = ZonedDateTime.parse("2007-12-03T10:15:30+01:00[Europe/Paris]");
        LocalDateTime localDateTime = zonedDateTime.toLocalDateTime();
        System.out.println("LocalDateTime part: " + localDateTime);
    }
}
```
================================================================

Sample: 60 ZonedDateTime_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;
import java.time.ZonedDateTime;

public class Main {
    public static void main(String[] args) {
        ZonedDateTime zonedDateTime = ZonedDateTime.now();
        ZoneId zoneId = zonedDateTime.getZone();
        System.out.println("Time zone: " + zoneId);
    }
}
```
================================================================

Sample: 61 ZonedDateTime_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;
import java.time.ZonedDateTime;

public class Main {
    public static void main(String[] args) {
        ZonedDateTime dateTime = ZonedDateTime.parse("2007-12-03T10:15:30+01:00[Europe/Paris]");
        ZoneId newZone = ZoneId.of("America/New_York");
        ZonedDateTime newDateTime = dateTime.withZoneSameInstant(newZone);
        
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("New DateTime with Zone: " + newDateTime);
    }
}
```
================================================================

Sample: 62 ZonedDateTime_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;
import java.time.ZonedDateTime;

public class Main {
    public static void main(String[] args) {
        ZonedDateTime dateTime = ZonedDateTime.parse("2007-12-03T10:15:30+01:00[Europe/Paris]");
        ZoneId newZone = ZoneId.of("America/New_York");
        
        ZonedDateTime newDateTime = dateTime.withZoneSameLocal(newZone);
        
        System.out.println("Original DateTime: " + dateTime);
        System.out.println("New DateTime with Zone: " + newDateTime);
    }
}
```
================================================================

Sample: 63 ZonedDateTime_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.OffsetDateTime;
import java.time.ZonedDateTime;

public class Main {
    public static void main(String[] args) {
        ZonedDateTime zonedDateTime = ZonedDateTime.parse("2007-12-03T10:15:30+01:00[Europe/Paris]");
        OffsetDateTime offsetDateTime = zonedDateTime.toOffsetDateTime();
        System.out.println("OffsetDateTime: " + offsetDateTime);
    }
}
```
================================================================

Sample: 64 ZoneId_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;

public class Main {
    public static void main(String[] args) {
        ZoneId zoneId = ZoneId.of("Europe/Paris");
        System.out.println("Zone ID: " + zoneId);
    }
}
```
================================================================

Sample: 65 ZoneId_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        System.out.println(zoneIds);
    }
}
```
================================================================

Sample: 66 ZoneId_3
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;

public class Main {
    public static void main(String[] args) {
        ZoneId zoneId = ZoneId.systemDefault();
        System.out.println("System default time-zone: " + zoneId);
    }
}
```
================================================================

Sample: 67 ZoneId_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;
import java.time.zone.ZoneRules;

public class Main {
    public static void main(String[] args) {
        ZoneId zoneId = ZoneId.of("Europe/Paris");
        ZoneRules rules = zoneId.getRules();
        System.out.println(rules);
    }
}
```
================================================================

Sample: 68 ZoneId_5
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneId;

public class Main {
    public static void main(String[] args) {
        ZoneId zoneId = ZoneId.of("Europe/Paris");
        String id = zoneId.getId();
        System.out.println("Time-zone ID: " + id);
    }
}
```
================================================================

Sample: 69 ZoneOffset_1
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneOffset;

public class Main {
    public static void main(String[] args) {
        ZoneOffset offset1 = ZoneOffset.ofHours(2);
        ZoneOffset offset2 = ZoneOffset.ofHours(1);
        
        int comparison = offset1.compareTo(offset2);
        
        if(comparison < 0) {
            System.out.println(offset1 + " is less than " + offset2);
        } else if(comparison > 0) {
            System.out.println(offset1 + " is greater than " + offset2);
        } else {
            System.out.println(offset1 + " is equal to " + offset2);
        }
    }
}
```
================================================================

Sample: 70 ZoneOffset_2
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneOffset;

public class Main {
    public static void main(String[] args) {
        ZoneOffset offset1 = ZoneOffset.ofHours(2);
        ZoneOffset offset2 = ZoneOffset.ofHours(2);
        
        boolean isEqual = offset1.equals(offset2);
        System.out.println("Are the offsets equal? " + isEqual);
    }
}
```
================================================================

Sample: 71 ZoneOffset_4
----------------------------------------------------------------
Code snippet:
```java
import java.time.ZoneOffset;

public class Main {
    public static void main(String[] args) {
        ZoneOffset zoneOffset = ZoneOffset.ofHours(2);
        String id = zoneOffset.getId();
        System.out.println("Zone offset ID: " + id);
    }
}
```
================================================================

