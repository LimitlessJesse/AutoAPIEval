ClassName,Method,Return Type,Description
BeanDescriptor,getBeanClass(),Class<?>,Gets the bean's Class object.
BeanDescriptor,getCustomizerClass(),Class<?>,Gets the Class object for the bean's customizer.
Beans,"getInstanceOf(Object bean, Class<?> targetType)",static Object,"From a given bean, obtain an object representing a specified type view of that source object."
Beans,"instantiate(ClassLoader cls, String beanName)",static Object,Instantiate a JavaBean.
Beans,"instantiate(ClassLoader cls, String beanName, BeanContext beanContext)",static Object,Instantiate a JavaBean.
Beans,"instantiate(ClassLoader cls, String beanName, BeanContext beanContext, AppletInitializer initializer)",static Object,Instantiate a bean.
Beans,isDesignTime(),static boolean,Test if we are in design-mode.
Beans,isGuiAvailable(),static boolean,Determines whether beans can assume a GUI is available.
Beans,"isInstanceOf(Object bean, Class<?> targetType)",static boolean,Check if a bean can be viewed as a given target type.
Beans,setDesignTime(boolean isDesignTime),static void,Used to indicate whether of not we are running in an application builder environment.
Beans,setGuiAvailable(boolean isGuiAvailable),static void,Used to indicate whether of not we are running in an environment where GUI interaction is available.
DefaultPersistenceDelegate,"initialize(Class<?> type, Object oldInstance, Object newInstance, Encoder out)",protected void,"This default implementation of the initialize method assumes all state held in objects of this type is exposed via the matching pairs of ""setter"" and ""getter"" methods in the order they are returned by the Introspector."
DefaultPersistenceDelegate,"instantiate(Object oldInstance, Encoder out)",protected Expression,"This default implementation of the instantiate method returns an expression containing the predefined method name ""new"" which denotes a call to a constructor with the arguments as specified in the DefaultPersistenceDelegate's constructor."
DefaultPersistenceDelegate,"mutatesTo(Object oldInstance, Object newInstance)",protected boolean,"If the number of arguments in the specified constructor is non-zero and the class of oldInstance explicitly declares an ""equals"" method this method returns the value of oldInstance.equals(newInstance)."
Encoder,get(Object oldInstance),Object,Returns a tentative value for oldInstance in the environment created by this stream.
Encoder,getExceptionListener(),ExceptionListener,Gets the exception handler for this stream.
Encoder,getPersistenceDelegate(Class<?> type),PersistenceDelegate,Returns the persistence delegate for the given type.
Encoder,remove(Object oldInstance),Object,"Removes the entry for this instance, returning the old entry."
Encoder,setExceptionListener(ExceptionListener exceptionListener),void,Sets the exception handler for this stream to exceptionListener.
Encoder,"setPersistenceDelegate(Class<?> type, PersistenceDelegate delegate)",void,Associates the specified persistence delegate with the given type.
Encoder,writeExpression(Expression oldExp),void,The implementation first checks to see if an expression with this value has already been written.
Encoder,writeObject(Object o),protected void,Write the specified object to the output stream.
Encoder,writeStatement(Statement oldStm),void,Writes statement oldStm to the stream.
EventHandler,"create(Class<T> listenerInterface, Object target, String action)",static <T> T,Creates an implementation of listenerInterface in which all of the methods in the listener interface apply the handler's action to the target.
EventHandler,"create(Class<T> listenerInterface, Object target, String action, String eventPropertyName)",static <T> T,"/** Creates an implementation of listenerInterface in which all of the methods pass the value of the event expression, eventPropertyName, to the final method in the statement, action, which is applied to the target."
EventHandler,"create(Class<T> listenerInterface, Object target, String action, String eventPropertyName, String listenerMethodName)",static <T> T,"Creates an implementation of listenerInterface in which the method named listenerMethodName passes the value of the event expression, eventPropertyName, to the final method in the statement, action, which is applied to the target."
EventHandler,getAction(),String,"Returns the name of the target's writable property that this event handler will set, or the name of the method that this event handler will invoke on the target."
EventHandler,getEventPropertyName(),String,Returns the property of the event that should be used in the action applied to the target.
EventHandler,getListenerMethodName(),String,Returns the name of the method that will trigger the action.
EventHandler,getTarget(),Object,Returns the object to which this event handler will send a message.
EventHandler,"invoke(Object proxy, Method method, Object[] arguments)",Object,Extract the appropriate property value from the event and pass it to the action associated with this EventHandler.
EventSetDescriptor,getAddListenerMethod(),Method,Gets the method used to add event listeners.
EventSetDescriptor,getGetListenerMethod(),Method,Gets the method used to access the registered event listeners.
EventSetDescriptor,getListenerMethodDescriptors(),MethodDescriptor[],Gets the MethodDescriptors of the target listener interface.
EventSetDescriptor,getListenerMethods(),Method[],Gets the methods of the target listener interface.
EventSetDescriptor,getListenerType(),Class<?>,Gets the Class object for the target interface.
EventSetDescriptor,getRemoveListenerMethod(),Method,Gets the method used to remove event listeners.
EventSetDescriptor,isInDefaultEventSet(),boolean,"Reports if an event set is in the ""default"" set."
EventSetDescriptor,isUnicast(),boolean,Normally event sources are multicast.
EventSetDescriptor,setInDefaultEventSet(boolean inDefaultEventSet),void,"Marks an event set as being in the ""default"" set (or not)."
EventSetDescriptor,setUnicast(boolean unicast),void,Mark an event set as unicast (or not).
Expression,execute(),void,"The execute method finds a method whose name is the same as the methodName property, and invokes the method on the target."
Expression,getValue(),Object,"If the value property of this instance is not already set, this method dynamically finds the method with the specified methodName on this target with these arguments and calls it."
Expression,setValue(Object value),void,Sets the value of this expression to value.
Expression,toString(),String,Prints the value of this expression using a Java-style syntax.
FeatureDescriptor,attributeNames(),Enumeration<String>,Gets an enumeration of the locale-independent names of this feature.
FeatureDescriptor,getDisplayName(),String,Gets the localized display name of this feature.
FeatureDescriptor,getName(),String,Gets the programmatic name of this feature.
FeatureDescriptor,getShortDescription(),String,Gets the short description of this feature.
FeatureDescriptor,getValue(String attributeName),Object,Retrieve a named attribute with this feature.
FeatureDescriptor,isExpert(),boolean,"The ""expert"" flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users."
FeatureDescriptor,isHidden(),boolean,"The ""hidden"" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans."
FeatureDescriptor,isPreferred(),boolean,"The ""preferred"" flag is used to identify features that are particularly important for presenting to humans."
FeatureDescriptor,setDisplayName(String displayName),void,Sets the localized display name of this feature.
FeatureDescriptor,setExpert(boolean expert),void,"The ""expert"" flag is used to distinguish between features that are intended for expert users from those that are intended for normal users."
FeatureDescriptor,setHidden(boolean hidden),void,"The ""hidden"" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans."
FeatureDescriptor,setName(String name),void,Sets the programmatic name of this feature.
FeatureDescriptor,setPreferred(boolean preferred),void,"The ""preferred"" flag is used to identify features that are particularly important for presenting to humans."
FeatureDescriptor,setShortDescription(String text),void,You can associate a short descriptive string with a feature.
FeatureDescriptor,"setValue(String attributeName, Object value)",void,Associate a named attribute with this feature.
FeatureDescriptor,toString(),String,Returns a string representation of the object.
IndexedPropertyChangeEvent,getIndex(),int,Gets the index of the property that was changed.
IndexedPropertyDescriptor,equals(Object obj),boolean,Compares this PropertyDescriptor against the specified object.
IndexedPropertyDescriptor,getIndexedPropertyType(),Class<?>,Returns the Java type info for the indexed property.
IndexedPropertyDescriptor,getIndexedReadMethod(),Method,Gets the method that should be used to read an indexed property value.
IndexedPropertyDescriptor,getIndexedWriteMethod(),Method,Gets the method that should be used to write an indexed property value.
IndexedPropertyDescriptor,hashCode(),int,Returns a hash code value for the object.
IndexedPropertyDescriptor,setIndexedReadMethod(Method readMethod),void,Sets the method that should be used to read an indexed property value.
IndexedPropertyDescriptor,setIndexedWriteMethod(Method writeMethod),void,Sets the method that should be used to write an indexed property value.
Introspector,decapitalize(String name),static String,Utility method to take a string and convert it to normal Java variable name capitalization.
Introspector,flushCaches(),static void,Flush all of the Introspector's internal caches.
Introspector,flushFromCaches(Class<?> clz),static void,Flush the Introspector's internal cached information for a given class.
Introspector,getBeanInfo(Class<?> beanClass),static BeanInfo,"Introspect on a Java Bean and learn about all its properties, exposed methods, and events."
Introspector,"getBeanInfo(Class<?> beanClass, Class<?> stopClass)",static BeanInfo,"Introspect on a Java bean and learn all about its properties, exposed methods, below a given ""stop"" point."
Introspector,"getBeanInfo(Class<?> beanClass, Class<?> stopClass, int flags)",static BeanInfo,"Introspect on a Java Bean and learn about all its properties, exposed methods and events, below a given stopClass point subject to some control flags."
Introspector,"getBeanInfo(Class<?> beanClass, int flags)",static BeanInfo,"Introspect on a Java bean and learn about all its properties, exposed methods, and events, subject to some control flags."
Introspector,getBeanInfoSearchPath(),static String[],Gets the list of package names that will be used for finding BeanInfo classes.
Introspector,setBeanInfoSearchPath(String[] path),static void,Change the list of package names that will be used for finding BeanInfo classes.
MethodDescriptor,getMethod(),Method,Gets the method that this MethodDescriptor encapsulates.
MethodDescriptor,getParameterDescriptors(),ParameterDescriptor[],Gets the ParameterDescriptor for each of this MethodDescriptor's method's parameters.
PersistenceDelegate,"initialize(Class<?> type, Object oldInstance, Object newInstance, Encoder out)",protected void,Produce a series of statements with side effects on newInstance so that the new instance becomes equivalent to oldInstance.
PersistenceDelegate,"instantiate(Object oldInstance, Encoder out)",protected abstract Expression,Returns an expression whose value is oldInstance.
PersistenceDelegate,"mutatesTo(Object oldInstance, Object newInstance)",protected boolean,Returns true if an equivalent copy of oldInstance may be created by applying a series of statements to newInstance.
PersistenceDelegate,"writeObject(Object oldInstance, Encoder out)",void,The writeObject is a single entry point to the persistence and is used by a Encoder in the traditional mode of delegation.
PropertyChangeEvent,getNewValue(),Object,"Gets the new value for the property, expressed as an Object."
PropertyChangeEvent,getOldValue(),Object,"Gets the old value for the property, expressed as an Object."
PropertyChangeEvent,getPropagationId(),Object,"The ""propagationId"" field is reserved for future use."
PropertyChangeEvent,getPropertyName(),String,Gets the programmatic name of the property that was changed.
PropertyChangeEvent,setPropagationId(Object propagationId),void,Sets the propagationId object for the event.
PropertyChangeEvent,toString(),String,Returns a string representation of the object.
PropertyChangeListenerProxy,getPropertyName(),String,Returns the name of the named property associated with the listener.
PropertyChangeListenerProxy,propertyChange(PropertyChangeEvent event),void,Forwards the property change event to the listener delegate.
PropertyChangeSupport,addPropertyChangeListener(PropertyChangeListener listener),void,Add a PropertyChangeListener to the listener list.
PropertyChangeSupport,"addPropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Add a PropertyChangeListener for a specific property.
PropertyChangeSupport,"fireIndexedPropertyChange(String propertyName, int index, boolean oldValue, boolean newValue)",void,Reports a boolean bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,"fireIndexedPropertyChange(String propertyName, int index, int oldValue, int newValue)",void,Reports an integer bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,"fireIndexedPropertyChange(String propertyName, int index, Object oldValue, Object newValue)",void,Reports a bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,firePropertyChange(PropertyChangeEvent event),void,Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,"firePropertyChange(String propertyName, boolean oldValue, boolean newValue)",void,Reports a boolean bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,"firePropertyChange(String propertyName, int oldValue, int newValue)",void,Reports an integer bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,"firePropertyChange(String propertyName, Object oldValue, Object newValue)",void,Reports a bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.
PropertyChangeSupport,getPropertyChangeListeners(),PropertyChangeListener[],Returns an array of all the listeners that were added to the PropertyChangeSupport object with addPropertyChangeListener().
PropertyChangeSupport,getPropertyChangeListeners(String propertyName),PropertyChangeListener[],Returns an array of all the listeners which have been associated with the named property.
PropertyChangeSupport,hasListeners(String propertyName),boolean,"Check if there are any listeners for a specific property, including those registered on all properties."
PropertyChangeSupport,removePropertyChangeListener(PropertyChangeListener listener),void,Remove a PropertyChangeListener from the listener list.
PropertyChangeSupport,"removePropertyChangeListener(String propertyName, PropertyChangeListener listener)",void,Remove a PropertyChangeListener for a specific property.
PropertyDescriptor,createPropertyEditor(Object bean),PropertyEditor,Constructs an instance of a property editor using the current property editor class.
PropertyDescriptor,equals(Object obj),boolean,Compares this PropertyDescriptor against the specified object.
PropertyDescriptor,getPropertyEditorClass(),Class<?>,Gets any explicit PropertyEditor Class that has been registered for this property.
PropertyDescriptor,getPropertyType(),Class<?>,Returns the Java type info for the property.
PropertyDescriptor,getReadMethod(),Method,Gets the method that should be used to read the property value.
PropertyDescriptor,getWriteMethod(),Method,Gets the method that should be used to write the property value.
PropertyDescriptor,hashCode(),int,Returns a hash code value for the object.
PropertyDescriptor,isBound(),boolean,"Updates to ""bound"" properties will cause a ""PropertyChange"" event to get fired when the property is changed."
PropertyDescriptor,isConstrained(),boolean,"Attempted updates to ""Constrained"" properties will cause a ""VetoableChange"" event to get fired when the property is changed."
PropertyDescriptor,setBound(boolean bound),void,"Updates to ""bound"" properties will cause a ""PropertyChange"" event to get fired when the property is changed."
PropertyDescriptor,setConstrained(boolean constrained),void,"Attempted updates to ""Constrained"" properties will cause a ""VetoableChange"" event to get fired when the property is changed."
PropertyDescriptor,setPropertyEditorClass(Class<?> propertyEditorClass),void,Normally PropertyEditors will be found using the PropertyEditorManager.
PropertyDescriptor,setReadMethod(Method readMethod),void,Sets the method that should be used to read the property value.
PropertyDescriptor,setWriteMethod(Method writeMethod),void,Sets the method that should be used to write the property value.
PropertyEditorManager,findEditor(Class<?> targetType),static PropertyEditor,Locate a value editor for a given target type.
PropertyEditorManager,getEditorSearchPath(),static String[],Gets the package names that will be searched for property editors.
PropertyEditorManager,"registerEditor(Class<?> targetType, Class<?> editorClass)",static void,Registers an editor class to edit values of the given target class.
PropertyEditorManager,setEditorSearchPath(String[] path),static void,Change the list of package names that will be used for finding property editors.
PropertyEditorSupport,addPropertyChangeListener(PropertyChangeListener listener),void,Adds a listener for the value change.
PropertyEditorSupport,firePropertyChange(),void,Report that we have been modified to any interested listeners.
PropertyEditorSupport,getAsText(),String,Gets the property value as a string suitable for presentation to a human to edit.
PropertyEditorSupport,getCustomEditor(),Component,A PropertyEditor may chose to make available a full custom Component that edits its property value.
PropertyEditorSupport,getJavaInitializationString(),String,This method is intended for use when generating Java code to set the value of the property.
PropertyEditorSupport,getSource(),Object,Returns the bean that is used as the source of events.
PropertyEditorSupport,getTags(),String[],"If the property value must be one of a set of known tagged values, then this method should return an array of the tag values."
PropertyEditorSupport,getValue(),Object,Gets the value of the property.
PropertyEditorSupport,isPaintable(),boolean,Determines whether the class will honor the paintValue method.
PropertyEditorSupport,"paintValue(Graphics gfx, Rectangle box)",void,Paint a representation of the value into a given area of screen real estate.
PropertyEditorSupport,removePropertyChangeListener(PropertyChangeListener listener),void,Removes a listener for the value change.
PropertyEditorSupport,setAsText(String text),void,Sets the property value by parsing a given String.
PropertyEditorSupport,setSource(Object source),void,Sets the source bean.
PropertyEditorSupport,setValue(Object value),void,Set (or change) the object that is to be edited.
PropertyEditorSupport,supportsCustomEditor(),boolean,Determines whether the propertyEditor can provide a custom editor.
SimpleBeanInfo,getAdditionalBeanInfo(),BeanInfo[],Claim there are no other relevant BeanInfo objects.
SimpleBeanInfo,getBeanDescriptor(),BeanDescriptor,Deny knowledge about the class and customizer of the bean.
SimpleBeanInfo,getDefaultEventIndex(),int,Deny knowledge of a default event.
SimpleBeanInfo,getDefaultPropertyIndex(),int,Deny knowledge of a default property.
SimpleBeanInfo,getEventSetDescriptors(),EventSetDescriptor[],Deny knowledge of event sets.
SimpleBeanInfo,getIcon(int iconKind),Image,Claim there are no icons available.
SimpleBeanInfo,getMethodDescriptors(),MethodDescriptor[],Deny knowledge of methods.
SimpleBeanInfo,getPropertyDescriptors(),PropertyDescriptor[],Deny knowledge of properties.
SimpleBeanInfo,loadImage(String resourceName),Image,This is a utility method to help in loading icon images.
Statement,execute(),void,"The execute method finds a method whose name is the same as the methodName property, and invokes the method on the target."
Statement,getArguments(),Object[],Returns the arguments for the method to invoke.
Statement,getMethodName(),String,Returns the name of the method to invoke.
Statement,getTarget(),Object,Returns the target object of this statement.
Statement,toString(),String,Prints the value of this statement using a Java-style syntax.
VetoableChangeListenerProxy,getPropertyName(),String,Returns the name of the named property associated with the listener.
VetoableChangeListenerProxy,vetoableChange(PropertyChangeEvent event),void,Forwards the property change event to the listener delegate.
VetoableChangeSupport,"addVetoableChangeListener(String propertyName, VetoableChangeListener listener)",void,Add a VetoableChangeListener for a specific property.
VetoableChangeSupport,addVetoableChangeListener(VetoableChangeListener listener),void,Add a VetoableChangeListener to the listener list.
VetoableChangeSupport,fireVetoableChange(PropertyChangeEvent event),void,Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name.
VetoableChangeSupport,"fireVetoableChange(String propertyName, boolean oldValue, boolean newValue)",void,Reports a boolean constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.
VetoableChangeSupport,"fireVetoableChange(String propertyName, int oldValue, int newValue)",void,Reports an integer constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.
VetoableChangeSupport,"fireVetoableChange(String propertyName, Object oldValue, Object newValue)",void,Reports a constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.
VetoableChangeSupport,getVetoableChangeListeners(),VetoableChangeListener[],Returns an array of all the listeners that were added to the VetoableChangeSupport object with addVetoableChangeListener().
VetoableChangeSupport,getVetoableChangeListeners(String propertyName),VetoableChangeListener[],Returns an array of all the listeners which have been associated with the named property.
VetoableChangeSupport,hasListeners(String propertyName),boolean,"Check if there are any listeners for a specific property, including those registered on all properties."
VetoableChangeSupport,"removeVetoableChangeListener(String propertyName, VetoableChangeListener listener)",void,Remove a VetoableChangeListener for a specific property.
VetoableChangeSupport,removeVetoableChangeListener(VetoableChangeListener listener),void,Remove a VetoableChangeListener from the listener list.
XMLDecoder,close(),void,This method closes the input stream associated with this stream.
XMLDecoder,"createHandler(Object owner, ExceptionListener el, ClassLoader cl)",static DefaultHandler,Creates a new handler for SAX parser that can be used to parse embedded XML archives created by the XMLEncoder class.
XMLDecoder,getExceptionListener(),ExceptionListener,Gets the exception handler for this stream.
XMLDecoder,getOwner(),Object,Gets the owner of this decoder.
XMLDecoder,readObject(),Object,Reads the next object from the underlying input stream.
XMLDecoder,setExceptionListener(ExceptionListener exceptionListener),void,Sets the exception handler for this stream to exceptionListener.
XMLDecoder,setOwner(Object owner),void,Sets the owner of this decoder to owner.
XMLEncoder,close(),void,"This method calls flush, writes the closing postamble and then closes the output stream associated with this stream."
XMLEncoder,flush(),void,This method writes out the preamble associated with the XML encoding if it has not been written already and then writes out all of the values that been written to the stream since the last time flush was called.
XMLEncoder,getOwner(),Object,Gets the owner of this encoder.
XMLEncoder,setOwner(Object owner),void,Sets the owner of this encoder to owner.
XMLEncoder,writeExpression(Expression oldExp),void,Records the Expression so that the Encoder will produce the actual output when the stream is flushed.
XMLEncoder,writeObject(Object o),void,Write an XML representation of the specified object to the output.
XMLEncoder,writeStatement(Statement oldStm),void,Records the Statement so that the Encoder will produce the actual output when the stream is flushed.
