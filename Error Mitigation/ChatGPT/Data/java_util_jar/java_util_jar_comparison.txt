Sample: 0 Attributes
----------------------------------------------------------------
1. `String getValue(String name)`: This method returns the value of the specified attribute name.
2. `String putValue(String name, String value)`: This method associates the specified value with the specified attribute name.
3. `boolean containsKey(Object name)`: This method returns true if this Attributes contains the specified attribute name.
4. `Set<Map.Entry<Object, Object>> entrySet()`: This method returns a Set view of the attribute name-value mappings contained in this Attributes.
5. `void clear()`: This method removes all attributes from this Attributes.
================================================================

Sample: 1 Attributes.Name
----------------------------------------------------------------
1. `String toString()`: This method returns the name as a String.
2. `int hashCode()`: This method returns the hash code value for the attribute name.
3. `boolean equals(Object o)`: This method compares this attribute name to the specified object.
4. `int length()`: This method returns the length of the attribute name.
5. `char charAt(int index)`: This method returns the character at the specified index in the attribute name.
================================================================

Sample: 2 JarEntry
----------------------------------------------------------------
1. `String getName()`: This method returns the name of the JAR file entry.
2. `long getSize()`: This method returns the uncompressed size of the JAR file entry data, or -1 if unknown.
3. `long getTime()`: This method returns the last modification time of the JAR file entry, or -1 if unknown.
4. `InputStream getInputStream()`: This method returns an input stream for reading the contents of the JAR file entry.
5. `Attributes getAttributes()`: This method returns the attributes for the JAR file entry, or null if no attributes are present.
================================================================

Sample: 3 JarFile
----------------------------------------------------------------
1. `Enumeration<JarEntry> entries()`: This method returns an enumeration of the JarEntries in this JarFile.
2. `JarEntry getJarEntry(String name)`: This method returns the JarEntry for the specified entry name in the JarFile.
3. `Manifest getManifest()`: This method returns the Manifest for this JarFile, or null if no manifest is available.
4. `void close()`: This method closes the JarFile.
5. `InputStream getInputStream(ZipEntry ze)`: This method returns an input stream for reading the contents of the specified ZipEntry.
================================================================

Sample: 4 JarInputStream
----------------------------------------------------------------
1. `JarEntry getNextJarEntry()`: This method returns the next JAR file entry or null if there are no more entries.
2. `void closeEntry()`: This method closes the current JAR file entry and positions the stream for reading the next entry.
3. `Manifest getManifest()`: This method returns the Manifest object associated with the JAR file, or null if no manifest is available.
4. `int read(byte[] buffer, int offset, int length)`: This method reads up to length bytes of data from the current JAR entry into an array of bytes.
5. `JarEntry getNextEntry()`: This method positions the stream to the next JAR file entry and returns the next JarEntry object, or null if there are no more entries.
================================================================

Sample: 5 JarOutputStream
----------------------------------------------------------------
1. `void putNextEntry(ZipEntry e)`: This method puts the next ZIP entry into the JAR file.
2. `void setComment(String comment)`: This method sets the comment for the JAR file.
3. `void setLevel(int level)`: This method sets the compression level for the JAR file.
4. `void finish()`: This method finishes writing the contents of the JAR file.
5. `void closeEntry()`: This method closes the current ZIP entry being written.
================================================================

Sample: 6 Manifest
----------------------------------------------------------------
1. `Attributes getMainAttributes()`: This method returns the main Attributes for the Manifest.
2. `Attributes getAttributes(String name)`: This method returns the Attributes for the specified entry name.
3. `void clear()`: This method clears all the entries in the Manifest.
4. `void write(OutputStream out) throws IOException`: This method writes the Manifest to the specified output stream.
5. `void read(InputStream is) throws IOException`: This method reads the Manifest from the specified input stream.
================================================================

Sample: 7 Pack200
----------------------------------------------------------------
1. `void pack(File in, OutputStream out)`: This method packs a JAR file to a packed stream in Pack200 format.
2. `void pack(JarFile in, OutputStream out)`: This method packs a JAR file to a packed stream in Pack200 format.
3. `void unpack(InputStream in, JarOutputStream out)`: This method unpacks a packed stream in Pack200 format to a JAR file.
4. `void unpack(File in, JarOutputStream out)`: This method unpacks a packed stream in Pack200 format to a JAR file.
5. `SortedMap<String, String> properties()`: This method returns a sorted map of the properties of the Pack200 implementation.
================================================================

