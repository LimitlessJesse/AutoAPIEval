Sample: ImageInputStreamSpi_2
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageInputStreamSpi_2.java:7: error: <anonymous ImageInputStreamSpi_2$1> is not abstract and does not override abstract method createInputStreamInstance(Object,boolean,File) in ImageInputStreamSpi
        ImageInputStreamSpi spi = new ImageInputStreamSpi() {
                                                            ^
1 error


================================================================

Sample: ImageInputStreamSpi_3
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageInputStreamSpi_3.java:5: error: <anonymous ImageInputStreamSpi_3$1> is not abstract and does not override abstract method createInputStreamInstance(Object,boolean,File) in ImageInputStreamSpi
        ImageInputStreamSpi spi = new ImageInputStreamSpi() {
                                                            ^
1 error


================================================================

Sample: ImageInputStreamSpi_4
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageInputStreamSpi_4.java:5: error: <anonymous ImageInputStreamSpi_4$1> is not abstract and does not override abstract method createInputStreamInstance(Object,boolean,File) in ImageInputStreamSpi
        ImageInputStreamSpi spi = new ImageInputStreamSpi() {
                                                            ^
1 error


================================================================

Sample: ImageOutputStreamSpi_5
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageOutputStreamSpi_5.java:7: error: <anonymous ImageOutputStreamSpi_5$1> is not abstract and does not override abstract method createOutputStreamInstance(Object,boolean,File) in ImageOutputStreamSpi
        ImageOutputStreamSpi spi = new ImageOutputStreamSpi() {
                                                              ^
1 error


================================================================

Sample: ImageReaderWriterSpi_4
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageReaderWriterSpi_4.java:5: error: <anonymous ImageReaderWriterSpi_4$1> is not abstract and does not override abstract method getDescription(Locale) in IIOServiceProvider
        ImageReaderWriterSpi spi = new ImageReaderWriterSpi() {
                                                              ^
1 error


================================================================

Sample: ImageReaderWriterSpi_5
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageReaderWriterSpi_5.java:5: error: <anonymous ImageReaderWriterSpi_5$1> is not abstract and does not override abstract method getDescription(Locale) in IIOServiceProvider
        ImageReaderWriterSpi spi = new ImageReaderWriterSpi() {
                                                              ^
1 error


================================================================

Sample: ImageTranscoderSpi_1
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ImageTranscoderSpi_1.java:17: error: cannot find symbol
    static class ImageTranscoderImpl implements ImageTranscoder {
                                                ^
  symbol:   class ImageTranscoder
  location: class ImageTranscoderSpi_1
./Data/javax_imageio_spi/javaFiles/ImageTranscoderSpi_1.java:7: error: cannot find symbol
            public ImageTranscoder createTranscoderInstance() {
                   ^
  symbol: class ImageTranscoder
./Data/javax_imageio_spi/javaFiles/ImageTranscoderSpi_1.java:5: error: <anonymous ImageTranscoderSpi_1$1> is not abstract and does not override abstract method getWriterServiceProviderName() in ImageTranscoderSpi
        ImageTranscoderSpi spi = new ImageTranscoderSpi() {
                                                          ^
./Data/javax_imageio_spi/javaFiles/ImageTranscoderSpi_1.java:13: error: cannot find symbol
        ImageTranscoder transcoder = spi.createTranscoderInstance();
        ^
  symbol:   class ImageTranscoder
  location: class ImageTranscoderSpi_1
4 errors


================================================================

Sample: ServiceRegistry_1
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ServiceRegistry_1.java:5: error: constructor ServiceRegistry in class ServiceRegistry cannot be applied to given types;
        ServiceRegistry registry = new ServiceRegistry();
                                   ^
  required: Iterator<Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: ServiceRegistry_2
----------------------------------------------------------------
output:
./Data/javax_imageio_spi/javaFiles/ServiceRegistry_2.java:5: error: constructor ServiceRegistry in class ServiceRegistry cannot be applied to given types;
        ServiceRegistry registry = new ServiceRegistry();
                                   ^
  required: Iterator<Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

