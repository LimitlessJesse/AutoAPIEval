Sample: AccessControlContext_2
----------------------------------------------------------------
stderr:
./Data/java_security/javaFiles/AccessControlContext_2.java:6: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext acc = new AccessControlContext(null);
        ^
./Data/java_security/javaFiles/AccessControlContext_2.java:6: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext acc = new AccessControlContext(null);
                                       ^
./Data/java_security/javaFiles/AccessControlContext_2.java:7: warning: [removal] DomainCombiner in java.security has been deprecated and marked for removal
        DomainCombiner domainCombiner = acc.getDomainCombiner();
        ^
3 warnings
Exception in thread "main" java.lang.NullPointerException: Cannot read the array length because "context" is null
	at java.base/java.security.AccessControlContext.<init>(AccessControlContext.java:139)
	at AccessControlContext_2.main(AccessControlContext_2.java:6)

================================================================

Sample: AccessControlContext_3
----------------------------------------------------------------
stdout:
Are the contexts equal? true

stderr:
./Data/java_security/javaFiles/AccessControlContext_3.java:7: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context1 = new AccessControlContext(domains);
        ^
./Data/java_security/javaFiles/AccessControlContext_3.java:7: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context1 = new AccessControlContext(domains);
                                            ^
./Data/java_security/javaFiles/AccessControlContext_3.java:8: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context2 = new AccessControlContext(domains);
        ^
./Data/java_security/javaFiles/AccessControlContext_3.java:8: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context2 = new AccessControlContext(domains);
                                            ^
4 warnings

================================================================

Sample: AccessControlContext_4
----------------------------------------------------------------
stdout:
Hash code value for the context: 523505910

stderr:
./Data/java_security/javaFiles/AccessControlContext_4.java:9: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context = new AccessControlContext(new ProtectionDomain[] {pd1, pd2});
        ^
./Data/java_security/javaFiles/AccessControlContext_4.java:9: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context = new AccessControlContext(new ProtectionDomain[] {pd1, pd2});
                                           ^
2 warnings

================================================================

Sample: AccessController_3
----------------------------------------------------------------
stdout:
Hello from privileged action

stderr:
./Data/java_security/javaFiles/AccessController_3.java:13: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context = AccessController.getContext();
        ^
./Data/java_security/javaFiles/AccessController_3.java:13: warning: [removal] AccessController in java.security has been deprecated and marked for removal
        AccessControlContext context = AccessController.getContext();
                                       ^
./Data/java_security/javaFiles/AccessController_3.java:15: warning: [removal] AccessController in java.security has been deprecated and marked for removal
        String result = AccessController.doPrivileged(action, context);
                        ^
3 warnings

================================================================

Sample: AccessController_4
----------------------------------------------------------------
stdout:
Hello, World!

stderr:
./Data/java_security/javaFiles/AccessController_4.java:9: warning: [removal] AccessController in java.security has been deprecated and marked for removal
            String result = AccessController.doPrivileged(new PrivilegedExceptionAction<String>() {
                            ^
./Data/java_security/javaFiles/AccessController_4.java:13: warning: [removal] AccessController in java.security has been deprecated and marked for removal
            }, AccessController.getContext());
               ^
2 warnings

================================================================

Sample: AccessController_5
----------------------------------------------------------------
stdout:
AccessControlContext: java.security.AccessControlContext@7c7645c2

stderr:
./Data/java_security/javaFiles/AccessController_5.java:6: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext context = AccessController.getContext();
        ^
./Data/java_security/javaFiles/AccessController_5.java:6: warning: [removal] AccessController in java.security has been deprecated and marked for removal
        AccessControlContext context = AccessController.getContext();
                                       ^
2 warnings

================================================================

Sample: AlgorithmParameterGenerator_1
----------------------------------------------------------------
stdout:
Algorithm not found: AES AlgorithmParameterGenerator not available

================================================================

Sample: AlgorithmParameterGenerator_2
----------------------------------------------------------------
stdout:
Generated parameters: 
	p:     bf153dfb 96331da7 a19958d6 f95b9a12 549ce76a ba6e4c1b 6f487636 4bcb1373
    08464e49 f23017b5 af84a2a6 c5180ef5 9df557fd 13efc0ca 8d0288c6 1009ba5f
    631b94d1 36c1fe9f ed134bb7 9ecaee03 b901e8c5 cda3f167 8147b15d 24262ad5
    c9a84436 f6069bd0 09fa62cd db33312a ca55d545 4913e23c 724a356b 4f6ea095
	q:     e6a0190c 5213f30e d411298c 08fe4ffb 8d7e9c15
	g:     98b12434 3120e721 49b2e78a e9071845 ae85eb52 8f097382 147557b8 be732133
    ac210825 720e74d6 43e76c6e 9cf1eb0f eea5151f 73ea6681 cbc8ec57 51208f29
    eddc19eb ad80e563 dbe85739 de4ab9aa 702e8d93 f4b145d1 dbd607cb d3b4eabc
    4e8b4e37 452164e8 591a6db8 c93fe091 2fd32b6f 795cdbee 2cf12429 33dd0b50


================================================================

Sample: AlgorithmParameterGenerator_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParameterGenerator_3.java:2: error: cannot find symbol
import java.security.AlgorithmParameterSpec;
                    ^
  symbol:   class AlgorithmParameterSpec
  location: package java.security
./Data/java_security/javaFiles/AlgorithmParameterGenerator_3.java:10: error: cannot find symbol
            AlgorithmParameterSpec paramSpec = null; // Initialize with appropriate values
            ^
  symbol:   class AlgorithmParameterSpec
  location: class AlgorithmParameterGenerator_3
2 errors


================================================================

Sample: AlgorithmParameterGenerator_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParameterGenerator_4.java:2: error: cannot find symbol
import java.security.AlgorithmParameterSpec;
                    ^
  symbol:   class AlgorithmParameterSpec
  location: package java.security
./Data/java_security/javaFiles/AlgorithmParameterGenerator_4.java:10: error: cannot find symbol
            AlgorithmParameterSpec paramSpec = null; // Initialize with appropriate values
            ^
  symbol:   class AlgorithmParameterSpec
  location: class AlgorithmParameterGenerator_4
2 errors


================================================================

Sample: AlgorithmParameterGeneratorSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParameterGeneratorSpi_1.java:10: error: MyAlgorithmParameterGeneratorSpi is not abstract and does not override abstract method engineGenerateParameters() in AlgorithmParameterGeneratorSpi
    static class MyAlgorithmParameterGeneratorSpi extends AlgorithmParameterGeneratorSpi {
           ^
1 error


================================================================

Sample: AlgorithmParameterGeneratorSpi_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParameterGeneratorSpi_2.java:6: error: <anonymous AlgorithmParameterGeneratorSpi_2$1> is not abstract and does not override abstract method engineInit(AlgorithmParameterSpec,SecureRandom) in AlgorithmParameterGeneratorSpi
        AlgorithmParameterGeneratorSpi spi = new AlgorithmParameterGeneratorSpi() {
                                                                                  ^
1 error


================================================================

Sample: AlgorithmParameterGeneratorSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParameterGeneratorSpi_3.java:8: error: <anonymous AlgorithmParameterGeneratorSpi_3$1> is not abstract and does not override abstract method engineGenerateParameters() in AlgorithmParameterGeneratorSpi
        AlgorithmParameterGeneratorSpi spi = new AlgorithmParameterGeneratorSpi() {
                                                                                  ^
./Data/java_security/javaFiles/AlgorithmParameterGeneratorSpi_3.java:19: error: no suitable method found for engineInit(AlgorithmParameterSpec,SecureRandom)
            spi.engineInit(params, random);
               ^
    method AlgorithmParameterGeneratorSpi.engineInit(AlgorithmParameterSpec,SecureRandom) is not applicable
      (engineInit(AlgorithmParameterSpec,SecureRandom) has protected access in AlgorithmParameterGeneratorSpi)
    method AlgorithmParameterGeneratorSpi.engineInit(int,SecureRandom) is not applicable
      (argument mismatch; AlgorithmParameterSpec cannot be converted to int)
2 errors


================================================================

Sample: AlgorithmParametersSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParametersSpi_1.java:6: error: <anonymous AlgorithmParametersSpi_1$1> is not abstract and does not override abstract method engineToString() in AlgorithmParametersSpi
        AlgorithmParametersSpi spi = new AlgorithmParametersSpi() {
                                                                  ^
./Data/java_security/javaFiles/AlgorithmParametersSpi_1.java:15: error: method engineGetEncoded in class AlgorithmParametersSpi cannot be applied to given types;
            byte[] encodedParams = spi.engineGetEncoded();
                                      ^
  required: no arguments
  found:    no arguments
  reason: engineGetEncoded() has protected access in AlgorithmParametersSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: AlgorithmParametersSpi_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:5: error: class MyAlgorithmParametersSpi is public, should be declared in a file named MyAlgorithmParametersSpi.java
public class MyAlgorithmParametersSpi extends AlgorithmParametersSpi {
       ^
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:1: error: cannot find symbol
import java.security.AlgorithmParameterSpec;
                    ^
  symbol:   class AlgorithmParameterSpec
  location: package java.security
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:3: error: cannot find symbol
import java.security.InvalidParameterSpecException;
                    ^
  symbol:   class InvalidParameterSpecException
  location: package java.security
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:8: error: cannot find symbol
    protected void engineInit(AlgorithmParameterSpec paramSpec) throws InvalidParameterSpecException {
                              ^
  symbol:   class AlgorithmParameterSpec
  location: class MyAlgorithmParametersSpi
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:8: error: cannot find symbol
    protected void engineInit(AlgorithmParameterSpec paramSpec) throws InvalidParameterSpecException {
                                                                       ^
  symbol:   class InvalidParameterSpecException
  location: class MyAlgorithmParametersSpi
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:20: error: cannot find symbol
    private static class MyAlgorithmParameterSpec implements AlgorithmParameterSpec {
                                                             ^
  symbol:   class AlgorithmParameterSpec
  location: class MyAlgorithmParametersSpi
./Data/java_security/javaFiles/AlgorithmParametersSpi_2.java:15: error: cannot find symbol
        AlgorithmParameterSpec myParamSpec = new MyAlgorithmParameterSpec(); // Example parameter specification
        ^
  symbol:   class AlgorithmParameterSpec
  location: class MyAlgorithmParametersSpi
7 errors


================================================================

Sample: AlgorithmParametersSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParametersSpi_3.java:17: error: CustomAlgorithmParametersSpi is not abstract and does not override abstract method engineToString() in AlgorithmParametersSpi
class CustomAlgorithmParametersSpi extends AlgorithmParametersSpi {
^
1 error


================================================================

Sample: AlgorithmParametersSpi_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AlgorithmParametersSpi_5.java:6: error: <anonymous AlgorithmParametersSpi_5$1> is not abstract and does not override abstract method engineToString() in AlgorithmParametersSpi
        AlgorithmParametersSpi spi = new AlgorithmParametersSpi() {
                                                                  ^
1 error


================================================================

Sample: AllPermission_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AllPermission_1.java:7: error: constructor Permission in class Permission cannot be applied to given types;
        Permission permission = new Permission() {
                                ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/AllPermission_1.java:9: error: getName() in <anonymous AllPermission_1$1> cannot override getName() in Permission
            public String getName() {
                          ^
  overridden method is final
2 errors


================================================================

Sample: AllPermission_2
----------------------------------------------------------------
stdout:
Actions: <all actions>

================================================================

Sample: AllPermission_3
----------------------------------------------------------------
stdout:
Are the two AllPermission objects equal? true

================================================================

Sample: AllPermission_4
----------------------------------------------------------------
stdout:
Hash code value: 1

================================================================

Sample: AuthProvider_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AuthProvider_2.java:18: error: CustomAuthProvider is not abstract and does not override abstract method setCallbackHandler(CallbackHandler) in AuthProvider
class CustomAuthProvider extends AuthProvider {
^
1 error


================================================================

Sample: AuthProvider_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AuthProvider_5.java:12: error: AuthProviderImpl is not abstract and does not override abstract method logout() in AuthProvider
class AuthProviderImpl extends AuthProvider {
^
./Data/java_security/javaFiles/AuthProvider_5.java:19: error: MyCallbackHandler is not abstract and does not override abstract method handle(Callback[]) in CallbackHandler
class MyCallbackHandler implements CallbackHandler {
^
2 errors


================================================================

Sample: BasicPermission_1
----------------------------------------------------------------
stdout:


================================================================

Sample: BasicPermission_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/BasicPermission_2.java:5: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission1 = new BasicPermission("test", null);
                                      ^
./Data/java_security/javaFiles/BasicPermission_2.java:6: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission2 = new BasicPermission("test", null);
                                      ^
2 errors


================================================================

Sample: BasicPermission_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/BasicPermission_3.java:5: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission1 = new BasicPermission("permission1");
                                      ^
./Data/java_security/javaFiles/BasicPermission_3.java:6: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission2 = new BasicPermission("permission2");
                                      ^
2 errors


================================================================

Sample: BasicPermission_4
----------------------------------------------------------------
stdout:
Hash code value: 3556498

================================================================

Sample: CodeSigner_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSigner_2.java:7: error: constructor CertPath in class CertPath cannot be applied to given types;
        CodeSigner codeSigner = new CodeSigner(new CertPath() {
                                               ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/CodeSigner_2.java:19: error: cannot find symbol
            public Iterator<String> getEncodings() {
                   ^
  symbol: class Iterator
./Data/java_security/javaFiles/CodeSigner_2.java:7: error: <anonymous CodeSigner_2$1> is not abstract and does not override abstract method getCertificates() in CertPath
        CodeSigner codeSigner = new CodeSigner(new CertPath() {
                                                              ^
./Data/java_security/javaFiles/CodeSigner_2.java:14: error: getEncoded(String) in <anonymous CodeSigner_2$1> cannot override getEncoded(String) in CertPath
            public String getEncoded(String encoding) {
                          ^
  return type String is not compatible with byte[]
./Data/java_security/javaFiles/CodeSigner_2.java:13: error: method does not override or implement a method from a supertype
            @Override
            ^
5 errors


================================================================

Sample: CodeSigner_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSigner_4.java:6: error: incompatible types: Object[] cannot be converted to CertPath
        CodeSigner signer1 = new CodeSigner(new Object[]{}, null);
                                            ^
./Data/java_security/javaFiles/CodeSigner_4.java:7: error: incompatible types: Object[] cannot be converted to CertPath
        CodeSigner signer2 = new CodeSigner(new Object[]{}, null);
                                            ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: CodeSigner_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException
	at java.base/java.security.CodeSigner.<init>(CodeSigner.java:76)
	at CodeSigner_5.main(CodeSigner_5.java:6)

================================================================

Sample: CodeSource_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSource_1.java:6: error: reference to CodeSource is ambiguous
        CodeSource codeSource = new CodeSource(null, null); // Create a CodeSource object
                                ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
1 error


================================================================

Sample: CodeSource_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSource_2.java:6: error: reference to CodeSource is ambiguous
        CodeSource codeSource = new CodeSource(new URL("https://example.com"), null);
                                ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
1 error


================================================================

Sample: CodeSource_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSource_3.java:5: error: reference to CodeSource is ambiguous
        CodeSource codeSource1 = new CodeSource(null, null);
                                 ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
./Data/java_security/javaFiles/CodeSource_3.java:6: error: reference to CodeSource is ambiguous
        CodeSource codeSource2 = new CodeSource(null, null);
                                 ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
2 errors


================================================================

Sample: CodeSource_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSource_4.java:5: error: reference to CodeSource is ambiguous
        CodeSource codeSource1 = new CodeSource(null, null);
                                 ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
./Data/java_security/javaFiles/CodeSource_4.java:6: error: reference to CodeSource is ambiguous
        CodeSource codeSource2 = new CodeSource(null, null);
                                 ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
2 errors


================================================================

Sample: CodeSource_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSource_5.java:5: error: reference to CodeSource is ambiguous
        CodeSource codeSource = new CodeSource(null, null);
                                ^
  both constructor CodeSource(URL,Certificate[]) in CodeSource and constructor CodeSource(URL,CodeSigner[]) in CodeSource match
1 error


================================================================

Sample: DigestInputStream_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/DigestInputStream_1.java:21: error: cannot find symbol
        } catch (IOException | NoSuchAlgorithmException e) {
                               ^
  symbol:   class NoSuchAlgorithmException
  location: class DigestInputStream_1
1 error


================================================================

Sample: DigestInputStream_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/DigestInputStream_3.java:22: error: cannot find symbol
        } catch (IOException | NoSuchAlgorithmException e) {
                               ^
  symbol:   class NoSuchAlgorithmException
  location: class DigestInputStream_3
1 error


================================================================

Sample: DigestInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: example.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at DigestInputStream_4.main(DigestInputStream_4.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: DigestInputStream_5
----------------------------------------------------------------
stdout:
Digest value: �
��d�uA����.?�

================================================================

Sample: DigestOutputStream_1
----------------------------------------------------------------
stdout:
Digest value: ��`!�+հ�gb���å1�݁��
K(h�6!��o

================================================================

Sample: DigestOutputStream_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/DigestOutputStream_2.java:6: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        DigestOutputStream digestOutputStream = new DigestOutputStream(System.out, MessageDigest.getInstance("SHA-256"));
                                                                                                            ^
./Data/java_security/javaFiles/DigestOutputStream_2.java:7: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        MessageDigest digest = MessageDigest.getInstance("SHA-256");
                                                        ^
2 errors


================================================================

Sample: DigestOutputStream_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/DigestOutputStream_3.java:6: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        DigestOutputStream digestOutputStream = new DigestOutputStream(System.out, MessageDigest.getInstance("SHA-256"));
                                                                                                            ^
1 error


================================================================

Sample: DigestOutputStream_4
----------------------------------------------------------------
stdout:
Digest value: U��Ђd�y]9	q���ԕr�O�U��������

================================================================

Sample: DigestOutputStream_5
----------------------------------------------------------------
stdout:
Digest value: ��`!�+հ�gb���å1�݁��
K(h�6!��o

================================================================

Sample: GuardedObject_1
----------------------------------------------------------------
stdout:
Guarded Object: Secret

================================================================

Sample: Identity_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Identity_1.java:5: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity() {
        ^
./Data/java_security/javaFiles/Identity_1.java:5: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity() {
                                ^
./Data/java_security/javaFiles/Identity_1.java:7: error: getName() in <anonymous Identity_1$1> cannot override getName() in Identity
            public String getName() {
                          ^
  overridden method is final
1 error
2 warnings


================================================================

Sample: Identity_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Identity_2.java:5: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity");
        ^
./Data/java_security/javaFiles/Identity_2.java:5: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity");
                                ^
./Data/java_security/javaFiles/Identity_2.java:5: error: Identity is abstract; cannot be instantiated
        Identity identity = new Identity("TestIdentity");
                            ^
./Data/java_security/javaFiles/Identity_2.java:7: error: cannot find symbol
        PublicKey publicKey = identity.getPublicKey();
        ^
  symbol:   class PublicKey
  location: class Identity_2
2 errors
2 warnings


================================================================

Sample: Identity_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Identity_3.java:6: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity() {
        ^
./Data/java_security/javaFiles/Identity_3.java:6: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity() {
                                ^
./Data/java_security/javaFiles/Identity_3.java:8: error: certificates() in <anonymous Identity_3$1> cannot override certificates() in Identity
            public Certificate[] certificates() {
                                 ^
  return type java.security.cert.Certificate[] is not compatible with java.security.Certificate[]
./Data/java_security/javaFiles/Identity_3.java:7: error: method does not override or implement a method from a supertype
            @Override
            ^
./Data/java_security/javaFiles/Identity_3.java:14: error: incompatible types: java.security.Certificate[] cannot be converted to java.security.cert.Certificate[]
        Certificate[] certs = identity.certificates();
                                                   ^
3 errors
2 warnings


================================================================

Sample: Identity_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Identity_4.java:7: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity");
        ^
./Data/java_security/javaFiles/Identity_4.java:7: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity");
                                ^
./Data/java_security/javaFiles/Identity_4.java:7: error: Identity is abstract; cannot be instantiated
        Identity identity = new Identity("TestIdentity");
                            ^
./Data/java_security/javaFiles/Identity_4.java:11: error: incompatible types: java.security.cert.Certificate cannot be converted to java.security.Certificate
            identity.addCertificate(certificate);
                                    ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors
2 warnings


================================================================

Sample: Identity_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Identity_5.java:7: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity");
        ^
./Data/java_security/javaFiles/Identity_5.java:7: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity");
                                ^
./Data/java_security/javaFiles/Identity_5.java:7: error: Identity is abstract; cannot be instantiated
        Identity identity = new Identity("TestIdentity");
                            ^
./Data/java_security/javaFiles/Identity_5.java:11: error: incompatible types: java.security.cert.Certificate cannot be converted to java.security.Certificate
            identity.removeCertificate(certificate);
                                       ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors
2 warnings


================================================================

Sample: IdentityScope_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/IdentityScope_1.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope identityScope = IdentityScope.getSystemScope();
        ^
./Data/java_security/javaFiles/IdentityScope_1.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope identityScope = IdentityScope.getSystemScope();
                                      ^
./Data/java_security/javaFiles/IdentityScope_1.java:8: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("Alice", null);
        ^
./Data/java_security/javaFiles/IdentityScope_1.java:8: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("Alice", null);
                                ^
./Data/java_security/javaFiles/IdentityScope_1.java:8: error: Identity is abstract; cannot be instantiated
        Identity identity = new Identity("Alice", null);
                            ^
1 error
4 warnings


================================================================

Sample: IdentityScope_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/IdentityScope_2.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope scope = new IdentityScope() {
        ^
./Data/java_security/javaFiles/IdentityScope_2.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope scope = new IdentityScope() {
                                  ^
./Data/java_security/javaFiles/IdentityScope_2.java:7: error: <anonymous IdentityScope_2$1> is not abstract and does not override abstract method identities() in IdentityScope
        IdentityScope scope = new IdentityScope() {
                                                  ^
./Data/java_security/javaFiles/IdentityScope_2.java:9: warning: [removal] Identity in java.security has been deprecated and marked for removal
            public Identity getIdentity(Principal principal) {
                   ^
./Data/java_security/javaFiles/IdentityScope_2.java:22: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = scope.getIdentity(principal);
        ^
1 error
4 warnings


================================================================

Sample: IdentityScope_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/IdentityScope_3.java:6: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope scope = new IdentityScope() {
        ^
./Data/java_security/javaFiles/IdentityScope_3.java:6: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope scope = new IdentityScope() {
                                  ^
./Data/java_security/javaFiles/IdentityScope_3.java:6: error: <anonymous IdentityScope_3$1> is not abstract and does not override abstract method identities() in IdentityScope
        IdentityScope scope = new IdentityScope() {
                                                  ^
./Data/java_security/javaFiles/IdentityScope_3.java:8: warning: [removal] Identity in java.security has been deprecated and marked for removal
            public Identity getIdentity(String name) {
                   ^
./Data/java_security/javaFiles/IdentityScope_3.java:15: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = scope.getIdentity(name);
        ^
1 error
4 warnings


================================================================

Sample: IdentityScope_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/IdentityScope_4.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope identityScope = new IdentityScope() {
        ^
./Data/java_security/javaFiles/IdentityScope_4.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope identityScope = new IdentityScope() {
                                          ^
./Data/java_security/javaFiles/IdentityScope_4.java:7: error: <anonymous IdentityScope_4$1> is not abstract and does not override abstract method removeIdentity(Identity) in IdentityScope
        IdentityScope identityScope = new IdentityScope() {
                                                          ^
./Data/java_security/javaFiles/IdentityScope_4.java:9: warning: [removal] Identity in java.security has been deprecated and marked for removal
            public Enumeration<Identity> identities() {
                               ^
./Data/java_security/javaFiles/IdentityScope_4.java:15: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Enumeration<Identity> identities = identityScope.identities();
                    ^
./Data/java_security/javaFiles/IdentityScope_4.java:17: warning: [removal] Identity in java.security has been deprecated and marked for removal
            Identity identity = identities.nextElement();
            ^
1 error
5 warnings


================================================================

Sample: IdentityScope_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/IdentityScope_5.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope identityScope = IdentityScope.getSystemScope();
        ^
./Data/java_security/javaFiles/IdentityScope_5.java:7: warning: [removal] IdentityScope in java.security has been deprecated and marked for removal
        IdentityScope identityScope = IdentityScope.getSystemScope();
                                      ^
./Data/java_security/javaFiles/IdentityScope_5.java:8: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity", null);
        ^
./Data/java_security/javaFiles/IdentityScope_5.java:8: warning: [removal] Identity in java.security has been deprecated and marked for removal
        Identity identity = new Identity("TestIdentity", null);
                                ^
./Data/java_security/javaFiles/IdentityScope_5.java:8: error: Identity is abstract; cannot be instantiated
        Identity identity = new Identity("TestIdentity", null);
                            ^
1 error
4 warnings


================================================================

Sample: KeyFactory_1
----------------------------------------------------------------
stderr:
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: Missing key encoding
	at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:241)
	at java.base/java.security.KeyFactory.generatePublic(KeyFactory.java:351)
	at KeyFactory_1.main(KeyFactory_1.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.security.InvalidKeyException: Missing key encoding
	at java.base/sun.security.rsa.RSAPublicKeyImpl.<init>(RSAPublicKeyImpl.java:151)
	at java.base/sun.security.rsa.RSAPublicKeyImpl.newKey(RSAPublicKeyImpl.java:80)
	at java.base/sun.security.rsa.RSAKeyFactory.generatePublic(RSAKeyFactory.java:327)
	at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:237)
	... 9 more

================================================================

Sample: KeyFactory_2
----------------------------------------------------------------
stderr:
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: Missing key encoding
	at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:253)
	at java.base/java.security.KeyFactory.generatePrivate(KeyFactory.java:389)
	at KeyFactory_2.main(KeyFactory_2.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.security.InvalidKeyException: Missing key encoding
	at java.base/sun.security.rsa.RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:88)
	at java.base/sun.security.rsa.RSAKeyFactory.generatePrivate(RSAKeyFactory.java:352)
	at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:249)
	... 9 more

================================================================

Sample: KeyFactory_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyFactory_3.java:15: error: illegal start of expression
            byte[] publicKeyBytes = {...}; // Public key bytes
                                     ^
./Data/java_security/javaFiles/KeyFactory_3.java:11: error: 'try' without 'catch', 'finally' or resource declarations
        try {
        ^
./Data/java_security/javaFiles/KeyFactory_3.java:23: error: illegal start of type
        } catch (NoSuchAlgorithmException | InvalidKeySpecException | InvalidKeyException e) {
          ^
./Data/java_security/javaFiles/KeyFactory_3.java:23: error: <identifier> expected
        } catch (NoSuchAlgorithmException | InvalidKeySpecException | InvalidKeyException e) {
                                         ^
./Data/java_security/javaFiles/KeyFactory_3.java:23: error: <identifier> expected
        } catch (NoSuchAlgorithmException | InvalidKeySpecException | InvalidKeyException e) {
                                                                   ^
./Data/java_security/javaFiles/KeyFactory_3.java:23: error: ';' expected
        } catch (NoSuchAlgorithmException | InvalidKeySpecException | InvalidKeyException e) {
                                                                                           ^
./Data/java_security/javaFiles/KeyFactory_3.java:27: error: class, interface, enum, or record expected
}
^
7 errors


================================================================

Sample: KeyFactory_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyFactory_4.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        KeyFactory keyFactory = KeyFactory.getInstance("RSA");
                                                      ^
1 error


================================================================

Sample: KeyFactorySpi_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyFactorySpi_4.java:16: error: illegal start of expression
        Key originalKey = ...; // Initialize with a key
                          ^
1 error


================================================================

Sample: KeyPair_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyPair_1.java:7: error: ';' expected
        PublicKey publicKey = keyPair.getPublic();
                 ^
1 error


================================================================

Sample: KeyPair_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyPair_2.java:7: error: ';' expected
        PrivateKey privateKey = keyPair.getPrivate();
                  ^
1 error


================================================================

Sample: KeyPairGenerator_1
----------------------------------------------------------------
stdout:
Public Key: Sun RSA public key, 2048 bits
  params: null
  modulus: 17206703410659276396870633956246782360409886175972409082861774660603781118425324446573010638334934860468382673568426714546554198099502325298370063264816010296231233346682977643499964427865553212837670899424613847276818603692013915009649298673932569331610788440984539725724612179252422708640181489688089659258997358523355551363413660546769424167027872871443945054829580815697591108319438300699808127565937383260578039369195336699089795676129994080169258104847567124835738798649955822462039595226768005687636267033732296450442771328769054091310766716667454765252079189974069649497071293518210433142677648538138892844839
  public exponent: 65537
Private Key: sun.security.rsa.RSAPrivateCrtKeyImpl@93a90665

================================================================

Sample: KeyPairGenerator_2
----------------------------------------------------------------
================================================================

Sample: KeyPairGenerator_3
----------------------------------------------------------------
stdout:
Algorithm: RSA

================================================================

Sample: KeyPairGenerator_4
----------------------------------------------------------------
stdout:
Provider: SunRsaSign

================================================================

Sample: KeyPairGenerator_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyPairGenerator_5.java:8: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
                                                                            ^
1 error


================================================================

Sample: KeyPairGeneratorSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyPairGeneratorSpi_1.java:6: error: <anonymous KeyPairGeneratorSpi_1$1> is not abstract and does not override abstract method initialize(int,SecureRandom) in KeyPairGeneratorSpi
        KeyPairGeneratorSpi keyPairGenerator = new KeyPairGeneratorSpi() {
                                                                         ^
1 error


================================================================

Sample: KeyPairGeneratorSpi_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyPairGeneratorSpi_2.java:6: error: <anonymous KeyPairGeneratorSpi_2$1> is not abstract and does not override abstract method generateKeyPair() in KeyPairGeneratorSpi
        KeyPairGeneratorSpi keyPairGeneratorSpi = new KeyPairGeneratorSpi() {
                                                                            ^
1 error


================================================================

Sample: KeyPairGeneratorSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyPairGeneratorSpi_3.java:8: error: <anonymous KeyPairGeneratorSpi_3$1> is not abstract and does not override abstract method generateKeyPair() in KeyPairGeneratorSpi
        KeyPairGeneratorSpi keyPairGeneratorSpi = new KeyPairGeneratorSpi() {
                                                                            ^
1 error


================================================================

Sample: KeyRep_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyRep_4.java:11: error: incompatible types: byte[] cannot be converted to String
        Key key = new KeyRep(KeyRep.Type.SECRET, "RAW", new byte[]{1, 2, 3}, "AES");
                                                        ^
./Data/java_security/javaFiles/KeyRep_4.java:13: error: cannot find symbol
            Object resolvedKey = key.readResolve();
                                    ^
  symbol:   method readResolve()
  location: variable key of type Key
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyStore_1
----------------------------------------------------------------
stdout:
KeyStore type: JKS

================================================================

Sample: KeyStore_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_2.java:10: error: unreported exception KeyStoreException; must be caught or declared to be thrown
            KeyStore keyStore = KeyStore.getInstance("JKS");
                                                    ^
1 error


================================================================

Sample: KeyStore_3
----------------------------------------------------------------
stdout:
Keystore stored successfully.

================================================================

Sample: KeyStore_4
----------------------------------------------------------------
================================================================

Sample: KeyStore_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_5.java:12: error: unreported exception IOException; must be caught or declared to be thrown
            keyStore.load(null, password);
                         ^
1 error


================================================================

Sample: KeyStore_Builder_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException
	at java.base/java.security.KeyStore$Builder.newInstance(KeyStore.java:2178)
	at KeyStore_Builder_1.main(KeyStore_Builder_1.java:7)

================================================================

Sample: KeyStore_CallbackHandlerProtection_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_CallbackHandlerProtection_1.java:8: error: cannot find symbol
            public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
                               ^
  symbol: class Callback
./Data/java_security/javaFiles/KeyStore_CallbackHandlerProtection_1.java:8: error: cannot find symbol
            public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
                                                            ^
  symbol: class IOException
./Data/java_security/javaFiles/KeyStore_CallbackHandlerProtection_1.java:8: error: cannot find symbol
            public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
                                                                         ^
  symbol: class UnsupportedCallbackException
3 errors


================================================================

Sample: KeyStore_PasswordProtection_1
----------------------------------------------------------------
stdout:
Retrieved password: mySecretPassword

================================================================

Sample: KeyStore_PasswordProtection_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_PasswordProtection_2.java:2: error: cannot find symbol
import java.security.DestroyFailedException;
                    ^
  symbol:   class DestroyFailedException
  location: package java.security
./Data/java_security/javaFiles/KeyStore_PasswordProtection_2.java:11: error: cannot find symbol
        } catch (DestroyFailedException e) {
                 ^
  symbol:   class DestroyFailedException
  location: class KeyStore_PasswordProtection_2
2 errors


================================================================

Sample: KeyStore_PasswordProtection_3
----------------------------------------------------------------
stdout:
Is password destroyed? false

================================================================

Sample: KeyStore_PrivateKeyEntry_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_PrivateKeyEntry_1.java:7: error: unreported exception KeyStoreException; must be caught or declared to be thrown
        KeyStore keyStore = KeyStore.getInstance("JKS");
                                                ^
./Data/java_security/javaFiles/KeyStore_PrivateKeyEntry_1.java:9: error: unreported exception IOException; must be caught or declared to be thrown
        keyStore.load(null, null);
                     ^
./Data/java_security/javaFiles/KeyStore_PrivateKeyEntry_1.java:12: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) keyStore.getEntry("alias", null);
                                                                                               ^
3 errors


================================================================

Sample: KeyStore_PrivateKeyEntry_2
----------------------------------------------------------------
stderr:
java.lang.NullPointerException: Cannot invoke "java.security.KeyStore$PrivateKeyEntry.getPrivateKey()" because "<local3>" is null
	at KeyStore_PrivateKeyEntry_2.main(KeyStore_PrivateKeyEntry_2.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: KeyStore_PrivateKeyEntry_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: invalid null input
	at java.base/java.security.KeyStore$PrivateKeyEntry.<init>(KeyStore.java:532)
	at java.base/java.security.KeyStore$PrivateKeyEntry.<init>(KeyStore.java:499)
	at KeyStore_PrivateKeyEntry_3.main(KeyStore_PrivateKeyEntry_3.java:5)

================================================================

Sample: KeyStore_SecretKeyEntry_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_1.java:7: error: unreported exception KeyStoreException; must be caught or declared to be thrown
        KeyStore keyStore = KeyStore.getInstance("JKS");
                                                ^
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_1.java:9: error: unreported exception IOException; must be caught or declared to be thrown
        keyStore.load(null, null);
                     ^
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_1.java:12: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        SecretKeyEntry secretKeyEntry = (SecretKeyEntry) keyStore.getEntry("alias", null);
                                                                          ^
3 errors


================================================================

Sample: KeyStore_TrustedCertificateEntry_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_TrustedCertificateEntry_1.java:7: error: unreported exception KeyStoreException; must be caught or declared to be thrown
        KeyStore keyStore = KeyStore.getInstance("JKS");
                                                ^
./Data/java_security/javaFiles/KeyStore_TrustedCertificateEntry_1.java:8: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        TrustedCertificateEntry trustedCertEntry = (TrustedCertificateEntry) keyStore.getEntry("alias", null);
                                                                                              ^
2 errors


================================================================

Sample: KeyStore_TrustedCertificateEntry_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: invalid null input
	at java.base/java.security.KeyStore$TrustedCertificateEntry.<init>(KeyStore.java:742)
	at KeyStore_TrustedCertificateEntry_3.main(KeyStore_TrustedCertificateEntry_3.java:5)

================================================================

Sample: KeyStoreSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_1.java:8: error: <anonymous KeyStoreSpi_1$1> is not abstract and does not override abstract method engineLoad(InputStream,char[]) in KeyStoreSpi
        KeyStoreSpi keyStoreSpi = new KeyStoreSpi() {
                                                    ^
1 error


================================================================

Sample: KeyStoreSpi_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_2.java:6: error: <anonymous KeyStoreSpi_2$1> is not abstract and does not override abstract method engineLoad(InputStream,char[]) in KeyStoreSpi
        KeyStoreSpi keyStoreSpi = new KeyStoreSpi() {
                                                    ^
1 error


================================================================

Sample: KeyStoreSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_3.java:6: error: <anonymous KeyStoreSpi_3$1> is not abstract and does not override abstract method engineStore(OutputStream,char[]) in KeyStoreSpi
        KeyStoreSpi keyStoreSpi = new KeyStoreSpi() {
                                                    ^
1 error


================================================================

Sample: KeyStoreSpi_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_4.java:9: error: <anonymous KeyStoreSpi_4$1> is not abstract and does not override abstract method engineLoad(InputStream,char[]) in KeyStoreSpi
        KeyStoreSpi keyStoreSpi = new KeyStoreSpi() {
                                                    ^
1 error


================================================================

Sample: KeyStoreSpi_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_5.java:6: error: <anonymous KeyStoreSpi_5$1> is not abstract and does not override abstract method engineLoad(InputStream,char[]) in KeyStoreSpi
        KeyStoreSpi keyStoreSpi = new KeyStoreSpi() {
                                                    ^
1 error


================================================================

Sample: MessageDigest_1
----------------------------------------------------------------
stdout:
Message Digest: ����� @J3Ϸ���,e�ͣ+W�w٭�n

================================================================

Sample: MessageDigest_2
----------------------------------------------------------------
stdout:
Hash value: a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e

================================================================

Sample: MessageDigest_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/MessageDigest_3.java:11: error: no suitable method found for digest(byte[],int,int,byte[],int,int)
            int bytesPlaced = md.digest(data, 0, data.length, digest, 0, digest.length);
                                ^
    method MessageDigest.digest() is not applicable
      (actual and formal argument lists differ in length)
    method MessageDigest.digest(byte[],int,int) is not applicable
      (actual and formal argument lists differ in length)
    method MessageDigest.digest(byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: MessageDigest_4
----------------------------------------------------------------
stdout:
Digest reset successfully.

================================================================

Sample: MessageDigest_5
----------------------------------------------------------------
stdout:
Algorithm: SHA-256

================================================================

Sample: MessageDigestSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/MessageDigestSpi_1.java:6: error: <anonymous MessageDigestSpi_1$1> is not abstract and does not override abstract method engineReset() in MessageDigestSpi
        MessageDigestSpi spi = new MessageDigestSpi() {
                                                      ^
./Data/java_security/javaFiles/MessageDigestSpi_1.java:16: error: no suitable method found for engineUpdate(byte)
        spi.engineUpdate(sampleByte);
           ^
    method MessageDigestSpi.engineUpdate(byte) is not applicable
      (engineUpdate(byte) has protected access in MessageDigestSpi)
    method MessageDigestSpi.engineUpdate(ByteBuffer) is not applicable
      (argument mismatch; byte cannot be converted to ByteBuffer)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: MessageDigestSpi_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/MessageDigestSpi_2.java:6: error: <anonymous MessageDigestSpi_2$1> is not abstract and does not override abstract method engineReset() in MessageDigestSpi
        MessageDigestSpi messageDigestSpi = new MessageDigestSpi() {
                                                                   ^
./Data/java_security/javaFiles/MessageDigestSpi_2.java:18: error: method engineUpdate in class MessageDigestSpi cannot be applied to given types;
        messageDigestSpi.engineUpdate(input, offset, len);
                        ^
  required: byte[],int,int
  found:    byte[],int,int
  reason: engineUpdate(byte[],int,int) has protected access in MessageDigestSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: MessageDigestSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/MessageDigestSpi_3.java:16: error: MyMessageDigestSpi is not abstract and does not override abstract method engineUpdate(byte[],int,int) in MessageDigestSpi
class MyMessageDigestSpi extends MessageDigestSpi {
^
1 error


================================================================

Sample: MessageDigestSpi_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/MessageDigestSpi_4.java:7: error: <anonymous MessageDigestSpi_4$1> is not abstract and does not override abstract method engineReset() in MessageDigestSpi
        MessageDigestSpi customDigest = new MessageDigestSpi() {
                                                               ^
./Data/java_security/javaFiles/MessageDigestSpi_4.java:24: error: method engineDigest in class MessageDigestSpi cannot be applied to given types;
            int digestLength = customDigest.engineDigest(outputBuffer, offset, allottedLength);
                                           ^
  required: byte[],int,int
  found:    byte[],int,int
  reason: engineDigest(byte[],int,int) has protected access in MessageDigestSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: MessageDigestSpi_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/MessageDigestSpi_5.java:7: error: <anonymous MessageDigestSpi_5$1> is not abstract and does not override abstract method engineDigest() in MessageDigestSpi
        MessageDigestSpi spi = new MessageDigestSpi() {
                                                      ^
./Data/java_security/javaFiles/MessageDigestSpi_5.java:16: error: engineReset() has protected access in MessageDigestSpi
        spi.engineReset();
           ^
2 errors


================================================================

Sample: Permission_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_1.java:5: error: cannot find symbol
        Permission permission = new FilePermission("/path/to/file", "read,write");
                                    ^
  symbol:   class FilePermission
  location: class Permission_1
1 error


================================================================

Sample: Permission_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_2.java:6: error: constructor Permission in class Permission cannot be applied to given types;
        Permission permission = new Permission() {
                                ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/Permission_2.java:35: error: cannot find symbol
            public PermissionCollection newPermissionCollection() {
                   ^
  symbol: class PermissionCollection
./Data/java_security/javaFiles/Permission_2.java:20: error: getName() in <anonymous Permission_2$1> cannot override getName() in Permission
            public String getName() {
                          ^
  overridden method is final
./Data/java_security/javaFiles/Permission_2.java:41: error: constructor Permission in class Permission cannot be applied to given types;
        boolean isImplied = permission.implies(new Permission() {
                                               ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/Permission_2.java:68: error: cannot find symbol
            public PermissionCollection newPermissionCollection() {
                   ^
  symbol: class PermissionCollection
./Data/java_security/javaFiles/Permission_2.java:53: error: getName() in <anonymous Permission_2$2> cannot override getName() in Permission
            public String getName() {
                          ^
  overridden method is final
6 errors


================================================================

Sample: Permission_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_3.java:6: error: constructor Permission in class Permission cannot be applied to given types;
        Permission permission = new Permission() {
                                ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/Permission_3.java:18: error: getName() in <anonymous Permission_3$1> cannot override getName() in Permission
            public String getName() {
                          ^
  overridden method is final
2 errors


================================================================

Sample: Permission_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_4.java:5: error: Permission is abstract; cannot be instantiated
        Permission permission1 = new Permission("read");
                                 ^
./Data/java_security/javaFiles/Permission_4.java:6: error: Permission is abstract; cannot be instantiated
        Permission permission2 = new Permission("read");
                                 ^
2 errors


================================================================

Sample: Permission_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_5.java:5: error: constructor Permission in class Permission cannot be applied to given types;
        Permission permission = new Permission() {
                                ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/Permission_5.java:5: error: <anonymous Permission_5$1> is not abstract and does not override abstract method getActions() in Permission
        Permission permission = new Permission() {
                                                 ^
./Data/java_security/javaFiles/Permission_5.java:9: error: abstract method hashCode() in Permission cannot be accessed directly
                return super.hashCode();
                            ^
3 errors


================================================================

Sample: PermissionCollection_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PermissionCollection_1.java:12: error: MyPermissionCollection is not abstract and does not override abstract method elements() in PermissionCollection
class MyPermissionCollection extends PermissionCollection {
^
1 error


================================================================

Sample: PermissionCollection_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PermissionCollection_2.java:20: error: MyPermissionCollection is not abstract and does not override abstract method elements() in PermissionCollection
class MyPermissionCollection extends PermissionCollection {
^
./Data/java_security/javaFiles/PermissionCollection_2.java:48: error: abstract method equals(Object) in Permission cannot be accessed directly
        return super.equals(obj);
                    ^
./Data/java_security/javaFiles/PermissionCollection_2.java:60: error: abstract method hashCode() in Permission cannot be accessed directly
        return super.hashCode();
                    ^
./Data/java_security/javaFiles/PermissionCollection_2.java:64: error: newPermissionCollection() in MyPermission cannot override newPermissionCollection() in Permission
    public boolean newPermissionCollection() {
                   ^
  return type boolean is not compatible with PermissionCollection
./Data/java_security/javaFiles/PermissionCollection_2.java:63: error: method does not override or implement a method from a supertype
    @Override
    ^
5 errors


================================================================

Sample: PermissionCollection_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.util.Enumeration.hasMoreElements()" because "<local2>" is null
	at PermissionCollection_3.main(PermissionCollection_3.java:28)

================================================================

Sample: PermissionCollection_4
----------------------------------------------------------------
================================================================

Sample: Permissions_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permissions_1.java:7: error: cannot find symbol
        Permission permission = new FilePermission("/path/to/file", "read");
                                    ^
  symbol:   class FilePermission
  location: class Permissions_1
1 error


================================================================

Sample: Permissions_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permissions_3.java:9: error: Permission is abstract; cannot be instantiated
        Permission permissionToCheck = new Permission("example_permission");
                                       ^
1 error


================================================================

Sample: Permissions_4
----------------------------------------------------------------
================================================================

Sample: PKCS12Attribute_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PKCS12Attribute_2.java:5: error: no suitable constructor found for PKCS12Attribute(no arguments)
        PKCS12Attribute attribute = new PKCS12Attribute();
                                    ^
    constructor PKCS12Attribute.PKCS12Attribute(String,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor PKCS12Attribute.PKCS12Attribute(byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: PKCS12Attribute_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PKCS12Attribute_4.java:5: error: no suitable constructor found for PKCS12Attribute(no arguments)
        PKCS12Attribute attribute1 = new PKCS12Attribute();
                                     ^
    constructor PKCS12Attribute.PKCS12Attribute(String,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor PKCS12Attribute.PKCS12Attribute(byte[]) is not applicable
      (actual and formal argument lists differ in length)
./Data/java_security/javaFiles/PKCS12Attribute_4.java:6: error: no suitable constructor found for PKCS12Attribute(no arguments)
        PKCS12Attribute attribute2 = new PKCS12Attribute();
                                     ^
    constructor PKCS12Attribute.PKCS12Attribute(String,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor PKCS12Attribute.PKCS12Attribute(byte[]) is not applicable
      (actual and formal argument lists differ in length)
2 errors


================================================================

Sample: PKCS12Attribute_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PKCS12Attribute_5.java:5: error: no suitable constructor found for PKCS12Attribute(no arguments)
        PKCS12Attribute attribute = new PKCS12Attribute();
                                    ^
    constructor PKCS12Attribute.PKCS12Attribute(String,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor PKCS12Attribute.PKCS12Attribute(byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: Policy_1
----------------------------------------------------------------
stdout:
java.security.Permissions@16f7c8c1 (
)


stderr:
./Data/java_security/javaFiles/Policy_1.java:7: warning: [removal] Policy in java.security has been deprecated and marked for removal
        Policy policy = Policy.getPolicy();
        ^
./Data/java_security/javaFiles/Policy_1.java:7: warning: [removal] Policy in java.security has been deprecated and marked for removal
        Policy policy = Policy.getPolicy();
                        ^
2 warnings

================================================================

Sample: Policy_2
----------------------------------------------------------------
stderr:
./Data/java_security/javaFiles/Policy_2.java:5: warning: [removal] Policy in java.security has been deprecated and marked for removal
        Policy policy = Policy.getPolicy();
        ^
./Data/java_security/javaFiles/Policy_2.java:5: warning: [removal] Policy in java.security has been deprecated and marked for removal
        Policy policy = Policy.getPolicy();
                        ^
2 warnings

================================================================

Sample: PolicySpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PolicySpi_1.java:13: warning: [removal] Policy in java.security has been deprecated and marked for removal
    static class MyPolicySpi extends Policy {
                                     ^
./Data/java_security/javaFiles/PolicySpi_1.java:14: error: method does not override or implement a method from a supertype
        @Override
        ^
./Data/java_security/javaFiles/PolicySpi_1.java:21: error: MyPermissionCollection is not abstract and does not override abstract method elements() in PermissionCollection
    static class MyPermissionCollection extends PermissionCollection {
           ^
2 errors
1 warning


================================================================

Sample: PolicySpi_2
----------------------------------------------------------------
stdout:
Permission granted: true

stderr:
./Data/java_security/javaFiles/PolicySpi_2.java:15: warning: [removal] PolicySpi in java.security has been deprecated and marked for removal
class MyPolicySpi extends PolicySpi {
                          ^
1 warning

================================================================

Sample: PolicySpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PolicySpi_3.java:5: warning: [removal] PolicySpi in java.security has been deprecated and marked for removal
        PolicySpi policySpi = new PolicySpi() {
        ^
./Data/java_security/javaFiles/PolicySpi_3.java:5: warning: [removal] PolicySpi in java.security has been deprecated and marked for removal
        PolicySpi policySpi = new PolicySpi() {
                                  ^
./Data/java_security/javaFiles/PolicySpi_3.java:5: error: <anonymous PolicySpi_3$1> is not abstract and does not override abstract method engineImplies(ProtectionDomain,Permission) in PolicySpi
        PolicySpi policySpi = new PolicySpi() {
                                              ^
./Data/java_security/javaFiles/PolicySpi_3.java:13: error: engineRefresh() has protected access in PolicySpi
        policySpi.engineRefresh();
                 ^
2 errors
2 warnings


================================================================

Sample: ProtectionDomain_1
----------------------------------------------------------------
stdout:
CodeSource: (file:/home/yixi/comp4522/Rag_openAI_fullDescription/./Data/java_security/javaFiles/ProtectionDomain_1.java <no signer certificates>)

================================================================

Sample: ProtectionDomain_2
----------------------------------------------------------------
stdout:
Permissions for this domain: null

================================================================

Sample: ProtectionDomain_3
----------------------------------------------------------------
stdout:
ClassLoader of this domain: com.sun.tools.javac.launcher.Main$MemoryClassLoader@306279ee

================================================================

Sample: ProtectionDomain_4
----------------------------------------------------------------
================================================================

Sample: ProtectionDomain_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/ProtectionDomain_5.java:48: error: method implies(Permission) is already defined in class SamplePermission
        public boolean implies(Permission permission) {
                       ^
1 error


================================================================

Sample: Provider_1
----------------------------------------------------------------
stdout:
Provider name: MyProvider

stderr:
Note: ./Data/java_security/javaFiles/Provider_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Provider_2
----------------------------------------------------------------
stdout:
Provider version: 1.0

stderr:
Note: ./Data/java_security/javaFiles/Provider_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Provider_5
----------------------------------------------------------------
stdout:
Value: null

stderr:
Note: ./Data/java_security/javaFiles/Provider_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Provider_Service_1
----------------------------------------------------------------
stdout:
Service type: MyService

stderr:
Note: ./Data/java_security/javaFiles/Provider_Service_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Provider_Service_2
----------------------------------------------------------------
stdout:
Algorithm: My security service

stderr:
Note: ./Data/java_security/javaFiles/Provider_Service_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Provider_Service_3
----------------------------------------------------------------
stderr:
Note: ./Data/java_security/javaFiles/Provider_Service_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.security.Provider$Service.getClassName()" because "<local2>" is null
	at Provider_Service_3.main(Provider_Service_3.java:8)

================================================================

Sample: Provider_Service_4
----------------------------------------------------------------
stdout:
Attribute value: null

stderr:
Note: ./Data/java_security/javaFiles/Provider_Service_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: SecureClassLoader_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SecureClassLoader_3.java:13: error: illegal start of expression
        byte[] classData = {0xCAFEBABE, 0x00000000, ...}; // Example class data
                                                    ^
./Data/java_security/javaFiles/SecureClassLoader_3.java:18: error: <identifier> expected
        System.out.println("Defined class: " + myClass.getName());
                          ^
./Data/java_security/javaFiles/SecureClassLoader_3.java:18: error: illegal start of type
        System.out.println("Defined class: " + myClass.getName());
                           ^
./Data/java_security/javaFiles/SecureClassLoader_3.java:20: error: class, interface, enum, or record expected
}
^
4 errors


================================================================

Sample: SecureRandom_1
----------------------------------------------------------------
stdout:
Random Bytes: 89 -60 90 24 -103 -16 -106 -4 107 35 
================================================================

Sample: SecureRandom_5
----------------------------------------------------------------
================================================================

Sample: SecureRandomSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SecureRandomSpi_1.java:5: error: <anonymous SecureRandomSpi_1$1> is not abstract and does not override abstract method engineNextBytes(byte[]) in SecureRandomSpi
        SecureRandomSpi secureRandomSpi = new SecureRandomSpi() {
                                                                ^
./Data/java_security/javaFiles/SecureRandomSpi_1.java:15: error: engineGenerateSeed(int) has protected access in SecureRandomSpi
        byte[] seed = secureRandomSpi.engineGenerateSeed(numBytes);
                                     ^
2 errors


================================================================

Sample: SecureRandomSpi_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SecureRandomSpi_2.java:7: error: incompatible types: Service cannot be converted to SecureRandomSpi
        SecureRandomSpi secureRandomSpi = secureRandom.getProvider().getService("SecureRandom", "SHA1PRNG");
                                                                               ^
./Data/java_security/javaFiles/SecureRandomSpi_2.java:10: error: engineSetSeed(byte[]) has protected access in SecureRandomSpi
        secureRandomSpi.engineSetSeed(seed);
                       ^
2 errors


================================================================

Sample: SecureRandomSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SecureRandomSpi_3.java:8: error: cannot find symbol
        secureRandom.engineNextBytes(bytes);
                    ^
  symbol:   method engineNextBytes(byte[])
  location: variable secureRandom of type SecureRandom
1 error


================================================================

Sample: Security_2
----------------------------------------------------------------
stdout:
Property value for keySize in algorithm AES: null

stderr:
Note: ./Data/java_security/javaFiles/Security_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Security_3
----------------------------------------------------------------
stdout:
Provider: SUN version 17

================================================================

Sample: Security_4
----------------------------------------------------------------
stdout:
Security property value: null

================================================================

Sample: Security_5
----------------------------------------------------------------
================================================================

Sample: Signature_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Signature_1.java:10: error: incompatible types: void cannot be converted to PrivateKey
            signature.initSign(privateKey);
                              ^
1 error


================================================================

Sample: Signature_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Signature_2.java:10: error: incompatible types: void cannot be converted to PublicKey
            signature.initVerify(publicKey);
                                ^
1 error


================================================================

Sample: Signature_3
----------------------------------------------------------------
stderr:
java.security.SignatureException: object not initialized for signature or verification
	at java.base/java.security.Signature.update(Signature.java:904)
	at java.base/java.security.Signature.update(Signature.java:871)
	at Signature_3.main(Signature_3.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Signature_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Signature_4.java:10: error: incompatible types: void cannot be converted to PrivateKey
            signature.initSign(privateKey);
                              ^
./Data/java_security/javaFiles/Signature_4.java:12: error: incompatible types: void cannot be converted to byte[]
            signature.update(data);
                            ^
2 errors


================================================================

Sample: Signature_5
----------------------------------------------------------------
stderr:
java.security.SignatureException: object not initialized for verification
	at java.base/java.security.Signature.verify(Signature.java:791)
	at Signature_5.main(Signature_5.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: SignatureSpi_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignatureSpi_1.java:16: error: MySignatureSpi is not abstract and does not override abstract method engineGetParameter(String) in SignatureSpi
    static class MySignatureSpi extends SignatureSpi {
           ^
1 error


================================================================

Sample: SignatureSpi_2
----------------------------------------------------------------
stdout:
Signature initialized with private key: null

================================================================

Sample: SignatureSpi_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignatureSpi_3.java:15: error: MySignatureSpi is not abstract and does not override abstract method engineGetParameter(String) in SignatureSpi
    static class MySignatureSpi extends SignatureSpi {
           ^
1 error


================================================================

Sample: SignatureSpi_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignatureSpi_4.java:18: error: MySignatureSpi is not abstract and does not override abstract method engineGetParameter(String) in SignatureSpi
class MySignatureSpi extends SignatureSpi {
^
1 error


================================================================

Sample: SignatureSpi_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignatureSpi_5.java:14: error: MySignatureSpi is not abstract and does not override abstract method engineSetParameter(String,Object) in SignatureSpi
    static class MySignatureSpi extends SignatureSpi {
           ^
./Data/java_security/javaFiles/SignatureSpi_5.java:26: error: method does not override or implement a method from a supertype
        @Override
        ^
./Data/java_security/javaFiles/SignatureSpi_5.java:30: error: method does not override or implement a method from a supertype
        @Override
        ^
Note: ./Data/java_security/javaFiles/SignatureSpi_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
3 errors


================================================================

Sample: SignedObject_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignedObject_1.java:10: error: unreported exception InvalidKeyException; must be caught or declared to be thrown
            SignedObject signedObject = new SignedObject(object, null, null);
                                        ^
1 error


================================================================

Sample: SignedObject_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignedObject_2.java:9: error: unreported exception IOException; must be caught or declared to be thrown
        SignedObject signedObject = new SignedObject("data", null, null);
                                    ^
1 error


================================================================

Sample: SignedObject_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignedObject_3.java:6: error: constructor SignedObject in class SignedObject cannot be applied to given types;
        SignedObject signedObject = new SignedObject();
                                    ^
  required: Serializable,PrivateKey,Signature
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SignedObject_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/SignedObject_4.java:5: error: constructor SignedObject in class SignedObject cannot be applied to given types;
        SignedObject signedObject = new SignedObject();
                                    ^
  required: Serializable,PrivateKey,Signature
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: UnresolvedPermission_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/UnresolvedPermission_1.java:5: error: cannot find symbol
        UnresolvedPermission unresolvedPermission = new UnresolvedPermission("permissionName", "actions", null, null);
        ^
  symbol:   class UnresolvedPermission
  location: class UnresolvedPermission_1
./Data/java_security/javaFiles/UnresolvedPermission_1.java:5: error: cannot find symbol
        UnresolvedPermission unresolvedPermission = new UnresolvedPermission("permissionName", "actions", null, null);
                                                        ^
  symbol:   class UnresolvedPermission
  location: class UnresolvedPermission_1
2 errors


================================================================

Sample: UnresolvedPermission_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/UnresolvedPermission_2.java:5: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
        UnresolvedPermission unresolvedPermission = new UnresolvedPermission("targetName", "actions");
                                                    ^
  required: String,String,String,Certificate[]
  found:    String,String
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: UnresolvedPermission_3
----------------------------------------------------------------
stdout:
Unresolved Actions: null

================================================================

Sample: UnresolvedPermission_4
----------------------------------------------------------------
stdout:
Unresolved Type: examplePermission

================================================================

Sample: UnresolvedPermission_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/UnresolvedPermission_5.java:5: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
        UnresolvedPermission unresolvedPermission = new UnresolvedPermission("ClassName", "name", "actions");
                                                    ^
  required: String,String,String,Certificate[]
  found:    String,String,String
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: URIParameter_2
----------------------------------------------------------------
stdout:
URI: https://www.example.com

================================================================

