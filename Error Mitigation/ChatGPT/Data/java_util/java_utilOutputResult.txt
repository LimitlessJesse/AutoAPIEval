Sample: AbstractMap_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_2.java:5: error: <anonymous AbstractMap_2$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        AbstractMap<String, Integer> map = new AbstractMap<String, Integer>() {
                                                                              ^
1 error


================================================================

Sample: AbstractMap_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_3.java:7: error: <anonymous AbstractMap_3$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        Map<String, Integer> map = new AbstractMap<String, Integer>() {
                                                                      ^
1 error


================================================================

Sample: AbstractMap_4
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_4.java:5: error: <anonymous AbstractMap_4$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        AbstractMap<String, Integer> map = new AbstractMap<String, Integer>() {
                                                                              ^
1 error


================================================================

Sample: AbstractMap_5
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_5.java:10: error: cannot find symbol
            public Set<Entry<String, Integer>> entrySet() {
                   ^
  symbol: class Set
1 error


================================================================

Sample: AbstractMap_SimpleEntry_1
----------------------------------------------------------------
stdout:
Key: key

================================================================

Sample: AbstractMap_SimpleEntry_2
----------------------------------------------------------------
stdout:
Value: 10

================================================================

Sample: AbstractMap_SimpleEntry_3
----------------------------------------------------------------
stdout:
Old value: 10
New value: 20

================================================================

Sample: AbstractMap_SimpleEntry_4
----------------------------------------------------------------
stdout:
Entry 1: key1=1
Entry 2: key1=1
Are entries equal? true

================================================================

Sample: AbstractMap_SimpleEntry_5
----------------------------------------------------------------
stdout:
Hash code value for the map entry: 106069

================================================================

Sample: AbstractMap_SimpleImmutableEntry_1
----------------------------------------------------------------
stdout:
Key: key

================================================================

Sample: AbstractMap_SimpleImmutableEntry_2
----------------------------------------------------------------
stdout:
Value: 10

================================================================

Sample: AbstractMap_SimpleImmutableEntry_3
----------------------------------------------------------------
stdout:
true

================================================================

Sample: AbstractMap_SimpleImmutableEntry_4
----------------------------------------------------------------
stdout:
Hash code value for the map entry: 106069

================================================================

Sample: AbstractMap_SimpleImmutableEntry_5
----------------------------------------------------------------
stdout:
key=10

================================================================

Sample: ArrayDeque_1
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: ArrayDeque_2
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: ArrayDeque_3
----------------------------------------------------------------
stdout:
First element: First

================================================================

Sample: ArrayDeque_4
----------------------------------------------------------------
stdout:
Deque: [First, Second]
Last element: Second

================================================================

Sample: ArrayDeque_5
----------------------------------------------------------------
stdout:
Deque before removeFirst: [First, Second]
Removed element: First
Deque after removeFirst: [Second]

================================================================

Sample: ArrayList_1
----------------------------------------------------------------
stdout:
Before ensureCapacity: 3
After ensureCapacity: 3

================================================================

Sample: ArrayList_2
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: ArrayList_3
----------------------------------------------------------------
stdout:
Initial list: [Hello]
Size of the list: 1

================================================================

Sample: ArrayList_4
----------------------------------------------------------------
stdout:
Elements in the list:
Hello
World

================================================================

Sample: ArrayList_5
----------------------------------------------------------------
stdout:
Is list empty? true

================================================================

Sample: Arrays_1
----------------------------------------------------------------
stdout:
Before sorting: [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]
After sorting: [1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]

================================================================

Sample: Arrays_2
----------------------------------------------------------------
stdout:
Element found at index: 2

================================================================

Sample: Arrays_3
----------------------------------------------------------------
stdout:
Are the arrays equal? true

================================================================

Sample: Arrays_4
----------------------------------------------------------------
stdout:
[1, 2, 3, 4, 5]

================================================================

Sample: Arrays_5
----------------------------------------------------------------
stdout:
Hash code of the array: 29615266

================================================================

Sample: Base64_1
----------------------------------------------------------------
stdout:
Encoded: SGVsbG8sIFdvcmxkIQ==

================================================================

Sample: Base64_2
----------------------------------------------------------------
stdout:
Hello World

================================================================

Sample: Base64_Decoder_1
----------------------------------------------------------------
stdout:
Hello World!

================================================================

Sample: Base64_Decoder_2
----------------------------------------------------------------
stdout:
Hello World!

================================================================

Sample: Base64_Decoder_3
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: Base64_Decoder_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Output byte array is too small for decoding all input bytes
	at java.base/java.util.Base64$Decoder.decode(Base64.java:620)
	at Base64_Decoder_4.main(Base64_Decoder_4.java:9)

================================================================

Sample: Base64_Encoder_1
----------------------------------------------------------------
stdout:
Encoded String: SGVsbG8sIFdvcmxkIQ==

================================================================

Sample: Base64_Encoder_2
----------------------------------------------------------------
stdout:
Encoded bytes: SGVsbG8sIFdvcmxkIQ==

================================================================

Sample: BitSet_1
----------------------------------------------------------------
stdout:
BitSet after setting bits at index 0, 2, and 4: {0, 2, 4}

================================================================

Sample: BitSet_2
----------------------------------------------------------------
stdout:
Before clearing: {2}
After clearing: {}

================================================================

Sample: BitSet_3
----------------------------------------------------------------
stdout:
Bit at index 0: true
Bit at index 1: false
Bit at index 2: true

================================================================

Sample: BitSet_4
----------------------------------------------------------------
stdout:
Logical size of BitSet: 5

================================================================

Sample: BitSet_5
----------------------------------------------------------------
stdout:
Before flipping: {2}
After flipping: {}

================================================================

Sample: Calendar_1
----------------------------------------------------------------
stdout:
Current date: Wed Aug 21 20:37:23 CDT 2024
Date after adding 5 days: Mon Aug 26 20:37:23 CDT 2024
Date after subtracting 2 months: Wed Jun 26 20:37:23 CDT 2024

================================================================

Sample: Calendar_2
----------------------------------------------------------------
stdout:
Year: 2024
Month: 7
Day of Month: 21

================================================================

Sample: Calendar_3
----------------------------------------------------------------
stdout:
Sat Jan 15 20:37:26 CST 2022

================================================================

Sample: Calendar_4
----------------------------------------------------------------
stdout:
Maximum value for MONTH field: 11

================================================================

Sample: Calendar_5
----------------------------------------------------------------
stdout:
Current date: Wed Aug 21 20:37:28 CDT 2024
Rolled date: Thu Aug 22 20:37:28 CDT 2024

================================================================

Sample: Calendar_Builder_1
----------------------------------------------------------------
stdout:
java.util.GregorianCalendar[time=1231200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="America/Winnipeg",offset=-21600000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=America/Winnipeg,offset=-21600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1970,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=15,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-21600000,DST_OFFSET=0]

================================================================

Sample: Calendar_Builder_2
----------------------------------------------------------------
stdout:
Thu Jan 01 00:00:00 CST 1970

================================================================

Sample: Calendar_Builder_3
----------------------------------------------------------------
stdout:
Sat Jan 01 00:00:00 CST 2022

================================================================

Sample: Calendar_Builder_4
----------------------------------------------------------------
stdout:
Thu Jan 01 10:30:45 CST 1970

================================================================

Sample: Calendar_Builder_5
----------------------------------------------------------------
stdout:
Locale set to: java.util.Calendar$Builder@4c762604

================================================================

Sample: Collections_1
----------------------------------------------------------------
stdout:
Before reversing: [Hello, World]
After reversing: [World, Hello]

================================================================

Sample: Collections_2
----------------------------------------------------------------
stdout:
Before shuffling: [Apple, Banana, Orange]
After shuffling: [Apple, Banana, Orange]

================================================================

Sample: Collections_5
----------------------------------------------------------------
stdout:
Frequency of 'Hello' in the list: 2

================================================================

Sample: Currency_1
----------------------------------------------------------------
stdout:
USD

================================================================

Sample: Currency_2
----------------------------------------------------------------
stdout:
Currency Code: USD

================================================================

Sample: Currency_3
----------------------------------------------------------------
stdout:
Default fraction digits for Euro: 2
Default fraction digits for Japanese Yen: 0
Default fraction digits for IMF Special Drawing Rights: -1

================================================================

Sample: Currency_4
----------------------------------------------------------------
stdout:
Display Name: US Dollar

================================================================

Sample: Currency_5
----------------------------------------------------------------
stdout:
Symbol for USD currency: US$

================================================================

Sample: Date_1
----------------------------------------------------------------
stdout:
Number of milliseconds since January 1, 1970: 1724290666176

================================================================

Sample: Date_2
----------------------------------------------------------------
stdout:
Current date: Wed Aug 21 20:37:47 CDT 2024
Date after setting time: Mon Jan 12 07:46:40 CST 1970

================================================================

Sample: Date_3
----------------------------------------------------------------
stdout:
Is date1 before date2? true

================================================================

Sample: Date_4
----------------------------------------------------------------
stdout:
Is date1 after date2? false

================================================================

Sample: Date_5
----------------------------------------------------------------
stdout:
Dates are equal

================================================================

Sample: Dictionary_1
----------------------------------------------------------------
stdout:
Value for key1: value1
Value for key3: null

================================================================

Sample: Dictionary_2
----------------------------------------------------------------
stdout:
Previous value for key1: null
Previous value for key2: null

================================================================

Sample: Dictionary_3
----------------------------------------------------------------
stdout:
Before removal: {key2=value2, key1=value1}
Removed value: value1
After removal: {key2=value2}

================================================================

Sample: Dictionary_4
----------------------------------------------------------------
stdout:
Two
One

================================================================

Sample: Dictionary_5
----------------------------------------------------------------
stdout:
Key: key2
Key: key1

================================================================

Sample: DoubleSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count of values: 3

================================================================

Sample: DoubleSummaryStatistics_2
----------------------------------------------------------------
stdout:
Sum: 61.5

================================================================

Sample: DoubleSummaryStatistics_3
----------------------------------------------------------------
stdout:
Average: 15.5

================================================================

Sample: DoubleSummaryStatistics_4
----------------------------------------------------------------
stdout:
Minimum value: 5.7

================================================================

Sample: DoubleSummaryStatistics_5
----------------------------------------------------------------
stdout:
Maximum recorded value: 20.3

================================================================

Sample: EnumMap_1
----------------------------------------------------------------
stdout:
{MONDAY=First day of the week, TUESDAY=Second day of the week}

================================================================

Sample: EnumMap_2
----------------------------------------------------------------
stdout:
First day of the week
null

================================================================

Sample: EnumMap_3
----------------------------------------------------------------
stdout:
Before clear: {MONDAY=Monday, TUESDAY=Tuesday}
After clear: {}

================================================================

Sample: EnumMap_5
----------------------------------------------------------------
stdout:
One
Two

================================================================

Sample: EventObject_1
----------------------------------------------------------------
stdout:
Event initially occurred on: java.lang.Object@4d1b0d2a

================================================================

Sample: EventObject_2
----------------------------------------------------------------
stdout:
java.util.EventObject[source=java.lang.Object@704d6e83]

================================================================

Sample: GregorianCalendar_3
----------------------------------------------------------------
stdout:
Before adding: Wed Aug 21 20:38:12 CDT 2024
After adding: Sat Sep 21 20:38:12 CDT 2024

================================================================

Sample: GregorianCalendar_4
----------------------------------------------------------------
stdout:
Is 2024 a leap year? true

================================================================

Sample: GregorianCalendar_5
----------------------------------------------------------------
stdout:
Maximum day of month: 31

================================================================

Sample: HashMap_1
----------------------------------------------------------------
stdout:
Value for key 'One': 1
Value for key 'Two': 2
Value for key 'Three': null

================================================================

Sample: HashMap_2
----------------------------------------------------------------
stdout:
10
null

================================================================

Sample: HashMap_3
----------------------------------------------------------------
stdout:
Initial HashMap: {A=1, B=2}
HashMap after removing key 'A': {B=2}
Value associated with key 'A' was: 1

================================================================

Sample: HashMap_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: HashMap_5
----------------------------------------------------------------
stdout:
Size of the map: 3

================================================================

Sample: HashSet_1
----------------------------------------------------------------
stdout:
true
false
[Hello]

================================================================

Sample: HashSet_2
----------------------------------------------------------------
stdout:
Set before removal: [Hello, World]
Element 'Hello' removed: true
Set after removal: [World]

================================================================

Sample: HashSet_3
----------------------------------------------------------------
stdout:
Size of set: 2

================================================================

Sample: HashSet_4
----------------------------------------------------------------
stdout:
Set contains 'Hello': true

================================================================

Sample: HashSet_5
----------------------------------------------------------------
stdout:
Set before clear: [Hello, World]
Set after clear: []

================================================================

Sample: Hashtable_1
----------------------------------------------------------------
stdout:
Hashtable before clearing: {2=Two, 1=One}
Hashtable after clearing: {}

================================================================

Sample: Hashtable_2
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Hashtable_4
----------------------------------------------------------------
stdout:
Is hashtable empty? true

================================================================

Sample: IdentityHashMap_1
----------------------------------------------------------------
stdout:
New One

================================================================

Sample: IdentityHashMap_2
----------------------------------------------------------------
stdout:
Value for key1: 1
Value for key3: null

================================================================

Sample: IdentityHashMap_3
----------------------------------------------------------------
stdout:
Contains key 'key1': true

================================================================

Sample: IdentityHashMap_4
----------------------------------------------------------------
stdout:
Map before removal: {One=1, Two=2}
Removed value: 1
Map after removal: {Two=2}

================================================================

Sample: IdentityHashMap_5
----------------------------------------------------------------
stdout:
Size of the IdentityHashMap: 2

================================================================

Sample: IntSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count of values: 3

================================================================

Sample: IntSummaryStatistics_2
----------------------------------------------------------------
stdout:
Sum: 60

================================================================

Sample: IntSummaryStatistics_3
----------------------------------------------------------------
stdout:
Average: 20.0

================================================================

Sample: IntSummaryStatistics_4
----------------------------------------------------------------
stdout:
Minimum value: 5

================================================================

Sample: IntSummaryStatistics_5
----------------------------------------------------------------
stdout:
Max value: 30

================================================================

Sample: LinkedHashMap_1
----------------------------------------------------------------
stdout:
Value for key 'One': 1
Value for key 'Three': null

================================================================

Sample: LinkedHashMap_3
----------------------------------------------------------------
stdout:
{One=1, Two=2, Three=3}
{Key11=11, Key12=12, Key13=13, Key14=14, Key15=15, Key16=16, Key17=17, Key18=18, Key19=19, Key20=20, Key21=21, Key22=22, Key23=23, Key24=24, Key25=25, Key26=26, Key27=27, Key28=28, Key29=29, Key30=30, Key31=31, Key32=32, Key33=33, Key34=34, Key35=35, Key36=36, Key37=37, Key38=38, Key39=39, Key40=40, Key41=41, Key42=42, Key43=43, Key44=44, Key45=45, Key46=46, Key47=47, Key48=48, Key49=49, Key50=50, Key51=51, Key52=52, Key53=53, Key54=54, Key55=55, Key56=56, Key57=57, Key58=58, Key59=59, Key60=60, Key61=61, Key62=62, Key63=63, Key64=64, Key65=65, Key66=66, Key67=67, Key68=68, Key69=69, Key70=70, Key71=71, Key72=72, Key73=73, Key74=74, Key75=75, Key76=76, Key77=77, Key78=78, Key79=79, Key80=80, Key81=81, Key82=82, Key83=83, Key84=84, Key85=85, Key86=86, Key87=87, Key88=88, Key89=89, Key90=90, Key91=91, Key92=92, Key93=93, Key94=94, Key95=95, Key96=96, Key97=97, Key98=98, Key99=99, Key100=100, Key101=101, Key102=102, Key103=103, Key104=104, Key105=105, Key106=106, Key107=107, Key108=108, Key109=109, Key110=110}

================================================================

Sample: LinkedHashMap_4
----------------------------------------------------------------
stdout:
Map before clear: {A=1, B=2}
Map after clear: {}

================================================================

Sample: LinkedHashMap_5
----------------------------------------------------------------
stdout:
Keys in the map:
One
Two
Three

================================================================

Sample: LinkedList_1
----------------------------------------------------------------
stdout:
Initial LinkedList: [World]
LinkedList after adding element at the beginning: [Hello, World]

================================================================

Sample: LinkedList_2
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: LinkedList_3
----------------------------------------------------------------
stdout:
First element: First

================================================================

Sample: LinkedList_4
----------------------------------------------------------------
stdout:
List: [Hello, World]
Last Element: World

================================================================

Sample: LinkedList_5
----------------------------------------------------------------
stdout:
Initial LinkedList: [First, Second, Third]
Removed Element: First
Updated LinkedList: [Second, Third]

================================================================

Sample: ListResourceBundle_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ListResourceBundle_1.java:3: error: class MyResourceBundle is public, should be declared in a file named MyResourceBundle.java
public class MyResourceBundle extends ListResourceBundle {
       ^
1 error


================================================================

Sample: ListResourceBundle_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ListResourceBundle_2.java:6: error: cannot find symbol
        ListResourceBundle bundle = new ListResourceBundle() {
        ^
  symbol:   class ListResourceBundle
  location: class ListResourceBundle_2
./Data/java_util/javaFiles/ListResourceBundle_2.java:6: error: cannot find symbol
        ListResourceBundle bundle = new ListResourceBundle() {
                                        ^
  symbol:   class ListResourceBundle
  location: class ListResourceBundle_2
./Data/java_util/javaFiles/ListResourceBundle_2.java:7: error: method does not override or implement a method from a supertype
            @Override
            ^
3 errors


================================================================

Sample: ListResourceBundle_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ListResourceBundle_3.java:4: error: class MyResourceBundle is public, should be declared in a file named MyResourceBundle.java
public class MyResourceBundle extends ListResourceBundle {
       ^
1 error


================================================================

Sample: Locale_1
----------------------------------------------------------------
stdout:
Country/Region Code: US

================================================================

Sample: Locale_2
----------------------------------------------------------------
stdout:
Display Country: United States

================================================================

Sample: Locale_3
----------------------------------------------------------------
stdout:
Language code: en

================================================================

Sample: Locale_4
----------------------------------------------------------------
stdout:
Display Language: French

================================================================

Sample: Locale_5
----------------------------------------------------------------
stdout:
Display Name: English (United States)

================================================================

Sample: Locale_Builder_1
----------------------------------------------------------------
stdout:
Language: en

================================================================

Sample: Locale_Builder_2
----------------------------------------------------------------
stdout:
US

================================================================

Sample: Locale_Builder_3
----------------------------------------------------------------
stdout:
Latn

================================================================

Sample: Locale_Builder_4
----------------------------------------------------------------
stdout:
und-u-ca-japanese

================================================================

Sample: Locale_Builder_5
----------------------------------------------------------------
stdout:
Before clear: en_US
After clear: 

================================================================

Sample: Locale_LanguageRange_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Locale_LanguageRange_1.java:5: error: incompatible types: List<LanguageRange> cannot be converted to LanguageRange
        Locale.LanguageRange languageRange = Locale.LanguageRange.parse("en-US");
                                                                       ^
1 error


================================================================

Sample: Locale_LanguageRange_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Locale_LanguageRange_2.java:5: error: incompatible types: List<LanguageRange> cannot be converted to LanguageRange
        Locale.LanguageRange languageRange = Locale.LanguageRange.parse("en;q=0.8");
                                                                       ^
1 error


================================================================

Sample: Locale_LanguageRange_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Locale_LanguageRange_3.java:5: error: incompatible types: List<LanguageRange> cannot be converted to LanguageRange
        Locale.LanguageRange languageRange = Locale.LanguageRange.parse("en-US");
                                                                       ^
1 error


================================================================

Sample: LongSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count of values: 3

================================================================

Sample: LongSummaryStatistics_2
----------------------------------------------------------------
stdout:
Sum: 60

================================================================

Sample: LongSummaryStatistics_3
----------------------------------------------------------------
stdout:
Minimum value: 5

================================================================

Sample: LongSummaryStatistics_4
----------------------------------------------------------------
stdout:
Max value: 30

================================================================

Sample: LongSummaryStatistics_5
----------------------------------------------------------------
stdout:
Average: 20.0

================================================================

Sample: Objects_1
----------------------------------------------------------------
stdout:
Are obj1 and obj2 deeply equal? true

================================================================

Sample: Objects_2
----------------------------------------------------------------
stdout:
Hash code: 1859039536

================================================================

Sample: Objects_3
----------------------------------------------------------------
stdout:
Is object null? true

================================================================

Sample: Objects_4
----------------------------------------------------------------
stdout:
Hello
null

================================================================

Sample: Objects_5
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Observable_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_1.java:19: error: MyObserver is not abstract and does not override abstract method update(Observable,Object) in Observer
class MyObserver implements Observer {
^
Note: ./Data/java_util/javaFiles/Observable_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: Observable_2
----------------------------------------------------------------
stderr:
Note: ./Data/java_util/javaFiles/Observable_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_3
----------------------------------------------------------------
stdout:
Object has changed

stderr:
Note: ./Data/java_util/javaFiles/Observable_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_4
----------------------------------------------------------------
stdout:
Received update: Hello World

stderr:
Note: ./Data/java_util/javaFiles/Observable_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_5
----------------------------------------------------------------
stdout:
Number of observers: 1

stderr:
Note: ./Data/java_util/javaFiles/Observable_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Optional_1
----------------------------------------------------------------
stdout:
Is value present? true

================================================================

Sample: Optional_2
----------------------------------------------------------------
stdout:
Value: Value

================================================================

Sample: Optional_3
----------------------------------------------------------------
stdout:
Value is present: Value

================================================================

Sample: Optional_4
----------------------------------------------------------------
stdout:
Value
Default

================================================================

Sample: Optional_5
----------------------------------------------------------------
stdout:
Value starts with 'H': Hello

================================================================

Sample: OptionalDouble_1
----------------------------------------------------------------
stdout:
Is value present: false

================================================================

Sample: OptionalDouble_2
----------------------------------------------------------------
stdout:
Value is present: 3.14

================================================================

Sample: OptionalDouble_3
----------------------------------------------------------------
stdout:
Is value present? true

================================================================

Sample: OptionalDouble_4
----------------------------------------------------------------
stdout:
Value: 10.5

================================================================

Sample: OptionalDouble_5
----------------------------------------------------------------
stdout:
Value present: 10.5
No value present, returned other value: 5.0

================================================================

Sample: OptionalInt_1
----------------------------------------------------------------
stdout:
Is value present: false

================================================================

Sample: OptionalInt_2
----------------------------------------------------------------
stdout:
Value present: 10

================================================================

Sample: OptionalInt_3
----------------------------------------------------------------
stdout:
Is value present? true

================================================================

Sample: OptionalInt_4
----------------------------------------------------------------
stdout:
Result: 5
Result2: 10

================================================================

Sample: OptionalInt_5
----------------------------------------------------------------
stdout:
Result: 10

================================================================

Sample: OptionalLong_1
----------------------------------------------------------------
stdout:
Is value present? false

================================================================

Sample: OptionalLong_2
----------------------------------------------------------------
stdout:
Value present: 10

================================================================

Sample: OptionalLong_3
----------------------------------------------------------------
stdout:
Is value present? true

================================================================

Sample: OptionalLong_4
----------------------------------------------------------------
stdout:
Value: 10

================================================================

Sample: OptionalLong_5
----------------------------------------------------------------
stdout:
Result: 10
Result2: 5

================================================================

Sample: PriorityQueue_1
----------------------------------------------------------------
stdout:
Priority Queue: [3, 5, 8]

================================================================

Sample: PriorityQueue_2
----------------------------------------------------------------
stdout:
Head of the queue: 3

================================================================

Sample: PriorityQueue_3
----------------------------------------------------------------
stdout:
Priority Queue: [1, 3, 2]
Polling from the queue: 1
Priority Queue after polling: [2, 3]

================================================================

Sample: PriorityQueue_4
----------------------------------------------------------------
stdout:
3
2
1

================================================================

Sample: PriorityQueue_5
----------------------------------------------------------------
stdout:
Size of PriorityQueue: 3

================================================================

Sample: Properties_1
----------------------------------------------------------------
stdout:
Value for key1: value1
Value for key2: value2

================================================================

Sample: Properties_3
----------------------------------------------------------------
stdout:
Key: key2, Value: value2
Key: key1, Value: value1

================================================================

Sample: Properties_4
----------------------------------------------------------------
================================================================

Sample: Properties_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: inStream parameter is null
	at java.base/java.util.Objects.requireNonNull(Objects.java:235)
	at java.base/java.util.Properties.load(Properties.java:410)
	at Properties_5.main(Properties_5.java:11)

================================================================

Sample: PropertyResourceBundle_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name example, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at PropertyResourceBundle_2.main(PropertyResourceBundle_2.java:7)

================================================================

Sample: PropertyResourceBundle_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name example, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at PropertyResourceBundle_4.main(PropertyResourceBundle_4.java:6)

================================================================

Sample: Random_1
----------------------------------------------------------------
stdout:
Random number between 0 and 10: 7

================================================================

Sample: Random_2
----------------------------------------------------------------
stdout:
Random Long Number: -3729092043854573733

================================================================

Sample: Random_3
----------------------------------------------------------------
stdout:
Random float value between 0.0 and 1.0: 0.685516

================================================================

Sample: Random_4
----------------------------------------------------------------
stdout:
Random Gaussian value: 2.340339751168619

================================================================

Sample: Random_5
----------------------------------------------------------------
stdout:
Seed set successfully.

================================================================

Sample: ResourceBundle_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_1.main(ResourceBundle_1.java:5)

================================================================

Sample: ResourceBundle_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_2.main(ResourceBundle_2.java:6)

================================================================

Sample: ResourceBundle_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_US
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:932)
	at ResourceBundle_3.main(ResourceBundle_3.java:6)

================================================================

Sample: ResourceBundle_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_4.main(ResourceBundle_4.java:5)

================================================================

Sample: ResourceBundle_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_5.main(ResourceBundle_5.java:6)

================================================================

Sample: ResourceBundle_Control_2
----------------------------------------------------------------
stdout:
Fallback Locale: en_CA

================================================================

Sample: ResourceBundle_Control_3
----------------------------------------------------------------
stdout:
ja__XX
ja


================================================================

Sample: ResourceBundle_Control_4
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ResourceBundle_Control_4.java:9: error: cannot find symbol
                List<String> formats = new ArrayList<>();
                                           ^
  symbol: class ArrayList
1 error


================================================================

Sample: ResourceBundle_Control_5
----------------------------------------------------------------
stdout:
ja__XX
ja


================================================================

Sample: Scanner_1
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Scanner_2
----------------------------------------------------------------
stdout:
Enter an integer:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextInt(Scanner.java:2258)
	at java.base/java.util.Scanner.nextInt(Scanner.java:2212)
	at Scanner_2.main(Scanner_2.java:8)

================================================================

Sample: Scanner_3
----------------------------------------------------------------
stdout:
Enter a double value:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextDouble(Scanner.java:2564)
	at Scanner_3.main(Scanner_3.java:8)

================================================================

Sample: Scanner_4
----------------------------------------------------------------
stdout:
Enter a string: 
Has next token: true

================================================================

Sample: Scanner_5
----------------------------------------------------------------
================================================================

Sample: ServiceLoader_1
----------------------------------------------------------------
================================================================

Sample: ServiceLoader_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ServiceLoader_2.java:5: error: cannot find symbol
        ServiceLoader<?> loader = ServiceLoader.load(Service.class);
                                                     ^
  symbol:   class Service
  location: class ServiceLoader_2
1 error


================================================================

Sample: SimpleTimeZone_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/SimpleTimeZone_1.java:6: error: no suitable constructor found for SimpleTimeZone(no arguments)
        SimpleTimeZone timeZone = new SimpleTimeZone();
                                  ^
    constructor SimpleTimeZone.SimpleTimeZone(int,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SimpleTimeZone_2
----------------------------------------------------------------
stdout:
Daylight saving time end rule set successfully.

================================================================

Sample: SimpleTimeZone_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/SimpleTimeZone_3.java:5: error: no suitable constructor found for SimpleTimeZone(no arguments)
        SimpleTimeZone timeZone = new SimpleTimeZone();
                                  ^
    constructor SimpleTimeZone.SimpleTimeZone(int,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
./Data/java_util/javaFiles/SimpleTimeZone_3.java:7: error: cannot find symbol
        System.out.println("Daylight saving time starting year set to: " + timeZone.getStartYear());
                                                                                   ^
  symbol:   method getStartYear()
  location: variable timeZone of type SimpleTimeZone
2 errors


================================================================

Sample: SimpleTimeZone_5
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/SimpleTimeZone_5.java:5: error: no suitable constructor found for SimpleTimeZone(no arguments)
        SimpleTimeZone timeZone = new SimpleTimeZone();
                                  ^
    constructor SimpleTimeZone.SimpleTimeZone(int,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: Spliterators_AbstractDoubleSpliterator_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Spliterators_AbstractDoubleSpliterator_1.java:5: error: constructor AbstractDoubleSpliterator in class AbstractDoubleSpliterator cannot be applied to given types;
        Spliterators.AbstractDoubleSpliterator spliterator = new Spliterators.AbstractDoubleSpliterator() {
                                                             ^
  required: long,int
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_util/javaFiles/Spliterators_AbstractDoubleSpliterator_1.java:5: error: <anonymous Spliterators_AbstractDoubleSpliterator_1$1> is not abstract and does not override abstract method tryAdvance(DoubleConsumer) in OfDouble
        Spliterators.AbstractDoubleSpliterator spliterator = new Spliterators.AbstractDoubleSpliterator() {
                                                                                                          ^
2 errors


================================================================

Sample: Spliterators_AbstractIntSpliterator_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Spliterators_AbstractIntSpliterator_2.java:5: error: constructor AbstractIntSpliterator in class AbstractIntSpliterator cannot be applied to given types;
        Spliterators.AbstractIntSpliterator spliterator = new Spliterators.AbstractIntSpliterator() {
                                                          ^
  required: long,int
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_util/javaFiles/Spliterators_AbstractIntSpliterator_2.java:5: error: <anonymous Spliterators_AbstractIntSpliterator_2$1> is not abstract and does not override abstract method tryAdvance(IntConsumer) in OfInt
        Spliterators.AbstractIntSpliterator spliterator = new Spliterators.AbstractIntSpliterator() {
                                                                                                    ^
2 errors


================================================================

Sample: Spliterators_AbstractLongSpliterator_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Spliterators_AbstractLongSpliterator_1.java:5: error: constructor AbstractLongSpliterator in class AbstractLongSpliterator cannot be applied to given types;
        Spliterators.AbstractLongSpliterator spliterator = new Spliterators.AbstractLongSpliterator() {
                                                           ^
  required: long,int
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_util/javaFiles/Spliterators_AbstractLongSpliterator_1.java:5: error: <anonymous Spliterators_AbstractLongSpliterator_1$1> is not abstract and does not override abstract method tryAdvance(LongConsumer) in OfLong
        Spliterators.AbstractLongSpliterator spliterator = new Spliterators.AbstractLongSpliterator() {
                                                                                                      ^
2 errors


================================================================

Sample: Spliterators_AbstractSpliterator_1
----------------------------------------------------------------
stdout:
Estimated size: 0

================================================================

Sample: SplittableRandom_1
----------------------------------------------------------------
stdout:
Random number between 0 and 10: 7

================================================================

Sample: SplittableRandom_2
----------------------------------------------------------------
stdout:
Random long value: -2525694767342307831

================================================================

Sample: SplittableRandom_3
----------------------------------------------------------------
stdout:
Random double value: 0.3568312130815786

================================================================

Sample: SplittableRandom_5
----------------------------------------------------------------
stdout:
0.4738430525407704
0.7381080222329897

================================================================

Sample: Stack_1
----------------------------------------------------------------
stdout:
Stack: [1, 2, 3]

================================================================

Sample: Stack_2
----------------------------------------------------------------
stdout:
Popped element: 3
Stack after pop: [1, 2]

================================================================

Sample: Stack_3
----------------------------------------------------------------
stdout:
Top element of the stack: 3

================================================================

Sample: Stack_4
----------------------------------------------------------------
stdout:
Is stack empty? true
Is stack empty? false

================================================================

Sample: Stack_5
----------------------------------------------------------------
stdout:
Position of 20 in the stack: 2
Position of 40 in the stack: -1

================================================================

Sample: StringJoiner_3
----------------------------------------------------------------
stdout:
Length of StringJoiner: 8

================================================================

Sample: StringJoiner_4
----------------------------------------------------------------
stdout:
John,Doe,Jane

================================================================

Sample: StringJoiner_5
----------------------------------------------------------------
stdout:
StringJoiner 1: Apple,Banana
StringJoiner 2: Orange,Grapes
Merged StringJoiner: Apple,Banana,Orange,Grapes

================================================================

Sample: StringTokenizer_1
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: StringTokenizer_2
----------------------------------------------------------------
stdout:
Has more tokens: true

================================================================

Sample: StringTokenizer_3
----------------------------------------------------------------
stdout:
Number of tokens remaining: 5

================================================================

Sample: StringTokenizer_4
----------------------------------------------------------------
stdout:
Hello
World
This
is
a
test.

================================================================

Sample: Timer_1
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_2
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_3
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_4
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_5
----------------------------------------------------------------
================================================================

Sample: TimerTask_1
----------------------------------------------------------------
stdout:
Task is being executed

================================================================

Sample: TimerTask_2
----------------------------------------------------------------
stdout:
Task is cancelled: false

================================================================

Sample: TimerTask_3
----------------------------------------------------------------
================================================================

Sample: TimeZone_1
----------------------------------------------------------------
stdout:
Display Name: Central Daylight Time

================================================================

Sample: TimeZone_2
----------------------------------------------------------------
stdout:
Offset from UTC at date 1724290906015 is: -18000000 milliseconds

================================================================

Sample: TimeZone_3
----------------------------------------------------------------
stdout:
Time zone ID: America/Winnipeg

================================================================

Sample: TimeZone_4
----------------------------------------------------------------
stdout:
Uses Daylight Saving Time: true

================================================================

Sample: TimeZone_5
----------------------------------------------------------------
stdout:
Africa/Abidjan
Africa/Accra
Africa/Addis_Ababa
Africa/Algiers
Africa/Asmara
Africa/Asmera
Africa/Bamako
Africa/Bangui
Africa/Banjul
Africa/Bissau
Africa/Blantyre
Africa/Brazzaville
Africa/Bujumbura
Africa/Cairo
Africa/Casablanca
Africa/Ceuta
Africa/Conakry
Africa/Dakar
Africa/Dar_es_Salaam
Africa/Djibouti
Africa/Douala
Africa/El_Aaiun
Africa/Freetown
Africa/Gaborone
Africa/Harare
Africa/Johannesburg
Africa/Juba
Africa/Kampala
Africa/Khartoum
Africa/Kigali
Africa/Kinshasa
Africa/Lagos
Africa/Libreville
Africa/Lome
Africa/Luanda
Africa/Lubumbashi
Africa/Lusaka
Africa/Malabo
Africa/Maputo
Africa/Maseru
Africa/Mbabane
Africa/Mogadishu
Africa/Monrovia
Africa/Nairobi
Africa/Ndjamena
Africa/Niamey
Africa/Nouakchott
Africa/Ouagadougou
Africa/Porto-Novo
Africa/Sao_Tome
Africa/Timbuktu
Africa/Tripoli
Africa/Tunis
Africa/Windhoek
America/Adak
America/Anchorage
America/Anguilla
America/Antigua
America/Araguaina
America/Argentina/Buenos_Aires
America/Argentina/Catamarca
America/Argentina/ComodRivadavia
America/Argentina/Cordoba
America/Argentina/Jujuy
America/Argentina/La_Rioja
America/Argentina/Mendoza
America/Argentina/Rio_Gallegos
America/Argentina/Salta
America/Argentina/San_Juan
America/Argentina/San_Luis
America/Argentina/Tucuman
America/Argentina/Ushuaia
America/Aruba
America/Asuncion
America/Atikokan
America/Atka
America/Bahia
America/Bahia_Banderas
America/Barbados
America/Belem
America/Belize
America/Blanc-Sablon
America/Boa_Vista
America/Bogota
America/Boise
America/Buenos_Aires
America/Cambridge_Bay
America/Campo_Grande
America/Cancun
America/Caracas
America/Catamarca
America/Cayenne
America/Cayman
America/Chicago
America/Chihuahua
America/Ciudad_Juarez
America/Coral_Harbour
America/Cordoba
America/Costa_Rica
America/Creston
America/Cuiaba
America/Curacao
America/Danmarkshavn
America/Dawson
America/Dawson_Creek
America/Denver
America/Detroit
America/Dominica
America/Edmonton
America/Eirunepe
America/El_Salvador
America/Ensenada
America/Fort_Nelson
America/Fort_Wayne
America/Fortaleza
America/Glace_Bay
America/Godthab
America/Goose_Bay
America/Grand_Turk
America/Grenada
America/Guadeloupe
America/Guatemala
America/Guayaquil
America/Guyana
America/Halifax
America/Havana
America/Hermosillo
America/Indiana/Indianapolis
America/Indiana/Knox
America/Indiana/Marengo
America/Indiana/Petersburg
America/Indiana/Tell_City
America/Indiana/Vevay
America/Indiana/Vincennes
America/Indiana/Winamac
America/Indianapolis
America/Inuvik
America/Iqaluit
America/Jamaica
America/Jujuy
America/Juneau
America/Kentucky/Louisville
America/Kentucky/Monticello
America/Knox_IN
America/Kralendijk
America/La_Paz
America/Lima
America/Los_Angeles
America/Louisville
America/Lower_Princes
America/Maceio
America/Managua
America/Manaus
America/Marigot
America/Martinique
America/Matamoros
America/Mazatlan
America/Mendoza
America/Menominee
America/Merida
America/Metlakatla
America/Mexico_City
America/Miquelon
America/Moncton
America/Monterrey
America/Montevideo
America/Montreal
America/Montserrat
America/Nassau
America/New_York
America/Nipigon
America/Nome
America/Noronha
America/North_Dakota/Beulah
America/North_Dakota/Center
America/North_Dakota/New_Salem
America/Nuuk
America/Ojinaga
America/Panama
America/Pangnirtung
America/Paramaribo
America/Phoenix
America/Port-au-Prince
America/Port_of_Spain
America/Porto_Acre
America/Porto_Velho
America/Puerto_Rico
America/Punta_Arenas
America/Rainy_River
America/Rankin_Inlet
America/Recife
America/Regina
America/Resolute
America/Rio_Branco
America/Rosario
America/Santa_Isabel
America/Santarem
America/Santiago
America/Santo_Domingo
America/Sao_Paulo
America/Scoresbysund
America/Shiprock
America/Sitka
America/St_Barthelemy
America/St_Johns
America/St_Kitts
America/St_Lucia
America/St_Thomas
America/St_Vincent
America/Swift_Current
America/Tegucigalpa
America/Thule
America/Thunder_Bay
America/Tijuana
America/Toronto
America/Tortola
America/Vancouver
America/Virgin
America/Whitehorse
America/Winnipeg
America/Yakutat
America/Yellowknife
Antarctica/Casey
Antarctica/Davis
Antarctica/DumontDUrville
Antarctica/Macquarie
Antarctica/Mawson
Antarctica/McMurdo
Antarctica/Palmer
Antarctica/Rothera
Antarctica/South_Pole
Antarctica/Syowa
Antarctica/Troll
Antarctica/Vostok
Arctic/Longyearbyen
Asia/Aden
Asia/Almaty
Asia/Amman
Asia/Anadyr
Asia/Aqtau
Asia/Aqtobe
Asia/Ashgabat
Asia/Ashkhabad
Asia/Atyrau
Asia/Baghdad
Asia/Bahrain
Asia/Baku
Asia/Bangkok
Asia/Barnaul
Asia/Beirut
Asia/Bishkek
Asia/Brunei
Asia/Calcutta
Asia/Chita
Asia/Choibalsan
Asia/Chongqing
Asia/Chungking
Asia/Colombo
Asia/Dacca
Asia/Damascus
Asia/Dhaka
Asia/Dili
Asia/Dubai
Asia/Dushanbe
Asia/Famagusta
Asia/Gaza
Asia/Harbin
Asia/Hebron
Asia/Ho_Chi_Minh
Asia/Hong_Kong
Asia/Hovd
Asia/Irkutsk
Asia/Istanbul
Asia/Jakarta
Asia/Jayapura
Asia/Jerusalem
Asia/Kabul
Asia/Kamchatka
Asia/Karachi
Asia/Kashgar
Asia/Kathmandu
Asia/Katmandu
Asia/Khandyga
Asia/Kolkata
Asia/Krasnoyarsk
Asia/Kuala_Lumpur
Asia/Kuching
Asia/Kuwait
Asia/Macao
Asia/Macau
Asia/Magadan
Asia/Makassar
Asia/Manila
Asia/Muscat
Asia/Nicosia
Asia/Novokuznetsk
Asia/Novosibirsk
Asia/Omsk
Asia/Oral
Asia/Phnom_Penh
Asia/Pontianak
Asia/Pyongyang
Asia/Qatar
Asia/Qostanay
Asia/Qyzylorda
Asia/Rangoon
Asia/Riyadh
Asia/Saigon
Asia/Sakhalin
Asia/Samarkand
Asia/Seoul
Asia/Shanghai
Asia/Singapore
Asia/Srednekolymsk
Asia/Taipei
Asia/Tashkent
Asia/Tbilisi
Asia/Tehran
Asia/Tel_Aviv
Asia/Thimbu
Asia/Thimphu
Asia/Tokyo
Asia/Tomsk
Asia/Ujung_Pandang
Asia/Ulaanbaatar
Asia/Ulan_Bator
Asia/Urumqi
Asia/Ust-Nera
Asia/Vientiane
Asia/Vladivostok
Asia/Yakutsk
Asia/Yangon
Asia/Yekaterinburg
Asia/Yerevan
Atlantic/Azores
Atlantic/Bermuda
Atlantic/Canary
Atlantic/Cape_Verde
Atlantic/Faeroe
Atlantic/Faroe
Atlantic/Jan_Mayen
Atlantic/Madeira
Atlantic/Reykjavik
Atlantic/South_Georgia
Atlantic/St_Helena
Atlantic/Stanley
Australia/ACT
Australia/Adelaide
Australia/Brisbane
Australia/Broken_Hill
Australia/Canberra
Australia/Currie
Australia/Darwin
Australia/Eucla
Australia/Hobart
Australia/LHI
Australia/Lindeman
Australia/Lord_Howe
Australia/Melbourne
Australia/NSW
Australia/North
Australia/Perth
Australia/Queensland
Australia/South
Australia/Sydney
Australia/Tasmania
Australia/Victoria
Australia/West
Australia/Yancowinna
Brazil/Acre
Brazil/DeNoronha
Brazil/East
Brazil/West
CET
CST6CDT
Canada/Atlantic
Canada/Central
Canada/Eastern
Canada/Mountain
Canada/Newfoundland
Canada/Pacific
Canada/Saskatchewan
Canada/Yukon
Chile/Continental
Chile/EasterIsland
Cuba
EET
EST5EDT
Egypt
Eire
Etc/GMT
Etc/GMT+0
Etc/GMT+1
Etc/GMT+10
Etc/GMT+11
Etc/GMT+12
Etc/GMT+2
Etc/GMT+3
Etc/GMT+4
Etc/GMT+5
Etc/GMT+6
Etc/GMT+7
Etc/GMT+8
Etc/GMT+9
Etc/GMT-0
Etc/GMT-1
Etc/GMT-10
Etc/GMT-11
Etc/GMT-12
Etc/GMT-13
Etc/GMT-14
Etc/GMT-2
Etc/GMT-3
Etc/GMT-4
Etc/GMT-5
Etc/GMT-6
Etc/GMT-7
Etc/GMT-8
Etc/GMT-9
Etc/GMT0
Etc/Greenwich
Etc/UCT
Etc/UTC
Etc/Universal
Etc/Zulu
Europe/Amsterdam
Europe/Andorra
Europe/Astrakhan
Europe/Athens
Europe/Belfast
Europe/Belgrade
Europe/Berlin
Europe/Bratislava
Europe/Brussels
Europe/Bucharest
Europe/Budapest
Europe/Busingen
Europe/Chisinau
Europe/Copenhagen
Europe/Dublin
Europe/Gibraltar
Europe/Guernsey
Europe/Helsinki
Europe/Isle_of_Man
Europe/Istanbul
Europe/Jersey
Europe/Kaliningrad
Europe/Kiev
Europe/Kirov
Europe/Kyiv
Europe/Lisbon
Europe/Ljubljana
Europe/London
Europe/Luxembourg
Europe/Madrid
Europe/Malta
Europe/Mariehamn
Europe/Minsk
Europe/Monaco
Europe/Moscow
Europe/Nicosia
Europe/Oslo
Europe/Paris
Europe/Podgorica
Europe/Prague
Europe/Riga
Europe/Rome
Europe/Samara
Europe/San_Marino
Europe/Sarajevo
Europe/Saratov
Europe/Simferopol
Europe/Skopje
Europe/Sofia
Europe/Stockholm
Europe/Tallinn
Europe/Tirane
Europe/Tiraspol
Europe/Ulyanovsk
Europe/Uzhgorod
Europe/Vaduz
Europe/Vatican
Europe/Vienna
Europe/Vilnius
Europe/Volgograd
Europe/Warsaw
Europe/Zagreb
Europe/Zaporozhye
Europe/Zurich
GB
GB-Eire
GMT
GMT0
Greenwich
Hongkong
Iceland
Indian/Antananarivo
Indian/Chagos
Indian/Christmas
Indian/Cocos
Indian/Comoro
Indian/Kerguelen
Indian/Mahe
Indian/Maldives
Indian/Mauritius
Indian/Mayotte
Indian/Reunion
Iran
Israel
Jamaica
Japan
Kwajalein
Libya
MET
MST7MDT
Mexico/BajaNorte
Mexico/BajaSur
Mexico/General
NZ
NZ-CHAT
Navajo
PRC
PST8PDT
Pacific/Apia
Pacific/Auckland
Pacific/Bougainville
Pacific/Chatham
Pacific/Chuuk
Pacific/Easter
Pacific/Efate
Pacific/Enderbury
Pacific/Fakaofo
Pacific/Fiji
Pacific/Funafuti
Pacific/Galapagos
Pacific/Gambier
Pacific/Guadalcanal
Pacific/Guam
Pacific/Honolulu
Pacific/Johnston
Pacific/Kanton
Pacific/Kiritimati
Pacific/Kosrae
Pacific/Kwajalein
Pacific/Majuro
Pacific/Marquesas
Pacific/Midway
Pacific/Nauru
Pacific/Niue
Pacific/Norfolk
Pacific/Noumea
Pacific/Pago_Pago
Pacific/Palau
Pacific/Pitcairn
Pacific/Pohnpei
Pacific/Ponape
Pacific/Port_Moresby
Pacific/Rarotonga
Pacific/Saipan
Pacific/Samoa
Pacific/Tahiti
Pacific/Tarawa
Pacific/Tongatapu
Pacific/Truk
Pacific/Wake
Pacific/Wallis
Pacific/Yap
Poland
Portugal
ROK
Singapore
SystemV/AST4
SystemV/AST4ADT
SystemV/CST6
SystemV/CST6CDT
SystemV/EST5
SystemV/EST5EDT
SystemV/HST10
SystemV/MST7
SystemV/MST7MDT
SystemV/PST8
SystemV/PST8PDT
SystemV/YST9
SystemV/YST9YDT
Turkey
UCT
US/Alaska
US/Aleutian
US/Arizona
US/Central
US/East-Indiana
US/Eastern
US/Hawaii
US/Indiana-Starke
US/Michigan
US/Mountain
US/Pacific
US/Samoa
UTC
Universal
W-SU
WET
Zulu
EST
HST
MST
ACT
AET
AGT
ART
AST
BET
BST
CAT
CNT
CST
CTT
EAT
ECT
IET
IST
JST
MIT
NET
NST
PLT
PNT
PRT
PST
SST
VST

================================================================

Sample: TreeMap_1
----------------------------------------------------------------
stdout:
Ceiling Entry for key 2: 2 - Two

================================================================

Sample: TreeMap_2
----------------------------------------------------------------
stdout:
Ceiling key for 2 is: 2

================================================================

Sample: TreeMap_3
----------------------------------------------------------------
stdout:
Floor Entry: 2=Two

================================================================

Sample: TreeMap_4
----------------------------------------------------------------
stdout:
Floor key for 2 is: 2

================================================================

Sample: TreeMap_5
----------------------------------------------------------------
stdout:
Head Map: {1=One, 2=Two}

================================================================

Sample: TreeSet_1
----------------------------------------------------------------
stdout:
Ceiling for 2: 3
Ceiling for 3: 3
Ceiling for 6: null

================================================================

Sample: TreeSet_2
----------------------------------------------------------------
stdout:
Floor of 2: 1
Floor of 4: 3
Floor of 6: 5

================================================================

Sample: TreeSet_3
----------------------------------------------------------------
stdout:
Head set elements: [1, 2, 3]

================================================================

Sample: TreeSet_4
----------------------------------------------------------------
stdout:
Original Set: [1, 2, 3]
Tail Set: [2, 3]

================================================================

Sample: TreeSet_5
----------------------------------------------------------------
stdout:
Set before pollFirst: [1, 2, 3]
First element removed: 1
Set after pollFirst: [2, 3]

================================================================

Sample: UUID_1
----------------------------------------------------------------
stdout:
Random UUID: 39333752-292f-4e18-9e8b-9ad5822de0ee

================================================================

Sample: UUID_2
----------------------------------------------------------------
stdout:
1a79a4d6-0de6-318e-8e5b-326e338ae533

================================================================

Sample: UUID_3
----------------------------------------------------------------
stdout:
Most Significant Bits: 1873452455637762651

================================================================

Sample: UUID_4
----------------------------------------------------------------
stdout:
Least Significant Bits: -8923511978195200534

================================================================

Sample: UUID_5
----------------------------------------------------------------
stdout:
UUID Version: 4

================================================================

Sample: Vector_5
----------------------------------------------------------------
stdout:
Index of 'Banana': 1
Index of 'Grapes': -1

================================================================

Sample: WeakHashMap_1
----------------------------------------------------------------
stdout:
Map before clear: {2=Two, 1=One}
Map after clear: {}

================================================================

Sample: WeakHashMap_2
----------------------------------------------------------------
stdout:
Contains key 'key1': true
Contains key 'key3': false

================================================================

Sample: WeakHashMap_3
----------------------------------------------------------------
stdout:
Contains value 2: true

================================================================

