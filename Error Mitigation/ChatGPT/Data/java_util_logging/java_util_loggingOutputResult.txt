Sample: Formatter_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_1.java:4: error: class CustomFormatter is public, should be declared in a file named CustomFormatter.java
public class CustomFormatter extends Formatter {
       ^
./Data/java_util_logging/javaFiles/Formatter_1.java:12: error: cannot find symbol
        LogRecord logRecord = new LogRecord(Level.INFO, "This is a log message");
                                            ^
  symbol:   variable Level
  location: class CustomFormatter
2 errors


================================================================

Sample: Formatter_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_2.java:11: error: MyFormatter is not abstract and does not override abstract method format(LogRecord) in Formatter
    static class MyFormatter extends Formatter {
           ^
1 error


================================================================

Sample: Formatter_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_3.java:11: error: MyFormatter is not abstract and does not override abstract method format(LogRecord) in Formatter
    static class MyFormatter extends Formatter {
           ^
1 error


================================================================

Sample: Formatter_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_4.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class Formatter_4
./Data/java_util_logging/javaFiles/Formatter_4.java:12: error: MyFormatter is not abstract and does not override abstract method format(LogRecord) in Formatter
    static class MyFormatter extends Formatter {
           ^
2 errors


================================================================

Sample: Formatter_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_5.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class Formatter_5
./Data/java_util_logging/javaFiles/Formatter_5.java:13: error: MyFormatter is not abstract and does not override abstract method format(LogRecord) in Formatter
class MyFormatter extends Formatter {
^
2 errors


================================================================

Sample: Handler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Handler_1.java:24: error: cannot find symbol
        LogRecord logRecord = new LogRecord(Level.INFO, "This is a log message");
                                            ^
  symbol:   variable Level
  location: class Handler_1
1 error


================================================================

Sample: Handler_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Handler_2.java:5: error: <anonymous Handler_2$1> is not abstract and does not override abstract method close() in Handler
        Handler handler = new Handler() {
                                        ^
1 error


================================================================

Sample: Handler_3
----------------------------------------------------------------
================================================================

Sample: Handler_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Handler_4.java:6: error: <anonymous Handler_4$1> is not abstract and does not override abstract method close() in Handler
        Handler handler = new Handler() {
                                        ^
./Data/java_util_logging/javaFiles/Handler_4.java:17: error: cannot find symbol
        LogRecord logRecord = new LogRecord(Level.INFO, "Log message");
                                            ^
  symbol:   variable Level
  location: class Handler_4
2 errors


================================================================

Sample: Handler_5
----------------------------------------------------------------
================================================================

Sample: Level_1
----------------------------------------------------------------
stdout:
Level name: INFO

================================================================

Sample: Level_2
----------------------------------------------------------------
stdout:
Integer value for level INFO: 800

================================================================

Sample: Level_3
----------------------------------------------------------------
stdout:
Result 1: false
Result 2: true

================================================================

Sample: Level_4
----------------------------------------------------------------
stdout:
Hashcode for level INFO: 800

================================================================

Sample: Level_5
----------------------------------------------------------------
stdout:
INFO

================================================================

Sample: Logger_1
----------------------------------------------------------------
stderr:
Aug. 21, 2024 8:49:06 P.M. Logger_1 main
INFO: This is an informational message

================================================================

Sample: Logger_2
----------------------------------------------------------------
stderr:
Aug. 21, 2024 8:49:07 P.M. Logger_2 main
INFO: Logging message with parameter

================================================================

Sample: Logger_3
----------------------------------------------------------------
stderr:
Aug. 21, 2024 8:49:08 P.M. Logger_3 main
INFO: This is a log message

================================================================

Sample: Logger_4
----------------------------------------------------------------
stderr:
Aug. 21, 2024 8:49:09 P.M. Logger_4 main
SEVERE: An error occurred
java.lang.NullPointerException: Null Pointer Exception
	at Logger_4.main(Logger_4.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)


================================================================

Sample: Logger_5
----------------------------------------------------------------
stderr:
Aug. 21, 2024 8:49:11 P.M. Logger_5 main
INFO: This is an INFO message

================================================================

Sample: LogManager_1
----------------------------------------------------------------
stdout:
Logger not found

================================================================

Sample: LogManager_2
----------------------------------------------------------------
stdout:

global

================================================================

Sample: LogManager_3
----------------------------------------------------------------
================================================================

Sample: LogManager_4
----------------------------------------------------------------
================================================================

Sample: LogRecord_1
----------------------------------------------------------------
stdout:
Logging message level: INFO

================================================================

Sample: LogRecord_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_2.java:5: error: constructor LogRecord in class LogRecord cannot be applied to given types;
        LogRecord record = new LogRecord();
                           ^
  required: Level,String
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: LogRecord_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_3.java:5: error: constructor LogRecord in class LogRecord cannot be applied to given types;
        LogRecord record = new LogRecord();
                           ^
  required: Level,String
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: LogRecord_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_4.java:5: error: constructor LogRecord in class LogRecord cannot be applied to given types;
        LogRecord record = new LogRecord();
                           ^
  required: Level,String
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: LogRecord_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_5.java:5: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class LogRecord_5
1 error


================================================================

Sample: MemoryHandler_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.RuntimeException: The handler java.util.logging.MemoryHandler does not specify a target
	at java.logging/java.util.logging.MemoryHandler.<init>(MemoryHandler.java:114)
	at MemoryHandler_1.main(MemoryHandler_1.java:5)

================================================================

Sample: MemoryHandler_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.RuntimeException: The handler java.util.logging.MemoryHandler does not specify a target
	at java.logging/java.util.logging.MemoryHandler.<init>(MemoryHandler.java:114)
	at MemoryHandler_2.main(MemoryHandler_2.java:5)

================================================================

Sample: MemoryHandler_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.RuntimeException: The handler java.util.logging.MemoryHandler does not specify a target
	at java.logging/java.util.logging.MemoryHandler.<init>(MemoryHandler.java:114)
	at MemoryHandler_4.main(MemoryHandler_4.java:6)

================================================================

Sample: MemoryHandler_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_5.java:7: error: constructor LogRecord in class LogRecord cannot be applied to given types;
        LogRecord logRecord = new LogRecord();
                              ^
  required: Level,String
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SimpleFormatter_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SimpleFormatter_1.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class SimpleFormatter_1
1 error


================================================================

Sample: SocketHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SocketHandler_1.java:5: error: unreported exception IOException; must be caught or declared to be thrown
        SocketHandler socketHandler = new SocketHandler();
                                      ^
1 error


================================================================

Sample: SocketHandler_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SocketHandler_3.java:7: error: constructor LogRecord in class LogRecord cannot be applied to given types;
        LogRecord record = new LogRecord();
                           ^
  required: Level,String
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: StreamHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/StreamHandler_1.java:9: error: setOutputStream(OutputStream) has protected access in StreamHandler
        handler.setOutputStream(outputStream);
               ^
1 error


================================================================

Sample: StreamHandler_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/StreamHandler_2.java:8: error: cannot find symbol
        } catch (SecurityException | UnsupportedEncodingException e) {
                                     ^
  symbol:   class UnsupportedEncodingException
  location: class StreamHandler_2
1 error


================================================================

Sample: StreamHandler_5
----------------------------------------------------------------
================================================================

Sample: XMLFormatter_1
----------------------------------------------------------------
stdout:
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>


================================================================

Sample: XMLFormatter_2
----------------------------------------------------------------
stdout:
Tail XML string: </log>


================================================================

Sample: XMLFormatter_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/XMLFormatter_3.java:7: error: incompatible types: int cannot be converted to Level
        LogRecord logRecord = new LogRecord(1, "Sample log message");
                                            ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

