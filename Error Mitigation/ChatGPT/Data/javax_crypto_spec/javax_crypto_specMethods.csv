ClassName,Method,Return Type,Description
DESedeKeySpec,getKey(),byte[],Returns the DES-EDE key.
DESedeKeySpec,"isParityAdjusted(byte[] key, int offset)",static boolean,"Checks if the given DES-EDE key, starting at offset inclusive, is parity-adjusted."
DESKeySpec,getKey(),byte[],Returns the DES key material.
DESKeySpec,"isParityAdjusted(byte[] key, int offset)",static boolean,"Checks if the given DES key material, starting at offset inclusive, is parity-adjusted."
DESKeySpec,"isWeak(byte[] key, int offset)",static boolean,Checks if the given DES key material is weak or semi-weak.
DHGenParameterSpec,getExponentSize(),int,Returns the size in bits of the random exponent (private value).
DHGenParameterSpec,getPrimeSize(),int,Returns the size in bits of the prime modulus.
DHParameterSpec,getG(),BigInteger,Returns the base generator g.
DHParameterSpec,getL(),int,"Returns the size in bits, l, of the random exponent (private value)."
DHParameterSpec,getP(),BigInteger,Returns the prime modulus p.
DHPrivateKeySpec,getG(),BigInteger,Returns the base generator g.
DHPrivateKeySpec,getP(),BigInteger,Returns the prime modulus p.
DHPrivateKeySpec,getX(),BigInteger,Returns the private value x.
DHPublicKeySpec,getG(),BigInteger,Returns the base generator g.
DHPublicKeySpec,getP(),BigInteger,Returns the prime modulus p.
DHPublicKeySpec,getY(),BigInteger,Returns the public value y.
GCMParameterSpec,getIV(),byte[],Returns the Initialization Vector (IV).
GCMParameterSpec,getTLen(),int,Returns the authentication tag length.
IvParameterSpec,getIV(),byte[],Returns the initialization vector (IV).
OAEPParameterSpec,getDigestAlgorithm(),String,Returns the message digest algorithm name.
OAEPParameterSpec,getMGFAlgorithm(),String,Returns the mask generation function algorithm name.
OAEPParameterSpec,getMGFParameters(),AlgorithmParameterSpec,Returns the parameters for the mask generation function.
OAEPParameterSpec,getPSource(),PSource,Returns the source of encoding input P.
PBEKeySpec,clearPassword(),void,Clears the internal copy of the password.
PBEKeySpec,getIterationCount(),int,Returns the iteration count or 0 if not specified.
PBEKeySpec,getKeyLength(),int,Returns the to-be-derived key length or 0 if not specified.
PBEKeySpec,getPassword(),char[],Returns a copy of the password.
PBEKeySpec,getSalt(),byte[],Returns a copy of the salt or null if not specified.
PBEParameterSpec,getIterationCount(),int,Returns the iteration count.
PBEParameterSpec,getParameterSpec(),AlgorithmParameterSpec,Returns the cipher algorithm parameter specification.
PBEParameterSpec,getSalt(),byte[],Returns the salt.
PSource,getAlgorithm(),String,Returns the PSource algorithm name.
PSource.PSpecified,getValue(),byte[],Returns the value of encoding input P.
RC2ParameterSpec,equals(Object obj),boolean,Tests for equality between the specified object and this object.
RC2ParameterSpec,getEffectiveKeyBits(),int,Returns the effective key size in bits.
RC2ParameterSpec,getIV(),byte[],Returns the IV or null if this parameter set does not contain an IV.
RC2ParameterSpec,hashCode(),int,Calculates a hash code value for the object.
RC5ParameterSpec,equals(Object obj),boolean,Tests for equality between the specified object and this object.
RC5ParameterSpec,getIV(),byte[],Returns the IV or null if this parameter set does not contain an IV.
RC5ParameterSpec,getRounds(),int,Returns the number of rounds.
RC5ParameterSpec,getVersion(),int,Returns the version.
RC5ParameterSpec,getWordSize(),int,Returns the word size in bits.
RC5ParameterSpec,hashCode(),int,Calculates a hash code value for the object.
SecretKeySpec,equals(Object obj),boolean,Tests for equality between the specified object and this object.
SecretKeySpec,getAlgorithm(),String,Returns the name of the algorithm associated with this secret key.
SecretKeySpec,getEncoded(),byte[],Returns the key material of this secret key.
SecretKeySpec,getFormat(),String,Returns the name of the encoding format for this secret key.
SecretKeySpec,hashCode(),int,Calculates a hash code value for the object.
