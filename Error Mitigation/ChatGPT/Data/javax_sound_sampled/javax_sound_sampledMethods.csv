ClassName,Method,Return Type,Description
AudioFileFormat,getByteLength(),int,Obtains the size in bytes of the entire audio file (not just its audio data).
AudioFileFormat,getFormat(),AudioFormat,Obtains the format of the audio data contained in the audio file.
AudioFileFormat,getFrameLength(),int,"Obtains the length of the audio data contained in the file, expressed in sample frames."
AudioFileFormat,getProperty(String key),Object,Obtain the property value specified by the key.
AudioFileFormat,getType(),AudioFileFormat.Type,"Obtains the audio file type, such as WAVE or AU."
AudioFileFormat,properties(),"Map<String,Object>",Obtain an unmodifiable map of properties.
AudioFileFormat,toString(),String,Provides a string representation of the file format.
AudioFileFormat.Type,equals(Object obj),boolean,Finalizes the equals method
AudioFileFormat.Type,getExtension(),String,Obtains the common file name extension for this file type.
AudioFileFormat.Type,hashCode(),int,Finalizes the hashCode method
AudioFileFormat.Type,toString(),String,Provides the file type's name as the String representation of the file type.
AudioFormat,getChannels(),int,Obtains the number of channels.
AudioFormat,getEncoding(),AudioFormat.Encoding,Obtains the type of encoding for sounds in this format.
AudioFormat,getFrameRate(),float,Obtains the frame rate in frames per second.
AudioFormat,getFrameSize(),int,Obtains the frame size in bytes.
AudioFormat,getProperty(String key),Object,Obtain the property value specified by the key.
AudioFormat,getSampleRate(),float,Obtains the sample rate.
AudioFormat,getSampleSizeInBits(),int,Obtains the size of a sample.
AudioFormat,isBigEndian(),boolean,Indicates whether the audio data is stored in big-endian or little-endian byte order.
AudioFormat,matches(AudioFormat format),boolean,Indicates whether this format matches the one specified.
AudioFormat,properties(),"Map<String,Object>",Obtain an unmodifiable map of properties.
AudioFormat,toString(),String,"Returns a string that describes the format, such as: ""PCM SIGNED 22050 Hz 16 bit mono big-endian""."
AudioFormat.Encoding,equals(Object obj),boolean,Finalizes the equals method
AudioFormat.Encoding,hashCode(),int,Finalizes the hashCode method
AudioFormat.Encoding,toString(),String,Provides the String representation of the encoding.
AudioInputStream,available(),int,Returns the maximum number of bytes that can be read (or skipped over) from this audio input stream without blocking.
AudioInputStream,close(),void,Closes this audio input stream and releases any system resources associated with the stream.
AudioInputStream,getFormat(),AudioFormat,Obtains the audio format of the sound data in this audio input stream.
AudioInputStream,getFrameLength(),long,"Obtains the length of the stream, expressed in sample frames rather than bytes."
AudioInputStream,mark(int readlimit),void,Marks the current position in this audio input stream.
AudioInputStream,markSupported(),boolean,Tests whether this audio input stream supports the mark and reset methods.
AudioInputStream,read(),int,Reads the next byte of data from the audio input stream.
AudioInputStream,read(byte[] b),int,Reads some number of bytes from the audio input stream and stores them into the buffer array b.
AudioInputStream,"read(byte[] b, int off, int len)",int,"Reads up to a specified maximum number of bytes of data from the audio stream, putting them into the given byte array."
AudioInputStream,reset(),void,Repositions this audio input stream to the position it had at the time its mark method was last invoked.
AudioInputStream,skip(long n),long,Skips over and discards a specified number of bytes from this audio input stream.
AudioSystem,getAudioFileFormat(File file),static AudioFileFormat,Obtains the audio file format of the specified File.
AudioSystem,getAudioFileFormat(InputStream stream),static AudioFileFormat,Obtains the audio file format of the provided input stream.
AudioSystem,getAudioFileFormat(URL url),static AudioFileFormat,Obtains the audio file format of the specified URL.
AudioSystem,getAudioFileTypes(),static AudioFileFormat.Type[],Obtains the file types for which file writing support is provided by the system.
AudioSystem,getAudioFileTypes(AudioInputStream stream),static AudioFileFormat.Type[],Obtains the file types that the system can write from the audio input stream specified.
AudioSystem,"getAudioInputStream(AudioFormat.Encoding targetEncoding, AudioInputStream sourceStream)",static AudioInputStream,"Obtains an audio input stream of the indicated encoding, by converting the provided audio input stream."
AudioSystem,"getAudioInputStream(AudioFormat targetFormat, AudioInputStream sourceStream)",static AudioInputStream,"Obtains an audio input stream of the indicated format, by converting the provided audio input stream."
AudioSystem,getAudioInputStream(File file),static AudioInputStream,Obtains an audio input stream from the provided File.
AudioSystem,getAudioInputStream(InputStream stream),static AudioInputStream,Obtains an audio input stream from the provided input stream.
AudioSystem,getAudioInputStream(URL url),static AudioInputStream,Obtains an audio input stream from the URL provided.
AudioSystem,getClip(),static Clip,Obtains a clip that can be used for playing back an audio file or an audio stream.
AudioSystem,getClip(Mixer.Info mixerInfo),static Clip,Obtains a clip from the specified mixer that can be used for playing back an audio file or an audio stream.
AudioSystem,getLine(Line.Info info),static Line,Obtains a line that matches the description in the specified Line.Info object.
AudioSystem,getMixer(Mixer.Info info),static Mixer,Obtains the requested audio mixer.
AudioSystem,getMixerInfo(),static Mixer.Info[],Obtains an array of mixer info objects that represents the set of audio mixers that are currently installed on the system.
AudioSystem,getSourceDataLine(AudioFormat format),static SourceDataLine,Obtains a source data line that can be used for playing back audio data in the format specified by the AudioFormat object.
AudioSystem,"getSourceDataLine(AudioFormat format, Mixer.Info mixerinfo)",static SourceDataLine,"Obtains a source data line that can be used for playing back audio data in the format specified by the AudioFormat object, provided by the mixer specified by the Mixer.Info object."
AudioSystem,getSourceLineInfo(Line.Info info),static Line.Info[],Obtains information about all source lines of a particular type that are supported by the installed mixers.
AudioSystem,getTargetDataLine(AudioFormat format),static TargetDataLine,Obtains a target data line that can be used for recording audio data in the format specified by the AudioFormat object.
AudioSystem,"getTargetDataLine(AudioFormat format, Mixer.Info mixerinfo)",static TargetDataLine,"Obtains a target data line that can be used for recording audio data in the format specified by the AudioFormat object, provided by the mixer specified by the Mixer.Info object."
AudioSystem,getTargetEncodings(AudioFormat.Encoding sourceEncoding),static AudioFormat.Encoding[],Obtains the encodings that the system can obtain from an audio input stream with the specified encoding using the set of installed format converters.
AudioSystem,getTargetEncodings(AudioFormat sourceFormat),static AudioFormat.Encoding[],Obtains the encodings that the system can obtain from an audio input stream with the specified format using the set of installed format converters.
AudioSystem,"getTargetFormats(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)",static AudioFormat[],Obtains the formats that have a particular encoding and that the system can obtain from a stream of the specified format using the set of installed format converters.
AudioSystem,getTargetLineInfo(Line.Info info),static Line.Info[],Obtains information about all target lines of a particular type that are supported by the installed mixers.
AudioSystem,"isConversionSupported(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)",static boolean,Indicates whether an audio input stream of the specified encoding can be obtained from an audio input stream that has the specified format.
AudioSystem,"isConversionSupported(AudioFormat targetFormat, AudioFormat sourceFormat)",static boolean,Indicates whether an audio input stream of a specified format can be obtained from an audio input stream of another specified format.
AudioSystem,isFileTypeSupported(AudioFileFormat.Type fileType),static boolean,Indicates whether file writing support for the specified file type is provided by the system.
AudioSystem,"isFileTypeSupported(AudioFileFormat.Type fileType, AudioInputStream stream)",static boolean,Indicates whether an audio file of the specified file type can be written from the indicated audio input stream.
AudioSystem,isLineSupported(Line.Info info),static boolean,Indicates whether the system supports any lines that match the specified Line.Info object.
AudioSystem,"write(AudioInputStream stream, AudioFileFormat.Type fileType, File out)",static int,Writes a stream of bytes representing an audio file of the specified file type to the external file provided.
AudioSystem,"write(AudioInputStream stream, AudioFileFormat.Type fileType, OutputStream out)",static int,Writes a stream of bytes representing an audio file of the specified file type to the output stream provided.
BooleanControl,getStateLabel(boolean state),String,Obtains the label for the specified state.
BooleanControl,getValue(),boolean,Obtains this control's current value.
BooleanControl,setValue(boolean value),void,Sets the current value for the control.
BooleanControl,toString(),String,Provides a string representation of the control
CompoundControl,getMemberControls(),Control[],Returns the set of member controls that comprise the compound control.
CompoundControl,toString(),String,Provides a string representation of the control
Control,getType(),Control.Type,Obtains the control's type.
Control,toString(),String,Obtains a String describing the control type and its current state.
Control.Type,equals(Object obj),boolean,Finalizes the equals method
Control.Type,hashCode(),int,Finalizes the hashCode method
Control.Type,toString(),String,Provides the String representation of the control type.
DataLine.Info,getFormats(),AudioFormat[],Obtains a set of audio formats supported by the data line.
DataLine.Info,getMaxBufferSize(),int,Obtains the maximum buffer size supported by the data line.
DataLine.Info,getMinBufferSize(),int,Obtains the minimum buffer size supported by the data line.
DataLine.Info,isFormatSupported(AudioFormat format),boolean,Indicates whether this data line supports a particular audio format.
DataLine.Info,matches(Line.Info info),boolean,Determines whether the specified info object matches this one.
DataLine.Info,toString(),String,Obtains a textual description of the data line info.
EnumControl,getValue(),Object,Obtains this control's current value.
EnumControl,getValues(),Object[],Returns the set of possible values for this control.
EnumControl,setValue(Object value),void,Sets the current value for the control.
EnumControl,toString(),String,Provides a string representation of the control.
FloatControl,getMaximum(),float,Obtains the maximum value permitted.
FloatControl,getMaxLabel(),String,"Obtains the label for the maximum value, such as ""Right"" or ""Full."""
FloatControl,getMidLabel(),String,"Obtains the label for the mid-point value, such as ""Center"" or ""Default."""
FloatControl,getMinimum(),float,Obtains the minimum value permitted.
FloatControl,getMinLabel(),String,"Obtains the label for the minimum value, such as ""Left"" or ""Off."""
FloatControl,getPrecision(),float,"Obtains the resolution or granularity of the control, in the units that the control measures."
FloatControl,getUnits(),String,"Obtains the label for the units in which the control's values are expressed, such as ""dB"" or ""frames per second."""
FloatControl,getUpdatePeriod(),int,"Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift."
FloatControl,getValue(),float,Obtains this control's current value.
FloatControl,setValue(float newValue),void,Sets the current value for the control.
FloatControl,"shift(float from, float to, int microseconds)",void,"Changes the control value from the initial value to the final value linearly over the specified time period, specified in microseconds."
FloatControl,toString(),String,Provides a string representation of the control
Line.Info,getLineClass(),Class<?>,Obtains the class of the line that this Line.Info object describes.
Line.Info,matches(Line.Info info),boolean,Indicates whether the specified info object matches this one.
Line.Info,toString(),String,Obtains a textual description of the line info.
LineEvent,getFramePosition(),long,"Obtains the position in the line's audio data when the event occurred, expressed in sample frames."
LineEvent,getLine(),Line,Obtains the audio line that is the source of this event.
LineEvent,getType(),LineEvent.Type,Obtains the event's type.
LineEvent,toString(),String,Obtains a string representation of the event.
LineEvent.Type,equals(Object obj),boolean,"Indicates whether the specified object is equal to this event type, returning true if the objects are identical."
LineEvent.Type,hashCode(),int,Finalizes the hashcode method.
LineEvent.Type,toString(),String,Returns the type name as the string representation.
Mixer.Info,equals(Object obj),boolean,"Indicates whether two info objects are equal, returning true if they are identical."
Mixer.Info,getDescription(),String,Obtains the description of the mixer.
Mixer.Info,getName(),String,Obtains the name of the mixer.
Mixer.Info,getVendor(),String,Obtains the vendor of the mixer.
Mixer.Info,getVersion(),String,Obtains the version of the mixer.
Mixer.Info,hashCode(),int,Finalizes the hashcode method.
Mixer.Info,toString(),String,Provides a string representation of the mixer info.
Port.Info,equals(Object obj),boolean,Finalizes the equals method
Port.Info,getName(),String,Obtains the name of the port.
Port.Info,hashCode(),int,Finalizes the hashCode method
Port.Info,isSource(),boolean,Indicates whether the port is a source or a target for its mixer.
Port.Info,matches(Line.Info info),boolean,Indicates whether this info object specified matches this one.
Port.Info,toString(),String,Provides a String representation of the port.
ReverbType,equals(Object obj),boolean,"Indicates whether the specified object is equal to this reverb type, returning true if the objects are identical."
ReverbType,getDecayTime(),int,"Obtains the decay time, which is the amount of time over which the late reflections attenuate to effective zero."
ReverbType,getEarlyReflectionDelay(),int,Returns the early reflection delay time in microseconds.
ReverbType,getEarlyReflectionIntensity(),float,Returns the early reflection intensity in decibels.
ReverbType,getLateReflectionDelay(),int,Returns the late reflection delay time in microseconds.
ReverbType,getLateReflectionIntensity(),float,Returns the late reflection intensity in decibels.
ReverbType,getName(),String,Obtains the name of this reverb type.
ReverbType,hashCode(),int,Finalizes the hashcode method.
ReverbType,toString(),String,"Provides a String representation of the reverb type, including its name and its parameter settings."
