ClassName,Method,Return Type,Description
AbstractDocument,addDocumentListener(DocumentListener listener),void,Adds a document listener for notification of any changes.
AbstractDocument,addUndoableEditListener(UndoableEditListener listener),void,Adds an undo listener for notification of any changes.
AbstractDocument,"createBranchElement(Element parent, AttributeSet a)",protected Element,"Creates a document branch element, that can contain other elements."
AbstractDocument,"createLeafElement(Element parent, AttributeSet a, int p0, int p1)",protected Element,Creates a document leaf element.
AbstractDocument,createPosition(int offs),Position,Returns a position that will track change as the document is altered.
AbstractDocument,dump(PrintStream out),void,Gives a diagnostic dump.
AbstractDocument,fireChangedUpdate(DocumentEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
AbstractDocument,fireInsertUpdate(DocumentEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
AbstractDocument,fireRemoveUpdate(DocumentEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
AbstractDocument,fireUndoableEditUpdate(UndoableEditEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
AbstractDocument,getAsynchronousLoadPriority(),int,Gets the asynchronous loading priority.
AbstractDocument,getAttributeContext(),protected AbstractDocument.AttributeContext,Fetches the context for managing attributes.
AbstractDocument,getBidiRootElement(),Element,Returns the root element of the bidirectional structure for this document.
AbstractDocument,getContent(),protected AbstractDocument.Content,Gets the content for the document.
AbstractDocument,getCurrentWriter(),protected Thread,Fetches the current writing thread if there is one.
AbstractDocument,getDefaultRootElement(),abstract Element,Returns the root element that views should be based upon unless some other mechanism for assigning views to element structures is provided.
AbstractDocument,getDocumentFilter(),DocumentFilter,Returns the DocumentFilter that is responsible for filtering of insertion/removal.
AbstractDocument,getDocumentListeners(),DocumentListener[],Returns an array of all the document listeners registered on this document.
AbstractDocument,getDocumentProperties(),"Dictionary<Object,Object>",Supports managing a set of properties.
AbstractDocument,getEndPosition(),Position,Returns a position that represents the end of the document.
AbstractDocument,getLength(),int,Returns the length of the data.
AbstractDocument,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this document.
AbstractDocument,getParagraphElement(int pos),abstract Element,Get the paragraph element containing the given position.
AbstractDocument,getProperty(Object key),Object,A convenience method for looking up a property value.
AbstractDocument,getRootElements(),Element[],Gets all root elements defined.
AbstractDocument,getStartPosition(),Position,Returns a position that represents the start of the document.
AbstractDocument,"getText(int offset, int length)",String,Gets a sequence of text from the document.
AbstractDocument,"getText(int offset, int length, Segment txt)",void,Fetches the text contained within the given portion of the document.
AbstractDocument,getUndoableEditListeners(),UndoableEditListener[],Returns an array of all the undoable edit listeners registered on this document.
AbstractDocument,"insertString(int offs, String str, AttributeSet a)",void,Inserts some content into the document.
AbstractDocument,"insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)",protected void,Updates document structure as a result of text insertion.
AbstractDocument,postRemoveUpdate(AbstractDocument.DefaultDocumentEvent chng),protected void,Updates any document structure as a result of text removal.
AbstractDocument,"putProperty(Object key, Object value)",void,A convenience method for storing up a property value.
AbstractDocument,readLock(),void,Acquires a lock to begin reading some state from the document.
AbstractDocument,readUnlock(),void,Does a read unlock.
AbstractDocument,"remove(int offs, int len)",void,Removes some content from the document.
AbstractDocument,removeDocumentListener(DocumentListener listener),void,Removes a document listener.
AbstractDocument,removeUndoableEditListener(UndoableEditListener listener),void,Removes an undo listener.
AbstractDocument,removeUpdate(AbstractDocument.DefaultDocumentEvent chng),protected void,Updates any document structure as a result of text removal.
AbstractDocument,render(Runnable r),void,"This allows the model to be safely rendered in the presence of currency, if the model supports being updated asynchronously."
AbstractDocument,"replace(int offset, int length, String text, AttributeSet attrs)",void,"Deletes the region of text from offset to offset + length, and replaces it with text."
AbstractDocument,setAsynchronousLoadPriority(int p),void,Sets the asynchronous loading priority.
AbstractDocument,setDocumentFilter(DocumentFilter filter),void,Sets the DocumentFilter.
AbstractDocument,"setDocumentProperties(Dictionary<Object,Object> x)",void,Replaces the document properties dictionary for this document.
AbstractDocument,writeLock(),protected void,Acquires a lock to begin mutating the document this lock protects.
AbstractDocument,writeUnlock(),protected void,Releases a write lock previously obtained via writeLock.
AbstractDocument.ElementEdit,getChildrenAdded(),Element[],Gets a list of children that were added.
AbstractDocument.ElementEdit,getChildrenRemoved(),Element[],Gets a list of children that were removed.
AbstractDocument.ElementEdit,getElement(),Element,Returns the underlying element.
AbstractDocument.ElementEdit,getIndex(),int,Returns the index into the list of elements.
AbstractDocument.ElementEdit,redo(),void,Redoes a change.
AbstractDocument.ElementEdit,undo(),void,Undoes a change.
AbstractWriter,decrIndent(),protected void,Decrements the indent level.
AbstractWriter,getCanWrapLines(),protected boolean,Returns whether or not the lines can be wrapped.
AbstractWriter,getCurrentLineLength(),protected int,Returns the current line length.
AbstractWriter,getDocument(),protected Document,Fetches the document.
AbstractWriter,getElementIterator(),protected ElementIterator,Fetches the ElementIterator.
AbstractWriter,getEndOffset(),int,Returns the last offset to be output.
AbstractWriter,getIndentLevel(),protected int,Returns the current indentation level.
AbstractWriter,getIndentSpace(),protected int,Returns the amount of space to indent.
AbstractWriter,getLineLength(),protected int,Returns the maximum line length.
AbstractWriter,getLineSeparator(),String,Returns the string used to represent newlines.
AbstractWriter,getStartOffset(),int,Returns the first offset to be output.
AbstractWriter,getText(Element elem),protected String,Returns the text associated with the element.
AbstractWriter,getWriter(),protected Writer,Returns the Writer that is used to output the content.
AbstractWriter,incrIndent(),protected void,Increments the indent level.
AbstractWriter,indent(),protected void,Does indentation.
AbstractWriter,inRange(Element next),protected boolean,This method determines whether the current element is in the range specified.
AbstractWriter,isLineEmpty(),protected boolean,Returns true if the current line should be considered empty.
AbstractWriter,"output(char[] content, int start, int length)",protected void,The last stop in writing out content.
AbstractWriter,setCanWrapLines(boolean newValue),protected void,Sets whether or not lines can be wrapped.
AbstractWriter,setCurrentLineLength(int length),protected void,Sets the current line length.
AbstractWriter,setIndentSpace(int space),protected void,Enables subclasses to specify how many spaces an indent maps to.
AbstractWriter,setLineLength(int l),protected void,Enables subclasses to set the number of characters they want written per line.
AbstractWriter,setLineSeparator(String value),void,Sets the String used to represent newlines.
AbstractWriter,text(Element elem),protected void,Writes out text.
AbstractWriter,write(),protected abstract void,This abstract method needs to be implemented by subclasses.
AbstractWriter,write(char ch),protected void,Writes out a character.
AbstractWriter,"write(char[] chars, int startIndex, int length)",protected void,All write methods call into this one.
AbstractWriter,write(String content),protected void,Writes out a string.
AbstractWriter,writeAttributes(AttributeSet attr),protected void,"Writes out the set of attributes as "" <name>=<value>"" pairs."
AbstractWriter,writeLineSeparator(),protected void,Writes the line separator.
AsyncBoxView,createChildState(View v),protected AsyncBoxView.ChildState,New ChildState records are created through this method to allow subclasses the extend the ChildState records to do/hold more
AsyncBoxView,flushRequirementChanges(),protected void,Publish the changes in preferences upward to the parent view.
AsyncBoxView,getBottomInset(),float,Get the bottom part of the margin around the view.
AsyncBoxView,"getChildAllocation(int index, Shape a)",Shape,Fetches the allocation for the given child view.
AsyncBoxView,getChildState(int index),protected AsyncBoxView.ChildState,Fetch the object representing the layout state of of the child at the given index.
AsyncBoxView,getEstimatedMajorSpan(),protected boolean,Is the major span currently estimated?
AsyncBoxView,getInsetSpan(int axis),protected float,Fetch the span along an axis that is taken up by the insets.
AsyncBoxView,getLayoutQueue(),protected LayoutQueue,Fetch the queue to use for layout.
AsyncBoxView,getLeftInset(),float,Get the left part of the margin around the view.
AsyncBoxView,getMajorAxis(),int,Fetch the major axis (the axis the children are tiled along).
AsyncBoxView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
AsyncBoxView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
AsyncBoxView,getMinorAxis(),int,Fetch the minor axis (the axis orthogonal to the tiled axis).
AsyncBoxView,"getNextVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",int,Provides a way to determine the next visually represented model location that one might place a caret.
AsyncBoxView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
AsyncBoxView,getRightInset(),float,Get the right part of the margin around the view.
AsyncBoxView,getTopInset(),float,Get the top part of the margin around the view.
AsyncBoxView,getView(int n),View,Gets the nth child view.
AsyncBoxView,getViewCount(),int,Returns the number of views in this view.
AsyncBoxView,"getViewIndex(int pos, Position.Bias b)",int,Returns the child view index representing the given position in the model.
AsyncBoxView,"getViewIndexAtPosition(int pos, Position.Bias b)",protected int,Fetches the child view index representing the given position in the model.
AsyncBoxView,loadChildren(ViewFactory f),protected void,Loads all of the children to initialize the view.
AsyncBoxView,"majorRequirementChange(AsyncBoxView.ChildState cs, float delta)",protected void,Requirements changed along the major axis.
AsyncBoxView,minorRequirementChange(AsyncBoxView.ChildState cs),protected void,Requirements changed along the minor axis.
AsyncBoxView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
AsyncBoxView,"paint(Graphics g, Shape alloc)",void,Render the view using the given allocation and rendering surface.
AsyncBoxView,"preferenceChanged(View child, boolean width, boolean height)",void,Child views can call this on the parent to indicate that the preference has changed and should be reconsidered for layout.
AsyncBoxView,"replace(int offset, int length, View[] views)",void,"Calls the superclass to update the child views, and updates the status records for the children."
AsyncBoxView,setBottomInset(float i),void,Set the bottom part of the margin around the view.
AsyncBoxView,setEstimatedMajorSpan(boolean isEstimated),protected void,Set the estimatedMajorSpan property that determines if the major span should be treated as being estimated.
AsyncBoxView,setLeftInset(float i),void,Set the left part of the margin around the view.
AsyncBoxView,setParent(View parent),void,Sets the parent of the view.
AsyncBoxView,setRightInset(float i),void,Set the right part of the margin around the view.
AsyncBoxView,"setSize(float width, float height)",void,Sets the size of the view.
AsyncBoxView,setTopInset(float i),void,Set the top part of the margin around the view.
AsyncBoxView,"updateLayout(DocumentEvent.ElementChange ec, DocumentEvent e, Shape a)",protected void,Update the layout in response to receiving notification of change from the model.
AsyncBoxView,"viewToModel(float x, float y, Shape a, Position.Bias[] biasReturn)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
BoxView,"baselineLayout(int targetSpan, int axis, int[] offsets, int[] spans)",protected void,"Computes the location and extent of each child view in this BoxView given the targetSpan, which is the width (or height) of the region we have to work with."
BoxView,"baselineRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculates the size requirements for this BoxView by examining the size of each child view.
BoxView,"calculateMajorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculates the size requirements for the major axis axis.
BoxView,"calculateMinorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculates the size requirements for the minor axis axis.
BoxView,"childAllocation(int index, Rectangle alloc)",protected void,Allocates a region for a child view.
BoxView,"flipEastAndWestAtEnds(int position, Position.Bias bias)",protected boolean,Determines in which direction the next view lays.
BoxView,"forwardUpdate(DocumentEvent.ElementChange ec, DocumentEvent e, Shape a, ViewFactory f)",protected void,Forwards the given DocumentEvent to the child views that need to be notified of the change to the model.
BoxView,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
BoxView,getAxis(),int,Fetches the tile axis property.
BoxView,"getChildAllocation(int index, Shape a)",Shape,Fetches the allocation for the given child view.
BoxView,getHeight(),int,Returns the current height of the box.
BoxView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
BoxView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
BoxView,"getOffset(int axis, int childIndex)",protected int,Fetches the offset of a particular child's current layout.
BoxView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
BoxView,getResizeWeight(int axis),int,Gets the resize weight.
BoxView,"getSpan(int axis, int childIndex)",protected int,Fetches the span of a particular child's current layout.
BoxView,"getViewAtPoint(int x, int y, Rectangle alloc)",protected View,Fetches the child view at the given coordinates.
BoxView,getWidth(),int,Returns the current width of the box.
BoxView,"isAfter(int x, int y, Rectangle innerAlloc)",protected boolean,Determines if a point falls after an allocated region.
BoxView,isAllocationValid(),protected boolean,Are the allocations for the children still valid?
BoxView,"isBefore(int x, int y, Rectangle innerAlloc)",protected boolean,Determines if a point falls before an allocated region.
BoxView,isLayoutValid(int axis),protected boolean,Determines if the layout is valid along the given axis.
BoxView,"layout(int width, int height)",protected void,Perform layout on the box
BoxView,layoutChanged(int axis),void,Invalidates the layout along an axis.
BoxView,"layoutMajorAxis(int targetSpan, int axis, int[] offsets, int[] spans)",protected void,Performs layout for the major axis of the box (i.e.
BoxView,"layoutMinorAxis(int targetSpan, int axis, int[] offsets, int[] spans)",protected void,Performs layout for the minor axis of the box (i.e.
BoxView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
BoxView,"paint(Graphics g, Shape allocation)",void,Renders the BoxView using the given rendering surface and area on that surface.
BoxView,"paintChild(Graphics g, Rectangle alloc, int index)",protected void,Paints a child.
BoxView,"preferenceChanged(View child, boolean width, boolean height)",void,This is called by a child to indicate its preferred span has changed.
BoxView,"replace(int index, int length, View[] elems)",void,Invalidates the layout and resizes the cache of requests/allocations.
BoxView,setAxis(int axis),void,Sets the tile axis property.
BoxView,"setSize(float width, float height)",void,Sets the size of the view.
BoxView,"viewToModel(float x, float y, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
ComponentView,createComponent(),protected Component,Create the component that is associated with this view.
ComponentView,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
ComponentView,getComponent(),Component,Fetch the component associated with the view.
ComponentView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
ComponentView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
ComponentView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
ComponentView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the coordinate space of the model to that of the view.
ComponentView,"paint(Graphics g, Shape a)",void,The real paint behavior occurs naturally from the association that the component has with its parent container (the same container hosting this view).
ComponentView,setParent(View p),void,Sets the parent for a child view.
ComponentView,"viewToModel(float x, float y, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
CompositeView,"childAllocation(int index, Rectangle a)",protected abstract void,Returns the allocation for a given child.
CompositeView,"flipEastAndWestAtEnds(int position, Position.Bias bias)",protected boolean,Determines in which direction the next view lays.
CompositeView,getBottomInset(),protected short,Gets the bottom inset.
CompositeView,"getChildAllocation(int index, Shape a)",Shape,Fetches the allocation for the given child view to render into.
CompositeView,getInsideAllocation(Shape a),protected Rectangle,Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e.
CompositeView,getLeftInset(),protected short,Gets the left inset.
CompositeView,"getNextEastWestVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",protected int,"Returns the next visual position for the cursor, in either the east or west direction."
CompositeView,"getNextNorthSouthVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",protected int,"Returns the next visual position for the cursor, in either the north or south direction."
CompositeView,"getNextVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",int,Provides a way to determine the next visually represented model location that one might place a caret.
CompositeView,getRightInset(),protected short,Gets the right inset.
CompositeView,getTopInset(),protected short,Gets the top inset.
CompositeView,getView(int n),View,Returns the n-th view in this container.
CompositeView,"getViewAtPoint(int x, int y, Rectangle alloc)",protected abstract View,Fetches the child view at the given coordinates.
CompositeView,"getViewAtPosition(int pos, Rectangle a)",protected View,Fetches the child view that represents the given position in the model.
CompositeView,getViewCount(),int,Returns the number of child views of this view.
CompositeView,"getViewIndex(int pos, Position.Bias b)",int,Returns the child view index representing the given position in the model.
CompositeView,getViewIndexAtPosition(int pos),protected int,Fetches the child view index representing the given position in the model.
CompositeView,"isAfter(int x, int y, Rectangle alloc)",protected abstract boolean,Tests whether a point lies after the rectangle range.
CompositeView,"isBefore(int x, int y, Rectangle alloc)",protected abstract boolean,Tests whether a point lies before the rectangle range.
CompositeView,loadChildren(ViewFactory f),protected void,Loads all of the children to initialize the view.
CompositeView,"modelToView(int p0, Position.Bias b0, int p1, Position.Bias b1, Shape a)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
CompositeView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
CompositeView,"replace(int offset, int length, View[] views)",void,Replaces child views.
CompositeView,"setInsets(short top, short left, short bottom, short right)",protected void,Sets the insets for the view.
CompositeView,setParagraphInsets(AttributeSet attr),protected void,Sets the insets from the paragraph attributes specified in the given attributes.
CompositeView,setParent(View parent),void,Sets the parent of the view.
CompositeView,"viewToModel(float x, float y, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
DateFormatter,setFormat(DateFormat format),void,Sets the format that dictates the legal values that can be edited and displayed.
DefaultCaret,addChangeListener(ChangeListener l),void,Adds a listener to track whenever the caret position has been changed.
DefaultCaret,adjustVisibility(Rectangle nloc),protected void,Scrolls the associated view (if necessary) to make the caret visible.
DefaultCaret,damage(Rectangle r),protected void,Damages the area surrounding the caret to cause it to be repainted in a new location.
DefaultCaret,deinstall(JTextComponent c),void,Called when the UI is being removed from the interface of a JTextComponent.
DefaultCaret,equals(Object obj),boolean,Compares this object to the specified object.
DefaultCaret,fireStateChanged(),protected void,Notifies all listeners that have registered interest for notification on this event type.
DefaultCaret,focusGained(FocusEvent e),void,Called when the component containing the caret gains focus.
DefaultCaret,focusLost(FocusEvent e),void,Called when the component containing the caret loses focus.
DefaultCaret,getBlinkRate(),int,Gets the caret blink rate.
DefaultCaret,getChangeListeners(),ChangeListener[],Returns an array of all the change listeners registered on this caret.
DefaultCaret,getComponent(),protected JTextComponent,Gets the text editor component that this caret is is bound to.
DefaultCaret,getDot(),int,Fetches the current position of the caret.
DefaultCaret,getDotBias(),Position.Bias,Returns the bias of the caret position.
DefaultCaret,getListeners(Class<T> listenerType),<T extends EventListener>T[],Returns an array of all the objects currently registered as FooListeners upon this caret.
DefaultCaret,getMagicCaretPosition(),Point,Gets the saved caret position.
DefaultCaret,getMark(),int,Fetches the current position of the mark.
DefaultCaret,getMarkBias(),Position.Bias,Returns the bias of the mark.
DefaultCaret,getSelectionPainter(),protected Highlighter.HighlightPainter,Gets the painter for the Highlighter.
DefaultCaret,getUpdatePolicy(),int,Gets the caret movement policy on document updates.
DefaultCaret,install(JTextComponent c),void,Called when the UI is being installed into the interface of a JTextComponent.
DefaultCaret,isActive(),boolean,Determines if the caret is currently active.
DefaultCaret,isSelectionVisible(),boolean,Checks whether the current selection is visible.
DefaultCaret,isVisible(),boolean,Indicates whether or not the caret is currently visible.
DefaultCaret,mouseClicked(MouseEvent e),void,Called when the mouse is clicked.
DefaultCaret,mouseDragged(MouseEvent e),void,Moves the caret position according to the mouse pointer's current location.
DefaultCaret,mouseEntered(MouseEvent e),void,Called when the mouse enters a region.
DefaultCaret,mouseExited(MouseEvent e),void,Called when the mouse exits a region.
DefaultCaret,mouseMoved(MouseEvent e),void,Called when the mouse is moved.
DefaultCaret,mousePressed(MouseEvent e),void,"If button 1 is pressed, this is implemented to request focus on the associated text component, and to set the caret position."
DefaultCaret,mouseReleased(MouseEvent e),void,Called when the mouse is released.
DefaultCaret,moveCaret(MouseEvent e),protected void,"Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel()."
DefaultCaret,moveDot(int dot),void,"Moves the caret position to the specified position, with a forward bias."
DefaultCaret,"moveDot(int dot, Position.Bias dotBias)",void,"Moves the caret position to the specified position, with the specified bias."
DefaultCaret,paint(Graphics g),void,Renders the caret as a vertical line.
DefaultCaret,positionCaret(MouseEvent e),protected void,"Tries to set the position of the caret from the coordinates of a mouse event, using viewToModel()."
DefaultCaret,removeChangeListener(ChangeListener l),void,Removes a listener that was tracking caret position changes.
DefaultCaret,repaint(),protected void,Cause the caret to be painted.
DefaultCaret,setBlinkRate(int rate),void,Sets the caret blink rate.
DefaultCaret,setDot(int dot),void,"Sets the caret position and mark to the specified position, with a forward bias."
DefaultCaret,"setDot(int dot, Position.Bias dotBias)",void,"Sets the caret position and mark to the specified position, with the specified bias."
DefaultCaret,setMagicCaretPosition(Point p),void,Saves the current caret position.
DefaultCaret,setSelectionVisible(boolean vis),void,Changes the selection visibility.
DefaultCaret,setUpdatePolicy(int policy),void,Sets the caret movement policy on the document updates.
DefaultCaret,setVisible(boolean e),void,"Sets the caret visibility, and repaints the caret."
DefaultCaret,toString(),String,Returns a String representing this Rectangle and its values.
DefaultEditorKit,createCaret(),Caret,Fetches a caret that can navigate through views produced by the associated ViewFactory.
DefaultEditorKit,createDefaultDocument(),Document,Creates an uninitialized text storage model (PlainDocument) that is appropriate for this type of editor.
DefaultEditorKit,getActions(),Action[],Fetches the set of commands that can be used on a text component that is using a model and view produced by this kit.
DefaultEditorKit,getContentType(),String,Gets the MIME type of the data that this kit represents support for.
DefaultEditorKit,getViewFactory(),ViewFactory,Fetches a factory that is suitable for producing views of any models that are produced by this kit.
DefaultEditorKit,"read(InputStream in, Document doc, int pos)",void,Inserts content from the given stream which is expected to be in a format appropriate for this kind of content handler.
DefaultEditorKit,"read(Reader in, Document doc, int pos)",void,"Inserts content from the given stream, which will be treated as plain text."
DefaultEditorKit,"write(OutputStream out, Document doc, int pos, int len)",void,Writes content from a document to the given stream in a format appropriate for this kind of content handler.
DefaultEditorKit,"write(Writer out, Document doc, int pos, int len)",void,Writes content from a document to the given stream as plain text.
DefaultEditorKit.BeepAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.CopyAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.CutAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.DefaultKeyTypedAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.InsertBreakAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.InsertContentAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.InsertTabAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultEditorKit.PasteAction,actionPerformed(ActionEvent e),void,The operation to perform when this action is triggered.
DefaultFormatter,clone(),Object,Creates a copy of the DefaultFormatter.
DefaultFormatter,getAllowsInvalid(),boolean,Returns whether or not the value being edited is allowed to be invalid for a length of time.
DefaultFormatter,getCommitsOnValidEdit(),boolean,Returns when edits are published back to the JFormattedTextField.
DefaultFormatter,getDocumentFilter(),protected DocumentFilter,Returns the DocumentFilter used to restrict the characters that can be input into the JFormattedTextField.
DefaultFormatter,getNavigationFilter(),protected NavigationFilter,Returns the NavigationFilter used to restrict where the cursor can be placed.
DefaultFormatter,getOverwriteMode(),boolean,Returns the behavior when inserting characters.
DefaultFormatter,getValueClass(),Class<?>,Returns that class that is used to create new Objects.
DefaultFormatter,install(JFormattedTextField ftf),void,Installs the DefaultFormatter onto a particular JFormattedTextField.
DefaultFormatter,setAllowsInvalid(boolean allowsInvalid),void,"Sets whether or not the value being edited is allowed to be invalid for a length of time (that is, stringToValue throws a ParseException)."
DefaultFormatter,setCommitsOnValidEdit(boolean commit),void,Sets when edits are published back to the JFormattedTextField.
DefaultFormatter,setOverwriteMode(boolean overwriteMode),void,Configures the behavior when inserting characters.
DefaultFormatter,setValueClass(Class<?> valueClass),void,Sets that class that is used to create new Objects.
DefaultFormatter,stringToValue(String string),Object,Converts the passed in String into an instance of getValueClass by way of the constructor that takes a String argument.
DefaultFormatter,valueToString(Object value),String,Converts the passed in Object into a String by way of the toString method.
DefaultFormatterFactory,getDefaultFormatter(),JFormattedTextField.AbstractFormatter,"Returns the JFormattedTextField.AbstractFormatter to use as a last resort, eg in case a display, edit or null JFormattedTextField.AbstractFormatter has not been specified."
DefaultFormatterFactory,getDisplayFormatter(),JFormattedTextField.AbstractFormatter,"Returns the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is not being edited and either the value is not-null, or the value is null and a null formatter has has not been specified."
DefaultFormatterFactory,getEditFormatter(),JFormattedTextField.AbstractFormatter,"Returns the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is being edited and either the value is not-null, or the value is null and a null formatter has has not been specified."
DefaultFormatterFactory,getFormatter(JFormattedTextField source),JFormattedTextField.AbstractFormatter,"Returns either the default formatter, display formatter, editor formatter or null formatter based on the state of the JFormattedTextField."
DefaultFormatterFactory,getNullFormatter(),JFormattedTextField.AbstractFormatter,Returns the formatter to use if the value is null.
DefaultFormatterFactory,setDefaultFormatter(JFormattedTextField.AbstractFormatter atf),void,"Sets the JFormattedTextField.AbstractFormatter to use as a last resort, eg in case a display, edit or null JFormattedTextField.AbstractFormatter has not been specified."
DefaultFormatterFactory,setDisplayFormatter(JFormattedTextField.AbstractFormatter atf),void,"Sets the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is not being edited and either the value is not-null, or the value is null and a null formatter has has not been specified."
DefaultFormatterFactory,setEditFormatter(JFormattedTextField.AbstractFormatter atf),void,"Sets the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is being edited and either the value is not-null, or the value is null and a null formatter has has not been specified."
DefaultFormatterFactory,setNullFormatter(JFormattedTextField.AbstractFormatter atf),void,Sets the formatter to use if the value of the JFormattedTextField is null.
DefaultHighlighter,"addHighlight(int p0, int p1, Highlighter.HighlightPainter p)",Object,Adds a highlight to the view.
DefaultHighlighter,"changeHighlight(Object tag, int p0, int p1)",void,Changes a highlight.
DefaultHighlighter,deinstall(JTextComponent c),void,Called when the UI is being removed from the interface of a JTextComponent.
DefaultHighlighter,getDrawsLayeredHighlights(),boolean,NULL
DefaultHighlighter,getHighlights(),Highlighter.Highlight[],Makes a copy of the highlights.
DefaultHighlighter,install(JTextComponent c),void,Called when the UI is being installed into the interface of a JTextComponent.
DefaultHighlighter,paint(Graphics g),void,Renders the highlights.
DefaultHighlighter,"paintLayeredHighlights(Graphics g, int p0, int p1, Shape viewBounds, JTextComponent editor, View view)",void,When leaf Views (such as LabelView) are rendering they should call into this method.
DefaultHighlighter,removeAllHighlights(),void,Removes all highlights.
DefaultHighlighter,removeHighlight(Object tag),void,Removes a highlight from the view.
DefaultHighlighter,setDrawsLayeredHighlights(boolean newValue),void,"If true, highlights are drawn as the Views draw the text."
DefaultHighlighter.DefaultHighlightPainter,getColor(),Color,Returns the color of the highlight.
DefaultHighlighter.DefaultHighlightPainter,"paint(Graphics g, int offs0, int offs1, Shape bounds, JTextComponent c)",void,Paints a highlight.
DefaultHighlighter.DefaultHighlightPainter,"paintLayer(Graphics g, int offs0, int offs1, Shape bounds, JTextComponent c, View view)",Shape,Paints a portion of a highlight.
DefaultStyledDocument,addDocumentListener(DocumentListener listener),void,Adds a document listener for notification of any changes.
DefaultStyledDocument,"addStyle(String nm, Style parent)",Style,Adds a new style into the logical style hierarchy.
DefaultStyledDocument,create(DefaultStyledDocument.ElementSpec[] data),protected void,Initialize the document to reflect the given element structure (i.e.
DefaultStyledDocument,createDefaultRoot(),protected AbstractDocument.AbstractElement,Creates the root element to be used to represent the default document structure.
DefaultStyledDocument,getBackground(AttributeSet attr),Color,Gets the background color from an attribute set.
DefaultStyledDocument,getCharacterElement(int pos),Element,Gets a character element based on a position.
DefaultStyledDocument,getDefaultRootElement(),Element,Gets the default root element.
DefaultStyledDocument,getFont(AttributeSet attr),Font,Gets the font from an attribute set.
DefaultStyledDocument,getForeground(AttributeSet attr),Color,Gets the foreground color from an attribute set.
DefaultStyledDocument,getLogicalStyle(int p),Style,Fetches the logical style assigned to the paragraph represented by the given position.
DefaultStyledDocument,getParagraphElement(int pos),Element,Gets the paragraph element at the offset pos.
DefaultStyledDocument,getStyle(String nm),Style,Fetches a named style previously added.
DefaultStyledDocument,getStyleNames(),Enumeration<?>,Fetches the list of of style names.
DefaultStyledDocument,"insert(int offset, DefaultStyledDocument.ElementSpec[] data)",protected void,Inserts new elements in bulk.
DefaultStyledDocument,"insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)",protected void,Updates document structure as a result of text insertion.
DefaultStyledDocument,removeDocumentListener(DocumentListener listener),void,Removes a document listener.
DefaultStyledDocument,removeElement(Element elem),void,Removes an element from this document.
DefaultStyledDocument,removeStyle(String nm),void,Removes a named style previously added to the document.
DefaultStyledDocument,removeUpdate(AbstractDocument.DefaultDocumentEvent chng),protected void,Updates document structure as a result of text removal.
DefaultStyledDocument,"setCharacterAttributes(int offset, int length, AttributeSet s, boolean replace)",void,Sets attributes for some part of the document.
DefaultStyledDocument,"setLogicalStyle(int pos, Style s)",void,Sets the logical style to use for the paragraph at the given position.
DefaultStyledDocument,"setParagraphAttributes(int offset, int length, AttributeSet s, boolean replace)",void,Sets attributes for a paragraph.
DefaultStyledDocument,styleChanged(Style style),protected void,Called when any of this document's styles have changed.
DefaultStyledDocument.AttributeUndoableEdit,redo(),void,Redoes a change.
DefaultStyledDocument.AttributeUndoableEdit,undo(),void,Undoes a change.
DefaultStyledDocument.ElementSpec,getArray(),char[],Gets the array of characters.
DefaultStyledDocument.ElementSpec,getAttributes(),AttributeSet,Gets the element attributes.
DefaultStyledDocument.ElementSpec,getDirection(),short,Gets the direction.
DefaultStyledDocument.ElementSpec,getLength(),int,Gets the length.
DefaultStyledDocument.ElementSpec,getOffset(),int,Gets the starting offset.
DefaultStyledDocument.ElementSpec,getType(),short,Gets the element type.
DefaultStyledDocument.ElementSpec,setDirection(short direction),void,Sets the direction.
DefaultStyledDocument.ElementSpec,setType(short type),void,Sets the element type.
DefaultStyledDocument.ElementSpec,toString(),String,Converts the element to a string.
DocumentFilter,"insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr)",void,Invoked prior to insertion of text into the specified Document.
DocumentFilter,"remove(DocumentFilter.FilterBypass fb, int offset, int length)",void,Invoked prior to removal of the specified region in the specified Document.
DocumentFilter,"replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs)",void,Invoked prior to replacing a region of text in the specified Document.
DocumentFilter.FilterBypass,getDocument(),abstract Document,Returns the Document the mutation is occurring on.
DocumentFilter.FilterBypass,"insertString(int offset, String string, AttributeSet attr)",abstract void,"Inserts the specified text, bypassing the DocumentFilter."
DocumentFilter.FilterBypass,"remove(int offset, int length)",abstract void,"Removes the specified region of text, bypassing the DocumentFilter."
DocumentFilter.FilterBypass,"replace(int offset, int length, String string, AttributeSet attrs)",abstract void,"Deletes the region of text from offset to offset + length, and replaces it with text."
EditorKit,clone(),Object,Creates a copy of the editor kit.
EditorKit,createCaret(),abstract Caret,Fetches a caret that can navigate through views produced by the associated ViewFactory.
EditorKit,createDefaultDocument(),abstract Document,Creates an uninitialized text storage model that is appropriate for this type of editor.
EditorKit,deinstall(JEditorPane c),void,Called when the kit is being removed from the JEditorPane.
EditorKit,getActions(),abstract Action[],Fetches the set of commands that can be used on a text component that is using a model and view produced by this kit.
EditorKit,getContentType(),abstract String,Gets the MIME type of the data that this kit represents support for.
EditorKit,getViewFactory(),abstract ViewFactory,Fetches a factory that is suitable for producing views of any models that are produced by this kit.
EditorKit,install(JEditorPane c),void,Called when the kit is being installed into the a JEditorPane.
EditorKit,"read(InputStream in, Document doc, int pos)",abstract void,Inserts content from the given stream which is expected to be in a format appropriate for this kind of content handler.
EditorKit,"read(Reader in, Document doc, int pos)",abstract void,Inserts content from the given stream which is expected to be in a format appropriate for this kind of content handler.
EditorKit,"write(OutputStream out, Document doc, int pos, int len)",abstract void,Writes content from a document to the given stream in a format appropriate for this kind of content handler.
EditorKit,"write(Writer out, Document doc, int pos, int len)",abstract void,Writes content from a document to the given stream in a format appropriate for this kind of content handler.
ElementIterator,clone(),Object,Clones the ElementIterator.
ElementIterator,current(),Element,Fetches the current Element.
ElementIterator,depth(),int,Fetches the current depth of element tree.
ElementIterator,first(),Element,Fetches the first element.
ElementIterator,next(),Element,Fetches the next Element.
ElementIterator,previous(),Element,Fetches the previous Element.
FieldView,adjustAllocation(Shape a),protected Shape,Adjusts the allocation given to the view to be a suitable allocation for a text field.
FieldView,getFontMetrics(),protected FontMetrics,Fetches the font metrics associated with the component hosting this view.
FieldView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
FieldView,getResizeWeight(int axis),int,Determines the resizability of the view along the given axis.
FieldView,"insertUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
FieldView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
FieldView,"paint(Graphics g, Shape a)",void,Renders using the given rendering surface and area on that surface.
FieldView,"removeUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
FieldView,"viewToModel(float fx, float fy, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
FlowView,"calculateMinorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculate requirements along the minor axis.
FlowView,"changedUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
FlowView,createRow(),protected abstract View,Create a View that should be used to hold a a rows worth of children in a flow.
FlowView,getFlowAxis(),int,Fetches the axis along which views should be flowed.
FlowView,getFlowSpan(int index),int,Fetch the constraining span to flow against for the given child index.
FlowView,getFlowStart(int index),int,Fetch the location along the flow axis that the flow span will start at.
FlowView,getViewIndexAtPosition(int pos),protected int,Fetches the child view index representing the given position in the model.
FlowView,"insertUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
FlowView,"layout(int width, int height)",protected void,Lays out the children.
FlowView,loadChildren(ViewFactory f),protected void,Loads all of the children to initialize the view.
FlowView,"removeUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
FlowView,setParent(View parent),void,Sets the parent of the view.
FlowView.FlowStrategy,"adjustRow(FlowView fv, int rowIndex, int desiredSpan, int x)",protected void,Adjusts the given row if possible to fit within the layout span.
FlowView.FlowStrategy,"changedUpdate(FlowView fv, DocumentEvent e, Rectangle alloc)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
FlowView.FlowStrategy,"createView(FlowView fv, int startOffset, int spanLeft, int rowIndex)",protected View,Creates a view that can be used to represent the current piece of the flow.
FlowView.FlowStrategy,getLogicalView(FlowView fv),protected View,This method gives flow strategies access to the logical view of the FlowView.
FlowView.FlowStrategy,"insertUpdate(FlowView fv, DocumentEvent e, Rectangle alloc)",void,Gives notification that something was inserted into the document in a location that the given flow view is responsible for.
FlowView.FlowStrategy,layout(FlowView fv),void,Update the flow on the given FlowView.
FlowView.FlowStrategy,"layoutRow(FlowView fv, int rowIndex, int pos)",protected int,Creates a row of views that will fit within the layout span of the row.
FlowView.FlowStrategy,"removeUpdate(FlowView fv, DocumentEvent e, Rectangle alloc)",void,Gives notification that something was removed from the document in a location that the given flow view is responsible for.
GapContent,allocateArray(int len),protected Object,Allocate an array to store items of the type appropriate (which is determined by the subclass).
GapContent,createPosition(int offset),Position,Creates a position within the content that will track change as the content is mutated.
GapContent,getArray(),protected Object,Access to the array.
GapContent,getArrayLength(),protected int,Get the length of the allocated array.
GapContent,"getChars(int where, int len, Segment chars)",void,Retrieves a portion of the content.
GapContent,getGapEnd(),protected int,Access to the end of the gap.
GapContent,getGapStart(),protected int,Access to the start of the gap.
GapContent,"getPositionsInRange(Vector v, int offset, int length)",protected Vector,Returns a Vector containing instances of UndoPosRef for the Positions in the range offset to offset + length.
GapContent,"getString(int where, int len)",String,Retrieves a portion of the content.
GapContent,"insertString(int where, String str)",UndoableEdit,Inserts a string into the content.
GapContent,length(),int,Returns the length of the content.
GapContent,"remove(int where, int nitems)",UndoableEdit,Removes part of the content.
GapContent,"replace(int position, int rmSize, Object addItems, int addSize)",protected void,Replace the given logical position in the storage with the given new items.
GapContent,resetMarksAtZero(),protected void,Resets all the marks that have an offset of 0 to have an index of zero as well.
GapContent,shiftEnd(int newSize),protected void,"Make the gap bigger, moving any necessary data and updating the appropriate marks"
GapContent,shiftGap(int newGapStart),protected void,"Move the start of the gap to a new location, without changing the size of the gap."
GapContent,shiftGapEndUp(int newGapEnd),protected void,Adjust the gap end upward.
GapContent,shiftGapStartDown(int newGapStart),protected void,Adjust the gap end downward.
GapContent,"updateUndoPositions(Vector positions, int offset, int length)",protected void,Resets the location for all the UndoPosRef instances in positions.
GlyphView,"breakView(int axis, int p0, float pos, float len)",View,Breaks this view on the given axis at the given length.
GlyphView,"changedUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
GlyphView,checkPainter(),protected void,Check to see that a glyph painter exists.
GlyphView,clone(),protected Object,Creates a shallow copy.
GlyphView,"createFragment(int p0, int p1)",View,Creates a view that represents a portion of the element.
GlyphView,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
GlyphView,getBackground(),Color,Fetch the background color to use to render the glyphs.
GlyphView,"getBreakWeight(int axis, float pos, float len)",int,Determines how attractive a break opportunity in this view is.
GlyphView,getEndOffset(),int,Fetches the portion of the model that this view is responsible for.
GlyphView,getFont(),Font,Fetch the font that the glyphs should be based upon.
GlyphView,getForeground(),Color,Fetch the foreground color to use to render the glyphs.
GlyphView,getGlyphPainter(),GlyphView.GlyphPainter,Fetch the currently installed glyph painter.
GlyphView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
GlyphView,"getNextVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",int,Provides a way to determine the next visually represented model location that one might place a caret.
GlyphView,"getPartialSpan(int p0, int p1)",float,Determines the span along the same axis as tab expansion for a portion of the view.
GlyphView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
GlyphView,getStartOffset(),int,Fetches the portion of the model that this view is responsible for.
GlyphView,"getTabbedSpan(float x, TabExpander e)",float,Determines the desired span when using the given tab expansion implementation.
GlyphView,getTabExpander(),TabExpander,Fetch the TabExpander to use if tabs are present in this view.
GlyphView,"getText(int p0, int p1)",Segment,Fetch a reference to the text that occupies the given range.
GlyphView,"insertUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
GlyphView,isStrikeThrough(),boolean,Determine if the glyphs should have a strikethrough line.
GlyphView,isSubscript(),boolean,Determine if the glyphs should be rendered as superscript.
GlyphView,isSuperscript(),boolean,Determine if the glyphs should be rendered as subscript.
GlyphView,isUnderline(),boolean,Determine if the glyphs should be underlined.
GlyphView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
GlyphView,"paint(Graphics g, Shape a)",void,Renders a portion of a text style run.
GlyphView,"removeUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
GlyphView,setGlyphPainter(GlyphView.GlyphPainter p),void,Sets the painter to use for rendering glyphs.
GlyphView,"viewToModel(float x, float y, Shape a, Position.Bias[] biasReturn)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
GlyphView.GlyphPainter,getAscent(GlyphView v),abstract float,NULL
GlyphView.GlyphPainter,"getBoundedPosition(GlyphView v, int p0, float x, float len)",abstract int,Determines the model location that represents the maximum advance that fits within the given span.
GlyphView.GlyphPainter,getDescent(GlyphView v),abstract float,NULL
GlyphView.GlyphPainter,getHeight(GlyphView v),abstract float,NULL
GlyphView.GlyphPainter,"getNextVisualPositionFrom(GlyphView v, int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",int,Provides a way to determine the next visually represented model location that one might place a caret.
GlyphView.GlyphPainter,"getPainter(GlyphView v, int p0, int p1)",GlyphView.GlyphPainter,Create a painter to use for the given GlyphView.
GlyphView.GlyphPainter,"getSpan(GlyphView v, int p0, int p1, TabExpander e, float x)",abstract float,Determine the span the glyphs given a start location (for tab expansion).
GlyphView.GlyphPainter,"modelToView(GlyphView v, int pos, Position.Bias bias, Shape a)",abstract Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
GlyphView.GlyphPainter,"paint(GlyphView v, Graphics g, Shape a, int p0, int p1)",abstract void,Paint the glyphs representing the given range.
GlyphView.GlyphPainter,"viewToModel(GlyphView v, float x, float y, Shape a, Position.Bias[] biasReturn)",abstract int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
IconView,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
IconView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
IconView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
IconView,"paint(Graphics g, Shape a)",void,Paints the icon.
IconView,"viewToModel(float x, float y, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
InternationalFormatter,clone(),Object,Creates a copy of the DefaultFormatter.
InternationalFormatter,getActions(),protected Action[],"If getSupportsIncrement returns true, this returns two Actions suitable for incrementing/decrementing the value."
InternationalFormatter,getFields(int offset),Format.Field[],Returns the Format.Field constants associated with the text at offset.
InternationalFormatter,getFormat(),Format,Returns the format that dictates the legal values that can be edited and displayed.
InternationalFormatter,getMaximum(),Comparable,Returns the maximum permissible value.
InternationalFormatter,getMinimum(),Comparable,Returns the minimum permissible value.
InternationalFormatter,install(JFormattedTextField ftf),void,Installs the DefaultFormatter onto a particular JFormattedTextField.
InternationalFormatter,setFormat(Format format),void,Sets the format that dictates the legal values that can be edited and displayed.
InternationalFormatter,setMaximum(Comparable max),void,Sets the maximum permissible value.
InternationalFormatter,setMinimum(Comparable minimum),void,Sets the minimum permissible value.
InternationalFormatter,stringToValue(String text),Object,Returns the Object representation of the String text.
InternationalFormatter,valueToString(Object value),String,Returns a String representation of the Object value.
JTextComponent,addCaretListener(CaretListener listener),void,Adds a caret listener for notification of any changes to the caret.
JTextComponent,addInputMethodListener(InputMethodListener l),void,Adds the specified input method listener to receive input method events from this component.
JTextComponent,"addKeymap(String nm, Keymap parent)",static Keymap,Adds a new keymap into the keymap hierarchy.
JTextComponent,copy(),void,"Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model."
JTextComponent,cut(),void,"Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model."
JTextComponent,fireCaretUpdate(CaretEvent e),protected void,Notifies all listeners that have registered interest for notification on this event type.
JTextComponent,getAccessibleContext(),AccessibleContext,Gets the AccessibleContext associated with this JTextComponent.
JTextComponent,getActions(),Action[],Fetches the command list for the editor.
JTextComponent,getCaret(),Caret,Fetches the caret that allows text-oriented navigation over the view.
JTextComponent,getCaretColor(),Color,Fetches the current color used to render the caret.
JTextComponent,getCaretListeners(),CaretListener[],Returns an array of all the caret listeners registered on this text component.
JTextComponent,getCaretPosition(),int,Returns the position of the text insertion caret for the text component.
JTextComponent,getDisabledTextColor(),Color,Fetches the current color used to render the disabled text.
JTextComponent,getDocument(),Document,Fetches the model associated with the editor.
JTextComponent,getDragEnabled(),boolean,Returns whether or not automatic drag handling is enabled.
JTextComponent,getDropLocation(),JTextComponent.DropLocation,"Returns the location that this component should visually indicate as the drop location during a DnD operation over the component, or null if no location is to currently be shown."
JTextComponent,getDropMode(),DropMode,Returns the drop mode for this component.
JTextComponent,getFocusAccelerator(),char,Returns the key accelerator that will cause the receiving text component to get the focus.
JTextComponent,getHighlighter(),Highlighter,Fetches the object responsible for making highlights.
JTextComponent,getInputMethodRequests(),InputMethodRequests,Gets the input method request handler which supports requests from input methods for this component.
JTextComponent,getKeymap(),Keymap,Fetches the keymap currently active in this text component.
JTextComponent,getKeymap(String nm),static Keymap,Fetches a named keymap previously added to the document.
JTextComponent,getMargin(),Insets,Returns the margin between the text component's border and its text.
JTextComponent,getNavigationFilter(),NavigationFilter,Returns the NavigationFilter.
JTextComponent,getPreferredScrollableViewportSize(),Dimension,Returns the preferred size of the viewport for a view component.
JTextComponent,"getPrintable(MessageFormat headerFormat, MessageFormat footerFormat)",Printable,Returns a Printable to use for printing the content of this JTextComponent.
JTextComponent,"getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction)",int,"Components that display logical rows or columns should compute the scroll increment that will completely expose one block of rows or columns, depending on the value of orientation."
JTextComponent,getScrollableTracksViewportHeight(),boolean,Returns true if a viewport should always force the height of this Scrollable to match the height of the viewport.
JTextComponent,getScrollableTracksViewportWidth(),boolean,Returns true if a viewport should always force the width of this Scrollable to match the width of the viewport.
JTextComponent,"getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction)",int,"Components that display logical rows or columns should compute the scroll increment that will completely expose one new row or column, depending on the value of orientation."
JTextComponent,getSelectedText(),String,Returns the selected text contained in this TextComponent.
JTextComponent,getSelectedTextColor(),Color,Fetches the current color used to render the selected text.
JTextComponent,getSelectionColor(),Color,Fetches the current color used to render the selection.
JTextComponent,getSelectionEnd(),int,Returns the selected text's end position.
JTextComponent,getSelectionStart(),int,Returns the selected text's start position.
JTextComponent,getText(),String,Returns the text contained in this TextComponent.
JTextComponent,"getText(int offs, int len)",String,Fetches a portion of the text represented by the component.
JTextComponent,getToolTipText(MouseEvent event),String,Returns the string to be used as the tooltip for event.
JTextComponent,getUI(),TextUI,Fetches the user-interface factory for this text-oriented editor.
JTextComponent,isEditable(),boolean,Returns the boolean indicating whether this TextComponent is editable or not.
JTextComponent,"loadKeymap(Keymap map, JTextComponent.KeyBinding[] bindings, Action[] actions)",static void,Loads a keymap with a bunch of bindings.
JTextComponent,modelToView(int pos),Rectangle,Converts the given location in the model to a place in the view coordinate system.
JTextComponent,moveCaretPosition(int pos),void,"Moves the caret to a new position, leaving behind a mark defined by the last time setCaretPosition was called."
JTextComponent,paramString(),protected String,Returns a string representation of this JTextComponent.
JTextComponent,paste(),void,Transfers the contents of the system clipboard into the associated text model.
JTextComponent,print(),boolean,"A convenience print method that displays a print dialog, and then prints this JTextComponent in interactive mode with no header or footer text."
JTextComponent,"print(MessageFormat headerFormat, MessageFormat footerFormat)",boolean,"A convenience print method that displays a print dialog, and then prints this JTextComponent in interactive mode with the specified header and footer text."
JTextComponent,"print(MessageFormat headerFormat, MessageFormat footerFormat, boolean showPrintDialog, PrintService service, PrintRequestAttributeSet attributes, boolean interactive)",boolean,Prints the content of this JTextComponent.
JTextComponent,processInputMethodEvent(InputMethodEvent e),protected void,Processes input method events occurring on this component by dispatching them to any registered InputMethodListener objects.
JTextComponent,"read(Reader in, Object desc)",void,Initializes from a stream.
JTextComponent,removeCaretListener(CaretListener listener),void,Removes a caret listener.
JTextComponent,removeKeymap(String nm),static Keymap,Removes a named keymap previously added to the document.
JTextComponent,removeNotify(),void,Notifies this component that it no longer has a parent component.
JTextComponent,replaceSelection(String content),void,Replaces the currently selected content with new content represented by the given string.
JTextComponent,restoreComposedText(),protected void,Restores composed text previously saved by saveComposedText.
JTextComponent,saveComposedText(int pos),protected boolean,Saves composed text around the specified position.
JTextComponent,"select(int selectionStart, int selectionEnd)",void,Selects the text between the specified start and end positions.
JTextComponent,selectAll(),void,Selects all the text in the TextComponent.
JTextComponent,setCaret(Caret c),void,Sets the caret to be used.
JTextComponent,setCaretColor(Color c),void,Sets the current color used to render the caret.
JTextComponent,setCaretPosition(int position),void,Sets the position of the text insertion caret for the TextComponent.
JTextComponent,setComponentOrientation(ComponentOrientation o),void,Sets the language-sensitive orientation that is to be used to order the elements or text within this component.
JTextComponent,setDisabledTextColor(Color c),void,Sets the current color used to render the disabled text.
JTextComponent,setDocument(Document doc),void,Associates the editor with a text document.
JTextComponent,setDragEnabled(boolean b),void,Turns on or off automatic drag handling.
JTextComponent,setDropMode(DropMode dropMode),void,Sets the drop mode for this component.
JTextComponent,setEditable(boolean b),void,Sets the specified boolean to indicate whether or not this TextComponent should be editable.
JTextComponent,setFocusAccelerator(char aKey),void,Sets the key accelerator that will cause the receiving text component to get the focus.
JTextComponent,setHighlighter(Highlighter h),void,Sets the highlighter to be used.
JTextComponent,setKeymap(Keymap map),void,Sets the keymap to use for binding events to actions.
JTextComponent,setMargin(Insets m),void,Sets margin space between the text component's border and its text.
JTextComponent,setNavigationFilter(NavigationFilter filter),void,Sets the NavigationFilter.
JTextComponent,setSelectedTextColor(Color c),void,Sets the current color used to render the selected text.
JTextComponent,setSelectionColor(Color c),void,Sets the current color used to render the selection.
JTextComponent,setSelectionEnd(int selectionEnd),void,Sets the selection end to the specified position.
JTextComponent,setSelectionStart(int selectionStart),void,Sets the selection start to the specified position.
JTextComponent,setText(String t),void,Sets the text of this TextComponent to the specified text.
JTextComponent,setUI(TextUI ui),void,Sets the user-interface factory for this text-oriented editor.
JTextComponent,updateUI(),void,Reloads the pluggable UI.
JTextComponent,viewToModel(Point pt),int,Converts the given place in the view coordinate system to the nearest representative location in the model.
JTextComponent,write(Writer out),void,Stores the contents of the model into the given stream.
JTextComponent.DropLocation,getBias(),Position.Bias,Returns the bias for the drop index.
JTextComponent.DropLocation,getIndex(),int,Returns the index where dropped data should be inserted into the associated component.
JTextComponent.DropLocation,toString(),String,Returns a string representation of this drop location.
LabelView,"changedUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
LabelView,getBackground(),Color,Fetches the background color to use to render the glyphs.
LabelView,getFont(),Font,Fetches the font that the glyphs should be based upon.
LabelView,getFontMetrics(),protected FontMetrics,Deprecated. FontMetrics are not used for glyph rendering when running in the JDK.
LabelView,getForeground(),Color,Fetches the foreground color to use to render the glyphs.
LabelView,isStrikeThrough(),boolean,Determines if the glyphs should have a strikethrough line.
LabelView,isSubscript(),boolean,Determines if the glyphs should be rendered as superscript.
LabelView,isSuperscript(),boolean,Determines if the glyphs should be rendered as subscript.
LabelView,isUnderline(),boolean,Determines if the glyphs should be underlined.
LabelView,setBackground(Color bg),protected void,Sets the background color for the view.
LabelView,setPropertiesFromAttributes(),protected void,Sets the cached properties from the attributes.
LabelView,setStrikeThrough(boolean s),protected void,Sets whether or not the view has a strike/line through it.
LabelView,setSubscript(boolean s),protected void,Sets whether or not the view represents a subscript.
LabelView,setSuperscript(boolean s),protected void,Sets whether or not the view represents a superscript.
LabelView,setUnderline(boolean u),protected void,Sets whether or not the view is underlined.
LayeredHighlighter,"paintLayeredHighlights(Graphics g, int p0, int p1, Shape viewBounds, JTextComponent editor, View view)",abstract void,When leaf Views (such as LabelView) are rendering they should call into this method.
LayeredHighlighter.LayerPainter,"paintLayer(Graphics g, int p0, int p1, Shape viewBounds, JTextComponent editor, View view)",abstract Shape,NULL
LayoutQueue,addTask(Runnable task),void,Add a task that is not needed immediately because the results are not believed to be visible.
LayoutQueue,getDefaultQueue(),static LayoutQueue,Fetch the default layout queue.
LayoutQueue,setDefaultQueue(LayoutQueue q),static void,Set the default layout queue.
LayoutQueue,waitForWork(),protected Runnable,Used by the worker thread to get a new task to execute
MaskFormatter,getInvalidCharacters(),String,Returns the characters that are not valid for input.
MaskFormatter,getMask(),String,Returns the formatting mask.
MaskFormatter,getPlaceholder(),String,Returns the String to use if the value does not completely fill in the mask.
MaskFormatter,getPlaceholderCharacter(),char,"Returns the character to use in place of characters that are not present in the value, ie the user must fill them in."
MaskFormatter,getValidCharacters(),String,Returns the valid characters that can be input.
MaskFormatter,getValueContainsLiteralCharacters(),boolean,Returns true if stringToValue should return literal characters in the mask.
MaskFormatter,install(JFormattedTextField ftf),void,Installs the DefaultFormatter onto a particular JFormattedTextField.
MaskFormatter,setInvalidCharacters(String invalidCharacters),void,Allows for further restricting of the characters that can be input.
MaskFormatter,setMask(String mask),void,Sets the mask dictating the legal characters.
MaskFormatter,setPlaceholder(String placeholder),void,Sets the string to use if the value does not completely fill in the mask.
MaskFormatter,setPlaceholderCharacter(char placeholder),void,"Sets the character to use in place of characters that are not present in the value, ie the user must fill them in."
MaskFormatter,setValidCharacters(String validCharacters),void,Allows for further restricting of the characters that can be input.
MaskFormatter,setValueContainsLiteralCharacters(boolean containsLiteralChars),void,"If true, the returned value and set value will also contain the literal characters in mask."
MaskFormatter,stringToValue(String value),Object,"Parses the text, returning the appropriate Object representation of the String value."
MaskFormatter,valueToString(Object value),String,Returns a String representation of the Object value based on the mask.
NavigationFilter,"getNextVisualPositionFrom(JTextComponent text, int pos, Position.Bias bias, int direction, Position.Bias[] biasRet)",int,Returns the next visual position to place the caret at from an existing position.
NavigationFilter,"moveDot(NavigationFilter.FilterBypass fb, int dot, Position.Bias bias)",void,Invoked prior to the Caret moving the dot.
NavigationFilter,"setDot(NavigationFilter.FilterBypass fb, int dot, Position.Bias bias)",void,Invoked prior to the Caret setting the dot.
NavigationFilter.FilterBypass,getCaret(),abstract Caret,Returns the Caret that is changing.
NavigationFilter.FilterBypass,"moveDot(int dot, Position.Bias bias)",abstract void,"Moves the caret location, bypassing the NavigationFilter."
NavigationFilter.FilterBypass,"setDot(int dot, Position.Bias bias)",abstract void,"Sets the caret location, bypassing the NavigationFilter."
NumberFormatter,setFormat(Format format),void,Sets the format that dictates the legal values that can be edited and displayed.
ParagraphView,"breakView(int axis, float len, Shape a)",View,Breaks this view on the given axis at the given length.
ParagraphView,"calculateMinorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculate the needs for the paragraph along the minor axis.
ParagraphView,"changedUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
ParagraphView,createRow(),protected View,Create a View that should be used to hold a a row's worth of children in a flow.
ParagraphView,"findOffsetToCharactersInString(char[] string, int start)",protected int,"Finds the next character in the document with a character in string, starting at offset start."
ParagraphView,"flipEastAndWestAtEnds(int position, Position.Bias bias)",protected boolean,Determines in which direction the next view lays.
ParagraphView,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
ParagraphView,"getBreakWeight(int axis, float len)",int,Gets the break weight for a given location.
ParagraphView,"getClosestPositionTo(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet, int rowIndex, int x)",protected int,Returns the closest model position to x.
ParagraphView,getFlowSpan(int index),int,Fetches the constraining span to flow against for the given child index.
ParagraphView,getFlowStart(int index),int,Fetches the location along the flow axis that the flow span will start at.
ParagraphView,getLayoutView(int index),protected View,Returns the view at a given index.
ParagraphView,getLayoutViewCount(),protected int,Returns the number of views that this view is responsible for.
ParagraphView,"getNextNorthSouthVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",protected int,"Returns the next visual position for the cursor, in either the east or west direction."
ParagraphView,"getPartialSize(int startOffset, int endOffset)",protected float,Returns the size used by the views between startOffset and endOffset.
ParagraphView,getTabBase(),protected float,Returns where the tabs are calculated from.
ParagraphView,getTabSet(),protected TabSet,Gets the Tabset to be used in calculating tabs.
ParagraphView,"nextTabStop(float x, int tabOffset)",float,Returns the next tab stop position given a reference position.
ParagraphView,"paint(Graphics g, Shape a)",void,Renders using the given rendering surface and area on that surface.
ParagraphView,setFirstLineIndent(float fi),protected void,Sets the indent on the first line.
ParagraphView,setJustification(int j),protected void,Sets the type of justification.
ParagraphView,setLineSpacing(float ls),protected void,Sets the line spacing.
ParagraphView,setPropertiesFromAttributes(),protected void,Set the cached properties from the attributes.
PasswordView,"drawEchoCharacter(Graphics g, int x, int y, char c)",protected int,"Renders the echo character, or whatever graphic should be used to display the password characters."
PasswordView,"drawSelectedText(Graphics g, int x, int y, int p0, int p1)",protected int,Renders the given range in the model as selected text.
PasswordView,"drawUnselectedText(Graphics g, int x, int y, int p0, int p1)",protected int,Renders the given range in the model as normal unselected text.
PasswordView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
PasswordView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
PasswordView,"viewToModel(float fx, float fy, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
PlainDocument,createDefaultRoot(),protected AbstractDocument.AbstractElement,Creates the root element to be used to represent the default document structure.
PlainDocument,getDefaultRootElement(),Element,Gets the default root element for the document model.
PlainDocument,getParagraphElement(int pos),Element,Get the paragraph element containing the given position.
PlainDocument,"insertString(int offs, String str, AttributeSet a)",void,Inserts some content into the document.
PlainDocument,"insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)",protected void,Updates document structure as a result of text insertion.
PlainDocument,removeUpdate(AbstractDocument.DefaultDocumentEvent chng),protected void,Updates any document structure as a result of text removal.
PlainView,"changedUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
PlainView,"damageLineRange(int line0, int line1, Shape a, Component host)",protected void,Repaint the given line range.
PlainView,"drawLine(int lineIndex, Graphics g, int x, int y)",protected void,"Renders a line of text, suppressing whitespace at the end and expanding any tabs."
PlainView,"drawSelectedText(Graphics g, int x, int y, int p0, int p1)",protected int,Renders the given range in the model as selected text.
PlainView,"drawUnselectedText(Graphics g, int x, int y, int p0, int p1)",protected int,Renders the given range in the model as normal unselected text.
PlainView,getLineBuffer(),protected Segment,Gives access to a buffer that can be used to fetch text from the associated document.
PlainView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
PlainView,getTabSize(),protected int,"Returns the tab size set for the document, defaulting to 8."
PlainView,"insertUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
PlainView,"lineToRect(Shape a, int line)",protected Rectangle,Determine the rectangle that represents the given line.
PlainView,"modelToView(int pos, Shape a, Position.Bias b)",Shape,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.
PlainView,"nextTabStop(float x, int tabOffset)",float,Returns the next tab stop position after a given reference position.
PlainView,"paint(Graphics g, Shape a)",void,Renders using the given rendering surface and area on that surface.
PlainView,"removeUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
PlainView,"setSize(float width, float height)",void,Sets the size of the view.
PlainView,"updateDamage(DocumentEvent changes, Shape a, ViewFactory f)",protected void,Repaint the region of change covered by the given document event.
PlainView,updateMetrics(),protected void,Checks to see if the font metrics and longest line are up-to-date.
PlainView,"viewToModel(float fx, float fy, Shape a, Position.Bias[] bias)",int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
Position.Bias,toString(),String,string representation
Segment,charAt(int index),char,Returns the char value at the specified index.
Segment,clone(),Object,Creates a shallow copy.
Segment,current(),char,Gets the character at the current position (as returned by getIndex()).
Segment,first(),char,Sets the position to getBeginIndex() and returns the character at that position.
Segment,getBeginIndex(),int,Returns the start index of the text.
Segment,getEndIndex(),int,Returns the end index of the text.
Segment,getIndex(),int,Returns the current index.
Segment,isPartialReturn(),boolean,Flag to indicate that partial returns are valid.
Segment,last(),char,Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty) and returns the character at that position.
Segment,length(),int,Returns the length of this character sequence.
Segment,next(),char,Increments the iterator's index by one and returns the character at the new index.
Segment,previous(),char,Decrements the iterator's index by one and returns the character at the new index.
Segment,setIndex(int position),char,Sets the position to the specified position in the text and returns that character.
Segment,setPartialReturn(boolean p),void,Flag to indicate that partial returns are valid.
Segment,"subSequence(int start, int end)",CharSequence,Returns a CharSequence that is a subsequence of this sequence.
Segment,toString(),String,Converts a segment into a String.
SimpleAttributeSet,"addAttribute(Object name, Object value)",void,Adds an attribute to the list.
SimpleAttributeSet,addAttributes(AttributeSet attributes),void,Adds a set of attributes to the list.
SimpleAttributeSet,clone(),Object,Clones a set of attributes.
SimpleAttributeSet,"containsAttribute(Object name, Object value)",boolean,Checks whether the attribute list contains a specified attribute name/value pair.
SimpleAttributeSet,containsAttributes(AttributeSet attributes),boolean,Checks whether the attribute list contains all the specified name/value pairs.
SimpleAttributeSet,copyAttributes(),AttributeSet,Makes a copy of the attributes.
SimpleAttributeSet,equals(Object obj),boolean,Compares this object to the specified object.
SimpleAttributeSet,getAttribute(Object name),Object,Gets the value of an attribute.
SimpleAttributeSet,getAttributeCount(),int,Gets a count of the number of attributes.
SimpleAttributeSet,getAttributeNames(),Enumeration<?>,Gets the names of the attributes in the set.
SimpleAttributeSet,getResolveParent(),AttributeSet,Gets the resolving parent.
SimpleAttributeSet,hashCode(),int,Returns a hashcode for this set of attributes.
SimpleAttributeSet,isDefined(Object attrName),boolean,Tells whether a given attribute is defined.
SimpleAttributeSet,isEmpty(),boolean,Checks whether the set of attributes is empty.
SimpleAttributeSet,isEqual(AttributeSet attr),boolean,Compares two attribute sets.
SimpleAttributeSet,removeAttribute(Object name),void,Removes an attribute from the list.
SimpleAttributeSet,removeAttributes(AttributeSet attributes),void,Removes a set of attributes from the list.
SimpleAttributeSet,removeAttributes(Enumeration<?> names),void,Removes a set of attributes from the list.
SimpleAttributeSet,setResolveParent(AttributeSet parent),void,Sets the resolving parent.
SimpleAttributeSet,toString(),String,Converts the attribute set to a String.
StringContent,createPosition(int offset),Position,Creates a position within the content that will track change as the content is mutated.
StringContent,"getChars(int where, int len, Segment chars)",void,Retrieves a portion of the content.
StringContent,"getPositionsInRange(Vector v, int offset, int length)",protected Vector,Returns a Vector containing instances of UndoPosRef for the Positions in the range offset to offset + length.
StringContent,"getString(int where, int len)",String,Retrieves a portion of the content.
StringContent,"insertString(int where, String str)",UndoableEdit,Inserts a string into the content.
StringContent,length(),int,Returns the length of the content.
StringContent,"remove(int where, int nitems)",UndoableEdit,Removes part of the content.
StringContent,updateUndoPositions(Vector positions),protected void,Resets the location for all the UndoPosRef instances in positions.
StyleConstants,getAlignment(AttributeSet a),static int,Gets the alignment setting.
StyleConstants,getBackground(AttributeSet a),static Color,Gets the background color setting from the attribute list.
StyleConstants,getBidiLevel(AttributeSet a),static int,Gets the BidiLevel setting.
StyleConstants,getComponent(AttributeSet a),static Component,Gets the component setting from the attribute list.
StyleConstants,getFirstLineIndent(AttributeSet a),static float,Gets the first line indent setting.
StyleConstants,getFontFamily(AttributeSet a),static String,Gets the font family setting from the attribute list.
StyleConstants,getFontSize(AttributeSet a),static int,Gets the font size setting from the attribute list.
StyleConstants,getForeground(AttributeSet a),static Color,Gets the foreground color setting from the attribute list.
StyleConstants,getIcon(AttributeSet a),static Icon,Gets the icon setting from the attribute list.
StyleConstants,getLeftIndent(AttributeSet a),static float,Gets the left indent setting.
StyleConstants,getLineSpacing(AttributeSet a),static float,Gets the line spacing setting.
StyleConstants,getRightIndent(AttributeSet a),static float,Gets the right indent setting.
StyleConstants,getSpaceAbove(AttributeSet a),static float,Gets the space above setting.
StyleConstants,getSpaceBelow(AttributeSet a),static float,Gets the space below setting.
StyleConstants,getTabSet(AttributeSet a),static TabSet,Gets the TabSet.
StyleConstants,isBold(AttributeSet a),static boolean,Checks whether the bold attribute is set.
StyleConstants,isItalic(AttributeSet a),static boolean,Checks whether the italic attribute is set.
StyleConstants,isStrikeThrough(AttributeSet a),static boolean,Checks whether the strikethrough attribute is set.
StyleConstants,isSubscript(AttributeSet a),static boolean,Checks whether the subscript attribute is set.
StyleConstants,isSuperscript(AttributeSet a),static boolean,Checks whether the superscript attribute is set.
StyleConstants,isUnderline(AttributeSet a),static boolean,Checks whether the underline attribute is set.
StyleConstants,"setAlignment(MutableAttributeSet a, int align)",static void,Sets alignment.
StyleConstants,"setBackground(MutableAttributeSet a, Color fg)",static void,Sets the background color.
StyleConstants,"setBidiLevel(MutableAttributeSet a, int o)",static void,Sets the BidiLevel.
StyleConstants,"setBold(MutableAttributeSet a, boolean b)",static void,Sets the bold attribute.
StyleConstants,"setComponent(MutableAttributeSet a, Component c)",static void,Sets the component attribute.
StyleConstants,"setFirstLineIndent(MutableAttributeSet a, float i)",static void,Sets the first line indent.
StyleConstants,"setFontFamily(MutableAttributeSet a, String fam)",static void,Sets the font attribute.
StyleConstants,"setFontSize(MutableAttributeSet a, int s)",static void,Sets the font size attribute.
StyleConstants,"setForeground(MutableAttributeSet a, Color fg)",static void,Sets the foreground color.
StyleConstants,"setIcon(MutableAttributeSet a, Icon c)",static void,Sets the icon attribute.
StyleConstants,"setItalic(MutableAttributeSet a, boolean b)",static void,Sets the italic attribute.
StyleConstants,"setLeftIndent(MutableAttributeSet a, float i)",static void,Sets left indent.
StyleConstants,"setLineSpacing(MutableAttributeSet a, float i)",static void,Sets line spacing.
StyleConstants,"setRightIndent(MutableAttributeSet a, float i)",static void,Sets right indent.
StyleConstants,"setSpaceAbove(MutableAttributeSet a, float i)",static void,Sets space above.
StyleConstants,"setSpaceBelow(MutableAttributeSet a, float i)",static void,Sets space below.
StyleConstants,"setStrikeThrough(MutableAttributeSet a, boolean b)",static void,Sets the strikethrough attribute.
StyleConstants,"setSubscript(MutableAttributeSet a, boolean b)",static void,Sets the subscript attribute.
StyleConstants,"setSuperscript(MutableAttributeSet a, boolean b)",static void,Sets the superscript attribute.
StyleConstants,"setTabSet(MutableAttributeSet a, TabSet tabs)",static void,Sets the TabSet.
StyleConstants,"setUnderline(MutableAttributeSet a, boolean b)",static void,Sets the underline attribute.
StyleConstants,toString(),String,Returns the string representation.
StyleContext,"addAttribute(AttributeSet old, Object name, Object value)",AttributeSet,"Adds an attribute to the given set, and returns the new representative set."
StyleContext,"addAttributes(AttributeSet old, AttributeSet attr)",AttributeSet,Adds a set of attributes to the element.
StyleContext,addChangeListener(ChangeListener l),void,Adds a listener to track when styles are added or removed.
StyleContext,"addStyle(String nm, Style parent)",Style,Adds a new style into the style hierarchy.
StyleContext,createLargeAttributeSet(AttributeSet a),protected MutableAttributeSet,Create a large set of attributes that should trade off space for time.
StyleContext,createSmallAttributeSet(AttributeSet a),protected StyleContext.SmallAttributeSet,Create a compact set of attributes that might be shared.
StyleContext,getBackground(AttributeSet attr),Color,Takes a set of attributes and turn it into a background color specification.
StyleContext,getChangeListeners(),ChangeListener[],Returns an array of all the ChangeListeners added to this StyleContext with addChangeListener().
StyleContext,getCompressionThreshold(),protected int,Returns the maximum number of key/value pairs to try and compress into unique/immutable sets.
StyleContext,getDefaultStyleContext(),static StyleContext,Returns default AttributeContext shared by all documents that don't bother to define/supply their own context.
StyleContext,getEmptySet(),AttributeSet,Fetches an empty AttributeSet.
StyleContext,getFont(AttributeSet attr),Font,Gets the font from an attribute set.
StyleContext,"getFont(String family, int style, int size)",Font,Gets a new font.
StyleContext,getFontMetrics(Font f),FontMetrics,Returns font metrics for a font.
StyleContext,getForeground(AttributeSet attr),Color,Takes a set of attributes and turn it into a foreground color specification.
StyleContext,getStaticAttribute(Object key),static Object,Returns the object previously registered with registerStaticAttributeKey.
StyleContext,getStaticAttributeKey(Object key),static Object,Returns the String that key will be registered with
StyleContext,getStyle(String nm),Style,Fetches a named style previously added to the document
StyleContext,getStyleNames(),Enumeration<?>,Fetches the names of the styles defined.
StyleContext,"readAttributes(ObjectInputStream in, MutableAttributeSet a)",void,Context-specific handling of reading in attributes
StyleContext,"readAttributeSet(ObjectInputStream in, MutableAttributeSet a)",static void,Reads a set of attributes from the given object input stream that have been previously written out with writeAttributeSet.
StyleContext,reclaim(AttributeSet a),void,Returns a set no longer needed by the MutableAttributeSet implementation.
StyleContext,registerStaticAttributeKey(Object key),static void,Registers an object as a static object that is being used as a key in attribute sets.
StyleContext,"removeAttribute(AttributeSet old, Object name)",AttributeSet,Removes an attribute from the set.
StyleContext,"removeAttributes(AttributeSet old, AttributeSet attrs)",AttributeSet,Removes a set of attributes for the element.
StyleContext,"removeAttributes(AttributeSet old, Enumeration<?> names)",AttributeSet,Removes a set of attributes for the element.
StyleContext,removeChangeListener(ChangeListener l),void,Removes a listener that was tracking styles being added or removed.
StyleContext,removeStyle(String nm),void,Removes a named style previously added to the document.
StyleContext,toString(),String,Converts a StyleContext to a String.
StyleContext,"writeAttributes(ObjectOutputStream out, AttributeSet a)",void,Context-specific handling of writing out attributes
StyleContext,"writeAttributeSet(ObjectOutputStream out, AttributeSet a)",static void,Writes a set of attributes to the given object stream for the purpose of serialization.
StyledEditorKit,clone(),Object,Creates a copy of the editor kit.
StyledEditorKit,createDefaultDocument(),Document,Creates an uninitialized text storage model that is appropriate for this type of editor.
StyledEditorKit,"createInputAttributes(Element element, MutableAttributeSet set)",protected void,Copies the key/values in elements AttributeSet into set.
StyledEditorKit,deinstall(JEditorPane c),void,Called when the kit is being removed from the JEditorPane.
StyledEditorKit,getActions(),Action[],Fetches the command list for the editor.
StyledEditorKit,getCharacterAttributeRun(),Element,Fetches the element representing the current run of character attributes for the caret.
StyledEditorKit,getInputAttributes(),MutableAttributeSet,Gets the input attributes for the pane.
StyledEditorKit,getViewFactory(),ViewFactory,Fetches a factory that is suitable for producing views of any models that are produced by this kit.
StyledEditorKit,install(JEditorPane c),void,Called when the kit is being installed into a JEditorPane.
StyledEditorKit.AlignmentAction,actionPerformed(ActionEvent e),void,Sets the alignment.
StyledEditorKit.BoldAction,actionPerformed(ActionEvent e),void,Toggles the bold attribute.
StyledEditorKit.FontFamilyAction,actionPerformed(ActionEvent e),void,Sets the font family.
StyledEditorKit.FontSizeAction,actionPerformed(ActionEvent e),void,Sets the font size.
StyledEditorKit.ForegroundAction,actionPerformed(ActionEvent e),void,Sets the foreground color.
StyledEditorKit.ItalicAction,actionPerformed(ActionEvent e),void,Toggles the italic attribute.
StyledEditorKit.StyledTextAction,getEditor(ActionEvent e),protected JEditorPane,Gets the target editor for an action.
StyledEditorKit.StyledTextAction,getStyledDocument(JEditorPane e),protected StyledDocument,Gets the document associated with an editor pane.
StyledEditorKit.StyledTextAction,getStyledEditorKit(JEditorPane e),protected StyledEditorKit,Gets the editor kit associated with an editor pane.
StyledEditorKit.StyledTextAction,"setCharacterAttributes(JEditorPane editor, AttributeSet attr, boolean replace)",protected void,Applies the given attributes to character content.
StyledEditorKit.StyledTextAction,"setParagraphAttributes(JEditorPane editor, AttributeSet attr, boolean replace)",protected void,Applies the given attributes to paragraphs.
StyledEditorKit.UnderlineAction,actionPerformed(ActionEvent e),void,Toggles the Underline attribute.
TableView,"calculateMinorAxisRequirements(int axis, SizeRequirements r)",protected SizeRequirements,Calculate the requirements for the minor axis.
TableView,createTableCell(Element elem),protected TableView.TableCell,Deprecated. Table cells can now be any arbitrary View implementation and should be produced by the ViewFactory rather than the table.
TableView,createTableRow(Element elem),protected TableView.TableRow,Creates a new table row.
TableView,"forwardUpdate(DocumentEvent.ElementChange ec, DocumentEvent e, Shape a, ViewFactory f)",protected void,Forwards the given DocumentEvent to the child views that need to be notified of the change to the model.
TableView,"getViewAtPosition(int pos, Rectangle a)",protected View,Fetches the child view that represents the given position in the model.
TableView,"layoutColumns(int targetSpan, int[] offsets, int[] spans, SizeRequirements[] reqs)",protected void,Lays out the columns to fit within the given target span.
TableView,"layoutMinorAxis(int targetSpan, int axis, int[] offsets, int[] spans)",protected void,Perform layout for the minor axis of the box (i.e.
TableView,"replace(int offset, int length, View[] views)",void,Change the child views.
TabSet,equals(Object o),boolean,Indicates whether this TabSet is equal to another one.
TabSet,getTab(int index),TabStop,Returns the TabStop at index index.
TabSet,getTabAfter(float location),TabStop,Returns the Tab instance after location.
TabSet,getTabCount(),int,Returns the number of Tab instances the receiver contains.
TabSet,getTabIndex(TabStop tab),int,NULL
TabSet,getTabIndexAfter(float location),int,Returns the index of the Tab to be used after location.
TabSet,hashCode(),int,Returns a hashcode for this set of TabStops.
TabSet,toString(),String,Returns the string representation of the set of tabs.
TabStop,equals(Object other),boolean,Returns true if the tabs are equal.
TabStop,getAlignment(),int,"Returns the alignment, as an integer, of the tab."
TabStop,getLeader(),int,Returns the leader of the tab.
TabStop,getPosition(),float,"Returns the position, as a float, of the tab."
TabStop,hashCode(),int,Returns the hashCode for the object.
TabStop,toString(),String,Returns a string representation of the object.
TextAction,"augmentList(Action[] list1, Action[] list2)",static Action[],Takes one list of commands and augments it with another list of commands.
TextAction,getFocusedComponent(),protected JTextComponent,Fetches the text component that currently has focus.
TextAction,getTextComponent(ActionEvent e),protected JTextComponent,Determines the component to use for the action.
Utilities,"drawTabbedText(Segment s, int x, int y, Graphics g, TabExpander e, int startOffset)",static int,"Draws the given text, expanding any tabs that are contained using the given tab expansion technique."
Utilities,"getBreakLocation(Segment s, FontMetrics metrics, int x0, int x, TabExpander e, int startOffset)",static int,Determine where to break the given text to fit within the given span.
Utilities,"getNextWord(JTextComponent c, int offs)",static int,Determines the start of the next word for the given location.
Utilities,"getParagraphElement(JTextComponent c, int offs)",static Element,Determines the element to use for a paragraph/line.
Utilities,"getPositionAbove(JTextComponent c, int offs, int x)",static int,Determines the position in the model that is closest to the given view location in the row above.
Utilities,"getPositionBelow(JTextComponent c, int offs, int x)",static int,Determines the position in the model that is closest to the given view location in the row below.
Utilities,"getPreviousWord(JTextComponent c, int offs)",static int,Determine the start of the prev word for the given location.
Utilities,"getRowEnd(JTextComponent c, int offs)",static int,Determines the ending row model position of the row that contains the specified model position.
Utilities,"getRowStart(JTextComponent c, int offs)",static int,Determines the starting row model position of the row that contains the specified model position.
Utilities,"getTabbedTextOffset(Segment s, FontMetrics metrics, int x0, int x, TabExpander e, int startOffset)",static int,Determines the relative offset into the given text that best represents the given span in the view coordinate system.
Utilities,"getTabbedTextOffset(Segment s, FontMetrics metrics, int x0, int x, TabExpander e, int startOffset, boolean round)",static int,NULL
Utilities,"getTabbedTextWidth(Segment s, FontMetrics metrics, int x, TabExpander e, int startOffset)",static int,Determines the width of the given segment of text taking tabs into consideration.
Utilities,"getWordEnd(JTextComponent c, int offs)",static int,Determines the end of a word for the given location.
Utilities,"getWordStart(JTextComponent c, int offs)",static int,Determines the start of a word for the given model location.
View,append(View v),void,Appends a single child view.
View,"breakView(int axis, int offset, float pos, float len)",View,Tries to break this view on the given axis.
View,"changedUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
View,"createFragment(int p0, int p1)",View,Creates a view that represents a portion of the element.
View,"forwardUpdate(DocumentEvent.ElementChange ec, DocumentEvent e, Shape a, ViewFactory f)",protected void,Forwards the given DocumentEvent to the child views that need to be notified of the change to the model.
View,"forwardUpdateToView(View v, DocumentEvent e, Shape a, ViewFactory f)",protected void,Forwards the DocumentEvent to the give child view.
View,getAlignment(int axis),float,Determines the desired alignment for this view along an axis.
View,getAttributes(),AttributeSet,Fetches the attributes to use when rendering.
View,"getBreakWeight(int axis, float pos, float len)",int,Determines how attractive a break opportunity in this view is.
View,"getChildAllocation(int index, Shape a)",Shape,Fetches the allocation for the given child view.
View,getContainer(),Container,Fetches the container hosting the view.
View,getDocument(),Document,Fetches the model associated with the view.
View,getElement(),Element,Fetches the structural portion of the subject that this view is mapped to.
View,getEndOffset(),int,Fetches the portion of the model for which this view is responsible.
View,getGraphics(),Graphics,Fetch a Graphics for rendering.
View,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
View,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
View,"getNextVisualPositionFrom(int pos, Position.Bias b, Shape a, int direction, Position.Bias[] biasRet)",int,Provides a way to determine the next visually represented model location at which one might place a caret.
View,getParent(),View,Returns the parent of the view.
View,getPreferredSpan(int axis),abstract float,Determines the preferred span for this view along an axis.
View,getResizeWeight(int axis),int,Determines the resizability of the view along the given axis.
View,getStartOffset(),int,Fetches the portion of the model for which this view is responsible.
View,"getToolTipText(float x, float y, Shape allocation)",String,Returns the tooltip text at the specified location.
View,getView(int n),View,Gets the nth child view.
View,getViewCount(),int,Returns the number of views in this view.
View,getViewFactory(),ViewFactory,Fetches the ViewFactory implementation that is feeding the view hierarchy.
View,"getViewIndex(float x, float y, Shape allocation)",int,Returns the child view index representing the given position in the view.
View,"getViewIndex(int pos, Position.Bias b)",int,Returns the child view index representing the given position in the model.
View,"insert(int offs, View v)",void,Inserts a single child view.
View,"insertUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
View,isVisible(),boolean,Returns a boolean that indicates whether the view is visible or not.
View,"modelToView(int p0, Position.Bias b0, int p1, Position.Bias b1, Shape a)",Shape,"Provides a mapping, for a given region, from the document model coordinate space to the view coordinate space."
View,"modelToView(int pos, Shape a)",Shape,Deprecated.
View,"modelToView(int pos, Shape a, Position.Bias b)",abstract Shape,"Provides a mapping, for a given character, from the document model coordinate space to the view coordinate space."
View,"paint(Graphics g, Shape allocation)",abstract void,Renders using the given rendering surface and area on that surface.
View,"preferenceChanged(View child, boolean width, boolean height)",void,Child views can call this on the parent to indicate that the preference has changed and should be reconsidered for layout.
View,remove(int i),void,Removes one of the children at the given position.
View,removeAll(),void,Removes all of the children.
View,"removeUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
View,"replace(int offset, int length, View[] views)",void,Replaces child views.
View,setParent(View parent),void,Establishes the parent view for this view.
View,"setSize(float width, float height)",void,Sets the size of the view.
View,"updateChildren(DocumentEvent.ElementChange ec, DocumentEvent e, ViewFactory f)",protected boolean,"Updates the child views in response to receiving notification that the model changed, and there is change record for the element this view is responsible for."
View,"updateLayout(DocumentEvent.ElementChange ec, DocumentEvent e, Shape a)",protected void,Updates the layout in response to receiving notification of change from the model.
View,"viewToModel(float x, float y, Shape a)",int,Deprecated.
View,"viewToModel(float x, float y, Shape a, Position.Bias[] biasReturn)",abstract int,Provides a mapping from the view coordinate space to the logical coordinate space of the model.
WrappedPlainView,"calculateBreakPosition(int p0, int p1)",protected int,This is called by the nested wrapped line views to determine the break location.
WrappedPlainView,"changedUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification from the document that attributes were changed in a location that this view is responsible for.
WrappedPlainView,"drawLine(int p0, int p1, Graphics g, int x, int y)",protected void,"Renders a line of text, suppressing whitespace at the end and expanding any tabs."
WrappedPlainView,"drawSelectedText(Graphics g, int x, int y, int p0, int p1)",protected int,Renders the given range in the model as selected text.
WrappedPlainView,"drawUnselectedText(Graphics g, int x, int y, int p0, int p1)",protected int,Renders the given range in the model as normal unselected text.
WrappedPlainView,getLineBuffer(),protected Segment,Gives access to a buffer that can be used to fetch text from the associated document.
WrappedPlainView,getMaximumSpan(int axis),float,Determines the maximum span for this view along an axis.
WrappedPlainView,getMinimumSpan(int axis),float,Determines the minimum span for this view along an axis.
WrappedPlainView,getPreferredSpan(int axis),float,Determines the preferred span for this view along an axis.
WrappedPlainView,getTabSize(),protected int,"Returns the tab size set for the document, defaulting to 8."
WrappedPlainView,"insertUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
WrappedPlainView,loadChildren(ViewFactory f),protected void,Loads all of the children to initialize the view.
WrappedPlainView,"nextTabStop(float x, int tabOffset)",float,Returns the next tab stop position after a given reference position.
WrappedPlainView,"paint(Graphics g, Shape a)",void,Renders using the given rendering surface and area on that surface.
WrappedPlainView,"removeUpdate(DocumentEvent e, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
WrappedPlainView,"setSize(float width, float height)",void,Sets the size of the view.
ZoneView,"createZone(int p0, int p1)",protected View,Create a view to represent a zone for the given range within the model (which should be within the range of this objects responsibility).
ZoneView,getMaximumZoneSize(),int,Get the current maximum zone size.
ZoneView,getMaxZonesLoaded(),int,Get the current setting of the number of zones allowed to be loaded at the same time.
ZoneView,getViewIndexAtPosition(int pos),protected int,Returns the child view index representing the given position in the model.
ZoneView,"insertUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was inserted into the document in a location that this view is responsible for.
ZoneView,isZoneLoaded(View zone),protected boolean,Determine if a zone is in the loaded state.
ZoneView,loadChildren(ViewFactory f),protected void,Loads all of the children to initialize the view.
ZoneView,"removeUpdate(DocumentEvent changes, Shape a, ViewFactory f)",void,Gives notification that something was removed from the document in a location that this view is responsible for.
ZoneView,setMaximumZoneSize(int size),void,Set the desired maximum zone size.
ZoneView,setMaxZonesLoaded(int mzl),void,Sets the current setting of the number of zones allowed to be loaded at the same time.
ZoneView,unloadZone(View zone),protected void,Unload a zone (Convert the zone to its memory saving state).
ZoneView,"updateChildren(DocumentEvent.ElementChange ec, DocumentEvent e, ViewFactory f)",protected boolean,"The superclass behavior will try to update the child views which is not desired in this case, since the children are zones and not directly effected by the changes to the associated element."
ZoneView,zoneWasLoaded(View zone),protected void,Called by a zone when it gets loaded.
