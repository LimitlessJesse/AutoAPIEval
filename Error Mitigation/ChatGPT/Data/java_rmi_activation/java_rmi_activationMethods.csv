ClassName,Method,Return Type,Description
Activatable,"exportObject(Remote obj, ActivationID id, int port)",static Remote,Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls.
Activatable,"exportObject(Remote obj, ActivationID id, int port, RMIClientSocketFactory csf, RMIServerSocketFactory ssf)",static Remote,Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls.
Activatable,"exportObject(Remote obj, String location, MarshalledObject<?> data, boolean restart, int port)",static ActivationID,"Registers an activation descriptor (with the specified location, data, and restart mode) for the specified object, and exports that object with the specified port."
Activatable,"exportObject(Remote obj, String location, MarshalledObject<?> data, boolean restart, int port, RMIClientSocketFactory csf, RMIServerSocketFactory ssf)",static ActivationID,"Registers an activation descriptor (with the specified location, data, and restart mode) for the specified object, and exports that object with the specified port, and the specified client and server socket factories."
Activatable,getID(),protected ActivationID,Returns the object's activation identifier.
Activatable,inactive(ActivationID id),static boolean,Informs the system that the object with the corresponding activation id is currently inactive.
Activatable,register(ActivationDesc desc),static Remote,Register an object descriptor for an activatable remote object so that is can be activated on demand.
Activatable,"unexportObject(Remote obj, boolean force)",static boolean,"Remove the remote object, obj, from the RMI runtime."
Activatable,unregister(ActivationID id),static void,Revokes previous registration for the activation descriptor associated with id.
ActivationDesc,equals(Object obj),boolean,Compares two activation descriptors for content equality.
ActivationDesc,getClassName(),String,Returns the class name for the object specified by this descriptor.
ActivationDesc,getData(),MarshalledObject<?>,"Returns a ""marshalled object"" containing intialization/activation data for the object specified by this descriptor."
ActivationDesc,getGroupID(),ActivationGroupID,Returns the group identifier for the object specified by this descriptor.
ActivationDesc,getLocation(),String,Returns the code location for the object specified by this descriptor.
ActivationDesc,getRestartMode(),boolean,"Returns the ""restart"" mode of the object associated with this activation descriptor."
ActivationDesc,hashCode(),int,Return the same hashCode for similar ActivationDescs.
ActivationGroup,"activeObject(ActivationID id, MarshalledObject<? extends Remote> mobj)",protected void,This protected method is necessary for subclasses to make the activeObject callback to the group's monitor.
ActivationGroup,"activeObject(ActivationID id, Remote obj)",abstract void,The group's activeObject method is called when an object is exported (either by Activatable object construction or an explicit call to Activatable.exportObject.
ActivationGroup,"createGroup(ActivationGroupID id, ActivationGroupDesc desc, long incarnation)",static ActivationGroup,Create and set the activation group for the current VM.
ActivationGroup,currentGroupID(),static ActivationGroupID,Returns the current activation group's identifier.
ActivationGroup,getSystem(),static ActivationSystem,Returns the activation system for the VM.
ActivationGroup,inactiveGroup(),protected void,This protected method is necessary for subclasses to make the inactiveGroup callback to the group's monitor.
ActivationGroup,inactiveObject(ActivationID id),boolean,The group's inactiveObject method is called indirectly via a call to the Activatable.inactive method.
ActivationGroup,setSystem(ActivationSystem system),static void,Set the activation system for the VM.
ActivationGroup_Stub,"newInstance(ActivationID id, ActivationDesc desc)",MarshalledObject,Stub method for ActivationGroup.newInstance.
ActivationGroupDesc,equals(Object obj),boolean,Compares two activation group descriptors for content equality.
ActivationGroupDesc,getClassName(),String,Returns the group's class name (possibly null).
ActivationGroupDesc,getCommandEnvironment(),ActivationGroupDesc.CommandEnvironment,Returns the group's command-environment control object.
ActivationGroupDesc,getData(),MarshalledObject<?>,Returns the group's initialization data.
ActivationGroupDesc,getLocation(),String,Returns the group's code location.
ActivationGroupDesc,getPropertyOverrides(),Properties,Returns the group's property-override list.
ActivationGroupDesc,hashCode(),int,Produce identical numbers for similar ActivationGroupDescs.
ActivationGroupDesc.CommandEnvironment,equals(Object obj),boolean,Compares two command environments for content equality.
ActivationGroupDesc.CommandEnvironment,getCommandOptions(),String[],Fetch the configured java command options.
ActivationGroupDesc.CommandEnvironment,getCommandPath(),String,Fetch the configured path-qualified java command name.
ActivationGroupDesc.CommandEnvironment,hashCode(),int,Return identical values for similar CommandEnvironments.
ActivationGroupID,equals(Object obj),boolean,Compares two group identifiers for content equality.
ActivationGroupID,getSystem(),ActivationSystem,Returns the group's activation system.
ActivationGroupID,hashCode(),int,Returns a hashcode for the group's identifier.
ActivationID,activate(boolean force),Remote,Activate the object for this id.
ActivationID,equals(Object obj),boolean,Compares two activation ids for content equality.
ActivationID,hashCode(),int,Returns a hashcode for the activation id.
