ClassName,Method,Return Type,Description
Attribute,equals(Object object),boolean,Compares the current Attribute Object with another Attribute Object.
Attribute,getName(),String,Returns a String containing the name of the attribute.
Attribute,getValue(),Object,Returns an Object that is the value of this attribute.
Attribute,hashCode(),int,Returns a hash code value for this attribute.
Attribute,toString(),String,Returns a String object representing this Attribute's value.
AttributeChangeNotification,getAttributeName(),String,Gets the name of the attribute which has changed.
AttributeChangeNotification,getAttributeType(),String,Gets the type of the attribute which has changed.
AttributeChangeNotification,getNewValue(),Object,Gets the new value of the attribute which has changed.
AttributeChangeNotification,getOldValue(),Object,Gets the old value of the attribute which has changed.
AttributeChangeNotificationFilter,disableAllAttributes(),void,Disables all the attribute names.
AttributeChangeNotificationFilter,disableAttribute(String name),void,Disables all the attribute change notifications the attribute name of which equals the specified attribute name to be sent to the listener.
AttributeChangeNotificationFilter,enableAttribute(String name),void,Enables all the attribute change notifications the attribute name of which equals the specified name to be sent to the listener.
AttributeChangeNotificationFilter,getEnabledAttributes(),Vector<String>,Gets all the enabled attribute names for this filter.
AttributeChangeNotificationFilter,isNotificationEnabled(Notification notification),boolean,Invoked before sending the specified notification to the listener.
AttributeList,add(Attribute object),void,Adds the Attribute specified as the last element of the list.
AttributeList,"add(int index, Attribute object)",void,Inserts the attribute specified as an element at the position specified.
AttributeList,"add(int index, Object element)",void,Inserts the specified element at the specified position in this list.
AttributeList,add(Object element),boolean,Appends the specified element to the end of this list.
AttributeList,addAll(AttributeList list),boolean,"Appends all the elements in the AttributeList specified to the end of the list, in the order in which they are returned by the Iterator of the AttributeList specified."
AttributeList,addAll(Collection<?> c),boolean,"Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator."
AttributeList,"addAll(int index, AttributeList list)",boolean,"Inserts all of the elements in the AttributeList specified into this list, starting at the specified position, in the order in which they are returned by the Iterator of the AttributeList specified."
AttributeList,"addAll(int index, Collection<?> c)",boolean,"Inserts all of the elements in the specified collection into this list, starting at the specified position."
AttributeList,asList(),List<Attribute>,Return a view of this list as a List<Attribute>.
AttributeList,"set(int index, Attribute object)",void,Sets the element at the position specified to be the attribute specified.
AttributeList,"set(int index, Object element)",Object,Replaces the element at the specified position in this list with the specified element.
AttributeValueExp,apply(ObjectName name),ValueExp,Applies the AttributeValueExp on an MBean.
AttributeValueExp,getAttribute(ObjectName name),protected Object,Return the value of the given attribute in the named MBean.
AttributeValueExp,getAttributeName(),String,Returns a string representation of the name of the attribute.
AttributeValueExp,setMBeanServer(MBeanServer s),void,Deprecated. This method has no effect. The MBean Server used to obtain an attribute value is QueryEval.getMBeanServer().
AttributeValueExp,toString(),String,Returns the string representing its value.
DefaultLoaderRepository,loadClass(String className),static Class<?>,Deprecated.
DefaultLoaderRepository,"loadClassWithout(ClassLoader loader, String className)",static Class<?>,Deprecated.
ImmutableDescriptor,clone(),Descriptor,Returns a descriptor which is equal to this descriptor.
ImmutableDescriptor,equals(Object o),boolean,Compares this descriptor to the given object.
ImmutableDescriptor,getFieldNames(),String[],Returns all the field names in the descriptor.
ImmutableDescriptor,getFields(),String[],Returns all of the fields contained in this descriptor as a string array.
ImmutableDescriptor,getFieldValue(String fieldName),Object,"Returns the value for a specific field name, or null if no value is present for that name."
ImmutableDescriptor,getFieldValues(String... fieldNames),Object[],Returns all the field values in the descriptor as an array of Objects.
ImmutableDescriptor,hashCode(),int,Returns the hash code value for this descriptor.
ImmutableDescriptor,isValid(),boolean,Returns true if all of the fields have legal values given their names.
ImmutableDescriptor,removeField(String fieldName),void,Removes a field from the descriptor.
ImmutableDescriptor,"setField(String fieldName, Object fieldValue)",void,This operation is unsupported since this class is immutable.
ImmutableDescriptor,"setFields(String[] fieldNames, Object[] fieldValues)",void,This operation is unsupported since this class is immutable.
ImmutableDescriptor,toString(),String,Returns a string representation of the object.
ImmutableDescriptor,union(Descriptor... descriptors),static ImmutableDescriptor,Return an ImmutableDescriptor whose contents are the union of the given descriptors.
JMX,isMXBeanInterface(Class<?> interfaceClass),static boolean,Test whether an interface is an MXBean interface.
JMX,"newMBeanProxy(MBeanServerConnection connection, ObjectName objectName, Class<T> interfaceClass)",static <T> T,Make a proxy for a Standard MBean in a local or remote MBean Server.
JMX,"newMBeanProxy(MBeanServerConnection connection, ObjectName objectName, Class<T> interfaceClass, boolean notificationEmitter)",static <T> T,Make a proxy for a Standard MBean in a local or remote MBean Server that may also support the methods of NotificationEmitter.
JMX,"newMXBeanProxy(MBeanServerConnection connection, ObjectName objectName, Class<T> interfaceClass)",static <T> T,Make a proxy for an MXBean in a local or remote MBean Server.
JMX,"newMXBeanProxy(MBeanServerConnection connection, ObjectName objectName, Class<T> interfaceClass, boolean notificationEmitter)",static <T> T,Make a proxy for an MXBean in a local or remote MBean Server that may also support the methods of NotificationEmitter.
MBeanAttributeInfo,clone(),Object,Returns a shallow clone of this instance.
MBeanAttributeInfo,equals(Object o),boolean,Compare this MBeanAttributeInfo to another.
MBeanAttributeInfo,getType(),String,Returns the class name of the attribute.
MBeanAttributeInfo,hashCode(),int,Returns a hash code value for the object.
MBeanAttributeInfo,isIs(),boolean,"Indicates if this attribute has an ""is"" getter."
MBeanAttributeInfo,isReadable(),boolean,Whether the value of the attribute can be read.
MBeanAttributeInfo,isWritable(),boolean,Whether new values can be written to the attribute.
MBeanAttributeInfo,toString(),String,Returns a string representation of the object.
MBeanConstructorInfo,clone(),Object,Returns a shallow clone of this instance.
MBeanConstructorInfo,equals(Object o),boolean,Compare this MBeanConstructorInfo to another.
MBeanConstructorInfo,getSignature(),MBeanParameterInfo[],Returns the list of parameters for this constructor.
MBeanConstructorInfo,hashCode(),int,Returns a hash code value for the object.
MBeanConstructorInfo,toString(),String,Returns a string representation of the object.
MBeanFeatureInfo,equals(Object o),boolean,Compare this MBeanFeatureInfo to another.
MBeanFeatureInfo,getDescription(),String,Returns the human-readable description of the feature.
MBeanFeatureInfo,getDescriptor(),Descriptor,Returns the descriptor for the feature.
MBeanFeatureInfo,getName(),String,Returns the name of the feature.
MBeanFeatureInfo,hashCode(),int,Returns a hash code value for the object.
MBeanInfo,clone(),Object,Returns a shallow clone of this instance.
MBeanInfo,equals(Object o),boolean,Compare this MBeanInfo to another.
MBeanInfo,getAttributes(),MBeanAttributeInfo[],Returns the list of attributes exposed for management.
MBeanInfo,getClassName(),String,Returns the name of the Java class of the MBean described by this MBeanInfo.
MBeanInfo,getConstructors(),MBeanConstructorInfo[],Returns the list of the public constructors of the MBean.
MBeanInfo,getDescription(),String,Returns a human readable description of the MBean.
MBeanInfo,getDescriptor(),Descriptor,Get the descriptor of this MBeanInfo.
MBeanInfo,getNotifications(),MBeanNotificationInfo[],Returns the list of the notifications emitted by the MBean.
MBeanInfo,getOperations(),MBeanOperationInfo[],Returns the list of operations of the MBean.
MBeanInfo,hashCode(),int,Returns a hash code value for the object.
MBeanInfo,toString(),String,Returns a string representation of the object.
MBeanNotificationInfo,clone(),Object,Returns a shallow clone of this instance.
MBeanNotificationInfo,equals(Object o),boolean,Compare this MBeanNotificationInfo to another.
MBeanNotificationInfo,getNotifTypes(),String[],Returns the array of strings (in dot notation) containing the notification types that the MBean may emit.
MBeanNotificationInfo,hashCode(),int,Returns a hash code value for the object.
MBeanNotificationInfo,toString(),String,Returns a string representation of the object.
MBeanOperationInfo,clone(),Object,Returns a shallow clone of this instance.
MBeanOperationInfo,equals(Object o),boolean,Compare this MBeanOperationInfo to another.
MBeanOperationInfo,getImpact(),int,"Returns the impact of the method, one of INFO, ACTION, ACTION_INFO, UNKNOWN."
MBeanOperationInfo,getReturnType(),String,Returns the type of the method's return value.
MBeanOperationInfo,getSignature(),MBeanParameterInfo[],Returns the list of parameters for this operation.
MBeanOperationInfo,hashCode(),int,Returns a hash code value for the object.
MBeanOperationInfo,toString(),String,Returns a string representation of the object.
MBeanParameterInfo,clone(),Object,Returns a shallow clone of this instance.
MBeanParameterInfo,equals(Object o),boolean,Compare this MBeanParameterInfo to another.
MBeanParameterInfo,getType(),String,Returns the type or class name of the data.
MBeanParameterInfo,hashCode(),int,Returns a hash code value for the object.
MBeanParameterInfo,toString(),String,Returns a string representation of the object.
MBeanPermission,equals(Object obj),boolean,Checks two MBeanPermission objects for equality.
MBeanPermission,getActions(),String,"Returns the ""canonical string representation"" of the actions."
MBeanPermission,hashCode(),int,Returns the hash code value for this object.
MBeanPermission,implies(Permission p),boolean,"Checks if this MBeanPermission object ""implies"" the specified permission."
MBeanServerBuilder,"newMBeanServer(String defaultDomain, MBeanServer outer, MBeanServerDelegate delegate)",MBeanServer,This method creates a new MBeanServer implementation object.
MBeanServerBuilder,newMBeanServerDelegate(),MBeanServerDelegate,This method creates a new MBeanServerDelegate for a new MBeanServer.
MBeanServerDelegate,"addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)",void,Adds a listener to this MBean.
MBeanServerDelegate,getImplementationName(),String,Returns the JMX implementation name (the name of this product).
MBeanServerDelegate,getImplementationVendor(),String,Returns the JMX implementation vendor (the vendor of this product).
MBeanServerDelegate,getImplementationVersion(),String,Returns the JMX implementation version (the version of this product).
MBeanServerDelegate,getMBeanServerId(),String,Returns the MBean server agent identity.
MBeanServerDelegate,getNotificationInfo(),MBeanNotificationInfo[],"Returns an array indicating, for each notification this MBean may send, the name of the Java class of the notification and the notification type."
MBeanServerDelegate,getSpecificationName(),String,Returns the full name of the JMX specification implemented by this product.
MBeanServerDelegate,getSpecificationVendor(),String,Returns the vendor of the JMX specification implemented by this product.
MBeanServerDelegate,getSpecificationVersion(),String,Returns the version of the JMX specification implemented by this product.
MBeanServerDelegate,removeNotificationListener(NotificationListener listener),void,Removes a listener from this MBean.
MBeanServerDelegate,"removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)",void,Removes a listener from this MBean.
MBeanServerDelegate,sendNotification(Notification notification),void,Enables the MBean server to send a notification.
MBeanServerFactory,createMBeanServer(),static MBeanServer,Return a new object implementing the MBeanServer interface with a standard default domain name.
MBeanServerFactory,createMBeanServer(String domain),static MBeanServer,Return a new object implementing the MBeanServer interface with the specified default domain name.
MBeanServerFactory,findMBeanServer(String agentId),static ArrayList<MBeanServer>,Return a list of registered MBeanServer objects.
MBeanServerFactory,getClassLoaderRepository(MBeanServer server),static ClassLoaderRepository,Return the ClassLoaderRepository used by the given MBeanServer.
MBeanServerFactory,newMBeanServer(),static MBeanServer,"Return a new object implementing the MBeanServer interface with a standard default domain name, without keeping an internal reference to this new object."
MBeanServerFactory,newMBeanServer(String domain),static MBeanServer,"Return a new object implementing the MBeanServer interface with the specified default domain name, without keeping an internal reference to this new object."
MBeanServerFactory,releaseMBeanServer(MBeanServer mbeanServer),static void,Remove internal MBeanServerFactory references to a created MBeanServer.
MBeanServerInvocationHandler,getMBeanServerConnection(),MBeanServerConnection,The MBean server connection through which the methods of a proxy using this handler are forwarded.
MBeanServerInvocationHandler,getObjectName(),ObjectName,The name of the MBean within the MBean server to which methods are forwarded.
MBeanServerInvocationHandler,"invoke(Object proxy, Method method, Object[] args)",Object,Processes a method invocation on a proxy instance and returns the result.
MBeanServerInvocationHandler,isMXBean(),boolean,"If true, the proxy is for an MXBean, and appropriate mappings are applied to method parameters and return values."
MBeanServerInvocationHandler,"newProxyInstance(MBeanServerConnection connection, ObjectName objectName, Class<T> interfaceClass, boolean notificationBroadcaster)",static <T> T,Return a proxy that implements the given interface by forwarding its methods through the given MBean server to the named MBean.
MBeanServerNotification,getMBeanName(),ObjectName,Returns the object name of the MBean that caused the notification.
MBeanServerNotification,toString(),String,Returns a String representation of this notification.
MBeanServerPermission,equals(Object obj),boolean,Checks two MBeanServerPermission objects for equality.
MBeanServerPermission,hashCode(),int,Returns the hash code value for this object.
MBeanServerPermission,implies(Permission p),boolean,"Checks if this MBeanServerPermission object ""implies"" the specified permission."
MBeanServerPermission,newPermissionCollection(),PermissionCollection,Returns a new PermissionCollection object for storing BasicPermission objects.
Notification,getMessage(),String,Get the notification message.
Notification,getSequenceNumber(),long,Get the notification sequence number.
Notification,getTimeStamp(),long,Get the notification timestamp.
Notification,getType(),String,Get the notification type.
Notification,getUserData(),Object,Get the user data.
Notification,setSequenceNumber(long sequenceNumber),void,Set the notification sequence number.
Notification,setSource(Object source),void,Sets the source.
Notification,setTimeStamp(long timeStamp),void,Set the notification timestamp.
Notification,setUserData(Object userData),void,Set the user data.
Notification,toString(),String,Returns a String representation of this notification.
NotificationBroadcasterSupport,"addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)",void,Adds a listener.
NotificationBroadcasterSupport,getNotificationInfo(),MBeanNotificationInfo[],"Returns an array indicating, for each notification this MBean may send, the name of the Java class of the notification and the notification type."
NotificationBroadcasterSupport,"handleNotification(NotificationListener listener, Notification notif, Object handback)",protected void,This method is called by sendNotification for each listener in order to send the notification to that listener.
NotificationBroadcasterSupport,removeNotificationListener(NotificationListener listener),void,Removes a listener from this MBean.
NotificationBroadcasterSupport,"removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)",void,Removes a listener from this MBean.
NotificationBroadcasterSupport,sendNotification(Notification notification),void,Sends a notification.
NotificationFilterSupport,disableAllTypes(),void,Disables all notification types.
NotificationFilterSupport,disableType(String prefix),void,Removes the given prefix from the prefix list.
NotificationFilterSupport,enableType(String prefix),void,Enables all the notifications the type of which starts with the specified prefix to be sent to the listener.
NotificationFilterSupport,getEnabledTypes(),Vector<String>,Gets all the enabled notification types for this filter.
NotificationFilterSupport,isNotificationEnabled(Notification notification),boolean,Invoked before sending the specified notification to the listener.
ObjectInstance,equals(Object object),boolean,Compares the current object instance with another object instance.
ObjectInstance,getClassName(),String,Returns the class part.
ObjectInstance,getObjectName(),ObjectName,Returns the object name part.
ObjectInstance,hashCode(),int,Returns a hash code value for the object.
ObjectInstance,toString(),String,Returns a string representing this ObjectInstance object.
ObjectName,apply(ObjectName name),boolean,"Test whether this ObjectName, which may be a pattern, matches another ObjectName."
ObjectName,compareTo(ObjectName name),int,Compares two ObjectName instances.
ObjectName,equals(Object object),boolean,Compares the current object name with another object name.
ObjectName,getCanonicalKeyPropertyListString(),String,"Returns a string representation of the list of key properties, in which the key properties are sorted in lexical order."
ObjectName,getCanonicalName(),String,"Returns the canonical form of the name; that is, a string representation where the properties are sorted in lexical order."
ObjectName,getDomain(),String,Returns the domain part.
ObjectName,getInstance(ObjectName name),static ObjectName,Return an instance of ObjectName that can be used anywhere the given object can be used.
ObjectName,getInstance(String name),static ObjectName,Return an instance of ObjectName that can be used anywhere an object obtained with new ObjectName(name) can be used.
ObjectName,"getInstance(String domain, Hashtable<String,String> table)",static ObjectName,"Return an instance of ObjectName that can be used anywhere an object obtained with new ObjectName(domain, table) can be used."
ObjectName,"getInstance(String domain, String key, String value)",static ObjectName,"Return an instance of ObjectName that can be used anywhere an object obtained with new ObjectName(domain, key, value) can be used."
ObjectName,getKeyProperty(String property),String,Obtains the value associated with a key in a key property.
ObjectName,getKeyPropertyList(),"Hashtable<String,String>",Returns the key properties as a Hashtable.
ObjectName,getKeyPropertyListString(),String,Returns a string representation of the list of key properties specified at creation time.
ObjectName,hashCode(),int,Returns a hash code for this object name.
ObjectName,isDomainPattern(),boolean,Checks whether the object name is a pattern on the domain part.
ObjectName,isPattern(),boolean,Checks whether the object name is a pattern.
ObjectName,isPropertyListPattern(),boolean,Checks whether the object name is a pattern on the key property list.
ObjectName,isPropertyPattern(),boolean,Checks whether the object name is a pattern on the key properties.
ObjectName,isPropertyValuePattern(),boolean,Checks whether the object name is a pattern on the value part of at least one of the key properties.
ObjectName,isPropertyValuePattern(String property),boolean,Checks whether the value associated with a key in a key property is a pattern.
ObjectName,quote(String s),static String,"Returns a quoted form of the given String, suitable for inclusion in an ObjectName."
ObjectName,setMBeanServer(MBeanServer mbs),void,Sets the MBean server on which the query is to be performed.
ObjectName,toString(),String,Returns a string representation of the object name.
ObjectName,unquote(String q),static String,Returns an unquoted form of the given String.
Query,"and(QueryExp q1, QueryExp q2)",static QueryExp,Returns a query expression that is the conjunction of two other query expressions.
Query,"anySubString(AttributeValueExp a, StringValueExp s)",static QueryExp,Returns a query expression that represents a matching constraint on a string argument.
Query,attr(String name),static AttributeValueExp,Returns a new attribute expression.
Query,"attr(String className, String name)",static AttributeValueExp,Returns a new qualified attribute expression.
Query,"between(ValueExp v1, ValueExp v2, ValueExp v3)",static QueryExp,Returns a query expression that represents the constraint that one value is between two other values.
Query,classattr(),static AttributeValueExp,Returns a new class attribute expression which can be used in any Query call that expects a ValueExp.
Query,"div(ValueExp value1, ValueExp value2)",static ValueExp,Returns a binary expression representing the quotient of two numeric values.
Query,"eq(ValueExp v1, ValueExp v2)",static QueryExp,Returns a query expression that represents an equality constraint on two values.
Query,"finalSubString(AttributeValueExp a, StringValueExp s)",static QueryExp,Returns a query expression that represents a matching constraint on a string argument.
Query,"geq(ValueExp v1, ValueExp v2)",static QueryExp,"Returns a query expression that represents a ""greater than or equal to"" constraint on two values."
Query,"gt(ValueExp v1, ValueExp v2)",static QueryExp,"Returns a query expression that represents a ""greater than"" constraint on two values."
Query,"in(ValueExp val, ValueExp[] valueList)",static QueryExp,Returns an expression constraining a value to be one of an explicit list.
Query,"initialSubString(AttributeValueExp a, StringValueExp s)",static QueryExp,Returns a query expression that represents a matching constraint on a string argument.
Query,isInstanceOf(StringValueExp classNameValue),static QueryExp,Returns a query expression that represents an inheritance constraint on an MBean class.
Query,"leq(ValueExp v1, ValueExp v2)",static QueryExp,"Returns a query expression that represents a ""less than or equal to"" constraint on two values."
Query,"lt(ValueExp v1, ValueExp v2)",static QueryExp,"Returns a query expression that represents a ""less than"" constraint on two values."
Query,"match(AttributeValueExp a, StringValueExp s)",static QueryExp,Returns a query expression that represents a matching constraint on a string argument.
Query,"minus(ValueExp value1, ValueExp value2)",static ValueExp,Returns a binary expression representing the difference between two numeric values.
Query,not(QueryExp queryExp),static QueryExp,Returns a constraint that is the negation of its argument.
Query,"or(QueryExp q1, QueryExp q2)",static QueryExp,Returns a query expression that is the disjunction of two other query expressions.
Query,"plus(ValueExp value1, ValueExp value2)",static ValueExp,"Returns a binary expression representing the sum of two numeric values, or the concatenation of two string values."
Query,"times(ValueExp value1, ValueExp value2)",static ValueExp,Returns a binary expression representing the product of two numeric values.
Query,value(boolean val),static ValueExp,Returns a boolean value expression that can be used in any Query call that expects a ValueExp.
Query,value(double val),static ValueExp,Returns a numeric value expression that can be used in any Query call that expects a ValueExp.
Query,value(float val),static ValueExp,Returns a numeric value expression that can be used in any Query call that expects a ValueExp.
Query,value(int val),static ValueExp,Returns a numeric value expression that can be used in any Query call that expects a ValueExp.
Query,value(long val),static ValueExp,Returns a numeric value expression that can be used in any Query call that expects a ValueExp.
Query,value(Number val),static ValueExp,Returns a numeric value expression that can be used in any Query call that expects a ValueExp.
Query,value(String val),static StringValueExp,Returns a new string expression.
QueryEval,getMBeanServer(),static MBeanServer,Return the MBean server that was most recently given to the setMBeanServer method by this thread.
QueryEval,setMBeanServer(MBeanServer s),void,Sets the MBean server on which the query is to be performed.
StandardEmitterMBean,"addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)",void,Adds a listener to this MBean.
StandardEmitterMBean,getNotificationInfo(),MBeanNotificationInfo[],"Returns an array indicating, for each notification this MBean may send, the name of the Java class of the notification and the notification type."
StandardEmitterMBean,removeNotificationListener(NotificationListener listener),void,Removes a listener from this MBean.
StandardEmitterMBean,"removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)",void,Removes a listener from this MBean.
StandardEmitterMBean,sendNotification(Notification n),void,Sends a notification.
StandardMBean,cacheMBeanInfo(MBeanInfo info),protected void,Customization hook: cache the MBeanInfo built for this object.
StandardMBean,getAttribute(String attribute),Object,Obtain the value of a specific attribute of the Dynamic MBean.
StandardMBean,getAttributes(String[] attributes),AttributeList,Get the values of several attributes of the Dynamic MBean.
StandardMBean,getCachedMBeanInfo(),protected MBeanInfo,Customization hook: Return the MBeanInfo cached for this object.
StandardMBean,getClassName(MBeanInfo info),protected String,Customization hook: Get the className that will be used in the MBeanInfo returned by this MBean.
StandardMBean,"getConstructors(MBeanConstructorInfo[] ctors, Object impl)",protected MBeanConstructorInfo[],Customization hook: Get the MBeanConstructorInfo[] that will be used in the MBeanInfo returned by this MBean.
StandardMBean,getDescription(MBeanAttributeInfo info),protected String,Customization hook: Get the description that will be used in the MBeanAttributeInfo returned by this MBean.
StandardMBean,getDescription(MBeanConstructorInfo info),protected String,Customization hook: Get the description that will be used in the MBeanConstructorInfo returned by this MBean.
StandardMBean,"getDescription(MBeanConstructorInfo ctor, MBeanParameterInfo param, int sequence)",protected String,Customization hook: Get the description that will be used for the sequence MBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
StandardMBean,getDescription(MBeanFeatureInfo info),protected String,Customization hook: Get the description that will be used in the MBeanFeatureInfo returned by this MBean.
StandardMBean,getDescription(MBeanInfo info),protected String,Customization hook: Get the description that will be used in the MBeanInfo returned by this MBean.
StandardMBean,getDescription(MBeanOperationInfo info),protected String,Customization hook: Get the description that will be used in the MBeanOperationInfo returned by this MBean.
StandardMBean,"getDescription(MBeanOperationInfo op, MBeanParameterInfo param, int sequence)",protected String,Customization hook: Get the description that will be used for the sequence MBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
StandardMBean,getImpact(MBeanOperationInfo info),protected int,Customization hook: Get the impact flag of the operation that will be used in the MBeanOperationInfo returned by this MBean.
StandardMBean,getImplementation(),Object,Get the implementation of this Standard MBean (or MXBean).
StandardMBean,getImplementationClass(),Class<?>,Get the class of the implementation of this Standard MBean (or MXBean).
StandardMBean,getMBeanInfo(),MBeanInfo,Get the MBeanInfo for this MBean.
StandardMBean,getMBeanInterface(),Class<?>,Get the Management Interface of this Standard MBean (or MXBean).
StandardMBean,"getParameterName(MBeanConstructorInfo ctor, MBeanParameterInfo param, int sequence)",protected String,Customization hook: Get the name that will be used for the sequence MBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
StandardMBean,"getParameterName(MBeanOperationInfo op, MBeanParameterInfo param, int sequence)",protected String,Customization hook: Get the name that will be used for the sequence MBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
StandardMBean,"invoke(String actionName, Object[] params, String[] signature)",Object,Allows an action to be invoked on the Dynamic MBean.
StandardMBean,postDeregister(),void,Allows the MBean to perform any operations needed after having been unregistered in the MBean server.
StandardMBean,postRegister(Boolean registrationDone),void,Allows the MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed.
StandardMBean,preDeregister(),void,Allows the MBean to perform any operations it needs before being unregistered by the MBean server.
StandardMBean,"preRegister(MBeanServer server, ObjectName name)",ObjectName,Allows the MBean to perform any operations it needs before being registered in the MBean server.
StandardMBean,setAttribute(Attribute attribute),void,Set the value of a specific attribute of the Dynamic MBean.
StandardMBean,setAttributes(AttributeList attributes),AttributeList,Sets the values of several attributes of the Dynamic MBean.
StandardMBean,setImplementation(Object implementation),void,Replace the implementation object wrapped in this object.
StringValueExp,apply(ObjectName name),ValueExp,Applies the ValueExp on a MBean.
StringValueExp,getValue(),String,Returns the string represented by the StringValueExp instance.
StringValueExp,setMBeanServer(MBeanServer s),void,Deprecated.
StringValueExp,toString(),String,Returns the string representing the object.
