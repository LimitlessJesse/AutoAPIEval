Sample: Attribute_1
----------------------------------------------------------------
stdout:
Attribute Name: attributeName

================================================================

Sample: Attribute_2
----------------------------------------------------------------
stdout:
Attribute value: attributeValue

================================================================

Sample: Attribute_4
----------------------------------------------------------------
stdout:
name = value

================================================================

Sample: Attribute_5
----------------------------------------------------------------
stdout:
Are the attributes equal? true

================================================================

Sample: AttributeChangeNotification_1
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/AttributeChangeNotification_1.java:5: error: constructor AttributeChangeNotification in class AttributeChangeNotification cannot be applied to given types;
        AttributeChangeNotification notification = new AttributeChangeNotification("source", 1, System.currentTimeMillis(), "Attribute has changed", "attributeName", "oldValue", "newValue");
                                                   ^
  required: Object,long,long,String,String,String,Object,Object
  found:    String,int,long,String,String,String,String
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: AttributeChangeNotification_2
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/AttributeChangeNotification_2.java:6: error: non-static variable this cannot be referenced from a static context
                this, 1, System.currentTimeMillis(), "Attribute changed", "attributeName", "attributeType", "oldValue", "newValue");
                ^
1 error


================================================================

Sample: AttributeChangeNotification_3
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/AttributeChangeNotification_3.java:6: error: non-static variable this cannot be referenced from a static context
                this, 1, System.currentTimeMillis(), "Attribute changed", "attributeName", "attributeType", "oldValue", "newValue");
                ^
1 error


================================================================

Sample: AttributeChangeNotificationFilter_1
----------------------------------------------------------------
================================================================

Sample: AttributeChangeNotificationFilter_2
----------------------------------------------------------------
================================================================

Sample: DefaultLoaderRepository_2
----------------------------------------------------------------
stdout:
Class not found: com.example.MyClass

stderr:
Note: ./Data/javax_management/javaFiles/DefaultLoaderRepository_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: ImmutableDescriptor_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Missing = character: key1
	at java.management/javax.management.ImmutableDescriptor.makeMap(ImmutableDescriptor.java:190)
	at java.management/javax.management.ImmutableDescriptor.<init>(ImmutableDescriptor.java:94)
	at ImmutableDescriptor_1.main(ImmutableDescriptor_1.java:5)

================================================================

Sample: ImmutableDescriptor_2
----------------------------------------------------------------
================================================================

Sample: ImmutableDescriptor_5
----------------------------------------------------------------
stdout:
Hash code value: 0

================================================================

Sample: MBeanAttributeInfo_3
----------------------------------------------------------------
stdout:
Is attribute readable? true

================================================================

Sample: MBeanAttributeInfo_4
----------------------------------------------------------------
stdout:
Is attribute writable: true

================================================================

Sample: MBeanAttributeInfo_5
----------------------------------------------------------------
stdout:
Attribute has 'is' getter: false

================================================================

Sample: MBeanConstructorInfo_2
----------------------------------------------------------------
================================================================

Sample: MBeanConstructorInfo_3
----------------------------------------------------------------
stdout:
javax.management.MBeanConstructorInfo[description=Description, name=ConstructorName, signature=[], descriptor={}]

================================================================

Sample: MBeanFeatureInfo_1
----------------------------------------------------------------
stdout:
Description: FeatureDescription

================================================================

Sample: MBeanFeatureInfo_2
----------------------------------------------------------------
stdout:
Feature Name: FeatureName

================================================================

Sample: MBeanFeatureInfo_4
----------------------------------------------------------------
stdout:
Are info1 and info2 equal? true

================================================================

Sample: MBeanFeatureInfo_5
----------------------------------------------------------------
stdout:
Hash code value: 583378311

================================================================

Sample: MBeanNotificationInfo_3
----------------------------------------------------------------
stdout:
type1
type2

================================================================

Sample: MBeanNotificationInfo_5
----------------------------------------------------------------
stdout:
javax.management.MBeanNotificationInfo[description=Description of my notification info, name=My Notification Info, notifTypes=[type1, type2], descriptor={}]

================================================================

Sample: MBeanOperationInfo_3
----------------------------------------------------------------
stdout:
Impact: 0

================================================================

Sample: MBeanOperationInfo_4
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/MBeanOperationInfo_4.java:5: error: no suitable constructor found for MBeanOperationInfo(String,String,<null>,String)
        MBeanOperationInfo operationInfo = new MBeanOperationInfo("operationName", "operationDescription", null, "String");
                                           ^
    constructor MBeanOperationInfo.MBeanOperationInfo(String,Method) is not applicable
      (actual and formal argument lists differ in length)
    constructor MBeanOperationInfo.MBeanOperationInfo(String,String,MBeanParameterInfo[],String,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor MBeanOperationInfo.MBeanOperationInfo(String,String,MBeanParameterInfo[],String,int,Descriptor) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: MBeanOperationInfo_5
----------------------------------------------------------------
================================================================

Sample: MBeanParameterInfo_3
----------------------------------------------------------------
stdout:
Parameter type: paramType

================================================================

Sample: MBeanParameterInfo_5
----------------------------------------------------------------
stdout:
javax.management.MBeanParameterInfo[description=paramDescription, name=paramName, type=paramType, descriptor={}]

================================================================

Sample: MBeanPermission_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Invalid permission: actions
	at java.management/javax.management.MBeanPermission.getMask(MBeanPermission.java:955)
	at java.management/javax.management.MBeanPermission.parseActions(MBeanPermission.java:263)
	at java.management/javax.management.MBeanPermission.<init>(MBeanPermission.java:408)
	at MBeanPermission_2.main(MBeanPermission_2.java:5)

================================================================

Sample: MBeanServerBuilder_3
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/MBeanServerBuilder_3.java:6: error: cannot find symbol
        MBeanServerBuilder builder = MBeanServerBuilder.newMBeanServerBuilder();
                                                       ^
  symbol:   method newMBeanServerBuilder()
  location: class MBeanServerBuilder
1 error


================================================================

Sample: MBeanServerDelegate_1
----------------------------------------------------------------
stdout:
JMX Implementation Version: 17.0.12+7-Ubuntu-1ubuntu220.04

================================================================

Sample: MBeanServerDelegate_2
----------------------------------------------------------------
stdout:
MBean Server ID: wrybill_1724291700663

================================================================

Sample: MBeanServerDelegate_3
----------------------------------------------------------------
stdout:
Specification Name: Java Management Extensions

================================================================

Sample: MBeanServerDelegate_4
----------------------------------------------------------------
stdout:
JMX Specification Version: 1.4

================================================================

Sample: MBeanServerDelegate_5
----------------------------------------------------------------
stdout:
JMX Implementation Name

================================================================

Sample: MBeanServerFactory_1
----------------------------------------------------------------
stdout:
MBeanServer created with default domain: defaultDomain

================================================================

Sample: MBeanServerNotification_2
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/MBeanServerNotification_2.java:6: error: constructor MBeanServerNotification in class MBeanServerNotification cannot be applied to given types;
        MBeanServerNotification notification = new MBeanServerNotification("NotificationType", new ObjectName("domain", "key", "value"));
                                               ^
  required: String,Object,long,ObjectName
  found:    String,ObjectName
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: MBeanServerNotification_5
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/MBeanServerNotification_5.java:5: error: constructor MBeanServerNotification in class MBeanServerNotification cannot be applied to given types;
        MBeanServerNotification notification = new MBeanServerNotification("Type", null, 0);
                                               ^
  required: String,Object,long,ObjectName
  found:    String,<null>,int
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: MBeanServerPermission_2
----------------------------------------------------------------
stdout:
Permission 1 implies Permission 2: true

================================================================

Sample: MBeanServerPermission_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Invalid MBeanServerPermission name: "permissionName"
	at java.management/javax.management.MBeanServerPermission.nameIndex(MBeanServerPermission.java:249)
	at java.management/javax.management.MBeanServerPermission.parseMask(MBeanServerPermission.java:227)
	at java.management/javax.management.MBeanServerPermission.<init>(MBeanServerPermission.java:144)
	at java.management/javax.management.MBeanServerPermission.<init>(MBeanServerPermission.java:124)
	at MBeanServerPermission_3.main(MBeanServerPermission_3.java:6)

================================================================

Sample: MBeanServerPermission_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Invalid MBeanServerPermission name: "permissionName"
	at java.management/javax.management.MBeanServerPermission.nameIndex(MBeanServerPermission.java:249)
	at java.management/javax.management.MBeanServerPermission.parseMask(MBeanServerPermission.java:227)
	at java.management/javax.management.MBeanServerPermission.<init>(MBeanServerPermission.java:144)
	at MBeanServerPermission_4.main(MBeanServerPermission_4.java:5)

================================================================

Sample: MBeanServerPermission_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Invalid MBeanServerPermission name: "permissionName"
	at java.management/javax.management.MBeanServerPermission.nameIndex(MBeanServerPermission.java:249)
	at java.management/javax.management.MBeanServerPermission.parseMask(MBeanServerPermission.java:227)
	at java.management/javax.management.MBeanServerPermission.<init>(MBeanServerPermission.java:144)
	at java.management/javax.management.MBeanServerPermission.<init>(MBeanServerPermission.java:124)
	at MBeanServerPermission_5.main(MBeanServerPermission_5.java:5)

================================================================

Sample: Notification_1
----------------------------------------------------------------
stdout:
Sequence Number: 123

================================================================

Sample: Notification_2
----------------------------------------------------------------
stdout:
Before setting source: Source
After setting source: New Source

================================================================

Sample: Notification_3
----------------------------------------------------------------
stdout:
Notification timestamp: 1724291715228

================================================================

Sample: Notification_4
----------------------------------------------------------------
stdout:
User data: User data example

================================================================

Sample: Notification_5
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/Notification_5.java:5: error: non-static variable this cannot be referenced from a static context
        Notification notification = new Notification("com.example.alarm.router", this, 1);
                                                                                 ^
1 error


================================================================

Sample: NotificationBroadcasterSupport_1
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/NotificationBroadcasterSupport_1.java:7: error: non-static variable this cannot be referenced from a static context
        Notification notification = new Notification("test", this, 1);
                                                             ^
1 error


================================================================

Sample: NotificationBroadcasterSupport_2
----------------------------------------------------------------
================================================================

Sample: NotificationBroadcasterSupport_3
----------------------------------------------------------------
================================================================

Sample: NotificationBroadcasterSupport_4
----------------------------------------------------------------
================================================================

Sample: NotificationBroadcasterSupport_5
----------------------------------------------------------------
stderr:
javax.management.ListenerNotFoundException: Listener not registered
	at java.management/javax.management.NotificationBroadcasterSupport.removeNotificationListener(NotificationBroadcasterSupport.java:193)
	at NotificationBroadcasterSupport_5.main(NotificationBroadcasterSupport_5.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: NotificationFilterSupport_1
----------------------------------------------------------------
================================================================

Sample: NotificationFilterSupport_2
----------------------------------------------------------------
================================================================

Sample: ObjectInstance_1
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/ObjectInstance_1.java:6: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectInstance objectInstance = new ObjectInstance(new ObjectName("test:name=Test"), "Test");
                                                           ^
1 error


================================================================

Sample: ObjectInstance_2
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/ObjectInstance_2.java:5: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectInstance objectInstance = new ObjectInstance("ObjectName", "ClassName");
                                        ^
1 error


================================================================

Sample: ObjectInstance_4
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/ObjectInstance_4.java:5: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectInstance obj1 = new ObjectInstance("name1", "class1");
                              ^
./Data/javax_management/javaFiles/ObjectInstance_4.java:6: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectInstance obj2 = new ObjectInstance("name1", "class1");
                              ^
2 errors


================================================================

Sample: ObjectInstance_5
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/ObjectInstance_5.java:5: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectInstance objectInstance = new ObjectInstance("ObjectName", "ClassName");
                                        ^
1 error


================================================================

Sample: ObjectName_1
----------------------------------------------------------------
stdout:
Is pattern: true

================================================================

Sample: ObjectName_2
----------------------------------------------------------------
stdout:
Canonical Name: com.example:name=test,type=MyMBean

================================================================

Sample: ObjectName_3
----------------------------------------------------------------
stdout:
Value of 'name' property: MyMBean1

================================================================

Sample: ObjectName_4
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/ObjectName_4.java:5: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectName pattern = new ObjectName("com.example:type=Example,*");
                             ^
./Data/javax_management/javaFiles/ObjectName_4.java:6: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        ObjectName name = new ObjectName("com.example:type=Example,name=Test");
                          ^
2 errors


================================================================

Sample: QueryEval_2
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/QueryEval_2.java:6: error: QueryEval is abstract; cannot be instantiated
        QueryEval queryEval = new QueryEval();
                              ^
./Data/javax_management/javaFiles/QueryEval_2.java:8: error: incompatible types: void cannot be converted to MBeanServer
        queryEval.setMBeanServer(server);
                                ^
2 errors


================================================================

Sample: StandardEmitterMBean_1
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/StandardEmitterMBean_1.java:7: error: no suitable constructor found for StandardEmitterMBean(no arguments)
        StandardEmitterMBean mbean = new StandardEmitterMBean();
                                     ^
    constructor StandardEmitterMBean.<T#1>StandardEmitterMBean(T#1,Class<T#1>,NotificationEmitter) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor StandardEmitterMBean.<T#2>StandardEmitterMBean(T#2,Class<T#2>,boolean,NotificationEmitter) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in constructor <T#1>StandardEmitterMBean(T#1,Class<T#1>,NotificationEmitter)
    T#2 extends Object declared in constructor <T#2>StandardEmitterMBean(T#2,Class<T#2>,boolean,NotificationEmitter)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: StandardEmitterMBean_2
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/StandardEmitterMBean_2.java:7: error: no suitable constructor found for StandardEmitterMBean(no arguments)
        StandardEmitterMBean mbean = new StandardEmitterMBean();
                                     ^
    constructor StandardEmitterMBean.<T#1>StandardEmitterMBean(T#1,Class<T#1>,NotificationEmitter) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor StandardEmitterMBean.<T#2>StandardEmitterMBean(T#2,Class<T#2>,boolean,NotificationEmitter) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in constructor <T#1>StandardEmitterMBean(T#1,Class<T#1>,NotificationEmitter)
    T#2 extends Object declared in constructor <T#2>StandardEmitterMBean(T#2,Class<T#2>,boolean,NotificationEmitter)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: StandardEmitterMBean_3
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/StandardEmitterMBean_3.java:9: error: no suitable constructor found for StandardEmitterMBean(no arguments)
        StandardEmitterMBean mbean = new StandardEmitterMBean();
                                     ^
    constructor StandardEmitterMBean.<T#1>StandardEmitterMBean(T#1,Class<T#1>,NotificationEmitter) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor StandardEmitterMBean.<T#2>StandardEmitterMBean(T#2,Class<T#2>,boolean,NotificationEmitter) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in constructor <T#1>StandardEmitterMBean(T#1,Class<T#1>,NotificationEmitter)
    T#2 extends Object declared in constructor <T#2>StandardEmitterMBean(T#2,Class<T#2>,boolean,NotificationEmitter)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: StandardEmitterMBean_4
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/StandardEmitterMBean_4.java:6: error: cannot find symbol
        StandardEmitterMBean mbean = new StandardEmitterMBean(new YourMBeanImplementation(), YourMBeanInterface.class);
                                                                  ^
  symbol:   class YourMBeanImplementation
  location: class StandardEmitterMBean_4
./Data/javax_management/javaFiles/StandardEmitterMBean_4.java:6: error: cannot find symbol
        StandardEmitterMBean mbean = new StandardEmitterMBean(new YourMBeanImplementation(), YourMBeanInterface.class);
                                                                                             ^
  symbol:   class YourMBeanInterface
  location: class StandardEmitterMBean_4
2 errors


================================================================

Sample: StandardMBean_5
----------------------------------------------------------------
output:
./Data/javax_management/javaFiles/StandardMBean_5.java:5: error: no suitable constructor found for StandardMBean(no arguments)
        StandardMBean standardMBean = new StandardMBean();
                                      ^
    constructor StandardMBean.<T#1>StandardMBean(T#1,Class<T#1>) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor StandardMBean.<T#2>StandardMBean(T#2,Class<T#2>,boolean) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in constructor <T#1>StandardMBean(T#1,Class<T#1>)
    T#2 extends Object declared in constructor <T#2>StandardMBean(T#2,Class<T#2>,boolean)
./Data/javax_management/javaFiles/StandardMBean_5.java:13: error: cannot find symbol
        } catch (MBeanException | ReflectionException e) {
                 ^
  symbol:   class MBeanException
  location: class StandardMBean_5
./Data/javax_management/javaFiles/StandardMBean_5.java:13: error: cannot find symbol
        } catch (MBeanException | ReflectionException e) {
                                  ^
  symbol:   class ReflectionException
  location: class StandardMBean_5
./Data/javax_management/javaFiles/StandardMBean_5.java:14: error: <null> cannot be dereferenced
            e.printStackTrace();
             ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
4 errors


================================================================

