Sample: 0 ServerSocketFactory_1
----------------------------------------------------------------
Code snippet:
```java
import javax.net.ServerSocketFactory;
import java.io.IOException;
import java.net.ServerSocket;

public class Main {
    public static void main(String[] args) {
        int port = 8080;
        
        ServerSocketFactory factory = ServerSocketFactory.getDefault();
        try {
            ServerSocket serverSocket = factory.createServerSocket(port);
            System.out.println("ServerSocket created on port: " + port);
        } catch (IOException e) {
            System.err.println("Error creating ServerSocket: " + e.getMessage());
        }
    }
}
```
================================================================

Sample: 1 ServerSocketFactory_2
----------------------------------------------------------------
Code snippet:
```java
import javax.net.ServerSocketFactory;
import java.io.IOException;
import java.net.ServerSocket;

public class Main {
    public static void main(String[] args) {
        try {
            ServerSocketFactory factory = ServerSocketFactory.getDefault();
            ServerSocket serverSocket = factory.createServerSocket(8080, 50);
            System.out.println("ServerSocket created on port 8080 with a backlog of 50");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 2 ServerSocketFactory_3
----------------------------------------------------------------
Code snippet:
```java
import javax.net.ServerSocketFactory;
import java.io.IOException;
import java.net.InetAddress;
import java.net.ServerSocket;

public class Main {
    public static void main(String[] args) {
        try {
            ServerSocketFactory factory = ServerSocketFactory.getDefault();
            ServerSocket serverSocket = factory.createServerSocket(8080, 50, InetAddress.getLocalHost());
            System.out.println("ServerSocket created on port 8080");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 3 ServerSocketFactory_4
----------------------------------------------------------------
Code snippet:
```java
import javax.net.ServerSocketFactory;
import java.io.IOException;
import java.net.ServerSocket;

public class Main {
    public static void main(String[] args) {
        ServerSocketFactory factory = ServerSocketFactory.getDefault();
        try {
            ServerSocket serverSocket = factory.createServerSocket();
            System.out.println("Server socket created: " + serverSocket);
        } catch (IOException e) {
            System.err.println("Error creating server socket: " + e.getMessage());
        }
    }
}
```
================================================================

Sample: 4 SocketFactory_1
----------------------------------------------------------------
Code snippet:
```java
import javax.net.SocketFactory;
import java.io.IOException;
import java.net.Socket;

public class Main {
    public static void main(String[] args) {
        SocketFactory socketFactory = SocketFactory.getDefault();
        try {
            Socket socket = socketFactory.createSocket();
            System.out.println("Unconnected socket created: " + socket);
        } catch (IOException e) {
            System.out.println("Error creating socket: " + e.getMessage());
        }
    }
}
```
================================================================

Sample: 5 SocketFactory_2
----------------------------------------------------------------
Code snippet:
```java
import javax.net.SocketFactory;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

public class Main {
    public static void main(String[] args) {
        SocketFactory socketFactory = SocketFactory.getDefault();
        try {
            Socket socket = socketFactory.createSocket("example.com", 80);
            System.out.println("Socket created and connected to example.com on port 80");
        } catch (IOException e) {
            e.printStackTrace();
        } catch (UnknownHostException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 6 SocketFactory_3
----------------------------------------------------------------
Code snippet:
```java
import javax.net.SocketFactory;
import java.net.InetAddress;
import java.io.IOException;
import java.net.Socket;

public class Main {
    public static void main(String[] args) {
        SocketFactory socketFactory = SocketFactory.getDefault();
        try {
            InetAddress host = InetAddress.getByName("example.com");
            int port = 80;
            Socket socket = socketFactory.createSocket(host, port);
            System.out.println("Socket created and connected to " + host + " on port " + port);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 7 SocketFactory_4
----------------------------------------------------------------
Code snippet:
```java
import javax.net.SocketFactory;
import java.net.InetAddress;
import java.net.Socket;
import java.io.IOException;
import java.net.UnknownHostException;

public class Main {
    public static void main(String[] args) {
        SocketFactory socketFactory = SocketFactory.getDefault();
        try {
            Socket socket = socketFactory.createSocket("example.com", 80, InetAddress.getLocalHost(), 8080);
            System.out.println("Socket created: " + socket);
        } catch (IOException | UnknownHostException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 8 SocketFactory_5
----------------------------------------------------------------
Code snippet:
```java
import javax.net.SocketFactory;
import java.net.InetAddress;
import java.io.IOException;
import java.net.Socket;

public class Main {
    public static void main(String[] args) {
        SocketFactory socketFactory = SocketFactory.getDefault();
        try {
            InetAddress address = InetAddress.getByName("www.example.com");
            int port = 80;
            InetAddress localAddress = InetAddress.getLocalHost();
            int localPort = 12345;
            
            Socket socket = socketFactory.createSocket(address, port, localAddress, localPort);
            
            // Use the created socket for communication
            
            socket.close(); // Close the socket when done
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

