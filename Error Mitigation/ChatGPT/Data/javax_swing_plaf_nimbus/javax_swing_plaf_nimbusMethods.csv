ClassName,Method,Return Type,Description
AbstractRegionPainter,configureGraphics(Graphics2D g),protected void,Configures the given Graphics2D.
AbstractRegionPainter,"decodeAnchorX(float x, float dx)",protected float,"Decodes and returns a float value representing the actual pixel location for the anchor point given the encoded X value of the control point, and the offset distance to the anchor from that control point."
AbstractRegionPainter,"decodeAnchorY(float y, float dy)",protected float,"Decodes and returns a float value representing the actual pixel location for the anchor point given the encoded Y value of the control point, and the offset distance to the anchor from that control point."
AbstractRegionPainter,"decodeColor(Color color1, Color color2, float midPoint)",protected Color,"Decodes and returns a color, which is derived from a offset between two other colors."
AbstractRegionPainter,"decodeColor(String key, float hOffset, float sOffset, float bOffset, int aOffset)",protected Color,"Decodes and returns a color, which is derived from a base color in UI defaults."
AbstractRegionPainter,"decodeGradient(float x1, float y1, float x2, float y2, float[] midpoints, Color[] colors)",protected LinearGradientPaint,"Given parameters for creating a LinearGradientPaint, this method will create and return a linear gradient paint."
AbstractRegionPainter,"decodeRadialGradient(float x, float y, float r, float[] midpoints, Color[] colors)",protected RadialGradientPaint,"Given parameters for creating a RadialGradientPaint, this method will create and return a radial gradient paint."
AbstractRegionPainter,decodeX(float x),protected float,Decodes and returns a float value representing the actual pixel location for the given encoded X value.
AbstractRegionPainter,decodeY(float y),protected float,Decodes and returns a float value representing the actual pixel location for the given encoded y value.
AbstractRegionPainter,"doPaint(Graphics2D g, JComponent c, int width, int height, Object[] extendedCacheKeys)",protected abstract void,Actually performs the painting operation.
AbstractRegionPainter,"getComponentColor(JComponent c, String property, Color defaultColor, float saturationOffset, float brightnessOffset, int alphaOffset)",protected Color,Get a color property from the given JComponent.
AbstractRegionPainter,getExtendedCacheKeys(JComponent c),protected Object[],Get any extra attributes which the painter implementation would like to include in the image cache lookups.
AbstractRegionPainter,getPaintContext(),protected abstract AbstractRegionPainter.PaintContext,Gets the PaintContext for this painting operation.
AbstractRegionPainter,"paint(Graphics2D g, JComponent c, int w, int h)",void,Renders to the given Graphics2D object.
NimbusLookAndFeel,getDefaults(),UIDefaults,Returns the defaults for this SynthLookAndFeel.
NimbusLookAndFeel,"getDerivedColor(Color color1, Color color2, float midPoint)",protected Color,"Decodes and returns a color, which is derived from a offset between two other colors."
NimbusLookAndFeel,"getDerivedColor(Color color1, Color color2, float midPoint, boolean uiResource)",protected Color,"Decodes and returns a color, which is derived from an offset between two other colors."
NimbusLookAndFeel,"getDerivedColor(String uiDefaultParentName, float hOffset, float sOffset, float bOffset, int aOffset, boolean uiResource)",Color,"Get a derived color, derived colors are shared instances and is color value will change when its parent UIDefault color changes."
NimbusLookAndFeel,getDescription(),String,Returns a textual description of this look and feel.
NimbusLookAndFeel,"getDisabledIcon(JComponent component, Icon icon)",Icon,Returns an Icon with a disabled appearance.
NimbusLookAndFeel,getID(),String,Return a string that identifies this look and feel.
NimbusLookAndFeel,getName(),String,Return a short string that identifies this look and feel.
NimbusLookAndFeel,"getStyle(JComponent c, Region r)",static NimbusStyle,Gets the style associated with the given component and region.
NimbusLookAndFeel,initialize(),void,Called by UIManager when this look and feel is installed.
NimbusLookAndFeel,"register(Region region, String prefix)",void,Registers a third party component with the NimbusLookAndFeel.
NimbusLookAndFeel,shouldUpdateStyleOnAncestorChanged(),boolean,Returns whether or not the UIs should update their SynthStyles from the SynthStyleFactory when the ancestor of the JComponent changes.
NimbusLookAndFeel,shouldUpdateStyleOnEvent(PropertyChangeEvent ev),protected boolean,Returns whether or not the UIs should update their styles when a particular event occurs.
NimbusLookAndFeel,uninitialize(),void,Called by UIManager when this look and feel is uninstalled.
NimbusStyle,"get(SynthContext ctx, Object key)",Object,Getter for a region specific style property.
NimbusStyle,getBackgroundPainter(SynthContext ctx),Painter,"Gets the appropriate background Painter, if there is one, for the state specified in the given SynthContext."
NimbusStyle,getBorderPainter(SynthContext ctx),Painter,"Gets the appropriate border Painter, if there is one, for the state specified in the given SynthContext."
NimbusStyle,"getColorForState(SynthContext ctx, ColorType type)",protected Color,Returns the color for the specified state.
NimbusStyle,getFontForState(SynthContext ctx),protected Font,Returns the font for the specified state.
NimbusStyle,getForegroundPainter(SynthContext ctx),Painter,"Gets the appropriate foreground Painter, if there is one, for the state specified in the given SynthContext."
NimbusStyle,"getInsets(SynthContext ctx, Insets in)",Insets,Returns the Insets that are used to calculate sizing information.
NimbusStyle,getPainter(SynthContext ctx),SynthPainter,Returns the SynthPainter that will be used for painting.
NimbusStyle,installDefaults(SynthContext ctx),void,Installs the necessary state from this Style on the JComponent from context.
NimbusStyle,isOpaque(SynthContext ctx),boolean,Returns true if the region is opaque.
State,isInState(T c),protected abstract boolean,Gets whether the specified JComponent is in the custom state represented by this class.
State,toString(),String,Returns a string representation of the object.
