Sample: ForwardingFileObject_1
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_1.java:5: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject fileObject = new ForwardingFileObject() {
                                          ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
./Data/javax_tools/javaFiles/ForwardingFileObject_1.java:7: error: cannot find symbol
            public CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException {
                                                                                    ^
  symbol: class IOException
./Data/javax_tools/javaFiles/ForwardingFileObject_1.java:16: error: cannot find symbol
        } catch (IOException e) {
                 ^
  symbol:   class IOException
  location: class ForwardingFileObject_1
3 errors


================================================================

Sample: ForwardingFileObject_2
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_2.java:6: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject forwardingFileObject = new ForwardingFileObject() {
                                                    ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
./Data/javax_tools/javaFiles/ForwardingFileObject_2.java:8: error: cannot find symbol
            public Writer openWriter() throws IOException {
                   ^
  symbol: class Writer
./Data/javax_tools/javaFiles/ForwardingFileObject_2.java:8: error: cannot find symbol
            public Writer openWriter() throws IOException {
                                              ^
  symbol: class IOException
3 errors


================================================================

Sample: ForwardingFileObject_3
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_3.java:9: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject forwardingFileObject = new ForwardingFileObject() {
                                                    ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
1 error


================================================================

Sample: ForwardingFileObject_4
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_4.java:9: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject forwardingFileObject = new ForwardingFileObject() {
                                                    ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
1 error


================================================================

Sample: ForwardingFileObject_5
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_5.java:5: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject fileObject = new ForwardingFileObject() {
                                          ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
1 error


================================================================

Sample: ForwardingJavaFileManager_1
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingJavaFileManager_1.java:5: error: constructor ForwardingJavaFileManager in class ForwardingJavaFileManager<M> cannot be applied to given types;
        ForwardingJavaFileManager fileManager = new ForwardingJavaFileManager() {
                                                ^
  required: JavaFileManager
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where M is a type-variable:
    M extends JavaFileManager declared in class ForwardingJavaFileManager
./Data/javax_tools/javaFiles/ForwardingJavaFileManager_1.java:7: error: cannot find symbol
            public void close() throws IOException {
                                       ^
  symbol: class IOException
Note: ./Data/javax_tools/javaFiles/ForwardingJavaFileManager_1.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
2 errors


================================================================

Sample: ForwardingJavaFileManager_3
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingJavaFileManager_3.java:5: error: constructor ForwardingJavaFileManager in class ForwardingJavaFileManager<M> cannot be applied to given types;
        ForwardingJavaFileManager fileManager = new ForwardingJavaFileManager() {
                                                ^
  required: JavaFileManager
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where M is a type-variable:
    M extends JavaFileManager declared in class ForwardingJavaFileManager
./Data/javax_tools/javaFiles/ForwardingJavaFileManager_3.java:7: error: cannot find symbol
            public void flush() throws IOException {
                                       ^
  symbol: class IOException
Note: ./Data/javax_tools/javaFiles/ForwardingJavaFileManager_3.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
2 errors


================================================================

Sample: SimpleJavaFileObject_1
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/SimpleJavaFileObject_1.java:6: error: constructor SimpleJavaFileObject in class SimpleJavaFileObject cannot be applied to given types;
        SimpleJavaFileObject fileObject = new SimpleJavaFileObject(null) {
                                          ^
  required: URI,Kind
  found:    <null>
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SimpleJavaFileObject_4
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/SimpleJavaFileObject_4.java:5: error: constructor SimpleJavaFileObject in class SimpleJavaFileObject cannot be applied to given types;
        SimpleJavaFileObject fileObject = new SimpleJavaFileObject(null) {
                                          ^
  required: URI,Kind
  found:    <null>
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SimpleJavaFileObject_5
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/SimpleJavaFileObject_5.java:6: error: SimpleJavaFileObject(URI,Kind) has protected access in SimpleJavaFileObject
        SimpleJavaFileObject fileObject = new SimpleJavaFileObject(URI.create("file:///path/to/file"), SimpleJavaFileObject.Kind.SOURCE);
                                          ^
1 error


================================================================

