Sample: 0 DiagnosticCollector
----------------------------------------------------------------
1. `List<Diagnostic<? extends JavaFileObject>> getDiagnostics()`: This method returns a list of diagnostics collected by the DiagnosticCollector.
2. `void report()`: This method reports all the diagnostics collected by the DiagnosticCollector.
3. `void reset()`: This method clears all the diagnostics collected by the DiagnosticCollector.
4. `int getCount()`: This method returns the number of diagnostics collected by the DiagnosticCollector.
5. `boolean isEmpty()`: This method checks if the DiagnosticCollector has collected any diagnostics.
================================================================

Sample: 1 ForwardingFileObject
----------------------------------------------------------------
1. `CharSequence getCharContent(boolean ignoreEncodingErrors)`: This method returns the character content of this file object as a CharSequence.
2. `Writer openWriter()`: This method opens a writer for this file object.
3. `OutputStream openOutputStream()`: This method opens an output stream for this file object.
4. `InputStream openInputStream()`: This method opens an input stream for this file object.
5. `boolean delete()`: This method deletes this file object.
================================================================

Sample: 2 ForwardingJavaFileManager
----------------------------------------------------------------
1. `void close()`: Closes this file manager.
2. `Iterable<JavaFileObject> list(Location location, String packageName, Set<JavaFileObject.Kind> kinds, boolean recurse)`: Returns a list of JavaFileObjects for the given location, package name, kinds, and recursion flag.
3. `void flush()`: Flushes any buffered output.
4. `void handleOption(String current, Iterator<String> remaining)`: Handles an option for the file manager.
5. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: Returns a JavaFileObject for the given location, class name, kind, and sibling file object.
================================================================

Sample: 3 ForwardingJavaFileObject
----------------------------------------------------------------
1. `CharSequence getCharContent(boolean ignoreEncodingErrors)`: This method returns the character content of this file object as a CharSequence.
2. `Writer openWriter()`: This method opens a writer for this file object.
3. `OutputStream openOutputStream()`: This method opens an output stream for writing to this file object.
4. `Reader openReader(boolean ignoreEncodingErrors)`: This method opens a reader for this file object.
5. `InputStream openInputStream()`: This method opens an input stream for reading from this file object.
================================================================

Sample: 4 SimpleJavaFileObject
----------------------------------------------------------------
1. `CharSequence getCharContent(boolean ignoreEncodingErrors)`: This method returns the character content of this file object as a CharSequence.
2. `Kind getKind()`: This method returns the kind of this file object.
3. `boolean isNameCompatible(String simpleName, Kind kind)`: This method checks if the file object is compatible with the specified simple name and kind.
4. `boolean delete()`: This method deletes the file object.
5. `URI toUri()`: This method returns the URI for this file object.
================================================================

Sample: 5 ToolProvider
----------------------------------------------------------------
1. `Tool getSystemJavaCompiler()`: This method returns a Java compiler provided by the system.
2. `Iterable<JavaCompiler> getSystemJavaCompilers()`: This method returns an iterable of all the Java compilers provided by the system.
3. `Tool getSystemDocumentationTool()`: This method returns a documentation tool provided by the system.
4. `Iterable<DocumentationTool> getSystemDocumentationTools()`: This method returns an iterable of all the documentation tools provided by the system.
5. `Tool getSystemFileManager(JavaCompiler compiler, DiagnosticListener<? super JavaFileObject> diagnosticListener, Locale locale, Charset charset)`: This method returns a file manager for the specified compiler, diagnostic listener, locale, and charset.
================================================================

