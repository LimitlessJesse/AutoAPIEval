Sample: 0 ActionEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ActionEvent;

public class Main {
    public static void main(String[] args) {
        ActionEvent event = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, "show details");
        String command = event.getActionCommand();
        System.out.println("Command: " + command);
    }
}
```
================================================================

Sample: 1 ActionEvent_3
----------------------------------------------------------------
`long getWhen()`: This method returns the timestamp of when the ActionEvent occurred.

Code snippet:
```java
import java.awt.event.ActionEvent;

public class Main {
    public static void main(String[] args) {
        ActionEvent event = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, "command");
        long timestamp = event.getWhen();
        System.out.println("Timestamp of the event: " + timestamp);
    }
}
```
================================================================

Sample: 2 ActionEvent_4
----------------------------------------------------------------
`String paramString()`: This method returns a parameter string identifying this action event. It is useful for event-logging and debugging purposes.

Code snippet:
```java
import java.awt.event.ActionEvent;

public class Main {
    public static void main(String[] args) {
        ActionEvent event = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, "Button Clicked");
        String paramString = event.paramString();
        System.out.println("Parameter String: " + paramString);
    }
}
```
================================================================

Sample: 3 AWTEventListenerProxy_1
----------------------------------------------------------------
`void eventDispatched(AWTEvent event)`: Forwards the AWT event to the listener delegate.

Code snippet:
```java
import java.awt.AWTEvent;
import java.awt.event.AWTEventListenerProxy;

public class Main {
    public static void main(String[] args) {
        AWTEventListenerProxy proxy = new AWTEventListenerProxy() {
            @Override
            public void eventDispatched(AWTEvent event) {
                // Forward the AWT event to the listener delegate
                System.out.println("Event dispatched: " + event);
            }
        };
        
        // Simulate an AWT event
        AWTEvent event = new AWTEvent(new Object(), 0) {};
        proxy.eventDispatched(event);
    }
}
```
================================================================

Sample: 4 AWTEventListenerProxy_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.AWTEventListenerProxy;

public class Main {
    public static void main(String[] args) {
        AWTEventListenerProxy proxy = new AWTEventListenerProxy(0L);
        long eventMask = proxy.getEventMask();
        System.out.println("Event Mask: " + eventMask);
    }
}
```
================================================================

Sample: 5 ContainerEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.Component;
import java.awt.event.ContainerEvent;

public class Main {
    public static void main(String[] args) {
        Component component = new Component() {};
        ContainerEvent event = new ContainerEvent(component, ContainerEvent.COMPONENT_ADDED, component);
        
        Component affectedComponent = event.getChild();
        System.out.println("Affected Component: " + affectedComponent);
    }
}
```
================================================================

Sample: 6 ContainerEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.Container;
import java.awt.event.ContainerEvent;

public class Main {
    public static void main(String[] args) {
        ContainerEvent event = new ContainerEvent(new Container(), ContainerEvent.COMPONENT_ADDED, new Object());
        Container container = event.getContainer();
        System.out.println("Originator of the event: " + container);
    }
}
```
================================================================

Sample: 7 ContainerEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ContainerEvent;

public class Main {
    public static void main(String[] args) {
        ContainerEvent event = new ContainerEvent(new Object(), ContainerEvent.COMPONENT_ADDED, new Object());
        System.out.println(event.paramString());
    }
}
```
================================================================

Sample: 8 FocusAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        FocusAdapter focusAdapter = new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                // Add your implementation here
            }
        };
    }
}
```
================================================================

Sample: 9 FocusAdapter_2
----------------------------------------------------------------
`void focusLost(FocusEvent e)`: This method is used to handle the event when a component loses the keyboard focus.

Code snippet:
```java
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        FocusAdapter focusAdapter = new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                // Add your implementation here
                System.out.println("Focus lost");
            }
        };
    }
}
```
================================================================

Sample: 10 FocusEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.Component;
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        Component component1 = new Component() {};
        Component component2 = new Component() {};
        
        FocusEvent focusGainedEvent = new FocusEvent(component1, FocusEvent.FOCUS_GAINED);
        Component oppositeComponent = focusGainedEvent.getOppositeComponent();
        System.out.println("Opposite Component for FOCUS_GAINED event: " + oppositeComponent);
        
        FocusEvent focusLostEvent = new FocusEvent(component2, FocusEvent.FOCUS_LOST);
        oppositeComponent = focusLostEvent.getOppositeComponent();
        System.out.println("Opposite Component for FOCUS_LOST event: " + oppositeComponent);
    }
}
```
================================================================

Sample: 11 FocusEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        FocusEvent focusEvent = new FocusEvent(null, FocusEvent.FOCUS_GAINED);
        boolean temporary = focusEvent.isTemporary();
        System.out.println("Is temporary focus change event: " + temporary);
    }
}
```
================================================================

Sample: 12 FocusEvent_4
----------------------------------------------------------------
`String paramString()`: This method returns a parameter string identifying the FocusEvent.

Code snippet:
```java
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        FocusEvent focusEvent = new FocusEvent(null, FocusEvent.FOCUS_GAINED);
        String paramString = focusEvent.paramString();
        System.out.println(paramString);
    }
}
```
================================================================

Sample: 13 InputEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0);
        int modifiers = event.getModifiers();
        System.out.println("Modifiers: " + modifiers);
    }
}
```
================================================================

Sample: 14 InputEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0, 0);
        long timestamp = event.getWhen();
        System.out.println("Timestamp of the event: " + timestamp);
    }
}
```
================================================================

Sample: 15 InputEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0);
        
        int onmask = InputEvent.SHIFT_DOWN_MASK | InputEvent.BUTTON1_DOWN_MASK;
        int offmask = InputEvent.CTRL_DOWN_MASK;
        
        if ((event.getModifiersEx() & (onmask | offmask)) == onmask) {
            System.out.println("SHIFT and BUTTON1 are down, but CTRL is up");
        }
    }
}
```
================================================================

Sample: 16 InputEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0);
        boolean isAltDown = event.isAltDown();
        System.out.println("Alt modifier is down: " + isAltDown);
    }
}
```
================================================================

Sample: 17 InputEvent_5
----------------------------------------------------------------
`boolean isShiftDown()`: This method returns whether or not the Shift modifier is down on this event.

Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0);
        boolean isShiftDown = event.isShiftDown();
        System.out.println("Is Shift Down: " + isShiftDown);
    }
}
```
================================================================

Sample: 18 InputMethodEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputMethodEvent;
import java.awt.font.TextHitInfo;

public class Main {
    public static void main(String[] args) {
        InputMethodEvent event = new InputMethodEvent(null, 0, null, TextHitInfo.leading(5), TextHitInfo.trailing(10));
        TextHitInfo caret = event.getCaret();
        System.out.println("Caret: " + caret);
    }
}
```
================================================================

Sample: 19 InputMethodEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputMethodEvent;

public class Main {
    public static void main(String[] args) {
        InputMethodEvent event = new InputMethodEvent(null, 0, null, 0, 0, null, 0);
        int committedCharacterCount = event.getCommittedCharacterCount();
        System.out.println("Committed Character Count: " + committedCharacterCount);
    }
}
```
================================================================

Sample: 20 InvocationEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InvocationEvent;

public class Main {
    public static void main(String[] args) {
        InvocationEvent event = new InvocationEvent(new Object(), new Runnable() {
            @Override
            public void run() {
                System.out.println("Executing run() method");
            }
        });
        event.dispatch();
    }
}
```
================================================================

Sample: 21 KeyAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyAdapter keyAdapter = new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                // Your implementation for keyPressed method goes here
            }
        };
    }
}
```
================================================================

Sample: 22 KeyAdapter_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyAdapter keyAdapter = new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                // Add your implementation here
            }
        };
    }
}
```
================================================================

Sample: 23 KeyAdapter_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyAdapter keyAdapter = new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                // Your implementation for keyTyped method
            }
        };
    }
}
```
================================================================

Sample: 24 KeyEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyEvent event = new KeyEvent(null, 0, 0, 0, 0, 'a');
        int keyCode = event.getKeyCode();
        System.out.println("Key code: " + keyCode);
    }
}
```
================================================================

Sample: 25 KeyEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyEvent keyEvent = new KeyEvent(null, 0, 0, 0, 0, 'A');
        char keyChar = keyEvent.getKeyChar();
        System.out.println("Key Character: " + keyChar);
    }
}
```
================================================================

Sample: 26 KeyEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyEvent event = new KeyEvent(null, 0, 0, 0, 0, 'a');
        boolean isActionKey = event.isActionKey();
        System.out.println("Is Action Key: " + isActionKey);
    }
}
```
================================================================

Sample: 27 MouseAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter adapter = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Add your custom implementation here
                System.out.println("Mouse Clicked at: " + e.getX() + ", " + e.getY());
            }
        };
    }
}
```
================================================================

Sample: 28 MouseAdapter_2
----------------------------------------------------------------
`void mouseEntered(MouseEvent e)`: This method is invoked when the mouse enters a component.

Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter adapter = new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                System.out.println("Mouse entered the component");
            }
        };
    }
}
```
================================================================

Sample: 29 MouseAdapter_3
----------------------------------------------------------------
`void mouseExited(MouseEvent e)`: This method is invoked when the mouse exits a component.

Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter adapter = new MouseAdapter() {
            @Override
            public void mouseExited(MouseEvent e) {
                System.out.println("Mouse exited the component");
            }
        };
    }
}
```
================================================================

Sample: 30 MouseAdapter_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter adapter = new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                System.out.println("Mouse pressed at: " + e.getX() + ", " + e.getY());
            }
        };
    }
}
```
================================================================

Sample: 31 MouseAdapter_5
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter adapter = new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                // Add your custom implementation here
                System.out.println("Mouse released at: " + e.getX() + ", " + e.getY());
            }
        };
    }
}
```
================================================================

Sample: 32 MouseEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 100, 50, 1, false);
        int xPosition = event.getX();
        System.out.println("X Position: " + xPosition);
    }
}
```
================================================================

Sample: 33 MouseEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 100, 50, 1, false);
        int yPosition = event.getY();
        System.out.println("Vertical position relative to the component: " + yPosition);
    }
}
```
================================================================

Sample: 34 MouseEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 0, 0, 0, 0, 0, false, 0);
        int button = event.getButton();
        System.out.println("Button clicked: " + button);
    }
}
```
================================================================

Sample: 35 MouseEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 0, 0, 0, false);
        int clickCount = event.getClickCount();
        System.out.println("Number of clicks: " + clickCount);
    }
}
```
================================================================

Sample: 36 MouseMotionAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

public class Main {
    public static void main(String[] args) {
        MouseMotionAdapter adapter = new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                // Add your custom implementation here
                System.out.println("Mouse dragged at: " + e.getX() + ", " + e.getY());
            }
        };
    }
}
```
================================================================

Sample: 37 MouseMotionAdapter_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

public class Main {
    public static void main(String[] args) {
        MouseMotionAdapter adapter = new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                // Your implementation here
            }
        };
    }
}
```
================================================================

Sample: 38 MouseWheelEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        MouseWheelEvent event = new MouseWheelEvent(null, 0, 0, 0, 0, 0, 0, false, MouseWheelEvent.WHEEL_UNIT_SCROLL, 1, 1);
        int rotation = event.getWheelRotation();
        System.out.println("Mouse wheel rotation: " + rotation);
    }
}
```
================================================================

Sample: 39 MouseWheelEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        MouseWheelEvent event = new MouseWheelEvent(null, 0, 0, 0, 0, 0, 0, false, MouseWheelEvent.WHEEL_UNIT_SCROLL, 1, 1);
        int scrollAmount = event.getScrollAmount();
        System.out.println("Scroll Amount: " + scrollAmount);
    }
}
```
================================================================

Sample: 40 MouseWheelEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        MouseWheelEvent event = new MouseWheelEvent(null, 0, 0, 0, 0, 0, 0, false, MouseWheelEvent.WHEEL_UNIT_SCROLL, 0, 0);
        int scrollType = event.getScrollType();
        System.out.println("Scroll Type: " + scrollType);
    }
}
```
================================================================

Sample: 41 WindowAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowAdapter adapter = new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                System.out.println("Window opened");
            }
        };
    }
}
```
================================================================

Sample: 42 WindowAdapter_2
----------------------------------------------------------------
`void windowClosing(WindowEvent e)`: This method is used to handle the event when a window is in the process of being closed. The close operation can be overridden at this point.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowAdapter adapter = new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Add your custom code here to handle the window closing event
                System.out.println("Window is closing");
            }
        };
    }
}
```
================================================================

Sample: 43 WindowAdapter_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowAdapter adapter = new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                System.out.println("Window has been closed");
            }
        };
    }
}
```
================================================================

Sample: 44 WindowAdapter_4
----------------------------------------------------------------
`void windowIconified(WindowEvent e)`: This method is invoked when a window is iconified.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowAdapter adapter = new WindowAdapter() {
            @Override
            public void windowIconified(WindowEvent e) {
                System.out.println("Window iconified");
            }
        };
    }
}
```
================================================================

Sample: 45 WindowAdapter_5
----------------------------------------------------------------
`void windowDeiconified(WindowEvent e)`: This method is invoked when a window is de-iconified.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowAdapter adapter = new WindowAdapter() {
            @Override
            public void windowDeiconified(WindowEvent e) {
                System.out.println("Window de-iconified");
            }
        };
    }
}
```
================================================================

Sample: 46 WindowEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowEvent event = new WindowEvent(null, WindowEvent.WINDOW_STATE_CHANGED);
        int oldState = event.getOldState();
        System.out.println("Previous window state: " + oldState);
    }
}
```
================================================================

Sample: 47 WindowEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowEvent event = new WindowEvent(null, WindowEvent.WINDOW_STATE_CHANGED);
        int newState = event.getNewState();
        System.out.println("New Window State: " + newState);
    }
}
```
================================================================

Sample: 48 WindowEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.Window;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowEvent event = new WindowEvent(new Window(null), WindowEvent.WINDOW_OPENED);
        Window window = event.getWindow();
        System.out.println("Originator of the event: " + window);
    }
}
```
================================================================

