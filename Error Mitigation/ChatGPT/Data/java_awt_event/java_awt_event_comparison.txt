Sample: 0 ActionEvent
----------------------------------------------------------------
1. `Object getSource()`: This method returns the object on which the event initially occurred.
2. `String getActionCommand()`: This method returns the command string associated with this action.
3. `long getWhen()`: This method returns the time when the event occurred.
4. `String paramString()`: This method returns a parameter string identifying this action event.
5. `void setActionCommand(String command)`: This method sets the command string for this action event.
================================================================

Sample: 1 AdjustmentEvent
----------------------------------------------------------------
1. int getAdjustmentType(): This method returns the type of adjustment event (UNIT_INCREMENT, UNIT_DECREMENT, BLOCK_INCREMENT, BLOCK_DECREMENT, TRACK).
2. int getValue(): This method returns the current value of the adjustable object that fired the event.
3. int getAdjustable(): This method returns the Adjustable object that fired the event.
4. int getAdjustmentID(): This method returns the ID of the adjustment event (ADJUSTMENT_VALUE_CHANGED).
5. String paramString(): This method returns a parameter string identifying this event.
================================================================

Sample: 2 AWTEventListenerProxy
----------------------------------------------------------------
1. `void eventDispatched(AWTEvent event)`: This method is called when a specific event is dispatched to an AWTEventListener.
2. `long getEventMask()`: This method returns the event mask for which this AWTEventListenerProxy was created.
3. `AWTEventListener getListener()`: This method returns the AWTEventListener associated with this AWTEventListenerProxy.
4. `void remove()`: This method removes this AWTEventListenerProxy from the AWT event listener list.
5. `void setEventMask(long mask)`: This method sets the event mask for this AWTEventListenerProxy.
================================================================

Sample: 3 ComponentAdapter
----------------------------------------------------------------
1. void componentResized(ComponentEvent e)
2. void componentMoved(ComponentEvent e)
3. void componentShown(ComponentEvent e)
4. void componentHidden(ComponentEvent e)
================================================================

Sample: 4 ComponentEvent
----------------------------------------------------------------
1. `int getComponentId()`: This method returns the identifier for the component that generated the event.
2. `Dimension getSize()`: This method returns the size of the component after the event.
3. `Point getLocation()`: This method returns the location of the component after the event.
4. `boolean isConsumed()`: This method returns whether or not the event has been consumed.
5. `boolean isPreferredSizeSet()`: This method returns whether the preferred size has been set for the component.
================================================================

Sample: 5 ContainerAdapter
----------------------------------------------------------------
1. void componentAdded(ContainerEvent e)
2. void componentRemoved(ContainerEvent e)
================================================================

Sample: 6 ContainerEvent
----------------------------------------------------------------
1. `Component getChild()`: Returns the component that was added or removed.
2. `int getChangeFlags()`: Returns the type of change (COMPONENT_ADDED or COMPONENT_REMOVED).
3. `Container getContainer()`: Returns the container on which the event occurred.
4. `String paramString()`: Returns a parameter string identifying this event.
5. `String toString()`: Returns a string representation of this event.
================================================================

Sample: 7 FocusAdapter
----------------------------------------------------------------
1. `void focusGained(FocusEvent e)`: This method is called when a component gains the keyboard focus.
2. `void focusLost(FocusEvent e)`: This method is called when a component loses the keyboard focus.
================================================================

Sample: 8 FocusEvent
----------------------------------------------------------------
1. `Component getOppositeComponent()`: Returns the Component that lost or gained the focus.
2. `boolean isTemporary()`: Returns whether or not this focus event is a temporary focus event.
3. `void setSource(Component source)`: Sets the source of this event.
4. `String paramString()`: Returns a parameter string identifying this event.
5. `void consume()`: Consumes this event, if this event can be consumed.
================================================================

Sample: 9 HierarchyBoundsAdapter
----------------------------------------------------------------
1. void ancestorMoved(HierarchyEvent e)
2. void ancestorResized(HierarchyEvent e)
3. void ancestorMovedAndResized(HierarchyEvent e)
4. void hierarchyChanged(HierarchyEvent e)
================================================================

Sample: 10 HierarchyEvent
----------------------------------------------------------------
1. int getChangeFlags(): This method returns the flags describing the changes in the hierarchy.
2. Component getChanged(): This method returns the Component at the top of the hierarchy which has changed.
3. long getWhen(): This method returns the timestamp of when the event occurred.
4. void setChanged(Component changed): This method sets the Component at the top of the hierarchy which has changed.
5. void setChangeFlags(int changeFlags): This method sets the flags describing the changes in the hierarchy.
================================================================

Sample: 11 InputEvent
----------------------------------------------------------------
1. `int getModifiers()`: This method returns the modifiers associated with the event.
2. `long getWhen()`: This method returns the time when the event occurred.
3. `int getModifiersEx()`: This method returns the extended modifiers associated with the event.
4. `boolean isAltDown()`: This method returns whether the Alt key was down when the event occurred.
5. `boolean isShiftDown()`: This method returns whether the Shift key was down when the event occurred.
================================================================

Sample: 12 InputMethodEvent
----------------------------------------------------------------
1. `int getCaret()`: This method returns the caret position in the composed text.
2. `TextHitInfo getCaret()`: This method returns the text hit information corresponding to the caret in the composed text.
3. `AttributedCharacterIterator getCommittedText()`: This method returns an attributed character iterator for the committed text.
4. `int getCommittedCharacterCount()`: This method returns the number of committed characters in the composed text.
5. `int getVisiblePosition(TextHitInfo offset)` : This method returns the visible position for the specified offset in the composed text.
================================================================

Sample: 13 InvocationEvent
----------------------------------------------------------------
1. `void dispatch()`: This method dispatches the event to its target.
2. `Runnable getRunnable()`: This method returns the Runnable associated with this InvocationEvent.
3. `void setBypass()`: This method sets the bypass flag of this event.
4. `void setNotified()`: This method sets the notified flag of this event.
5. `void setUnready()`: This method sets the unready flag of this event.
================================================================

Sample: 14 ItemEvent
----------------------------------------------------------------
1. int getStateChange(): This method returns the type of state change (SELECTED or DESELECTED) that occurred.
2. Object getItem(): This method returns the item that was affected by the event.
3. int getItemSelectable(): This method returns the item that can be selected or deselected.
4. String paramString(): This method returns a parameter string identifying this event.
5. String toString(): This method returns a string representation of the ItemEvent.
================================================================

Sample: 15 KeyAdapter
----------------------------------------------------------------
1. `void keyPressed(KeyEvent e)`: This method is called when a key is pressed.
2. `void keyReleased(KeyEvent e)`: This method is called when a key is released.
3. `void keyTyped(KeyEvent e)`: This method is called when a key is typed.
4. `void focusGained(FocusEvent e)`: This method is called when a component gains the keyboard focus.
5. `void focusLost(FocusEvent e)`: This method is called when a component loses the keyboard focus.
================================================================

Sample: 16 KeyEvent
----------------------------------------------------------------
1. `int getKeyCode()`: This method returns the integer keyCode for the key that was pressed.
2. `char getKeyChar()`: This method returns the character generated by the key event.
3. `boolean isActionKey()`: This method returns true if the key event is an action key.
4. `int getModifiers()`: This method returns the modifiers associated with the key event.
5. `long getWhen()`: This method returns the timestamp when the key event occurred.
================================================================

Sample: 17 MouseAdapter
----------------------------------------------------------------
1. `void mouseClicked(MouseEvent e)`: This method is called when a mouse button is clicked.
2. `void mouseEntered(MouseEvent e)`: This method is called when the mouse enters a component.
3. `void mouseExited(MouseEvent e)`: This method is called when the mouse exits a component.
4. `void mousePressed(MouseEvent e)`: This method is called when a mouse button is pressed.
5. `void mouseReleased(MouseEvent e)`: This method is called when a mouse button is released.
================================================================

Sample: 18 MouseEvent
----------------------------------------------------------------
1. `int getX()`: Returns the horizontal x position of the event.
2. `int getY()`: Returns the vertical y position of the event.
3. `int getButton()`: Returns the button that changed state.
4. `int getClickCount()`: Returns the number of mouse clicks associated with this event.
5. `Component getSource()`: Returns the object on which the event initially occurred.
================================================================

Sample: 19 MouseMotionAdapter
----------------------------------------------------------------
1. `void mouseDragged(MouseEvent e)`: This method is called when a mouse is dragged with a button down.
2. `void mouseMoved(MouseEvent e)`: This method is called when the mouse is moved with no buttons down.
3. `void mouseEntered(MouseEvent e)`: This method is called when the mouse enters a component.
4. `void mouseExited(MouseEvent e)`: This method is called when the mouse exits a component.
5. `void mouseWheelMoved(MouseWheelEvent e)`: This method is called when the mouse wheel is rotated.
================================================================

Sample: 20 MouseWheelEvent
----------------------------------------------------------------
1. `int getWheelRotation()`: This method returns the number of notches the mouse wheel was rotated.
2. `int getScrollAmount()`: This method returns the number of units that should be scrolled per notch.
3. `int getScrollType()`: This method returns the type of scrolling that should take place.
4. `boolean isShiftDown()`: This method returns whether or not the Shift modifier is down on this event.
5. `boolean isControlDown()`: This method returns whether or not the Control modifier is down on this event.
================================================================

Sample: 21 PaintEvent
----------------------------------------------------------------
1. void setUpdateRect(Rectangle r)
2. Rectangle getUpdateRect()
3. void setUpdateClip(Shape clip)
4. Shape getUpdateClip()
5. void setUpdateRegion(Region region)
================================================================

Sample: 22 TextEvent
----------------------------------------------------------------
1. void setText(String text)
2. String getText()
================================================================

Sample: 23 WindowAdapter
----------------------------------------------------------------
1. `void windowOpened(WindowEvent e)`: This method is called when the window is first made visible.
2. `void windowClosing(WindowEvent e)`: This method is called when the user attempts to close the window.
3. `void windowClosed(WindowEvent e)`: This method is called after the window has been closed.
4. `void windowIconified(WindowEvent e)`: This method is called when the window is minimized.
5. `void windowDeiconified(WindowEvent e)`: This method is called when the window is restored from a minimized state.
================================================================

Sample: 24 WindowEvent
----------------------------------------------------------------
1. `int getOldState()`: This method returns the previous state of the window.
2. `int getNewState()`: This method returns the new state of the window.
3. `Window getWindow()`: This method returns the Window object for the window on which the event initially occurred.
4. `void setOldState(int oldState)`: This method sets the previous state of the window.
5. `void setNewState(int newState)`: This method sets the new state of the window.
================================================================

