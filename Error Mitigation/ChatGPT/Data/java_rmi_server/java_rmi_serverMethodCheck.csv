Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,LogStream,1,void close(),False
0,LogStream,2,void flush(),False
0,LogStream,3,void write(String s),False
0,LogStream,4,void write(byte[] b),False
0,LogStream,5,void write(int b),True
1,ObjID,1,int hashCode(),True
1,ObjID,2,boolean equals(Object obj),True
1,ObjID,3,ObjID read(ObjectInput in) throws IOException,True
1,ObjID,4,void write(ObjectOutput out) throws IOException,True
1,ObjID,5,String toString(),True
2,Operation,1,void exportObject(Remote obj),False
2,Operation,2,Remote toStub(Remote obj),False
2,Operation,3,"void unexportObject(Remote obj, boolean force)",False
2,Operation,4,String getLog(),False
2,Operation,5,void setLog(String log),False
3,RemoteObject,1,RemoteRef getRef(),True
3,RemoteObject,2,String getRefClass(),False
3,RemoteObject,3,void setRef(RemoteRef ref),False
3,RemoteObject,4,void setRefClass(String refClass),False
3,RemoteObject,5,void done(RemoteCall call),False
4,RemoteObjectInvocationHandler,1,"Object invoke(Remote obj, Method method, Object[] args)",False
4,RemoteObjectInvocationHandler,2,"Remote getProxyClass(ClassLoader loader, Class<?>... interfaces)",False
4,RemoteObjectInvocationHandler,3,RemoteObjectInvocationHandler(Remote obj),False
4,RemoteObjectInvocationHandler,4,Object getTarget(),False
4,RemoteObjectInvocationHandler,5,void setTarget(Remote obj),False
5,RemoteServer,1,String getClientHost(),True
5,RemoteServer,2,int getLog(),False
5,RemoteServer,3,void setLog(int newLog),False
5,RemoteServer,4,"void setRef(ObjID id, Remote obj)",False
5,RemoteServer,5,void setSocketFactory(RMIClientSocketFactory csf),False
6,RemoteStub,1,Object clone(),False
6,RemoteStub,2,String getRefClass(String refClassName),False
6,RemoteStub,3,Remote toStub(Remote obj),False
6,RemoteStub,4,"void setRefClass(String refClassName, String stubClassName)",False
6,RemoteStub,5,void setLog(OutputStream out),False
7,RMIClassLoader,1,"Class<?> loadClass(String codebase, String name)",True
7,RMIClassLoader,2,"Class<?> loadClass(URL codebase, String name)",True
7,RMIClassLoader,3,Class<?> loadClass(String name),True
7,RMIClassLoader,4,"Class<?> loadProxyClass(String codebase, String[] interfaces)",False
7,RMIClassLoader,5,"Class<?> loadProxyClass(URL codebase, String[] interfaces)",False
8,RMIClassLoaderSpi,1,"Class<?> loadClass(String codebase, String name)",False
8,RMIClassLoaderSpi,2,"Class<?> loadProxyClass(String codebase, String[] interfaces)",False
8,RMIClassLoaderSpi,3,ClassLoader getClassLoader(String codebase),True
8,RMIClassLoaderSpi,4,String getClassAnnotation(Class<?> cl),True
8,RMIClassLoaderSpi,5,String getLoaderAnnotation(ClassLoader loader),False
9,RMISocketFactory,1,ServerSocket createServerSocket(int port),True
9,RMISocketFactory,2,"Socket createSocket(String host, int port)",True
9,RMISocketFactory,3,int hashCode(),False
9,RMISocketFactory,4,boolean equals(Object obj),False
9,RMISocketFactory,5,String toString(),False
10,UID,1,int hashCode(),True
10,UID,2,boolean equals(Object obj),True
10,UID,3,String toString(),True
10,UID,4,byte[] marshal(),False
10,UID,5,UID read(DataInput in) throws IOException,True
11,UnicastRemoteObject,1,RemoteRef getRef(),False
11,UnicastRemoteObject,2,String getClientHost(),False
11,UnicastRemoteObject,3,Object clone(),True
11,UnicastRemoteObject,4,void exportObject(Remote obj),False
11,UnicastRemoteObject,5,"Remote exportObject(Remote obj, int port)",True
