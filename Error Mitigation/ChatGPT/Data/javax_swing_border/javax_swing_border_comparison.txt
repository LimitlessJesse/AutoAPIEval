Sample: 0 AbstractBorder
----------------------------------------------------------------
1. `Insets getBorderInsets(Component c)`: This method returns the border's insets for the specified component.
2. `boolean isBorderOpaque()`: This method returns whether or not the border is opaque.
3. `void paintBorder(Component c, Graphics g, int x, int y, int width, int height)`: This method paints the border for the specified component with the specified position and size.
4. `void setBorderInsets(Component c, Insets insets)`: This method sets the border's insets for the specified component.
5. `void setBorderOpaque(boolean isOpaque)`: This method sets whether or not the border is opaque.
================================================================

Sample: 1 BevelBorder
----------------------------------------------------------------
1. `int getBevelType()`: This method returns the type of bevel for the border.
2. `int getHighlightOuterColor()`: This method returns the highlight outer color of the border.
3. `int getHighlightInnerColor()`: This method returns the highlight inner color of the border.
4. `int getShadowOuterColor()`: This method returns the shadow outer color of the border.
5. `int getShadowInnerColor()`: This method returns the shadow inner color of the border.
================================================================

Sample: 2 CompoundBorder
----------------------------------------------------------------
1. `Border getInsideBorder()`: This method returns the inside Border object of the CompoundBorder.
2. `Border getOutsideBorder()`: This method returns the outside Border object of the CompoundBorder.
3. `void setInsideBorder(Border insideBorder)`: This method sets the inside Border object of the CompoundBorder.
4. `void setOutsideBorder(Border outsideBorder)`: This method sets the outside Border object of the CompoundBorder.
5. `CompoundBorder(Border outsideBorder, Border insideBorder)`: Constructor that creates a CompoundBorder with the specified outside and inside Border objects.
================================================================

Sample: 3 EmptyBorder
----------------------------------------------------------------
1. `Insets getBorderInsets(Component c)`: This method returns the border's insets for the specified component.
2. `boolean isBorderOpaque()`: This method returns whether or not the border is opaque.
3. `void setBorderInsets(Component c, Insets insets)`: This method sets the border's insets for the specified component.
4. `void setBorderOpaque(boolean isOpaque)`: This method sets whether or not the border is opaque.
5. `EmptyBorder(int top, int left, int bottom, int right)`: This is a constructor that creates an empty border with the specified insets.
================================================================

Sample: 4 EtchedBorder
----------------------------------------------------------------
1. `int getEtchType()`: This method returns the type of etching for the border.
2. `Color getHighlightColor()`: This method returns the highlight color of the border.
3. `Color getShadowColor()`: This method returns the shadow color of the border.
4. `void setEtchType(int etchType)`: This method sets the type of etching for the border.
5. `void setHighlightColor(Color highlight)`: This method sets the highlight color of the border.
================================================================

Sample: 5 LineBorder
----------------------------------------------------------------
1. `int getThickness()`: This method returns the thickness of the line border.
2. `Color getLineColor()`: This method returns the color of the line border.
3. `void setThickness(int thickness)`: This method sets the thickness of the line border.
4. `void setLineColor(Color color)`: This method sets the color of the line border.
5. `LineBorder(Color color, int thickness, boolean roundedCorners)`: Constructor that creates a line border with the specified color, thickness, and rounded corners.
================================================================

Sample: 6 MatteBorder
----------------------------------------------------------------
1. `Color getMatteColor()`: This method returns the color used for the matte border.
2. `int getTileIconWidth()`: This method returns the width of the tiled icon used for the matte border.
3. `int getTileIconHeight()`: This method returns the height of the tiled icon used for the matte border.
4. `int getTileIconXOffset()`: This method returns the x-offset of the tiled icon used for the matte border.
5. `int getTileIconYOffset()`: This method returns the y-offset of the tiled icon used for the matte border.
================================================================

Sample: 7 SoftBevelBorder
----------------------------------------------------------------
1. `int getBevelType()`: This method returns the type of bevel for the border.
2. `Color getHighlightInnerColor()`: This method returns the highlight inner color of the border.
3. `Color getShadowInnerColor()`: This method returns the shadow inner color of the border.
4. `int getHighlightOuter()`: This method returns the size of the highlight outer border.
5. `int getShadowOuter()`: This method returns the size of the shadow outer border.
================================================================

Sample: 8 StrokeBorder
----------------------------------------------------------------
1. `Stroke getStroke()`: This method returns the stroke used for this border.
2. `void setStroke(Stroke s)`: This method sets the stroke used for this border to the specified stroke.
3. `Paint getPaint()`: This method returns the paint used for this border.
4. `void setPaint(Paint p)`: This method sets the paint used for this border to the specified paint.
5. `Insets getBorderInsets(Component c)`: This method returns the insets of the border around the specified component.
================================================================

Sample: 9 TitledBorder
----------------------------------------------------------------
1. `String getTitle()`: This method returns the title of the border as a String.
2. `void setTitle(String title)`: This method sets the title of the border to the specified String.
3. `int getTitlePosition()`: This method returns the position of the title within the border.
4. `void setTitlePosition(int titlePosition)`: This method sets the position of the title within the border.
5. `int getTitleJustification()`: This method returns the justification of the title within the border.
================================================================

