Sample Number,ClassName,Snippet Number,Method,Exist,Description
0,AbstractExecutorService,1,void shutdown(),False
0,AbstractExecutorService,2,List<Runnable> shutdownNow(),False
0,AbstractExecutorService,3,boolean isShutdown(),False
0,AbstractExecutorService,4,boolean isTerminated(),False
0,AbstractExecutorService,5,"boolean awaitTermination(long timeout, TimeUnit unit) throws InterruptedException",False
1,ArrayBlockingQueue,1,boolean offer(E e),True
1,ArrayBlockingQueue,2,E poll(),True
1,ArrayBlockingQueue,3,E peek(),True
1,ArrayBlockingQueue,4,int remainingCapacity(),True
1,ArrayBlockingQueue,5,int size(),True
2,CompletableFuture,1,CompletableFuture<T> complete(T value),False
2,CompletableFuture,2,"CompletableFuture<T> exceptionally(Function<Throwable, ? extends T> fn)",True
2,CompletableFuture,3,"CompletableFuture<T> thenApply(Function<? super T,? extends U> fn)",False
2,CompletableFuture,4,CompletableFuture<Void> thenAccept(Consumer<? super T> action),True
2,CompletableFuture,5,"CompletableFuture<T> exceptionallyCompose(Function<Throwable, ? extends CompletionStage<T>> fn)",False
3,ConcurrentHashMap,1,"V put(K key, V value)",True
3,ConcurrentHashMap,2,V get(Object key),True
3,ConcurrentHashMap,3,V remove(Object key),True
3,ConcurrentHashMap,4,boolean containsKey(Object key),True
3,ConcurrentHashMap,5,Set<K> keySet(),False
4,ConcurrentHashMap.KeySetView,1,boolean addKey(K key),False
4,ConcurrentHashMap.KeySetView,2,boolean removeKey(Object key),False
4,ConcurrentHashMap.KeySetView,3,boolean containsKey(Object key),False
4,ConcurrentHashMap.KeySetView,4,void clear(),True
4,ConcurrentHashMap.KeySetView,5,Spliterator<K> spliterator(),True
5,ConcurrentLinkedDeque,1,boolean offer(E e),True
5,ConcurrentLinkedDeque,2,E poll(),True
5,ConcurrentLinkedDeque,3,E peek(),True
5,ConcurrentLinkedDeque,4,boolean remove(Object o),True
5,ConcurrentLinkedDeque,5,boolean contains(Object o),True
6,ConcurrentLinkedQueue,1,boolean offer(E e),True
6,ConcurrentLinkedQueue,2,E poll(),True
6,ConcurrentLinkedQueue,3,E peek(),True
6,ConcurrentLinkedQueue,4,boolean isEmpty(),True
6,ConcurrentLinkedQueue,5,int size(),True
7,ConcurrentSkipListMap,1,"V putIfAbsent(K key, V value)",True
7,ConcurrentSkipListMap,2,V remove(Object key),True
7,ConcurrentSkipListMap,3,"V replace(K key, V value)",True
7,ConcurrentSkipListMap,4,"V getOrDefault(Object key, V defaultValue)",True
7,ConcurrentSkipListMap,5,"ConcurrentNavigableMap<K,V> subMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive)",True
8,ConcurrentSkipListSet,1,boolean add(E e),True
8,ConcurrentSkipListSet,2,boolean remove(Object o),True
8,ConcurrentSkipListSet,3,E pollFirst(),True
8,ConcurrentSkipListSet,4,E pollLast(),True
8,ConcurrentSkipListSet,5,NavigableSet<E> descendingSet(),True
9,CopyOnWriteArrayList,1,boolean addIfAbsent(E e),True
9,CopyOnWriteArrayList,2,void clear(),True
9,CopyOnWriteArrayList,3,boolean removeAll(Collection<?> c),True
9,CopyOnWriteArrayList,4,"E set(int index, E element)",True
9,CopyOnWriteArrayList,5,Object[] toArray(),True
10,CopyOnWriteArraySet,1,boolean add(E e),True
10,CopyOnWriteArraySet,2,boolean remove(Object o),True
10,CopyOnWriteArraySet,3,boolean contains(Object o),True
10,CopyOnWriteArraySet,4,int size(),True
10,CopyOnWriteArraySet,5,void clear(),True
11,CountDownLatch,1,void await(),True
11,CountDownLatch,2,void countDown(),True
11,CountDownLatch,3,long getCount(),True
11,CountDownLatch,4,"boolean await(long timeout, TimeUnit unit) throws InterruptedException",True
11,CountDownLatch,5,void await(Consumer<Long> consumer),False
12,CountedCompleter,1,void onCompletion(CountedCompleter<?> caller),True
12,CountedCompleter,2,"void onExceptionalCompletion(Throwable ex, CountedCompleter<?> caller)",False
12,CountedCompleter,3,void tryComplete(),True
12,CountedCompleter,4,void propagateCompletion(),True
12,CountedCompleter,5,void setPendingCount(int count),True
13,CyclicBarrier,1,int getParties(),True
13,CyclicBarrier,2,int await(),True
13,CyclicBarrier,3,"int await(long timeout, TimeUnit unit) throws InterruptedException, BrokenBarrierException, TimeoutException",True
13,CyclicBarrier,4,boolean isBroken(),True
13,CyclicBarrier,5,void reset(),True
14,DelayQueue,1,boolean offer(E e),True
14,DelayQueue,2,E poll(),True
14,DelayQueue,3,E peek(),True
14,DelayQueue,4,void put(E e) throws InterruptedException,True
14,DelayQueue,5,E take() throws InterruptedException,True
15,Exchanger,1,V exchange(V x),True
15,Exchanger,2,"V exchange(V x, long timeout, TimeUnit unit) throws InterruptedException, TimeoutException",True
15,Exchanger,3,boolean hasWaitingConsumer(),False
15,Exchanger,4,boolean remove(V x),False
15,Exchanger,5,int getWaitingConsumerCount(),False
16,ExecutorCompletionService,1,Future<V> submit(Callable<V> task),True
16,ExecutorCompletionService,2,"Future<V> submit(Runnable task, V result)",True
16,ExecutorCompletionService,3,Future<V> take(),True
16,ExecutorCompletionService,4,Future<V> poll(),True
16,ExecutorCompletionService,5,"Future<V> poll(long timeout, TimeUnit unit)",True
17,Executors,1,ExecutorService newFixedThreadPool(int nThreads),True
17,Executors,2,ScheduledExecutorService newScheduledThreadPool(int corePoolSize),True
17,Executors,3,ThreadFactory defaultThreadFactory(),True
17,Executors,4,Callable<Void> callable(Runnable task),False
17,Executors,5,ExecutorService unconfigurableExecutorService(ExecutorService executor),True
18,ForkJoinPool,1,void execute(ForkJoinTask<?> task),True
18,ForkJoinPool,2,int getParallelism(),True
18,ForkJoinPool,3,long getStealCount(),True
18,ForkJoinPool,4,int getActiveThreadCount(),True
18,ForkJoinPool,5,boolean isQuiescent(),True
19,ForkJoinTask,1,void fork(),False
19,ForkJoinTask,2,V join(),True
19,ForkJoinTask,3,boolean cancel(boolean mayInterruptIfRunning),True
19,ForkJoinTask,4,boolean isDone(),True
19,ForkJoinTask,5,boolean isCancelled(),True
20,ForkJoinWorkerThread,1,void onStart(),True
20,ForkJoinWorkerThread,2,void onTermination(Throwable exception),True
20,ForkJoinWorkerThread,3,ForkJoinPool getPool(),True
20,ForkJoinWorkerThread,4,int getPoolIndex(),True
20,ForkJoinWorkerThread,5,void setAsyncMode(boolean async),False
21,FutureTask,1,void run(),True
21,FutureTask,2,boolean cancel(boolean mayInterruptIfRunning),True
21,FutureTask,3,boolean isCancelled(),True
21,FutureTask,4,boolean isDone(),True
21,FutureTask,5,"V get() throws InterruptedException, ExecutionException",True
22,LinkedBlockingDeque,1,void put(E e),True
22,LinkedBlockingDeque,2,E take(),True
22,LinkedBlockingDeque,3,boolean offer(E e),True
22,LinkedBlockingDeque,4,E poll(),True
22,LinkedBlockingDeque,5,int remainingCapacity(),True
23,LinkedBlockingQueue,1,boolean offer(E e),True
23,LinkedBlockingQueue,2,E poll(),True
23,LinkedBlockingQueue,3,E peek(),True
23,LinkedBlockingQueue,4,void put(E e),True
23,LinkedBlockingQueue,5,boolean remove(Object o),True
24,LinkedTransferQueue,1,boolean tryTransfer(E e),True
24,LinkedTransferQueue,2,"boolean tryTransfer(E e, long timeout, TimeUnit unit)",True
24,LinkedTransferQueue,3,E take(),True
24,LinkedTransferQueue,4,boolean hasWaitingConsumer(),True
24,LinkedTransferQueue,5,int getWaitingConsumerCount(),True
25,Phaser,1,int register(),True
25,Phaser,2,int arrive(),True
25,Phaser,3,int arriveAndDeregister(),True
25,Phaser,4,int arriveAndAwaitAdvance(),True
25,Phaser,5,int bulkRegister(int parties),True
26,PriorityBlockingQueue,1,boolean offer(E e),True
26,PriorityBlockingQueue,2,E poll(),True
26,PriorityBlockingQueue,3,E peek(),True
26,PriorityBlockingQueue,4,E take() throws InterruptedException,True
26,PriorityBlockingQueue,5,int size(),True
27,RecursiveAction,1,void compute(),True
27,RecursiveAction,2,void invokeAll(ForkJoinTask<?>... tasks),False
27,RecursiveAction,3,void fork(),False
27,RecursiveAction,4,void join(),False
27,RecursiveAction,5,boolean tryUnfork(),False
28,RecursiveTask,1,V compute(),True
28,RecursiveTask,2,void completeExceptionally(Throwable ex),False
28,RecursiveTask,3,ForkJoinTask<V> fork(),False
28,RecursiveTask,4,V join(),False
28,RecursiveTask,5,boolean tryUnfork(),False
29,ScheduledThreadPoolExecutor,1,"ScheduledFuture<?> schedule(Runnable command, long delay, TimeUnit unit)",True
29,ScheduledThreadPoolExecutor,2,"ScheduledFuture<?> schedule(Callable<V> callable, long delay, TimeUnit unit)",False
29,ScheduledThreadPoolExecutor,3,"ScheduledFuture<?> scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit)",True
29,ScheduledThreadPoolExecutor,4,"ScheduledFuture<?> scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit)",True
29,ScheduledThreadPoolExecutor,5,void setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean value),True
30,Semaphore,1,void acquire(),True
30,Semaphore,2,void release(),True
30,Semaphore,3,int availablePermits(),True
30,Semaphore,4,int getQueueLength(),True
30,Semaphore,5,boolean tryAcquire(),True
31,SynchronousQueue,1,void put(E e),True
31,SynchronousQueue,2,E take(),True
31,SynchronousQueue,3,boolean offer(E e),True
31,SynchronousQueue,4,E poll(),True
31,SynchronousQueue,5,int remainingCapacity(),True
33,ThreadPoolExecutor,1,void execute(Runnable command),True
33,ThreadPoolExecutor,2,List<Runnable> shutdownNow(),True
33,ThreadPoolExecutor,3,"boolean awaitTermination(long timeout, TimeUnit unit)",True
33,ThreadPoolExecutor,4,int getActiveCount(),True
33,ThreadPoolExecutor,5,boolean isTerminated(),True
34,ThreadPoolExecutor.AbortPolicy,1,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
34,ThreadPoolExecutor.AbortPolicy,2,void onShutdown(),False
34,ThreadPoolExecutor.AbortPolicy,3,void terminated(),False
34,ThreadPoolExecutor.AbortPolicy,4,"void beforeExecute(Thread t, Runnable r)",False
34,ThreadPoolExecutor.AbortPolicy,5,"void afterExecute(Runnable r, Throwable t)",False
35,ThreadPoolExecutor.CallerRunsPolicy,1,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
35,ThreadPoolExecutor.CallerRunsPolicy,2,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
35,ThreadPoolExecutor.CallerRunsPolicy,3,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
35,ThreadPoolExecutor.CallerRunsPolicy,4,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
35,ThreadPoolExecutor.CallerRunsPolicy,5,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
36,ThreadPoolExecutor.DiscardOldestPolicy,1,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
36,ThreadPoolExecutor.DiscardOldestPolicy,2,String toString(),False
36,ThreadPoolExecutor.DiscardOldestPolicy,3,boolean equals(Object obj),False
36,ThreadPoolExecutor.DiscardOldestPolicy,4,int hashCode(),False
36,ThreadPoolExecutor.DiscardOldestPolicy,5,DiscardOldestPolicy clone(),False
37,ThreadPoolExecutor.DiscardPolicy,1,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
37,ThreadPoolExecutor.DiscardPolicy,2,void discardPolicy(),False
37,ThreadPoolExecutor.DiscardPolicy,3,void onRejectedTask(Runnable task),False
37,ThreadPoolExecutor.DiscardPolicy,4,"void handleRejectedTask(Runnable task, ThreadPoolExecutor executor)",False
37,ThreadPoolExecutor.DiscardPolicy,5,void discardRejectedTask(Runnable task),False
