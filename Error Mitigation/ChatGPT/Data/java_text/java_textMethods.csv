ClassName,Method,Return Type,Description
Annotation,getValue(),Object,"Returns the value of the attribute, which may be null."
Annotation,toString(),String,Returns the String representation of this Annotation.
AttributedCharacterIterator.Attribute,equals(Object obj),boolean,Compares two objects for equality.
AttributedCharacterIterator.Attribute,getName(),protected String,Returns the name of the attribute.
AttributedCharacterIterator.Attribute,hashCode(),int,Returns a hash code value for the object.
AttributedCharacterIterator.Attribute,readResolve(),protected Object,Resolves instances being deserialized to the predefined constants.
AttributedCharacterIterator.Attribute,toString(),String,Returns a string representation of the object.
AttributedString,"addAttribute(AttributedCharacterIterator.Attribute attribute, Object value)",void,Adds an attribute to the entire string.
AttributedString,"addAttribute(AttributedCharacterIterator.Attribute attribute, Object value, int beginIndex, int endIndex)",void,Adds an attribute to a subrange of the string.
AttributedString,"addAttributes(Map<? extends AttributedCharacterIterator.Attribute,?> attributes, int beginIndex, int endIndex)",void,Adds a set of attributes to a subrange of the string.
AttributedString,getIterator(),AttributedCharacterIterator,Creates an AttributedCharacterIterator instance that provides access to the entire contents of this string.
AttributedString,getIterator(AttributedCharacterIterator.Attribute[] attributes),AttributedCharacterIterator,Creates an AttributedCharacterIterator instance that provides access to selected contents of this string.
AttributedString,"getIterator(AttributedCharacterIterator.Attribute[] attributes, int beginIndex, int endIndex)",AttributedCharacterIterator,Creates an AttributedCharacterIterator instance that provides access to selected contents of this string.
Bidi,baseIsLeftToRight(),boolean,Return true if the base direction is left-to-right.
Bidi,"createLineBidi(int lineStart, int lineLimit)",Bidi,Create a Bidi object representing the bidi information on a line of text within the paragraph represented by the current Bidi.
Bidi,getBaseLevel(),int,"Return the base level (0 if left-to-right, 1 if right-to-left)."
Bidi,getLength(),int,Return the length of text in the line.
Bidi,getLevelAt(int offset),int,Return the resolved level of the character at offset.
Bidi,getRunCount(),int,Return the number of level runs.
Bidi,getRunLevel(int run),int,Return the level of the nth logical run in this line.
Bidi,getRunLimit(int run),int,"Return the index of the character past the end of the nth logical run in this line, as an offset from the start of the line."
Bidi,getRunStart(int run),int,"Return the index of the character at the start of the nth logical run in this line, as an offset from the start of the line."
Bidi,isLeftToRight(),boolean,Return true if the line is all left-to-right text and the base direction is left-to-right.
Bidi,isMixed(),boolean,Return true if the line is not left-to-right or right-to-left.
Bidi,isRightToLeft(),boolean,"Return true if the line is all right-to-left text, and the base direction is right-to-left."
Bidi,"reorderVisually(byte[] levels, int levelStart, Object[] objects, int objectStart, int count)",static void,Reorder the objects in the array into visual order based on their levels.
Bidi,"requiresBidi(char[] text, int start, int limit)",static boolean,Return true if the specified text requires bidi analysis.
Bidi,toString(),String,"Display the bidi internal state, used in debugging."
BreakIterator,clone(),Object,Create a copy of this iterator
BreakIterator,current(),abstract int,"Returns character index of the text boundary that was most recently returned by next(), next(int), previous(), first(), last(), following(int) or preceding(int)."
BreakIterator,first(),abstract int,Returns the first boundary.
BreakIterator,following(int offset),abstract int,Returns the first boundary following the specified character offset.
BreakIterator,getAvailableLocales(),static Locale[],Returns an array of all locales for which the get*Instance methods of this class can return localized instances.
BreakIterator,getCharacterInstance(),static BreakIterator,Returns a new BreakIterator instance for character breaks for the default locale.
BreakIterator,getCharacterInstance(Locale locale),static BreakIterator,Returns a new BreakIterator instance for character breaks for the given locale.
BreakIterator,getLineInstance(),static BreakIterator,Returns a new BreakIterator instance for line breaks for the default locale.
BreakIterator,getLineInstance(Locale locale),static BreakIterator,Returns a new BreakIterator instance for line breaks for the given locale.
BreakIterator,getSentenceInstance(),static BreakIterator,Returns a new BreakIterator instance for sentence breaks for the default locale.
BreakIterator,getSentenceInstance(Locale locale),static BreakIterator,Returns a new BreakIterator instance for sentence breaks for the given locale.
BreakIterator,getText(),abstract CharacterIterator,Get the text being scanned
BreakIterator,getWordInstance(),static BreakIterator,Returns a new BreakIterator instance for word breaks for the default locale.
BreakIterator,getWordInstance(Locale locale),static BreakIterator,Returns a new BreakIterator instance for word breaks for the given locale.
BreakIterator,isBoundary(int offset),boolean,Returns true if the specified character offset is a text boundary.
BreakIterator,last(),abstract int,Returns the last boundary.
BreakIterator,next(),abstract int,Returns the boundary following the current boundary.
BreakIterator,next(int n),abstract int,Returns the nth boundary from the current boundary.
BreakIterator,preceding(int offset),int,Returns the last boundary preceding the specified character offset.
BreakIterator,previous(),abstract int,Returns the boundary preceding the current boundary.
BreakIterator,setText(CharacterIterator newText),abstract void,Set a new text for scanning.
BreakIterator,setText(String newText),void,Set a new text string to be scanned.
ChoiceFormat,applyPattern(String newPattern),void,Sets the pattern.
ChoiceFormat,clone(),Object,Overrides Cloneable
ChoiceFormat,equals(Object obj),boolean,Equality comparision between two
ChoiceFormat,"format(double number, StringBuffer toAppendTo, FieldPosition status)",StringBuffer,Returns pattern with formatted double.
ChoiceFormat,"format(long number, StringBuffer toAppendTo, FieldPosition status)",StringBuffer,Specialization of format.
ChoiceFormat,getFormats(),Object[],Get the formats passed in the constructor.
ChoiceFormat,getLimits(),double[],Get the limits passed in the constructor.
ChoiceFormat,hashCode(),int,Generates a hash code for the message format object.
ChoiceFormat,nextDouble(double d),static double,Finds the least double greater than d.
ChoiceFormat,"nextDouble(double d, boolean positive)",static double,"Finds the least double greater than d (if positive is true), or the greatest double less than d (if positive is false)."
ChoiceFormat,"parse(String text, ParsePosition status)",Number,Parses a Number from the input text.
ChoiceFormat,previousDouble(double d),static double,Finds the greatest double less than d.
ChoiceFormat,"setChoices(double[] limits, String[] formats)",void,Set the choices to be used in formatting.
ChoiceFormat,toPattern(),String,Gets the pattern.
CollationElementIterator,getMaxExpansion(int order),int,Return the maximum length of any expansion sequences that end with the specified comparison order.
CollationElementIterator,getOffset(),int,Returns the character offset in the original text corresponding to the next collation element.
CollationElementIterator,next(),int,Get the next collation element in the string.
CollationElementIterator,previous(),int,Get the previous collation element in the string.
CollationElementIterator,primaryOrder(int order),static int,Return the primary component of a collation element.
CollationElementIterator,reset(),void,Resets the cursor to the beginning of the string.
CollationElementIterator,secondaryOrder(int order),static short,Return the secondary component of a collation element.
CollationElementIterator,setOffset(int newOffset),void,"Sets the iterator to point to the collation element corresponding to the specified character (the parameter is a CHARACTER offset in the original string, not an offset into its corresponding sequence of collation elements)."
CollationElementIterator,setText(CharacterIterator source),void,Set a new string over which to iterate.
CollationElementIterator,setText(String source),void,Set a new string over which to iterate.
CollationElementIterator,tertiaryOrder(int order),static short,Return the tertiary component of a collation element.
CollationKey,compareTo(CollationKey target),abstract int,Compare this CollationKey to the target CollationKey.
CollationKey,getSourceString(),String,Returns the String that this CollationKey represents.
CollationKey,toByteArray(),abstract byte[],Converts the CollationKey to a sequence of bits.
Collator,clone(),Object,Overrides Cloneable
Collator,"compare(Object o1, Object o2)",int,Compares its two arguments for order.
Collator,"compare(String source, String target)",abstract int,Compares the source string to the target string according to the collation rules for this Collator.
Collator,equals(Object that),boolean,Compares the equality of two Collators.
Collator,"equals(String source, String target)",boolean,Convenience method for comparing the equality of two strings based on this Collator's collation rules.
Collator,getAvailableLocales(),static Locale[],Returns an array of all locales for which the getInstance methods of this class can return localized instances.
Collator,getCollationKey(String source),abstract CollationKey,Transforms the String into a series of bits that can be compared bitwise to other CollationKeys.
Collator,getDecomposition(),int,Get the decomposition mode of this Collator.
Collator,getInstance(),static Collator,Gets the Collator for the current default locale.
Collator,getInstance(Locale desiredLocale),static Collator,Gets the Collator for the desired locale.
Collator,getStrength(),int,Returns this Collator's strength property.
Collator,hashCode(),abstract int,Generates the hash code for this Collator.
Collator,setDecomposition(int decompositionMode),void,Set the decomposition mode of this Collator.
Collator,setStrength(int newStrength),void,Sets this Collator's strength property.
DateFormat,clone(),Object,Overrides Cloneable
DateFormat,equals(Object obj),boolean,Overrides equals
DateFormat,format(Date date),String,Formats a Date into a date/time string.
DateFormat,"format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)",abstract StringBuffer,Formats a Date into a date/time string.
DateFormat,"format(Object obj, StringBuffer toAppendTo, FieldPosition fieldPosition)",StringBuffer,Overrides Format.
DateFormat,getAvailableLocales(),static Locale[],Returns an array of all locales for which the get*Instance methods of this class can return localized instances.
DateFormat,getCalendar(),Calendar,Gets the calendar associated with this date/time formatter.
DateFormat,getDateInstance(),static DateFormat,Gets the date formatter with the default formatting style for the default FORMAT locale.
DateFormat,getDateInstance(int style),static DateFormat,Gets the date formatter with the given formatting style for the default FORMAT locale.
DateFormat,"getDateInstance(int style, Locale aLocale)",static DateFormat,Gets the date formatter with the given formatting style for the given locale.
DateFormat,getDateTimeInstance(),static DateFormat,Gets the date/time formatter with the default formatting style for the default FORMAT locale.
DateFormat,"getDateTimeInstance(int dateStyle, int timeStyle)",static DateFormat,Gets the date/time formatter with the given date and time formatting styles for the default FORMAT locale.
DateFormat,"getDateTimeInstance(int dateStyle, int timeStyle, Locale aLocale)",static DateFormat,Gets the date/time formatter with the given formatting styles for the given locale.
DateFormat,getInstance(),static DateFormat,Get a default date/time formatter that uses the SHORT style for both the date and the time.
DateFormat,getNumberFormat(),NumberFormat,Gets the number formatter which this date/time formatter uses to format and parse a time.
DateFormat,getTimeInstance(),static DateFormat,Gets the time formatter with the default formatting style for the default FORMAT locale.
DateFormat,getTimeInstance(int style),static DateFormat,Gets the time formatter with the given formatting style for the default FORMAT locale.
DateFormat,"getTimeInstance(int style, Locale aLocale)",static DateFormat,Gets the time formatter with the given formatting style for the given locale.
DateFormat,getTimeZone(),TimeZone,Gets the time zone.
DateFormat,hashCode(),int,Overrides hashCode
DateFormat,isLenient(),boolean,Tell whether date/time parsing is to be lenient.
DateFormat,parse(String source),Date,Parses text from the beginning of the given string to produce a date.
DateFormat,"parse(String source, ParsePosition pos)",abstract Date,Parse a date/time string according to the given parse position.
DateFormat,"parseObject(String source, ParsePosition pos)",Object,Parses text from a string to produce a Date.
DateFormat,setCalendar(Calendar newCalendar),void,Set the calendar to be used by this date format.
DateFormat,setLenient(boolean lenient),void,Specify whether or not date/time parsing is to be lenient.
DateFormat,setNumberFormat(NumberFormat newNumberFormat),void,Allows you to set the number formatter.
DateFormat,setTimeZone(TimeZone zone),void,Sets the time zone for the calendar of this DateFormat object.
DateFormat.Field,getCalendarField(),int,Returns the Calendar field associated with this attribute.
DateFormat.Field,ofCalendarField(int calendarField),static DateFormat.Field,Returns the Field constant that corresponds to the Calendar constant calendarField.
DateFormat.Field,readResolve(),protected Object,Resolves instances being deserialized to the predefined constants.
DateFormatSymbols,clone(),Object,Overrides Cloneable
DateFormatSymbols,equals(Object obj),boolean,Override equals
DateFormatSymbols,getAmPmStrings(),String[],Gets ampm strings.
DateFormatSymbols,getAvailableLocales(),static Locale[],Returns an array of all locales for which the getInstance methods of this class can return localized instances.
DateFormatSymbols,getEras(),String[],Gets era strings.
DateFormatSymbols,getInstance(),static DateFormatSymbols,Gets the DateFormatSymbols instance for the default locale.
DateFormatSymbols,getInstance(Locale locale),static DateFormatSymbols,Gets the DateFormatSymbols instance for the specified locale.
DateFormatSymbols,getLocalPatternChars(),String,Gets localized date-time pattern characters.
DateFormatSymbols,getMonths(),String[],Gets month strings.
DateFormatSymbols,getShortMonths(),String[],Gets short month strings.
DateFormatSymbols,getShortWeekdays(),String[],Gets short weekday strings.
DateFormatSymbols,getWeekdays(),String[],Gets weekday strings.
DateFormatSymbols,getZoneStrings(),String[][],Gets time zone strings.
DateFormatSymbols,hashCode(),int,Override hashCode.
DateFormatSymbols,setAmPmStrings(String[] newAmpms),void,Sets ampm strings.
DateFormatSymbols,setEras(String[] newEras),void,Sets era strings.
DateFormatSymbols,setLocalPatternChars(String newLocalPatternChars),void,Sets localized date-time pattern characters.
DateFormatSymbols,setMonths(String[] newMonths),void,Sets month strings.
DateFormatSymbols,setShortMonths(String[] newShortMonths),void,Sets short month strings.
DateFormatSymbols,setShortWeekdays(String[] newShortWeekdays),void,Sets short weekday strings.
DateFormatSymbols,setWeekdays(String[] newWeekdays),void,Sets weekday strings.
DateFormatSymbols,setZoneStrings(String[][] newZoneStrings),void,Sets time zone strings.
DecimalFormat,applyLocalizedPattern(String pattern),void,Apply the given pattern to this Format object.
DecimalFormat,applyPattern(String pattern),void,Apply the given pattern to this Format object.
DecimalFormat,clone(),Object,Standard override; no change in semantics.
DecimalFormat,equals(Object obj),boolean,Overrides equals
DecimalFormat,"format(double number, StringBuffer result, FieldPosition fieldPosition)",StringBuffer,Formats a double to produce a string.
DecimalFormat,"format(long number, StringBuffer result, FieldPosition fieldPosition)",StringBuffer,Format a long to produce a string.
DecimalFormat,"format(Object number, StringBuffer toAppendTo, FieldPosition pos)",StringBuffer,Formats a number and appends the resulting text to the given string buffer.
DecimalFormat,formatToCharacterIterator(Object obj),AttributedCharacterIterator,Formats an Object producing an AttributedCharacterIterator.
DecimalFormat,getCurrency(),Currency,Gets the currency used by this decimal format when formatting currency values.
DecimalFormat,getDecimalFormatSymbols(),DecimalFormatSymbols,"Returns a copy of the decimal format symbols, which is generally not changed by the programmer or user."
DecimalFormat,getGroupingSize(),int,Return the grouping size.
DecimalFormat,getMaximumFractionDigits(),int,Gets the maximum number of digits allowed in the fraction portion of a number.
DecimalFormat,getMaximumIntegerDigits(),int,Gets the maximum number of digits allowed in the integer portion of a number.
DecimalFormat,getMinimumFractionDigits(),int,Gets the minimum number of digits allowed in the fraction portion of a number.
DecimalFormat,getMinimumIntegerDigits(),int,Gets the minimum number of digits allowed in the integer portion of a number.
DecimalFormat,getMultiplier(),int,"Gets the multiplier for use in percent, per mille, and similar formats."
DecimalFormat,getNegativePrefix(),String,Get the negative prefix.
DecimalFormat,getNegativeSuffix(),String,Get the negative suffix.
DecimalFormat,getPositivePrefix(),String,Get the positive prefix.
DecimalFormat,getPositiveSuffix(),String,Get the positive suffix.
DecimalFormat,getRoundingMode(),RoundingMode,Gets the RoundingMode used in this DecimalFormat.
DecimalFormat,hashCode(),int,Overrides hashCode
DecimalFormat,isDecimalSeparatorAlwaysShown(),boolean,Allows you to get the behavior of the decimal separator with integers.
DecimalFormat,isParseBigDecimal(),boolean,"Returns whether the parse(java.lang.String, java.text.ParsePosition) method returns BigDecimal."
DecimalFormat,"parse(String text, ParsePosition pos)",Number,Parses text from a string to produce a Number.
DecimalFormat,setCurrency(Currency currency),void,Sets the currency used by this number format when formatting currency values.
DecimalFormat,setDecimalFormatSymbols(DecimalFormatSymbols newSymbols),void,"Sets the decimal format symbols, which is generally not changed by the programmer or user."
DecimalFormat,setDecimalSeparatorAlwaysShown(boolean newValue),void,Allows you to set the behavior of the decimal separator with integers.
DecimalFormat,setGroupingSize(int newValue),void,Set the grouping size.
DecimalFormat,setGroupingUsed(boolean newValue),void,Set whether or not grouping will be used in this format.
DecimalFormat,setMaximumFractionDigits(int newValue),void,Sets the maximum number of digits allowed in the fraction portion of a number.
DecimalFormat,setMaximumIntegerDigits(int newValue),void,Sets the maximum number of digits allowed in the integer portion of a number.
DecimalFormat,setMinimumFractionDigits(int newValue),void,Sets the minimum number of digits allowed in the fraction portion of a number.
DecimalFormat,setMinimumIntegerDigits(int newValue),void,Sets the minimum number of digits allowed in the integer portion of a number.
DecimalFormat,setMultiplier(int newValue),void,"Sets the multiplier for use in percent, per mille, and similar formats."
DecimalFormat,setNegativePrefix(String newValue),void,Set the negative prefix.
DecimalFormat,setNegativeSuffix(String newValue),void,Set the negative suffix.
DecimalFormat,setParseBigDecimal(boolean newValue),void,"Sets whether the parse(java.lang.String, java.text.ParsePosition) method returns BigDecimal."
DecimalFormat,setPositivePrefix(String newValue),void,Set the positive prefix.
DecimalFormat,setPositiveSuffix(String newValue),void,Set the positive suffix.
DecimalFormat,setRoundingMode(RoundingMode roundingMode),void,Sets the RoundingMode used in this DecimalFormat.
DecimalFormat,toLocalizedPattern(),String,Synthesizes a localized pattern string that represents the current state of this Format object.
DecimalFormat,toPattern(),String,Synthesizes a pattern string that represents the current state of this Format object.
DecimalFormatSymbols,clone(),Object,Standard override.
DecimalFormatSymbols,equals(Object obj),boolean,Override equals.
DecimalFormatSymbols,getAvailableLocales(),static Locale[],Returns an array of all locales for which the getInstance methods of this class can return localized instances.
DecimalFormatSymbols,getCurrency(),Currency,Gets the currency of these DecimalFormatSymbols.
DecimalFormatSymbols,getCurrencySymbol(),String,Returns the currency symbol for the currency of these DecimalFormatSymbols in their locale.
DecimalFormatSymbols,getDecimalSeparator(),char,Gets the character used for decimal sign.
DecimalFormatSymbols,getDigit(),char,Gets the character used for a digit in a pattern.
DecimalFormatSymbols,getExponentSeparator(),String,Returns the string used to separate the mantissa from the exponent.
DecimalFormatSymbols,getGroupingSeparator(),char,Gets the character used for thousands separator.
DecimalFormatSymbols,getInfinity(),String,Gets the string used to represent infinity.
DecimalFormatSymbols,getInstance(),static DecimalFormatSymbols,Gets the DecimalFormatSymbols instance for the default locale.
DecimalFormatSymbols,getInstance(Locale locale),static DecimalFormatSymbols,Gets the DecimalFormatSymbols instance for the specified locale.
DecimalFormatSymbols,getInternationalCurrencySymbol(),String,Returns the ISO 4217 currency code of the currency of these DecimalFormatSymbols.
DecimalFormatSymbols,getMinusSign(),char,Gets the character used to represent minus sign.
DecimalFormatSymbols,getMonetaryDecimalSeparator(),char,Returns the monetary decimal separator.
DecimalFormatSymbols,getNaN(),String,"Gets the string used to represent ""not a number""."
DecimalFormatSymbols,getPatternSeparator(),char,Gets the character used to separate positive and negative subpatterns in a pattern.
DecimalFormatSymbols,getPercent(),char,Gets the character used for percent sign.
DecimalFormatSymbols,getPerMill(),char,Gets the character used for per mille sign.
DecimalFormatSymbols,getZeroDigit(),char,Gets the character used for zero.
DecimalFormatSymbols,hashCode(),int,Override hashCode.
DecimalFormatSymbols,setCurrency(Currency currency),void,Sets the currency of these DecimalFormatSymbols.
DecimalFormatSymbols,setCurrencySymbol(String currency),void,Sets the currency symbol for the currency of these DecimalFormatSymbols in their locale.
DecimalFormatSymbols,setDecimalSeparator(char decimalSeparator),void,Sets the character used for decimal sign.
DecimalFormatSymbols,setDigit(char digit),void,Sets the character used for a digit in a pattern.
DecimalFormatSymbols,setExponentSeparator(String exp),void,Sets the string used to separate the mantissa from the exponent.
DecimalFormatSymbols,setGroupingSeparator(char groupingSeparator),void,Sets the character used for thousands separator.
DecimalFormatSymbols,setInfinity(String infinity),void,Sets the string used to represent infinity.
DecimalFormatSymbols,setInternationalCurrencySymbol(String currencyCode),void,Sets the ISO 4217 currency code of the currency of these DecimalFormatSymbols.
DecimalFormatSymbols,setMinusSign(char minusSign),void,Sets the character used to represent minus sign.
DecimalFormatSymbols,setMonetaryDecimalSeparator(char sep),void,Sets the monetary decimal separator.
DecimalFormatSymbols,setNaN(String NaN),void,"Sets the string used to represent ""not a number""."
DecimalFormatSymbols,setPatternSeparator(char patternSeparator),void,Sets the character used to separate positive and negative subpatterns in a pattern.
DecimalFormatSymbols,setPercent(char percent),void,Sets the character used for percent sign.
DecimalFormatSymbols,setPerMill(char perMill),void,Sets the character used for per mille sign.
DecimalFormatSymbols,setZeroDigit(char zeroDigit),void,Sets the character used for zero.
FieldPosition,equals(Object obj),boolean,Overrides equals
FieldPosition,getBeginIndex(),int,Retrieves the index of the first character in the requested field.
FieldPosition,getEndIndex(),int,Retrieves the index of the character following the last character in the requested field.
FieldPosition,getField(),int,Retrieves the field identifier.
FieldPosition,getFieldAttribute(),Format.Field,Returns the field identifier as an attribute constant from one of the Field subclasses.
FieldPosition,hashCode(),int,Returns a hash code for this FieldPosition.
FieldPosition,setBeginIndex(int bi),void,Sets the begin index.
FieldPosition,setEndIndex(int ei),void,Sets the end index.
FieldPosition,toString(),String,Return a string representation of this FieldPosition.
Format,clone(),Object,Creates and returns a copy of this object.
Format,format(Object obj),String,Formats an object to produce a string.
Format,"format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",abstract StringBuffer,Formats an object and appends the resulting text to a given string buffer.
Format,formatToCharacterIterator(Object obj),AttributedCharacterIterator,Formats an Object producing an AttributedCharacterIterator.
Format,parseObject(String source),Object,Parses text from the beginning of the given string to produce an object.
Format,"parseObject(String source, ParsePosition pos)",abstract Object,Parses text from a string to produce an object.
MessageFormat,applyPattern(String pattern),void,Sets the pattern used by this message format.
MessageFormat,clone(),Object,Creates and returns a copy of this object.
MessageFormat,equals(Object obj),boolean,Equality comparison between two message format objects
MessageFormat,"format(Object[] arguments, StringBuffer result, FieldPosition pos)",StringBuffer,"Formats an array of objects and appends the MessageFormat's pattern, with format elements replaced by the formatted objects, to the provided StringBuffer."
MessageFormat,"format(Object arguments, StringBuffer result, FieldPosition pos)",StringBuffer,"Formats an array of objects and appends the MessageFormat's pattern, with format elements replaced by the formatted objects, to the provided StringBuffer."
MessageFormat,"format(String pattern, Object... arguments)",static String,Creates a MessageFormat with the given pattern and uses it to format the given arguments.
MessageFormat,formatToCharacterIterator(Object arguments),AttributedCharacterIterator,"Formats an array of objects and inserts them into the MessageFormat's pattern, producing an AttributedCharacterIterator."
MessageFormat,getFormats(),Format[],Gets the formats used for the format elements in the previously set pattern string.
MessageFormat,getFormatsByArgumentIndex(),Format[],Gets the formats used for the values passed into format methods or returned from parse methods.
MessageFormat,getLocale(),Locale,Gets the locale that's used when creating or comparing subformats.
MessageFormat,hashCode(),int,Generates a hash code for the message format object.
MessageFormat,parse(String source),Object[],Parses text from the beginning of the given string to produce an object array.
MessageFormat,"parse(String source, ParsePosition pos)",Object[],Parses the string.
MessageFormat,"parseObject(String source, ParsePosition pos)",Object,Parses text from a string to produce an object array.
MessageFormat,"setFormat(int formatElementIndex, Format newFormat)",void,Sets the format to use for the format element with the given format element index within the previously set pattern string.
MessageFormat,"setFormatByArgumentIndex(int argumentIndex, Format newFormat)",void,Sets the format to use for the format elements within the previously set pattern string that use the given argument index.
MessageFormat,setFormats(Format[] newFormats),void,Sets the formats to use for the format elements in the previously set pattern string.
MessageFormat,setFormatsByArgumentIndex(Format[] newFormats),void,Sets the formats to use for the values passed into format methods or returned from parse methods.
MessageFormat,setLocale(Locale locale),void,Sets the locale to be used when creating or comparing subformats.
MessageFormat,toPattern(),String,Returns a pattern representing the current state of the message format.
MessageFormat.Field,readResolve(),protected Object,Resolves instances being deserialized to the predefined constants.
Normalizer,"isNormalized(CharSequence src, Normalizer.Form form)",static boolean,Determines if the given sequence of char values is normalized.
Normalizer,"normalize(CharSequence src, Normalizer.Form form)",static String,Normalize a sequence of char values.
NumberFormat,clone(),Object,Overrides Cloneable.
NumberFormat,equals(Object obj),boolean,Overrides equals.
NumberFormat,format(double number),String,Specialization of format.
NumberFormat,"format(double number, StringBuffer toAppendTo, FieldPosition pos)",abstract StringBuffer,Specialization of format.
NumberFormat,format(long number),String,Specialization of format.
NumberFormat,"format(long number, StringBuffer toAppendTo, FieldPosition pos)",abstract StringBuffer,Specialization of format.
NumberFormat,"format(Object number, StringBuffer toAppendTo, FieldPosition pos)",StringBuffer,Formats a number and appends the resulting text to the given string buffer.
NumberFormat,getAvailableLocales(),static Locale[],Returns an array of all locales for which the get*Instance methods of this class can return localized instances.
NumberFormat,getCurrency(),Currency,Gets the currency used by this number format when formatting currency values.
NumberFormat,getCurrencyInstance(),static NumberFormat,Returns a currency format for the current default FORMAT locale.
NumberFormat,getCurrencyInstance(Locale inLocale),static NumberFormat,Returns a currency format for the specified locale.
NumberFormat,getInstance(),static NumberFormat,Returns a general-purpose number format for the current default FORMAT locale.
NumberFormat,getInstance(Locale inLocale),static NumberFormat,Returns a general-purpose number format for the specified locale.
NumberFormat,getIntegerInstance(),static NumberFormat,Returns an integer number format for the current default FORMAT locale.
NumberFormat,getIntegerInstance(Locale inLocale),static NumberFormat,Returns an integer number format for the specified locale.
NumberFormat,getMaximumFractionDigits(),int,Returns the maximum number of digits allowed in the fraction portion of a number.
NumberFormat,getMaximumIntegerDigits(),int,Returns the maximum number of digits allowed in the integer portion of a number.
NumberFormat,getMinimumFractionDigits(),int,Returns the minimum number of digits allowed in the fraction portion of a number.
NumberFormat,getMinimumIntegerDigits(),int,Returns the minimum number of digits allowed in the integer portion of a number.
NumberFormat,getNumberInstance(),static NumberFormat,Returns a general-purpose number format for the current default FORMAT locale.
NumberFormat,getNumberInstance(Locale inLocale),static NumberFormat,Returns a general-purpose number format for the specified locale.
NumberFormat,getPercentInstance(),static NumberFormat,Returns a percentage format for the current default FORMAT locale.
NumberFormat,getPercentInstance(Locale inLocale),static NumberFormat,Returns a percentage format for the specified locale.
NumberFormat,getRoundingMode(),RoundingMode,Gets the RoundingMode used in this NumberFormat.
NumberFormat,hashCode(),int,Overrides hashCode.
NumberFormat,isGroupingUsed(),boolean,Returns true if grouping is used in this format.
NumberFormat,isParseIntegerOnly(),boolean,Returns true if this format will parse numbers as integers only.
NumberFormat,parse(String source),Number,Parses text from the beginning of the given string to produce a number.
NumberFormat,"parse(String source, ParsePosition parsePosition)",abstract Number,"Returns a Long if possible (e.g., within the range [Long.MIN_VALUE, Long.MAX_VALUE] and with no decimals), otherwise a Double."
NumberFormat,"parseObject(String source, ParsePosition pos)",Object,Parses text from a string to produce a Number.
NumberFormat,setCurrency(Currency currency),void,Sets the currency used by this number format when formatting currency values.
NumberFormat,setGroupingUsed(boolean newValue),void,Set whether or not grouping will be used in this format.
NumberFormat,setMaximumFractionDigits(int newValue),void,Sets the maximum number of digits allowed in the fraction portion of a number.
NumberFormat,setMaximumIntegerDigits(int newValue),void,Sets the maximum number of digits allowed in the integer portion of a number.
NumberFormat,setMinimumFractionDigits(int newValue),void,Sets the minimum number of digits allowed in the fraction portion of a number.
NumberFormat,setMinimumIntegerDigits(int newValue),void,Sets the minimum number of digits allowed in the integer portion of a number.
NumberFormat,setParseIntegerOnly(boolean value),void,Sets whether or not numbers should be parsed as integers only.
NumberFormat,setRoundingMode(RoundingMode roundingMode),void,Sets the RoundingMode used in this NumberFormat.
NumberFormat.Field,readResolve(),protected Object,Resolves instances being deserialized to the predefined constants.
ParsePosition,equals(Object obj),boolean,Overrides equals
ParsePosition,getErrorIndex(),int,"Retrieve the index at which an error occurred, or -1 if the error index has not been set."
ParsePosition,getIndex(),int,Retrieve the current parse position.
ParsePosition,hashCode(),int,Returns a hash code for this ParsePosition.
ParsePosition,setErrorIndex(int ei),void,Set the index at which a parse error occurred.
ParsePosition,setIndex(int index),void,Set the current parse position.
ParsePosition,toString(),String,Return a string representation of this ParsePosition.
RuleBasedCollator,clone(),Object,Standard override; no change in semantics.
RuleBasedCollator,"compare(String source, String target)",int,Compares the character data stored in two different strings based on the collation rules.
RuleBasedCollator,equals(Object obj),boolean,Compares the equality of two collation objects.
RuleBasedCollator,getCollationElementIterator(CharacterIterator source),CollationElementIterator,Returns a CollationElementIterator for the given CharacterIterator.
RuleBasedCollator,getCollationElementIterator(String source),CollationElementIterator,Returns a CollationElementIterator for the given String.
RuleBasedCollator,getCollationKey(String source),CollationKey,Transforms the string into a series of characters that can be compared with CollationKey.compareTo.
RuleBasedCollator,getRules(),String,Gets the table-based rules for the collation object.
RuleBasedCollator,hashCode(),int,Generates the hash code for the table-based collation object
SimpleDateFormat,applyLocalizedPattern(String pattern),void,Applies the given localized pattern string to this date format.
SimpleDateFormat,applyPattern(String pattern),void,Applies the given pattern string to this date format.
SimpleDateFormat,clone(),Object,Creates a copy of this SimpleDateFormat.
SimpleDateFormat,equals(Object obj),boolean,Compares the given object with this SimpleDateFormat for equality.
SimpleDateFormat,"format(Date date, StringBuffer toAppendTo, FieldPosition pos)",StringBuffer,Formats the given Date into a date/time string and appends the result to the given StringBuffer.
SimpleDateFormat,formatToCharacterIterator(Object obj),AttributedCharacterIterator,Formats an Object producing an AttributedCharacterIterator.
SimpleDateFormat,get2DigitYearStart(),Date,Returns the beginning date of the 100-year period 2-digit years are interpreted as being within.
SimpleDateFormat,getDateFormatSymbols(),DateFormatSymbols,Gets a copy of the date and time format symbols of this date format.
SimpleDateFormat,hashCode(),int,Returns the hash code value for this SimpleDateFormat object.
SimpleDateFormat,"parse(String text, ParsePosition pos)",Date,Parses text from a string to produce a Date.
SimpleDateFormat,set2DigitYearStart(Date startDate),void,Sets the 100-year period 2-digit years will be interpreted as being in to begin on the date the user specifies.
SimpleDateFormat,setDateFormatSymbols(DateFormatSymbols newFormatSymbols),void,Sets the date and time format symbols of this date format.
SimpleDateFormat,toLocalizedPattern(),String,Returns a localized pattern string describing this date format.
SimpleDateFormat,toPattern(),String,Returns a pattern string describing this date format.
StringCharacterIterator,clone(),Object,Creates a copy of this iterator.
StringCharacterIterator,current(),char,Implements CharacterIterator.current() for String.
StringCharacterIterator,equals(Object obj),boolean,Compares the equality of two StringCharacterIterator objects.
StringCharacterIterator,first(),char,Implements CharacterIterator.first() for String.
StringCharacterIterator,getBeginIndex(),int,Implements CharacterIterator.getBeginIndex() for String.
StringCharacterIterator,getEndIndex(),int,Implements CharacterIterator.getEndIndex() for String.
StringCharacterIterator,getIndex(),int,Implements CharacterIterator.getIndex() for String.
StringCharacterIterator,hashCode(),int,Computes a hashcode for this iterator.
StringCharacterIterator,last(),char,Implements CharacterIterator.last() for String.
StringCharacterIterator,next(),char,Implements CharacterIterator.next() for String.
StringCharacterIterator,previous(),char,Implements CharacterIterator.previous() for String.
StringCharacterIterator,setIndex(int p),char,Implements CharacterIterator.setIndex() for String.
StringCharacterIterator,setText(String text),void,Reset this iterator to point to a new string.
