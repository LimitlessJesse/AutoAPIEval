Sample: AttributedCharacterIterator_Attribute_1
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/AttributedCharacterIterator_Attribute_1.java:6: error: getName() has protected access in Attribute
        String attributeName = attribute.getName();
                                        ^
1 error


================================================================

Sample: AttributedCharacterIterator_Attribute_2
----------------------------------------------------------------
stdout:
true

================================================================

Sample: AttributedCharacterIterator_Attribute_3
----------------------------------------------------------------
stdout:
Hash code value: 1739876329

================================================================

Sample: AttributedCharacterIterator_Attribute_4
----------------------------------------------------------------
stdout:
java.text.AttributedCharacterIterator$Attribute(language)

================================================================

Sample: AttributedString_1
----------------------------------------------------------------
================================================================

Sample: AttributedString_2
----------------------------------------------------------------
================================================================

Sample: AttributedString_3
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/AttributedString_3.java:11: error: cannot find symbol
        attributes.put(AttributedCharacterIterator.Attribute.FONT, "Arial");
                                                            ^
  symbol:   variable FONT
  location: class Attribute
1 error


================================================================

Sample: AttributedString_4
----------------------------------------------------------------
stdout:
Example text
================================================================

Sample: AttributedString_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/AttributedString_5.java:9: error: cannot find symbol
        System.out.println(iterator.allValidAttributes());
                                   ^
  symbol:   method allValidAttributes()
  location: variable iterator of type AttributedCharacterIterator
1 error


================================================================

Sample: Bidi_1
----------------------------------------------------------------
stdout:
Length of text in the line: 11

================================================================

Sample: Bidi_2
----------------------------------------------------------------
stdout:
Level at offset 2: 0

================================================================

Sample: Bidi_3
----------------------------------------------------------------
stdout:
Number of level runs: 1

================================================================

Sample: Bidi_4
----------------------------------------------------------------
stdout:
Run level: 0

================================================================

Sample: BreakIterator_1
----------------------------------------------------------------
stdout:
First boundary: 0

================================================================

Sample: BreakIterator_2
----------------------------------------------------------------
stdout:
Last boundary: 11

================================================================

Sample: BreakIterator_3
----------------------------------------------------------------
stdout:
Next boundary index: 5
Next boundary index: 6
Next boundary index: 7
Next boundary index: 12
Next boundary index: 13
Next boundary index: -1

================================================================

Sample: BreakIterator_4
----------------------------------------------------------------
stdout:
Current boundary: 0
Previous boundary: -1

================================================================

Sample: BreakIterator_5
----------------------------------------------------------------
stdout:
First boundary after offset 5: 6

================================================================

Sample: ChoiceFormat_1
----------------------------------------------------------------
stdout:
Pattern before applying: 1.0#one|2.0#two|3.0#three
Pattern after applying: 4.0#four|5.0#five|6.0#six

================================================================

Sample: ChoiceFormat_2
----------------------------------------------------------------
stdout:
1.0
2.0
3.0
4.0

================================================================

Sample: ChoiceFormat_3
----------------------------------------------------------------
stdout:
Formatted number: two

================================================================

Sample: ChoiceFormat_4
----------------------------------------------------------------
stdout:
Pattern: 1.0#one|2.0#two|3.0#three

================================================================

Sample: ChoiceFormat_5
----------------------------------------------------------------
stdout:
Original: two
Clone: two

================================================================

Sample: CollationElementIterator_1
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_1.java:5: error: no suitable constructor found for CollationElementIterator(String)
        CollationElementIterator iterator = new CollationElementIterator("international string");
                                            ^
    constructor CollationElementIterator.CollationElementIterator(String,RuleBasedCollator) is not applicable
      (actual and formal argument lists differ in length)
    constructor CollationElementIterator.CollationElementIterator(CharacterIterator,RuleBasedCollator) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: CollationElementIterator_2
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_2.java:5: error: no suitable constructor found for CollationElementIterator(String)
        CollationElementIterator iterator = new CollationElementIterator("international string");
                                            ^
    constructor CollationElementIterator.CollationElementIterator(String,RuleBasedCollator) is not applicable
      (actual and formal argument lists differ in length)
    constructor CollationElementIterator.CollationElementIterator(CharacterIterator,RuleBasedCollator) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: CollationElementIterator_3
----------------------------------------------------------------
stderr:
java.text.ParseException: Unquoted punctuation character : 3e
	at java.base/java.text.PatternEntry$Parser.next(PatternEntry.java:265)
	at java.base/java.text.MergeCollation.addPattern(MergeCollation.java:180)
	at java.base/java.text.MergeCollation.setPattern(MergeCollation.java:166)
	at java.base/java.text.MergeCollation.<init>(MergeCollation.java:73)
	at java.base/java.text.RBTableBuilder.build(RBTableBuilder.java:113)
	at java.base/java.text.RBCollationTables.<init>(RBCollationTables.java:83)
	at java.base/java.text.RuleBasedCollator.<init>(RuleBasedCollator.java:301)
	at java.base/java.text.RuleBasedCollator.<init>(RuleBasedCollator.java:282)
	at CollationElementIterator_3.main(CollationElementIterator_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CollationElementIterator_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_4.java:5: error: no suitable constructor found for CollationElementIterator(String)
        CollationElementIterator iterator = new CollationElementIterator("example string");
                                            ^
    constructor CollationElementIterator.CollationElementIterator(String,RuleBasedCollator) is not applicable
      (actual and formal argument lists differ in length)
    constructor CollationElementIterator.CollationElementIterator(CharacterIterator,RuleBasedCollator) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: CollationElementIterator_5
----------------------------------------------------------------
stdout:
Primary component: 0

================================================================

Sample: CollationKey_1
----------------------------------------------------------------
stdout:
Comparison result: -1

================================================================

Sample: CollationKey_2
----------------------------------------------------------------
stdout:
Source String: apple

================================================================

Sample: CollationKey_3
----------------------------------------------------------------
stdout:
0 88 0 107 0 83 0 96 0 99 0 95 0 88 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 
================================================================

Sample: Collator_1
----------------------------------------------------------------
stdout:
source is less than target

================================================================

Sample: Collator_2
----------------------------------------------------------------
stdout:
Comparison result: -1

================================================================

Sample: Collator_5
----------------------------------------------------------------
stdout:
Hash code for Collator: 681002966

================================================================

Sample: DateFormat_1
----------------------------------------------------------------
stdout:
Formatted Date: 2024/08/21 20:33:12

================================================================

Sample: DateFormat_2
----------------------------------------------------------------
stdout:
Error parsing date: Unparseable date: "2022-01-01"

================================================================

Sample: DateFormat_3
----------------------------------------------------------------
stdout:
Lenient parsing is set to: true

================================================================

Sample: DateFormat_4
----------------------------------------------------------------
stdout:
Time zone set to: GMT+02:00

================================================================

Sample: DateFormat_5
----------------------------------------------------------------
stdout:
Formatted Date: 2024-08-21, 8:33 p.m.

================================================================

Sample: DateFormat_Field_1
----------------------------------------------------------------
stdout:
Calendar field associated with this attribute: 10

================================================================

Sample: DateFormat_Field_2
----------------------------------------------------------------
stdout:
java.text.DateFormat$Field(month)

================================================================

Sample: DateFormatSymbols_1
----------------------------------------------------------------
stdout:
January
February
March
April
May
June
July
August
September
October
November
December


================================================================

Sample: DateFormatSymbols_2
----------------------------------------------------------------
stdout:
Jan.
Feb.
Mar.
Apr.
May
Jun.
Jul.
Aug.
Sep.
Oct.
Nov.
Dec.


================================================================

Sample: DateFormatSymbols_3
----------------------------------------------------------------
stdout:

Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday

================================================================

Sample: DateFormatSymbols_4
----------------------------------------------------------------
stdout:

Sun.
Mon.
Tue.
Wed.
Thu.
Fri.
Sat.

================================================================

Sample: DecimalFormat_2
----------------------------------------------------------------
stdout:
Formatted Number: 12,345.67
Field Position: java.text.FieldPosition[field=0,attribute=null,beginIndex=0,endIndex=6]

================================================================

Sample: DecimalFormat_3
----------------------------------------------------------------
stdout:
1,234.57

================================================================

Sample: DecimalFormat_4
----------------------------------------------------------------
stdout:
Parsed Number: 123.45
Index after parsing: 6

================================================================

Sample: DecimalFormat_5
----------------------------------------------------------------
stdout:
Formatted Number: 12.345,67

================================================================

Sample: DecimalFormatSymbols_1
----------------------------------------------------------------
stdout:
Decimal Separator: .

================================================================

Sample: DecimalFormatSymbols_2
----------------------------------------------------------------
stdout:
Grouping Separator: ,

================================================================

Sample: DecimalFormatSymbols_3
----------------------------------------------------------------
stdout:
Minus sign character: -

================================================================

Sample: DecimalFormatSymbols_4
----------------------------------------------------------------
stdout:
Pattern Separator: ;

================================================================

Sample: DecimalFormatSymbols_5
----------------------------------------------------------------
stdout:
Percent sign: %

================================================================

Sample: FieldPosition_1
----------------------------------------------------------------
stdout:
Begin Index: 0

================================================================

Sample: FieldPosition_2
----------------------------------------------------------------
stdout:
End Index: 0

================================================================

Sample: FieldPosition_4
----------------------------------------------------------------
stdout:
Begin index set to: 5

================================================================

Sample: FieldPosition_5
----------------------------------------------------------------
stdout:
End index set to: 5

================================================================

Sample: Format_1
----------------------------------------------------------------
stdout:
Formatted Date: 2024-08-21

================================================================

Sample: Format_2
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Format_2.java:6: error: <anonymous Format_2$1> is not abstract and does not override abstract method parseObject(String,ParsePosition) in Format
        Format format = new Format() {
                                     ^
1 error


================================================================

Sample: Format_3
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Format_3.java:14: error: cannot find symbol
            public Object parseObject(String source, ParsePosition pos) {
                                                     ^
  symbol: class ParsePosition
1 error


================================================================

Sample: Format_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Format_4.java:6: error: <anonymous Format_4$1> is not abstract and does not override abstract method format(Object,StringBuffer,FieldPosition) in Format
        Format format = new Format() {
                                     ^
1 error


================================================================

Sample: Format_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Format_5.java:6: error: <anonymous Format_5$1> is not abstract and does not override abstract method parseObject(String,ParsePosition) in Format
        Format format = new Format() {
                                     ^
1 error


================================================================

Sample: MessageFormat_2
----------------------------------------------------------------
stdout:
Hello, John! Today is Monday.

================================================================

Sample: MessageFormat_3
----------------------------------------------------------------
================================================================

Sample: MessageFormat_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/MessageFormat_4.java:5: error: no suitable constructor found for MessageFormat(no arguments)
        MessageFormat messageFormat = new MessageFormat();
                                      ^
    constructor MessageFormat.MessageFormat(String) is not applicable
      (actual and formal argument lists differ in length)
    constructor MessageFormat.MessageFormat(String,Locale) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: MessageFormat_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.ClassCastException: class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
	at java.base/java.text.MessageFormat.format(MessageFormat.java:886)
	at java.base/java.text.Format.format(Format.java:159)
	at java.base/java.text.MessageFormat.subformat(MessageFormat.java:1347)
	at java.base/java.text.MessageFormat.format(MessageFormat.java:886)
	at java.base/java.text.Format.format(Format.java:159)
	at MessageFormat_5.main(MessageFormat_5.java:11)

================================================================

Sample: Normalizer_1
----------------------------------------------------------------
stdout:
héllo

================================================================

Sample: Normalizer_2
----------------------------------------------------------------
stdout:
Is normalized: true

================================================================

Sample: NumberFormat_1
----------------------------------------------------------------
stdout:
Formatted Number: 12,345.67

================================================================

Sample: NumberFormat_2
----------------------------------------------------------------
stdout:
Formatted amount: $1,234.56

================================================================

Sample: NumberFormat_3
----------------------------------------------------------------
stdout:
Formatted Number: 12,345.67

================================================================

Sample: NumberFormat_4
----------------------------------------------------------------
stdout:
75%

================================================================

Sample: NumberFormat_5
----------------------------------------------------------------
stdout:
Parsed number: 123.45

================================================================

Sample: RuleBasedCollator_4
----------------------------------------------------------------
stdout:
Collation rules: ='​'=‌=‍=‎=‏=  = = = == = = = ='	'='' == ='' = = == = = = == = = = == = == = = = = == = = = = == = = = = == = = = = == = = = = == =;' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';'　';'﻿';'' ;'	' ;'
';'';'';́;̀;̆;̂;̌;̊;̍;̈;̋;̃;̇;̄;̷;̧;̨;̣;̲;̅;̉;̎;̏;̐;̑;̒;̓;̔;̕;̖;̗;̘;̙;̚;̛;̜;̝;̞;̟;̠;̡;̢;̤;̥;̦;̩;̪;̫;̬;̭;̮;̯;̰;̱;̳;̴;̵;̶;̸;̹;̺;̻;̼;̽;̾;̿;͂;̈́;ͅ;͠;͡;҃;҄;҅;҆;⃐;⃑;⃒;⃓;⃔;⃕;⃖;⃗;⃘;⃙;⃚;⃛;⃜;⃝;⃞;⃟;⃠;⃡,'-';­;‐;‑;‒;–;—;―;−<'_'<¯<','<';'<':'<'!'<¡<'?'<¿<'/'<'.'<´<'`'<'^'<¨<'~'<·<¸<'''<'"'<«<»<'('<')'<'['<']'<'{'<'}'<§<¶<©<®<'@'<¤<฿<¢<₡<₢<'$'<₫<€<₣<₤<₥<₦<₧<£<₨<₪<₩<¥<'*'<'\'<'&'<'#'<'%'<'+'<±<÷<×<'<'<'='<'>'<¬<'|'<¦<°<µ<0<1<2<3<4<5<6<7<8<9<¼<½<¾<a,A<b,B<c,C<d,D<ð,Ð<e,E<f,F<g,G<h,H<i,I<j,J<k,K<l,L<m,M<n,N<o,O<p,P<q,Q<r,R<s, S & SS,ß<t,T& TH, Þ &TH, þ <u,U<v,V<w,W<x,X<y,Y<z,Z&AE,Æ&AE,æ&OE,Œ&OE,œ

================================================================

Sample: SimpleDateFormat_3
----------------------------------------------------------------
stdout:
yyyy-MM-dd

================================================================

Sample: SimpleDateFormat_4
----------------------------------------------------------------
stdout:
Pattern: yyyy-MM-dd

================================================================

Sample: StringCharacterIterator_1
----------------------------------------------------------------
stdout:
First character: H

================================================================

Sample: StringCharacterIterator_2
----------------------------------------------------------------
stdout:
Last character: o

================================================================

Sample: StringCharacterIterator_3
----------------------------------------------------------------
stdout:
Current character: H

================================================================

Sample: StringCharacterIterator_4
----------------------------------------------------------------
stdout:
e

================================================================

Sample: StringCharacterIterator_5
----------------------------------------------------------------
stdout:
Previous character: ￿

================================================================

