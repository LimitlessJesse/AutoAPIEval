Sample: ArrayType_1
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/ArrayType_1.java:5: error: no suitable constructor found for ArrayType(Class<String>,boolean)
        ArrayType arrayType = new ArrayType(String.class, false);
                              ^
    constructor ArrayType.ArrayType(int,OpenType) is not applicable
      (argument mismatch; Class<String> cannot be converted to int)
    constructor ArrayType.ArrayType(SimpleType,boolean) is not applicable
      (argument mismatch; Class<String> cannot be converted to SimpleType)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ArrayType_3
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/ArrayType_3.java:5: error: no suitable constructor found for ArrayType(Class<String>,boolean)
        ArrayType arrayType = new ArrayType(String.class, false);
                              ^
    constructor ArrayType.ArrayType(int,OpenType) is not applicable
      (argument mismatch; Class<String> cannot be converted to int)
    constructor ArrayType.ArrayType(SimpleType,boolean) is not applicable
      (argument mismatch; Class<String> cannot be converted to SimpleType)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ArrayType_4
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/ArrayType_4.java:5: error: cannot find symbol
        ArrayType arrayType = new ArrayType(1, SimpleType.INTEGER);
                                               ^
  symbol:   variable SimpleType
  location: class ArrayType_4
1 error


================================================================

Sample: ArrayType_5
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/ArrayType_5.java:5: error: no suitable constructor found for ArrayType(int,Class<String>)
        ArrayType arrayType = new ArrayType(1, String.class);
                              ^
    constructor ArrayType.ArrayType(int,OpenType) is not applicable
      (argument mismatch; Class<String> cannot be converted to OpenType)
    constructor ArrayType.ArrayType(SimpleType,boolean) is not applicable
      (argument mismatch; int cannot be converted to SimpleType)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: CompositeDataSupport_2
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/CompositeDataSupport_2.java:6: error: no suitable constructor found for CompositeDataSupport(no arguments)
        CompositeDataSupport data = new CompositeDataSupport();
                                    ^
    constructor CompositeDataSupport.CompositeDataSupport(CompositeType,String[],Object[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor CompositeDataSupport.CompositeDataSupport(CompositeType,Map<String,?>) is not applicable
      (actual and formal argument lists differ in length)
    constructor CompositeDataSupport.CompositeDataSupport(SortedMap<String,Object>,CompositeType) is not applicable
      (actual and formal argument lists differ in length)
./Data/javax_management_openmbean/javaFiles/CompositeDataSupport_2.java:10: error: Alternatives in a multi-catch statement cannot be related by subclassing
        } catch (IllegalArgumentException | InvalidKeyException e) {
                                            ^
  Alternative InvalidKeyException is a subclass of alternative IllegalArgumentException
2 errors


================================================================

Sample: CompositeDataSupport_4
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/CompositeDataSupport_4.java:5: error: no suitable constructor found for CompositeDataSupport(no arguments)
        CompositeDataSupport data = new CompositeDataSupport();
                                    ^
    constructor CompositeDataSupport.CompositeDataSupport(CompositeType,String[],Object[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor CompositeDataSupport.CompositeDataSupport(CompositeType,Map<String,?>) is not applicable
      (actual and formal argument lists differ in length)
    constructor CompositeDataSupport.CompositeDataSupport(SortedMap<String,Object>,CompositeType) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: CompositeType_3
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/CompositeType_3.java:6: error: incompatible types: String[] cannot be converted to OpenType<?>[]
        CompositeType compositeType = new CompositeType("typeName", "description", new String[]{"key1", "key2"}, new String[]{"desc1", "desc2"}, new String[]{"type1", "type2"});
                                                                                                                                                 ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: CompositeType_5
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/CompositeType_5.java:7: error: cannot find symbol
        CompositeType compositeType = new CompositeType("typeName", "description", new String[]{"item1"}, new String[]{"item1"}, new OpenType[]{OpenType.STRING});
                                                                                                                                                        ^
  symbol:   variable STRING
  location: class OpenType
./Data/javax_management_openmbean/javaFiles/CompositeType_5.java:8: error: <anonymous CompositeType_5$1> is not abstract and does not override abstract method values() in CompositeData
        CompositeData compositeData = new CompositeData() {
                                                          ^
2 errors


================================================================

Sample: OpenMBeanAttributeInfoSupport_3
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenMBeanAttributeInfoSupport_3.java:6: error: cannot find symbol
        OpenMBeanAttributeInfoSupport attributeInfo = new OpenMBeanAttributeInfoSupport("attributeName", "attributeDescription", OpenType.STRING);
                                                                                                                                         ^
  symbol:   variable STRING
  location: class OpenType
1 error


================================================================

Sample: OpenMBeanAttributeInfoSupport_4
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenMBeanAttributeInfoSupport_4.java:5: error: no suitable constructor found for OpenMBeanAttributeInfoSupport(String,String,String,boolean,boolean,boolean)
        OpenMBeanAttributeInfoSupport attributeInfo = new OpenMBeanAttributeInfoSupport("attributeName", "attributeType", "attributeDescription", true, false, false);
                                                      ^
    constructor OpenMBeanAttributeInfoSupport.OpenMBeanAttributeInfoSupport(String,String,OpenType<?>,boolean,boolean,boolean) is not applicable
      (argument mismatch; String cannot be converted to OpenType<?>)
    constructor OpenMBeanAttributeInfoSupport.<T#1>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#1>,boolean,boolean,boolean,T#1) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor OpenMBeanAttributeInfoSupport.<T#2>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#2>,boolean,boolean,boolean,T#2,T#2[]) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
    constructor OpenMBeanAttributeInfoSupport.<T#3>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#3>,boolean,boolean,boolean,T#3,Comparable<T#3>,Comparable<T#3>) is not applicable
      (cannot infer type-variable(s) T#3
        (actual and formal argument lists differ in length))
    constructor OpenMBeanAttributeInfoSupport.<T#4>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#4>,boolean,boolean,boolean,T#4,T#4[],Comparable<T#4>,Comparable<T#4>) is not applicable
      (cannot infer type-variable(s) T#4
        (actual and formal argument lists differ in length))
  where T#1,T#2,T#3,T#4 are type-variables:
    T#1 extends Object declared in constructor <T#1>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#1>,boolean,boolean,boolean,T#1)
    T#2 extends Object declared in constructor <T#2>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#2>,boolean,boolean,boolean,T#2,T#2[])
    T#3 extends Object declared in constructor <T#3>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#3>,boolean,boolean,boolean,T#3,Comparable<T#3>,Comparable<T#3>)
    T#4 extends Object declared in constructor <T#4>OpenMBeanAttributeInfoSupport(String,String,OpenType<T#4>,boolean,boolean,boolean,T#4,T#4[],Comparable<T#4>,Comparable<T#4>)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: OpenMBeanParameterInfoSupport_3
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenMBeanParameterInfoSupport_3.java:6: error: cannot find symbol
        OpenMBeanParameterInfoSupport parameterInfo = new OpenMBeanParameterInfoSupport("paramName", "paramDescription", OpenType.STRING);
                                                                                                                                 ^
  symbol:   variable STRING
  location: class OpenType
1 error


================================================================

Sample: OpenMBeanParameterInfoSupport_4
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenMBeanParameterInfoSupport_4.java:5: error: no suitable constructor found for OpenMBeanParameterInfoSupport(String,String,String)
        OpenMBeanParameterInfoSupport paramInfo = new OpenMBeanParameterInfoSupport("paramName", "paramType", "paramDescription");
                                                  ^
    constructor OpenMBeanParameterInfoSupport.OpenMBeanParameterInfoSupport(String,String,OpenType<?>) is not applicable
      (argument mismatch; String cannot be converted to OpenType<?>)
    constructor OpenMBeanParameterInfoSupport.<T#1>OpenMBeanParameterInfoSupport(String,String,OpenType<T#1>,T#1) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor OpenMBeanParameterInfoSupport.<T#2>OpenMBeanParameterInfoSupport(String,String,OpenType<T#2>,T#2,T#2[]) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
    constructor OpenMBeanParameterInfoSupport.<T#3>OpenMBeanParameterInfoSupport(String,String,OpenType<T#3>,T#3,Comparable<T#3>,Comparable<T#3>) is not applicable
      (cannot infer type-variable(s) T#3
        (actual and formal argument lists differ in length))
    constructor OpenMBeanParameterInfoSupport.<T#4>OpenMBeanParameterInfoSupport(String,String,OpenType<T#4>,T#4,T#4[],Comparable<T#4>,Comparable<T#4>) is not applicable
      (cannot infer type-variable(s) T#4
        (actual and formal argument lists differ in length))
  where T#1,T#2,T#3,T#4 are type-variables:
    T#1 extends Object declared in constructor <T#1>OpenMBeanParameterInfoSupport(String,String,OpenType<T#1>,T#1)
    T#2 extends Object declared in constructor <T#2>OpenMBeanParameterInfoSupport(String,String,OpenType<T#2>,T#2,T#2[])
    T#3 extends Object declared in constructor <T#3>OpenMBeanParameterInfoSupport(String,String,OpenType<T#3>,T#3,Comparable<T#3>,Comparable<T#3>)
    T#4 extends Object declared in constructor <T#4>OpenMBeanParameterInfoSupport(String,String,OpenType<T#4>,T#4,T#4[],Comparable<T#4>,Comparable<T#4>)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: OpenMBeanParameterInfoSupport_5
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenMBeanParameterInfoSupport_5.java:5: error: no suitable constructor found for OpenMBeanParameterInfoSupport(String,String,String)
        OpenMBeanParameterInfoSupport paramInfo = new OpenMBeanParameterInfoSupport("paramName", "paramType", "paramDescription");
                                                  ^
    constructor OpenMBeanParameterInfoSupport.OpenMBeanParameterInfoSupport(String,String,OpenType<?>) is not applicable
      (argument mismatch; String cannot be converted to OpenType<?>)
    constructor OpenMBeanParameterInfoSupport.<T#1>OpenMBeanParameterInfoSupport(String,String,OpenType<T#1>,T#1) is not applicable
      (cannot infer type-variable(s) T#1
        (actual and formal argument lists differ in length))
    constructor OpenMBeanParameterInfoSupport.<T#2>OpenMBeanParameterInfoSupport(String,String,OpenType<T#2>,T#2,T#2[]) is not applicable
      (cannot infer type-variable(s) T#2
        (actual and formal argument lists differ in length))
    constructor OpenMBeanParameterInfoSupport.<T#3>OpenMBeanParameterInfoSupport(String,String,OpenType<T#3>,T#3,Comparable<T#3>,Comparable<T#3>) is not applicable
      (cannot infer type-variable(s) T#3
        (actual and formal argument lists differ in length))
    constructor OpenMBeanParameterInfoSupport.<T#4>OpenMBeanParameterInfoSupport(String,String,OpenType<T#4>,T#4,T#4[],Comparable<T#4>,Comparable<T#4>) is not applicable
      (cannot infer type-variable(s) T#4
        (actual and formal argument lists differ in length))
  where T#1,T#2,T#3,T#4 are type-variables:
    T#1 extends Object declared in constructor <T#1>OpenMBeanParameterInfoSupport(String,String,OpenType<T#1>,T#1)
    T#2 extends Object declared in constructor <T#2>OpenMBeanParameterInfoSupport(String,String,OpenType<T#2>,T#2,T#2[])
    T#3 extends Object declared in constructor <T#3>OpenMBeanParameterInfoSupport(String,String,OpenType<T#3>,T#3,Comparable<T#3>,Comparable<T#3>)
    T#4 extends Object declared in constructor <T#4>OpenMBeanParameterInfoSupport(String,String,OpenType<T#4>,T#4,T#4[],Comparable<T#4>,Comparable<T#4>)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: OpenType_1
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenType_1.java:6: error: ';' expected
        String typeName = openType.getTypeName();
              ^
1 error


================================================================

Sample: OpenType_2
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenType_2.java:6: error: ';' expected
        String description = openType.getDescription();
              ^
1 error


================================================================

Sample: OpenType_3
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenType_3.java:6: error: ';' expected
        Object obj = // initialize object to be tested here
              ^
./Data/javax_management_openmbean/javaFiles/OpenType_3.java:7: error: '.class' expected
        boolean isValid = openType.isValue(obj);
                ^
2 errors


================================================================

Sample: OpenType_5
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/OpenType_5.java:5: error: no suitable constructor found for OpenType(no arguments)
        OpenType openType1 = new OpenType() {
                             ^
    constructor OpenType.OpenType(String,String,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor OpenType.OpenType(String,String,String,boolean) is not applicable
      (actual and formal argument lists differ in length)
./Data/javax_management_openmbean/javaFiles/OpenType_5.java:5: error: <anonymous OpenType_5$1> is not abstract and does not override abstract method toString() in OpenType
        OpenType openType1 = new OpenType() {
                                            ^
./Data/javax_management_openmbean/javaFiles/OpenType_5.java:9: error: abstract method equals(Object) in OpenType cannot be accessed directly
                return super.equals(obj);
                            ^
./Data/javax_management_openmbean/javaFiles/OpenType_5.java:13: error: no suitable constructor found for OpenType(no arguments)
        OpenType openType2 = new OpenType() {
                             ^
    constructor OpenType.OpenType(String,String,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor OpenType.OpenType(String,String,String,boolean) is not applicable
      (actual and formal argument lists differ in length)
./Data/javax_management_openmbean/javaFiles/OpenType_5.java:13: error: <anonymous OpenType_5$2> is not abstract and does not override abstract method toString() in OpenType
        OpenType openType2 = new OpenType() {
                                            ^
./Data/javax_management_openmbean/javaFiles/OpenType_5.java:17: error: abstract method equals(Object) in OpenType cannot be accessed directly
                return super.equals(obj);
                            ^
6 errors


================================================================

Sample: SimpleType_2
----------------------------------------------------------------
stdout:
Is value: true

================================================================

Sample: TabularDataSupport_3
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/TabularDataSupport_3.java:6: error: no suitable constructor found for TabularDataSupport(no arguments)
        TabularDataSupport tabularData = new TabularDataSupport();
                                         ^
    constructor TabularDataSupport.TabularDataSupport(TabularType) is not applicable
      (actual and formal argument lists differ in length)
    constructor TabularDataSupport.TabularDataSupport(TabularType,int,float) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: TabularType_4
----------------------------------------------------------------
output:
./Data/javax_management_openmbean/javaFiles/TabularType_4.java:6: error: constructor TabularType in class TabularType cannot be applied to given types;
        TabularType tabularType = new TabularType("TestTabularType", "Description", new String[]{"key"});
                                  ^
  required: String,String,CompositeType,String[]
  found:    String,String,String[]
  reason: actual and formal argument lists differ in length
1 error


================================================================

