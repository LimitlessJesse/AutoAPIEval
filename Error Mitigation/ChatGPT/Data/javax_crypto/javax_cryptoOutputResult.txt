Sample: Cipher_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Cipher_1.java:9: error: incompatible types: void cannot be converted to Key
            cipher.init(Cipher.ENCRYPT_MODE, key);
                       ^
1 error


================================================================

Sample: Cipher_2
----------------------------------------------------------------
stderr:
java.lang.IllegalStateException: Cipher not initialized
	at java.base/javax.crypto.Cipher.checkCipherState(Cipher.java:1790)
	at java.base/javax.crypto.Cipher.doFinal(Cipher.java:2085)
	at Cipher_2.main(Cipher_2.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Cipher_3
----------------------------------------------------------------
stderr:
java.lang.IllegalStateException: Cipher not initialized
	at java.base/javax.crypto.Cipher.getOutputSize(Cipher.java:1021)
	at Cipher_3.main(Cipher_3.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Cipher_4
----------------------------------------------------------------
stderr:
java.lang.IllegalStateException: Cipher not initialized
	at java.base/javax.crypto.Cipher.checkCipherState(Cipher.java:1790)
	at java.base/javax.crypto.Cipher.updateAAD(Cipher.java:2741)
	at java.base/javax.crypto.Cipher.updateAAD(Cipher.java:2707)
	at Cipher_4.main(Cipher_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Cipher_5
----------------------------------------------------------------
stdout:
Parameters used with this cipher: 
    iv:
[0000: 22 E1 E6 29 F2 25 59 C0   2D AB 96 39 56 CC 08 DB  "..).%Y.-..9V...
]


================================================================

Sample: CipherInputStream_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.crypto.Cipher.getOutputSize(int)" because "this.cipher" is null
	at java.base/javax.crypto.CipherInputStream.ensureCapacity(CipherInputStream.java:111)
	at java.base/javax.crypto.CipherInputStream.getMoreData(CipherInputStream.java:156)
	at java.base/javax.crypto.CipherInputStream.read(CipherInputStream.java:214)
	at CipherInputStream_1.main(CipherInputStream_1.java:8)

================================================================

Sample: CipherInputStream_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.crypto.Cipher.getOutputSize(int)" because "this.cipher" is null
	at java.base/javax.crypto.CipherInputStream.ensureCapacity(CipherInputStream.java:111)
	at java.base/javax.crypto.CipherInputStream.getMoreData(CipherInputStream.java:156)
	at java.base/javax.crypto.CipherInputStream.read(CipherInputStream.java:261)
	at java.base/javax.crypto.CipherInputStream.read(CipherInputStream.java:237)
	at CipherInputStream_2.main(CipherInputStream_2.java:9)

================================================================

Sample: CipherInputStream_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.crypto.Cipher.getOutputSize(int)" because "this.cipher" is null
	at java.base/javax.crypto.CipherInputStream.ensureCapacity(CipherInputStream.java:111)
	at java.base/javax.crypto.CipherInputStream.getMoreData(CipherInputStream.java:156)
	at java.base/javax.crypto.CipherInputStream.read(CipherInputStream.java:261)
	at CipherInputStream_3.main(CipherInputStream_3.java:9)

================================================================

Sample: CipherInputStream_4
----------------------------------------------------------------
stdout:
Bytes skipped: 0

================================================================

Sample: CipherInputStream_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.InputStream.close()" because "this.input" is null
	at java.base/javax.crypto.CipherInputStream.close(CipherInputStream.java:337)
	at CipherInputStream_5.main(CipherInputStream_5.java:8)

================================================================

Sample: CipherOutputStream_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherOutputStream_1.java:7: error: constructor CipherOutputStream in class CipherOutputStream cannot be applied to given types;
            CipherOutputStream cipherOutputStream = new CipherOutputStream(System.out);
                                                    ^
  required: OutputStream
  found:    PrintStream
  reason: CipherOutputStream(OutputStream) has protected access in CipherOutputStream
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: CipherOutputStream_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherOutputStream_2.java:7: error: constructor CipherOutputStream in class CipherOutputStream cannot be applied to given types;
            CipherOutputStream cipherOutputStream = new CipherOutputStream(System.out);
                                                    ^
  required: OutputStream
  found:    PrintStream
  reason: CipherOutputStream(OutputStream) has protected access in CipherOutputStream
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: CipherOutputStream_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.crypto.Cipher.getOutputSize(int)" because "this.cipher" is null
	at java.base/javax.crypto.CipherOutputStream.ensureCapacity(CipherOutputStream.java:95)
	at java.base/javax.crypto.CipherOutputStream.write(CipherOutputStream.java:184)
	at CipherOutputStream_3.main(CipherOutputStream_3.java:12)

================================================================

Sample: CipherOutputStream_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.OutputStream.flush()" because "this.output" is null
	at java.base/javax.crypto.CipherOutputStream.flush(CipherOutputStream.java:213)
	at CipherOutputStream_4.main(CipherOutputStream_4.java:8)

================================================================

Sample: CipherOutputStream_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.crypto.Cipher.getOutputSize(int)" because "this.cipher" is null
	at java.base/javax.crypto.CipherOutputStream.ensureCapacity(CipherOutputStream.java:95)
	at java.base/javax.crypto.CipherOutputStream.close(CipherOutputStream.java:238)
	at CipherOutputStream_5.main(CipherOutputStream_5.java:8)

================================================================

Sample: CipherSpi_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherSpi_2.java:6: error: <anonymous CipherSpi_2$1> is not abstract and does not override abstract method engineDoFinal(byte[],int,int,byte[],int) in CipherSpi
        CipherSpi cipherSpi = new CipherSpi() {
                                              ^
./Data/javax_crypto/javaFiles/CipherSpi_2.java:20: error: method engineUpdate in class CipherSpi cannot be applied to given types;
        byte[] result = cipherSpi.engineUpdate(input, inputOffset, inputLen);
                                 ^
  required: byte[],int,int
  found:    byte[],int,int
  reason: engineUpdate(byte[],int,int) has protected access in CipherSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: CipherSpi_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherSpi_4.java:5: error: <anonymous CipherSpi_4$1> is not abstract and does not override abstract method engineDoFinal(byte[],int,int,byte[],int) in CipherSpi
        CipherSpi cipherSpi = new CipherSpi() {
                                              ^
./Data/javax_crypto/javaFiles/CipherSpi_4.java:13: error: engineGetBlockSize() has protected access in CipherSpi
        int blockSize = cipherSpi.engineGetBlockSize();
                                 ^
2 errors


================================================================

Sample: CipherSpi_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherSpi_5.java:6: error: <anonymous CipherSpi_5$1> is not abstract and does not override abstract method engineDoFinal(byte[],int,int,byte[],int) in CipherSpi
        CipherSpi cipherSpi = new CipherSpi() {
                                              ^
./Data/javax_crypto/javaFiles/CipherSpi_5.java:14: error: engineGetOutputSize(int) has protected access in CipherSpi
        int outputSize = cipherSpi.engineGetOutputSize(inputLen);
                                  ^
2 errors


================================================================

Sample: EncryptedPrivateKeyInfo_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_1.java:5: error: no suitable constructor found for EncryptedPrivateKeyInfo(no arguments)
        EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = new EncryptedPrivateKeyInfo();
                                                          ^
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(String,byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(AlgorithmParameters,byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: EncryptedPrivateKeyInfo_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_2.java:5: error: no suitable constructor found for EncryptedPrivateKeyInfo(no arguments)
        EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = new EncryptedPrivateKeyInfo();
                                                          ^
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(String,byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(AlgorithmParameters,byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: EncryptedPrivateKeyInfo_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_3.java:7: error: unreported exception IOException; must be caught or declared to be thrown
        EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = new EncryptedPrivateKeyInfo(new byte[]{});
                                                          ^
1 error


================================================================

Sample: EncryptedPrivateKeyInfo_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_4.java:6: error: no suitable constructor found for EncryptedPrivateKeyInfo(no arguments)
        EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = new EncryptedPrivateKeyInfo();
                                                          ^
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(String,byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(AlgorithmParameters,byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: ExemptionMechanism_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanism_1.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        ExemptionMechanism exMech = ExemptionMechanism.getInstance("exampleName");
                                                                  ^
1 error


================================================================

Sample: ExemptionMechanism_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanism_3.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        ExemptionMechanism exemptionMechanism = ExemptionMechanism.getInstance("exampleAlgorithm");
                                                                              ^
1 error


================================================================

Sample: ExemptionMechanism_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.crypto.ExemptionMechanism.init(java.security.Key)" because "<local1>" is null
	at ExemptionMechanism_4.main(ExemptionMechanism_4.java:13)

================================================================

Sample: ExemptionMechanism_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanism_5.java:15: error: cannot find symbol
        } catch (InvalidKeyException e) {
                 ^
  symbol:   class InvalidKeyException
  location: class ExemptionMechanism_5
./Data/javax_crypto/javaFiles/ExemptionMechanism_5.java:17: error: cannot find symbol
        } catch (InvalidAlgorithmParameterException e) {
                 ^
  symbol:   class InvalidAlgorithmParameterException
  location: class ExemptionMechanism_5
2 errors


================================================================

Sample: ExemptionMechanismSpi_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_2.java:6: error: <anonymous ExemptionMechanismSpi_2$1> is not abstract and does not override abstract method engineGenExemptionBlob(byte[],int) in ExemptionMechanismSpi
        ExemptionMechanismSpi spi = new ExemptionMechanismSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_2.java:15: error: method engineGenExemptionBlob in class ExemptionMechanismSpi cannot be applied to given types;
            byte[] result = spi.engineGenExemptionBlob();
                               ^
  required: no arguments
  found:    no arguments
  reason: engineGenExemptionBlob() has protected access in ExemptionMechanismSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: ExemptionMechanismSpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_3.java:10: error: <anonymous ExemptionMechanismSpi_3$1> is not abstract and does not override abstract method engineGenExemptionBlob() in ExemptionMechanismSpi
        ExemptionMechanismSpi spi = new ExemptionMechanismSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_3.java:21: error: method engineGenExemptionBlob in class ExemptionMechanismSpi cannot be applied to given types;
            int bytesStored = spi.engineGenExemptionBlob(output, outputOffset);
                                 ^
  required: byte[],int
  found:    byte[],int
  reason: engineGenExemptionBlob(byte[],int) has protected access in ExemptionMechanismSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: ExemptionMechanismSpi_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_4.java:10: error: <anonymous ExemptionMechanismSpi_4$1> is not abstract and does not override abstract method engineGenExemptionBlob(byte[],int) in ExemptionMechanismSpi
        ExemptionMechanismSpi spi = new ExemptionMechanismSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_4.java:22: error: no suitable method found for engineInit(Key,AlgorithmParameterSpec)
            spi.engineInit(key, algorithmParams);
               ^
    method ExemptionMechanismSpi.engineInit(Key,AlgorithmParameterSpec) is not applicable
      (engineInit(Key,AlgorithmParameterSpec) has protected access in ExemptionMechanismSpi)
    method ExemptionMechanismSpi.engineInit(Key,AlgorithmParameters) is not applicable
      (argument mismatch; AlgorithmParameterSpec cannot be converted to AlgorithmParameters)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: ExemptionMechanismSpi_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_5.java:10: error: <anonymous ExemptionMechanismSpi_5$1> is not abstract and does not override abstract method engineGenExemptionBlob(byte[],int) in ExemptionMechanismSpi
        ExemptionMechanismSpi exemptionMechanism = new ExemptionMechanismSpi() {
                                                                               ^
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_5.java:21: error: no suitable method found for engineInit(Key,AlgorithmParameterSpec)
            exemptionMechanism.engineInit(key, algorithmParameterSpec);
                              ^
    method ExemptionMechanismSpi.engineInit(Key,AlgorithmParameterSpec) is not applicable
      (engineInit(Key,AlgorithmParameterSpec) has protected access in ExemptionMechanismSpi)
    method ExemptionMechanismSpi.engineInit(Key,AlgorithmParameters) is not applicable
      (argument mismatch; AlgorithmParameterSpec cannot be converted to AlgorithmParameters)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyAgreement_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreement_1.java:10: error: incompatible types: void cannot be converted to Key
            keyAgreement.init(privateKey);
                             ^
1 error


================================================================

Sample: KeyAgreement_3
----------------------------------------------------------------
stdout:
Shared Secret: �g)�_k���U`R��1J��VE>L5'>�?�� ��\xB;�#�ku=���� RJV(�r���ދ�3^�⹺㐚!f����7��w�̠�\�\�H)��[�{�ڳ�j�/w�$���f���<E㎟�) ��y��OXn~�-��$'�
YG�oV����?<�OT���/��=6��%�R��O-���w�`؝��d�G�U�喵AD8B7<Q�*�q��暛7B͔a�X�`4  �6�

================================================================

Sample: KeyAgreement_4
----------------------------------------------------------------
stdout:
Algorithm name: DiffieHellman

================================================================

Sample: KeyAgreement_5
----------------------------------------------------------------
stderr:
java.security.NoSuchAlgorithmException: Unsupported secret key algorithm: AES
	at java.base/com.sun.crypto.provider.DHKeyAgreement.engineGenerateSecret(DHKeyAgreement.java:399)
	at java.base/javax.crypto.KeyAgreement.generateSecret(KeyAgreement.java:680)
	at KeyAgreement_5.main(KeyAgreement_5.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: KeyAgreementSpi_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_1.java:8: error: <anonymous KeyAgreementSpi_1$1> is not abstract and does not override abstract method engineGenerateSecret(String) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_1.java:37: error: method engineInit in class KeyAgreementSpi cannot be applied to given types;
            keyAgreementSpi.engineInit(key, random);
                           ^
  required: Key,SecureRandom
  found:    Key,SecureRandom
  reason: engineInit(Key,SecureRandom) has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyAgreementSpi_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_2.java:10: error: <anonymous KeyAgreementSpi_2$1> is not abstract and does not override abstract method engineGenerateSecret(String) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_2.java:19: error: <anonymous KeyAgreementSpi_2$2> is not abstract and does not override abstract method getEncoded() in Key
        Key key = new Key() {
                            ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_2.java:28: error: method engineInit in class KeyAgreementSpi cannot be applied to given types;
            keyAgreementSpi.engineInit(key, params, random);
                           ^
  required: Key,AlgorithmParameterSpec,SecureRandom
  found:    Key,AlgorithmParameterSpec,SecureRandom
  reason: engineInit(Key,AlgorithmParameterSpec,SecureRandom) has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
3 errors


================================================================

Sample: KeyAgreementSpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_3.java:5: error: <anonymous KeyAgreementSpi_3$1> is not abstract and does not override abstract method engineGenerateSecret(String) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_3.java:15: error: method engineGenerateSecret in class KeyAgreementSpi cannot be applied to given types;
        byte[] sharedSecret = keyAgreementSpi.engineGenerateSecret();
                                             ^
  required: no arguments
  found:    no arguments
  reason: engineGenerateSecret() has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyAgreementSpi_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_4.java:7: error: cannot find symbol
            protected int engineGenerateSecret(byte[] sharedSecret, int offset) throws IllegalStateException, ShortBufferException {
                                                                                                              ^
  symbol: class ShortBufferException
./Data/javax_crypto/javaFiles/KeyAgreementSpi_4.java:5: error: <anonymous KeyAgreementSpi_4$1> is not abstract and does not override abstract method engineGenerateSecret(String) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_4.java:16: error: method engineGenerateSecret in class KeyAgreementSpi cannot be applied to given types;
            int bytesPlaced = keyAgreementSpi.engineGenerateSecret(sharedSecret, offset);
                                             ^
  required: byte[],int
  found:    byte[],int
  reason: engineGenerateSecret(byte[],int) has protected access in KeyAgreementSpi
./Data/javax_crypto/javaFiles/KeyAgreementSpi_4.java:18: error: cannot find symbol
        } catch (IllegalStateException | ShortBufferException e) {
                                         ^
  symbol:   class ShortBufferException
  location: class KeyAgreementSpi_4
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
4 errors


================================================================

Sample: KeyAgreementSpi_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_5.java:8: error: <anonymous KeyAgreementSpi_5$1> is not abstract and does not override abstract method engineGenerateSecret(byte[],int) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_5.java:17: error: method engineGenerateSecret in class KeyAgreementSpi cannot be applied to given types;
            SecretKey secretKey = keyAgreementSpi.engineGenerateSecret("AES");
                                                 ^
  required: String
  found:    String
  reason: engineGenerateSecret(String) has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyGenerator_1
----------------------------------------------------------------
stdout:
KeyGenerator algorithm: AES

================================================================

Sample: KeyGenerator_2
----------------------------------------------------------------
================================================================

Sample: KeyGenerator_3
----------------------------------------------------------------
stdout:
Generated Secret Key: javax.crypto.spec.SecretKeySpec@1751e

================================================================

Sample: KeyGenerator_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyGenerator_4.java:12: error: no suitable method found for init(SecretKeySpec)
            keyGen.init(new SecretKeySpec(random.generateSeed(16), "AES"));
                  ^
    method KeyGenerator.init(SecureRandom) is not applicable
      (argument mismatch; SecretKeySpec cannot be converted to SecureRandom)
    method KeyGenerator.init(AlgorithmParameterSpec) is not applicable
      (argument mismatch; SecretKeySpec cannot be converted to AlgorithmParameterSpec)
    method KeyGenerator.init(int) is not applicable
      (argument mismatch; SecretKeySpec cannot be converted to int)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: KeyGenerator_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyGenerator_5.java:11: error: no suitable method found for init(byte[],SecureRandom)
            keyGen.init(new SecretKeySpec("key".getBytes(), "AES").getEncoded(), random);
                  ^
    method KeyGenerator.init(AlgorithmParameterSpec,SecureRandom) is not applicable
      (argument mismatch; byte[] cannot be converted to AlgorithmParameterSpec)
    method KeyGenerator.init(int,SecureRandom) is not applicable
      (argument mismatch; byte[] cannot be converted to int)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: Mac_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Mac_1.java:13: error: cannot find symbol
        } catch (InvalidKeyException | NoSuchAlgorithmException e) {
                                       ^
  symbol:   class NoSuchAlgorithmException
  location: class Mac_1
1 error


================================================================

Sample: Mac_2
----------------------------------------------------------------
stdout:
MAC result: &*���c��]�w' P�n�G����D�7�l�Rx

================================================================

Sample: Mac_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Mac_3.java:13: error: unreported exception InvalidKeyException; must be caught or declared to be thrown
            mac.init(key);
                    ^
1 error


================================================================

Sample: Mac_4
----------------------------------------------------------------
stdout:
MAC result: &*���c��]�w' P�n�G����D�7�l�Rx

================================================================

Sample: Mac_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Mac_5.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        Mac mac = Mac.getInstance("HmacSHA256");
                                 ^
1 error


================================================================

Sample: MacSpi_1
----------------------------------------------------------------
================================================================

Sample: MacSpi_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/MacSpi_2.java:6: error: <anonymous MacSpi_2$1> is not abstract and does not override abstract method engineReset() in MacSpi
        MacSpi macSpi = new MacSpi() {
                                     ^
./Data/javax_crypto/javaFiles/MacSpi_2.java:14: error: no suitable method found for engineUpdate(byte)
        macSpi.engineUpdate(input);
              ^
    method MacSpi.engineUpdate(byte) is not applicable
      (engineUpdate(byte) has protected access in MacSpi)
    method MacSpi.engineUpdate(ByteBuffer) is not applicable
      (argument mismatch; byte cannot be converted to ByteBuffer)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: MacSpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/MacSpi_3.java:6: error: <anonymous MacSpi_3$1> is not abstract and does not override abstract method engineDoFinal() in MacSpi
        MacSpi customMacSpi = new MacSpi() {
                                           ^
./Data/javax_crypto/javaFiles/MacSpi_3.java:15: error: engineReset() has protected access in MacSpi
        customMacSpi.engineReset();
                    ^
2 errors


================================================================

Sample: MacSpi_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/MacSpi_4.java:9: error: engineDoFinal() has protected access in MacSpi
        byte[] result = macSpi.engineDoFinal();
                              ^
./Data/javax_crypto/javaFiles/MacSpi_4.java:16: error: CustomMacSpi is not abstract and does not override abstract method engineReset() in MacSpi
class CustomMacSpi extends MacSpi {
^
2 errors


================================================================

Sample: MacSpi_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/MacSpi_5.java:10: error: MyMacSpi is not abstract and does not override abstract method engineReset() in MacSpi
    static class MyMacSpi extends MacSpi {
           ^
1 error


================================================================

Sample: SealedObject_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SealedObject_2.java:2: error: cannot find symbol
import javax.crypto.NoSuchAlgorithmException;
                   ^
  symbol:   class NoSuchAlgorithmException
  location: package javax.crypto
./Data/javax_crypto/javaFiles/SealedObject_2.java:25: error: cannot find symbol
    public static Object getObject(SealedObject sealedObject, Key key) throws IOException, ClassNotFoundException, NoSuchAlgorithmException, InvalidKeyException {
                                                                                                                   ^
  symbol:   class NoSuchAlgorithmException
  location: class SealedObject_2
./Data/javax_crypto/javaFiles/SealedObject_2.java:15: error: incompatible types: Object cannot be converted to Serializable
            SealedObject sealedObject = new SealedObject(new Object(), Cipher.getInstance("AES"));
                                                         ^
./Data/javax_crypto/javaFiles/SealedObject_2.java:29: error: cannot find symbol
        byte[] encryptedData = sealedObject.getEncryptedContent();
                                           ^
  symbol:   method getEncryptedContent()
  location: variable sealedObject of type SealedObject
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
4 errors


================================================================

Sample: SealedObject_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SealedObject_3.java:5: error: unreported exception IOException; must be caught or declared to be thrown
        SealedObject sealedObject = new SealedObject("Hello", null);
                                    ^
1 error


================================================================

Sample: SecretKeyFactory_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SecretKeyFactory_2.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        SecretKeyFactory factory = SecretKeyFactory.getInstance("AES");
                                                               ^
1 error


================================================================

Sample: SecretKeyFactory_3
----------------------------------------------------------------
stdout:
Exception: AES SecretKeyFactory not available

================================================================

Sample: SecretKeyFactory_5
----------------------------------------------------------------
stdout:
Generated Secret Key: com.sun.crypto.provider.PBKDF2KeyImpl@f00a7781

================================================================

Sample: SecretKeyFactorySpi_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_1.java:11: error: cannot find symbol
                protected SecretKey engineGenerateSecret(KeySpec keySpec) throws InvalidKeySpecException {
                                                         ^
  symbol: class KeySpec
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_1.java:11: error: cannot find symbol
                protected SecretKey engineGenerateSecret(KeySpec keySpec) throws InvalidKeySpecException {
                                                                                 ^
  symbol: class InvalidKeySpecException
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_1.java:9: error: <anonymous SecretKeyFactorySpi_1$1> is not abstract and does not override abstract method engineTranslateKey(SecretKey) in SecretKeyFactorySpi
            SecretKeyFactorySpi factory = new SecretKeyFactorySpi() {
                                                                    ^
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_1.java:22: error: cannot find symbol
                        throw new InvalidKeySpecException("Invalid key specification");
                                  ^
  symbol: class InvalidKeySpecException
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_1.java:30: error: engineGenerateSecret(KeySpec) has protected access in SecretKeyFactorySpi
            SecretKey secretKey = factory.engineGenerateSecret(secretKeySpec);
                                         ^
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_1.java:32: error: cannot find symbol
        } catch (InvalidKeySpecException e) {
                 ^
  symbol:   class InvalidKeySpecException
  location: class SecretKeyFactorySpi_1
6 errors


================================================================

Sample: SecretKeyFactorySpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_3.java:8: error: <anonymous SecretKeyFactorySpi_3$1> is not abstract and does not override abstract method engineGetKeySpec(SecretKey,Class<?>) in SecretKeyFactorySpi
        SecretKeyFactorySpi secretKeyFactorySpi = new SecretKeyFactorySpi() {
                                                                            ^
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_3.java:21: error: engineTranslateKey(SecretKey) has protected access in SecretKeyFactorySpi
            SecretKey translatedKey = secretKeyFactorySpi.engineTranslateKey(originalKey);
                                                         ^
2 errors


================================================================

