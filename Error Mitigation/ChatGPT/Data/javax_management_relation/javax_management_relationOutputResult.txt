Sample: RelationNotification_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationNotification_1.java:5: error: no suitable constructor found for RelationNotification(String,String,int,long,String,String)
        RelationNotification notification = new RelationNotification("relationType", "source", 1, System.currentTimeMillis(), "message", "relationId");
                                            ^
    constructor RelationNotification.RelationNotification(String,Object,long,long,String,String,String,ObjectName,List<ObjectName>) is not applicable
      (actual and formal argument lists differ in length)
    constructor RelationNotification.RelationNotification(String,Object,long,long,String,String,String,ObjectName,String,List<ObjectName>,List<ObjectName>) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: RelationNotification_2
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationNotification_2.java:6: error: no suitable constructor found for RelationNotification(String,String,int,long,String,String,ObjectName)
        RelationNotification notification = new RelationNotification("relationType", "source", 1, System.currentTimeMillis(), "message", "relationId", new ObjectName("domain", "key", "value"));
                                            ^
    constructor RelationNotification.RelationNotification(String,Object,long,long,String,String,String,ObjectName,List<ObjectName>) is not applicable
      (actual and formal argument lists differ in length)
    constructor RelationNotification.RelationNotification(String,Object,long,long,String,String,String,ObjectName,String,List<ObjectName>,List<ObjectName>) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: RelationNotification_3
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationNotification_3.java:5: error: non-static variable this cannot be referenced from a static context
        RelationNotification notification = new RelationNotification("relationType", this, 1, System.currentTimeMillis(), "Notification message", "relationTypeName");
                                                                                     ^
./Data/javax_management_relation/javaFiles/RelationNotification_3.java:5: error: no suitable constructor found for RelationNotification(String,RelationNotification_3,int,long,String,String)
        RelationNotification notification = new RelationNotification("relationType", this, 1, System.currentTimeMillis(), "Notification message", "relationTypeName");
                                            ^
    constructor RelationNotification.RelationNotification(String,Object,long,long,String,String,String,ObjectName,List<ObjectName>) is not applicable
      (actual and formal argument lists differ in length)
    constructor RelationNotification.RelationNotification(String,Object,long,long,String,String,String,ObjectName,String,List<ObjectName>,List<ObjectName>) is not applicable
      (actual and formal argument lists differ in length)
2 errors


================================================================

Sample: RelationService_2
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationService_2.java:8: error: constructor RelationService in class RelationService cannot be applied to given types;
        RelationService relationService = new RelationService();
                                          ^
  required: boolean
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: RelationService_4
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationService_4.java:8: error: constructor RelationService in class RelationService cannot be applied to given types;
        RelationService relationService = new RelationService();
                                          ^
  required: boolean
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: RelationTypeSupport_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationTypeSupport_1.java:5: error: constructor RelationTypeSupport in class RelationTypeSupport cannot be applied to given types;
        RelationTypeSupport relationTypeSupport = new RelationTypeSupport("ExampleRelationType");
                                                  ^
  required: String
  found:    String
  reason: RelationTypeSupport(String) has protected access in RelationTypeSupport
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: RelationTypeSupport_3
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationTypeSupport_3.java:7: error: cannot find symbol
        RelationTypeSupport relationTypeSupport = new RelationTypeSupport("RelationTypeName", "RelationTypeDesc");
        ^
  symbol:   class RelationTypeSupport
  location: class RelationTypeSupport_3
./Data/javax_management_relation/javaFiles/RelationTypeSupport_3.java:7: error: cannot find symbol
        RelationTypeSupport relationTypeSupport = new RelationTypeSupport("RelationTypeName", "RelationTypeDesc");
                                                      ^
  symbol:   class RelationTypeSupport
  location: class RelationTypeSupport_3
2 errors


================================================================

Sample: RelationTypeSupport_4
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RelationTypeSupport_4.java:7: error: constructor RelationTypeSupport in class RelationTypeSupport cannot be applied to given types;
        RelationTypeSupport relationTypeSupport = new RelationTypeSupport("ExampleRelationType");
                                                  ^
  required: String
  found:    String
  reason: RelationTypeSupport(String) has protected access in RelationTypeSupport
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: Role_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/Role_1.java:5: error: constructor Role in class Role cannot be applied to given types;
        Role role = new Role("roleName");
                    ^
  required: String,List<ObjectName>
  found:    String
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: Role_2
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/Role_2.java:6: error: constructor Role in class Role cannot be applied to given types;
        Role role = new Role("roleName");
                    ^
  required: String,List<ObjectName>
  found:    String
  reason: actual and formal argument lists differ in length
./Data/javax_management_relation/javaFiles/Role_2.java:7: error: cannot find symbol
        role.setRoleValue(new ArrayList<ObjectName>());
                              ^
  symbol:   class ArrayList
  location: class Role_2
2 errors


================================================================

Sample: Role_3
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/Role_3.java:5: error: constructor Role in class Role cannot be applied to given types;
        Role role = new Role();
                    ^
  required: String,List<ObjectName>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: Role_4
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/Role_4.java:10: error: unreported exception MalformedObjectNameException; must be caught or declared to be thrown
        objectNames.add(new ObjectName("com.example:type=Example"));
                        ^
1 error


================================================================

Sample: RoleInfo_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleInfo_1.java:5: error: incompatible types: String cannot be converted to RoleInfo
        RoleInfo roleInfo = new RoleInfo("roleName");
                                         ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: RoleInfo_3
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleInfo_3.java:5: error: incompatible types: String[] cannot be converted to String
        RoleInfo roleInfo = new RoleInfo("roleName", new String[]{"roleValue1", "roleValue2"});
                                                     ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: RoleInfo_4
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleInfo_4.java:5: error: incompatible types: String[] cannot be converted to String
        RoleInfo roleInfo = new RoleInfo("roleName", new String[]{"roleValue1", "roleValue2"});
                                                     ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: RoleInfo_5
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleInfo_5.java:5: error: incompatible types: String[] cannot be converted to String
        RoleInfo roleInfo = new RoleInfo("roleName", new String[]{"roleValue1", "roleValue2"});
                                                     ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: RoleList_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleList_1.java:7: error: cannot find symbol
        Role role = new Role("roleName", new ArrayList<String>());
                                             ^
  symbol:   class ArrayList
  location: class RoleList_1
1 error


================================================================

Sample: RoleUnresolved_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleUnresolved_1.java:5: error: constructor RoleUnresolved in class RoleUnresolved cannot be applied to given types;
        RoleUnresolved unresolvedRole = new RoleUnresolved();
                                        ^
  required: String,List<ObjectName>,int
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: RoleUnresolved_4
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleUnresolved_4.java:5: error: constructor RoleUnresolved in class RoleUnresolved cannot be applied to given types;
        RoleUnresolved roleUnresolved = new RoleUnresolved();
                                        ^
  required: String,List<ObjectName>,int
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: RoleUnresolvedList_1
----------------------------------------------------------------
output:
./Data/javax_management_relation/javaFiles/RoleUnresolvedList_1.java:7: error: constructor RoleUnresolved in class RoleUnresolved cannot be applied to given types;
        RoleUnresolved role = new RoleUnresolved("roleName", "roleValue");
                              ^
  required: String,List<ObjectName>,int
  found:    String,String
  reason: actual and formal argument lists differ in length
1 error


================================================================

