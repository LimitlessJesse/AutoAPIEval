Sample: 0 MBeanServerNotificationFilter
----------------------------------------------------------------
1. `void disableAllObjectNotifications()`: This method disables all object notifications.
2. `void disableAttributeChangeNotifications()`: This method disables attribute change notifications.
3. `void disableAttributeChangeNotifications(String attributeName)`: This method disables attribute change notifications for a specific attribute.
4. `void disableAttributeChangeNotifications(String[] attributeNames)`: This method disables attribute change notifications for multiple attributes.
5. `void disableAttributeChangeNotifications(List<String> attributeNames)`: This method disables attribute change notifications for a list of attributes.
================================================================

Sample: 1 RelationNotification
----------------------------------------------------------------
1. `String getRelationId()`: This method returns the identifier of the relation that generated the notification.
2. `ObjectName getObjectName()`: This method returns the ObjectName of the MBean sending the notification.
3. `String getRelationTypeName()`: This method returns the name of the relation type of the relation that generated the notification.
4. `List<ObjectName> getRoles()`: This method returns a list of ObjectNames of the roles in the relation that generated the notification.
5. `int getEventType()`: This method returns the type of the notification event.
================================================================

Sample: 2 RelationService
----------------------------------------------------------------
1. `void createRelationType(String relationTypeName, List<RoleInfo> roleInfoList)`: This method creates a new relation type with the specified name and role information.
2. `void removeRelationType(String relationTypeName)`: This method removes the relation type with the specified name.
3. `void createRelation(String relationId, String relationTypeName, List<Role> roleList)`: This method creates a new relation with the specified ID, relation type, and roles.
4. `void removeRelation(String relationId)`: This method removes the relation with the specified ID.
5. `List<ObjectName> findRelationsOfType(String relationTypeName)`: This method returns a list of ObjectNames for relations of the specified type.
================================================================

Sample: 3 RelationSupport
----------------------------------------------------------------
1. `void setRole(String roleName, Object roleValue)`: This method sets the value of the role with the given name.
2. `Object getRole(String roleName)`: This method returns the value of the role with the given name.
3. `List<String> getRoleNames()`: This method returns a list of role names for this relation.
4. `void setRoles(Map<String, Object> roles)`: This method sets the roles for this relation using the provided map of role names and values.
5. `Map<String, Object> getAllRoles()`: This method returns a map containing all the roles and their values for this relation.
================================================================

Sample: 4 RelationTypeSupport
----------------------------------------------------------------
1. `String getRelationTypeName()`: This method returns the name of the relation type.
2. `List<String> getRoleNames()`: This method returns a list of role names for the relation type.
3. `void addRoleInfo(RoleInfo roleInfo)`: This method adds role information to the relation type.
4. `RoleInfo getRoleInfo(String roleName)`: This method returns the role information for the specified role name.
5. `void removeRole(String roleName)`: This method removes the specified role from the relation type.
================================================================

Sample: 5 Role
----------------------------------------------------------------
1. `String getRoleName()`: This method returns the name of the role.
2. `List<ObjectName> getRoleValue()`: This method returns a list of ObjectNames that are referenced by the role.
3. `void setRoleName(String roleName)`: This method sets the name of the role.
4. `void setRoleValue(List<ObjectName> roleValue)`: This method sets the list of ObjectNames referenced by the role.
5. `void add(ObjectName objectName)`: This method adds a single ObjectName to the list of referenced MBeans.
================================================================

Sample: 6 RoleInfo
----------------------------------------------------------------
1. `String getName()`: This method returns the name of the role.
2. `String getRole()`: This method returns the role value.
3. `boolean isReadable()`: This method returns true if the role is readable, false otherwise.
4. `boolean isWritable()`: This method returns true if the role is writable, false otherwise.
5. `String toString()`: This method returns a string representation of the RoleInfo object.
================================================================

Sample: 7 RoleList
----------------------------------------------------------------
1. `void add(Role role)`: This method adds a Role object to the RoleList.
2. `void addAll(RoleList roleList)`: This method adds all the Role objects from the specified RoleList to this RoleList.
3. `Role get(int index)`: This method returns the Role object at the specified index in the RoleList.
4. `boolean remove(Role role)`: This method removes the specified Role object from the RoleList.
5. `int size()`: This method returns the number of Role objects in the RoleList.
================================================================

Sample: 8 RoleResult
----------------------------------------------------------------
1. `List<ObjectName> getRoles()`: This method returns a list of ObjectNames representing the roles accessed in the RoleResult.
2. `boolean hasRole(String roleName)`: This method checks if the RoleResult contains a role with the specified name.
3. `Object getRoleValue(String roleName)`: This method returns the value associated with the specified role name.
4. `void setRoleValue(String roleName, Object roleValue)`: This method sets the value for the specified role name in the RoleResult.
5. `void addRoles(Map<String, Object> roles)`: This method adds multiple roles and their values to the RoleResult.
================================================================

Sample: 9 RoleStatus
----------------------------------------------------------------
1. `String getName()`: This method returns the name of the role status.
2. `int getStatusCode()`: This method returns the status code of the role status.
3. `void setStatusCode(int statusCode)`: This method sets the status code of the role status.
4. `String getDescription()`: This method returns the description of the role status.
5. `void setDescription(String description)`: This method sets the description of the role status.
================================================================

Sample: 10 RoleUnresolved
----------------------------------------------------------------
1. `String getRoleName()`: This method returns the name of the unresolved role.
2. `ObjectName getRoleValue()`: This method returns the ObjectName of the unresolved role.
3. `String getRoleValueString()`: This method returns a string representation of the unresolved role value.
4. `void setRoleName(String roleName)`: This method sets the name of the unresolved role.
5. `void setRoleValue(ObjectName roleValue)`: This method sets the ObjectName of the unresolved role.
================================================================

Sample: 11 RoleUnresolvedList
----------------------------------------------------------------
1. `void add(RoleUnresolved role)`: This method adds a RoleUnresolved object to the list.
2. `RoleUnresolved get(int index)`: This method returns the RoleUnresolved object at the specified index in the list.
3. `int size()`: This method returns the number of RoleUnresolved objects in the list.
4. `boolean isEmpty()`: This method checks if the list is empty.
5. `void clear()`: This method removes all RoleUnresolved objects from the list.
================================================================

