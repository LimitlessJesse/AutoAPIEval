Sample: SerialArray_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialArray_1.java:8: error: no suitable constructor found for SerialArray(no arguments)
            SerialArray serialArray = new SerialArray();
                                      ^
    constructor SerialArray.SerialArray(Array,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
    constructor SerialArray.SerialArray(Array) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SerialArray_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialArray_2.java:7: error: no suitable constructor found for SerialArray(no arguments)
            SerialArray serialArray = new SerialArray();
                                      ^
    constructor SerialArray.SerialArray(Array,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
    constructor SerialArray.SerialArray(Array) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SerialArray_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialArray_4.java:7: error: no suitable constructor found for SerialArray(no arguments)
        SerialArray serialArray = new SerialArray(); // Instantiate SerialArray object
                                  ^
    constructor SerialArray.SerialArray(Array,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
    constructor SerialArray.SerialArray(Array) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SerialBlob_1
----------------------------------------------------------------
stdout:
Original data: [1, 2, 3, 4, 5]
Copied bytes: [2, 3, 4]

================================================================

Sample: SerialBlob_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_2.java:18: error: Alternatives in a multi-catch statement cannot be related by subclassing
        } catch (SQLException | SerialException e) {
                                ^
  Alternative SerialException is a subclass of alternative SQLException
1 error


================================================================

Sample: SerialBlob_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_3.java:8: error: unreported exception SQLException; must be caught or declared to be thrown
            SerialBlob serialBlob = new SerialBlob(bytes);
                                    ^
1 error


================================================================

Sample: SerialBlob_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_4.java:4: error: cannot find symbol
import java.sql.SerialException;
               ^
  symbol:   class SerialException
  location: package java.sql
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_4.java:14: error: cannot find symbol
        } catch (SQLException | SerialException e) {
                                ^
  symbol:   class SerialException
  location: class SerialBlob_4
2 errors


================================================================

Sample: SerialBlob_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_5.java:18: error: Alternatives in a multi-catch statement cannot be related by subclassing
        } catch (SerialException | SQLException e) {
                                   ^
  Alternative SerialException is a subclass of alternative SQLException
1 error


================================================================

Sample: SerialClob_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialClob_1.java:25: error: Alternatives in a multi-catch statement cannot be related by subclassing
        } catch (SQLException | SerialException e) {
                                ^
  Alternative SerialException is a subclass of alternative SQLException
1 error


================================================================

Sample: SerialClob_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialClob_2.java:8: error: unreported exception SQLException; must be caught or declared to be thrown
            SerialClob serialClob = new SerialClob(charArray);
                                    ^
1 error


================================================================

Sample: SerialClob_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialClob_3.java:16: error: Alternatives in a multi-catch statement cannot be related by subclassing
        } catch (SerialException | SQLException e) {
                                   ^
  Alternative SerialException is a subclass of alternative SQLException
1 error


================================================================

Sample: SerialClob_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialClob_4.java:18: error: Alternatives in a multi-catch statement cannot be related by subclassing
        } catch (SerialException | SQLException e) {
                                   ^
  Alternative SerialException is a subclass of alternative SQLException
1 error


================================================================

Sample: SerialClob_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialClob_5.java:4: error: cannot find symbol
import java.sql.SerialException;
               ^
  symbol:   class SerialException
  location: package java.sql
./Data/javax_sql_rowset_serial/javaFiles/SerialClob_5.java:15: error: cannot find symbol
        } catch (SerialException | SQLException e) {
                 ^
  symbol:   class SerialException
  location: class SerialClob_5
2 errors


================================================================

Sample: SerialDatalink_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialDatalink_3.java:5: error: incompatible types: String cannot be converted to URL
        SerialDatalink datalink1 = new SerialDatalink("https://example.com");
                                                      ^
./Data/javax_sql_rowset_serial/javaFiles/SerialDatalink_3.java:6: error: incompatible types: String cannot be converted to URL
        SerialDatalink datalink2 = new SerialDatalink("https://example.com");
                                                      ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: SerialDatalink_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialDatalink_4.java:5: error: incompatible types: String cannot be converted to URL
        SerialDatalink serialDatalink = new SerialDatalink("https://example.com");
                                                           ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: SerialJavaObject_1
----------------------------------------------------------------
stdout:
Copy of SerialJavaObject: java.lang.Object@7e9a5fbe

================================================================

Sample: SerialJavaObject_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialJavaObject_5.java:5: error: constructor SerialJavaObject in class SerialJavaObject cannot be applied to given types;
        SerialJavaObject obj1 = new SerialJavaObject();
                                ^
  required: Object
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sql_rowset_serial/javaFiles/SerialJavaObject_5.java:6: error: constructor SerialJavaObject in class SerialJavaObject cannot be applied to given types;
        SerialJavaObject obj2 = new SerialJavaObject();
                                ^
  required: Object
  found:    no arguments
  reason: actual and formal argument lists differ in length
2 errors


================================================================

Sample: SerialRef_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialRef_1.java:6: error: constructor SerialRef in class SerialRef cannot be applied to given types;
        SerialRef serialRef = new SerialRef();
                              ^
  required: Ref
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SerialRef_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialRef_2.java:7: error: constructor SerialRef in class SerialRef cannot be applied to given types;
            SerialRef serialRef = new SerialRef();
                                  ^
  required: Ref
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SerialRef_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialRef_3.java:6: error: constructor SerialRef in class SerialRef cannot be applied to given types;
        SerialRef serialRef = new SerialRef();
                              ^
  required: Ref
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SerialRef_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialRef_5.java:5: error: constructor SerialRef in class SerialRef cannot be applied to given types;
        SerialRef ref1 = new SerialRef();
                         ^
  required: Ref
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sql_rowset_serial/javaFiles/SerialRef_5.java:6: error: constructor SerialRef in class SerialRef cannot be applied to given types;
        SerialRef ref2 = new SerialRef();
                         ^
  required: Ref
  found:    no arguments
  reason: actual and formal argument lists differ in length
2 errors


================================================================

Sample: SerialStruct_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialStruct_1.java:6: error: no suitable constructor found for SerialStruct(no arguments)
        SerialStruct serialStruct = new SerialStruct();
                                    ^
    constructor SerialStruct.SerialStruct(Struct,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
    constructor SerialStruct.SerialStruct(SQLData,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SerialStruct_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialStruct_2.java:6: error: no suitable constructor found for SerialStruct(no arguments)
        SerialStruct serialStruct = new SerialStruct();
                                    ^
    constructor SerialStruct.SerialStruct(Struct,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
    constructor SerialStruct.SerialStruct(SQLData,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SerialStruct_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialStruct_4.java:25: error: cannot find symbol
class SQLDataImpl implements SQLData {
                             ^
  symbol: class SQLData
./Data/javax_sql_rowset_serial/javaFiles/SerialStruct_4.java:8: error: no suitable constructor found for SerialStruct(no arguments)
        SerialStruct serialStruct = new SerialStruct(); // Instantiate SerialStruct object
                                    ^
    constructor SerialStruct.SerialStruct(Struct,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
    constructor SerialStruct.SerialStruct(SQLData,Map<String,Class<?>>) is not applicable
      (actual and formal argument lists differ in length)
2 errors


================================================================

Sample: SQLInputImpl_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_1.java:6: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl();
                                ^
  required: Object[],Map<String,Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLInputImpl_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_2.java:7: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl(null, null, null);
                                ^
  required: Object[],Map<String,Class<?>>
  found:    <null>,<null>,<null>
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLInputImpl_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_3.java:7: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl();
                                ^
  required: Object[],Map<String,Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLInputImpl_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_4.java:7: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl();
                                ^
  required: Object[],Map<String,Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLInputImpl_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_5.java:7: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl();
                                ^
  required: Object[],Map<String,Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLOutputImpl_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLOutputImpl_1.java:7: error: constructor SQLOutputImpl in class SQLOutputImpl cannot be applied to given types;
        SQLOutputImpl sqlOutput = new SQLOutputImpl();
                                  ^
  required: Vector<?>,Map<String,?>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLOutputImpl_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLOutputImpl_2.java:9: error: constructor SQLOutputImpl in class SQLOutputImpl cannot be applied to given types;
            SQLOutputImpl sqlOutput = new SQLOutputImpl();
                                      ^
  required: Vector<?>,Map<String,?>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLOutputImpl_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLOutputImpl_3.java:7: error: constructor SQLOutputImpl in class SQLOutputImpl cannot be applied to given types;
        SQLOutputImpl sqlOutput = new SQLOutputImpl();
                                  ^
  required: Vector<?>,Map<String,?>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLOutputImpl_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLOutputImpl_4.java:7: error: constructor SQLOutputImpl in class SQLOutputImpl cannot be applied to given types;
        SQLOutputImpl sqlOutput = new SQLOutputImpl();
                                  ^
  required: Vector<?>,Map<String,?>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLOutputImpl_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLOutputImpl_5.java:6: error: constructor SQLOutputImpl in class SQLOutputImpl cannot be applied to given types;
        SQLOutputImpl sqlOutput = new SQLOutputImpl();
                                  ^
  required: Vector<?>,Map<String,?>
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

