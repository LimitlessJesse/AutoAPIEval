Sample: 0 SerialArray
----------------------------------------------------------------
1. `Object getArray()`: This method returns the array in its serialized form.
2. `String getBaseTypeName()`: This method returns the SQL type name of the elements in the array.
3. `Map<String, Class<?>> getBaseTypeMap()`: This method returns a Map object that contains the mapping of a UDT name to a Class object for the custom mapping of an SQL structured or distinct type.
4. `ResultSet getResultSet()`: This method returns a ResultSet object containing all of the elements in the array.
5. `long getBaseType()`: This method returns the base type of the array as defined in java.sql.Types.
================================================================

Sample: 1 SerialBlob
----------------------------------------------------------------
1. `byte[] getBytes(long pos, int length)`: This method returns a byte array containing a subset of the SQL BLOB value, starting at the specified position and with the specified length.
2. `InputStream getBinaryStream()`: This method returns an InputStream object that contains a stream of the SQL BLOB value.
3. `long length()`: This method returns the number of bytes in the SQL BLOB value.
4. `OutputStream setBinaryStream(long pos)`: This method returns an OutputStream object that can be used to write to the SQL BLOB value starting at the specified position.
5. `void truncate(long len)`: This method truncates the SQL BLOB value to a specified length.
================================================================

Sample: 2 SerialClob
----------------------------------------------------------------
1. `Reader getCharacterStream()`: This method returns a Reader object that contains a stream of characters representing the data in the CLOB value.
2. `long length()`: This method returns the number of characters in the CLOB value.
3. `String getSubString(long pos, int length)`: This method returns a String object that contains a substring of the CLOB value, starting at the specified position and with the specified length.
4. `void truncate(long len)`: This method truncates the CLOB value to the specified length.
5. `OutputStream setAsciiStream(long pos)`: This method returns an OutputStream object that can be used to write ASCII characters to the CLOB value starting at the specified position.
================================================================

Sample: 3 SerialDatalink
----------------------------------------------------------------
1. `String getDatalink()`: This method returns the URL value of the DATALINK.
2. `void setDatalink(String url)`: This method sets the URL value of the DATALINK.
3. `boolean equals(Object obj)`: This method compares this SerialDatalink object to the specified object.
4. `int hashCode()`: This method returns a hash code value for the object.
5. `String toString()`: This method returns a string representation of the object.
================================================================

Sample: 4 SerialJavaObject
----------------------------------------------------------------
1. `Object getObject()`: This method returns the Java object that this SerialJavaObject represents.
2. `void setObject(Object obj)`: This method sets the Java object that this SerialJavaObject represents.
3. `String getClassName()`: This method returns the fully qualified class name of the Java object that this SerialJavaObject represents.
4. `SerialJavaObject clone()`: This method creates a copy of this SerialJavaObject instance.
5. `boolean equals(Object obj)`: This method compares this SerialJavaObject to the specified object.
================================================================

Sample: 5 SerialRef
----------------------------------------------------------------
1. `String getBaseTypeName()`: This method returns the SQL type name of the base type of the Ref object.
2. `Object getObject()`: This method retrieves the Object for this Ref object.
3. `void setObject(Object value)`: This method sets the Object for this Ref object to the given value.
4. `Ref getRef()`: This method returns a Ref object representing the SQL REF value of this SerialRef object.
5. `boolean equals(Object obj)`: This method compares this SerialRef to the specified object.
================================================================

Sample: 6 SerialStruct
----------------------------------------------------------------
1. `Object[] getAttributes()`: This method returns an array containing the attributes of the SQL structured type.
2. `String getSQLTypeName()`: This method returns the SQL type name of the structured type that this SerialStruct represents.
3. `Map<String, Object> getAttributeMap()`: This method returns a Map object containing the attributes of the SQL structured type.
4. `Object[] getAttributes(Map<String, Class<?>> map)`: This method returns an array containing the attributes of the SQL structured type based on the given type map.
5. `String toString()`: This method returns a string representation of the SerialStruct object.
================================================================

Sample: 7 SQLInputImpl
----------------------------------------------------------------
1. `String readString()`: This method reads a String value from the input stream.
2. `Array readArray()`: This method reads an Array value from the input stream.
3. `BigDecimal readBigDecimal()`: This method reads a BigDecimal value from the input stream.
4. `Blob readBlob()`: This method reads a Blob value from the input stream.
5. `Clob readClob()`: This method reads a Clob value from the input stream.
================================================================

Sample: 8 SQLOutputImpl
----------------------------------------------------------------
1. `void writeArray(Array x)`: Writes an SQL ARRAY value to the stream.
2. `void writeAsciiStream(InputStream x)`: Writes an ASCII stream value to the stream.
3. `void writeBigDecimal(BigDecimal x)`: Writes a BigDecimal value to the stream.
4. `void writeBlob(Blob x)`: Writes a BLOB value to the stream.
5. `void writeBoolean(boolean x)`: Writes a boolean value to the stream.
================================================================

