Sample Number,ClassName,Snippet Number,Method,Exist,Description
1,AbstractQueuedLongSynchronizer,1,void setState(long newState),True
1,AbstractQueuedLongSynchronizer,2,long getState(),True
1,AbstractQueuedLongSynchronizer,3,"boolean compareAndSetState(long expect, long update)",True
1,AbstractQueuedLongSynchronizer,4,void acquire(long arg),True
1,AbstractQueuedLongSynchronizer,5,boolean release(long arg),True
2,AbstractQueuedSynchronizer,1,void acquire(int permits),True
2,AbstractQueuedSynchronizer,2,"boolean tryAcquireNanos(int permits, long nanosTimeout)",True
2,AbstractQueuedSynchronizer,3,void release(int permits),False
2,AbstractQueuedSynchronizer,4,int getQueueLength(),True
2,AbstractQueuedSynchronizer,5,boolean hasQueuedThreads(),True
4,ReentrantLock,1,void lock(),True
4,ReentrantLock,2,void unlock(),True
4,ReentrantLock,3,Condition newCondition(),True
4,ReentrantLock,4,boolean tryLock(),True
4,ReentrantLock,5,boolean isHeldByCurrentThread(),True
5,ReentrantReadWriteLock,1,ReadWriteLock readWriteLock(),False
5,ReentrantReadWriteLock,2,Lock readLock(),False
5,ReentrantReadWriteLock,3,Lock writeLock(),False
5,ReentrantReadWriteLock,4,int getReadHoldCount(),True
5,ReentrantReadWriteLock,5,int getWriteHoldCount(),True
6,ReentrantReadWriteLock.ReadLock,1,void lock(),True
6,ReentrantReadWriteLock.ReadLock,2,void unlock(),True
6,ReentrantReadWriteLock.ReadLock,3,int getHoldCount(),False
6,ReentrantReadWriteLock.ReadLock,4,boolean isHeldByCurrentThread(),False
6,ReentrantReadWriteLock.ReadLock,5,int getQueueLength(),False
