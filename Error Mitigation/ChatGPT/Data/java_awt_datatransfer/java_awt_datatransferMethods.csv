ClassName,Method,Return Type,Description
Clipboard,addFlavorListener(FlavorListener listener),void,Registers the specified FlavorListener to receive FlavorEvents from this clipboard.
Clipboard,getAvailableDataFlavors(),DataFlavor[],Returns an array of DataFlavors in which the current contents of this clipboard can be provided.
Clipboard,getContents(Object requestor),Transferable,Returns a transferable object representing the current contents of the clipboard.
Clipboard,getData(DataFlavor flavor),Object,Returns an object representing the current contents of this clipboard in the specified DataFlavor.
Clipboard,getFlavorListeners(),FlavorListener[],Returns an array of all the FlavorListeners currently registered on this Clipboard.
Clipboard,getName(),String,Returns the name of this clipboard object.
Clipboard,isDataFlavorAvailable(DataFlavor flavor),boolean,Returns whether or not the current contents of this clipboard can be provided in the specified DataFlavor.
Clipboard,removeFlavorListener(FlavorListener listener),void,Removes the specified FlavorListener so that it no longer receives FlavorEvents from this Clipboard.
Clipboard,"setContents(Transferable contents, ClipboardOwner owner)",void,Sets the current contents of the clipboard to the specified transferable object and registers the specified clipboard owner as the owner of the new contents.
DataFlavor,clone(),Object,Returns a clone of this DataFlavor.
DataFlavor,equals(DataFlavor that),boolean,This method has the same behavior as equals(Object).
DataFlavor,equals(Object o),boolean,"Indicates whether some other object is ""equal to"" this one."
DataFlavor,equals(String s),boolean,"Deprecated. As inconsistent with hashCode() contract, use isMimeTypeEqual(String) instead."
DataFlavor,getDefaultRepresentationClass(),Class<?>,NULL
DataFlavor,getDefaultRepresentationClassAsString(),String,NULL
DataFlavor,getHumanPresentableName(),String,Returns the human presentable name for the data format that this DataFlavor represents.
DataFlavor,getMimeType(),String,Returns the MIME type string for this DataFlavor.
DataFlavor,getParameter(String paramName),String,"Returns the human presentable name for this DataFlavor if paramName equals ""humanPresentableName""."
DataFlavor,getPrimaryType(),String,Returns the primary MIME type for this DataFlavor.
DataFlavor,getReaderForText(Transferable transferable),Reader,"Gets a Reader for a text flavor, decoded, if necessary, for the expected charset (encoding)."
DataFlavor,getRepresentationClass(),Class<?>,Returns the Class which objects supporting this DataFlavor will return when this DataFlavor is requested.
DataFlavor,getSubType(),String,Returns the sub MIME type of this DataFlavor.
DataFlavor,getTextPlainUnicodeFlavor(),static DataFlavor,"Returns a DataFlavor representing plain text with Unicode encoding, where:"
DataFlavor,hashCode(),int,Returns hash code for this DataFlavor.
DataFlavor,isFlavorJavaFileListType(),boolean,Returns true if the DataFlavor specified represents a list of file objects.
DataFlavor,isFlavorRemoteObjectType(),boolean,Returns true if the DataFlavor specified represents a remote object.
DataFlavor,isFlavorSerializedObjectType(),boolean,Returns true if the DataFlavor specified represents a serialized object.
DataFlavor,isFlavorTextType(),boolean,Returns whether this DataFlavor is a valid text flavor for this implementation of the Java platform.
DataFlavor,isMimeTypeEqual(DataFlavor dataFlavor),boolean,Compares the mimeType of two DataFlavor objects.
DataFlavor,isMimeTypeEqual(String mimeType),boolean,Returns whether the string representation of the MIME type passed in is equivalent to the MIME type of this DataFlavor.
DataFlavor,isMimeTypeSerializedObject(),boolean,Does the DataFlavor represent a serialized object?
DataFlavor,isRepresentationClassByteBuffer(),boolean,Returns whether the representation class for this DataFlavor is java.nio.ByteBuffer or a subclass thereof.
DataFlavor,isRepresentationClassCharBuffer(),boolean,Returns whether the representation class for this DataFlavor is java.nio.CharBuffer or a subclass thereof.
DataFlavor,isRepresentationClassInputStream(),boolean,Does the DataFlavor represent a java.io.InputStream?
DataFlavor,isRepresentationClassReader(),boolean,Returns whether the representation class for this DataFlavor is java.io.Reader or a subclass thereof.
DataFlavor,isRepresentationClassRemote(),boolean,Returns true if the representation class is Remote.
DataFlavor,isRepresentationClassSerializable(),boolean,Returns true if the representation class can be serialized.
DataFlavor,match(DataFlavor that),boolean,Identical to equals(DataFlavor).
DataFlavor,normalizeMimeType(String mimeType),protected String,Deprecated.
DataFlavor,"normalizeMimeTypeParameter(String parameterName, String parameterValue)",protected String,Deprecated.
DataFlavor,readExternal(ObjectInput is),void,Restores this DataFlavor from a Serialized state.
DataFlavor,selectBestTextFlavor(DataFlavor[] availableFlavors),static DataFlavor,Selects the best text DataFlavor from an array of DataFlavors.
DataFlavor,setHumanPresentableName(String humanPresentableName),void,Sets the human presentable name for the data format that this DataFlavor represents.
DataFlavor,toString(),String,String representation of this DataFlavor and its parameters.
DataFlavor,"tryToLoadClass(String className, ClassLoader fallback)",protected static Class<?>,"Tries to load a class from: the bootstrap loader, the system loader, the context loader (if one is present) and finally the loader specified."
DataFlavor,writeExternal(ObjectOutput os),void,Serializes this DataFlavor.
StringSelection,getTransferData(DataFlavor flavor),Object,Returns the Transferable's data in the requested DataFlavor if possible.
StringSelection,getTransferDataFlavors(),DataFlavor[],Returns an array of flavors in which this Transferable can provide the data.
StringSelection,isDataFlavorSupported(DataFlavor flavor),boolean,Returns whether the requested flavor is supported by this Transferable.
StringSelection,"lostOwnership(Clipboard clipboard, Transferable contents)",void,Notifies this object that it is no longer the clipboard owner.
SystemFlavorMap,"addFlavorForUnencodedNative(String nat, DataFlavor flav)",void,Adds a mapping from a single String native to a single DataFlavor.
SystemFlavorMap,"addUnencodedNativeForFlavor(DataFlavor flav, String nat)",void,Adds a mapping from the specified DataFlavor (and all DataFlavors equal to the specified DataFlavor) to the specified String native.
SystemFlavorMap,decodeDataFlavor(String nat),static DataFlavor,Decodes a String native for use as a DataFlavor.
SystemFlavorMap,decodeJavaMIMEType(String nat),static String,Decodes a String native for use as a Java MIME type.
SystemFlavorMap,encodeDataFlavor(DataFlavor flav),static String,Encodes a DataFlavor for use as a String native.
SystemFlavorMap,encodeJavaMIMEType(String mimeType),static String,Encodes a MIME type for use as a String native.
SystemFlavorMap,getDefaultFlavorMap(),static FlavorMap,Returns the default FlavorMap for this thread's ClassLoader.
SystemFlavorMap,getFlavorsForNative(String nat),List<DataFlavor>,Returns a List of DataFlavors to which the specified String native can be translated by the data transfer subsystem.
SystemFlavorMap,getFlavorsForNatives(String[] natives),"Map<String,DataFlavor>",Returns a Map of the specified String natives to their most preferred DataFlavor.
SystemFlavorMap,getNativesForFlavor(DataFlavor flav),List<String>,Returns a List of String natives to which the specified DataFlavor can be translated by the data transfer subsystem.
SystemFlavorMap,getNativesForFlavors(DataFlavor[] flavors),"Map<DataFlavor,String>",Returns a Map of the specified DataFlavors to their most preferred String native.
SystemFlavorMap,isJavaMIMEType(String str),static boolean,Returns whether the specified String is an encoded Java MIME type.
SystemFlavorMap,"setFlavorsForNative(String nat, DataFlavor[] flavors)",void,"Discards the current mappings for the specified String native, and creates new mappings to the specified DataFlavors."
SystemFlavorMap,"setNativesForFlavor(DataFlavor flav, String[] natives)",void,"Discards the current mappings for the specified DataFlavor and all DataFlavors equal to the specified DataFlavor, and creates new mappings to the specified String natives."
