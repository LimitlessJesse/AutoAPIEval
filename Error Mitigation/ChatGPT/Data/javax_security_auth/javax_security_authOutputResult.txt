Sample: Policy_2
----------------------------------------------------------------
output:
./Data/javax_security_auth/javaFiles/Policy_2.java:1: error: cannot find symbol
import javax.security.auth.Policy;
                          ^
  symbol:   class Policy
  location: package javax.security.auth
./Data/javax_security_auth/javaFiles/Policy_2.java:5: error: cannot find symbol
        Policy policy = Policy.getPolicy();
        ^
  symbol:   class Policy
  location: class Policy_2
./Data/javax_security_auth/javaFiles/Policy_2.java:5: error: cannot find symbol
        Policy policy = Policy.getPolicy();
                        ^
  symbol:   variable Policy
  location: class Policy_2
3 errors


================================================================

Sample: Policy_3
----------------------------------------------------------------
output:
./Data/javax_security_auth/javaFiles/Policy_3.java:1: error: cannot find symbol
import javax.security.auth.Policy;
                          ^
  symbol:   class Policy
  location: package javax.security.auth
./Data/javax_security_auth/javaFiles/Policy_3.java:5: error: cannot find symbol
        Policy policy = new Policy() {
        ^
  symbol:   class Policy
  location: class Policy_3
./Data/javax_security_auth/javaFiles/Policy_3.java:5: error: cannot find symbol
        Policy policy = new Policy() {
                            ^
  symbol:   class Policy
  location: class Policy_3
./Data/javax_security_auth/javaFiles/Policy_3.java:7: error: cannot find symbol
            public PermissionCollection getPermissions(ProtectionDomain domain) {
                                                       ^
  symbol: class ProtectionDomain
./Data/javax_security_auth/javaFiles/Policy_3.java:7: error: cannot find symbol
            public PermissionCollection getPermissions(ProtectionDomain domain) {
                   ^
  symbol: class PermissionCollection
./Data/javax_security_auth/javaFiles/Policy_3.java:6: error: method does not override or implement a method from a supertype
            @Override
            ^
./Data/javax_security_auth/javaFiles/Policy_3.java:11: error: method does not override or implement a method from a supertype
            @Override
            ^
./Data/javax_security_auth/javaFiles/Policy_3.java:17: error: cannot find symbol
        Policy.setPolicy(policy);
        ^
  symbol:   variable Policy
  location: class Policy_3
8 errors


================================================================

Sample: Policy_4
----------------------------------------------------------------
output:
./Data/javax_security_auth/javaFiles/Policy_4.java:1: error: cannot find symbol
import javax.security.auth.Policy;
                          ^
  symbol:   class Policy
  location: package javax.security.auth
./Data/javax_security_auth/javaFiles/Policy_4.java:5: error: cannot find symbol
        Policy policy = Policy.getPolicy();
        ^
  symbol:   class Policy
  location: class Policy_4
./Data/javax_security_auth/javaFiles/Policy_4.java:5: error: cannot find symbol
        Policy policy = Policy.getPolicy();
                        ^
  symbol:   variable Policy
  location: class Policy_4
3 errors


================================================================

Sample: PrivateCredentialPermission_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: permission name [credential] syntax invalid: Credential Class not followed by a Principal Class and Name
	at java.base/javax.security.auth.PrivateCredentialPermission.init(PrivateCredentialPermission.java:341)
	at java.base/javax.security.auth.PrivateCredentialPermission.<init>(PrivateCredentialPermission.java:178)
	at PrivateCredentialPermission_2.main(PrivateCredentialPermission_2.java:5)

================================================================

Sample: PrivateCredentialPermission_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: permission name [credential] syntax invalid: Credential Class not followed by a Principal Class and Name
	at java.base/javax.security.auth.PrivateCredentialPermission.init(PrivateCredentialPermission.java:341)
	at java.base/javax.security.auth.PrivateCredentialPermission.<init>(PrivateCredentialPermission.java:178)
	at PrivateCredentialPermission_3.main(PrivateCredentialPermission_3.java:5)

================================================================

Sample: PrivateCredentialPermission_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: permission name [credential] syntax invalid: Credential Class not followed by a Principal Class and Name
	at java.base/javax.security.auth.PrivateCredentialPermission.init(PrivateCredentialPermission.java:341)
	at java.base/javax.security.auth.PrivateCredentialPermission.<init>(PrivateCredentialPermission.java:178)
	at PrivateCredentialPermission_4.main(PrivateCredentialPermission_4.java:5)

================================================================

Sample: Subject_1
----------------------------------------------------------------
stdout:
Is read-only: false

================================================================

Sample: Subject_2
----------------------------------------------------------------
================================================================

Sample: Subject_3
----------------------------------------------------------------
stdout:
Subjects are equal: true

================================================================

Sample: Subject_5
----------------------------------------------------------------
stdout:
Is read-only: false

================================================================

Sample: SubjectDomainCombiner_1
----------------------------------------------------------------
output:
./Data/javax_security_auth/javaFiles/SubjectDomainCombiner_1.java:6: warning: [removal] SubjectDomainCombiner in javax.security.auth has been deprecated and marked for removal
        SubjectDomainCombiner sdc = new SubjectDomainCombiner();
        ^
./Data/javax_security_auth/javaFiles/SubjectDomainCombiner_1.java:6: warning: [removal] SubjectDomainCombiner in javax.security.auth has been deprecated and marked for removal
        SubjectDomainCombiner sdc = new SubjectDomainCombiner();
                                        ^
./Data/javax_security_auth/javaFiles/SubjectDomainCombiner_1.java:6: error: constructor SubjectDomainCombiner in class SubjectDomainCombiner cannot be applied to given types;
        SubjectDomainCombiner sdc = new SubjectDomainCombiner();
                                    ^
  required: Subject
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error
2 warnings


================================================================

Sample: SubjectDomainCombiner_2
----------------------------------------------------------------
output:
./Data/javax_security_auth/javaFiles/SubjectDomainCombiner_2.java:5: error: cannot find symbol
        SubjectDomainCombiner sdc = new SubjectDomainCombiner();
        ^
  symbol:   class SubjectDomainCombiner
  location: class SubjectDomainCombiner_2
./Data/javax_security_auth/javaFiles/SubjectDomainCombiner_2.java:5: error: cannot find symbol
        SubjectDomainCombiner sdc = new SubjectDomainCombiner();
                                        ^
  symbol:   class SubjectDomainCombiner
  location: class SubjectDomainCombiner_2
2 errors


================================================================

