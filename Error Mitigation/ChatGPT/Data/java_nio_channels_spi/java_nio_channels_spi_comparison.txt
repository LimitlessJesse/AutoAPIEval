Sample: 0 AbstractInterruptibleChannel
----------------------------------------------------------------
1. `void close()`: This method closes this channel.
2. `boolean isOpen()`: This method tells whether or not this channel is open.
3. `int validOps()`: This method returns the operations that are supported by this channel.
4. `void begin()`: This method begins an I/O operation that might block indefinitely.
5. `void end(boolean completed)`: This method ends an I/O operation that was begun but not yet completed.
================================================================

Sample: 1 AbstractSelectableChannel
----------------------------------------------------------------
1. `SelectorProvider provider()`: This method returns the provider that created this channel.
2. `SelectionKey keyFor(Selector sel)`: This method returns the selection key for this channel with the given selector.
3. `SelectableChannel configureBlocking(boolean block)`: This method configures this channel to be blocking or non-blocking.
4. `int validOps()`: This method returns the operations that are valid for this channel.
5. `SelectableChannel register(Selector sel, int ops, Object att)`: This method registers this channel with the given selector for the specified operations and attaches the given object.
================================================================

Sample: 2 AbstractSelectionKey
----------------------------------------------------------------
1. int interestOps()
2. SelectableChannel channel()
3. Selector selector()
4. SelectionKey attach(Object ob)
5. Object attachment()
================================================================

Sample: 3 AbstractSelector
----------------------------------------------------------------
1. `Set<SelectionKey> keys()`: This method returns a set of the keys associated with this selector.
2. `int select()`: This method performs a blocking selection operation.
3. `int select(long timeout)`: This method performs a blocking selection operation with a specified timeout.
4. `int selectNow()`: This method performs a non-blocking selection operation.
5. `SelectorProvider provider()`: This method returns the provider that created this selector.
================================================================

Sample: 4 AsynchronousChannelProvider
----------------------------------------------------------------
1. `AsynchronousChannelGroup openAsynchronousChannelGroup(int nThreads, ThreadFactory threadFactory)`: This method opens an asynchronous channel group with the given number of threads and the specified thread factory.
2. `AsynchronousChannelGroup openAsynchronousChannelGroup(ExecutorService executor, int initialSize)`: This method opens an asynchronous channel group with the given executor service and initial size.
3. `AsynchronousServerSocketChannel openAsynchronousServerSocketChannel(AsynchronousChannelGroup group)`: This method opens an asynchronous server socket channel that is bound to the default group.
4. `AsynchronousSocketChannel openAsynchronousSocketChannel(AsynchronousChannelGroup group)`: This method opens an asynchronous socket channel that is bound to the default group.
5. `CompletionHandler<V,A> openCompletionHandler()`: This method opens a completion handler for handling asynchronous I/O operations.
================================================================

Sample: 5 SelectorProvider
----------------------------------------------------------------
1. `Selector openSelector()`: This method opens a new selector.
2. `Channel openDatagramChannel()`: This method opens a datagram channel.
3. `Channel openPipe()`: This method opens a pipe.
4. `Channel openServerSocketChannel()`: This method opens a server-socket channel.
5. `Channel openSocketChannel()`: This method opens a socket channel.
================================================================

