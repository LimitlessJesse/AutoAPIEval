Sample: AbstractInterruptibleChannel_1
----------------------------------------------------------------
================================================================

Sample: AbstractInterruptibleChannel_2
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_2.java:5: error: <anonymous AbstractInterruptibleChannel_2$1> is not abstract and does not override abstract method implCloseChannel() in AbstractInterruptibleChannel
        AbstractInterruptibleChannel channel = new AbstractInterruptibleChannel() {
                                                                                  ^
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_2.java:7: error: close() in <anonymous AbstractInterruptibleChannel_2$1> cannot override close() in AbstractInterruptibleChannel
            public void close() {
                        ^
  overridden method is final
2 errors


================================================================

Sample: AbstractInterruptibleChannel_4
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_4.java:5: error: <anonymous AbstractInterruptibleChannel_4$1> is not abstract and does not override abstract method implCloseChannel() in AbstractInterruptibleChannel
        AbstractInterruptibleChannel channel = new AbstractInterruptibleChannel() {
                                                                                  ^
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_4.java:7: error: begin() in <anonymous AbstractInterruptibleChannel_4$1> cannot override begin() in AbstractInterruptibleChannel
            protected final void begin() {
                                 ^
  overridden method is final
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_4.java:13: error: begin() has protected access in AbstractInterruptibleChannel
        channel.begin();
               ^
3 errors


================================================================

Sample: AbstractInterruptibleChannel_5
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_5.java:7: error: <anonymous AbstractInterruptibleChannel_5$1> is not abstract and does not override abstract method implCloseChannel() in AbstractInterruptibleChannel
        AbstractInterruptibleChannel channel = new AbstractInterruptibleChannel() {
                                                                                  ^
./Data/java_nio_channels_spi/javaFiles/AbstractInterruptibleChannel_5.java:9: error: end(boolean) in <anonymous AbstractInterruptibleChannel_5$1> cannot override end(boolean) in AbstractInterruptibleChannel
            protected final void end(boolean completed) throws AsynchronousCloseException, ClosedByInterruptException {
                                 ^
  overridden method is final
2 errors


================================================================

Sample: AbstractSelectableChannel_1
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AbstractSelectableChannel_1.java:6: error: constructor AbstractSelectableChannel in class AbstractSelectableChannel cannot be applied to given types;
        AbstractSelectableChannel channel = new AbstractSelectableChannel() {
                                            ^
  required: SelectorProvider
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_nio_channels_spi/javaFiles/AbstractSelectableChannel_1.java:6: error: <anonymous AbstractSelectableChannel_1$1> is not abstract and does not override abstract method implConfigureBlocking(boolean) in AbstractSelectableChannel
        AbstractSelectableChannel channel = new AbstractSelectableChannel() {
                                                                            ^
./Data/java_nio_channels_spi/javaFiles/AbstractSelectableChannel_1.java:8: error: provider() in <anonymous AbstractSelectableChannel_1$1> cannot override provider() in AbstractSelectableChannel
            public SelectorProvider provider() {
                                    ^
  overridden method is final
3 errors


================================================================

Sample: AbstractSelectableChannel_3
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AbstractSelectableChannel_3.java:7: error: constructor AbstractSelectableChannel in class AbstractSelectableChannel cannot be applied to given types;
        AbstractSelectableChannel channel = new AbstractSelectableChannel() {
                                            ^
  required: SelectorProvider
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_nio_channels_spi/javaFiles/AbstractSelectableChannel_3.java:7: error: <anonymous AbstractSelectableChannel_3$1> is not abstract and does not override abstract method implCloseSelectableChannel() in AbstractSelectableChannel
        AbstractSelectableChannel channel = new AbstractSelectableChannel() {
                                                                            ^
./Data/java_nio_channels_spi/javaFiles/AbstractSelectableChannel_3.java:9: error: implCloseChannel() in <anonymous AbstractSelectableChannel_3$1> cannot override implCloseChannel() in AbstractSelectableChannel
            protected void implCloseChannel() throws IOException {
                           ^
  overridden method is final
3 errors


================================================================

Sample: AbstractSelector_5
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AbstractSelector_5.java:6: error: constructor AbstractSelector in class AbstractSelector cannot be applied to given types;
        AbstractSelector selector = new AbstractSelector() {
                                    ^
  required: SelectorProvider
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_nio_channels_spi/javaFiles/AbstractSelector_5.java:6: error: <anonymous AbstractSelector_5$1> is not abstract and does not override abstract method register(AbstractSelectableChannel,int,Object) in AbstractSelector
        AbstractSelector selector = new AbstractSelector() {
                                                           ^
./Data/java_nio_channels_spi/javaFiles/AbstractSelector_5.java:8: error: provider() in <anonymous AbstractSelector_5$1> cannot override provider() in AbstractSelector
            public SelectorProvider provider() {
                                    ^
  overridden method is final
3 errors


================================================================

Sample: AsynchronousChannelProvider_1
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: AsynchronousChannelProvider_2
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AsynchronousChannelProvider_2.java:10: error: '.class' expected
        int initialSize = 10; // set your initialSize value here
            ^
1 error


================================================================

Sample: AsynchronousChannelProvider_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException
	at java.base/java.util.concurrent.ThreadPoolExecutor.<init>(ThreadPoolExecutor.java:1305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.<init>(ThreadPoolExecutor.java:1225)
	at java.base/java.util.concurrent.Executors.newFixedThreadPool(Executors.java:155)
	at java.base/sun.nio.ch.ThreadPool.create(ThreadPool.java:123)
	at java.base/sun.nio.ch.LinuxAsynchronousChannelProvider.openAsynchronousChannelGroup(LinuxAsynchronousChannelProvider.java:57)
	at AsynchronousChannelProvider_3.main(AsynchronousChannelProvider_3.java:9)

================================================================

Sample: AsynchronousChannelProvider_4
----------------------------------------------------------------
output:
./Data/java_nio_channels_spi/javaFiles/AsynchronousChannelProvider_4.java:9: error: cannot find symbol
            AsynchronousChannelGroup group = AsynchronousChannelProvider.provider().openAsynchronousChannelGroup(1, null).get();
                                                                                                                         ^
  symbol:   method get()
  location: class AsynchronousChannelGroup
1 error


================================================================

