ClassName,Method,Return Type,Description
Instrument,getPatch(),Patch,Obtains the Patch object that indicates the bank and program numbers where this instrument is to be stored in the synthesizer.
MetaMessage,clone(),Object,Creates a new object of the same class and with the same contents as this object.
MetaMessage,getData(),byte[],Obtains a copy of the data for the meta message.
MetaMessage,getType(),int,Obtains the type of the MetaMessage.
MetaMessage,"setMessage(int type, byte[] data, int length)",void,Sets the message parameters for a MetaMessage.
MidiDevice.Info,equals(Object obj),boolean,Reports whether two objects are equal.
MidiDevice.Info,getDescription(),String,Obtains the description of the device.
MidiDevice.Info,getName(),String,Obtains the name of the device.
MidiDevice.Info,getVendor(),String,Obtains the name of the company who supplies the device.
MidiDevice.Info,getVersion(),String,Obtains the version of the device.
MidiDevice.Info,hashCode(),int,Finalizes the hashcode method.
MidiDevice.Info,toString(),String,Provides a string representation of the device information.
MidiEvent,getMessage(),MidiMessage,Obtains the MIDI message contained in the event.
MidiEvent,getTick(),long,"Obtains the time-stamp for the event, in MIDI ticks"
MidiEvent,setTick(long tick),void,"Sets the time-stamp for the event, in MIDI ticks"
MidiFileFormat,getByteLength(),int,"Obtains the length of the MIDI file, expressed in 8-bit bytes."
MidiFileFormat,getDivisionType(),float,Obtains the timing division type for the MIDI file.
MidiFileFormat,getMicrosecondLength(),long,"Obtains the length of the MIDI file, expressed in microseconds."
MidiFileFormat,getProperty(String key),Object,Obtain the property value specified by the key.
MidiFileFormat,getResolution(),int,Obtains the timing resolution for the MIDI file.
MidiFileFormat,getType(),int,Obtains the MIDI file type.
MidiFileFormat,properties(),"Map<String,Object>",Obtain an unmodifiable map of properties.
MidiMessage,clone(),abstract Object,Creates a new object of the same class and with the same contents as this object.
MidiMessage,getLength(),int,Obtains the total length of the MIDI message in bytes.
MidiMessage,getMessage(),byte[],Obtains the MIDI message data.
MidiMessage,getStatus(),int,Obtains the status byte for the MIDI message.
MidiMessage,"setMessage(byte[] data, int length)",protected void,Sets the data for the MIDI message.
MidiSystem,getMidiDevice(MidiDevice.Info info),static MidiDevice,Obtains the requested MIDI device.
MidiSystem,getMidiDeviceInfo(),static MidiDevice.Info[],Obtains an array of information objects representing the set of all MIDI devices available on the system.
MidiSystem,getMidiFileFormat(File file),static MidiFileFormat,Obtains the MIDI file format of the specified File.
MidiSystem,getMidiFileFormat(InputStream stream),static MidiFileFormat,Obtains the MIDI file format of the data in the specified input stream.
MidiSystem,getMidiFileFormat(URL url),static MidiFileFormat,Obtains the MIDI file format of the data in the specified URL.
MidiSystem,getMidiFileTypes(),static int[],Obtains the set of MIDI file types for which file writing support is provided by the system.
MidiSystem,getMidiFileTypes(Sequence sequence),static int[],Obtains the set of MIDI file types that the system can write from the sequence specified.
MidiSystem,getReceiver(),static Receiver,Obtains a MIDI receiver from an external MIDI port or other default device.
MidiSystem,getSequence(File file),static Sequence,Obtains a MIDI sequence from the specified File.
MidiSystem,getSequence(InputStream stream),static Sequence,Obtains a MIDI sequence from the specified input stream.
MidiSystem,getSequence(URL url),static Sequence,Obtains a MIDI sequence from the specified URL.
MidiSystem,getSequencer(),static Sequencer,"Obtains the default Sequencer, connected to a default device."
MidiSystem,getSequencer(boolean connected),static Sequencer,"Obtains the default Sequencer, optionally connected to a default device."
MidiSystem,getSoundbank(File file),static Soundbank,Constructs a Soundbank by reading it from the specified File.
MidiSystem,getSoundbank(InputStream stream),static Soundbank,Constructs a MIDI sound bank by reading it from the specified stream.
MidiSystem,getSoundbank(URL url),static Soundbank,Constructs a Soundbank by reading it from the specified URL.
MidiSystem,getSynthesizer(),static Synthesizer,Obtains the default synthesizer.
MidiSystem,getTransmitter(),static Transmitter,Obtains a MIDI transmitter from an external MIDI port or other default source.
MidiSystem,isFileTypeSupported(int fileType),static boolean,Indicates whether file writing support for the specified MIDI file type is provided by the system.
MidiSystem,"isFileTypeSupported(int fileType, Sequence sequence)",static boolean,Indicates whether a MIDI file of the file type specified can be written from the sequence indicated.
MidiSystem,"write(Sequence in, int type, File out)",static int,Writes a stream of bytes representing a file of the MIDI file type indicated to the external file provided.
MidiSystem,"write(Sequence in, int fileType, OutputStream out)",static int,Writes a stream of bytes representing a file of the MIDI file type indicated to the output stream provided.
Patch,getBank(),int,Returns the number of the bank that contains the instrument whose location this Patch specifies.
Patch,getProgram(),int,"Returns the index, within a bank, of the instrument whose location this Patch specifies."
Sequence,createTrack(),Track,"Creates a new, initially empty track as part of this sequence."
Sequence,deleteTrack(Track track),boolean,Removes the specified track from the sequence.
Sequence,getDivisionType(),float,Obtains the timing division type for this sequence.
Sequence,getMicrosecondLength(),long,"Obtains the duration of this sequence, expressed in microseconds."
Sequence,getPatchList(),Patch[],Obtains a list of patches referenced in this sequence.
Sequence,getResolution(),int,Obtains the timing resolution for this sequence.
Sequence,getTickLength(),long,"Obtains the duration of this sequence, expressed in MIDI ticks."
Sequence,getTracks(),Track[],Obtains an array containing all the tracks in this sequence.
Sequencer.SyncMode,equals(Object obj),boolean,Determines whether two objects are equal.
Sequencer.SyncMode,hashCode(),int,Finalizes the hashcode method.
Sequencer.SyncMode,toString(),String,Provides this synchronization mode's name as the string representation of the mode.
ShortMessage,clone(),Object,Creates a new object of the same class and with the same contents as this object.
ShortMessage,getChannel(),int,Obtains the MIDI channel associated with this event.
ShortMessage,getCommand(),int,Obtains the MIDI command associated with this event.
ShortMessage,getData1(),int,Obtains the first data byte in the message.
ShortMessage,getData2(),int,Obtains the second data byte in the message.
ShortMessage,getDataLength(int status),protected int,Retrieves the number of data bytes associated with a particular status byte value.
ShortMessage,setMessage(int status),void,Sets the parameters for a MIDI message that takes no data bytes.
ShortMessage,"setMessage(int status, int data1, int data2)",void,Sets the parameters for a MIDI message that takes one or two data bytes.
ShortMessage,"setMessage(int command, int channel, int data1, int data2)",void,Sets the short message parameters for a channel message which takes up to two data bytes.
SoundbankResource,getData(),abstract Object,Obtains the sampled audio that is stored in this SoundbankResource.
SoundbankResource,getDataClass(),Class<?>,Obtains the class used by this sample to represent its data.
SoundbankResource,getName(),String,Obtains the name of the resource.
SoundbankResource,getSoundbank(),Soundbank,Obtains the sound bank that contains this SoundbankResource.
SysexMessage,clone(),Object,Creates a new object of the same class and with the same contents as this object.
SysexMessage,getData(),byte[],Obtains a copy of the data for the system exclusive message.
SysexMessage,"setMessage(byte[] data, int length)",void,Sets the data for the system exclusive message.
SysexMessage,"setMessage(int status, byte[] data, int length)",void,Sets the data for the system exclusive message.
Track,add(MidiEvent event),boolean,Adds a new event to the track.
Track,get(int index),MidiEvent,Obtains the event at the specified index.
Track,remove(MidiEvent event),boolean,Removes the specified event from the track.
Track,size(),int,Obtains the number of events in this track.
Track,ticks(),long,"Obtains the length of the track, expressed in MIDI ticks."
