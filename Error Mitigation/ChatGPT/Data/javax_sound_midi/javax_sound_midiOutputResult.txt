Sample: Instrument_2
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/Instrument_2.java:5: error: Instrument is abstract; cannot be instantiated
        Instrument instrument = new Instrument(); // Instantiate an Instrument object
                                ^
./Data/javax_sound_midi/javaFiles/Instrument_2.java:6: error: cannot find symbol
        Patch patch = instrument.getPatch(); // Get the Patch object
        ^
  symbol:   class Patch
  location: class Instrument_2
2 errors


================================================================

Sample: MetaMessage_1
----------------------------------------------------------------
stdout:
MetaMessage type: 0

================================================================

Sample: MetaMessage_2
----------------------------------------------------------------
================================================================

Sample: MetaMessage_3
----------------------------------------------------------------
================================================================

Sample: MetaMessage_5
----------------------------------------------------------------
stdout:
Original MetaMessage: javax.sound.midi.MetaMessage@16f7c8c1
Cloned MetaMessage: javax.sound.midi.MetaMessage@2f0a87b3

================================================================

Sample: MidiEvent_1
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiEvent_1.java:6: error: constructor MidiEvent in class MidiEvent cannot be applied to given types;
        MidiEvent midiEvent = new MidiEvent();
                              ^
  required: MidiMessage,long
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: MidiEvent_2
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiEvent_2.java:5: error: constructor MidiEvent in class MidiEvent cannot be applied to given types;
        MidiEvent midiEvent = new MidiEvent();
                              ^
  required: MidiMessage,long
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: MidiFileFormat_1
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiFileFormat_1.java:5: error: no suitable constructor found for MidiFileFormat(int,int,int)
        MidiFileFormat midiFileFormat = new MidiFileFormat(1, 1000, 480);
                                        ^
    constructor MidiFileFormat.MidiFileFormat(int,float,int,int,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor MidiFileFormat.MidiFileFormat(int,float,int,int,long,Map<String,Object>) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: MidiFileFormat_3
----------------------------------------------------------------
stdout:
Microsecond Length: 0

================================================================

Sample: MidiFileFormat_4
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiFileFormat_4.java:5: error: incompatible types: <null> cannot be converted to int
        MidiFileFormat midiFileFormat = new MidiFileFormat(null, 0, 0, 0, 0);
                                                           ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: MidiMessage_1
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiMessage_1.java:5: error: constructor MidiMessage in class MidiMessage cannot be applied to given types;
        MidiMessage midiMessage = new MidiMessage() {
                                  ^
  required: byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sound_midi/javaFiles/MidiMessage_1.java:5: error: <anonymous MidiMessage_1$1> is not abstract and does not override abstract method clone() in MidiMessage
        MidiMessage midiMessage = new MidiMessage() {
                                                    ^
2 errors


================================================================

Sample: MidiMessage_2
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiMessage_2.java:5: error: MidiMessage is abstract; cannot be instantiated
        MidiMessage midiMessage = new MidiMessage();
                                  ^
1 error


================================================================

Sample: MidiMessage_3
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiMessage_3.java:6: error: constructor MidiMessage in class MidiMessage cannot be applied to given types;
        MidiMessage midiMessage = new MidiMessage() {
                                  ^
  required: byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sound_midi/javaFiles/MidiMessage_3.java:6: error: <anonymous MidiMessage_3$1> is not abstract and does not override abstract method clone() in MidiMessage
        MidiMessage midiMessage = new MidiMessage() {
                                                    ^
./Data/javax_sound_midi/javaFiles/MidiMessage_3.java:10: error: incompatible types: possible lossy conversion from int to byte
                byte[] messageData = {0x90, 0x40, 0x7F}; // Example MIDI message data
                                      ^
3 errors


================================================================

Sample: MidiMessage_4
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/MidiMessage_4.java:5: error: constructor MidiMessage in class MidiMessage cannot be applied to given types;
        MidiMessage midiMessage = new MidiMessage() {
                                  ^
  required: byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sound_midi/javaFiles/MidiMessage_4.java:8: error: abstract method clone() in MidiMessage cannot be accessed directly
                return super.clone();
                            ^
2 errors


================================================================

Sample: MidiSystem_1
----------------------------------------------------------------
stdout:
Default Sequencer: com.sun.media.sound.RealTimeSequencer@f0f2775

================================================================

Sample: MidiSystem_2
----------------------------------------------------------------
stdout:
Default Synthesizer: com.sun.media.sound.SoftSynthesizer@768b970c

================================================================

Sample: MidiSystem_3
----------------------------------------------------------------
stdout:
Default MIDI Receiver: com.sun.media.sound.SoftReceiver@b7f23d9

================================================================

Sample: MidiSystem_4
----------------------------------------------------------------
stdout:
MIDI Unavailable Exception: null

================================================================

Sample: MidiSystem_5
----------------------------------------------------------------
stdout:
Gervill
Real Time Sequencer

================================================================

Sample: Patch_1
----------------------------------------------------------------
stdout:
Bank number: 0

================================================================

Sample: Patch_2
----------------------------------------------------------------
stdout:
Instrument's program number: 0

================================================================

Sample: Sequence_1
----------------------------------------------------------------
stdout:
Track created successfully

================================================================

Sample: Sequence_2
----------------------------------------------------------------
stdout:
Duration of the sequence in microseconds: 0

================================================================

Sample: Sequence_3
----------------------------------------------------------------
stdout:
Resolution: 24

================================================================

Sample: Sequence_4
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/Sequence_4.java:5: error: unreported exception InvalidMidiDataException; must be caught or declared to be thrown
        Sequence sequence = new Sequence(Sequence.PPQ, 24);
                            ^
1 error


================================================================

Sample: ShortMessage_1
----------------------------------------------------------------
stdout:
MIDI Channel: 0

================================================================

Sample: ShortMessage_2
----------------------------------------------------------------
stdout:
MIDI Command: 144

================================================================

Sample: ShortMessage_3
----------------------------------------------------------------
stdout:
Data1: 0

================================================================

Sample: ShortMessage_4
----------------------------------------------------------------
stdout:
Data2: 127

================================================================

Sample: SysexMessage_2
----------------------------------------------------------------
================================================================

Sample: SysexMessage_3
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/SysexMessage_3.java:8: error: incompatible types: possible lossy conversion from int to byte
            byte[] data = {0xF0, 0x7F, 0x7F, 0x04, 0x01, 0xF7};
                           ^
./Data/javax_sound_midi/javaFiles/SysexMessage_3.java:8: error: incompatible types: possible lossy conversion from int to byte
            byte[] data = {0xF0, 0x7F, 0x7F, 0x04, 0x01, 0xF7};
                                                         ^
2 errors


================================================================

Sample: Track_2
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/Track_2.java:6: error: Track() is not public in Track; cannot be accessed from outside package
        Track track = new Track(); // Assuming you have initialized a Track object
                      ^
1 error


================================================================

Sample: Track_3
----------------------------------------------------------------
output:
./Data/javax_sound_midi/javaFiles/Track_3.java:5: error: Track() is not public in Track; cannot be accessed from outside package
        Track track = new Track();
                      ^
1 error


================================================================

