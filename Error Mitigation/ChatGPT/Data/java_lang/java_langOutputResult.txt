Sample: Boolean_1
----------------------------------------------------------------
stdout:
Boolean value: true

stderr:
./Data/java_lang/javaFiles/Boolean_1.java:3: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean boolObj = new Boolean(true);
                          ^
1 warning

================================================================

Sample: Boolean_2
----------------------------------------------------------------
stdout:
Result 1: 1
Result 2: -1

================================================================

Sample: Boolean_3
----------------------------------------------------------------
stdout:
Hash code for true: 1231
Hash code for false: 1237

stderr:
./Data/java_lang/javaFiles/Boolean_3.java:5: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean boolTrue = new Boolean(true);
                           ^
./Data/java_lang/javaFiles/Boolean_3.java:6: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean boolFalse = new Boolean(false);
                            ^
2 warnings

================================================================

Sample: Boolean_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Boolean_5
----------------------------------------------------------------
stdout:
Boolean object value: true

================================================================

Sample: Byte_1
----------------------------------------------------------------
stdout:
Byte value: 10

stderr:
./Data/java_lang/javaFiles/Byte_1.java:5: warning: [removal] Byte(byte) in Byte has been deprecated and marked for removal
        Byte b = new Byte((byte) 10);
                 ^
1 warning

================================================================

Sample: Byte_2
----------------------------------------------------------------
stdout:
Comparison result: 5

stderr:
./Data/java_lang/javaFiles/Byte_2.java:5: warning: [removal] Byte(byte) in Byte has been deprecated and marked for removal
        Byte byte1 = new Byte((byte) 10);
                     ^
./Data/java_lang/javaFiles/Byte_2.java:6: warning: [removal] Byte(byte) in Byte has been deprecated and marked for removal
        Byte byte2 = new Byte((byte) 5);
                     ^
2 warnings

================================================================

Sample: Byte_3
----------------------------------------------------------------
stdout:
Byte instance representing 10: 10

================================================================

Sample: Byte_4
----------------------------------------------------------------
stdout:
10

stderr:
./Data/java_lang/javaFiles/Byte_4.java:5: warning: [removal] Byte(byte) in Byte has been deprecated and marked for removal
        Byte b = new Byte((byte) 10);
                 ^
1 warning

================================================================

Sample: Byte_5
----------------------------------------------------------------
stdout:
Byte value: 10

================================================================

Sample: Character_1
----------------------------------------------------------------
stdout:
Character value: a

stderr:
./Data/java_lang/javaFiles/Character_1.java:3: warning: [removal] Character(char) in Character has been deprecated and marked for removal
        Character ch = new Character('a');
                       ^
1 warning

================================================================

Sample: Character_2
----------------------------------------------------------------
stdout:
Result: -1

================================================================

Sample: Character_3
----------------------------------------------------------------
stdout:
Are the characters equal? true

stderr:
./Data/java_lang/javaFiles/Character_3.java:3: warning: [removal] Character(char) in Character has been deprecated and marked for removal
        Character char1 = new Character('a');
                          ^
./Data/java_lang/javaFiles/Character_3.java:4: warning: [removal] Character(char) in Character has been deprecated and marked for removal
        Character char2 = new Character('a');
                          ^
2 warnings

================================================================

Sample: Character_4
----------------------------------------------------------------
stdout:
Hash code for character 'a': 97

================================================================

Sample: Character_5
----------------------------------------------------------------
stdout:
String representation of character 'a': a

================================================================

Sample: Character_Subset_1
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Character_Subset_1.java:5: error: Subset(String) has protected access in Subset
        Character.Subset subset1 = new Character.Subset("Latin");
                                   ^
./Data/java_lang/javaFiles/Character_Subset_1.java:6: error: Subset(String) has protected access in Subset
        Character.Subset subset2 = new Character.Subset("Latin");
                                   ^
2 errors


================================================================

Sample: Character_Subset_2
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Character_Subset_2.java:5: error: constructor Subset in class Subset cannot be applied to given types;
        Character.Subset subset = new Character.Subset() {
                                  ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_lang/javaFiles/Character_Subset_2.java:7: error: hashCode() in <anonymous Character_Subset_2$1> cannot override hashCode() in Subset
            public int hashCode() {
                       ^
  overridden method is final
2 errors


================================================================

Sample: Character_Subset_3
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Character_Subset_3.java:5: error: constructor Subset in class Subset cannot be applied to given types;
        Character.Subset subset = new Character.Subset() {
                                  ^
  required: String
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_lang/javaFiles/Character_Subset_3.java:7: error: toString() in <anonymous Character_Subset_3$1> cannot override toString() in Subset
            public String toString() {
                          ^
  overridden method is final
2 errors


================================================================

Sample: Character_Subset_5
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Character_Subset_5.java:5: error: Subset(String) has protected access in Subset
        Character.Subset subset1 = new Character.Subset("Latin");
                                   ^
./Data/java_lang/javaFiles/Character_Subset_5.java:6: error: Subset(String) has protected access in Subset
        Character.Subset subset2 = new Character.Subset("Latin");
                                   ^
2 errors


================================================================

Sample: Class_1
----------------------------------------------------------------
stdout:
java.lang.String
byte
[Ljava.lang.Object;
[[[[[[[I

================================================================

Sample: Class_2
----------------------------------------------------------------
stdout:
java.io.Serializable
java.lang.Comparable
java.lang.CharSequence
java.lang.constant.Constable
java.lang.constant.ConstantDesc

================================================================

Sample: Class_4
----------------------------------------------------------------
stdout:
false

================================================================

Sample: ClassLoader_1
----------------------------------------------------------------
stdout:
Class loaded: java.lang.String

================================================================

Sample: ClassLoader_2
----------------------------------------------------------------
stdout:
Class loaded successfully: java.lang.String

================================================================

Sample: ClassLoader_3
----------------------------------------------------------------
stdout:
Resource not found.

================================================================

Sample: ClassLoader_4
----------------------------------------------------------------
================================================================

Sample: ClassValue_2
----------------------------------------------------------------
stdout:
Initial value for ClassValue_2: Value for ClassValue_2
Value after removal: Value for ClassValue_2

================================================================

Sample: ClassValue_5
----------------------------------------------------------------
stdout:
Value for ClassValue_5
Value for ClassValue_5

================================================================

Sample: Double_1
----------------------------------------------------------------
stdout:
num1 is greater than num2

================================================================

Sample: Double_2
----------------------------------------------------------------
stdout:
Is num1 NaN? true
Is num2 NaN? false

stderr:
./Data/java_lang/javaFiles/Double_2.java:5: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Double num1 = new Double(Double.NaN);
                      ^
./Data/java_lang/javaFiles/Double_2.java:6: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Double num2 = new Double(10.0);
                      ^
2 warnings

================================================================

Sample: Double_3
----------------------------------------------------------------
stdout:
Double value: 10.5

stderr:
./Data/java_lang/javaFiles/Double_3.java:5: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Double myDouble = new Double(10.5);
                          ^
1 warning

================================================================

Sample: Double_4
----------------------------------------------------------------
stdout:
Double value: 10.5
Int value: 10

stderr:
./Data/java_lang/javaFiles/Double_4.java:5: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Double myDouble = new Double(10.5);
                          ^
1 warning

================================================================

Sample: Double_5
----------------------------------------------------------------
stdout:
String representation of the Double object: 10.5

stderr:
./Data/java_lang/javaFiles/Double_5.java:3: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Double number = new Double(10.5);
                        ^
1 warning

================================================================

Sample: Enum_1
----------------------------------------------------------------
stderr:
error: can't find main(String[]) method in class: Color

================================================================

Sample: Enum_2
----------------------------------------------------------------
stdout:
Ordinal of SECOND: 1

================================================================

Sample: Enum_5
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Float_1
----------------------------------------------------------------
stdout:
Comparison result: 1

stderr:
./Data/java_lang/javaFiles/Float_1.java:5: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float float1 = new Float(10.5f);
                       ^
./Data/java_lang/javaFiles/Float_1.java:6: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float float2 = new Float(5.5f);
                       ^
2 warnings

================================================================

Sample: Float_2
----------------------------------------------------------------
stdout:
Is NaN: false
Is NaN: true

stderr:
./Data/java_lang/javaFiles/Float_2.java:5: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float floatValue = new Float(3.14f);
                           ^
./Data/java_lang/javaFiles/Float_2.java:8: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float nanValue = new Float(Float.NaN);
                         ^
2 warnings

================================================================

Sample: Float_3
----------------------------------------------------------------
stdout:
Float value: 10.5
Int value: 10

stderr:
./Data/java_lang/javaFiles/Float_3.java:3: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float floatValue = new Float(10.5f);
                           ^
1 warning

================================================================

Sample: Float_4
----------------------------------------------------------------
stdout:
Float value: 10.5

stderr:
./Data/java_lang/javaFiles/Float_4.java:5: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float floatValue = new Float(10.5f);
                           ^
1 warning

================================================================

Sample: Float_5
----------------------------------------------------------------
stdout:
Float value as string: 10.5

stderr:
./Data/java_lang/javaFiles/Float_5.java:5: warning: [removal] Float(float) in Float has been deprecated and marked for removal
        Float floatValue = new Float(10.5f);
                           ^
1 warning

================================================================

Sample: Integer_1
----------------------------------------------------------------
stdout:
Integer value: 10

stderr:
./Data/java_lang/javaFiles/Integer_1.java:5: warning: [removal] Integer(int) in Integer has been deprecated and marked for removal
        Integer num = new Integer(10);
                      ^
1 warning

================================================================

Sample: Integer_2
----------------------------------------------------------------
stdout:
Integer value: 10

================================================================

Sample: Integer_3
----------------------------------------------------------------
stdout:
Integer value: 123

================================================================

Sample: Integer_4
----------------------------------------------------------------
stdout:
Result: 2

================================================================

Sample: Integer_5
----------------------------------------------------------------
stdout:
Decoded Integer 1: 10
Decoded Integer 2: 26
Decoded Integer 3: 255
Decoded Integer 4: 10

================================================================

Sample: Long_1
----------------------------------------------------------------
stdout:
Comparison result: 1

stderr:
./Data/java_lang/javaFiles/Long_1.java:5: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        Long long1 = new Long(10);
                     ^
./Data/java_lang/javaFiles/Long_1.java:6: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        Long long2 = new Long(5);
                     ^
2 warnings

================================================================

Sample: Long_2
----------------------------------------------------------------
stdout:
Long value: 123456789
Int value: 123456789

stderr:
./Data/java_lang/javaFiles/Long_2.java:3: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        Long longValue = new Long(123456789);
                         ^
1 warning

================================================================

Sample: Long_3
----------------------------------------------------------------
stdout:
Long value as long: 100

stderr:
./Data/java_lang/javaFiles/Long_3.java:3: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        Long value = new Long(100);
                     ^
1 warning

================================================================

Sample: Long_4
----------------------------------------------------------------
stdout:
Long value: 100

================================================================

Sample: Long_5
----------------------------------------------------------------
stdout:
String representation of Long value: 123456789

================================================================

Sample: Math_1
----------------------------------------------------------------
stdout:
Absolute value of -10.5 is: 10.5

================================================================

Sample: Math_2
----------------------------------------------------------------
stdout:
Result of 2.0 raised to the power of 3.0 is: 8.0

================================================================

Sample: Math_3
----------------------------------------------------------------
stdout:
Sine of 0.7853981633974483 is: 0.7071067811865475

================================================================

Sample: Math_4
----------------------------------------------------------------
stdout:
Cosine of 0.7853981633974483 radians is: 0.7071067811865476

================================================================

Sample: Math_5
----------------------------------------------------------------
stdout:
Square root of 16.0 is: 4.0

================================================================

Sample: Number_1
----------------------------------------------------------------
stdout:
Integer value: 10

================================================================

Sample: Number_2
----------------------------------------------------------------
stdout:
Long value: 10

================================================================

Sample: Number_3
----------------------------------------------------------------
stdout:
Float value: 10.0

================================================================

Sample: Number_4
----------------------------------------------------------------
stdout:
Double value: 10.0

================================================================

Sample: Number_5
----------------------------------------------------------------
stdout:
Short value: 10

================================================================

Sample: Object_1
----------------------------------------------------------------
stdout:
Result 1: true
Result 2: true

================================================================

Sample: Object_3
----------------------------------------------------------------
stdout:
java.lang.Object@7e0e6aa2

================================================================

Sample: Object_5
----------------------------------------------------------------
================================================================

Sample: Package_1
----------------------------------------------------------------
stdout:
Package name: 

================================================================

Sample: Package_2
----------------------------------------------------------------
stdout:
Implementation Title: null

================================================================

Sample: Package_3
----------------------------------------------------------------
stdout:
Implementation version: null

================================================================

Sample: Package_4
----------------------------------------------------------------
stdout:
Specification Title: null

================================================================

Sample: Package_5
----------------------------------------------------------------
stdout:
Specification Version: null

================================================================

Sample: Process_1
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Process_1.java:5: error: unreported exception IOException; must be caught or declared to be thrown
        Process process = new ProcessBuilder("notepad.exe").start();
                                                                 ^
1 error


================================================================

Sample: Process_2
----------------------------------------------------------------
stdout:
Exit Value: 0

================================================================

Sample: Process_3
----------------------------------------------------------------
stderr:
java.io.IOException: Cannot run program "command": error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1143)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at Process_3.main(Process_3.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:314)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:244)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1110)
	... 9 more

================================================================

Sample: Process_4
----------------------------------------------------------------
stderr:
java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:445)
	at java.base/java.io.OutputStream.write(OutputStream.java:162)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at Process_4.main(Process_4.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Process_5
----------------------------------------------------------------
stderr:
java.io.IOException: Cannot run program "notepad.exe": error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1143)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at java.base/java.lang.Runtime.exec(Runtime.java:594)
	at java.base/java.lang.Runtime.exec(Runtime.java:418)
	at java.base/java.lang.Runtime.exec(Runtime.java:315)
	at Process_5.main(Process_5.java:6)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:314)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:244)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1110)
	... 12 more

================================================================

Sample: ProcessBuilder_1
----------------------------------------------------------------
================================================================

Sample: ProcessBuilder_2
----------------------------------------------------------------
stdout:
Error starting process: Cannot run program "command": error=2, No such file or directory

================================================================

Sample: ProcessBuilder_3
----------------------------------------------------------------
stdout:
[ls, -l]

================================================================

Sample: ProcessBuilder_4
----------------------------------------------------------------
================================================================

Sample: Runtime_1
----------------------------------------------------------------
stdout:
Runtime object: java.lang.Runtime@10dba097

================================================================

Sample: Runtime_2
----------------------------------------------------------------
================================================================

Sample: Runtime_3
----------------------------------------------------------------
stdout:
Command executed successfully.

================================================================

Sample: Runtime_4
----------------------------------------------------------------
stdout:
Free memory in JVM: 1321452264 bytes

================================================================

Sample: Runtime_5
----------------------------------------------------------------
================================================================

Sample: SecurityManager_1
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/SecurityManager_1.java:6: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_1.java:6: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
                                              ^
./Data/java_lang/javaFiles/SecurityManager_1.java:7: error: Permission is abstract; cannot be instantiated
        Permission permission = new Permission("example_permission");
                                ^
1 error
2 warnings


================================================================

Sample: SecurityManager_2
----------------------------------------------------------------
stderr:
./Data/java_lang/javaFiles/SecurityManager_2.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_2.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
                                              ^
2 warnings
Exception in thread "main" java.security.AccessControlException: access denied ("java.lang.RuntimePermission" "createClassLoader")
	at java.base/java.security.AccessControlContext.checkPermission(AccessControlContext.java:485)
	at java.base/java.security.AccessController.checkPermission(AccessController.java:1068)
	at java.base/java.lang.SecurityManager.checkPermission(SecurityManager.java:416)
	at java.base/java.lang.SecurityManager.checkCreateClassLoader(SecurityManager.java:479)
	at SecurityManager_2.main(SecurityManager_2.java:6)

================================================================

Sample: SecurityManager_3
----------------------------------------------------------------
stdout:
SecurityException: access denied ("java.lang.RuntimePermission" "exitVM.0")

stderr:
./Data/java_lang/javaFiles/SecurityManager_3.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_3.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
                                              ^
2 warnings

================================================================

Sample: SecurityManager_4
----------------------------------------------------------------
stdout:
SecurityException: File read permission denied

stderr:
./Data/java_lang/javaFiles/SecurityManager_4.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_4.java:5: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
                                              ^
2 warnings

================================================================

Sample: SecurityManager_5
----------------------------------------------------------------
stdout:
Not allowed to write to the specified file descriptor

stderr:
./Data/java_lang/javaFiles/SecurityManager_5.java:6: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
        ^
./Data/java_lang/javaFiles/SecurityManager_5.java:6: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager securityManager = new SecurityManager();
                                              ^
2 warnings

================================================================

Sample: Short_1
----------------------------------------------------------------
stdout:
Parsed short value: 123

================================================================

Sample: Short_2
----------------------------------------------------------------
stdout:
Short value: 10

================================================================

Sample: Short_3
----------------------------------------------------------------
stdout:
Comparison result: 5

================================================================

Sample: Short_4
----------------------------------------------------------------
stdout:
String representation of Short value: 10

================================================================

Sample: Short_5
----------------------------------------------------------------
stdout:
Hash code for myShort: 10

================================================================

Sample: StackTraceElement_1
----------------------------------------------------------------
stdout:
Class Name: java.lang.Thread
Class Name: StackTraceElement_1
Class Name: jdk.internal.reflect.NativeMethodAccessorImpl
Class Name: jdk.internal.reflect.NativeMethodAccessorImpl
Class Name: jdk.internal.reflect.DelegatingMethodAccessorImpl
Class Name: java.lang.reflect.Method
Class Name: com.sun.tools.javac.launcher.Main
Class Name: com.sun.tools.javac.launcher.Main
Class Name: com.sun.tools.javac.launcher.Main

================================================================

Sample: StackTraceElement_2
----------------------------------------------------------------
stdout:
File Name: StackTraceElement_2.java
File Name: NativeMethodAccessorImpl.java
File Name: NativeMethodAccessorImpl.java
File Name: DelegatingMethodAccessorImpl.java
File Name: Method.java
File Name: Main.java
File Name: Main.java
File Name: Main.java

================================================================

Sample: StackTraceElement_3
----------------------------------------------------------------
stdout:
Class Name: java.lang.Thread
Method Name: getStackTrace
File Name: Thread.java
Line Number: 1619

Class Name: StackTraceElement_3
Method Name: main
File Name: StackTraceElement_3.java
Line Number: 5

Class Name: jdk.internal.reflect.NativeMethodAccessorImpl
Method Name: invoke0
File Name: NativeMethodAccessorImpl.java
Line Number: -2

Class Name: jdk.internal.reflect.NativeMethodAccessorImpl
Method Name: invoke
File Name: NativeMethodAccessorImpl.java
Line Number: 77

Class Name: jdk.internal.reflect.DelegatingMethodAccessorImpl
Method Name: invoke
File Name: DelegatingMethodAccessorImpl.java
Line Number: 43

Class Name: java.lang.reflect.Method
Method Name: invoke
File Name: Method.java
Line Number: 569

Class Name: com.sun.tools.javac.launcher.Main
Method Name: execute
File Name: Main.java
Line Number: 419

Class Name: com.sun.tools.javac.launcher.Main
Method Name: run
File Name: Main.java
Line Number: 192

Class Name: com.sun.tools.javac.launcher.Main
Method Name: main
File Name: Main.java
Line Number: 132


================================================================

Sample: StackTraceElement_4
----------------------------------------------------------------
stdout:
Method Name: getStackTrace
Method Name: main
Method Name: invoke0
Method Name: invoke
Method Name: invoke
Method Name: invoke
Method Name: execute
Method Name: run
Method Name: main

================================================================

Sample: StackTraceElement_5
----------------------------------------------------------------
stdout:
Method: getStackTrace
Is Native Method: false
Method: main
Is Native Method: false
Method: invoke0
Is Native Method: true
Method: invoke
Is Native Method: false
Method: invoke
Is Native Method: false
Method: invoke
Is Native Method: false
Method: execute
Is Native Method: false
Method: run
Is Native Method: false
Method: main
Is Native Method: false

================================================================

Sample: StrictMath_1
----------------------------------------------------------------
stdout:
7.38905609893065

================================================================

Sample: StrictMath_2
----------------------------------------------------------------
stdout:
Natural logarithm of 10: 2.302585092994046

================================================================

Sample: StrictMath_3
----------------------------------------------------------------
stdout:
Square root of 16.0 is: 4.0

================================================================

Sample: StrictMath_4
----------------------------------------------------------------
stdout:
Sine of 1.5707963267948966 radians is: 1.0

================================================================

Sample: StrictMath_5
----------------------------------------------------------------
stdout:
Cosine of 0.7853981633974483 radians: 0.7071067811865476

================================================================

Sample: String_1
----------------------------------------------------------------
stdout:
Length of the string: 13

================================================================

Sample: String_2
----------------------------------------------------------------
stdout:
Character at index 1: e

================================================================

Sample: String_3
----------------------------------------------------------------
stdout:
happy
bison


================================================================

Sample: String_4
----------------------------------------------------------------
stdout:
Index of 'World' in the string: 7

================================================================

Sample: String_5
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: StringBuffer_1
----------------------------------------------------------------
stdout:
Length of StringBuffer: 5

================================================================

Sample: StringBuffer_2
----------------------------------------------------------------
stdout:
Before setLength: Hello
After setLength: Hello   

================================================================

Sample: StringBuffer_3
----------------------------------------------------------------
stdout:
Before ensureCapacity: 21
After ensureCapacity: 21

================================================================

Sample: StringBuffer_4
----------------------------------------------------------------
stdout:
Before trimToSize(): 21
After trimToSize(): 5

================================================================

Sample: StringBuffer_5
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringBuilder_1
----------------------------------------------------------------
stdout:
Hello World

================================================================

Sample: StringBuilder_2
----------------------------------------------------------------
stdout:
Before insert: Hello
After insert: HeJavallo

================================================================

Sample: StringBuilder_3
----------------------------------------------------------------
stdout:
Before deletion: Hello World
After deletion: Hello 

================================================================

Sample: StringBuilder_4
----------------------------------------------------------------
stdout:
Length of StringBuilder: 5

================================================================

Sample: StringBuilder_5
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: System_1
----------------------------------------------------------------
================================================================

Sample: System_2
----------------------------------------------------------------
stdout:
Current time in milliseconds: 1724289600984

================================================================

Sample: System_3
----------------------------------------------------------------
================================================================

Sample: System_4
----------------------------------------------------------------
stdout:
Java Version: 17.0.12

================================================================

Sample: System_5
----------------------------------------------------------------
stdout:
Source Array: [1, 2, 3, 4, 5]
Destination Array: [1, 2, 3, 4, 5]

================================================================

Sample: Thread_1
----------------------------------------------------------------
stdout:
Thread is running

================================================================

Sample: Thread_2
----------------------------------------------------------------
stdout:
This is a separate thread

================================================================

Sample: Thread_3
----------------------------------------------------------------
stdout:
Thread is going to sleep for 2 seconds
Thread woke up after sleeping for 2 seconds

================================================================

Sample: Thread_4
----------------------------------------------------------------
================================================================

Sample: Thread_5
----------------------------------------------------------------
stdout:
Current thread: Thread[main,5,main]

================================================================

Sample: ThreadGroup_2
----------------------------------------------------------------
stdout:
Thread 1 is running
Active thread count: 2
Thread 2 is running

================================================================

Sample: ThreadGroup_4
----------------------------------------------------------------
================================================================

Sample: ThreadGroup_5
----------------------------------------------------------------
stdout:
java.lang.ThreadGroup[name=ExampleGroup,maxpri=10]

================================================================

Sample: ThreadLocal_3
----------------------------------------------------------------
stdout:
Before removal: Value
After removal: null

================================================================

Sample: Throwable_1
----------------------------------------------------------------
stdout:
This is an example exception

================================================================

Sample: Throwable_3
----------------------------------------------------------------
stdout:
Cause: null

================================================================

Sample: Throwable_5
----------------------------------------------------------------
stdout:
Suppressed exception: java.lang.NullPointerException: Null Pointer Exception

================================================================

