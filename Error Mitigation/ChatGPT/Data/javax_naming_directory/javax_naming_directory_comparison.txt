Sample: 0 BasicAttribute
----------------------------------------------------------------
1. `void add(Attribute attr)`: This method adds the specified Attribute to this BasicAttribute.
2. `boolean remove(Attribute attr)`: This method removes the specified Attribute from this BasicAttribute.
3. `int size()`: This method returns the number of Attributes in this BasicAttribute.
4. `Attribute get(int index)`: This method returns the Attribute at the specified index in this BasicAttribute.
5. `boolean contains(Attribute attr)`: This method returns true if this BasicAttribute contains the specified Attribute.
================================================================

Sample: 1 BasicAttributes
----------------------------------------------------------------
1. `void put(String attrID, Object val)`: This method adds a new attribute with the specified ID and value.
2. `Object remove(String attrID)`: This method removes the attribute with the specified ID and returns its value.
3. `boolean isCaseIgnored()`: This method returns true if case is ignored when comparing attribute IDs, false otherwise.
4. `NamingEnumeration<? extends Attribute> getAll()`: This method returns an enumeration of all attributes in this BasicAttributes object.
5. `boolean containsKey(String attrID)`: This method returns true if this BasicAttributes object contains an attribute with the specified ID, false otherwise.
================================================================

Sample: 2 InitialDirContext
----------------------------------------------------------------
1. `Attributes getAttributes(Name name)`: This method retrieves the attributes associated with the named object.
2. `void bind(Name name, Object obj)`: This method binds a name to an object.
3. `void rebind(Name name, Object obj)`: This method rebinds a name to a new object, replacing any existing binding.
4. `void unbind(Name name)`: This method removes the named object from the directory.
5. `NamingEnumeration<NameClassPair> list(Name name)`: This method lists the names of the objects bound in the named context.
================================================================

Sample: 3 ModificationItem
----------------------------------------------------------------
1. `int getModificationOp()`: This method returns the modification operation code for this ModificationItem.
2. `Name getName()`: This method returns the name of the attribute to be modified.
3. `Object getValue()`: This method returns the new value of the attribute to be modified.
4. `ModificationItem(int mod_op, Name attr_name, Object attr_val)`: Constructor that creates a new ModificationItem with the specified modification operation, attribute name, and attribute value.
5. `void setValue(Object attr_val)`: This method sets the new value of the attribute to be modified.
================================================================

Sample: 4 SearchControls
----------------------------------------------------------------
1. `void setReturningAttributes(String[] attributes)`: This method sets the attributes that should be returned as part of the search result.
   
2. `void setReturningObjFlag(boolean returningObjFlag)`: This method sets whether the search should return objects or just their names.

3. `void setSearchScope(int searchScope)`: This method sets the scope of the search, such as searching only in the base context or searching in the entire subtree.

4. `void setTimeLimit(long ms)`: This method sets the maximum time limit for the search operation.

5. `void setDerefLinkFlag(boolean derefLinkFlag)`: This method sets whether the search should dereference links during the search.
================================================================

Sample: 5 SearchResult
----------------------------------------------------------------
1. `Attributes getAttributes()`: This method returns the attributes of the search result.
2. `String getName()`: This method returns the name of the search result.
3. `String getNameInNamespace()`: This method returns the name of the search result in the namespace.
4. `Object getObject()`: This method returns the object bound to the search result.
5. `DirContext getDirContext()`: This method returns the DirContext associated with the search result.
================================================================

