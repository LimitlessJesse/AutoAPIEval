Sample: AccessControlContext_3
----------------------------------------------------------------
stderr:
./Data/java_security/javaFiles/AccessControlContext_3.java:7: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext acc = new AccessControlContext(null);
        ^
./Data/java_security/javaFiles/AccessControlContext_3.java:7: warning: [removal] AccessControlContext in java.security has been deprecated and marked for removal
        AccessControlContext acc = new AccessControlContext(null);
                                       ^
./Data/java_security/javaFiles/AccessControlContext_3.java:12: warning: [removal] AccessControlException in java.security has been deprecated and marked for removal
        } catch (AccessControlException e) {
                 ^
3 warnings
Exception in thread "main" java.lang.NullPointerException: Cannot read the array length because "context" is null
	at java.base/java.security.AccessControlContext.<init>(AccessControlContext.java:139)
	at AccessControlContext_3.main(AccessControlContext_3.java:7)

================================================================

Sample: AllPermission_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/AllPermission_1.java:8: error: Permission is abstract; cannot be instantiated
        Permission permission = new Permission("some.permission");
                                ^
1 error


================================================================

Sample: AllPermission_2
----------------------------------------------------------------
stdout:
Are the permissions equal? true

================================================================

Sample: AllPermission_3
----------------------------------------------------------------
stdout:
<all actions>

================================================================

Sample: BasicPermission_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/BasicPermission_1.java:7: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission1 = new BasicPermission("write");
                                      ^
./Data/java_security/javaFiles/BasicPermission_1.java:10: error: <anonymous BasicPermission_1$1> is not abstract and does not override abstract method getActions() in Permission
        Permission permission2 = new Permission("write") {
                                                         ^
2 errors


================================================================

Sample: BasicPermission_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/BasicPermission_2.java:6: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission1 = new BasicPermission("read");
                                      ^
./Data/java_security/javaFiles/BasicPermission_2.java:7: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission2 = new BasicPermission("read");
                                      ^
2 errors


================================================================

Sample: BasicPermission_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/BasicPermission_3.java:5: error: BasicPermission is abstract; cannot be instantiated
        BasicPermission permission = new BasicPermission("MyPermission");
                                     ^
1 error


================================================================

Sample: CodeSource_1
----------------------------------------------------------------
stdout:
file:/home/yixi/comp4522/DeepseekCoder/Pipeline/Temp0/./Data/java_security/javaFiles/CodeSource_1.java

================================================================

Sample: CodeSource_2
----------------------------------------------------------------
stdout:
(file:/home/yixi/comp4522/DeepseekCoder/Pipeline/Temp0/./Data/java_security/javaFiles/CodeSource_2.java <no signer certificates>)

================================================================

Sample: CodeSource_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/CodeSource_3.java:5: error: no suitable constructor found for CodeSource(String,Certificate[])
        CodeSource cs1 = new CodeSource("http://www.example.com", (java.security.cert.Certificate[]) null);
                         ^
    constructor CodeSource.CodeSource(URL,Certificate[]) is not applicable
      (argument mismatch; String cannot be converted to URL)
    constructor CodeSource.CodeSource(URL,CodeSigner[]) is not applicable
      (argument mismatch; String cannot be converted to URL)
./Data/java_security/javaFiles/CodeSource_3.java:6: error: no suitable constructor found for CodeSource(String,Certificate[])
        CodeSource cs2 = new CodeSource("http://www.example.com", (java.security.cert.Certificate[]) null);
                         ^
    constructor CodeSource.CodeSource(URL,Certificate[]) is not applicable
      (argument mismatch; String cannot be converted to URL)
    constructor CodeSource.CodeSource(URL,CodeSigner[]) is not applicable
      (argument mismatch; String cannot be converted to URL)
2 errors


================================================================

Sample: DigestInputStream_1
----------------------------------------------------------------
stdout:
Number of bytes read: 13
Digest: ��`!�+հ�gb���å1�݁��
K(h�6!��o

================================================================

Sample: DigestInputStream_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/DigestInputStream_3.java:20: error: unreported exception IOException; must be caught or declared to be thrown
            while ((b = dis.read())!= -1) {
                                ^
1 error


================================================================

Sample: DigestOutputStream_1
----------------------------------------------------------------
stdout:
A559aead08264d5795d3909718cdd05abd49572e84fe55590eef31a88a08fdffd

================================================================

Sample: DigestOutputStream_3
----------------------------------------------------------------
stdout:
��`!�+հ�gb���å1�݁��
K(h�6!��o

================================================================

Sample: GuardedObject_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/GuardedObject_3.java:6: error: constructor GuardedObject in class GuardedObject cannot be applied to given types;
        GuardedObject guardedObject = new GuardedObject();
                                      ^
  required: Object,Guard
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/GuardedObject_3.java:11: error: cannot find symbol
                guardedObject.setObject("Hello, World!");
                             ^
  symbol:   method setObject(String)
  location: variable guardedObject of type GuardedObject
2 errors


================================================================

Sample: KeyFactory_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Illegal base64 character 2e
	at java.base/java.util.Base64$Decoder.decode0(Base64.java:848)
	at java.base/java.util.Base64$Decoder.decode(Base64.java:566)
	at java.base/java.util.Base64$Decoder.decode(Base64.java:589)
	at KeyFactory_2.main(KeyFactory_2.java:12)

================================================================

Sample: KeyFactory_4
----------------------------------------------------------------
stderr:
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: null
	at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:241)
	at java.base/java.security.KeyFactory.generatePublic(KeyFactory.java:351)
	at KeyFactory_4.main(KeyFactory_4.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.security.InvalidKeyException: IOException: null
	at java.base/sun.security.x509.X509Key.decode(X509Key.java:397)
	at java.base/sun.security.x509.X509Key.decode(X509Key.java:402)
	at java.base/sun.security.rsa.RSAPublicKeyImpl.<init>(RSAPublicKeyImpl.java:153)
	at java.base/sun.security.rsa.RSAPublicKeyImpl.newKey(RSAPublicKeyImpl.java:80)
	at java.base/sun.security.rsa.RSAKeyFactory.generatePublic(RSAKeyFactory.java:327)
	at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:237)
	... 9 more

================================================================

Sample: KeyFactory_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyFactory_5.java:13: error: unreported exception NoSuchProviderException; must be caught or declared to be thrown
            KeyFactory keyFactory = KeyFactory.getInstance(algorithm, provider);
                                                          ^
1 error


================================================================

Sample: KeyPair_1
----------------------------------------------------------------
stdout:
Public Key: Sun RSA public key, 1024 bits
  params: null
  modulus: 101064066169096883096630054130059154723751870353549793889286595434455619478379265584487488670725014999774857862551904217060809420590314445804972927772494694561806263185075743326995464471258019692570571885139956980828055374376156016631538807791864715068609388239412309619981241963933265716963745580247718539919
  public exponent: 65537

================================================================

Sample: KeyPair_2
----------------------------------------------------------------
stdout:
SunRsaSign RSA private CRT key, 2048 bits
  params: null
  modulus: 26210379372765291139519305067560641843202410781228087660507958056522602366300984088452850205814422657394380948141387412205084668042230618492856155801900055727626139075129688137417628646873442689703862456177021675109819504732008976358356562480131695710216153468393961558307738715009415876637176192865059665769602947540538465461744344718848791709942690226904855851024259207729400755648422969490198300691987906297752277069160562180829000718719549986007318511081210061974606982147446362363211859577604857974499527520651873063801215754792700385523237122300899845926918153258519092102105901993319100598001141246343463111577
  private exponent: 5829216847700390634360187848272428325764022435292887860227562180948856230679158240097113358482202686159754024591220108131211553459107563358753450705564707909394918749554492415687789284564503470158515757968905800167282209915336326577524544553903284111635496664152710479471358860500476694232649672690307416549737221084556929420822762343360344919380290812071634482259061996851374931810971284755750829367409423098408186979155478445540800928399942339847523888488611647295858303924564966764802741203974924437389241233053132349262361357486068119494920108604784367292110286607769031625912003237007966017243164613133575697913

================================================================

Sample: KeyStore_PasswordProtection_1
----------------------------------------------------------------
stdout:
myPassword

================================================================

Sample: KeyStore_SecretKeyEntry_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_2.java:11: error: cannot find symbol
        SecretKey secretKey = KeyGenerator.getInstance("AES").generateKey();
                              ^
  symbol:   variable KeyGenerator
  location: class KeyStore_SecretKeyEntry_2
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_2.java:18: error: method getEntry in class KeyStore cannot be applied to given types;
        KeyStore.Entry entry = keyStore.getEntry("myKey");
                                       ^
  required: String,ProtectionParameter
  found:    String
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_2.java:20: error: cannot find symbol
            SecretKeyEntry secretKeyEntry = (SecretKeyEntry) entry;
            ^
  symbol:   class SecretKeyEntry
  location: class KeyStore_SecretKeyEntry_2
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_2.java:20: error: variable secretKeyEntry is already defined in method main(String[])
            SecretKeyEntry secretKeyEntry = (SecretKeyEntry) entry;
                           ^
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_2.java:20: error: cannot find symbol
            SecretKeyEntry secretKeyEntry = (SecretKeyEntry) entry;
                                             ^
  symbol:   class SecretKeyEntry
  location: class KeyStore_SecretKeyEntry_2
5 errors


================================================================

Sample: KeyStore_SecretKeyEntry_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStore_SecretKeyEntry_5.java:8: error: unreported exception KeyStoreException; must be caught or declared to be thrown
        KeyStore keyStore = KeyStore.getInstance("JCEKS");
                                                ^
1 error


================================================================

Sample: KeyStoreSpi_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_4.java:18: error: incompatible types: X509Certificate[] cannot be converted to Certificate
        Certificate cert = new X509Certificate[1];
                           ^
./Data/java_security/javaFiles/KeyStoreSpi_4.java:19: error: ProtectionParameter is abstract; cannot be instantiated
        keyStore.setEntry("alias", new KeyStore.TrustedCertificateEntry(cert), new KeyStore.ProtectionParameter("password".toCharArray()));
                                                                               ^
./Data/java_security/javaFiles/KeyStoreSpi_4.java:22: error: cannot find symbol
        KeyStoreSpi keyStoreSpi = keyStore.getKeyStoreSpi();
                                          ^
  symbol:   method getKeyStoreSpi()
  location: variable keyStore of type KeyStore
3 errors


================================================================

Sample: KeyStoreSpi_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/KeyStoreSpi_5.java:31: error: cannot find symbol
        AlgorithmParameterSpec paramSpec = keyGenerator.getParameters();
                                                       ^
  symbol:   method getParameters()
  location: variable keyGenerator of type KeyGenerator
./Data/java_security/javaFiles/KeyStoreSpi_5.java:42: error: method getService in class Provider cannot be applied to given types;
        KeyStoreSpi keyStoreSpi = keyStore.getProvider().getService();
                                                        ^
  required: String,String
  found:    no arguments
  reason: actual and formal argument lists differ in length
2 errors


================================================================

Sample: MessageDigest_2
----------------------------------------------------------------
stdout:
Hash: DFFD6021BB2BD5B0AF676290809EC3A53191DD81C7F70A4B28688A362182986F

================================================================

Sample: MessageDigest_3
----------------------------------------------------------------
stdout:
��`!�+հ�gb���å1�݁��
K(h�6!��o

================================================================

Sample: MessageDigest_4
----------------------------------------------------------------
stdout:
65a8e27d8879283831b664bd8b7f0ad4

================================================================

Sample: MessageDigest_5
----------------------------------------------------------------
stdout:
DFFD6021BB2BD5B0AF676290809EC3A53191DD81C7F70A4B28688A362182986F

================================================================

Sample: Permission_1
----------------------------------------------------------------
stdout:
false

================================================================

Sample: Permission_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_2.java:7: error: Permission is abstract; cannot be instantiated
        Permission perm1 = new Permission("read");
                           ^
./Data/java_security/javaFiles/Permission_2.java:8: error: Permission is abstract; cannot be instantiated
        Permission perm2 = new Permission("write");
                           ^
2 errors


================================================================

Sample: Permission_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_3.java:5: error: <anonymous Permission_3$1> is not abstract and does not override abstract method getActions() in Permission
        Permission permission = new Permission("read") {
                                                       ^
1 error


================================================================

Sample: Permission_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_4.java:10: error: for-each not applicable to expression type
        for (Permission permission : permissions) {
                                     ^
  required: array or java.lang.Iterable
  found:    Permissions
1 error


================================================================

Sample: Permission_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permission_5.java:9: error: for-each not applicable to expression type
        for (Permission permission : permissions) {
                                     ^
  required: array or java.lang.Iterable
  found:    Permissions
1 error


================================================================

Sample: PermissionCollection_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PermissionCollection_1.java:5: error: PermissionCollection is abstract; cannot be instantiated
        PermissionCollection permissionCollection = new PermissionCollection();
                                                    ^
./Data/java_security/javaFiles/PermissionCollection_1.java:6: error: cannot find symbol
        Permission permission = new FilePermission("<<ALL FILES>>", "read");
                                    ^
  symbol:   class FilePermission
  location: class PermissionCollection_1
2 errors


================================================================

Sample: PermissionCollection_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PermissionCollection_2.java:8: error: Permission is abstract; cannot be instantiated
        Permission permission = new Permission("read");
                                ^
1 error


================================================================

Sample: PermissionCollection_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/PermissionCollection_3.java:6: error: PermissionCollection is abstract; cannot be instantiated
        PermissionCollection permissionCollection = new PermissionCollection();
                                                    ^
./Data/java_security/javaFiles/PermissionCollection_3.java:7: error: cannot find symbol
        permissionCollection.add(new FilePermission("read", "write"));
                                     ^
  symbol:   class FilePermission
  location: class PermissionCollection_3
2 errors


================================================================

Sample: PermissionCollection_5
----------------------------------------------------------------
stdout:
java.security.Permissions@43a0cee9 (
 ("java.lang.RuntimePermission" "createClassLoader")
)


stderr:
Exception in thread "main" java.lang.SecurityException: attempt to add a Permission to a readonly Permissions object
	at java.base/java.security.Permissions.add(Permissions.java:126)
	at PermissionCollection_5.main(PermissionCollection_5.java:11)

================================================================

Sample: Permissions_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Permissions_1.java:17: warning: [removal] Policy in java.security has been deprecated and marked for removal
        Policy policy = Policy.getPolicy();
        ^
./Data/java_security/javaFiles/Permissions_1.java:17: warning: [removal] Policy in java.security has been deprecated and marked for removal
        Policy policy = Policy.getPolicy();
                        ^
./Data/java_security/javaFiles/Permissions_1.java:20: error: incompatible types: Permissions cannot be converted to ProtectionDomain
        boolean implies = policy.implies(permissions, permission);
                                         ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error
2 warnings


================================================================

Sample: Permissions_3
----------------------------------------------------------------
stdout:
createClassLoader
accessClassInPackage.java.lang

================================================================

Sample: Provider_2
----------------------------------------------------------------
stdout:
SUN
SunRsaSign
SunEC
SunJSSE
SunJCE
SunJGSS
SunSASL
XMLDSig
SunPCSC
JdkLDAP
JdkSASL
SunPKCS11

================================================================

Sample: Provider_4
----------------------------------------------------------------
stdout:
SUN: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; PKCS12, JKS & DKS keystores; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
SunRsaSign: Sun RSA signature provider
SunEC: Sun Elliptic Curve provider
SunJSSE: Sun JSSE provider(PKCS12, SunX509/PKIX key/trust factories, SSLv3/TLSv1/TLSv1.1/TLSv1.2/TLSv1.3/DTLSv1.0/DTLSv1.2)
SunJCE: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC, ChaCha20)
SunJGSS: Sun (Kerberos v5, SPNEGO)
SunSASL: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, EXTERNAL, PLAIN, CRAM-MD5, NTLM; server mechanisms for: DIGEST-MD5, CRAM-MD5, NTLM)
XMLDSig: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory; C14N 1.0, C14N 1.1, Exclusive C14N, Base64, Enveloped, XPath, XPath2, XSLT TransformServices)
SunPCSC: Sun PC/SC provider
JdkLDAP: JdkLDAP Provider (implements LDAP CertStore)
JdkSASL: JDK SASL provider(implements client and server mechanisms for GSSAPI)
SunPKCS11: Unconfigured and unusable PKCS11 provider

================================================================

Sample: Provider_Service_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.security.Provider.getServices()" because "<local1>" is null
	at Provider_Service_1.main(Provider_Service_1.java:7)

================================================================

Sample: Provider_Service_2
----------------------------------------------------------------
stdout:
DSA
SHA-1
PKIX
MD2
MD5
SHA1PRNG
SHA-512/256
SHA3-512
SHA-256
SHA3-256withDSAinP1363Format
SHA512withDSAinP1363Format
SHA3-512withDSAinP1363Format
SHA1withDSA
SHA-384
SHA1withDSAinP1363Format
SHA256withDSAinP1363Format
SHA-512/224
SHA3-224withDSAinP1363Format
SHA384withDSA
SHA3-384withDSA
SHA3-512withDSA
JavaLoginConfig
SHA-512
SHA512withDSA
SHA3-224withDSA
SHA3-256withDSA
SHA224withDSA
SHA256withDSA
SHA3-256
Collection
NativePRNGBlocking
X.509
SHA384withDSAinP1363Format
DSA
SHA-224
DSA
SHA3-384
JKS
SHA3-384withDSAinP1363Format
DSA
PKIX
SHA3-224
NONEwithDSAinP1363Format
NativePRNG
NONEwithDSA
NativePRNGNonBlocking
CaseExactJKS
PKCS12
DRBG
SHA224withDSAinP1363Format
DKS
com.sun.security.IndexedCollection
JavaPolicy
RSASSA-PSS
RSA
RSASSA-PSS
RSASSA-PSS
SHA224withRSA
SHA3-224withRSA
RSASSA-PSS
RSA
SHA1withRSA
MD5withRSA
MD2withRSA
SHA256withRSA
SHA384withRSA
SHA3-256withRSA
SHA3-384withRSA
SHA3-512withRSA
SHA512/224withRSA
SHA512/256withRSA
SHA512withRSA
Ed448
X25519
X448
Ed25519
EC
X448
X448
X25519
EC
X25519
Ed25519
Ed25519
EdDSA
EC
Ed448
SHA256withECDSA
Ed448
SHA3-512withECDSA
EdDSA
SHA224withECDSAinP1363Format
SHA256withECDSAinP1363Format
SHA3-224withECDSA
SHA3-256withECDSAinP1363Format
SHA3-384withECDSA
SHA224withECDSA
SHA384withECDSA
XDH
SHA512withECDSA
EdDSA
SHA3-256withECDSA
SHA3-384withECDSAinP1363Format
XDH
NONEwithECDSA
NONEwithECDSAinP1363Format
SHA3-224withECDSAinP1363Format
XDH
SHA3-512withECDSAinP1363Format
SHA384withECDSAinP1363Format
SHA512withECDSAinP1363Format
SHA1withECDSA
ECDH
SHA1withECDSAinP1363Format
TLSv1
PKIX
NewSunX509
DTLSv1.0
DTLS
DTLSv1.2
TLS
Default
TLSv1.2
TLSv1.1
MD5andSHA1withRSA
PKCS12
TLSv1.3
SunX509
SunX509
HmacSHA512
HmacSHA3-384
HmacSHA3-224
AES
HmacSHA384
HmacSHA3-512
PBEWithMD5AndDES
HmacSHA384
HmacSHA512/256
HmacSHA3-224
AES/GCM/NoPadding
HmacSHA512/224
HmacSHA3-256
PBEWithSHA1AndRC2_128
HmacSHA512/224
HmacSHA512
AES_192/ECB/NoPadding
RC2
AES_128/KW/NoPadding
PBEWithSHA1AndRC2_40
HmacSHA512/256
PBEWithMD5AndDES
PBEWithSHA1AndRC4_128
DESede
PBEWithSHA1AndDESede
PBEWithSHA1AndRC4_40
PBEWithSHA1AndRC2_128
DiffieHellman
PBEWithSHA1AndRC4_128
DESedeWrap
AES_256/KW/NoPadding
AES/KW/NoPadding
HmacSHA256
PBEWithSHA1AndDESede
PBEWithSHA1AndRC4_40
AES_192/KWP/NoPadding
PBEWithSHA1AndRC4_40
PBEWithSHA1AndDESede
PBEWithHmacSHA224AndAES_128
PBEWithSHA1AndRC4_128
PBEWithSHA1AndRC2_40
HmacPBESHA512/224
PBEWithMD5AndTripleDES
PBEWithSHA1AndRC2_128
ChaCha20-Poly1305
AES
PBEWithSHA1AndRC2_40
HmacSHA3-512
DiffieHellman
HmacSHA3-256
HmacSHA3-384
AES_192/OFB/NoPadding
AES_192/CFB/NoPadding
AES_192/KW/NoPadding
SunTlsPrf
AES_192/GCM/NoPadding
SslMacMD5
HmacSHA224
PBEWithMD5AndDES
PBKDF2WithHmacSHA1
AES_192/CBC/NoPadding
PBEWithHmacSHA512
AES_128/KW/PKCS5Padding
DESede
SunTlsKeyMaterial
AES_256/KW/PKCS5Padding
OAEP
AES_128/ECB/NoPadding
SunTlsMasterSecret
AES_256/ECB/NoPadding
ChaCha20-Poly1305
PBEWithHmacSHA224AndAES_128
DiffieHellman
PBKDF2WithHmacSHA384
AES/KW/PKCS5Padding
ARCFOUR
DESede
ARCFOUR
AES_256/GCM/NoPadding
HmacPBESHA512/256
SunTls12Prf
Blowfish
PBEWithHmacSHA256
PBEWithHmacSHA224AndAES_128
HmacPBESHA384
PBEWithHmacSHA1AndAES_256
PBKDF2WithHmacSHA256
RC2
PBEWithHmacSHA384AndAES_256
RSA
HmacPBESHA256
HmacSHA256
AES_128/CFB/NoPadding
PBES2
HmacSHA1
AES
AES_128/KWP/NoPadding
DiffieHellman
AES_128/OFB/NoPadding
AES_256/KWP/NoPadding
ChaCha20
PBEWithHmacSHA224AndAES_256
HmacSHA224
PBEWithMD5AndTripleDES
DES
SslMacSHA1
PBEWithHmacSHA384
PBEWithHmacSHA224AndAES_256
DES
AES_256/CBC/NoPadding
PBEWithHmacSHA384AndAES_128
HmacSHA1
PBKDF2WithHmacSHA224
PBEWithHmacSHA256AndAES_256
HmacPBESHA224
PBEWithHmacSHA512AndAES_256
HmacMD5
HmacMD5
DESede
PBEWithHmacSHA512AndAES_128
PBEWithHmacSHA256AndAES_128
AES/KWP/NoPadding
PBEWithHmacSHA512AndAES_128
AES_192/KW/PKCS5Padding
PBEWithHmacSHA512AndAES_256
HmacPBESHA1
SunTlsRsaPremasterSecret
AES_256/CFB/NoPadding
PBEWithHmacSHA256AndAES_128
PBEWithHmacSHA512AndAES_128
PBEWithHmacSHA1AndAES_128
Blowfish
PBEWithHmacSHA224
PBEWithHmacSHA256AndAES_256
DiffieHellman
PBEWithHmacSHA1
PBEWithHmacSHA512AndAES_256
PBEWithHmacSHA384AndAES_256
PBEWithHmacSHA1AndAES_128
DES
AES_128/CBC/NoPadding
PBEWithHmacSHA224AndAES_256
AES_256/OFB/NoPadding
PBEWithHmacSHA384AndAES_128
DES
PBEWithHmacSHA1AndAES_128
PBEWithHmacSHA1AndAES_256
PBEWithHmacSHA384AndAES_256
AES_128/GCM/NoPadding
PBEWithHmacSHA1AndAES_256
PBEWithHmacSHA256AndAES_256
RC2
JCEKS
PBEWithHmacSHA384AndAES_128
Blowfish
GCM
PBKDF2WithHmacSHA512
ChaCha20
PBEWithHmacSHA256AndAES_128
HmacPBESHA512
PBEWithMD5AndTripleDES
1.2.840.113554.1.2.2
1.3.6.1.5.5.2
DIGEST-MD5
DIGEST-MD5
EXTERNAL
CRAM-MD5
CRAM-MD5
PLAIN
NTLM
NTLM
http://www.w3.org/2001/10/xml-exc-c14n#
http://www.w3.org/2000/09/xmldsig#enveloped-signature
http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments
http://www.w3.org/2002/06/xmldsig-filter2
http://www.w3.org/2006/12/xml-c14n11
http://www.w3.org/2001/10/xml-exc-c14n#WithComments
http://www.w3.org/TR/1999/REC-xslt-19991116
http://www.w3.org/2006/12/xml-c14n11#WithComments
http://www.w3.org/TR/1999/REC-xpath-19991116
DOM
http://www.w3.org/2000/09/xmldsig#base64
http://www.w3.org/TR/2001/REC-xml-c14n-20010315
DOM
PC/SC
LDAP
GSSAPI
GSSAPI

================================================================

Sample: Provider_Service_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Provider_Service_4.java:6: error: Provider is abstract; cannot be instantiated
        Provider provider = new Provider("TestProvider", 1.0, "Test Provider");
                            ^
./Data/java_security/javaFiles/Provider_Service_4.java:7: error: incompatible types: String cannot be converted to Provider
        Service service = new Service("TestService", "TestService", "Test Service");
                                      ^
./Data/java_security/javaFiles/Provider_Service_4.java:8: error: putService(Service) has protected access in Provider
        provider.putService(service);
                ^
./Data/java_security/javaFiles/Provider_Service_4.java:10: error: method getService in class Provider cannot be applied to given types;
        Service foundService = provider.getService("TestService");
                                       ^
  required: String,String
  found:    String
  reason: actual and formal argument lists differ in length
Note: ./Data/java_security/javaFiles/Provider_Service_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
4 errors


================================================================

Sample: SecureRandom_2
----------------------------------------------------------------
stdout:
Generated random bytes:
-26 17 74 -17 37 115 -77 34 -33 -104 
================================================================

Sample: Security_1
----------------------------------------------------------------
stdout:
The property for key "file.separator" is "null"

================================================================

Sample: Security_2
----------------------------------------------------------------
stdout:
null

================================================================

Sample: Signature_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.security.SignatureException: Bad signature length: got 13 but was expecting 128
	at java.base/sun.security.rsa.RSASignature.engineVerify(RSASignature.java:215)
	at java.base/java.security.Signature$Delegate.engineVerify(Signature.java:1435)
	at java.base/java.security.Signature.verify(Signature.java:789)
	at Signature_1.main(Signature_1.java:21)

================================================================

Sample: Signature_2
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Signature_2.java:18: error: unreported exception SignatureException; must be caught or declared to be thrown
            signature.update(input);
                            ^
1 error


================================================================

Sample: Signature_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Signature_3.java:16: error: incompatible types: String cannot be converted to PrivateKey
        signature.initSign("YOUR_PRIVATE_KEY");
                           ^
./Data/java_security/javaFiles/Signature_3.java:21: error: no suitable method found for initVerify(String)
        signature.initVerify("YOUR_PUBLIC_KEY");
                 ^
    method Signature.initVerify(PublicKey) is not applicable
      (argument mismatch; String cannot be converted to PublicKey)
    method Signature.initVerify(Certificate) is not applicable
      (argument mismatch; String cannot be converted to Certificate)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: Signature_4
----------------------------------------------------------------
stdout:
Signature: EY31Xrs4ET6z6HUbt70h6+oU9F2rCKuy/0BfTD+bVcGg1HXxcHkMVC/FtZvMRaeiln0CYJcp5T1r0SI2SMkZx3obG3ujE5susJJM639tdpYe3bfCEnvfxmigzNzRlkNbXqHiz+ImXJyYYZAeBYrmLtGAqxF8hJ/kslRJOcGfEEtjitWki21kthAtNgvC8LMZy2Mhf9B7DRCDkzXafMFiq5kzIIYwaz7ZoGoXpydwttRBG31XD/H85HwhdML4fUSMsYAfjOg3n0aJKE+JQ4cAOEm5bCkD7ewsy1wLu4ibW2g7XNkn5dTFfrFCiRtbOe/Mwdn3l7PkiUAQkrJUb6RHMg==

================================================================

Sample: Signature_5
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/Signature_5.java:12: error: cannot find symbol
            signature.initSign(KeyGenerator.getInstance("RSA").generateKey());
                               ^
  symbol:   variable KeyGenerator
  location: class Signature_5
1 error


================================================================

Sample: Timestamp_3
----------------------------------------------------------------
stdout:
2024-04-13 17:59:55.091

================================================================

Sample: UnresolvedPermission_1
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/UnresolvedPermission_1.java:7: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
            UnresolvedPermission permission = new UnresolvedPermission("");
                                              ^
  required: String,String,String,Certificate[]
  found:    String
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: UnresolvedPermission_3
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/UnresolvedPermission_3.java:6: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
            Permission permission1 = new UnresolvedPermission("read");
                                     ^
  required: String,String,String,Certificate[]
  found:    String
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/UnresolvedPermission_3.java:7: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
            Permission permission2 = new UnresolvedPermission("write");
                                     ^
  required: String,String,String,Certificate[]
  found:    String
  reason: actual and formal argument lists differ in length
2 errors


================================================================

Sample: UnresolvedPermission_4
----------------------------------------------------------------
output:
./Data/java_security/javaFiles/UnresolvedPermission_4.java:5: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
        UnresolvedPermission permission1 = new UnresolvedPermission("read");
                                           ^
  required: String,String,String,Certificate[]
  found:    String
  reason: actual and formal argument lists differ in length
./Data/java_security/javaFiles/UnresolvedPermission_4.java:6: error: constructor UnresolvedPermission in class UnresolvedPermission cannot be applied to given types;
        UnresolvedPermission permission2 = new UnresolvedPermission("write");
                                           ^
  required: String,String,String,Certificate[]
  found:    String
  reason: actual and formal argument lists differ in length
2 errors


================================================================

