Sample: BufferedInputStream_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: BufferedInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_3.main(BufferedInputStream_3.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_4.main(BufferedInputStream_4.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_5
----------------------------------------------------------------
stdout:
Available bytes: 13

================================================================

Sample: BufferedOutputStream_1
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: BufferedOutputStream_3
----------------------------------------------------------------
================================================================

Sample: BufferedOutputStream_4
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: BufferedReader_1
----------------------------------------------------------------
stdout:
The read character is: i

================================================================

Sample: BufferedReader_3
----------------------------------------------------------------
stdout:
You entered: in case

================================================================

Sample: BufferedReader_4
----------------------------------------------------------------
stdout:
World!

================================================================

Sample: BufferedReader_5
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: BufferedWriter_1
----------------------------------------------------------------
================================================================

Sample: BufferedWriter_3
----------------------------------------------------------------
================================================================

Sample: BufferedWriter_5
----------------------------------------------------------------
================================================================

Sample: ByteArrayInputStream_1
----------------------------------------------------------------
stdout:
A
B
C
D
E

================================================================

Sample: ByteArrayInputStream_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayInputStream_3.java:14: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayInputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayInputStream_4.java:16: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayInputStream_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayInputStream_5.java:11: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayOutputStream_1
----------------------------------------------------------------
stdout:
65

================================================================

Sample: ByteArrayOutputStream_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayOutputStream_3.java:14: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayOutputStream_4
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: ByteArrayOutputStream_9
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayOutputStream_9.java:14: error: count has protected access in ByteArrayOutputStream
        System.out.println("Size of ByteArrayOutputStream: " + baos.count);
                                                                   ^
1 error


================================================================

Sample: CharArrayReader_1
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: CharArrayReader_2
----------------------------------------------------------------
stdout:
Number of characters read: 5
Characters read: Hello

================================================================

Sample: CharArrayReader_3
----------------------------------------------------------------
stdout:
Skipped: 3
afe
================================================================

Sample: CharArrayReader_5
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: CharArrayWriter_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_1.java:19: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: CharArrayWriter_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_2.java:12: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: CharArrayWriter_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayWriter_3.java:14: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: CharArrayWriter_4
----------------------------------------------------------------
stdout:
Before flush: Hello, World!
After flush: Hello, World!

================================================================

Sample: CharArrayWriter_5
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: Console_1
----------------------------------------------------------------
stdout:
Console is not available

================================================================

Sample: Console_4
----------------------------------------------------------------
================================================================

Sample: DataInputStream_2
----------------------------------------------------------------
stdout:
Number of bytes read: 10
Data read: HelloWorld

================================================================

Sample: DataInputStream_3
----------------------------------------------------------------
stdout:
Number of bytes read: 10
Buffer content: 
1 2 3 4 5 6 7 8 9 10 
================================================================

Sample: DataInputStream_12
----------------------------------------------------------------
stdout:
Number of bytes read: 10
Data read: HelloWorld

================================================================

Sample: DataInputStream_13
----------------------------------------------------------------
stdout:
Number of bytes read: 10
Buffer content: 
1 2 3 4 5 6 7 8 9 10 
================================================================

Sample: DataOutputStream_1
----------------------------------------------------------------
================================================================

Sample: DataOutputStream_3
----------------------------------------------------------------
================================================================

Sample: DataOutputStream_4
----------------------------------------------------------------
================================================================

Sample: File_1
----------------------------------------------------------------
stdout:
File already exists.
File is readable

================================================================

Sample: File_2
----------------------------------------------------------------
stdout:
Can write: true

================================================================

Sample: File_3
----------------------------------------------------------------
stdout:
File already exists

================================================================

Sample: File_4
----------------------------------------------------------------
stdout:
File already exists
File deleted successfully

================================================================

Sample: File_5
----------------------------------------------------------------
stdout:
Absolute path: /home/yixi/comp4522/DeepseekCoder/Pipeline/Temp0/example.txt

================================================================

Sample: FileDescriptor_2
----------------------------------------------------------------
================================================================

Sample: FileDescriptor_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FileDescriptor_5.java:7: error: unreported exception IOException; must be caught or declared to be thrown
        FileDescriptor fd = new FileOutputStream(FileDescriptor.out).getFD();
                                                                          ^
1 error


================================================================

Sample: FileInputStream_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_1.main(FileInputStream_1.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileInputStream_2
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: path_to_your_file (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_2.main(FileInputStream_2.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: path_to_your_file (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_3.main(FileInputStream_3.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_4.main(FileInputStream_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileInputStream_5
----------------------------------------------------------------
stdout:
Available bytes: 13

================================================================

Sample: FileInputStream_10
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FileInputStream_10.main(FileInputStream_10.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FileOutputStream_5
----------------------------------------------------------------
================================================================

Sample: FilterInputStream_1
----------------------------------------------------------------
stdout:
Read data: 105

================================================================

Sample: FilterInputStream_2
----------------------------------------------------------------
stdout:
Bytes read: 7
Content: in case

================================================================

Sample: FilterInputStream_3
----------------------------------------------------------------
stdout:
Bytes read: 7
Content: in case

================================================================

Sample: FilterInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at FilterInputStream_4.main(FilterInputStream_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FilterInputStream_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterInputStream_5.java:13: error: unreported exception IOException; must be caught or declared to be thrown
        int availableBytes = inputStream.available();
                                                  ^
1 error


================================================================

Sample: FilterOutputStream_1
----------------------------------------------------------------
stdout:
65

================================================================

Sample: FilterOutputStream_2
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_3
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_4
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_5
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: FilterReader_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: FilterReader_3
----------------------------------------------------------------
stdout:
, World!
================================================================

Sample: FilterReader_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_5.java:10: error: incompatible types: BufferedReader cannot be converted to FilterReader
            FilterReader filterReader = new BufferedReader(fileReader);
                                        ^
1 error


================================================================

Sample: FilterWriter_1
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: FilterWriter_4
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: FilterWriter_5
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: InputStream_1
----------------------------------------------------------------
stdout:
Enter a character:
You entered: i

================================================================

Sample: InputStream_2
----------------------------------------------------------------
stdout:
Bytes read: 5
Data read: ABCDE

================================================================

Sample: InputStream_3
----------------------------------------------------------------
stdout:
Bytes read: 10
1 2 3 4 5 6 7 8 9 10 
Bytes read: 2
11 12 

================================================================

Sample: InputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/InputStream_4.java:10: error: cannot find symbol
            System.out.println("Initial position: " + inputStream.getPos());
                                                                 ^
  symbol:   method getPos()
  location: variable inputStream of type ByteArrayInputStream
./Data/java_io/javaFiles/InputStream_4.java:12: error: cannot find symbol
            System.out.println("Position after skipping 3 bytes: " + inputStream.getPos());
                                                                                ^
  symbol:   method getPos()
  location: variable inputStream of type ByteArrayInputStream
2 errors


================================================================

Sample: InputStream_5
----------------------------------------------------------------
stdout:
Number of bytes available: 13

================================================================

Sample: InputStreamReader_1
----------------------------------------------------------------
stdout:
Enter a character:
The character you entered is: i

================================================================

Sample: InputStreamReader_3
----------------------------------------------------------------
stdout:
Number of characters read: 7
Content read: in case

================================================================

Sample: InputStreamReader_4
----------------------------------------------------------------
stdout:
InputStreamReader closed successfully.

================================================================

Sample: LineNumberInputStream_1
----------------------------------------------------------------
stdout:
Character: H ASCII: 72
Character: e ASCII: 101
Character: l ASCII: 108
Character: l ASCII: 108
Character: o ASCII: 111
Character: , ASCII: 44
Character:   ASCII: 32
Character: W ASCII: 87
Character: o ASCII: 111
Character: r ASCII: 114
Character: l ASCII: 108
Character: d ASCII: 100
Character: ! ASCII: 33

stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberInputStream_4
----------------------------------------------------------------
stdout:
Line number: 0, Byte: H
Line number: 0, Byte: e
Line number: 0, Byte: l
Line number: 0, Byte: l
Line number: 0, Byte: o
Line number: 0, Byte: 

Line number: 1, Byte: W
Line number: 1, Byte: o
Line number: 1, Byte: r
Line number: 1, Byte: l
Line number: 1, Byte: d
Line number: 1, Byte: 


stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberReader_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: path_to_your_file (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at java.base/java.io.FileReader.<init>(FileReader.java:60)
	at LineNumberReader_1.main(LineNumberReader_1.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: LineNumberReader_2
----------------------------------------------------------------
stdout:
Line number: 10
Line: Hello, World!

================================================================

Sample: LineNumberReader_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: ObjectInputStream_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_1.java:10: error: unreported exception IOException; must be caught or declared to be thrown
        ObjectInputStream ois = new ObjectInputStream(bis);
                                ^
1 error


================================================================

Sample: ObjectInputStream_2
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at ObjectInputStream_2.main(ObjectInputStream_2.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at ObjectInputStream_4.main(ObjectInputStream_4.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_5
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: object.ser (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at ObjectInputStream_5.main(ObjectInputStream_5.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectOutputStream_1
----------------------------------------------------------------
================================================================

Sample: ObjectOutputStream_2
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: ObjectOutputStream_3
----------------------------------------------------------------
stdout:
�� wHello, World!

================================================================

Sample: ObjectOutputStream_4
----------------------------------------------------------------
stdout:
Object has been written to object.dat

================================================================

Sample: ObjectOutputStream_5
----------------------------------------------------------------
stdout:
Object has been written to the output stream.

================================================================

Sample: ObjectStreamClass_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.ObjectStreamClass.getName()" because "<local1>" is null
	at ObjectStreamClass_1.main(ObjectStreamClass_1.java:6)

================================================================

Sample: ObjectStreamClass_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.ObjectStreamClass.toString()" because "<local1>" is null
	at ObjectStreamClass_5.main(ObjectStreamClass_5.java:6)

================================================================

Sample: ObjectStreamField_2
----------------------------------------------------------------
stdout:
name
Hello

================================================================

Sample: ObjectStreamField_3
----------------------------------------------------------------
stdout:
java.lang.String

================================================================

Sample: OutputStream_1
----------------------------------------------------------------
================================================================

Sample: OutputStream_2
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: OutputStream_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: OutputStream_4
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: OutputStream_5
----------------------------------------------------------------
================================================================

Sample: OutputStreamWriter_1
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: OutputStreamWriter_3
----------------------------------------------------------------
================================================================

Sample: OutputStreamWriter_5
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: PipedInputStream_1
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:305)
	at PipedInputStream_1.lambda$main$0(PipedInputStream_1.java:9)
	at java.base/java.lang.Thread.run(Thread.java:840)

================================================================

Sample: PipedInputStream_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:305)
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:377)
	at PipedInputStream_3.main(PipedInputStream_3.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedInputStream_4
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PipedOutputStream_1
----------------------------------------------------------------
stdout:
Hello, World!
stderr:
java.io.IOException: Write end dead
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:310)
	at PipedOutputStream_1$2.run(PipedOutputStream_1.java:34)
	at java.base/java.lang.Thread.run(Thread.java:840)

================================================================

Sample: PipedOutputStream_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedOutputStream.write(PipedOutputStream.java:120)
	at PipedOutputStream_3.main(PipedOutputStream_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedOutputStream_5
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedOutputStream.write(PipedOutputStream.java:141)
	at PipedOutputStream_5.main(PipedOutputStream_5.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedWriter_1
----------------------------------------------------------------
stdout:
Hello, World!
stderr:
java.io.IOException: Write end dead
	at java.base/java.io.PipedReader.read(PipedReader.java:241)
	at PipedWriter_1.main(PipedWriter_1.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedWriter_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedWriter.write(PipedWriter.java:122)
	at PipedWriter_3.main(PipedWriter_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PrintStream_1
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintStream_2
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintStream_4
----------------------------------------------------------------
stdout:
true

================================================================

Sample: PrintStream_5
----------------------------------------------------------------
stdout:
123

================================================================

Sample: PrintWriter_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PrintWriter_2
----------------------------------------------------------------
stdout:
A
================================================================

Sample: PrintWriter_3
----------------------------------------------------------------
stdout:
123
================================================================

Sample: PrintWriter_4
----------------------------------------------------------------
stdout:
123.456
================================================================

Sample: PrintWriter_5
----------------------------------------------------------------
stdout:
true
================================================================

Sample: PushbackInputStream_1
----------------------------------------------------------------
stdout:
Read value: 1
Pushed back value: 1

================================================================

Sample: PushbackInputStream_3
----------------------------------------------------------------
stdout:
Read: 
Next byte: 
Remaining: 

================================================================

Sample: PushbackInputStream_4
----------------------------------------------------------------
stdout:
Read: i
Read: n
Read:  
Read: c
Read: a
Read: s
Read: e

================================================================

Sample: PushbackInputStream_5
----------------------------------------------------------------
stdout:
Read: 1
Read: 2
Pushed back: 3
Read: 4
Read: 5

================================================================

Sample: PushbackReader_1
----------------------------------------------------------------
stdout:
hello, World!
================================================================

Sample: PushbackReader_3
----------------------------------------------------------------
stdout:
Number of characters read: 5
Characters read: Hello

stderr:
java.io.IOException: Pushback buffer overflow
	at java.base/java.io.PushbackReader.unread(PushbackReader.java:143)
	at PushbackReader_3.main(PushbackReader_3.java:17)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PushbackReader_4
----------------------------------------------------------------
stdout:
HHHHHHH
================================================================

Sample: PushbackReader_5
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: RandomAccessFile_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: RandomAccessFile_2
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: test.txt (No such file or directory)
	at java.base/java.io.RandomAccessFile.open0(Native Method)
	at java.base/java.io.RandomAccessFile.open(RandomAccessFile.java:344)
	at java.base/java.io.RandomAccessFile.<init>(RandomAccessFile.java:259)
	at java.base/java.io.RandomAccessFile.<init>(RandomAccessFile.java:213)
	at java.base/java.io.RandomAccessFile.<init>(RandomAccessFile.java:127)
	at RandomAccessFile_2.main(RandomAccessFile_2.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: RandomAccessFile_3
----------------------------------------------------------------
stdout:
Hello, World!
HelloHellold!

================================================================

Sample: RandomAccessFile_4
----------------------------------------------------------------
stdout:
Length of the file: 0

================================================================

Sample: RandomAccessFile_5
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_6
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_7
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_8
----------------------------------------------------------------
stdout:
Initial length: 13
New length: 10

================================================================

Sample: RandomAccessFile_11
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_12
----------------------------------------------------------------
stdout:
FileDescriptor: java.io.FileDescriptor@587c290d

================================================================

Sample: RandomAccessFile_13
----------------------------------------------------------------
stdout:
Hello, World!
HelloHellold!

================================================================

Sample: RandomAccessFile_14
----------------------------------------------------------------
stdout:
Length of the file: 0

================================================================

Sample: RandomAccessFile_15
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_16
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_17
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_18
----------------------------------------------------------------
stdout:
Initial length: 13
New length: 10

================================================================

Sample: RandomAccessFile_21
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_22
----------------------------------------------------------------
stdout:
FileDescriptor: java.io.FileDescriptor@587c290d

================================================================

Sample: RandomAccessFile_23
----------------------------------------------------------------
stdout:
Hello, World!
HelloHellold!

================================================================

Sample: RandomAccessFile_24
----------------------------------------------------------------
stdout:
Length of the file: 0

================================================================

Sample: RandomAccessFile_25
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_26
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_27
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_28
----------------------------------------------------------------
stdout:
Initial length: 13
New length: 10

================================================================

Sample: RandomAccessFile_31
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_32
----------------------------------------------------------------
stdout:
FileDescriptor: java.io.FileDescriptor@587c290d

================================================================

Sample: Reader_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: Reader_2
----------------------------------------------------------------
stdout:
Number of characters read: 5
Data read: Hello

================================================================

Sample: Reader_3
----------------------------------------------------------------
stdout:
Before skipping: 72
After skipping: 32

================================================================

Sample: Reader_5
----------------------------------------------------------------
stdout:
Hello, Wor
================================================================

Sample: SequenceInputStream_1
----------------------------------------------------------------
stdout:
Number of bytes available: 5

================================================================

Sample: SequenceInputStream_2
----------------------------------------------------------------
stdout:
HelloWorld!
================================================================

Sample: SequenceInputStream_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/SequenceInputStream_3.java:10: error: unreported exception IOException; must be caught or declared to be thrown
        while ((i = sequenceInputStream.read())!= -1) {
                                            ^
./Data/java_io/javaFiles/SequenceInputStream_3.java:14: error: unreported exception IOException; must be caught or declared to be thrown
        sequenceInputStream.close();
                                 ^
2 errors


================================================================

Sample: SequenceInputStream_4
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: StreamTokenizer_1
----------------------------------------------------------------
stdout:
Hello
,
World
!

================================================================

Sample: StreamTokenizer_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StreamTokenizer_3.java:22: error: cannot find symbol
            tokenizer.reset(new StringReader("New input"));
                     ^
  symbol:   method reset(StringReader)
  location: variable tokenizer of type StreamTokenizer
1 error


================================================================

Sample: StreamTokenizer_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StreamTokenizer_4.java:11: error: empty character literal
        tokenizer.wordChars(' ','');
                                ^
1 error


================================================================

Sample: StreamTokenizer_6
----------------------------------------------------------------
stdout:
Hello
World

================================================================

Sample: StreamTokenizer_8
----------------------------------------------------------------
stdout:
First token: Hello
Next token: Hello

================================================================

Sample: StringReader_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: StringReader_2
----------------------------------------------------------------
stdout:
Chars read: 5
Content: Hello

================================================================

Sample: StringReader_3
----------------------------------------------------------------
stdout:
World
================================================================

Sample: StringWriter_1
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringWriter_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringWriter_3.java:10: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: StringWriter_4
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: StringWriter_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringWriter_5.java:10: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: Writer_1
----------------------------------------------------------------
================================================================

Sample: Writer_2
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Writer_3
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: Writer_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/Writer_4.java:13: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: Writer_5
----------------------------------------------------------------
================================================================

