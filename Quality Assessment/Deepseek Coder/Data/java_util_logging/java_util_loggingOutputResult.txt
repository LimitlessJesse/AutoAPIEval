Sample: FileHandler_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/FileHandler_3.java:19: error: cannot find symbol
            logger.publish(record);
                  ^
  symbol:   method publish(LogRecord)
  location: variable logger of type Logger
1 error


================================================================

Sample: FileHandler_5
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:01 P.M. FileHandler_5 main
INFO: My first log

================================================================

Sample: Formatter_1
----------------------------------------------------------------
stdout:
INFO: This is a log message


================================================================

Sample: Formatter_2
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:04 P.M. Formatter_2 main
INFO: Log message
Apr. 13, 2024 6:16:04 P.M. Formatter_2 main
INFO: Log message

================================================================

Sample: Formatter_3
----------------------------------------------------------------
stdout:
java.util.logging.SimpleFormatter@101df177

stderr:
Apr. 13, 2024 6:16:05 P.M. Formatter_3 main
INFO: This is the first log message
Apr. 13, 2024 6:16:05 P.M. Formatter_3 main
INFO: This is the first log message
Apr. 13, 2024 6:16:05 P.M. Formatter_3 main
INFO: This is the second log message
Apr. 13, 2024 6:16:05 P.M. Formatter_3 main
INFO: This is the second log message

================================================================

Sample: Handler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Handler_1.java:24: error: cannot find symbol
        logger.publish(logRecord);
              ^
  symbol:   method publish(LogRecord)
  location: variable logger of type Logger
1 error


================================================================

Sample: Handler_2
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:07 P.M. Handler_2 main
INFO: This is a test message
Apr. 13, 2024 6:16:07 P.M. Handler_2 main
INFO: This is a test message

================================================================

Sample: Handler_3
----------------------------------------------------------------
stdout:
Handler closed successfully.

================================================================

Sample: Handler_4
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:09 P.M. Handler_4 main
INFO: This is an information message
Apr. 13, 2024 6:16:09 P.M. Handler_4 main
INFO: This is an information message

================================================================

Sample: Handler_5
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:10 P.M. Handler_5 main
INFO: This is a test log message
Apr. 13, 2024 6:16:10 P.M. Handler_5 main
INFO: This is a test log message

================================================================

Sample: Level_1
----------------------------------------------------------------
stdout:
INFO

================================================================

Sample: Level_2
----------------------------------------------------------------
stdout:
Level name: INFO

================================================================

Sample: Level_3
----------------------------------------------------------------
stdout:
900

================================================================

Sample: Logger_1
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:15 P.M. Logger_1 main
SEVERE: This is a severe message

================================================================

Sample: Logger_2
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:16 P.M. Logger_2 main
WARNING: This is a warning message

================================================================

Sample: Logger_3
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:18 P.M. Logger_3 main
INFO: This is an information message

================================================================

Sample: Logger_4
----------------------------------------------------------------
================================================================

Sample: Logger_5
----------------------------------------------------------------
================================================================

Sample: LogManager_1
----------------------------------------------------------------
stderr:
error: no class declared in source file

================================================================

Sample: LogManager_3
----------------------------------------------------------------
================================================================

Sample: LogManager_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogManager_5.java:6: error: non-static method getLogger(String) cannot be referenced from a static context
        Logger logger = LogManager.getLogger(LogManager_5.class.getName());
                                  ^
1 error


================================================================

Sample: LogRecord_1
----------------------------------------------------------------
stdout:
This is a test message

stderr:
Apr. 13, 2024 6:16:24 P.M. LogRecord_1 main
INFO: This is a test message
Apr. 13, 2024 6:16:24 P.M. LogRecord_1 main
INFO: Another test message
Apr. 13, 2024 6:16:24 P.M. LogRecord_1 main
INFO: Another test message

================================================================

Sample: LogRecord_2
----------------------------------------------------------------
stdout:
This is a new log message

================================================================

Sample: LogRecord_3
----------------------------------------------------------------
stdout:
1713050186968

================================================================

Sample: LogRecord_4
----------------------------------------------------------------
stdout:
Apr. 13, 2024 6:16:28 P.M. null
INFO: This is a log message


stderr:
Note: ./Data/java_util_logging/javaFiles/LogRecord_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LogRecord_5
----------------------------------------------------------------
stdout:
Log level: INFO

================================================================

Sample: LogRecord_6
----------------------------------------------------------------
stderr:
Apr. 13, 2024 6:16:30 P.M. LogRecord_6 main
INFO: This is a test log record
Apr. 13, 2024 6:16:30 P.M. LogRecord_6 main
SEVERE: This is another test log record

================================================================

Sample: LogRecord_7
----------------------------------------------------------------
stdout:
LogRecord_7

stderr:
Apr. 13, 2024 6:16:31 P.M. LogRecord_7 main
INFO: This is a log message

================================================================

Sample: LogRecord_8
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_8.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class LogRecord_8
1 error


================================================================

Sample: LogRecord_9
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_9.java:11: error: cannot find symbol
            LogRecord logRecord = new LogRecord(Level.SEVERE, "An error occurred");
                                                ^
  symbol:   variable Level
  location: class LogRecord_9
1 error


================================================================

Sample: LogRecord_10
----------------------------------------------------------------
stdout:
java.lang.Throwable: This is a thrown exception

================================================================

Sample: LogRecord_11
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_11.java:7: error: cannot find symbol
        LogRecord logRecord = new LogRecord(Level.INFO, "This is a log message");
                                            ^
  symbol:   variable Level
  location: class LogRecord_11
1 error


================================================================

Sample: LogRecord_12
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_12.java:7: error: cannot find symbol
        LogRecord logRecord = new LogRecord(Level.INFO, "This is a log message");
                                            ^
  symbol:   variable Level
  location: class LogRecord_12
1 error


================================================================

Sample: LogRecord_14
----------------------------------------------------------------
================================================================

Sample: LogRecord_16
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_16.java:12: error: incompatible types: possible lossy conversion from long to int
        logRecord.setThreadID(Thread.currentThread().getId());
                                                          ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: LogRecord_17
----------------------------------------------------------------
stdout:
Resource Bundle Name: null

stderr:
Apr. 13, 2024 6:16:38 P.M. LogRecord_17 main
INFO: This is a log message

================================================================

Sample: LogRecord_18
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_18.java:8: error: cannot find symbol
        LogRecord logRecord = new LogRecord(Level.INFO, "This is a test log message");
                                            ^
  symbol:   variable Level
  location: class LogRecord_18
./Data/java_util_logging/javaFiles/LogRecord_18.java:12: error: cannot find symbol
        handler.setFormatter(new SimpleFormatter());
                                 ^
  symbol:   class SimpleFormatter
  location: class LogRecord_18
2 errors


================================================================

Sample: MemoryHandler_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException
	at java.logging/java.util.logging.MemoryHandler.<init>(MemoryHandler.java:157)
	at MemoryHandler_3.main(MemoryHandler_3.java:9)

================================================================

Sample: MemoryHandler_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_4.java:6: error: incompatible types: Logger cannot be converted to Handler
        MemoryHandler handler = new MemoryHandler(logger, 10, Level.INFO);
                                                  ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: MemoryHandler_11
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_11.java:6: error: incompatible types: Logger cannot be converted to Handler
        Handler handler = new MemoryHandler(logger, 10, Level.INFO);
                                            ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: MemoryHandler_18
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_18.java:18: error: cannot find symbol
        Level pushLevel = handler.getPushLevel();
                                 ^
  symbol:   method getPushLevel()
  location: variable handler of type Handler
1 error


================================================================

Sample: MemoryHandler_19
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_19.java:6: error: incompatible types: Logger cannot be converted to Handler
        MemoryHandler handler = new MemoryHandler(logger, 1, Level.ALL);
                                                  ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: MemoryHandler_20
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException
	at java.logging/java.util.logging.MemoryHandler.<init>(MemoryHandler.java:157)
	at MemoryHandler_20.main(MemoryHandler_20.java:9)

================================================================

Sample: SimpleFormatter_1
----------------------------------------------------------------
stdout:
Apr. 13, 2024 6:16:45 P.M. null
INFO: This is a log message


================================================================

Sample: SocketHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SocketHandler_1.java:9: error: incompatible types: Socket cannot be converted to String
            SocketHandler socketHandler = new SocketHandler(socket, "Logging to Socket");
                                                            ^
./Data/java_util_logging/javaFiles/SocketHandler_1.java:10: error: cannot find symbol
            socketHandler.push();
                         ^
  symbol:   method push()
  location: variable socketHandler of type SocketHandler
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: SocketHandler_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SocketHandler_3.java:9: error: unreported exception IOException; must be caught or declared to be thrown
        SocketHandler socketHandler = new SocketHandler();
                                      ^
1 error


================================================================

Sample: StreamHandler_1
----------------------------------------------------------------
================================================================

Sample: StreamHandler_2
----------------------------------------------------------------
stdout:
Apr. 13, 2024 6:16:48 P.M. StreamHandler_2 main
INFO: This is a log message

stderr:
Apr. 13, 2024 6:16:48 P.M. StreamHandler_2 main
INFO: This is a log message

================================================================

Sample: StreamHandler_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/StreamHandler_4.java:13: error: setOutputStream(OutputStream) has protected access in StreamHandler
            handler.setOutputStream(out);
                   ^
1 error


================================================================

