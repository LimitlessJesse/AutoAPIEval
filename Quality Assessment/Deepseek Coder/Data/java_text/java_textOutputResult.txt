Sample: BreakIterator_1
----------------------------------------------------------------
stdout:
Hello
,
 
World
!

================================================================

Sample: BreakIterator_2
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: BreakIterator_3
----------------------------------------------------------------
stdout:
Hello
,
 
this
 
is
 
a
 
test
.

================================================================

Sample: BreakIterator_4
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: BreakIterator_5
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: BreakIterator_7
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: BreakIterator_8
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: BreakIterator_9
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: BreakIterator_10
----------------------------------------------------------------
stdout:
Hello
,
 
this
 
is
 
a
 
test
.

================================================================

Sample: BreakIterator_12
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: BreakIterator_13
----------------------------------------------------------------
stdout:
Hello
,
 
world
!

================================================================

Sample: CollationElementIterator_2
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_2.java:9: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator(str);
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
./Data/java_text/javaFiles/CollationElementIterator_2.java:11: error: cannot find symbol
        while (iterator.next()!= CollationElementIterator.DONE) {
                                                         ^
  symbol:   variable DONE
  location: class CollationElementIterator
2 errors


================================================================

Sample: CollationElementIterator_3
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_3.java:8: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator("abc");
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
./Data/java_text/javaFiles/CollationElementIterator_3.java:10: error: cannot find symbol
        while (iterator.next()!= Collator.DONE) {
                                         ^
  symbol:   variable DONE
  location: class Collator
./Data/java_text/javaFiles/CollationElementIterator_3.java:11: error: cannot find symbol
            System.out.println(iterator.getLocaleKey());
                                       ^
  symbol:   method getLocaleKey()
  location: variable iterator of type CollationElementIterator
3 errors


================================================================

Sample: CollationElementIterator_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_4.java:8: error: cannot find symbol
        CollationElementIterator iterator = collator.getCollationElementIterator("abc");
                                                    ^
  symbol:   method getCollationElementIterator(String)
  location: variable collator of type Collator
./Data/java_text/javaFiles/CollationElementIterator_4.java:10: error: cannot find symbol
        if (iterator!= null && iterator.next() == CollationElementIterator.CE_STRING) {
                                                                          ^
  symbol:   variable CE_STRING
  location: class CollationElementIterator
./Data/java_text/javaFiles/CollationElementIterator_4.java:11: error: cannot find symbol
            System.out.println(iterator.getLocaleString());
                                       ^
  symbol:   method getLocaleString()
  location: variable iterator of type CollationElementIterator
./Data/java_text/javaFiles/CollationElementIterator_4.java:14: error: cannot find symbol
        if (iterator!= null && iterator.previous() == CollationElementIterator.CE_STRING) {
                                                                              ^
  symbol:   variable CE_STRING
  location: class CollationElementIterator
./Data/java_text/javaFiles/CollationElementIterator_4.java:15: error: cannot find symbol
            System.out.println(iterator.getLocaleString());
                                       ^
  symbol:   method getLocaleString()
  location: variable iterator of type CollationElementIterator
5 errors


================================================================

Sample: CollationKey_2
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Collator_2
----------------------------------------------------------------
stdout:
0

================================================================

Sample: Collator_3
----------------------------------------------------------------
stdout:
Strength: 2

================================================================

Sample: Collator_4
----------------------------------------------------------------
stdout:
The first string is less than the second string.

================================================================

Sample: Collator_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Collator_5.java:8: error: method getDecomposition in class Collator cannot be applied to given types;
        int decomposition = collator.getDecomposition(str.charAt(0));
                                    ^
  required: no arguments
  found:    char
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: DateFormat_1
----------------------------------------------------------------
stdout:
April 13, 2024 at 6:01:04 p.m. CDT

================================================================

Sample: DateFormat_2
----------------------------------------------------------------
stderr:
java.text.ParseException: Unparseable date: "12/08/2022"
	at java.base/java.text.DateFormat.parse(DateFormat.java:399)
	at DateFormat_2.main(DateFormat_2.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: DateFormat_3
----------------------------------------------------------------
stdout:
2024-04-13 16:01:07

================================================================

Sample: DateFormat_4
----------------------------------------------------------------
stdout:
America/Winnipeg

================================================================

Sample: DateFormatSymbols_1
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/DateFormatSymbols_1.java:1: error: class, interface, enum, or record expected
DateFormatSymbols dfs = new DateFormatSymbols(Locale.FRENCH);
^
./Data/java_text/javaFiles/DateFormatSymbols_1.java:2: error: class, interface, enum, or record expected
String[] months = dfs.getMonths();
^
./Data/java_text/javaFiles/DateFormatSymbols_1.java:3: error: class, interface, enum, or record expected
System.out.println(Arrays.toString(months));
^
3 errors


================================================================

Sample: DateFormatSymbols_2
----------------------------------------------------------------
stdout:
[Jan., Feb., Mar., Apr., May, Jun., Jul., Aug., Sep., Oct., Nov., Dec., ]

================================================================

Sample: DateFormatSymbols_3
----------------------------------------------------------------
stdout:
[, Sun., Mon., Tue., Wed., Thu., Fri., Sat.]

================================================================

Sample: DateFormatSymbols_4
----------------------------------------------------------------
stdout:
[, Sun., Mon., Tue., Wed., Thu., Fri., Sat.]

================================================================

Sample: DateFormatSymbols_5
----------------------------------------------------------------
stdout:
[a.m., p.m.]

================================================================

Sample: DecimalFormatSymbols_2
----------------------------------------------------------------
stdout:
The grouping separator is: ,

================================================================

Sample: DecimalFormatSymbols_3
----------------------------------------------------------------
stdout:
,

================================================================

Sample: DecimalFormatSymbols_4
----------------------------------------------------------------
stdout:
-

================================================================

Sample: DecimalFormatSymbols_17
----------------------------------------------------------------
stdout:
∞

================================================================

Sample: DecimalFormatSymbols_18
----------------------------------------------------------------
stdout:
Inf

================================================================

Sample: DecimalFormatSymbols_20
----------------------------------------------------------------
stdout:
Not a Number

================================================================

Sample: FieldPosition_1
----------------------------------------------------------------
stdout:
0

================================================================

Sample: FieldPosition_2
----------------------------------------------------------------
stdout:
End Index: 20

================================================================

Sample: FieldPosition_3
----------------------------------------------------------------
stdout:
5

================================================================

Sample: FieldPosition_4
----------------------------------------------------------------
stdout:
10

================================================================

Sample: Format_1
----------------------------------------------------------------
stdout:
13/04/2024 18:01:26

================================================================

Sample: Format_2
----------------------------------------------------------------
stdout:
13-04-2024 18:01:27

================================================================

Sample: MessageFormat_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: can't parse argument number: 
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<>();
        list.{0}('Hello');
        System.out.println(list);
    }

	at java.base/java.text.MessageFormat.makeFormat(MessageFormat.java:1454)
	at java.base/java.text.MessageFormat.applyPattern(MessageFormat.java:492)
	at java.base/java.text.MessageFormat.<init>(MessageFormat.java:371)
	at java.base/java.text.MessageFormat.format(MessageFormat.java:860)
	at MessageFormat_1.main(MessageFormat_1.java:7)
Caused by: java.lang.NumberFormatException: For input string: "
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<>();
        list.{0}('Hello');
        System.out.println(list);
    }
"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:654)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at java.base/java.text.MessageFormat.makeFormat(MessageFormat.java:1452)
	at java.base/java.text.MessageFormat.applyPattern(MessageFormat.java:492)
	at java.base/java.text.MessageFormat.<init>(MessageFormat.java:371)
	at java.base/java.text.MessageFormat.format(MessageFormat.java:860)
	at MessageFormat_1.main(MessageFormat_1.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: MessageFormat_3
----------------------------------------------------------------
stdout:


================================================================

Sample: NumberFormat_1
----------------------------------------------------------------
stdout:
123,456.789

================================================================

Sample: NumberFormat_2
----------------------------------------------------------------
stdout:
1,234,567,890

================================================================

Sample: NumberFormat_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/NumberFormat_5.java:1: error: class, interface, enum, or record expected
NumberFormat usCurrency = NumberFormat.getCurrencyInstance(Locale.US);
^
./Data/java_text/javaFiles/NumberFormat_5.java:2: error: class, interface, enum, or record expected
String usFormattedNumber = usCurrency.format(number);
^
./Data/java_text/javaFiles/NumberFormat_5.java:3: error: class, interface, enum, or record expected
System.out.println(usFormattedNumber);
^
3 errors


================================================================

Sample: ParsePosition_1
----------------------------------------------------------------
stdout:
Sun Mar 01 00:00:00 CST 2020
-1

================================================================

Sample: ParsePosition_2
----------------------------------------------------------------
stdout:
Error index: 5

================================================================

Sample: ParsePosition_3
----------------------------------------------------------------
stdout:
Index: 5

================================================================

Sample: ParsePosition_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/ParsePosition_4.java:7: error: cannot find symbol
        parsePosition.parse(s);
                     ^
  symbol:   method parse(String)
  location: variable parsePosition of type ParsePosition
1 error


================================================================

Sample: RuleBasedCollator_1
----------------------------------------------------------------
stdout:
1

================================================================

Sample: RuleBasedCollator_3
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/RuleBasedCollator_3.java:7: error: cannot find symbol
            RuleBasedCollator collator = (RuleBasedCollator) Collator.getInstance(java.util.Locale.US);
                                                             ^
  symbol:   variable Collator
  location: class RuleBasedCollator_3
./Data/java_text/javaFiles/RuleBasedCollator_3.java:8: error: cannot find symbol
            collator.setRules("[à=a, á=a, ã=a]");
                    ^
  symbol:   method setRules(String)
  location: variable collator of type RuleBasedCollator
2 errors


================================================================

Sample: StringCharacterIterator_1
----------------------------------------------------------------
stdout:
The first character is: H

================================================================

Sample: StringCharacterIterator_2
----------------------------------------------------------------
stdout:
The last character is: !

================================================================

Sample: StringCharacterIterator_3
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/StringCharacterIterator_3.java:8: error: cannot find symbol
        for (char c = iterator.first(); c!= CharacterIterator.DONE; c = iterator.next()) {
                                            ^
  symbol:   variable CharacterIterator
  location: class StringCharacterIterator_3
1 error


================================================================

Sample: StringCharacterIterator_4
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/StringCharacterIterator_4.java:7: error: cannot find symbol
        for (char c = iterator.first(); c!= CharacterIterator.DONE; c = iterator.next()) {
                                            ^
  symbol:   variable CharacterIterator
  location: class StringCharacterIterator_4
1 error


================================================================

Sample: StringCharacterIterator_5
----------------------------------------------------------------
timeout: process took too long
================================================================

