Sample: Boolean_1
----------------------------------------------------------------
stdout:
true

stderr:
./Data/java_lang/javaFiles/Boolean_1.java:3: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean bool1 = new Boolean(true);
                        ^
./Data/java_lang/javaFiles/Boolean_1.java:4: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean bool2 = new Boolean(true);
                        ^
2 warnings

================================================================

Sample: Boolean_2
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Boolean_2.java:1: error: class MyBoolean is public, should be declared in a file named MyBoolean.java
public class MyBoolean extends Boolean {
       ^
./Data/java_lang/javaFiles/Boolean_2.java:1: error: cannot inherit from final Boolean
public class MyBoolean extends Boolean {
                               ^
./Data/java_lang/javaFiles/Boolean_2.java:3: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        super(value);
        ^
2 errors
1 warning


================================================================

Sample: Boolean_3
----------------------------------------------------------------
stdout:
true
false

stderr:
./Data/java_lang/javaFiles/Boolean_3.java:5: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        Boolean bool = new Boolean(true);
                       ^
./Data/java_lang/javaFiles/Boolean_3.java:8: warning: [removal] Boolean(boolean) in Boolean has been deprecated and marked for removal
        bool = new Boolean(false);
               ^
2 warnings

================================================================

Sample: Boolean_4
----------------------------------------------------------------
stdout:
true
false
false

================================================================

Sample: Boolean_5
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Byte_1
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Byte_2
----------------------------------------------------------------
stdout:
5

================================================================

Sample: Character_1
----------------------------------------------------------------
stdout:
Is A a letter? true

================================================================

Sample: Character_2
----------------------------------------------------------------
stdout:
Is '5' a digit? true

================================================================

Sample: Character_3
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Character_3.java:5: error: empty character literal
        char ch ='';
                 ^
1 error


================================================================

Sample: Character_4
----------------------------------------------------------------
stdout:
Is 'A' an uppercase letter? true

================================================================

Sample: Character_5
----------------------------------------------------------------
stdout:
Is 'a' a lowercase letter? true

================================================================

Sample: Class_1
----------------------------------------------------------------
stdout:
Class_1

================================================================

Sample: Class_3
----------------------------------------------------------------
stdout:
[Hello]
add
add
add
remove
remove
get
equals
hashCode
clone
indexOf
clear
lastIndexOf
isEmpty
replaceAll
size
subList
toArray
toArray
iterator
contains
spliterator
addAll
addAll
set
readObject
writeObject
forEach
ensureCapacity
trimToSize
elementData
grow
grow
indexOfRange
lastIndexOfRange
rangeCheckForAdd
fastRemove
equalsArrayList
equalsRange
checkForComodification
hashCodeRange
outOfBoundsMsg
outOfBoundsMsg
shiftTailOverGap
batchRemove
elementAt
removeIf
removeIf
nBits
setBit
isClear
replaceAllRange
sort
removeRange
removeAll
retainAll
listIterator
listIterator
checkInvariants

================================================================

Sample: Class_4
----------------------------------------------------------------
stdout:
com.sun.tools.javac.launcher.Main$MemoryClassLoader@43738a82

================================================================

Sample: Class_5
----------------------------------------------------------------
stdout:
public java.util.ArrayList(java.util.Collection)
public java.util.ArrayList()
public java.util.ArrayList(int)

================================================================

Sample: ClassLoader_1
----------------------------------------------------------------
stdout:
[Hello]

stderr:
Note: ./Data/java_lang/javaFiles/ClassLoader_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: ClassLoader_2
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/ClassLoader_2.java:7: error: method findClass in class ClassLoader cannot be applied to given types;
            Class<?> clazz = classLoader.findClass("java.util.ArrayList");
                                        ^
  required: String
  found:    String
  reason: findClass(String) has protected access in ClassLoader
Note: ./Data/java_lang/javaFiles/ClassLoader_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ClassLoader_3
----------------------------------------------------------------
stdout:
Resource found: /home/yixi/comp4522/DeepseekCoder/Pipeline/Temp0/example.txt

================================================================

Sample: ClassLoader_4
----------------------------------------------------------------
stderr:
java.lang.NullPointerException: Cannot invoke "java.io.InputStream.read()" because "<local2>" is null
	at ClassLoader_4.main(ClassLoader_4.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ClassLoader_6
----------------------------------------------------------------
stdout:
[Hello]

stderr:
Note: ./Data/java_lang/javaFiles/ClassLoader_6.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: ClassLoader_7
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/ClassLoader_7.java:7: error: method findClass in class ClassLoader cannot be applied to given types;
            Class<?> clazz = classLoader.findClass("java.util.ArrayList");
                                        ^
  required: String
  found:    String
  reason: findClass(String) has protected access in ClassLoader
Note: ./Data/java_lang/javaFiles/ClassLoader_7.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ClassLoader_8
----------------------------------------------------------------
stdout:
Resource found: /home/yixi/comp4522/DeepseekCoder/Pipeline/Temp0/example.txt

================================================================

Sample: ClassLoader_9
----------------------------------------------------------------
stderr:
java.lang.NullPointerException: Cannot invoke "java.io.InputStream.read()" because "<local2>" is null
	at ClassLoader_9.main(ClassLoader_9.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ClassLoader_11
----------------------------------------------------------------
stdout:
[Hello]

stderr:
Note: ./Data/java_lang/javaFiles/ClassLoader_11.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: ClassLoader_12
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/ClassLoader_12.java:7: error: method findClass in class ClassLoader cannot be applied to given types;
            Class<?> clazz = classLoader.findClass("java.util.ArrayList");
                                        ^
  required: String
  found:    String
  reason: findClass(String) has protected access in ClassLoader
Note: ./Data/java_lang/javaFiles/ClassLoader_12.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ClassLoader_13
----------------------------------------------------------------
stdout:
Resource found: /home/yixi/comp4522/DeepseekCoder/Pipeline/Temp0/example.txt

================================================================

Sample: ClassLoader_14
----------------------------------------------------------------
stderr:
java.lang.NullPointerException: Cannot invoke "java.io.InputStream.read()" because "<local2>" is null
	at ClassLoader_14.main(ClassLoader_14.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Compiler_1
----------------------------------------------------------------
stdout:
Compilation successful: false
Length of 'Hello': 5

stderr:
./Data/java_lang/javaFiles/Compiler_1.java:9: warning: [removal] Compiler in java.lang has been deprecated and marked for removal
            boolean result = Compiler.compileClass(cls);
                             ^
1 warning

================================================================

Sample: Double_1
----------------------------------------------------------------
stdout:
123.45

================================================================

Sample: Double_2
----------------------------------------------------------------
stdout:
The maximum value is: 20.5

================================================================

Sample: Double_3
----------------------------------------------------------------
stdout:
The minimum value is: 5.5

================================================================

Sample: Double_4
----------------------------------------------------------------
stdout:
The sum of 5.5 and 7.7 is 13.2

================================================================

Sample: Float_1
----------------------------------------------------------------
stdout:
3.14

================================================================

Sample: Float_4
----------------------------------------------------------------
stdout:
The minimum value is: 1.2

================================================================

Sample: Integer_1
----------------------------------------------------------------
stdout:
5 is less than 10

================================================================

Sample: Integer_2
----------------------------------------------------------------
stdout:
3

================================================================

Sample: Integer_3
----------------------------------------------------------------
stdout:
The remainder of 10 divided by 3 is 1

================================================================

Sample: Integer_4
----------------------------------------------------------------
stdout:
The sum of 5 and 10 is 15

================================================================

Sample: Integer_5
----------------------------------------------------------------
stdout:
123

================================================================

Sample: Long_1
----------------------------------------------------------------
stdout:
1234567890

================================================================

Sample: Long_2
----------------------------------------------------------------
stdout:
2913375898

================================================================

Sample: Long_3
----------------------------------------------------------------
stdout:
1234567890

================================================================

Sample: Long_4
----------------------------------------------------------------
stdout:
-1

================================================================

Sample: Long_5
----------------------------------------------------------------
stdout:
The maximum value is: 20

================================================================

Sample: Math_1
----------------------------------------------------------------
stdout:
The absolute value of -10.5 is 10.5

================================================================

Sample: Math_2
----------------------------------------------------------------
stdout:
6.0

================================================================

Sample: Math_3
----------------------------------------------------------------
stdout:
2.0

================================================================

Sample: Math_4
----------------------------------------------------------------
stdout:
2.0 raised to the power of 3.0 is: 8.0

================================================================

Sample: Math_5
----------------------------------------------------------------
stdout:
The square root of 16.0 is 4.0

================================================================

Sample: Number_1
----------------------------------------------------------------
stdout:
127

================================================================

Sample: Number_2
----------------------------------------------------------------
stdout:
123.456

stderr:
./Data/java_lang/javaFiles/Number_2.java:5: warning: [removal] Double(double) in Double has been deprecated and marked for removal
        Number num = new Double(123.456);
                     ^
1 warning

================================================================

Sample: Number_4
----------------------------------------------------------------
stdout:
123

stderr:
./Data/java_lang/javaFiles/Number_4.java:5: warning: [removal] Integer(int) in Integer has been deprecated and marked for removal
        Integer num = new Integer(123);
                      ^
1 warning

================================================================

Sample: Number_5
----------------------------------------------------------------
stdout:
9223372036854775807

stderr:
./Data/java_lang/javaFiles/Number_5.java:5: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        Number num = new Long(9223372036854775807L);
                     ^
1 warning

================================================================

Sample: Package_1
----------------------------------------------------------------
stdout:
Package Name: java.util
Specification Version: null
Implementation Version: null

stderr:
Note: ./Data/java_lang/javaFiles/Package_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Package_2
----------------------------------------------------------------
stdout:
java.lang.reflect
sun.net.www
jdk.internal.ref
java.lang
sun.net.www.protocol.jrt
java.util.concurrent
java.nio.file.attribute
java.nio.file.spi
java.util.jar
sun.security.util
java.util.stream
jdk.internal.loader
jdk.internal.jrtfs
jdk.internal.access
java.nio.channels.spi
jdk.internal.reflect
jdk.internal.jimage
sun.util.locale
jdk.internal.misc
jdk.internal.vm.vector
jdk.internal.module
java.util.zip
sun.nio.fs
sun.invoke.util
java.util.regex
jdk.internal.jimage.decompressor
java.lang.constant
jdk.internal.util
java.lang.module
java.security.cert
java.util.function
jdk.internal.invoke
java.net
java.security
jdk.internal.math
sun.net.util
java.util.concurrent.atomic
java.nio.charset
sun.net.www.protocol.file
sun.launcher
sun.invoke.empty
sun.reflect.annotation
java.util.concurrent.locks
java.lang.annotation
java.lang.ref
java.util
java.nio.channels
sun.nio.cs
java.nio.charset.spi
java.io
java.nio.file
sun.nio.ch
sun.security.action
java.nio
java.lang.invoke
jdk.internal.org.objectweb.asm
javax.annotation.processing
javax.lang.model.util
javax.tools
javax.lang.model
javax.lang.model.type
jdk.nio.zipfs
javax.lang.model.element
com.sun.tools.javac.tree
com.sun.tools.javac.launcher
com.sun.tools.javac.main
com.sun.tools.javac.parser
com.sun.tools.javac.platform
com.sun.tools.javac.processing
com.sun.tools.javac.file
com.sun.tools.javac.api
com.sun.source.util
com.sun.source.tree
com.sun.tools.javac.jvm
com.sun.tools.doclint
com.sun.tools.javac.model
com.sun.tools.javac.comp
com.sun.tools.javac.code
com.sun.tools.javac.resources
jdk.javadoc.internal.doclint
com.sun.tools.javac.util
com.sun.source.doctree


================================================================

Sample: Package_3
----------------------------------------------------------------
stdout:
Package name: 

================================================================

Sample: Package_4
----------------------------------------------------------------
stdout:
Java Specification Version: null

stderr:
Note: ./Data/java_lang/javaFiles/Package_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Package_5
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/Package_5.java:7: error: incompatible types: Object cannot be converted to Package
        Package pkg = f.get(Package_5.class);
                           ^
1 error


================================================================

Sample: Process_1
----------------------------------------------------------------
stdout:
Exit value: 0

================================================================

Sample: Process_2
----------------------------------------------------------------
stderr:
java.io.IOException: Cannot run program "notepad.exe": error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1143)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at Process_2.main(Process_2.java:6)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:314)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:244)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1110)
	... 9 more

================================================================

Sample: Process_3
----------------------------------------------------------------
stdout:
Hello, World!

Exit code: 0

================================================================

Sample: Process_4
----------------------------------------------------------------
stdout:
Process exited with code 0

================================================================

Sample: Process_5
----------------------------------------------------------------
stderr:
java.io.IOException: Cannot run program "notepad.exe": error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1143)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at Process_5.main(Process_5.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:314)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:244)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1110)
	... 9 more

================================================================

Sample: ProcessBuilder_5
----------------------------------------------------------------
stderr:
java.io.IOException: Cannot run program "echo": input.txt (No such file or directory)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1143)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at ProcessBuilder_5.main(ProcessBuilder_5.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)
Caused by: java.io.FileNotFoundException: input.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:208)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1110)
	... 9 more

================================================================

Sample: ProcessBuilder_6
----------------------------------------------------------------
stdout:
Process exited with code 0

================================================================

Sample: ProcessBuilder_7
----------------------------------------------------------------
stdout:
Exited with 0

================================================================

Sample: ProcessBuilder_12
----------------------------------------------------------------
stdout:

Exited with error code : 0

================================================================

Sample: ProcessBuilder_13
----------------------------------------------------------------
stdout:

Exited with error code : 0

================================================================

Sample: ProcessBuilder_14
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1094)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at ProcessBuilder_14.main(ProcessBuilder_14.java:10)

================================================================

Sample: ProcessBuilder_16
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1094)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1073)
	at ProcessBuilder_16.main(ProcessBuilder_16.java:9)

================================================================

Sample: Runtime_1
----------------------------------------------------------------
stdout:
Total memory: 1358954496

================================================================

Sample: Runtime_2
----------------------------------------------------------------
stdout:
Free memory: 1321452256 bytes

================================================================

Sample: Runtime_3
----------------------------------------------------------------
stdout:
Available processors: 20

================================================================

Sample: Runtime_4
----------------------------------------------------------------
stdout:
Max Memory: 21005074432

================================================================

Sample: Runtime_5
----------------------------------------------------------------
stdout:
Process exit value: 0

================================================================

Sample: Short_1
----------------------------------------------------------------
stdout:
30000

================================================================

Sample: Short_2
----------------------------------------------------------------
stdout:
12345

================================================================

Sample: Short_3
----------------------------------------------------------------
stdout:
123

================================================================

Sample: StackTraceElement_2
----------------------------------------------------------------
stdout:
main

================================================================

Sample: StackTraceElement_3
----------------------------------------------------------------
stdout:
Class Name: java.lang.Thread
Method Name: getStackTrace
FileName: Thread.java
Line Number: 1619
Class Name: StackTraceElement_3
Method Name: main
FileName: StackTraceElement_3.java
Line Number: 5
Class Name: jdk.internal.reflect.NativeMethodAccessorImpl
Method Name: invoke0
FileName: NativeMethodAccessorImpl.java
Line Number: -2
Class Name: jdk.internal.reflect.NativeMethodAccessorImpl
Method Name: invoke
FileName: NativeMethodAccessorImpl.java
Line Number: 77
Class Name: jdk.internal.reflect.DelegatingMethodAccessorImpl
Method Name: invoke
FileName: DelegatingMethodAccessorImpl.java
Line Number: 43
Class Name: java.lang.reflect.Method
Method Name: invoke
FileName: Method.java
Line Number: 568
Class Name: com.sun.tools.javac.launcher.Main
Method Name: execute
FileName: Main.java
Line Number: 419
Class Name: com.sun.tools.javac.launcher.Main
Method Name: run
FileName: Main.java
Line Number: 192
Class Name: com.sun.tools.javac.launcher.Main
Method Name: main
FileName: Main.java
Line Number: 132

================================================================

Sample: StackTraceElement_4
----------------------------------------------------------------
stdout:
StackTraceElement_4.main(StackTraceElement_4.java:10)

================================================================

Sample: StackTraceElement_5
----------------------------------------------------------------
stdout:
getStackTrace is not a native method.
main is not a native method.
invoke0 is a native method.
invoke is not a native method.
invoke is not a native method.
invoke is not a native method.
execute is not a native method.
run is not a native method.
main is not a native method.

================================================================

Sample: StrictMath_1
----------------------------------------------------------------
stdout:
13.0

================================================================

Sample: StrictMath_2
----------------------------------------------------------------
stdout:
10.0

================================================================

Sample: StrictMath_4
----------------------------------------------------------------
stdout:
0.834032445247956

================================================================

Sample: StrictMath_5
----------------------------------------------------------------
stdout:
8.0

================================================================

Sample: String_1
----------------------------------------------------------------
stdout:
The length of the string is: 11

================================================================

Sample: String_2
----------------------------------------------------------------
stdout:
Character at index 4 is: o

================================================================

Sample: String_3
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: String_4
----------------------------------------------------------------
stdout:
hello world

================================================================

Sample: String_5
----------------------------------------------------------------
stdout:
HELLO WORLD!

================================================================

Sample: StringBuffer_2
----------------------------------------------------------------
stdout:
Initial Capacity: 16
Final Capacity: 16

================================================================

Sample: StringBuffer_3
----------------------------------------------------------------
stdout:
HWorldello

================================================================

Sample: StringBuffer_4
----------------------------------------------------------------
stdout:
Hello Java

================================================================

Sample: StringBuffer_5
----------------------------------------------------------------
stdout:
Before: Hello
After: Hello

================================================================

Sample: StringBuilder_1
----------------------------------------------------------------
stdout:
The length of the StringBuilder is: 13

================================================================

Sample: StringBuilder_2
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringBuilder_3
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: StringBuilder_4
----------------------------------------------------------------
stdout:
Hello Everyone

================================================================

Sample: StringBuilder_5
----------------------------------------------------------------
stdout:
Hello 

================================================================

Sample: System_1
----------------------------------------------------------------
stdout:
Current time in milliseconds since Epoch: 1713048715580

================================================================

Sample: System_2
----------------------------------------------------------------
stdout:
1
2
3
4
5

================================================================

Sample: System_3
----------------------------------------------------------------
stdout:
Memory before: 234881024
Memory after: 234881024
Memory after gc: 167772160

================================================================

Sample: System_4
----------------------------------------------------------------
stdout:
Java Version: 17.0.10

================================================================

Sample: System_5
----------------------------------------------------------------
stdout:
Before exit

================================================================

Sample: Thread_1
----------------------------------------------------------------
stdout:
Thread is running

================================================================

Sample: Thread_2
----------------------------------------------------------------
stdout:
This is a thread running

================================================================

Sample: Thread_3
----------------------------------------------------------------
stdout:
0
1
2
3
4

stderr:
Note: ./Data/java_lang/javaFiles/Thread_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Thread_4
----------------------------------------------------------------
stdout:
Starting the program
Ending the program

================================================================

Sample: Thread_5
----------------------------------------------------------------
stdout:
0
1
2
3
4
Thread has finished executing.

================================================================

Sample: ThreadGroup_2
----------------------------------------------------------------
output:
./Data/java_lang/javaFiles/ThreadGroup_2.java:13: error: cannot find symbol
        group.setUncaughtExceptionHandler(handler);
             ^
  symbol:   method setUncaughtExceptionHandler(UncaughtExceptionHandler)
  location: variable group of type ThreadGroup
1 error


================================================================

Sample: ThreadGroup_3
----------------------------------------------------------------
================================================================

Sample: ThreadGroup_4
----------------------------------------------------------------
stdout:
Is the thread a daemon? false

================================================================

Sample: ThreadGroup_5
----------------------------------------------------------------
stdout:
Is the thread a daemon? true

================================================================

Sample: ThreadLocal_1
----------------------------------------------------------------
stdout:
Hello World

================================================================

Sample: ThreadLocal_2
----------------------------------------------------------------
stdout:
Hello World

================================================================

Sample: ThreadLocal_3
----------------------------------------------------------------
stdout:
Hello
null

================================================================

Sample: Throwable_2
----------------------------------------------------------------
stdout:
java.lang.Throwable: This is a test

================================================================

Sample: Throwable_3
----------------------------------------------------------------
stderr:
java.lang.Exception: This is an exception
	at Throwable_3.throwException(Throwable_3.java:14)
	at Throwable_3.main(Throwable_3.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Throwable_4
----------------------------------------------------------------
stdout:
No cause

================================================================

Sample: Throwable_5
----------------------------------------------------------------
stdout:
Throwable_5.throwException(Throwable_5.java:17)
Throwable_5.main(Throwable_5.java:7)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:568)
jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

