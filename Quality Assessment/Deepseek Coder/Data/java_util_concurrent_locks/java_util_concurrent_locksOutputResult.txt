Sample: LockSupport_1
----------------------------------------------------------------
stdout:
Thread is running
LockSupport_1 thread is unparking the thread
Thread is resumed

================================================================

Sample: LockSupport_2
----------------------------------------------------------------
stdout:
Before parkNanos
After parkNanos

================================================================

Sample: LockSupport_3
----------------------------------------------------------------
stdout:
Parking thread for 5 seconds
Unparking thread
Thread unparked

================================================================

Sample: LockSupport_4
----------------------------------------------------------------
stdout:
Before unpark
After unpark

================================================================

Sample: ReentrantLock_1
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: ReentrantLock_2
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: ReentrantLock_3
----------------------------------------------------------------
stdout:
Lock acquired

================================================================

Sample: ReentrantLock_4
----------------------------------------------------------------
================================================================

Sample: ReentrantLock_5
----------------------------------------------------------------
================================================================

Sample: ReentrantReadWriteLock_3
----------------------------------------------------------------
stdout:
Is write locked? false

================================================================

Sample: ReentrantReadWriteLock_5
----------------------------------------------------------------
stdout:
Initial read lock count: 0
Read lock count after acquiring read lock: 1
Read lock count after releasing read lock: 0

================================================================

Sample: ReentrantReadWriteLock_ReadLock_1
----------------------------------------------------------------
stdout:
Reading operation...

================================================================

Sample: ReentrantReadWriteLock_ReadLock_2
----------------------------------------------------------------
stdout:
Is the lock acquired? true

================================================================

Sample: ReentrantReadWriteLock_ReadLock_3
----------------------------------------------------------------
stdout:
Lock acquired? true
Lock acquired with timeout? true

================================================================

Sample: ReentrantReadWriteLock_ReadLock_4
----------------------------------------------------------------
stdout:
Reading...

================================================================

Sample: ReentrantReadWriteLock_ReadLock_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.UnsupportedOperationException
	at java.base/java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.newCondition(ReentrantReadWriteLock.java:907)
	at ReentrantReadWriteLock_ReadLock_5.main(ReentrantReadWriteLock_ReadLock_5.java:10)

================================================================

Sample: ReentrantReadWriteLock_WriteLock_1
----------------------------------------------------------------
================================================================

Sample: ReentrantReadWriteLock_WriteLock_2
----------------------------------------------------------------
stdout:
Performing write operation...

================================================================

Sample: ReentrantReadWriteLock_WriteLock_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalMonitorStateException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1516)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1611)
	at ReentrantReadWriteLock_WriteLock_3.main(ReentrantReadWriteLock_WriteLock_3.java:15)

================================================================

Sample: ReentrantReadWriteLock_WriteLock_4
----------------------------------------------------------------
stdout:
Lock acquired: true

================================================================

Sample: ReentrantReadWriteLock_WriteLock_5
----------------------------------------------------------------
stdout:
Lock acquired? true
Lock acquired with timeout? true

================================================================

Sample: ReentrantReadWriteLock_WriteLock_6
----------------------------------------------------------------
================================================================

Sample: ReentrantReadWriteLock_WriteLock_7
----------------------------------------------------------------
stdout:
Performing write operation...

================================================================

Sample: ReentrantReadWriteLock_WriteLock_8
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalMonitorStateException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1516)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1611)
	at ReentrantReadWriteLock_WriteLock_8.main(ReentrantReadWriteLock_WriteLock_8.java:15)

================================================================

Sample: ReentrantReadWriteLock_WriteLock_9
----------------------------------------------------------------
stdout:
Lock acquired: true

================================================================

Sample: ReentrantReadWriteLock_WriteLock_10
----------------------------------------------------------------
stdout:
Lock acquired? true
Lock acquired with timeout? true

================================================================

Sample: ReentrantReadWriteLock_WriteLock_11
----------------------------------------------------------------
================================================================

Sample: ReentrantReadWriteLock_WriteLock_12
----------------------------------------------------------------
stdout:
Performing write operation...

================================================================

Sample: ReentrantReadWriteLock_WriteLock_13
----------------------------------------------------------------
stdout:
Lock acquired: true

================================================================

Sample: ReentrantReadWriteLock_WriteLock_14
----------------------------------------------------------------
stdout:
Lock acquired? true
Lock acquired with timeout? true

================================================================

Sample: ReentrantReadWriteLock_WriteLock_15
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalMonitorStateException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1516)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1611)
	at ReentrantReadWriteLock_WriteLock_15.main(ReentrantReadWriteLock_WriteLock_15.java:15)

================================================================

Sample: StampedLock_1
----------------------------------------------------------------
================================================================

Sample: StampedLock_3
----------------------------------------------------------------
stdout:
Stamp: 256

================================================================

Sample: StampedLock_4
----------------------------------------------------------------
stdout:
Stamp is valid: true

================================================================

Sample: StampedLock_5
----------------------------------------------------------------
================================================================

Sample: StampedLock_9
----------------------------------------------------------------
================================================================

Sample: StampedLock_10
----------------------------------------------------------------
================================================================

