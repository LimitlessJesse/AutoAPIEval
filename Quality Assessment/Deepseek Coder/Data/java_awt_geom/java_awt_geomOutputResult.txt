Sample: AffineTransform_1
----------------------------------------------------------------
stdout:
Original AffineTransform: AffineTransform[[1.0, 0.0, 10.0], [0.0, 1.0, 10.0]]
Translated AffineTransform: AffineTransform[[1.0, 0.0, 15.0], [0.0, 1.0, 15.0]]

================================================================

Sample: AffineTransform_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/AffineTransform_2.java:5: error: cannot find symbol
        AffineTransform at = AffineTransform.getScale(2.0, 3.0);
                                            ^
  symbol:   method getScale(double,double)
  location: class AffineTransform
1 error


================================================================

Sample: AffineTransform_3
----------------------------------------------------------------
stdout:
AffineTransform[[-1.0, -0.0, 0.0], [0.0, -1.0, 0.0]]

================================================================

Sample: AffineTransform_4
----------------------------------------------------------------
stdout:
AffineTransform[[0.119566813464192, -0.571319831873827, 3.44380834268741], [1.111622137741966, 0.961037798272088, -0.303848887220212]]

================================================================

Sample: Arc2D_1
----------------------------------------------------------------
stdout:
false

================================================================

Sample: Arc2D_2
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Arc2D_Double_1
----------------------------------------------------------------
stdout:
The x-coordinate of the arc is: 10.0

================================================================

Sample: Arc2D_Double_2
----------------------------------------------------------------
stdout:
The y-coordinate of the arc's frame is: 0.0

================================================================

Sample: Arc2D_Double_3
----------------------------------------------------------------
stdout:
Width of the arc: 100.0

================================================================

Sample: Arc2D_Double_4
----------------------------------------------------------------
stdout:
Height of the arc: 100.0

================================================================

Sample: Area_1
----------------------------------------------------------------
stdout:
true

================================================================

Sample: Area_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Area_2.java:14: error: incompatible types: Rectangle2D cannot be converted to Area
        area.add(rect);
                 ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: Area_3
----------------------------------------------------------------
stdout:
The rectangles intersect

================================================================

Sample: Area_5
----------------------------------------------------------------
stdout:
Do the areas intersect? true

================================================================

Sample: CubicCurve2D_1
----------------------------------------------------------------
stdout:
java.awt.geom.CubicCurve2D$Float@150c158

================================================================

Sample: CubicCurve2D_12
----------------------------------------------------------------
stdout:
The point (15, 5) is contained in the curve.

================================================================

Sample: CubicCurve2D_13
----------------------------------------------------------------
stdout:
Does the rectangle intersect with the curve? false

================================================================

Sample: CubicCurve2D_14
----------------------------------------------------------------
stdout:
java.awt.geom.CubicIterator@4cf4d528

================================================================

Sample: CubicCurve2D_15
----------------------------------------------------------------
stdout:
java.awt.geom.FlatteningPathIterator@5c18298f

================================================================

Sample: CubicCurve2D_20
----------------------------------------------------------------
stdout:
false

================================================================

Sample: CubicCurve2D_Double_1
----------------------------------------------------------------
stdout:
The x-coordinate of the first control point is: 3.0

================================================================

Sample: CubicCurve2D_Double_2
----------------------------------------------------------------
stdout:
The y-coordinate of the second control point is: 4.0

================================================================

Sample: CubicCurve2D_Double_3
----------------------------------------------------------------
stdout:
The x-coordinate of the second control point is: 5.0

================================================================

Sample: CubicCurve2D_Double_4
----------------------------------------------------------------
stdout:
The y-coordinate of the second control point is: 3.0

================================================================

Sample: CubicCurve2D_Double_9
----------------------------------------------------------------
stdout:
java.awt.geom.CubicCurve2D$Double@1786f9d5

================================================================

Sample: CubicCurve2D_Double_17
----------------------------------------------------------------
stdout:
X: 10.0
Y: 10.0
Width: 30.0
Height: 30.0

================================================================

Sample: CubicCurve2D_Float_7
----------------------------------------------------------------
stdout:
java.awt.geom.CubicCurve2D$Float@3578436e

================================================================

Sample: Dimension2D_1
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_1.java:6: error: incompatible types: Double cannot be converted to Dimension2D
        Dimension2D dimension = new Rectangle2D.Double(10, 20, 30, 40);
                                ^
1 error


================================================================

Sample: Dimension2D_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_2.java:6: error: incompatible types: Double cannot be converted to Dimension2D
        Dimension2D dimension = new Rectangle2D.Double(10, 20, 30, 40);
                                ^
1 error


================================================================

Sample: Dimension2D_3
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_3.java:6: error: incompatible types: Double cannot be converted to Dimension2D
        Dimension2D dimension = new Rectangle2D.Double();
                                ^
1 error


================================================================

Sample: Dimension2D_4
----------------------------------------------------------------
stdout:
Rectangle: java.awt.geom.Rectangle2D$Double[x=0.0,y=0.0,w=100.0,h=200.0]

================================================================

Sample: Ellipse2D_Double_1
----------------------------------------------------------------
stdout:
The x-coordinate of the center of the ellipse is: 1.0

================================================================

Sample: Ellipse2D_Double_2
----------------------------------------------------------------
stdout:
The y-coordinate of the center of the ellipse is: 2.0

================================================================

Sample: Ellipse2D_Double_3
----------------------------------------------------------------
stdout:
The width of the ellipse is: 50.0

================================================================

Sample: Ellipse2D_Double_4
----------------------------------------------------------------
stdout:
The height of the ellipse is: 20.0

================================================================

Sample: Ellipse2D_Double_5
----------------------------------------------------------------
stdout:
X: 10.0, Y: 10.0
Width: 50.0, Height: 50.0

================================================================

Sample: Ellipse2D_Float_5
----------------------------------------------------------------
stdout:
X: 10.0, Y: 10.0
Width: 50.0, Height: 50.0

================================================================

Sample: FlatteningPathIterator_1
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_1.java:10: error: no suitable constructor found for FlatteningPathIterator(PathIterator)
        FlatteningPathIterator iterator = new FlatteningPathIterator(path.getPathIterator(null));
                                          ^
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double) is not applicable
      (actual and formal argument lists differ in length)
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: FlatteningPathIterator_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_2.java:13: error: no suitable constructor found for FlatteningPathIterator(PathIterator)
        FlatteningPathIterator iterator = new FlatteningPathIterator(path.getPathIterator(null));
                                          ^
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double) is not applicable
      (actual and formal argument lists differ in length)
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: FlatteningPathIterator_3
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_3.java:16: error: no suitable constructor found for FlatteningPathIterator(PathIterator)
        FlatteningPathIterator iterator = new FlatteningPathIterator(path.getPathIterator(null));
                                          ^
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double) is not applicable
      (actual and formal argument lists differ in length)
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: FlatteningPathIterator_4
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_4.java:16: error: no suitable constructor found for FlatteningPathIterator(PathIterator)
        FlatteningPathIterator iterator = new FlatteningPathIterator(path.getPathIterator(null));
                                          ^
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double) is not applicable
      (actual and formal argument lists differ in length)
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: FlatteningPathIterator_5
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_5.java:14: error: no suitable constructor found for FlatteningPathIterator(PathIterator)
        FlatteningPathIterator flatteningIterator = new FlatteningPathIterator(iterator);
                                                    ^
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double) is not applicable
      (actual and formal argument lists differ in length)
    constructor FlatteningPathIterator.FlatteningPathIterator(PathIterator,double,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: Line2D_1
----------------------------------------------------------------
stdout:
The x-coordinate of the first point is: 1.0

================================================================

Sample: Line2D_2
----------------------------------------------------------------
stdout:
The y-coordinate of the first point is: 2.0

================================================================

Sample: Line2D_3
----------------------------------------------------------------
stdout:
The x-coordinate of the second endpoint is: 3.0

================================================================

Sample: Line2D_4
----------------------------------------------------------------
stdout:
4.0

================================================================

Sample: Line2D_5
----------------------------------------------------------------
stdout:
Line: java.awt.geom.Line2D$Double@df27fae

================================================================

Sample: Line2D_Double_1
----------------------------------------------------------------
stdout:
The x-coordinate of the first point is: 1.0

================================================================

Sample: Line2D_Double_2
----------------------------------------------------------------
stdout:
The y-coordinate of the first point of the line is: 2.0

================================================================

Sample: Line2D_Double_3
----------------------------------------------------------------
stdout:
3.0

================================================================

Sample: Line2D_Double_4
----------------------------------------------------------------
stdout:
4.0

================================================================

Sample: Line2D_Double_5
----------------------------------------------------------------
stdout:
Line: (1.0, 2.0), (3.0, 4.0)

================================================================

Sample: Line2D_Float_6
----------------------------------------------------------------
stdout:
Line: (10.0, 20.0), (30.0, 40.0)

================================================================

Sample: Path2D_2
----------------------------------------------------------------
stdout:
Path: java.awt.geom.Path2D$Double@4c762604

================================================================

Sample: Path2D_3
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@10dba097

================================================================

Sample: Path2D_4
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@704d6e83

================================================================

Sample: Path2D_5
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@4524411f

================================================================

Sample: Path2D_6
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Float@2eda0940

================================================================

Sample: Path2D_7
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_7.java:6: error: no suitable method found for append(double[],int[],int)
        path.append(new double[]{0, 0, 10, 10}, new int[]{Path2D.WIND_EVEN_ODD, 0, 1, 1}, 4);
            ^
    method Path2D.append(float,float) is not applicable
      (actual and formal argument lists differ in length)
    method Path2D.append(double,double) is not applicable
      (actual and formal argument lists differ in length)
    method Path2D.append(Shape,boolean) is not applicable
      (actual and formal argument lists differ in length)
    method Path2D.append(PathIterator,boolean) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: Path2D_8
----------------------------------------------------------------
stdout:
X: 10.0, Y: 10.0
Width: 50.0, Height: 50.0

================================================================

Sample: Path2D_11
----------------------------------------------------------------
stdout:
Original Path: java.awt.geom.Path2D$Float@7a36aefa
After reset: java.awt.geom.Path2D$Float@7a36aefa

================================================================

Sample: Path2D_13
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_13.java:6: error: package Rectangle2D does not exist
        path.append(new Rectangle2D.Double(10, 10, 50, 50), false);
                                   ^
1 error


================================================================

Sample: Path2D_14
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_14.java:13: error: cannot find symbol
        path.add(rect);
            ^
  symbol:   method add(Rectangle2D)
  location: variable path of type Path2D
1 error


================================================================

Sample: Path2D_17
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_17.java:6: error: package Rectangle2D does not exist
        path.append(new Rectangle2D.Double(10, 10, 50, 50), false);
                                   ^
1 error


================================================================

Sample: Path2D_18
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_18.java:7: error: cannot find symbol
        path.add(new Rectangle2D.Float(10, 10, 50, 50));
            ^
  symbol:   method add(Float)
  location: variable path of type Path2D
1 error


================================================================

Sample: Path2D_Double_2
----------------------------------------------------------------
stdout:
Path: java.awt.geom.Path2D$Double@df27fae

================================================================

Sample: Path2D_Double_3
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@3578436e

================================================================

Sample: Path2D_Double_9
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_Double_9.java:11: error: cannot find symbol
        path.addRect(10, 10, 50, 50);
            ^
  symbol:   method addRect(int,int,int,int)
  location: variable path of type Double
./Data/java_awt_geom/javaFiles/Path2D_Double_9.java:24: error: reference to currentSegment is ambiguous
            int type = pi.currentSegment(null);
                         ^
  both method currentSegment(float[]) in PathIterator and method currentSegment(double[]) in PathIterator match
2 errors


================================================================

Sample: Path2D_Float_2
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Float@150c158

================================================================

Sample: Path2D_Float_3
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Float@5c072e3f

================================================================

Sample: Path2D_Float_4
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Float@6eceb130

================================================================

Sample: Path2D_Float_5
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Float@67b467e9

================================================================

Sample: Path2D_Float_8
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Path2D_Float_8.java:11: error: cannot find symbol
        path.addRect(0, 0, 100, 100);
            ^
  symbol:   method addRect(int,int,int,int)
  location: variable path of type Float
./Data/java_awt_geom/javaFiles/Path2D_Float_8.java:24: error: reference to currentSegment is ambiguous
            int type = pi.currentSegment(null);
                         ^
  both method currentSegment(float[]) in PathIterator and method currentSegment(double[]) in PathIterator match
2 errors


================================================================

Sample: Path2D_Float_10
----------------------------------------------------------------
stdout:
X: 10.0, Y: 10.0
Width: 20.0, Height: 20.0

================================================================

Sample: Point2D_1
----------------------------------------------------------------
stdout:
The x-coordinate is: 5.0

================================================================

Sample: Point2D_2
----------------------------------------------------------------
stdout:
Y coordinate: 4.0

================================================================

Sample: Point2D_3
----------------------------------------------------------------
stdout:
X: 5.0, Y: 10.0

================================================================

Sample: Point2D_4
----------------------------------------------------------------
stdout:
X: 5.0, Y: 10.0

================================================================

Sample: Point2D_5
----------------------------------------------------------------
stdout:
The distance between the two points is: 5.0

================================================================

Sample: Point2D_Double_1
----------------------------------------------------------------
stdout:
The x-coordinate of the point is: 3.0

================================================================

Sample: Point2D_Double_2
----------------------------------------------------------------
stdout:
Y coordinate of the point is: 4.0

================================================================

Sample: Point2D_Double_3
----------------------------------------------------------------
stdout:
X: 5.0, Y: 10.0

================================================================

Sample: Point2D_Float_1
----------------------------------------------------------------
stdout:
X: 5.5, Y: 10.1

================================================================

Sample: QuadCurve2D_1
----------------------------------------------------------------
stdout:
java.awt.geom.QuadCurve2D$Double@544a2ea6

================================================================

Sample: QuadCurve2D_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/QuadCurve2D_2.java:7: error: cannot find symbol
        System.out.println(q.getCtrlX1());
                            ^
  symbol:   method getCtrlX1()
  location: variable q of type QuadCurve2D
1 error


================================================================

Sample: QuadCurve2D_3
----------------------------------------------------------------
stdout:
The y-coordinate of the control point is: 0.0

================================================================

Sample: QuadCurve2D_4
----------------------------------------------------------------
stdout:
3.0

================================================================

Sample: QuadCurve2D_5
----------------------------------------------------------------
stdout:
4.0

================================================================

Sample: QuadCurve2D_6
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/QuadCurve2D_6.java:7: error: cannot find symbol
        System.out.println(q.getCtrlX2());
                            ^
  symbol:   method getCtrlX2()
  location: variable q of type QuadCurve2D
1 error


================================================================

Sample: QuadCurve2D_7
----------------------------------------------------------------
stdout:
0.0

================================================================

Sample: QuadCurve2D_Double_1
----------------------------------------------------------------
stdout:
Curve: java.awt.geom.QuadCurve2D$Double@5c18298f

================================================================

Sample: QuadCurve2D_Double_2
----------------------------------------------------------------
stdout:
The x-coordinate of the control point is: 3.0

================================================================

Sample: QuadCurve2D_Double_3
----------------------------------------------------------------
stdout:
The y-coordinate of the control point is: 4.0

================================================================

Sample: QuadCurve2D_Double_12
----------------------------------------------------------------
stdout:
X: 1.0
Y: 2.0
Width: 4.0
Height: 4.0

================================================================

Sample: QuadCurve2D_Float_1
----------------------------------------------------------------
stdout:
QuadCurve2D: java.awt.geom.QuadCurve2D$Float@5579bb86

================================================================

Sample: Rectangle2D_5
----------------------------------------------------------------
stdout:
X: 10.0
Y: 20.0
Width: 30.0
Height: 40.0

================================================================

Sample: Rectangle2D_Double_1
----------------------------------------------------------------
stdout:
Width: 30.0

================================================================

Sample: Rectangle2D_Double_2
----------------------------------------------------------------
stdout:
Height of the rectangle: 40.0

================================================================

Sample: RectangularShape_4
----------------------------------------------------------------
stdout:
Do the two rectangles intersect? true

================================================================

Sample: RoundRectangle2D_1
----------------------------------------------------------------
stdout:
java.awt.geom.RoundRectangle2D$Float@2ec20000

================================================================

Sample: RoundRectangle2D_2
----------------------------------------------------------------
stdout:
true

================================================================

Sample: RoundRectangle2D_3
----------------------------------------------------------------
stdout:
Do the two rectangles intersect? true

================================================================

Sample: RoundRectangle2D_5
----------------------------------------------------------------
stdout:
Does the rectangle contain the point (20, 20)? true

================================================================

Sample: RoundRectangle2D_Double_1
----------------------------------------------------------------
stdout:
Height: 50.0

================================================================

Sample: RoundRectangle2D_Double_2
----------------------------------------------------------------
stdout:
Width: 50.0

================================================================

Sample: RoundRectangle2D_Double_3
----------------------------------------------------------------
stdout:
The x-coordinate of the upper-left corner of the round rectangle is: 10.0

================================================================

Sample: RoundRectangle2D_Double_4
----------------------------------------------------------------
stdout:
The y-coordinate of the RoundRectangle2D is: 20.0

================================================================

Sample: RoundRectangle2D_Float_1
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/RoundRectangle2D_Float_1.java:11: error: cannot find symbol
        System.out.println("Arc Width: " + roundRect.arcWidth);
                                                    ^
  symbol:   variable arcWidth
  location: variable roundRect of type Float
./Data/java_awt_geom/javaFiles/RoundRectangle2D_Float_1.java:12: error: cannot find symbol
        System.out.println("Arc Height: " + roundRect.arcHeight);
                                                     ^
  symbol:   variable arcHeight
  location: variable roundRect of type Float
2 errors


================================================================

