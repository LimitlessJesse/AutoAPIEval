Sample: Charset_2
----------------------------------------------------------------
stdout:
sun.nio.cs.UTF_8$Encoder@78ac1102

================================================================

Sample: Charset_3
----------------------------------------------------------------
stdout:
sun.nio.cs.UTF_8$Decoder@78ac1102

================================================================

Sample: Charset_4
----------------------------------------------------------------
stdout:
Is UTF-8 available? true

================================================================

Sample: Charset_5
----------------------------------------------------------------
stdout:
UTF-8

================================================================

Sample: CharsetDecoder_1
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: CharsetDecoder_2
----------------------------------------------------------------
output:
./Data/java_nio_charset/javaFiles/CharsetDecoder_2.java:11: error: cannot find symbol
        decoder.decode(byteBuffer, charBuffer, new CoderResult.CompletionHandler() {
                                                              ^
  symbol:   class CompletionHandler
  location: class CoderResult
./Data/java_nio_charset/javaFiles/CharsetDecoder_2.java:12: error: method does not override or implement a method from a supertype
            @Override
            ^
./Data/java_nio_charset/javaFiles/CharsetDecoder_2.java:24: error: method does not override or implement a method from a supertype
            @Override
            ^
./Data/java_nio_charset/javaFiles/CharsetDecoder_2.java:29: error: method does not override or implement a method from a supertype
            @Override
            ^
4 errors


================================================================

Sample: CharsetEncoder_1
----------------------------------------------------------------
stdout:
Can encode "Hello, World!": true

================================================================

Sample: CharsetEncoder_2
----------------------------------------------------------------
stdout:
true

================================================================

Sample: CoderResult_1
----------------------------------------------------------------
output:
./Data/java_nio_charset/javaFiles/CoderResult_1.java:6: error: cannot find symbol
        CoderResult result = encoder.encode(CharBuffer.wrap("Hello"));
                                            ^
  symbol:   variable CharBuffer
  location: class CoderResult_1
1 error


================================================================

Sample: CoderResult_2
----------------------------------------------------------------
output:
./Data/java_nio_charset/javaFiles/CoderResult_2.java:6: error: cannot find symbol
        CoderResult result = encoder.encode(CharBuffer.wrap("Hello"));
                                            ^
  symbol:   variable CharBuffer
  location: class CoderResult_2
1 error


================================================================

Sample: CoderResult_3
----------------------------------------------------------------
output:
./Data/java_nio_charset/javaFiles/CoderResult_3.java:6: error: cannot find symbol
        CoderResult result = encoder.encode(CharBuffer.wrap("Hello"));
                                            ^
  symbol:   variable CharBuffer
  location: class CoderResult_3
1 error


================================================================

Sample: CoderResult_4
----------------------------------------------------------------
output:
./Data/java_nio_charset/javaFiles/CoderResult_4.java:6: error: cannot find symbol
        CharBuffer buffer = CharBuffer.wrap("Hello");
        ^
  symbol:   class CharBuffer
  location: class CoderResult_4
./Data/java_nio_charset/javaFiles/CoderResult_4.java:6: error: cannot find symbol
        CharBuffer buffer = CharBuffer.wrap("Hello");
                            ^
  symbol:   variable CharBuffer
  location: class CoderResult_4
2 errors


================================================================

