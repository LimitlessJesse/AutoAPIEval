Sample: SerialBlob_1
----------------------------------------------------------------
stdout:
Length of the Blob: 13

================================================================

Sample: SerialBlob_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_2.java:28: error: exception ClassNotFoundException is never thrown in body of corresponding try statement
        } catch (SQLException | ClassNotFoundException e) {
                                ^
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_2.java:22: error: unreported exception IOException; must be caught or declared to be thrown
            while ((data = inputStream.read())!= -1) {
                                           ^
2 errors


================================================================

Sample: SerialBlob_3
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_3.java:30: error: exception ClassNotFoundException is never thrown in body of corresponding try statement
        } catch (SQLException | ClassNotFoundException e) {
                                ^
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_3.java:21: error: unreported exception IOException; must be caught or declared to be thrown
            outputStream.write(6);
                              ^
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_3.java:22: error: unreported exception IOException; must be caught or declared to be thrown
            outputStream.write(7);
                              ^
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_3.java:25: error: unreported exception IOException; must be caught or declared to be thrown
            outputStream.close();
                              ^
4 errors


================================================================

Sample: SerialBlob_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SerialBlob_4.java:9: error: no suitable constructor found for SerialBlob(String)
            Blob blob = new SerialBlob("Hello, World!");
                        ^
    constructor SerialBlob.SerialBlob(byte[]) is not applicable
      (argument mismatch; String cannot be converted to byte[])
    constructor SerialBlob.SerialBlob(Blob) is not applicable
      (argument mismatch; String cannot be converted to Blob)
1 error


================================================================

Sample: SerialBlob_5
----------------------------------------------------------------
stdout:
Blob data: Hello, World!
Error: Error: You cannot call a method on a SerialBlob instance once free() has been called.

================================================================

Sample: SQLInputImpl_1
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_1.java:9: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
            SQLInputImpl sqlInput = new SQLInputImpl();
                                    ^
  required: Object[],Map<String,Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_1.java:15: error: cannot find symbol
            sqlInput.setInput(bis);
                    ^
  symbol:   method setInput(ByteArrayInputStream)
  location: variable sqlInput of type SQLInputImpl
2 errors


================================================================

Sample: SQLInputImpl_2
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_2.java:9: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
            SQLInputImpl sqlInput = new SQLInputImpl();
                                    ^
  required: Object[],Map<String,Class<?>>
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_2.java:15: error: cannot find symbol
            sqlInput.setInput(bis);
                    ^
  symbol:   method setInput(ByteArrayInputStream)
  location: variable sqlInput of type SQLInputImpl
2 errors


================================================================

Sample: SQLInputImpl_4
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_4.java:8: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl(stringReader);
                                ^
  required: Object[],Map<String,Class<?>>
  found:    StringReader
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLInputImpl_5
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_5.java:9: error: constructor SQLInputImpl in class SQLInputImpl cannot be applied to given types;
        SQLInputImpl sqlInput = new SQLInputImpl(stringReader);
                                ^
  required: Object[],Map<String,Class<?>>
  found:    StringReader
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: SQLInputImpl_12
----------------------------------------------------------------
output:
./Data/javax_sql_rowset_serial/javaFiles/SQLInputImpl_12.java:8: error: no suitable constructor found for ByteArrayInputStream(no arguments)
            SQLInputImpl input = new SQLInputImpl(new ByteArrayInputStream());
                                                  ^
    constructor ByteArrayInputStream.ByteArrayInputStream(byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor ByteArrayInputStream.ByteArrayInputStream(byte[],int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

