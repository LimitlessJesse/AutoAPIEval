Sample: Adler32_4
----------------------------------------------------------------
stdout:
Checksum: 530449514

================================================================

Sample: Adler32_5
----------------------------------------------------------------
stdout:
Checksum: 530449514
Checksum after reset: 1

================================================================

Sample: CheckedInputStream_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at CheckedInputStream_1.main(CheckedInputStream_1.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CheckedInputStream_3
----------------------------------------------------------------
stdout:
Checksum: 530449514

================================================================

Sample: CheckedOutputStream_1
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/CheckedOutputStream_1.java:13: error: <anonymous CheckedOutputStream_1$1> is not abstract and does not override abstract method update(byte[],int,int) in Checksum
            Checksum checksum = new Checksum() {
                                               ^
1 error


================================================================

Sample: CheckedOutputStream_3
----------------------------------------------------------------
================================================================

Sample: CRC32_1
----------------------------------------------------------------
stdout:
366298937

================================================================

Sample: CRC32_2
----------------------------------------------------------------
stdout:
Checksum: 3964322768

================================================================

Sample: CRC32_3
----------------------------------------------------------------
stdout:
CRC value after update: 3964322768
CRC value after reset: 0

================================================================

Sample: CRC32_4
----------------------------------------------------------------
stdout:
CRC32 Checksum: 3964322768

================================================================

Sample: Deflater_3
----------------------------------------------------------------
================================================================

Sample: Deflater_4
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Deflater_4.java:14: error: cannot find symbol
        } while (result!= Z_FINISH);
                          ^
  symbol:   variable Z_FINISH
  location: class Deflater_4
1 error


================================================================

Sample: Deflater_5
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Deflater_5.java:17: error: cannot find symbol
        int remaining = deflater.getRemaining();
                                ^
  symbol:   method getRemaining()
  location: variable deflater of type Deflater
1 error


================================================================

Sample: Deflater_6
----------------------------------------------------------------
stdout:
Compressed data length: 13

================================================================

Sample: Deflater_7
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Deflater_7.java:7: error: cannot find symbol
        System.out.println("Compression level: " + deflater.getLevel());
                                                           ^
  symbol:   method getLevel()
  location: variable deflater of type Deflater
1 error


================================================================

Sample: Deflater_8
----------------------------------------------------------------
stdout:
needsInput: true

================================================================

Sample: Deflater_10
----------------------------------------------------------------
================================================================

Sample: Deflater_11
----------------------------------------------------------------
================================================================

Sample: Deflater_12
----------------------------------------------------------------
================================================================

Sample: Deflater_14
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Deflater_14.java:9: error: variable output might not have been initialized
        byte[] output = new byte[deflater.deflate(output)];
                                                  ^
1 error


================================================================

Sample: Deflater_15
----------------------------------------------------------------
stdout:
Total output bytes: 21

================================================================

Sample: Deflater_17
----------------------------------------------------------------
stdout:
Adler-32 checksum: 1

================================================================

Sample: Deflater_21
----------------------------------------------------------------
================================================================

Sample: Deflater_22
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Deflater_22.java:14: error: cannot find symbol
        } while (result!= Z_FINISH);
                          ^
  symbol:   variable Z_FINISH
  location: class Deflater_22
1 error


================================================================

Sample: Deflater_25
----------------------------------------------------------------
================================================================

Sample: Deflater_26
----------------------------------------------------------------
================================================================

Sample: Deflater_27
----------------------------------------------------------------
stdout:
needsInput: true

================================================================

Sample: Deflater_29
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Deflater_29.java:7: error: cannot find symbol
        System.out.println("Compression level: " + deflater.getLevel());
                                                           ^
  symbol:   method getLevel()
  location: variable deflater of type Deflater
1 error


================================================================

Sample: Deflater_30
----------------------------------------------------------------
================================================================

Sample: DeflaterInputStream_1
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/DeflaterInputStream_1.java:25: error: cannot find symbol
        DeflaterInputStream dis = new DeflaterInputStream(new ByteArrayInputStream(compressedData));
                                                              ^
  symbol:   class ByteArrayInputStream
  location: class DeflaterInputStream_1
1 error


================================================================

Sample: DeflaterInputStream_2
----------------------------------------------------------------
stdout:
xóHÍÉÉ×QÏ/ÊIQ j
================================================================

Sample: DeflaterInputStream_3
----------------------------------------------------------------
stdout:
Number of bytes available: 1

================================================================

Sample: DeflaterInputStream_4
----------------------------------------------------------------
stdout:
DeflaterInputStream closed successfully.

================================================================

Sample: DeflaterOutputStream_4
----------------------------------------------------------------
stdout:
x��H����Q�/�IQ �j

================================================================

Sample: DeflaterOutputStream_6
----------------------------------------------------------------
stdout:
x��H����Q�/�IQ �j

================================================================

Sample: DeflaterOutputStream_7
----------------------------------------------------------------
stdout:
x��H����Q�/�IQ �j

================================================================

Sample: DeflaterOutputStream_8
----------------------------------------------------------------
stdout:
Original data: Hello, World!
Compressed data: x��H����Q�/�IQ �j

================================================================

Sample: DeflaterOutputStream_9
----------------------------------------------------------------
stdout:
x��H����Q�/�IQ �j

================================================================

Sample: GZIPInputStream_3
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/GZIPInputStream_3.java:16: error: incompatible types: ByteArrayOutputStream cannot be converted to InputStream
             GZIPInputStream gis = new GZIPInputStream(bos)) {
                                                       ^
./Data/java_util_zip/javaFiles/GZIPInputStream_3.java:18: error: cannot find symbol
            gis.write(data);
               ^
  symbol:   method write(byte[])
  location: variable gis of type GZIPInputStream
./Data/java_util_zip/javaFiles/GZIPInputStream_3.java:29: error: cannot find symbol
        try (GZIPInputStream gis = new GZIPInputStream(new ByteArrayInputStream(compressedData))) {
                                                           ^
  symbol:   class ByteArrayInputStream
  location: class GZIPInputStream_3
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
3 errors


================================================================

Sample: GZIPInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.gz (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at GZIPInputStream_4.main(GZIPInputStream_4.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: GZIPOutputStream_4
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/GZIPOutputStream_4.java:20: error: no suitable method found for write(byte[],int,int,byte[],int,int)
            gzipOS.write(compressedData, 0, compressedData.length, decompressedData, 0, decompressedData.length);
                  ^
    method FilterOutputStream.write(byte[]) is not applicable
      (actual and formal argument lists differ in length)
    method DeflaterOutputStream.write(int) is not applicable
      (actual and formal argument lists differ in length)
    method GZIPOutputStream.write(byte[],int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: GZIPOutputStream_5
----------------------------------------------------------------
================================================================

Sample: Inflater_1
----------------------------------------------------------------
stderr:
java.util.zip.DataFormatException: incorrect header check
	at java.base/java.util.zip.Inflater.inflateBytesBytes(Native Method)
	at java.base/java.util.zip.Inflater.inflate(Inflater.java:378)
	at java.base/java.util.zip.Inflater.inflate(Inflater.java:464)
	at Inflater_1.main(Inflater_1.java:17)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Inflater_2
----------------------------------------------------------------
stdout:
java.util.zip.Inflater@727803de

================================================================

Sample: Inflater_3
----------------------------------------------------------------
stderr:
java.util.zip.DataFormatException: incorrect header check
	at java.base/java.util.zip.Inflater.inflateBytesBytes(Native Method)
	at java.base/java.util.zip.Inflater.inflate(Inflater.java:378)
	at java.base/java.util.zip.Inflater.inflate(Inflater.java:464)
	at Inflater_3.main(Inflater_3.java:19)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Inflater_4
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_4.java:12: error: unreported exception DataFormatException; must be caught or declared to be thrown
        int result = inflater.inflate(output, offset, length);
                                     ^
1 error


================================================================

Sample: Inflater_5
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_5.java:11: error: unreported exception DataFormatException; must be caught or declared to be thrown
        int outputLength = inflater.inflate(output);
                                           ^
1 error


================================================================

Sample: Inflater_6
----------------------------------------------------------------
stdout:
Needs input: true

================================================================

Sample: Inflater_7
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_7.java:2: error: cannot find symbol
import java.util.zip.InflaterDictionary;
                    ^
  symbol:   class InflaterDictionary
  location: package java.util.zip
./Data/java_util_zip/javaFiles/Inflater_7.java:7: error: cannot find symbol
        InflaterDictionary dictionary = new InflaterDictionary(new byte[1024]);
        ^
  symbol:   class InflaterDictionary
  location: class Inflater_7
./Data/java_util_zip/javaFiles/Inflater_7.java:7: error: cannot find symbol
        InflaterDictionary dictionary = new InflaterDictionary(new byte[1024]);
                                            ^
  symbol:   class InflaterDictionary
  location: class Inflater_7
3 errors


================================================================

Sample: Inflater_8
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_8.java:17: error: cannot find symbol
            for (int i = 0; i < inflater.getDictionary().length; i++) {
                                        ^
  symbol:   method getDictionary()
  location: variable inflater of type Inflater
./Data/java_util_zip/javaFiles/Inflater_8.java:18: error: cannot find symbol
                System.out.print(inflater.getDictionary()[i] + " ");
                                         ^
  symbol:   method getDictionary()
  location: variable inflater of type Inflater
2 errors


================================================================

Sample: Inflater_9
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_9.java:17: error: cannot find symbol
            for (int i = 0; i < inflater.getDictionary().length; i++) {
                                        ^
  symbol:   method getDictionary()
  location: variable inflater of type Inflater
./Data/java_util_zip/javaFiles/Inflater_9.java:18: error: cannot find symbol
                System.out.print(inflater.getDictionary()[i] + " ");
                                         ^
  symbol:   method getDictionary()
  location: variable inflater of type Inflater
2 errors


================================================================

Sample: Inflater_10
----------------------------------------------------------------
stdout:
Inflater finished: false

================================================================

Sample: Inflater_11
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_11.java:2: error: cannot find symbol
import java.util.zip.InflaterDictionary;
                    ^
  symbol:   class InflaterDictionary
  location: package java.util.zip
./Data/java_util_zip/javaFiles/Inflater_11.java:7: error: cannot find symbol
        InflaterDictionary dictionary = new InflaterDictionary(new byte[1024]);
        ^
  symbol:   class InflaterDictionary
  location: class Inflater_11
./Data/java_util_zip/javaFiles/Inflater_11.java:7: error: cannot find symbol
        InflaterDictionary dictionary = new InflaterDictionary(new byte[1024]);
                                            ^
  symbol:   class InflaterDictionary
  location: class Inflater_11
3 errors


================================================================

Sample: Inflater_12
----------------------------------------------------------------
stderr:
java.util.zip.DataFormatException: incorrect header check
	at java.base/java.util.zip.Inflater.inflateBytesBytes(Native Method)
	at java.base/java.util.zip.Inflater.inflate(Inflater.java:378)
	at java.base/java.util.zip.Inflater.inflate(Inflater.java:464)
	at Inflater_12.main(Inflater_12.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: Inflater_14
----------------------------------------------------------------
stdout:
Initial Adler-32 checksum: 1
Adler-32 checksum after input: 1

================================================================

Sample: Inflater_18
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_18.java:6: error: cannot find symbol
        int totalIn = inflaterInputStream.getTotalIn();
                                         ^
  symbol:   method getTotalIn()
  location: variable inflaterInputStream of type InflaterInputStream
1 error


================================================================

Sample: Inflater_19
----------------------------------------------------------------
stdout:
Total output: 0

================================================================

Sample: Inflater_23
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/Inflater_23.java:6: error: cannot find symbol
        int remaining = inflater.availableIn();
                                ^
  symbol:   method availableIn()
  location: variable inflater of type Inflater
1 error


================================================================

Sample: InflaterInputStream_1
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/InflaterInputStream_1.java:14: error: cannot find symbol
        try (InflaterInputStream in = new InflaterInputStream(new ByteArrayInputStream(compressedData))) {
                                                                  ^
  symbol:   class ByteArrayInputStream
  location: class InflaterInputStream_1
1 error


================================================================

Sample: InflaterInputStream_2
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/InflaterInputStream_2.java:7: error: incompatible types: possible lossy conversion from int to byte
        byte[] data = { 0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4a, 0x4a, 0x01, 0x00, 0x2b, 0x2d, 0x00, 0x00, 0x00 };
                              ^
./Data/java_util_zip/javaFiles/InflaterInputStream_2.java:7: error: incompatible types: possible lossy conversion from int to byte
        byte[] data = { 0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4a, 0x4a, 0x01, 0x00, 0x2b, 0x2d, 0x00, 0x00, 0x00 };
                                                                              ^
2 errors


================================================================

Sample: InflaterInputStream_5
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/InflaterInputStream_5.java:11: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: InflaterOutputStream_2
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/InflaterOutputStream_2.java:8: error: incompatible types: possible lossy conversion from int to byte
        byte[] input = { 0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x00, 0x42, 0x43, 0x61, 0x52, 0x00, 0x03, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00 };
                               ^
./Data/java_util_zip/javaFiles/InflaterOutputStream_2.java:8: error: incompatible types: possible lossy conversion from int to byte
        byte[] input = { 0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x00, 0x42, 0x43, 0x61, 0x52, 0x00, 0x03, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00 };
                                                                               ^
2 errors


================================================================

Sample: InflaterOutputStream_3
----------------------------------------------------------------
stdout:


stderr:
java.util.zip.ZipException: invalid distance too far back
	at java.base/java.util.zip.InflaterOutputStream.write(InflaterOutputStream.java:267)
	at java.base/java.util.zip.InflaterOutputStream.write(InflaterOutputStream.java:204)
	at InflaterOutputStream_3.main(InflaterOutputStream_3.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: InflaterOutputStream_4
----------------------------------------------------------------
stdout:


================================================================

Sample: ZipEntry_2
----------------------------------------------------------------
stdout:
Name of the ZipEntry: test.txt

================================================================

Sample: ZipEntry_3
----------------------------------------------------------------
stdout:
100

================================================================

Sample: ZipEntry_4
----------------------------------------------------------------
stdout:
Size of the ZipEntry: 1024

================================================================

Sample: ZipEntry_5
----------------------------------------------------------------
stdout:
CRC: -1

================================================================

Sample: ZipEntry_6
----------------------------------------------------------------
stdout:
Is the entry a directory? true

================================================================

Sample: ZipEntry_7
----------------------------------------------------------------
stderr:
java.util.zip.ZipException: STORED entry missing size, compressed size, or crc-32
	at java.base/java.util.zip.ZipOutputStream.putNextEntry(ZipOutputStream.java:236)
	at ZipEntry_7.main(ZipEntry_7.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_8
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: file.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipEntry_8.main(ZipEntry_8.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_9
----------------------------------------------------------------
stdout:
Compressed size: 1024

================================================================

Sample: ZipEntry_10
----------------------------------------------------------------
stdout:
Compressed size of the ZipEntry: 1024

================================================================

Sample: ZipEntry_11
----------------------------------------------------------------
stdout:
CRC: 305419896

================================================================

Sample: ZipEntry_12
----------------------------------------------------------------
stdout:
Comment: This is a comment

================================================================

Sample: ZipEntry_13
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path_to_your_zip_file
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipEntry_13.main(ZipEntry_13.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_14
----------------------------------------------------------------
stdout:
1 2 3 4 5 
================================================================

Sample: ZipEntry_15
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path/to/your/zip/file.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipEntry_15.main(ZipEntry_15.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_24
----------------------------------------------------------------
stdout:
1 2 3 4 5 
================================================================

Sample: ZipEntry_25
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path/to/your/zip/file.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipEntry_25.main(ZipEntry_25.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_26
----------------------------------------------------------------
stderr:
java.util.zip.ZipException: STORED entry missing size, compressed size, or crc-32
	at java.base/java.util.zip.ZipOutputStream.putNextEntry(ZipOutputStream.java:236)
	at ZipEntry_26.main(ZipEntry_26.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_27
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: file.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipEntry_27.main(ZipEntry_27.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipEntry_28
----------------------------------------------------------------
stdout:
Compressed size of the ZipEntry: 1024

================================================================

Sample: ZipEntry_29
----------------------------------------------------------------
stdout:
Size of the ZipEntry: 1024

================================================================

Sample: ZipEntry_30
----------------------------------------------------------------
stdout:
CRC: 305419896

================================================================

Sample: ZipEntry_31
----------------------------------------------------------------
stdout:
CRC: -1

================================================================

Sample: ZipEntry_33
----------------------------------------------------------------
stdout:
Name of the ZipEntry: test.txt

================================================================

Sample: ZipEntry_34
----------------------------------------------------------------
stdout:
Comment: This is a comment

================================================================

Sample: ZipEntry_35
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path_to_your_zip_file
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipEntry_35.main(ZipEntry_35.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipFile_1
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path_to_your_zip_file
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:195)
	at ZipFile_1.main(ZipFile_1.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipFile_2
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path_to_your_zip_file
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipFile_2.main(ZipFile_2.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipFile_3
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path_to_your_zip_file
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:152)
	at ZipFile_3.main(ZipFile_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipFile_4
----------------------------------------------------------------
stderr:
java.nio.file.NoSuchFileException: path_to_your_zip_file
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:148)
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1851)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1428)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:718)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:252)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:181)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:195)
	at ZipFile_4.main(ZipFile_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipFile_5
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/ZipFile_5.java:10: error: unreported exception IOException; must be caught or declared to be thrown
            ZipFile zipFile = new ZipFile(file);
                              ^
./Data/java_util_zip/javaFiles/ZipFile_5.java:13: error: unreported exception IOException; must be caught or declared to be thrown
            zipFile.close();
                         ^
2 errors


================================================================

Sample: ZipInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: path_to_your_file.zip (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at ZipInputStream_3.main(ZipInputStream_3.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipInputStream_6
----------------------------------------------------------------
stdout:
Bytes available: 1

================================================================

Sample: ZipInputStream_7
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: path_to_your_zip_file (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at ZipInputStream_7.main(ZipInputStream_7.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ZipOutputStream_1
----------------------------------------------------------------
================================================================

Sample: ZipOutputStream_3
----------------------------------------------------------------
output:
./Data/java_util_zip/javaFiles/ZipOutputStream_3.java:11: error: 'void' type not allowed here
            zipOut.putNextEntry(zipOut.putNextEntry(new java.util.zip.ZipEntry("test.txt")));
                                                   ^
1 error


================================================================

Sample: ZipOutputStream_4
----------------------------------------------------------------
================================================================

Sample: ZipOutputStream_5
----------------------------------------------------------------
================================================================

