Sample Number,ClassName,Snippet Number,Method,Exist
0,AbstractLayoutCache,1,void clear(),False
0,AbstractLayoutCache,2,boolean containsKey(Object key),False
0,AbstractLayoutCache,3,Object get(Object key),False
0,AbstractLayoutCache,4,"Object put(Object key, Object value)",False
0,AbstractLayoutCache,5,Object remove(Object key),False
1,AbstractLayoutCache.NodeDimensions,1,int getX(),False
1,AbstractLayoutCache.NodeDimensions,2,int getY(),False
1,AbstractLayoutCache.NodeDimensions,3,int getWidth(),False
1,AbstractLayoutCache.NodeDimensions,4,int getHeight(),False
1,AbstractLayoutCache.NodeDimensions,5,"void setSize(int width, int height)",False
2,DefaultMutableTreeNode,1,boolean isLeaf(),True
2,DefaultMutableTreeNode,2,void setUserObject(Object o),True
2,DefaultMutableTreeNode,3,Object getUserObject(),True
2,DefaultMutableTreeNode,4,void setAllowsChildren(boolean allows),True
2,DefaultMutableTreeNode,5,boolean getAllowsChildren(),True
2,DefaultMutableTreeNode,6,void setParent(MutableTreeNode newParent),True
2,DefaultMutableTreeNode,7,MutableTreeNode getParent(),False
2,DefaultMutableTreeNode,8,"void insert(MutableTreeNode child, int index)",True
2,DefaultMutableTreeNode,9,void remove(int index),True
2,DefaultMutableTreeNode,10,void removeFromParent(),True
2,DefaultMutableTreeNode,11,MutableTreeNode getChild(int index),False
2,DefaultMutableTreeNode,12,int getChildCount(),True
2,DefaultMutableTreeNode,13,int getIndex(TreeNode node),True
2,DefaultMutableTreeNode,14,boolean getAllowsDrops(),False
2,DefaultMutableTreeNode,15,void setAllowsDrops(boolean allows),False
2,DefaultMutableTreeNode,16,boolean isDropTarget(),False
2,DefaultMutableTreeNode,17,void setDropTarget(boolean isTarget),False
2,DefaultMutableTreeNode,18,void addTreeSelectionListener(TreeSelectionListener l),False
2,DefaultMutableTreeNode,19,void removeTreeSelectionListener(TreeSelectionListener l),False
2,DefaultMutableTreeNode,20,TreeSelectionModel getSelectionModel(),False
2,DefaultMutableTreeNode,21,void setSelectionModel(TreeSelectionModel newModel),False
2,DefaultMutableTreeNode,22,void setModel(TreeModel newModel),False
2,DefaultMutableTreeNode,23,TreeModel getModel(),False
2,DefaultMutableTreeNode,24,void setModel(TreeModel newModel),False
2,DefaultMutableTreeNode,25,TreeModel getModel(),False
2,DefaultMutableTreeNode,26,void setModel(TreeModel newModel),False
2,DefaultMutableTreeNode,27,TreeModel getModel(),False
2,DefaultMutableTreeNode,28,void setModel(TreeModel newModel),False
2,DefaultMutableTreeNode,29,TreeModel getModel(),False
2,DefaultMutableTreeNode,30,void setModel(TreeModel newModel),False
2,DefaultMutableTreeNode,31,TreeModel getModel(),False
2,DefaultMutableTreeNode,32,void setModel(TreeModel newModel),False
2,DefaultMutableTreeNode,33,TreeModel getModel(),False
2,DefaultMutableTreeNode,34,void setModel(TreeModel newModel),False
3,DefaultTreeCellEditor,1,boolean isCellEditable(EventObject event),True
3,DefaultTreeCellEditor,2,"Component getTreeCellEditorComponent(JTree tree, Object value, boolean isSelected, boolean expanded, boolean leaf, int row)",True
3,DefaultTreeCellEditor,3,void cancelCellEditing(),True
3,DefaultTreeCellEditor,4,void removeCellEditorListener(CellEditorListener l),True
3,DefaultTreeCellEditor,5,void addCellEditorListener(CellEditorListener l),True
4,DefaultTreeCellRenderer,1,void setBackgroundNonSelectionColor(Color bgColor),True
4,DefaultTreeCellRenderer,2,void setBackgroundSelectionColor(Color bgColor),True
4,DefaultTreeCellRenderer,3,void setBorderSelectionColor(Color borderColor),True
4,DefaultTreeCellRenderer,4,void setForegroundNonSelectionColor(Color fgColor),False
4,DefaultTreeCellRenderer,5,void setForegroundSelectionColor(Color fgColor),False
4,DefaultTreeCellRenderer,6,void setLeafIcon(Icon icon),True
4,DefaultTreeCellRenderer,7,void setOpenIcon(Icon icon),True
4,DefaultTreeCellRenderer,8,void setClosedIcon(Icon icon),True
4,DefaultTreeCellRenderer,9,void setPreferredSize(Dimension preferredSize),False
4,DefaultTreeCellRenderer,10,"void setTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus)",False
4,DefaultTreeCellRenderer,11,void setFont(Font font),True
4,DefaultTreeCellRenderer,12,void setIconTextGap(int iconTextGap),False
4,DefaultTreeCellRenderer,13,void setVerticalTextPosition(int position),False
4,DefaultTreeCellRenderer,14,void setHorizontalTextPosition(int position),False
4,DefaultTreeCellRenderer,15,void setIconTextGap(int iconTextGap),False
4,DefaultTreeCellRenderer,16,void setVerticalTextPosition(int position),False
4,DefaultTreeCellRenderer,17,void setHorizontalTextPosition(int position),False
4,DefaultTreeCellRenderer,18,void setIconTextGap(int iconTextGap),False
4,DefaultTreeCellRenderer,19,void setVerticalTextPosition(int position),False
4,DefaultTreeCellRenderer,20,void setHorizontalTextPosition(int position),False
5,DefaultTreeModel,1,Object getRoot(),True
5,DefaultTreeModel,2,"Object getChild(Object parent, int index)",True
5,DefaultTreeModel,3,int getChildCount(Object node),True
5,DefaultTreeModel,4,boolean isLeaf(Object node),True
5,DefaultTreeModel,5,"void valueForPathChanged(TreePath path, Object newValue)",True
5,DefaultTreeModel,6,"int getIndexOfChild(Object parent, Object child)",True
5,DefaultTreeModel,7,void nodeStructureChanged(TreeModelEvent e),False
5,DefaultTreeModel,8,void nodesChanged(TreeModelEvent e),False
5,DefaultTreeModel,9,void nodesInserted(TreeModelEvent e),False
5,DefaultTreeModel,10,void nodesRemoved(TreeModelEvent e),False
5,DefaultTreeModel,11,void structureChanged(TreeModelEvent e),False
5,DefaultTreeModel,12,void addTreeModelListener(TreeModelListener l),True
5,DefaultTreeModel,13,void removeTreeModelListener(TreeModelListener l),True
5,DefaultTreeModel,14,"boolean insertNodeIntoParent(Object node, Object parent, int index)",False
5,DefaultTreeModel,15,boolean removeNodeFromParent(Object node),False
5,DefaultTreeModel,16,void setRoot(Object root),False
5,DefaultTreeModel,17,void nodeChanged(TreeModelEvent e),False
5,DefaultTreeModel,18,void nodesSwapped(TreeModelEvent e),False
5,DefaultTreeModel,19,void addTreeWillExpandListener(TreeWillExpandListener l),False
5,DefaultTreeModel,20,void removeTreeWillExpandListener(TreeWillExpandListener l),False
6,DefaultTreeSelectionModel,1,void setSelectionPath(TreePath path),True
6,DefaultTreeSelectionModel,2,TreePath getSelectionPath(),True
6,DefaultTreeSelectionModel,3,void setSelectionRow(int row),False
6,DefaultTreeSelectionModel,4,int getSelectionRow(),False
6,DefaultTreeSelectionModel,5,"void setSelectionInterval(int row1, int row2)",False
6,DefaultTreeSelectionModel,6,void addTreeSelectionListener(TreeSelectionListener l),True
6,DefaultTreeSelectionModel,7,void removeTreeSelectionListener(TreeSelectionListener l),True
6,DefaultTreeSelectionModel,8,void clearSelection(),True
6,DefaultTreeSelectionModel,9,boolean isPathSelected(TreePath path),True
6,DefaultTreeSelectionModel,10,boolean isSelectionEmpty(),True
6,DefaultTreeSelectionModel,11,void setSelectionRows(int[] rows),False
6,DefaultTreeSelectionModel,12,int[] getSelectionRows(),True
6,DefaultTreeSelectionModel,13,void setSelectionPaths(TreePath[] paths),True
6,DefaultTreeSelectionModel,14,TreePath[] getSelectionPaths(),True
6,DefaultTreeSelectionModel,15,void setSelectionModelListener(TreeSelectionModelListener l),False
6,DefaultTreeSelectionModel,16,TreeSelectionModelListener getSelectionModelListener(),False
6,DefaultTreeSelectionModel,17,void addTreeSelectionModelListener(TreeSelectionModelListener l),False
6,DefaultTreeSelectionModel,18,void removeTreeSelectionModelListener(TreeSelectionModelListener l),False
6,DefaultTreeSelectionModel,19,"void valueForPathChanged(TreePath path, Object newValue)",False
6,DefaultTreeSelectionModel,20,"void addPathToSelection(TreePath path, boolean expand)",False
6,DefaultTreeSelectionModel,21,"void removePathFromSelection(TreePath path, boolean collapse)",False
6,DefaultTreeSelectionModel,22,"void setSelection(TreePath[] paths, int[] indices)",False
6,DefaultTreeSelectionModel,23,"void setSelection(TreePath path, int childIndex, boolean expand)",False
6,DefaultTreeSelectionModel,24,"void setSelection(TreePath path, int[] childIndices, boolean expand)",False
6,DefaultTreeSelectionModel,25,"void setSelection(TreePath[] paths, int[] childIndices, boolean expand)",False
6,DefaultTreeSelectionModel,26,"void setSelection(TreePath path, boolean expand)",False
6,DefaultTreeSelectionModel,27,"void setSelection(TreePath[] paths, boolean expand)",False
6,DefaultTreeSelectionModel,28,void setSelection(int[] rows),False
6,DefaultTreeSelectionModel,29,void setSelection(int row),False
7,FixedHeightLayoutCache,1,int getHeight(),False
7,FixedHeightLayoutCache,2,int getWidth(),False
7,FixedHeightLayoutCache,3,int getRowForPath(TreePath path),True
7,FixedHeightLayoutCache,4,TreePath getPathForRow(int row),True
7,FixedHeightLayoutCache,5,int getColumnForPath(TreePath path),False
8,TreePath,1,int getPathCount(),True
8,TreePath,2,Object getPathComponent(int index),True
8,TreePath,3,int getLastPathComponentIndex(),False
8,TreePath,4,Object[] getPath(),True
8,TreePath,5,boolean isDescendant(TreePath parent),True
9,VariableHeightLayoutCache,1,void clear(),False
9,VariableHeightLayoutCache,2,boolean contains(Object o),False
9,VariableHeightLayoutCache,3,boolean isEmpty(),False
9,VariableHeightLayoutCache,4,int size(),False
9,VariableHeightLayoutCache,5,Object[] toArray(),False
