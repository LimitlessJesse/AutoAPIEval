Sample Number,ClassName,Snippet Number,Method,Exist
0,Certificate,1,String getType(),True
0,Certificate,2,byte[] getEncoded(),True
0,Certificate,3,String toString(),True
0,Certificate,4,Principal getIssuerDN(),False
0,Certificate,5,Date getNotBefore(),False
0,Certificate,6,Certificate generateCertificate(InputStream in),False
0,Certificate,7,Certificate generateCertificate(byte[] encoded),False
0,Certificate,8,Certificate[] generateCertificates(InputStream in),False
0,Certificate,9,Certificate[] generateCertificates(byte[] encoded),False
0,Certificate,10,CertificateFactory getInstance(String type),False
0,Certificate,11,String getSigAlgName(),False
0,Certificate,12,String getIssuerX500Principal(),False
0,Certificate,13,String getSubjectX500Principal(),False
0,Certificate,14,Date getNotBefore(),False
0,Certificate,15,Date getNotAfter(),False
1,Certificate.CertificateRep,1,getType(),False
1,Certificate.CertificateRep,2,getPublicKey(),False
1,Certificate.CertificateRep,3,getIssuerX500Principal(),False
1,Certificate.CertificateRep,4,getSerialNumber(),False
1,Certificate.CertificateRep,5,getNotBefore(),False
1,Certificate.CertificateRep,6,getNotAfter(),False
1,Certificate.CertificateRep,7,getVersion(),False
1,Certificate.CertificateRep,8,getSigAlgName(),False
1,Certificate.CertificateRep,9,getSignature(),False
1,Certificate.CertificateRep,10,getIssuerDN(),False
1,Certificate.CertificateRep,11,getSubjectDN(),False
1,Certificate.CertificateRep,12,getTBSCertificate(),False
1,Certificate.CertificateRep,13,getEncoded(),False
1,Certificate.CertificateRep,14,verify(PublicKey key),False
1,Certificate.CertificateRep,15,"verify(PublicKey key, String sigProvider)",False
1,Certificate.CertificateRep,16,getCriticalExtensionOIDs(),False
1,Certificate.CertificateRep,17,getNonCriticalExtensionOIDs(),False
1,Certificate.CertificateRep,18,getExtensionValue(String oid),False
1,Certificate.CertificateRep,19,getExtensions(),False
1,Certificate.CertificateRep,20,getEncoded(String encoding),False
2,CertificateFactory,1,CertificateFactory getInstance(String algorithm),True
2,CertificateFactory,2,X509Certificate generateCertificate(InputStream in),False
2,CertificateFactory,3,List<? extends Certificate> getCertificates(InputStream inStream),False
2,CertificateFactory,4,Certificate getCertificate(InputStream inStream),False
2,CertificateFactory,5,Certificate getCertificate(byte[] certBytes),False
3,CertificateFactorySpi,1,CertificateFactorySpi(),False
3,CertificateFactorySpi,2,Certificate generateCertificate(InputStream in),False
3,CertificateFactorySpi,3,Certificate[] generateCertificates(InputStream in),False
3,CertificateFactorySpi,4,void setCertPathChecker(CertPathChecker checker),False
3,CertificateFactorySpi,5,CertPathChecker getCertPathChecker(),False
4,CertPath,1,CertPath getCertPath(),False
4,CertPath,2,CertPath getParent(),False
4,CertPath,3,Iterator<Certificate> getCertificates(),False
4,CertPath,4,boolean equals(Object object),True
4,CertPath,5,int hashCode(),True
4,CertPath,6,String getType(),True
4,CertPath,7,byte[] getEncoded(),True
4,CertPath,8,String toString(),True
4,CertPath,9,boolean equals(Object object),True
4,CertPath,10,int hashCode(),True
4,CertPath,11,CertificateFactory getInstance(String algorithm),False
4,CertPath,12,X509Certificate generateCertificate(InputStream inStream),False
4,CertPath,13,X509Certificate generateCertificate(byte[] encoded),False
4,CertPath,14,Certificate getCertificate(InputStream inStream),False
4,CertPath,15,Certificate getCertificate(byte[] encoded),False
4,CertPath,16,String getSigAlgName(),False
5,CertPath.CertPathRep,1,int getVersion(),False
5,CertPath.CertPathRep,2,List<CertPathRep> getPathByType(String type),False
5,CertPath.CertPathRep,3,List<CertPathRep> getPathByIssuer(X500Name issuer),False
5,CertPath.CertPathRep,4,List<CertPathRep> getPathBySerialNumber(BigInteger serialNumber),False
5,CertPath.CertPathRep,5,List<CertPathRep> getPathBySubject(X500Name subject),False
6,CertPathBuilder,1,CertPathBuilderResult build(CertPathParameters params),True
6,CertPathBuilder,2,void getCertPathBuilderParameters(CertPathParameters params),False
6,CertPathBuilder,3,Set<String> getSupportedAlgorithms(),False
6,CertPathBuilder,4,CertPathBuilderResult build(CertPathParameters params) throws CertPathBuilderException,True
6,CertPathBuilder,5,"void setParameter(String parameter, Object value)",False
7,CertPathBuilderSpi,1,CertPathBuilderSpi(),False
7,CertPathBuilderSpi,2,Engine getEngine(),False
7,CertPathBuilderSpi,3,CertPathBuilderResult build(CertPathParameters params),False
7,CertPathBuilderSpi,4,"void initialize(CertPathParameters params, CertPathChecker checker)",False
7,CertPathBuilderSpi,5,"void setParameter(String name, Object value)",False
8,CertPathValidator,1,"void validate(CertPath certPath, CertPathParameters parameters) throws CertPathValidatorException",False
8,CertPathValidator,2,Set<String> getSupportedExtensions(),False
8,CertPathValidator,3,Set<String> getSupportedAlgorithms(),False
8,CertPathValidator,4,"CertPathValidatorResult validate(CertPath certPath, CertificateFactory certFactory, CertPathParameters parameters) throws CertPathValidatorException",False
8,CertPathValidator,5,CertPathChecker getRevocationChecker(),True
8,CertPathValidator,6,List<String> getSubjectNames(),False
8,CertPathValidator,7,List<String> getIssuerNames(),False
8,CertPathValidator,8,List<String> getSerialNumbers(),False
8,CertPathValidator,9,List<Date> getNotBeforeDates(),False
8,CertPathValidator,10,List<Date> getNotAfterDates(),False
8,CertPathValidator,11,String getType(),False
8,CertPathValidator,12,byte[] getEncoded() throws CertificateEncodingException,False
8,CertPathValidator,13,String toString(),False
8,CertPathValidator,14,Principal getIssuerDN(),False
8,CertPathValidator,15,Principal getSubjectDN(),False
9,CertPathValidatorSpi,1,protected void engineInit(CertPathValidatorParams params),False
9,CertPathValidatorSpi,2,protected CertPathChecker engineGetRevocationChecker(),False
9,CertPathValidatorSpi,3,"protected Collection<CertPathValidatorResult> engineValidate(CertPath certPath, CertPathParameters parameters) throws CertPathValidatorException",False
9,CertPathValidatorSpi,4,"protected void engineSetParameter(String param, Object value)",False
9,CertPathValidatorSpi,5,protected Object engineGetParameter(String param),False
10,CertStore,1,CertStoreParameters getParameters(),False
10,CertStore,2,Collection<Certificate> getCertificates(CertificateSelector selector),False
10,CertStore,3,"Collection<Collection<Certificate>> getCertificates(CertificateSelector selector, int maxCerts)",False
10,CertStore,4,"Collection<Collection<Certificate>> getCertificates(CertificateSelector selector, int maxCerts, int maxTotalCerts)",False
10,CertStore,5,Collection<Collection<CRL>> getCRLs(CRLSelector selector),False
11,CertStoreSpi,1,"CertStoreSpi(Provider provider, String type)",False
11,CertStoreSpi,2,Iterator<Certificate> getCertificates(AlgorithmParameterSpec params),False
11,CertStoreSpi,3,"void setParameter(String name, Object value)",False
11,CertStoreSpi,4,Collection<String> getSupportedIssuers(AlgorithmParameterSpec params),False
11,CertStoreSpi,5,Collection<String> getSupportedTypes(AlgorithmParameterSpec params),False
12,CollectionCertStoreParameters,1,boolean add(Certificate cert),False
12,CollectionCertStoreParameters,2,void clear(),False
12,CollectionCertStoreParameters,3,boolean contains(Object o),False
12,CollectionCertStoreParameters,4,boolean isEmpty(),False
12,CollectionCertStoreParameters,5,boolean remove(Object o),False
12,CollectionCertStoreParameters,6,Certificate generateCertificate(InputStream in),False
12,CollectionCertStoreParameters,7,Certificate[] generateCertificates(InputStream in),False
12,CollectionCertStoreParameters,8,Certificate getInstance(String type),False
12,CollectionCertStoreParameters,9,"CertificateFactory getInstance(String type, Provider provider)",False
12,CollectionCertStoreParameters,10,TrustAnchor engineGetTrustAnchor(InputStream in),False
12,CollectionCertStoreParameters,11,byte[] getEncoded(),False
12,CollectionCertStoreParameters,12,String getType(),False
12,CollectionCertStoreParameters,13,String toString(),True
12,CollectionCertStoreParameters,14,int hashCode(),False
12,CollectionCertStoreParameters,15,boolean equals(Object obj),False
13,CRL,1,getThisUpdate(),False
13,CRL,2,getNextUpdate(),False
13,CRL,3,getRevokedCertificates(),False
13,CRL,4,getVersion(),False
13,CRL,5,getSignatureAlgorithm(),False
14,LDAPCertStoreParameters,1,LDAPCertStoreParameters(),False
14,LDAPCertStoreParameters,2,setUrl(String url),False
14,LDAPCertStoreParameters,3,setVersion(int version),False
14,LDAPCertStoreParameters,4,setUseSSL(boolean useSSL),False
14,LDAPCertStoreParameters,5,setUseTLS(boolean useTLS),False
15,PKIXBuilderParameters,1,void addCertPath(CertificatePath certPath),False
15,PKIXBuilderParameters,2,void addTrustAnchor(TrustAnchor trustAnchor),False
15,PKIXBuilderParameters,3,void setInitialPolicies(List<PolicyNode> initialPolicies),False
15,PKIXBuilderParameters,4,void setMaxPathLength(int maxPathLength),True
15,PKIXBuilderParameters,5,void setMaxTrees(int maxTrees),False
15,PKIXBuilderParameters,6,void setTargetPolicy(PolicyNode targetPolicy),False
15,PKIXBuilderParameters,7,void setUnknownCriticalExtensionPolicy(PolicyNode unknownCriticalExtensionPolicy),False
15,PKIXBuilderParameters,8,void setUnresolvedCriticalExtensionPolicy(PolicyNode unresolvedCriticalExtensionPolicy),False
15,PKIXBuilderParameters,9,void setUnresolvedExtensionPolicy(PolicyNode unresolvedExtensionPolicy),False
15,PKIXBuilderParameters,10,void setValidate(boolean validate),False
15,PKIXBuilderParameters,11,void setRoots(List<TrustAnchor> roots),False
15,PKIXBuilderParameters,12,void setCertSelector(CertSelector certSelector),False
15,PKIXBuilderParameters,13,void setDate(Date date),False
15,PKIXBuilderParameters,14,void setKeyEncryptionSchemeParam(AlgorithmParameterSpec keyEncryptionSchemeParam),False
15,PKIXBuilderParameters,15,void setKeyUsage(int keyUsage),False
15,PKIXBuilderParameters,16,void setPathFilter(CertPathFilter pathFilter),False
15,PKIXBuilderParameters,17,void setRevocationEnabled(boolean revocationEnabled),False
15,PKIXBuilderParameters,18,void setRevocationFailOnUnknown(boolean revocationFailOnUnknown),False
15,PKIXBuilderParameters,19,void setSignatureRestriction(GeneralName signatureRestriction),False
15,PKIXBuilderParameters,20,void setSigAndIssuerRestriction(GeneralName sigAndIssuerRestriction),False
15,PKIXBuilderParameters,21,void setSigIssuerRestriction(GeneralName sigIssuerRestriction),False
15,PKIXBuilderParameters,22,void setSigTimeRestriction(GeneralName sigTimeRestriction),False
15,PKIXBuilderParameters,23,void setTarget(GeneralName target),False
15,PKIXBuilderParameters,24,void setTrustAnchorRefs(List<TrustAnchor> trustAnchorRefs),False
15,PKIXBuilderParameters,25,void setUnanchoredCriticalExtensionPolicy(PolicyNode unanchoredCriticalExtensionPolicy),False
15,PKIXBuilderParameters,26,void setUnanchoredExtensionPolicy(PolicyNode unanchoredExtensionPolicy),False
15,PKIXBuilderParameters,27,void setValidityRestriction(GeneralName validityRestriction),False
16,PKIXCertPathBuilderResult,1,List<PKIXCertPathValidatorResult> getResults(),False
16,PKIXCertPathBuilderResult,2,boolean hasUnresolvedCriticalExtension(),False
16,PKIXCertPathBuilderResult,3,boolean hasUnresolvedExtension(),False
16,PKIXCertPathBuilderResult,4,boolean isValid(),False
16,PKIXCertPathBuilderResult,5,Set<PolicyNode> getPolicyNodes(),False
17,PKIXCertPathChecker,1,void init(boolean forwardChecking),True
17,PKIXCertPathChecker,2,"void check(Certificate cert, Date date) throws CertificateException",False
17,PKIXCertPathChecker,3,"void check(Certificate cert, String authType) throws CertificateException",False
17,PKIXCertPathChecker,4,"void check(Certificate cert, PublicKey key) throws CertificateException",False
17,PKIXCertPathChecker,5,"void check(Certificate cert, String issuer, String oID) throws CertificateException",False
18,PKIXCertPathValidatorResult,1,List<PolicyNode> getPolicyNodes(),False
18,PKIXCertPathValidatorResult,2,boolean hasUnresolvedCriticalExtension(),False
18,PKIXCertPathValidatorResult,3,boolean hasUnresolvedExtension(),False
18,PKIXCertPathValidatorResult,4,boolean isValid(),False
18,PKIXCertPathValidatorResult,5,List<String> getInvalidCriticalExtensionOIDs(),False
19,PKIXParameters,1,void setRevocationEnabled(boolean revocationEnabled),True
19,PKIXParameters,2,void setTarget(Certificate target),False
19,PKIXParameters,3,void setDate(Date date),True
19,PKIXParameters,4,void setUnknownCriticalExtensionHandling(int unknownCriticalExtensionHandling),False
19,PKIXParameters,5,"void setRepository(String type, CertStoreParameters params)",False
19,PKIXParameters,6,String getType(),False
19,PKIXParameters,7,byte[] getEncoded(),False
19,PKIXParameters,8,String toString(),True
19,PKIXParameters,9,int hashCode(),False
19,PKIXParameters,10,boolean equals(Object obj),False
19,PKIXParameters,11,CertificateFactory getInstance(String algorithm),False
19,PKIXParameters,12,Certificate generateCertificate(InputStream inStream),False
19,PKIXParameters,13,Certificate generateCertificate(byte[] encoded),False
19,PKIXParameters,14,Certificate generateCertificate(String encoded),False
19,PKIXParameters,15,Certificate generateCertificate(URL url),False
19,PKIXParameters,16,String getIssuerX500Principal(),False
20,PKIXRevocationChecker,1,void init(boolean checkCRLs),False
20,PKIXRevocationChecker,2,void check(Certificate cert) throws CertificateException,False
20,PKIXRevocationChecker,3,void check(List certs) throws CertificateException,False
20,PKIXRevocationChecker,4,void check(Certificate[] certs) throws CertificateException,False
20,PKIXRevocationChecker,5,void check(Collection certs) throws CertificateException,False
21,PolicyQualifierInfo,1,getPolicyQualifierId(),False
21,PolicyQualifierInfo,2,getEncoded(),False
21,PolicyQualifierInfo,3,get(byte[] encoded),False
21,PolicyQualifierInfo,4,get(InputStream in),False
21,PolicyQualifierInfo,5,get(String id),False
22,TrustAnchor,1,java.security.cert.TrustAnchor getTrustAnchor(),False
22,TrustAnchor,2,java.security.cert.TrustAnchor getTrustAnchorByIssuer(java.security.cert.Certificate issuer),False
22,TrustAnchor,3,java.security.cert.TrustAnchor getTrustAnchorByName(java.lang.String name),False
22,TrustAnchor,4,java.security.cert.TrustAnchor getTrustAnchorByPublicKey(java.security.PublicKey publicKey),False
22,TrustAnchor,5,java.security.cert.TrustAnchor[] getTrustAnchors(),False
23,X509Certificate,1,String getIssuerX500Principal(),False
23,X509Certificate,2,String getSubjectX500Principal(),False
23,X509Certificate,3,Date getNotBefore(),True
23,X509Certificate,4,Date getNotAfter(),True
23,X509Certificate,5,String getSigAlgName(),True
23,X509Certificate,6,String getSerialNumber(),False
23,X509Certificate,7,String getVersion(),False
23,X509Certificate,8,String getPublicKey(),False
23,X509Certificate,9,String getSignatureAlgorithm(),False
23,X509Certificate,10,String getType(),False
23,X509Certificate,11,String getIssuerUniqueID(),False
23,X509Certificate,12,String getSubjectUniqueID(),False
23,X509Certificate,13,String getKeyUsage(),False
23,X509Certificate,14,String getExtendedKeyUsage(),False
23,X509Certificate,15,String getBasicConstraints(),False
23,X509Certificate,16,String getCRLDistributionPoints(),False
23,X509Certificate,17,String getAuthorityKeyIdentifier(),False
23,X509Certificate,18,String getSubjectAlternativeNames(),False
23,X509Certificate,19,String getIssuerAlternativeNames(),False
23,X509Certificate,20,String getCertificatePolicies(),False
23,X509Certificate,21,String getExtensions(),False
23,X509Certificate,22,String getEncoded(),False
23,X509Certificate,23,String getPublicKeyAlgorithm(),False
23,X509Certificate,24,String getSignature(),False
23,X509Certificate,25,String getSerialNumberString(),False
23,X509Certificate,26,String getIssuerX509Principal(),False
23,X509Certificate,27,String getSubjectX509Principal(),False
23,X509Certificate,28,String getIssuerDN(),False
23,X509Certificate,29,String getSubjectDN(),False
23,X509Certificate,30,String getEncodedBasicConstraints(),False
23,X509Certificate,31,String getEncodedIssuerUniqueID(),False
23,X509Certificate,32,String getEncodedSubjectUniqueID(),False
24,X509CertSelector,1,setCertificate(X509Certificate cert),False
24,X509CertSelector,2,setCertificate(byte[] cert),False
24,X509CertSelector,3,setCertificate(String cert),False
24,X509CertSelector,4,setIssuer(GeneralName issuer),False
24,X509CertSelector,5,setSerialNumber(BigInteger serialNumber),False
25,X509CRL,1,Date getLastUpdate(),False
25,X509CRL,2,Date getNextUpdate(),True
25,X509CRL,3,List<RevokedCertificate> getRevokedCertificates(),False
25,X509CRL,4,boolean isRevoked(Certificate cert),False
25,X509CRL,5,boolean isValid(Date date),False
26,X509CRLEntry,1,getRevocationDate(),False
26,X509CRLEntry,2,getSerialNumber(),False
26,X509CRLEntry,3,getExtensions(),False
26,X509CRLEntry,4,getAuthorityKeyIdentifier(),False
26,X509CRLEntry,5,getSubjectKeyIdentifier(),False
27,X509CRLSelector,1,boolean getCritical(String name),False
27,X509CRLSelector,2,Set<String> getCriticalExtensions(),False
27,X509CRLSelector,3,boolean hasUnsupportedCriticalExtension(),False
27,X509CRLSelector,4,boolean match(Certificate cert),False
27,X509CRLSelector,5,void setCertificate(Certificate cert),False
