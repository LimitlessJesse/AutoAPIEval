Sample Number,ClassName,Snippet Number,Method,Exist
0,BreakIteratorProvider,1,int following(int index),False
0,BreakIteratorProvider,2,int preceding(int index),False
0,BreakIteratorProvider,3,int next(),False
0,BreakIteratorProvider,4,int previous(),False
0,BreakIteratorProvider,5,int first(),False
0,BreakIteratorProvider,6,int last(),False
0,BreakIteratorProvider,7,int following(int index),False
0,BreakIteratorProvider,8,int following(int index),False
0,BreakIteratorProvider,9,int following(int index),False
0,BreakIteratorProvider,10,int following(int index),False
1,CollatorProvider,1,"int compare(String s1, String s2)",False
1,CollatorProvider,2,"int compare(Object o1, Object o2)",False
1,CollatorProvider,3,void setStrength(int newStrength),False
1,CollatorProvider,4,int getStrength(),False
1,CollatorProvider,5,boolean equals(Object another),False
1,CollatorProvider,6,void lock(),False
1,CollatorProvider,7,void unlock(),False
1,CollatorProvider,8,boolean tryLock(),False
1,CollatorProvider,9,"boolean tryLock(long timeout, TimeUnit unit) throws InterruptedException",False
1,CollatorProvider,10,Condition newCondition(),False
1,CollatorProvider,11,final int get(),False
1,CollatorProvider,12,final int getAndSet(int newValue),False
1,CollatorProvider,13,final int getAndIncrement(),False
1,CollatorProvider,14,final int getAndDecrement(),False
2,DateFormatProvider,1,List<Locale> getAvailableLocales(),False
2,DateFormatProvider,2,"DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",True
2,DateFormatProvider,3,"DateFormat getTimeInstance(int style, Locale locale)",True
2,DateFormatProvider,4,"DateFormat getDateInstance(int style, Locale locale)",True
2,DateFormatProvider,5,"DateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timezone, Locale locale)",False
3,DateFormatSymbolsProvider,1,getMonths(),False
3,DateFormatSymbolsProvider,2,getShortMonths(),False
3,DateFormatSymbolsProvider,3,getWeekdays(),False
3,DateFormatSymbolsProvider,4,getShortWeekdays(),False
3,DateFormatSymbolsProvider,5,getEras(),False
3,DateFormatSymbolsProvider,6,getAmPmStrings(),False
3,DateFormatSymbolsProvider,7,getZoneStrings(),False
3,DateFormatSymbolsProvider,8,getZoneStrings(boolean daylight),False
3,DateFormatSymbolsProvider,9,getZoneStrings(Locale locale),False
3,DateFormatSymbolsProvider,10,"getZoneStrings(Locale locale, boolean daylight)",False
4,DecimalFormatSymbolsProvider,1,String getCurrencySymbol(String currencyCode),False
4,DecimalFormatSymbolsProvider,2,String getMonetaryDecimalSeparator(),False
4,DecimalFormatSymbolsProvider,3,String getGroupingSeparator(),False
4,DecimalFormatSymbolsProvider,4,String getPercentSymbol(),False
4,DecimalFormatSymbolsProvider,5,String getZeroDigit(),False
4,DecimalFormatSymbolsProvider,6,String getDigit(char digit),False
4,DecimalFormatSymbolsProvider,7,String getPatternSeparator(),False
4,DecimalFormatSymbolsProvider,8,String getMonetaryGroupingSeparator(),False
4,DecimalFormatSymbolsProvider,9,String getExponentSeparator(),False
4,DecimalFormatSymbolsProvider,10,String getPerMilleSymbol(),False
4,DecimalFormatSymbolsProvider,11,String getInfinity(),False
4,DecimalFormatSymbolsProvider,12,String getNaN(),False
4,DecimalFormatSymbolsProvider,13,String getMinusSign(),False
4,DecimalFormatSymbolsProvider,14,String getPlusSign(),False
4,DecimalFormatSymbolsProvider,15,String getDecimalFormatSymbolsProvider(),False
5,NumberFormatProvider,1,NumberFormat getCurrencyInstance(),False
5,NumberFormatProvider,2,NumberFormat getIntegerInstance(),False
5,NumberFormatProvider,3,NumberFormat getNumberInstance(),False
5,NumberFormatProvider,4,NumberFormat getPercentInstance(),False
5,NumberFormatProvider,5,NumberFormat getInstance(Locale l),False
5,NumberFormatProvider,6,String format(double number),False
5,NumberFormatProvider,7,String format(long number),False
5,NumberFormatProvider,8,Number parse(String source),False
5,NumberFormatProvider,9,DecimalFormatSymbols getDecimalFormatSymbols(),False
5,NumberFormatProvider,10,void setDecimalFormatSymbols(DecimalFormatSymbols newSymbols),False
5,NumberFormatProvider,11,String toPattern(),False
5,NumberFormatProvider,12,void applyPattern(String newPattern),False
5,NumberFormatProvider,13,int getMaximumFractionDigits(),False
5,NumberFormatProvider,14,int getMinimumFractionDigits(),False
5,NumberFormatProvider,15,int getMaximumIntegerDigits(),False
5,NumberFormatProvider,16,int getMinimumIntegerDigits(),False
5,NumberFormatProvider,17,int getGroupingSize(),False
5,NumberFormatProvider,18,int getDecimalSeparatorAlignment(),False
5,NumberFormatProvider,19,int getRoundingMode(),False
