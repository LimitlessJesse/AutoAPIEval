Sample: 0 _BindingIteratorImplBase
----------------------------------------------------------------
1. `BindingListHolder _get_bindings()`
- Return type: org.omg.CosNaming.BindingListHolder
- No parameters

2. `int remaining_elements()`
- Return type: int
- No parameters

3. `void destroy()`
- Return type: void
- No parameters

4. `BindingIterator _duplicate()`
- Return type: org.omg.CosNaming.BindingIterator
- No parameters

5. `void next_n(int how_many, org.omg.CosNaming.BindingListHolder bl)`
- Return type: void
- Parameters: 
   - how_many: int
   - bl: org.omg.CosNaming.BindingListHolder
================================================================

Sample: 1 _BindingIteratorStub
----------------------------------------------------------------
1. `org.omg.CosNaming.BindingListHolder _list()`
2. `org.omg.CORBA.BooleanHolder _poa()`
3. `java.lang.String[] _ids()`
4. `org.omg.CORBA.portable.Delegate _get_delegate()`
5. `void destroy()`

================================================================

Sample: 2 _NamingContextExtStub
----------------------------------------------------------------
1. `org.omg.CORBA.Object resolve(ObjectName n)`
2. `String to_string(NameComponent[] name)`
3. `void bind_context(NameComponent n, NamingContext nc)`
4. `NamingContext new_context()`
5. `void bind(NameComponent n, org.omg.CORBA.Object obj)`
================================================================

Sample: 3 _NamingContextImplBase
----------------------------------------------------------------
1. `org.omg.CORBA.Object resolve(org.omg.CORBA.NameComponent[] n)` 
   - This method resolves the given name and returns the corresponding CORBA Object.

2. `org.omg.CosNaming.NamingContext new_context()`
   - This method creates a new NamingContext and returns it.

3. `org.omg.CosNaming.BindingIterator list(int how_many)`
   - This method lists bindings in the naming context.

4. `void destroy()`
   - This method destroys the naming context.

5. `void bind(org.omg.CORBA.NameComponent[] n, org.omg.CORBA.Object obj)`
   - This method binds the given name with the corresponding CORBA Object in the naming context.
================================================================

Sample: 4 _NamingContextStub
----------------------------------------------------------------
1. `BindingIterator list(int how_many)`: Returns a BindingIterator object

2. `BindingIterator list_n(int how_many)`: Returns a BindingIterator object

3. `NamingContext new_context()`: Returns a NamingContext object

4. `void bind(NameComponent n, org.omg.CORBA.Object obj)`: Binds the specified NameComponent to the given CORBA object

5. `void rebind(NameComponent n, org.omg.CORBA.Object obj)`: Rebinds the specified NameComponent to the given CORBA object
================================================================

Sample: 5 Binding
----------------------------------------------------------------
1. org.omg.CosNaming.BindingIteratorStub _this()
2. void destroy()
3. void _this(org.omg.CORBA.ORB orb)
4. void _this(org.omg.CORBA.ORB orb, org.omg.CORBA.portable.Delegate delegate)
5. org.omg.CORBA.Object _this_object()
================================================================

Sample: 6 BindingHelper
----------------------------------------------------------------
1. `void bind(org.omg.CosNaming.NamingContext nc, org.omg.CosNaming.NameComponent[] n)`: Binds the given name to the given object reference in the given naming context.
2. `void rebind(org.omg.CosNaming.NamingContext nc, org.omg.CosNaming.NameComponent[] n)`: Rebinds the given name to the given object reference in the given naming context.
3. `org.omg.CosNaming.BindingListHolder list(int how_many)`: Retrieves a specific number of bindings from the naming context.
4. `org.omg.CosNaming.BindingIteratorHolder new_iterator()`: Creates a new binding iterator for the naming context.
5. `void unbind(org.omg.CosNaming.NamingContext nc, org.omg.CosNaming.NameComponent[] n)`: Unbinds the given name from the given naming context.
================================================================

Sample: 7 BindingHolder
----------------------------------------------------------------
1. `org.omg.CORBA.NamingContextHelper helper()`: This method returns the NamingContextHelper object associated with this BindingHolder.
2. `org.omg.CORBA.Object get_obj()`: This method returns the CORBA object associated with this BindingHolder.
3. `void set_obj(org.omg.CORBA.Object obj)`: This method sets the CORBA object associated with this BindingHolder to the specified object.
4. `org.omg.CORBA.NamingContext get_context()`: This method returns the NamingContext object associated with this BindingHolder.
5. `void set_context(org.omg.CORBA.NamingContext nc)`: This method sets the NamingContext object associated with this BindingHolder to the specified NamingContext.
================================================================

Sample: 8 BindingIteratorHelper
----------------------------------------------------------------
1. `Binding next_one()`: This method returns the next Binding in the iterator.
2. `boolean next_n(int how_many, BindingListHolder bl)`: This method retrieves the next "how_many" Bindings from the iterator and returns them in the BindingListHolder.
3. `void destroy()`: This method destroys the iterator, releasing any resources it may be using.
4. `BindingIterator duplicate()`: This method creates a new BindingIterator that is positioned at the same point in the iteration as the original iterator.
5. `void reset()`: This method resets the iterator to the beginning of the sequence of bindings.
================================================================

Sample: 9 BindingIteratorHolder
----------------------------------------------------------------
1. `void next_n(int how_many, org.omg.CosNaming.BindingListHolder bl)` - This method retrieves the next `how_many` bindings in the list and stores them in the `BindingListHolder` parameter provided.
2. `boolean next_one(org.omg.CosNaming.BindingHolder b)` - This method retrieves the next binding in the list and stores it in the `BindingHolder` parameter provided. Returns true if there is a next binding, false otherwise.
3. `void destroy()` - This method releases system resources associated with this iterator.
4. `boolean next_n_skip(int how_many, int start_at, org.omg.CosNaming.BindingListHolder bl)` - This method retrieves the next `how_many` bindings starting from the `start_at` position in the list and stores them in the `BindingListHolder` parameter provided. Returns true if successful, false otherwise.
5. `void reset()` - This method resets the iterator to the beginning of the list.
================================================================

Sample: 10 BindingIteratorPOA
----------------------------------------------------------------
1. `org.omg.CosNaming.Binding next_one()`: This method returns the next binding in the iterator.

2. `org.omg.CosNaming.Binding[] next_n(int how_many)`: This method returns an array of bindings, containing at most "how_many" bindings.

3. `void destroy()`: This method destroys the iterator.

4. `void list(org.omg.CosNaming.BindingListHolder bl, org.omg.CosNaming.BindingIteratorHolder bi)`: This method returns the remaining bindings in the iterator.

5. `void reset()`: This method resets the iterator to the beginning of the binding sequence.
================================================================

Sample: 11 BindingListHelper
----------------------------------------------------------------
1. `int count()`: This method returns the number of bindings in the BindingList.
2. `org.omg.CosNaming.Binding item(int index)`: This method returns the Binding at the specified index in the BindingList.
3. `void add(int index, org.omg.CosNaming.Binding binding)`: This method inserts the specified Binding at the specified position in the BindingList.
4. `void remove(int index)`: This method removes the Binding at the specified index from the BindingList.
5. `void clear()`: This method removes all bindings from the BindingList.
================================================================

Sample: 12 BindingListHolder
----------------------------------------------------------------
1. org.omg.CosNaming.Binding[] get_value()
   - Return type: org.omg.CosNaming.Binding[]
   
2. void set_value(org.omg.CosNaming.Binding[] new_value)
   - Return type: void
   
3. int length()
   - Return type: int
   
4. org.omg.CosNaming.Binding value[]
   - Return type: org.omg.CosNaming.Binding[]
   
5. BindingListHolder()
   - Return type: N/A
================================================================

Sample: 13 BindingType
----------------------------------------------------------------
1. `Object get_binding_name()`
   - Return type: Object
   - Parameters: None

2. `Context get_binding_context()`
   - Return type: Context
   - Parameters: None

3. `Object get_binding_type()`
   - Return type: Object
   - Parameters: None

4. `void set_binding_name(Object name)`
   - Return type: void
   - Parameters: Object name

5. `void set_binding_type(Object type)`
   - Return type: void
   - Parameters: Object type
================================================================

Sample: 14 BindingTypeHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.BindingType valueOf(int value)`: This method returns the enum constant of the specified integer value.
2. `org.omg.CORBA.TypeCode _type()`: This method returns the TypeCode object associated with the BindingTypeHelper class.
3. `java.lang.String id()`: This method returns the ID string of the BindingType enum.
4. `org.omg.CosNaming.BindingType read(org.omg.CORBA.portable.InputStream istream)`: This method reads the BindingType enum from the input stream.
5. `void write(org.omg.CORBA.portable.OutputStream ostream, org.omg.CosNaming.BindingType value)`: This method writes the BindingType enum to the output stream.
================================================================

Sample: 15 BindingTypeHolder
----------------------------------------------------------------
1. org.omg.CosNaming.BindingTypeHolder()  
   - Constructor with no parameters 
   - Return type: void

2. org.omg.CosNaming.BindingTypeHolder(org.omg.CosNaming.BindingType initialValue)  
   - Constructor with BindingType parameter 
   - Return type: void

3. org.omg.CosNaming.BindingType value()  
   - Retrieves the value held by this BindingTypeHolder object 
   - Return type: org.omg.CosNaming.BindingType

4. void value(org.omg.CosNaming.BindingType newValue)  
   - Sets the value of this BindingTypeHolder object to the given BindingType 
   - Parameters: newValue of type org.omg.CosNaming.BindingType

5. org.omg.CORBA.TypeCode _type()  
   - Retrieves the TypeCode object that corresponds to the expected type for the value held in this BindingTypeHolder object 
   - Return type: org.omg.CORBA.TypeCode
================================================================

Sample: 16 IstringHelper
----------------------------------------------------------------
1. `String extract(org.omg.CORBA.Any a)`: This method extracts the string value from the given CORBA Any object.
2. `org.omg.CORBA.Any insert(org.omg.CORBA.Any a, String that)`: This method inserts a string value into the given CORBA Any object.
3. `void read(org.omg.CORBA.portable.InputStream istream)`: This method reads a string value from the InputStream.
4. `void write(org.omg.CORBA.portable.OutputStream ostream, String value)`: This method writes a string value to the OutputStream.
5. `String id()`: This method returns the ID of the IstringHelper.
================================================================

Sample: 17 NameComponent
----------------------------------------------------------------
1. `java.lang.String id()`: This method returns the id of the NameComponent.
2. `void id(java.lang.String value)`: This method sets the id of the NameComponent.
3. `java.lang.String kind()`: This method returns the kind of the NameComponent.
4. `void kind(java.lang.String value)`: This method sets the kind of the NameComponent.
5. `org.omg.CosNaming.NameComponent[] ids()`: This method returns the IDs array of the NameComponent.
================================================================

Sample: 18 NameComponentHelper
----------------------------------------------------------------
1. `NameComponent[] extract(org.omg.CORBA.Any a)`: This method extracts a NameComponent array from a CORBA Any object.
2. `void insert(org.omg.CORBA.Any a, NameComponent[] that)`: This method inserts a NameComponent array into a CORBA Any object.
3. `void write(org.omg.CORBA.portable.OutputStream out, NameComponent[] that)`: This method writes a NameComponent array to a CORBA portable OutputStream.
4. `NameComponent[] read(org.omg.CORBA.portable.InputStream input)`: This method reads a NameComponent array from a CORBA portable InputStream.
5. `void write(org.omg.CORBA.portable.OutputStream out, NameComponent[] value)`: This method writes a NameComponent array to a CORBA portable OutputStream.
================================================================

Sample: 19 NameComponentHolder
----------------------------------------------------------------
1. `void insert(int index, org.omg.CosNaming.NameComponent element)`: This method inserts the specified NameComponent at the specified index.
2. `org.omg.CosNaming.NameComponent get(int index)`: This method returns the NameComponent at the specified index.
3. `int size()`: This method returns the number of NameComponents in the NameComponentHolder.
4. `void clear()`: This method removes all the NameComponents from the NameComponentHolder.
5. `boolean isEmpty()`: This method returns true if the NameComponentHolder is empty, false otherwise.
================================================================

Sample: 20 NameHelper
----------------------------------------------------------------
1. `org.omg.CosNaming.NameHelper makeName(String name)`: This method creates a Name object from the given string name.
2. `org.omg.CosNaming.NameHelper parse(String name)`: This method parses a string representation of a Name object and returns the corresponding Name object.
3. `org.omg.CosNaming.NameHelper to_url(String addr, String inter)`: This method converts a string address and interface to a URL string.
4. `org.omg.CosNaming.NameHelper from_url(String str)`: This method converts a URL string to a Name object.
5. `org.omg.CosNaming.NameHelper nobject_to_string(org.omg.CORBA.Object obj)` : This method returns a stringified representation of the given CORBA Object.
================================================================

Sample: 21 NameHolder
----------------------------------------------------------------
1. `void setName(org.omg.CosNaming.NameComponent[] newValue)`: This method sets the value of this NameHolder object to the given array of NameComponents.
2. `org.omg.CosNaming.NameComponent[] value()`: This method returns the current value held by this NameHolder object as an array of NameComponents.
3. `void _write(org.omg.CORBA.portable.OutputStream out)`: This method writes the value held by this NameHolder object to the given OutputStream.
4. `void _read(org.omg.CORBA.portable.InputStream in)`: This method reads a NameComponent array from the given InputStream and sets as the value of this NameHolder object.
5. `org.omg.CORBA.TypeCode _type()`: This method returns the TypeCode object representing the type of this NameHolder object.
================================================================

Sample: 22 NamingContextExtHelper
----------------------------------------------------------------
1. org.omg.CORBA.Object narrow(org.omg.CORBA.Object obj)
2. void bind_new_context(NameComponent[] n, NamingContext new_context)
3. NamingContextExt to_context(obj objref, orb ORB_val, int replace, int duplicate)
4. void rebind_context(NameComponent[] n, NamingContext new_context)
5. void context_rebind(NameComponent[] n, NamingContext new_context)
================================================================

Sample: 23 NamingContextExtHolder
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: Binds the specified object to the provided NameComponent array in the NamingContextExt.
2. `void rebind_context(NameComponent[] n, NamingContext nc)`: Rebinds the context specified by the NameComponent array with the provided NamingContext object in the NamingContextExt.
3. `NameComponent[] to_name(String sn)`: Converts the given string to an array of NameComponent objects in the NamingContextExt.
4. `void unbind(NameComponent[] n)`: Unbinds the object specified by the NameComponent array from the NamingContextExt.
5. `BindingListHolder list(int how_many, BindingIteratorHolder bi)`: Retrieves a list of bindings from the NamingContextExt using the provided how_many value and BindingIteratorHolder object.
================================================================

Sample: 24 NamingContextExtPOA
----------------------------------------------------------------
1. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: This method binds the given name to the object reference.
2. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: This method re-binds the given name to the object reference.
3. `void destroy()` : This method destroys the POA object.
4. `void deactivateObject(byte[] id)`: This method deactivates the specified object.
5. `org.omg.CORBA.Object resolve(NameComponent[] n)`: This method resolves the given name to an object reference.
================================================================

Sample: 25 NamingContextHelper
----------------------------------------------------------------
1. `org.omg.CORBA.Object resolve_str(String n)`: This method resolves the given stringified name to an object reference.
2. `void bind(NameComponent[] n, org.omg.CORBA.Object obj)`: This method binds the given object reference to the specified name. 
3. `void rebind(NameComponent[] n, org.omg.CORBA.Object obj)`: This method rebinds the given object reference to the specified name, replacing any existing binding.
4. `void unbind(NameComponent[] n)`: This method unbinds the object reference associated with the specified name.
5. `void list(int how_many, BindingListHolder bl, BindingIteratorHolder bi)`: This method lists a specified number of bindings in this naming context.
================================================================

Sample: 26 NamingContextHolder
----------------------------------------------------------------
1. `NamingContext ctx()`: This method returns the NamingContext held by the NamingContextHolder.
2. `void ctx(NamingContext newVal)`: This method sets the NamingContext to be held by the NamingContextHolder.
3. `NamingContextHolder value()`: This method returns the NamingContext value held by the NamingContextHolder.
4. `void value(NamingContext newValue)`: This method sets the NamingContext value to be held by the NamingContextHolder.
5. `NamingContextHolder copy()`: This method returns a copy of the NamingContextHolder instance.
================================================================

Sample: 27 NamingContextPOA
----------------------------------------------------------------
1. org.omg.CORBA.Object resolve_str(String n)
   - Return type: org.omg.CORBA.Object
   - Parameters: String n

2. org.omg.CORBA.Object resolve(NameComponent[] n)
   - Return type: org.omg.CORBA.Object
   - Parameters: NameComponent[] n

3. NamingContext new_context()
   - Return type: NamingContext
   - Parameters: None

4. void bind_context(NameComponent[] n, NamingContext nc)
   - Return type: void
   - Parameters: NameComponent[] n, NamingContext nc

5. void rebind_context(NameComponent[] n, NamingContext nc)
   - Return type: void
   - Parameters: NameComponent[] n, NamingContext nc
================================================================

