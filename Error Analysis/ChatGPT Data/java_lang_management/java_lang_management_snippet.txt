Sample: 0 LockInfo_1
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.LockInfo;

public class Main {
    public static void main(String[] args) {
        LockInfo lockInfo = new LockInfo("ClassName", 123);
        String className = lockInfo.getClassName();
        System.out.println("Class Name: " + className);
    }
}
```
================================================================

Sample: 1 LockInfo_2
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.LockInfo;

public class Main {
    public static void main(String[] args) {
        LockInfo lockInfo = new LockInfo("ClassName", 123);
        int identityHashCode = lockInfo.getIdentityHashCode();
        System.out.println("Identity Hash Code: " + identityHashCode);
    }
}
```
================================================================

Sample: 2 LockInfo_4
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.LockInfo;

public class Main {
    public static void main(String[] args) {
        LockInfo lockInfo = new LockInfo("ClassName", 123);
        System.out.println(lockInfo.toString());
    }
}
```
================================================================

Sample: 3 ManagementFactory_1
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;

public class Main {
    public static void main(String[] args) {
        MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();
        System.out.println("Heap Memory Usage: " + memoryBean.getHeapMemoryUsage());
        System.out.println("Non-Heap Memory Usage: " + memoryBean.getNonHeapMemoryUsage());
    }
}
```
================================================================

Sample: 4 ManagementFactory_2
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadMXBean;

public class Main {
    public static void main(String[] args) {
        ThreadMXBean threadBean = ManagementFactory.getThreadMXBean();
        
        System.out.println("Thread Count: " + threadBean.getThreadCount());
        System.out.println("Peak Thread Count: " + threadBean.getPeakThreadCount());
        System.out.println("Current Thread CPU Time: " + threadBean.getCurrentThreadCpuTime());
        System.out.println("Daemon Thread Count: " + threadBean.getDaemonThreadCount());
    }
}
```
================================================================

Sample: 5 ManagementFactory_3
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import com.sun.management.OperatingSystemMXBean;

public class Main {
    public static void main(String[] args) {
        OperatingSystemMXBean osBean = ManagementFactory.getPlatformMXBean(OperatingSystemMXBean.class);
        System.out.println("Operating System Name: " + osBean.getName());
        System.out.println("Operating System Version: " + osBean.getVersion());
        System.out.println("Available Processors: " + osBean.getAvailableProcessors());
    }
}
```
================================================================

Sample: 6 ManagementFactory_4
----------------------------------------------------------------
Method: `getRuntimeMXBean()`: This method returns the RuntimeMXBean instance representing the management interface for the runtime system of the Java virtual machine.

Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.RuntimeMXBean;

public class Main {
    public static void main(String[] args) {
        RuntimeMXBean runtimeMXBean = ManagementFactory.getRuntimeMXBean();
        
        // Print the name of the running Java Virtual Machine
        System.out.println("Name of the running JVM: " + runtimeMXBean.getName());
        
        // Print the uptime of the Java Virtual Machine in milliseconds
        System.out.println("Uptime of the JVM: " + runtimeMXBean.getUptime() + " ms");
        
        // Print the input arguments passed to the JVM
        System.out.println("Input arguments: " + runtimeMXBean.getInputArguments());
        
        // Print the system properties passed to the JVM
        System.out.println("System properties: " + runtimeMXBean.getSystemProperties());
    }
}
```
================================================================

Sample: 7 ManagementFactory_5
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ClassLoadingMXBean;
import java.lang.management.ManagementFactory;

public class Main {
    public static void main(String[] args) {
        ClassLoadingMXBean classLoadingMXBean = ManagementFactory.getClassLoadingMXBean();
        
        // Access and use methods from ClassLoadingMXBean here
        System.out.println("Total Loaded Class Count: " + classLoadingMXBean.getTotalLoadedClassCount());
    }
}
```
================================================================

Sample: 8 MemoryNotificationInfo_1
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.MemoryNotificationInfo;

public class Main {
    public static void main(String[] args) {
        MemoryNotificationInfo info = new MemoryNotificationInfo("poolName", null, 0);
        String poolName = info.getPoolName();
        System.out.println("Memory pool name: " + poolName);
    }
}
```
================================================================

Sample: 9 MemoryNotificationInfo_3
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.MemoryNotificationInfo;

public class Main {
    public static void main(String[] args) {
        MemoryNotificationInfo notificationInfo = new MemoryNotificationInfo("notificationType", 
            null, 10L, 20L, "poolName", new javax.management.ObjectName("objectName"));
        
        long count = notificationInfo.getCount();
        System.out.println("Count: " + count);
    }
}
```
================================================================

Sample: 10 MemoryUsage_1
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.MemoryUsage;

public class Main {
    public static void main(String[] args) {
        MemoryUsage memoryUsage = new MemoryUsage(100, 50, 30, 10);
        System.out.println("Initial memory usage: " + memoryUsage.getInit());
    }
}
```
================================================================

Sample: 11 MemoryUsage_2
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.MemoryUsage;

public class Main {
    public static void main(String[] args) {
        MemoryUsage memoryUsage = ManagementFactory.getMemoryMXBean().getHeapMemoryUsage();
        long usedMemory = memoryUsage.getUsed();
        System.out.println("Used memory: " + usedMemory + " bytes");
    }
}
```
================================================================

Sample: 12 MemoryUsage_3
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.MemoryUsage;

public class Main {
    public static void main(String[] args) {
        MemoryUsage memoryUsage = new MemoryUsage(10, 5, 15, 3);
        long committed = memoryUsage.getCommitted();
        System.out.println("Committed memory: " + committed);
    }
}
```
================================================================

Sample: 13 MemoryUsage_4
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.MemoryUsage;

public class Main {
    public static void main(String[] args) {
        MemoryUsage memoryUsage = new MemoryUsage(10, 20, 5, 15);
        long max = memoryUsage.getMax();
        System.out.println("Max memory usage: " + max);
    }
}
```
================================================================

Sample: 14 MemoryUsage_5
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.MemoryUsage;

public class Main {
    public static void main(String[] args) {
        MemoryUsage memoryUsage = new MemoryUsage(100, 50, 200, 150);
        System.out.println(memoryUsage.toString());
    }
}
```
================================================================

Sample: 15 MonitorInfo_1
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.*;

public class Main {
    public static void main(String[] args) {
        Object lock = new Object();
        MonitorInfo monitor = new MonitorInfo(lock);
        int lockedStackDepth = monitor.getLockedStackDepth();
        System.out.println("Locked stack depth: " + lockedStackDepth);
    }
}
```
================================================================

Sample: 16 MonitorInfo_3
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.MonitorInfo;
import java.lang.management.ThreadInfo;

public class Main {
    public static void main(String[] args) {
        ThreadInfo threadInfo = ManagementFactory.getThreadMXBean().getThreadInfo(Thread.currentThread().getId(), true);
        MonitorInfo[] monitorInfo = threadInfo.getLockedMonitors();
        
        if (monitorInfo.length > 0) {
            StackTraceElement stackFrame = monitorInfo[0].getLockedStackFrame();
            System.out.println("Locked stack frame: " + stackFrame);
        } else {
            System.out.println("No locked monitors found.");
        }
    }
}
```
================================================================

Sample: 17 ThreadInfo_1
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadInfo;

public class Main {
    public static void main(String[] args) {
        long threadId = Thread.currentThread().getId();
        ThreadInfo threadInfo = ManagementFactory.getThreadMXBean().getThreadInfo(threadId);
        
        System.out.println("Thread ID: " + threadInfo.getThreadId());
    }
}
```
================================================================

Sample: 18 ThreadInfo_2
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadInfo;

public class Main {
    public static void main(String[] args) {
        ThreadInfo info = ManagementFactory.getThreadMXBean().getThreadInfo(Thread.currentThread().getId());
        String threadName = info.getThreadName();
        System.out.println("Current thread name: " + threadName);
    }
}
```
================================================================

Sample: 19 ThreadInfo_3
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadInfo;

public class Main {
    public static void main(String[] args) {
        ThreadInfo info = ManagementFactory.getThreadMXBean().getThreadInfo(Thread.currentThread().getId());
        StackTraceElement[] stackTraceElements = info.getStackTrace();
        
        for (StackTraceElement element : stackTraceElements) {
            System.out.println(element.getClassName() + "." + element.getMethodName() + "(" + element.getFileName() + ":" + element.getLineNumber() + ")");
        }
    }
}
```
================================================================

Sample: 20 ThreadInfo_4
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadInfo;
import java.lang.management.ThreadMXBean;

public class Main {
    public static void main(String[] args) {
        ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();
        long threadId = Thread.currentThread().getId();
        ThreadInfo threadInfo = threadMXBean.getThreadInfo(threadId);
        Thread.State threadState = threadInfo.getThreadState();
        System.out.println("Current thread state: " + threadState);
    }
}
```
================================================================

Sample: 21 ThreadInfo_5
----------------------------------------------------------------
Code snippet:
```java
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadInfo;
import java.lang.management.MonitorInfo;

public class Main {
    public static void main(String[] args) {
        ThreadInfo[] threadInfoArray = ManagementFactory.getThreadMXBean().dumpAllThreads(true, true);
        
        for (ThreadInfo threadInfo : threadInfoArray) {
            MonitorInfo[] lockedMonitors = threadInfo.getLockedMonitors();
            if (lockedMonitors != null) {
                for (MonitorInfo monitorInfo : lockedMonitors) {
                    System.out.println("Thread " + threadInfo.getThreadName() + " is holding monitor on " + monitorInfo.getClassName());
                }
            }
        }
    }
}
```
================================================================

