Sample: LockInfo_1
----------------------------------------------------------------
stdout:
Class Name: ClassName

================================================================

Sample: LockInfo_2
----------------------------------------------------------------
stdout:
Identity Hash Code: 123

================================================================

Sample: LockInfo_4
----------------------------------------------------------------
stdout:
ClassName@7b

================================================================

Sample: ManagementFactory_1
----------------------------------------------------------------
stdout:
Heap Memory Usage: init = 1325400064(1294336K) used = 33472512(32688K) committed = 1358954496(1327104K) max = 21005074432(20512768K)
Non-Heap Memory Usage: init = 7667712(7488K) used = 16534840(16147K) committed = 19267584(18816K) max = -1(-1K)

================================================================

Sample: ManagementFactory_2
----------------------------------------------------------------
stdout:
Thread Count: 6
Peak Thread Count: 6
Current Thread CPU Time: 548222521
Daemon Thread Count: 5

================================================================

Sample: ManagementFactory_3
----------------------------------------------------------------
stdout:
Operating System Name: Linux
Operating System Version: 5.15.0-101-generic
Available Processors: 20

================================================================

Sample: ManagementFactory_4
----------------------------------------------------------------
stdout:
Name of the running JVM: 128529@wrybill
Uptime of the JVM: 579 ms
Input arguments: [--add-modules=ALL-DEFAULT]
System properties: {java.specification.version=17, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, sun.jnu.encoding=UTF-8, java.runtime.version=17.0.10+7-Ubuntu-120.04.1, java.class.path=., user.name=yixi, jdk.launcher.sourcefile=/home/yixi/comp4522/OpenAi/Pipeline/./Data/java_lang_management/javaFiles/ManagementFactory_4.java, java.vm.vendor=Private Build, path.separator=:, sun.arch.data.model=64, os.version=5.15.0-101-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vendor.url=Unknown, java.vm.name=OpenJDK 64-Bit Server VM, java.vm.specification.version=17, os.name=Linux, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/usr/lib/jvm/java-17-openjdk-amd64/lib, sun.java.command=jdk.compiler/com.sun.tools.javac.launcher.Main ./Data/java_lang_management/javaFiles/ManagementFactory_4.java, java.vendor.url.bug=Unknown, java.io.tmpdir=/tmp, jdk.debug=release, sun.cpu.endian=little, java.version=17.0.10, user.home=/home/yixi, user.dir=/home/yixi/comp4522/OpenAi/Pipeline, os.arch=amd64, user.language=en, java.specification.vendor=Oracle Corporation, java.vm.specification.name=Java Virtual Machine Specification, java.version.date=2024-01-16, java.home=/usr/lib/jvm/java-17-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, native.encoding=UTF-8, line.separator=
, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, sharing, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.vendor=Private Build, java.vm.version=17.0.10+7-Ubuntu-120.04.1, sun.io.unicode.encoding=UnicodeLittle, java.class.version=61.0, jdk.module.main.class=com.sun.tools.javac.launcher.Main}

================================================================

Sample: ManagementFactory_5
----------------------------------------------------------------
stdout:
Total Loaded Class Count: 2338

================================================================

Sample: MemoryNotificationInfo_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Null usage
	at java.management/java.lang.management.MemoryNotificationInfo.<init>(MemoryNotificationInfo.java:155)
	at MemoryNotificationInfo_1.main(MemoryNotificationInfo_1.java:5)

================================================================

Sample: MemoryNotificationInfo_3
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/MemoryNotificationInfo_3.java:5: error: no suitable constructor found for MemoryNotificationInfo(String,<null>,long,long,String,ObjectName)
        MemoryNotificationInfo notificationInfo = new MemoryNotificationInfo("notificationType", 
                                                  ^
    constructor MemoryNotificationInfo.MemoryNotificationInfo(String,MemoryUsage,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor MemoryNotificationInfo.MemoryNotificationInfo(CompositeData) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: MemoryUsage_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: used = 50 should be <= committed = 30
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:162)
	at MemoryUsage_1.main(MemoryUsage_1.java:5)

================================================================

Sample: MemoryUsage_2
----------------------------------------------------------------
stdout:
Used memory: 33472512 bytes

================================================================

Sample: MemoryUsage_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: committed = 15 should be < max = 3
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:166)
	at MemoryUsage_3.main(MemoryUsage_3.java:5)

================================================================

Sample: MemoryUsage_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: used = 20 should be <= committed = 5
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:162)
	at MemoryUsage_4.main(MemoryUsage_4.java:5)

================================================================

Sample: MemoryUsage_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: committed = 200 should be < max = 150
	at java.management/java.lang.management.MemoryUsage.<init>(MemoryUsage.java:166)
	at MemoryUsage_5.main(MemoryUsage_5.java:5)

================================================================

Sample: MonitorInfo_1
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/MonitorInfo_1.java:6: error: constructor MonitorInfo in class MonitorInfo cannot be applied to given types;
        MonitorInfo monitor = new MonitorInfo(lock);
                              ^
  required: String,int,int,StackTraceElement
  found:    Object
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: MonitorInfo_3
----------------------------------------------------------------
output:
./Data/java_lang_management/javaFiles/MonitorInfo_3.java:7: error: no suitable method found for getThreadInfo(long,boolean)
        ThreadInfo threadInfo = ManagementFactory.getThreadMXBean().getThreadInfo(Thread.currentThread().getId(), true);
                                                                   ^
    method ThreadMXBean.getThreadInfo(long,int) is not applicable
      (argument mismatch; boolean cannot be converted to int)
    method ThreadMXBean.getThreadInfo(long[],int) is not applicable
      (argument mismatch; long cannot be converted to long[])
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ThreadInfo_1
----------------------------------------------------------------
stdout:
Thread ID: 1

================================================================

Sample: ThreadInfo_2
----------------------------------------------------------------
stdout:
Current thread name: main

================================================================

Sample: ThreadInfo_3
----------------------------------------------------------------
================================================================

Sample: ThreadInfo_4
----------------------------------------------------------------
stdout:
Current thread state: RUNNABLE

================================================================

Sample: ThreadInfo_5
----------------------------------------------------------------
================================================================

