Sample: AbstractList_1
----------------------------------------------------------------
stdout:
Hello

stderr:
Note: ./Data/java_util/javaFiles/AbstractList_1.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

================================================================

Sample: AbstractMap_2
----------------------------------------------------------------
stdout:
Are the entries equal? false

================================================================

Sample: AbstractMap_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_3.java:5: error: <anonymous AbstractMap_3$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        AbstractMap<String, Integer> map = new AbstractMap<String, Integer>() {
                                                                              ^
1 error


================================================================

Sample: AbstractMap_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.UnsupportedOperationException
	at java.base/java.util.AbstractMap.put(AbstractMap.java:209)
	at AbstractMap_4.main(AbstractMap_4.java:13)

================================================================

Sample: AbstractMap_5
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_5.java:6: error: <anonymous AbstractMap_5$1> is not abstract and does not override abstract method entrySet() in AbstractMap
        AbstractMap<String, Integer> map = new AbstractMap<String, Integer>() {
                                                                              ^
1 error


================================================================

Sample: AbstractMap_SimpleEntry_1
----------------------------------------------------------------
stdout:
Before: 10
After: 20

================================================================

Sample: AbstractMap_SimpleEntry_2
----------------------------------------------------------------
stdout:
true

================================================================

Sample: AbstractMap_SimpleEntry_3
----------------------------------------------------------------
stdout:
79431

================================================================

Sample: AbstractMap_SimpleEntry_4
----------------------------------------------------------------
stdout:
Key=123

================================================================

Sample: AbstractMap_SimpleEntry_5
----------------------------------------------------------------
stdout:
Key: 1

================================================================

Sample: AbstractMap_SimpleImmutableEntry_1
----------------------------------------------------------------
stdout:
Key: key

================================================================

Sample: AbstractMap_SimpleImmutableEntry_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/AbstractMap_SimpleImmutableEntry_2.java:6: error: incompatible types: Integer cannot be converted to String
        String value = entry.getValue();
                                     ^
1 error


================================================================

Sample: AbstractMap_SimpleImmutableEntry_4
----------------------------------------------------------------
stdout:
SimpleImmutableEntry toString: Key=10

================================================================

Sample: AbstractMap_SimpleImmutableEntry_5
----------------------------------------------------------------
stdout:
Are the entries equal? true

================================================================

Sample: ArrayDeque_1
----------------------------------------------------------------
stdout:
[Second, First]

================================================================

Sample: ArrayDeque_2
----------------------------------------------------------------
stdout:
[World, Java]

================================================================

Sample: ArrayDeque_3
----------------------------------------------------------------
stdout:
Before removeFirst(): [First, Second, Third]
Removed element: First
After removeFirst(): [Second, Third]

================================================================

Sample: ArrayDeque_4
----------------------------------------------------------------
stdout:
Deque before: [First, Second]
Deque after removeLast(): [First]

================================================================

Sample: ArrayDeque_5
----------------------------------------------------------------
stdout:
First element in the deque: First

================================================================

Sample: ArrayList_1
----------------------------------------------------------------
stdout:
Element added successfully: true
[Hello]

================================================================

Sample: ArrayList_2
----------------------------------------------------------------
stdout:
[World, Hello]

================================================================

Sample: ArrayList_3
----------------------------------------------------------------
stdout:
World

================================================================

Sample: ArrayList_4
----------------------------------------------------------------
stdout:
Before removing element at index 1: [Hello, World, Java]
After removing element at index 1: [Hello, Java]

================================================================

Sample: ArrayList_5
----------------------------------------------------------------
stdout:
Size of the list: 1

================================================================

Sample: Arrays_1
----------------------------------------------------------------
stdout:
Sorted Array: 
1 2 4 5 7 9 
================================================================

Sample: Arrays_2
----------------------------------------------------------------
stdout:
Element found at index: 2

================================================================

Sample: Arrays_3
----------------------------------------------------------------
stdout:
[1, 2, 3, 4, 5]

================================================================

Sample: Arrays_4
----------------------------------------------------------------
stdout:
Hash code of the array: 29615266

================================================================

Sample: Arrays_5
----------------------------------------------------------------
stdout:
Arrays are equal: true

================================================================

Sample: Base64_Decoder_4
----------------------------------------------------------------
================================================================

Sample: Base64_Encoder_1
----------------------------------------------------------------
stdout:
Encoded: SGVsbG8sIFdvcmxkIQ==

================================================================

Sample: Base64_Encoder_2
----------------------------------------------------------------
stdout:
Encoded String: AQIDBAU=

================================================================

Sample: Base64_Encoder_3
----------------------------------------------------------------
stdout:
Encoded String: SGVsbG8sIFdvcmxkIQ

================================================================

Sample: BitSet_1
----------------------------------------------------------------
stdout:
Before setting bit: {}
After setting bit: {5}

================================================================

Sample: BitSet_2
----------------------------------------------------------------
stdout:
Before clear: {2}
After clear: {}

================================================================

Sample: BitSet_3
----------------------------------------------------------------
stdout:
true
false
true

================================================================

Sample: BitSet_4
----------------------------------------------------------------
stdout:
BitSet length: 5

================================================================

Sample: BitSet_5
----------------------------------------------------------------
stdout:
Before flip: {2}
After flip: {}

================================================================

Sample: Calendar_1
----------------------------------------------------------------
stdout:
Calendar set to: Sun Apr 28 02:03:39 CDT 2024

================================================================

Sample: Calendar_2
----------------------------------------------------------------
stdout:
Current Date: 2024/4/28

================================================================

Sample: Calendar_3
----------------------------------------------------------------
stdout:
Initial calendar value: Sun Apr 28 02:03:41 CDT 2024
Updated calendar value: Mon Apr 15 02:03:41 CDT 2024

================================================================

Sample: Calendar_4
----------------------------------------------------------------
stdout:
Current date: Sun Apr 28 02:03:43 CDT 2024
Date after adding 5 days: Fri May 03 02:03:43 CDT 2024
Date after adding 2 months: Wed Jul 03 02:03:43 CDT 2024

================================================================

Sample: Collections_1
----------------------------------------------------------------
stdout:
Before shuffling: [1, 2, 3]
After shuffling: [3, 1, 2]

================================================================

Sample: Collections_2
----------------------------------------------------------------
stdout:
Original list: [Hello, World]
Reversed list: [World, Hello]

================================================================

Sample: Collections_4
----------------------------------------------------------------
stdout:
Before rotating: [A, B, C]
After rotating by 1: [C, A, B]

================================================================

Sample: Collections_5
----------------------------------------------------------------
stdout:
Frequency of 'apple' in the list: 2

================================================================

Sample: Currency_1
----------------------------------------------------------------
stdout:
Currency code: USD
Currency symbol: US$

================================================================

Sample: Currency_2
----------------------------------------------------------------
stdout:
Default fraction digits for USD: 2

================================================================

Sample: Currency_3
----------------------------------------------------------------
stdout:
Display name for USD in en-US locale: US Dollar

================================================================

Sample: Currency_4
----------------------------------------------------------------
stdout:
Currency Code: USD

================================================================

Sample: Currency_5
----------------------------------------------------------------
stdout:
Currency symbol: US$

================================================================

Sample: Date_2
----------------------------------------------------------------
stdout:
Current time in milliseconds: 1714287835659

================================================================

Sample: Date_3
----------------------------------------------------------------
stdout:
Current Date: Sun Apr 28 02:03:56 CDT 2024
Updated Date: Wed May 26 07:18:50 CDT 2021

================================================================

Sample: Date_4
----------------------------------------------------------------
stdout:
Is the specified date before the current date? false

stderr:
Note: ./Data/java_util/javaFiles/Date_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Date_5
----------------------------------------------------------------
stdout:
Is futureDate after currentDate? true

================================================================

Sample: Dictionary_2
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Dictionary_4
----------------------------------------------------------------
stdout:
Is Dictionary empty? true

================================================================

Sample: Dictionary_5
----------------------------------------------------------------
stdout:
Size of the dictionary: 3

================================================================

Sample: DoubleSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count: 3
Sum: 46.5
Min: 10.5
Max: 20.3
Average: 15.5

================================================================

Sample: DoubleSummaryStatistics_2
----------------------------------------------------------------
stdout:
Count: 3

================================================================

Sample: DoubleSummaryStatistics_3
----------------------------------------------------------------
stdout:
Sum of values: 46.5

================================================================

Sample: DoubleSummaryStatistics_4
----------------------------------------------------------------
stdout:
Average: 3.56

================================================================

Sample: DoubleSummaryStatistics_5
----------------------------------------------------------------
stdout:
Max value: 20.3

================================================================

Sample: EnumMap_1
----------------------------------------------------------------
stdout:
{MONDAY=First day of the week}

================================================================

Sample: EnumMap_2
----------------------------------------------------------------
stdout:
FF0000
00FF00
null

================================================================

Sample: EnumMap_4
----------------------------------------------------------------
stdout:
[Work, Study]

================================================================

Sample: EventListenerProxy_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/EventListenerProxy_2.java:8: error: EventListenerProxy is abstract; cannot be instantiated
        EventListenerProxy proxy = new EventListenerProxy(MyListenerInterface.class, listener);
                                   ^
1 error


================================================================

Sample: EventObject_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/EventObject_1.java:3: error: class CustomEventObject is public, should be declared in a file named CustomEventObject.java
public class CustomEventObject extends EventObject {
       ^
1 error


================================================================

Sample: EventObject_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/EventObject_2.java:5: error: non-static variable this cannot be referenced from a static context
        EventObject event = new EventObject(this);
                                            ^
1 error


================================================================

Sample: Formatter_2
----------------------------------------------------------------
stdout:
The cow jumped over the moon
================================================================

Sample: Formatter_3
----------------------------------------------------------------
stdout:
Hello, World

================================================================

Sample: Formatter_5
----------------------------------------------------------------
stdout:
Hello, John! Today is 2024-04-28

================================================================

Sample: GregorianCalendar_3
----------------------------------------------------------------
stdout:
Current date: Sun Apr 28 02:04:19 CDT 2024
Date after adding 1 month: Tue May 28 02:04:19 CDT 2024

================================================================

Sample: GregorianCalendar_4
----------------------------------------------------------------
stdout:
true

================================================================

Sample: GregorianCalendar_5
----------------------------------------------------------------
stdout:
Actual Maximum Year: 292278994
Actual Maximum Week of Year: 52

================================================================

Sample: HashMap_1
----------------------------------------------------------------
stdout:
Value at key 2: Two

================================================================

Sample: HashMap_2
----------------------------------------------------------------
stdout:
{One=1, Two=2}

================================================================

Sample: HashMap_3
----------------------------------------------------------------
stdout:
Key 'One' exists in the map: true

================================================================

Sample: HashMap_4
----------------------------------------------------------------
stdout:
Size of HashMap: 2

================================================================

Sample: HashMap_5
----------------------------------------------------------------
stdout:
Before removal: {One=1, Two=2}
Removed value: 1
After removal: {Two=2}

================================================================

Sample: HashSet_1
----------------------------------------------------------------
stdout:
Element added successfully: true

================================================================

Sample: HashSet_2
----------------------------------------------------------------
stdout:
Element removed: true
Updated HashSet: []

================================================================

Sample: HashSet_3
----------------------------------------------------------------
stdout:
[Hello]
[]

================================================================

Sample: HashSet_4
----------------------------------------------------------------
stdout:
Contains 'Hello': true

================================================================

Sample: HashSet_5
----------------------------------------------------------------
stdout:
Size of the HashSet: 2

================================================================

Sample: Hashtable_1
----------------------------------------------------------------
stdout:
1

================================================================

Sample: Hashtable_2
----------------------------------------------------------------
stdout:
{3=Three, 2=Two, 1=One}

================================================================

Sample: Hashtable_3
----------------------------------------------------------------
stdout:
Hashtable before removal: {2=Two, 1=One}
Removed value: One
Hashtable after removal: {2=Two}

================================================================

Sample: Hashtable_4
----------------------------------------------------------------
stdout:
true
false

================================================================

Sample: Hashtable_5
----------------------------------------------------------------
stdout:
Hashtable before clear: {2=Two, 1=One}
Hashtable after clear: {}

================================================================

Sample: IdentityHashMap_1
----------------------------------------------------------------
stdout:
{Two=2, One=1}

================================================================

Sample: IdentityHashMap_2
----------------------------------------------------------------
stdout:
Value for key 'one': 1

================================================================

Sample: IdentityHashMap_3
----------------------------------------------------------------
stdout:
Contains key 1: true

================================================================

Sample: IdentityHashMap_4
----------------------------------------------------------------
stdout:
Contains value 'One': true

================================================================

Sample: IdentityHashMap_5
----------------------------------------------------------------
stdout:
Map before removal: {One=1, Two=2}
Map after removal: {Two=2}

================================================================

Sample: IntSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count: 10

================================================================

Sample: IntSummaryStatistics_2
----------------------------------------------------------------
stdout:
Sum: 15

================================================================

Sample: IntSummaryStatistics_3
----------------------------------------------------------------
stdout:
3.0

================================================================

Sample: IntSummaryStatistics_4
----------------------------------------------------------------
stdout:
Minimum value: 5

================================================================

Sample: IntSummaryStatistics_5
----------------------------------------------------------------
stdout:
Max value: 10

================================================================

Sample: LinkedHashMap_1
----------------------------------------------------------------
stdout:
Value for key 'Two': 2

================================================================

Sample: LinkedHashMap_4
----------------------------------------------------------------
stdout:
[1, 2, 3]

================================================================

Sample: LinkedHashMap_5
----------------------------------------------------------------
stdout:
Values in LinkedHashMap: [One, Two]

================================================================

Sample: LinkedList_1
----------------------------------------------------------------
stdout:
Initial list: [World]
List after adding element at first: [Hello, World]

================================================================

Sample: LinkedList_2
----------------------------------------------------------------
stdout:
[Hello]

================================================================

Sample: LinkedList_3
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: LinkedList_4
----------------------------------------------------------------
stdout:
Last Element: Orange

================================================================

Sample: LinkedList_5
----------------------------------------------------------------
stdout:
Before removing first element: [Apple, Banana, Cherry]
After removing first element: [Banana, Cherry]

================================================================

Sample: ListResourceBundle_2
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ListResourceBundle_2.java:5: error: class MyResourceBundle is public, should be declared in a file named MyResourceBundle.java
public class MyResourceBundle extends ListResourceBundle {
       ^
1 error


================================================================

Sample: ListResourceBundle_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/ListResourceBundle_3.java:3: error: class MyResourceBundle is public, should be declared in a file named MyResourceBundle.java
public class MyResourceBundle extends ListResourceBundle {
       ^
1 error


================================================================

Sample: Locale_Builder_1
----------------------------------------------------------------
stdout:
Locale: en_US

================================================================

Sample: Locale_Builder_2
----------------------------------------------------------------
stdout:
Language: en

================================================================

Sample: Locale_Builder_3
----------------------------------------------------------------
stdout:
Locale with region set: _US

================================================================

Sample: Locale_Builder_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.IllformedLocaleException: Ill-formed variant: US [at index 0]
	at java.base/java.util.Locale$Builder.setVariant(Locale.java:2698)
	at Locale_Builder_4.main(Locale_Builder_4.java:6)

================================================================

Sample: Locale_Builder_5
----------------------------------------------------------------
stdout:
x-testing

================================================================

Sample: Locale_LanguageRange_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Locale_LanguageRange_1.java:5: error: method getRange in class LanguageRange cannot be applied to given types;
        String range = Locale.LanguageRange.getRange("en-US");
                                           ^
  required: no arguments
  found:    String
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: Locale_LanguageRange_2
----------------------------------------------------------------
stdout:
Weight: 0.5

================================================================

Sample: Locale_LanguageRange_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Locale_LanguageRange_3.java:5: error: incompatible types: List<LanguageRange> cannot be converted to LanguageRange
        Locale.LanguageRange languageRange = Locale.LanguageRange.parse("en");
                                                                       ^
1 error


================================================================

Sample: Locale_LanguageRange_5
----------------------------------------------------------------
stdout:
Are the language ranges equal? false

================================================================

Sample: LongSummaryStatistics_1
----------------------------------------------------------------
stdout:
Count: 5

================================================================

Sample: LongSummaryStatistics_2
----------------------------------------------------------------
stdout:
Sum of the numbers: 15

================================================================

Sample: LongSummaryStatistics_3
----------------------------------------------------------------
stdout:
Average: 3.0

================================================================

Sample: LongSummaryStatistics_4
----------------------------------------------------------------
stdout:
Max value: 30

================================================================

Sample: LongSummaryStatistics_5
----------------------------------------------------------------
stdout:
Minimum value: 1

================================================================

Sample: Objects_1
----------------------------------------------------------------
stdout:
Are objects equal? true

================================================================

Sample: Objects_2
----------------------------------------------------------------
stdout:
Hash code for "Hello": 69609650

================================================================

Sample: Objects_3
----------------------------------------------------------------
stdout:
obj1 is null: true
obj2 is null: false

================================================================

Sample: Objects_4
----------------------------------------------------------------
stdout:
java.lang.Object@289d1c02

================================================================

Sample: Objects_5
----------------------------------------------------------------
stdout:
Comparing using naturalOrder comparator: -1

================================================================

Sample: Observable_1
----------------------------------------------------------------
stderr:
Note: ./Data/java_util/javaFiles/Observable_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_2
----------------------------------------------------------------
stderr:
Note: ./Data/java_util/javaFiles/Observable_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_3.java:13: error: setChanged() has protected access in Observable
        observable.setChanged();
                  ^
Note: ./Data/java_util/javaFiles/Observable_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: Observable_4
----------------------------------------------------------------
stdout:
Number of observers: 0

stderr:
Note: ./Data/java_util/javaFiles/Observable_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: Observable_5
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Observable_5.java:22: error: cannot find symbol
class CustomObserver implements Observer {
                                ^
  symbol: class Observer
./Data/java_util/javaFiles/Observable_5.java:9: error: incompatible types: CustomObserver cannot be converted to Observer
        observable.addObserver(observer1);
                               ^
./Data/java_util/javaFiles/Observable_5.java:10: error: incompatible types: CustomObserver cannot be converted to Observer
        observable.addObserver(observer2);
                               ^
./Data/java_util/javaFiles/Observable_5.java:23: error: method does not override or implement a method from a supertype
    @Override
    ^
Note: ./Data/java_util/javaFiles/Observable_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
4 errors


================================================================

Sample: Optional_1
----------------------------------------------------------------
stdout:
Is value present? true
Is empty optional present? false

================================================================

Sample: Optional_2
----------------------------------------------------------------
stdout:
Value: Value

================================================================

Sample: Optional_3
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: Optional_4
----------------------------------------------------------------
stdout:
HELLO

================================================================

Sample: Optional_5
----------------------------------------------------------------
stdout:
Value: Hello

================================================================

Sample: OptionalDouble_1
----------------------------------------------------------------
stdout:
OptionalDouble.empty

================================================================

Sample: OptionalDouble_2
----------------------------------------------------------------
stdout:
Value present: 10.5

================================================================

Sample: OptionalDouble_3
----------------------------------------------------------------
stdout:
Is a value present? true

================================================================

Sample: OptionalDouble_4
----------------------------------------------------------------
stdout:
Value: 5.6

================================================================

Sample: OptionalDouble_5
----------------------------------------------------------------
stdout:
Value: 10.5

================================================================

Sample: OptionalLong_1
----------------------------------------------------------------
stdout:
false

================================================================

Sample: OptionalLong_2
----------------------------------------------------------------
stdout:
OptionalLong value: 10

================================================================

Sample: OptionalLong_3
----------------------------------------------------------------
stdout:
Result 1: 10
Result 2: 5

================================================================

Sample: OptionalLong_4
----------------------------------------------------------------
stdout:
Result: 10

================================================================

Sample: OptionalLong_5
----------------------------------------------------------------
stdout:
Value present: 10

================================================================

Sample: Properties_1
----------------------------------------------------------------
stdout:
Value for key1: value1

================================================================

Sample: Properties_4
----------------------------------------------------------------
================================================================

Sample: Properties_5
----------------------------------------------------------------
stdout:
value1
value2

================================================================

Sample: PropertyPermission_2
----------------------------------------------------------------
stdout:
Actions allowed on property: read

================================================================

Sample: PropertyPermission_5
----------------------------------------------------------------
stdout:
Permission implies: true

================================================================

Sample: PropertyResourceBundle_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name example.properties, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at PropertyResourceBundle_2.main(PropertyResourceBundle_2.java:7)

================================================================

Sample: ResourceBundle_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MessagesBundle, locale en_US
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:932)
	at ResourceBundle_1.main(ResourceBundle_1.java:7)

================================================================

Sample: ResourceBundle_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:932)
	at ResourceBundle_2.main(ResourceBundle_2.java:7)

================================================================

Sample: ResourceBundle_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name ExampleBundle, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_3.main(ResourceBundle_3.java:6)

================================================================

Sample: ResourceBundle_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name example, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_4.main(ResourceBundle_4.java:5)

================================================================

Sample: ResourceBundle_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.util.MissingResourceException: Can't find bundle for base name MyResources, locale en_CA
	at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
	at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
	at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
	at ResourceBundle_5.main(ResourceBundle_5.java:5)

================================================================

Sample: ResourceBundle_Control_1
----------------------------------------------------------------
stdout:
[java.class, java.properties]

================================================================

Sample: ResourceBundle_Control_2
----------------------------------------------------------------
stdout:
Fallback Locale: en

================================================================

Sample: ResourceBundle_Control_3
----------------------------------------------------------------
stdout:
Candidate Locales:
en


================================================================

Sample: ResourceBundle_Control_5
----------------------------------------------------------------
stdout:
Time to live for MyResources in en_US is 3600000 milliseconds.

================================================================

Sample: Scanner_1
----------------------------------------------------------------
stdout:
Enter a string: You entered: in case

================================================================

Sample: Scanner_2
----------------------------------------------------------------
stdout:
Enter an integer:

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextInt(Scanner.java:2258)
	at java.base/java.util.Scanner.nextInt(Scanner.java:2212)
	at Scanner_2.main(Scanner_2.java:7)

================================================================

Sample: Scanner_3
----------------------------------------------------------------
stdout:
Enter a double number: 

stderr:
Exception in thread "main" java.util.InputMismatchException
	at java.base/java.util.Scanner.throwFor(Scanner.java:939)
	at java.base/java.util.Scanner.next(Scanner.java:1594)
	at java.base/java.util.Scanner.nextDouble(Scanner.java:2564)
	at Scanner_3.main(Scanner_3.java:8)

================================================================

Sample: Scanner_4
----------------------------------------------------------------
stdout:
Enter a number: 
Please enter a valid integer.

================================================================

Sample: Scanner_5
----------------------------------------------------------------
stdout:
Enter your name: 
Hello, in case

================================================================

Sample: ServiceLoader_2
----------------------------------------------------------------
================================================================

Sample: SimpleTimeZone_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/SimpleTimeZone_1.java:5: error: no suitable constructor found for SimpleTimeZone(no arguments)
        SimpleTimeZone timeZone = new SimpleTimeZone();
                                  ^
    constructor SimpleTimeZone.SimpleTimeZone(int,String) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
    constructor SimpleTimeZone.SimpleTimeZone(int,String,int,int,int,int,int,int,int,int,int,int,int) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: SimpleTimeZone_2
----------------------------------------------------------------
================================================================

Sample: SimpleTimeZone_3
----------------------------------------------------------------
================================================================

Sample: SimpleTimeZone_4
----------------------------------------------------------------
stdout:
Uses Daylight Time: false

================================================================

Sample: SimpleTimeZone_5
----------------------------------------------------------------
stdout:
Raw offset: 0

================================================================

Sample: Spliterators_2
----------------------------------------------------------------
================================================================

Sample: Spliterators_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Spliterators_3.java:9: error: cannot find symbol
        Spliterator<String> spliterator = Spliterators.spliterator(list.iterator(), list.size(), Spliterator.ORDERED);
                                          ^
  symbol:   variable Spliterators
  location: class Spliterators_3
1 error


================================================================

Sample: Spliterators_4
----------------------------------------------------------------
stdout:
Apple
Banana
Orange

================================================================

Sample: Spliterators_5
----------------------------------------------------------------
stdout:
1
2
3
4
5

================================================================

Sample: Spliterators_AbstractDoubleSpliterator_1
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Spliterators_AbstractDoubleSpliterator_1.java:5: error: <anonymous Spliterators_AbstractDoubleSpliterator_1$1> is not abstract and does not override abstract method tryAdvance(DoubleConsumer) in OfDouble
        Spliterators.AbstractDoubleSpliterator doubleSpliterator = new Spliterators.AbstractDoubleSpliterator(0, 0) {
                                                                                                                    ^
1 error


================================================================

Sample: Spliterators_AbstractIntSpliterator_3
----------------------------------------------------------------
output:
./Data/java_util/javaFiles/Spliterators_AbstractIntSpliterator_3.java:6: error: non-static method estimateSize() cannot be referenced from a static context
        int estimate = MySpliterator.estimateSize();
                                    ^
./Data/java_util/javaFiles/Spliterators_AbstractIntSpliterator_3.java:6: error: incompatible types: possible lossy conversion from long to int
        int estimate = MySpliterator.estimateSize();
                                                 ^
./Data/java_util/javaFiles/Spliterators_AbstractIntSpliterator_3.java:10: error: MySpliterator is not abstract and does not override abstract method tryAdvance(IntConsumer) in OfInt
    static class MySpliterator extends Spliterators.AbstractIntSpliterator {
           ^
3 errors


================================================================

Sample: Spliterators_AbstractSpliterator_3
----------------------------------------------------------------
stdout:
Element: 3
Element: 4
Element: 5
-----
TrySplit Element: 1
TrySplit Element: 2

================================================================

Sample: SplittableRandom_1
----------------------------------------------------------------
stdout:
Random Number: 5

================================================================

Sample: SplittableRandom_2
----------------------------------------------------------------
stdout:
Random double: 0.0031923813912897447

================================================================

Sample: SplittableRandom_3
----------------------------------------------------------------
stdout:
Random long number: 6247931734566972579

================================================================

Sample: SplittableRandom_4
----------------------------------------------------------------
stdout:
Random number: -202750202

================================================================

Sample: SplittableRandom_5
----------------------------------------------------------------
stdout:
Random Boolean: false

================================================================

Sample: Stack_1
----------------------------------------------------------------
stdout:
Is stack empty? true

================================================================

Sample: Stack_2
----------------------------------------------------------------
stdout:
Top element of the stack: 3

================================================================

Sample: Stack_3
----------------------------------------------------------------
stdout:
Stack before pop: [1, 2, 3]
Popped element: 3
Stack after pop: [1, 2]

================================================================

Sample: Stack_5
----------------------------------------------------------------
stdout:
Position of 2 in the stack: 2
Position of 4 in the stack: -1

================================================================

Sample: StringJoiner_1
----------------------------------------------------------------
stdout:
Hello,World

================================================================

Sample: StringJoiner_2
----------------------------------------------------------------
stdout:
Apple,Banana,Orange

================================================================

Sample: StringJoiner_3
----------------------------------------------------------------
stdout:
[John, Doe, Jane]

================================================================

Sample: StringJoiner_4
----------------------------------------------------------------
stdout:
Joined String: Hello-World
Length of joined String: 11

================================================================

Sample: StringJoiner_5
----------------------------------------------------------------
stdout:
John,Doe,Jane
No names listed

================================================================

Sample: StringTokenizer_1
----------------------------------------------------------------
stdout:
This
is
a
test
sentence

================================================================

Sample: StringTokenizer_2
----------------------------------------------------------------
stdout:
Hello
 World
 Java

================================================================

Sample: StringTokenizer_3
----------------------------------------------------------------
stdout:
Hello
World
Java

================================================================

Sample: StringTokenizer_4
----------------------------------------------------------------
stdout:
Number of tokens: 2

================================================================

Sample: Timer_1
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_2
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_3
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_4
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: Timer_5
----------------------------------------------------------------
================================================================

Sample: TimerTask_1
----------------------------------------------------------------
stdout:
Task cancelled: false

================================================================

Sample: TimerTask_2
----------------------------------------------------------------
stdout:
Task executed at: 0

================================================================

Sample: TimerTask_4
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: TimeZone_1
----------------------------------------------------------------
stdout:
Default Time Zone Display Name: Central Standard Time

================================================================

Sample: TimeZone_2
----------------------------------------------------------------
stdout:
Time Zone ID: America/Winnipeg

================================================================

Sample: TimeZone_3
----------------------------------------------------------------
stdout:
Offset: -18000000

================================================================

Sample: TimeZone_4
----------------------------------------------------------------
stdout:
Raw offset: 10800000

================================================================

Sample: TimeZone_5
----------------------------------------------------------------
stdout:
Uses Daylight Time: true

================================================================

Sample: TreeMap_1
----------------------------------------------------------------
stdout:
{A=1, B=2, C=3}

================================================================

Sample: TreeMap_2
----------------------------------------------------------------
stdout:
Before removal: {1=One, 2=Two}
After removal: {1=One}

================================================================

Sample: TreeMap_5
----------------------------------------------------------------
stdout:
Map contains key 1: true

================================================================

Sample: TreeSet_1
----------------------------------------------------------------
stdout:
20

================================================================

Sample: TreeSet_2
----------------------------------------------------------------
stdout:
TreeSet elements: [3, 5, 8]

================================================================

Sample: TreeSet_3
----------------------------------------------------------------
stdout:
Set elements: [1, 2, 3]
Elements less than 2 (headSet): [1]

================================================================

Sample: TreeSet_4
----------------------------------------------------------------
stdout:
Original Set: [1, 2, 3, 4]
Tail Set starting from element 2: [2, 3, 4]

================================================================

Sample: TreeSet_5
----------------------------------------------------------------
stdout:
TreeSet before pollFirst(): [3, 5, 8]
First element removed: 3
TreeSet after pollFirst(): [5, 8]

================================================================

Sample: UUID_1
----------------------------------------------------------------
stdout:
Random UUID: 07b77053-20ce-47be-96f2-f59e96ffe46c

================================================================

Sample: UUID_2
----------------------------------------------------------------
stdout:
Generated UUID: 1a79a4d6-0de6-318e-8e5b-326e338ae533

================================================================

Sample: UUID_3
----------------------------------------------------------------
stdout:
Most Significant Bits: 2614044491901190629

================================================================

Sample: UUID_4
----------------------------------------------------------------
stdout:
Least Significant Bits: -8185627787962857663

================================================================

Sample: UUID_5
----------------------------------------------------------------
stdout:
UUIDs are equal

================================================================

Sample: Vector_3
----------------------------------------------------------------
stdout:
Vector before removal: [Apple, Banana, Orange]
Element 'Banana' removed: true
Vector after removal: [Apple, Orange]

================================================================

Sample: Vector_4
----------------------------------------------------------------
stdout:
Size of the vector: 3

================================================================

Sample: Vector_5
----------------------------------------------------------------
stdout:
Initial Vector: [1, 2, 3]
Vector after resizing: [1, 2, 3, null, null]

================================================================

Sample: WeakHashMap_2
----------------------------------------------------------------
stdout:
Value for key 'One': 1
Value for key 'Two': 2
Value for key 'Three': null

================================================================

Sample: WeakHashMap_3
----------------------------------------------------------------
stdout:
Key 'One' exists in map: true

================================================================

Sample: WeakHashMap_4
----------------------------------------------------------------
stdout:
Before removal: {3=Three, 2=Two, 1=One}
After removal: {3=Three, 1=One}

================================================================

Sample: WeakHashMap_5
----------------------------------------------------------------
stdout:
Size of WeakHashMap: 2

================================================================

