Sample: 0 MidiDeviceProvider
----------------------------------------------------------------
1. `MidiDevice.Info[] getDeviceInfo()`: This method returns an array of MidiDevice.Info objects representing available MIDI devices.
2. `MidiDevice getDevice(MidiDevice.Info info)`: This method returns a MidiDevice instance based on the provided MidiDevice.Info object.
3. `boolean isDeviceSupported(MidiDevice.Info info)`: This method checks if a specific MIDI device is supported by the provider.
4. `MidiDevice getDevice()`: This method returns a default MidiDevice provided by this provider.
5. `MidiDevice.Info[] getDeviceInfo(MidiDevice.Info[] infos)`: This method filters and returns an array of MidiDevice.Info objects based on the provided array of MidiDevice.Info objects.
================================================================

Sample: 1 MidiFileReader
----------------------------------------------------------------
1. `Sequence getSequence(File file)`: This method returns a Sequence object representing the MIDI data from the specified file.
2. `Sequence getSequence(InputStream stream)`: This method returns a Sequence object representing the MIDI data from the specified input stream.
3. `int[] getMidiFileFormatTypes()`: This method returns an array of supported MIDI file format types.
4. `int[] getMidiFileTypes()`: This method returns an array of supported MIDI file types.
5. `boolean isMidiFile(InputStream stream)`: This method checks if the specified input stream represents a valid MIDI file.
================================================================

Sample: 2 MidiFileWriter
----------------------------------------------------------------
1. `int write`(): This method writes the MIDI data from a Sequencer to a file.
2. `int write(Sequence sequence, int fileType, File file)`: This method writes the specified Sequence data to the specified file with the specified file type.
3. `int write(Sequence sequence, int fileType, OutputStream stream)`: This method writes the specified Sequence data to the specified output stream with the specified file type.
4. `int[] getMidiFileTypes()`: This method returns an array of integer constants representing the supported MIDI file types.
5. `int[] getMidiFileTypes(Sequence sequence)`: This method returns an array of integer constants representing the supported MIDI file types for the specified Sequence.
================================================================

Sample: 3 SoundbankReader
----------------------------------------------------------------
1. `Soundbank getSoundbank(InputStream inputStream)`: This method retrieves a Soundbank object from the provided input stream.
2. `Soundbank getSoundbank(URL url)`: This method retrieves a Soundbank object from the provided URL.
3. `Soundbank getSoundbank(File file)`: This method retrieves a Soundbank object from the provided file.
4. `Soundbank getSoundbank(): This method retrieves the default Soundbank object.
5. `Instrument getInstrument(Soundbank soundbank, Patch patch)`: This method retrieves the Instrument object associated with the specified Patch from the provided Soundbank.
================================================================

