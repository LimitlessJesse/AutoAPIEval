Sample: 0 ArrayType
----------------------------------------------------------------
1. `ArrayType<ElementType> clone()`: This method creates a shallow clone of this ArrayType instance.
2. `String getTypeName()`: This method returns the name of the described type.
3. `List<String> getDescription()`: This method returns an unmodifiable list view of descriptions of the role strings.
4. `int getDimension()`: This method returns the dimension of this ArrayType.
5. `OpenType<?> getElementType()`: This method returns the type of the elements of this array type.
================================================================

Sample: 1 CompositeDataInvocationHandler
----------------------------------------------------------------
1. `Object get(String key)`: This method returns the value of the entry with the specified key.
   
2. `boolean containsKey(String key)`: This method checks if the CompositeData instance contains the specified key.

3. `Set<String> keySet()`: This method returns a Set view of the keys contained in the CompositeData instance.

4. `Collection<Object> values()`: This method returns a Collection view of the values contained in the CompositeData instance.

5. `boolean equals(Object obj)`: This method compares the specified object with this CompositeData for equality.
================================================================

Sample: 2 CompositeDataSupport
----------------------------------------------------------------
1. `Object get(String key)`: This method returns the value associated with the specified key in the CompositeDataSupport instance.
   
2. `String[] getCompositeType()`: This method returns the names of the items in the CompositeType that represents the type of this CompositeDataSupport instance.

3. `boolean containsKey(String key)`: This method checks if the CompositeDataSupport instance contains the specified key.

4. `TabularData toTabularData(String tabularType)`: This method converts the CompositeDataSupport instance into a TabularData with the specified tabularType.

5. `String toString()`: This method returns a string representation of the CompositeDataSupport instance.
================================================================

Sample: 3 CompositeType
----------------------------------------------------------------
1. `String getTypeName()`: This method returns the type name of the composite type.
2. `CompositeData from(Map<String, ?> items)`: This method creates a CompositeData instance from a map of item values.
3. `Set<String> keySet()`: This method returns the set of keys corresponding to the items in the composite type.
4. `String getDescription()`: This method returns the description of the composite type.
5. `boolean isValue(Object obj)`: This method checks if the specified object is a valid value for the composite type.
================================================================

Sample: 4 OpenMBeanAttributeInfoSupport
----------------------------------------------------------------
1. `String getType()`: This method returns the data type of the attribute.
2. `boolean isWritable()`: This method returns true if the attribute is writable, false otherwise.
3. `boolean isReadable()`: This method returns true if the attribute is readable, false otherwise.
4. `String getDescription()`: This method returns a description of the attribute.
5. `String getName()`: This method returns the name of the attribute.
================================================================

Sample: 5 OpenMBeanConstructorInfoSupport
----------------------------------------------------------------
1. `String getDescription()`: This method returns a human-readable description of the constructor.
2. `String getName()`: This method returns the name of the constructor.
3. `String getReturnType()`: This method returns the return type of the constructor.
4. `String getSignature()`: This method returns the signature of the constructor.
5. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects, each element describing a parameter of the constructor.
================================================================

Sample: 6 OpenMBeanInfoSupport
----------------------------------------------------------------
1. `String getClassName()`: This method returns the class name of the MBean described by this OpenMBeanInfoSupport instance.
2. `MBeanOperationInfo[] getOperations()`: This method returns an array of MBeanOperationInfo objects for the operations of the MBean described by this OpenMBeanInfoSupport instance.
3. `MBeanAttributeInfo[] getAttributes()`: This method returns an array of MBeanAttributeInfo objects for the attributes of the MBean described by this OpenMBeanInfoSupport instance.
4. `MBeanConstructorInfo[] getConstructors()`: This method returns an array of MBeanConstructorInfo objects for the constructors of the MBean described by this OpenMBeanInfoSupport instance.
5. `MBeanNotificationInfo[] getNotifications()`: This method returns an array of MBeanNotificationInfo objects for the notifications of the MBean described by this OpenMBeanInfoSupport instance.
================================================================

Sample: 7 OpenMBeanOperationInfoSupport
----------------------------------------------------------------
1. `String getDescription()`: This method returns the description of the operation.
2. `String getName()`: This method returns the name of the operation.
3. `OpenType<?> getReturnType()`: This method returns the OpenType of the operation's return value.
4. `String getReturnOpenType()`: This method returns the OpenType class name of the operation's return value.
5. `String[] getSignature()` : This method returns an array of the names of the operation's parameters.
================================================================

Sample: 8 OpenMBeanParameterInfoSupport
----------------------------------------------------------------
1. `String getDescription()`: This method returns the description of the parameter.
2. `String getName()`: This method returns the name of the parameter.
3. `Object getDescriptor()`: This method returns the descriptor of the parameter.
4. `String getOpenType()`: This method returns the open type of the parameter.
5. `int getParameterIndex()`: This method returns the index of the parameter.
================================================================

Sample: 9 OpenType
----------------------------------------------------------------
1. OpenType[] getAllCompositeTypes()
   - Return type: OpenType[]
   
2. OpenType getArrayType()
   - Return type: OpenType
   
3. String getDescription()
   - Return type: String
   
4. String[] getLegalValues()
   - Return type: String[]
   
5. boolean isValue(Object obj)
   - Return type: boolean
================================================================

Sample: 10 SimpleType
----------------------------------------------------------------
1. `SimpleType<?> SimpleType.of(Class<?> valueType)`: This method creates a SimpleType instance for a specified value type.
2. `SimpleType<?> SimpleType.getType(String typeName)`: This method returns the SimpleType instance for a given type name.
3. `boolean SimpleType.isArray(SimpleType<?> type)`: This method checks if a given SimpleType instance represents an array type.
4. `boolean SimpleType.isPrimitive(SimpleType<?> type)`: This method checks if a given SimpleType instance represents a primitive type.
5. `String SimpleType.getClassName(SimpleType<?> type)`: This method returns the class name of a given SimpleType instance.
================================================================

Sample: 11 TabularDataSupport
----------------------------------------------------------------
1. `void put(CompositeData key, CompositeData value)`: This method associates the specified value with the specified key in this TabularDataSupport instance.
2. `Object remove(CompositeData key)`: This method removes the key (and its corresponding value) from this TabularDataSupport instance.
3. `void clear()`: This method clears all key-value mappings from this TabularDataSupport instance.
4. `boolean isEmpty()`: This method returns true if this TabularDataSupport instance contains no key-value mappings.
5. `int size()`: This method returns the number of key-value mappings in this TabularDataSupport instance.
================================================================

Sample: 12 TabularType
----------------------------------------------------------------
1. `TabularType clone()`: This method creates and returns a copy of this TabularType instance.
2. `String getDescription()`: This method returns the description of the row type.
3. `String getKeyPropertyList()`: This method returns the list of key properties that uniquely identify each row in the table represented by this TabularType.
4. `String[] getIndexNames()`: This method returns an array of strings describing the names of the open index columns of this TabularType instance.
5. `Map<String, OpenType<?>> getRowType().get(name)`: This method returns the row type describing the type of the rows of the table represented by this TabularType instance.
================================================================

