Sample: 0 Attributes
----------------------------------------------------------------
1. `Object putValue(Name name, String value)`: This method associates the specified value with the specified attribute name in this Attributes object.
2. `String getValue(Name name)`: This method returns the value associated with the specified attribute name, or null if the attribute is not present in the Attributes object.
3. `Object remove(Name name)`: This method removes the attribute with the specified name from the Attributes object and returns the value of the removed attribute.
4. `Set<Map.Entry<Object,Object>> entrySet()`: This method returns a set view of the mappings contained in this Attributes object.
5. `void clear()`: This method clears all attributes from the Attributes object.
================================================================

Sample: 1 Attributes.Name
----------------------------------------------------------------
1. `String toString()`: This method returns a string representation of this Attributes.Name object.
2. `int hashCode()`: This method returns the hash code value for this Attributes.Name object.
3. `boolean equals(Object obj)`: This method compares this Attributes.Name object to the specified object.
4. `int compareTo(Attributes.Name name)`: This method compares this Attributes.Name object to another Attributes.Name object.
5. `String name()`: This method returns the name of this Attributes.Name object.
================================================================

Sample: 2 JarEntry
----------------------------------------------------------------
1. `String getName()`: This method returns the name of the JarEntry.
2. `long getTime()`: This method returns the last modification time of the entry.
3. `long getSize()`: This method returns the uncompressed size of the entry.
4. `InputStream getInputStream() throws IOException`: This method returns an input stream for reading the contents of the entry.
5. `Certificate[] getCertificates()`: This method returns the certificates of the entry, if available.
================================================================

Sample: 3 JarFile
----------------------------------------------------------------
1. `Enumeration<JarEntry> entries()`: This method returns an enumeration of the entries in the Jar file.
2. `JarEntry getJarEntry(String name)`: This method returns the Jar entry for the specified name, or null if not found.
3. `Manifest getManifest()`: This method returns the manifest of the Jar file.
4. `void close()`: This method closes the Jar file.
5. `Attributes getAttributes(String name)`: This method returns the attributes for the specified entry name.
================================================================

Sample: 4 JarInputStream
----------------------------------------------------------------
1. `JarEntry getNextJarEntry()`: Returns the next JarEntry in the JAR file or null if there are no more entries.
2. `byte[] getBytes()`: Returns an array of bytes for the current JarEntry.
3. `Manifest getManifest()`: Returns the Manifest object for the JAR file, or null if none exists.
4. `void closeEntry()`: Closes the current JarEntry and positions the stream for reading the next entry.
5. `int read()`: Reads the next byte of data from the input stream as an integer.
================================================================

Sample: 5 JarOutputStream
----------------------------------------------------------------
1. `void putNextEntry(ZipEntry e)`: This method puts the next ZIP file entry in this JAR file.
2. `void setComment(String comment)`: This method sets the comment string for this JAR file.
3. `void setLevel(int level)`: This method sets the compression level for this JAR file.
4. `void finish()`: This method finishes writing the contents of the JAR file without closing the stream.
5. `void closeEntry()`: This method closes the current ZIP entry and positions the stream for writing the next entry.
================================================================

Sample: 6 Manifest
----------------------------------------------------------------
1. `Attributes getMainAttributes()`: This method returns the main Attributes in this Manifest.
2. `Attributes getAttributes(String name)`: This method returns the specified Attributes name.
3. `String getMainAttributes(Attributes.Name name)`: This method returns a specific main Attributes name as a String.
4. `void clear()`: This method clears the manifest of all its entries.
5. `int size()`: This method returns the number of entries in this Manifest.
================================================================

Sample: 7 Pack200
----------------------------------------------------------------
1. `byte[] pack():` This method creates a packed version of the JAR file.
2. `void unpack(File target, JarFile file)`: This method unpacks a packed JAR file to a specific destination.
3. `void pack(JarOutputStream out)`: This method writes the packed representation of this JAR file to a JarOutputStream.
4. `void unpack(File target, InputStream in)`: This method unpacks a packed JAR file from an InputStream to a specific destination.
================================================================

