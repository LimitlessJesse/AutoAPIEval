Sample: AppConfigurationEntry_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException
	at java.base/javax.security.auth.login.AppConfigurationEntry.<init>(AppConfigurationEntry.java:84)
	at AppConfigurationEntry_2.main(AppConfigurationEntry_2.java:5)

================================================================

Sample: AppConfigurationEntry_LoginModuleControlFlag_2
----------------------------------------------------------------
stdout:
LoginModuleControlFlag: required

================================================================

Sample: Configuration_1
----------------------------------------------------------------
stdout:
No configuration entries found for the specified name.

================================================================

Sample: Configuration_2
----------------------------------------------------------------
================================================================

Sample: Configuration_3
----------------------------------------------------------------
output:
./Data/javax_security_auth_login/javaFiles/Configuration_3.java:6: error: Configuration is abstract; cannot be instantiated
        Configuration configuration = new Configuration();
                                      ^
1 error


================================================================

Sample: ConfigurationSpi_1
----------------------------------------------------------------
output:
./Data/javax_security_auth_login/javaFiles/ConfigurationSpi_1.java:7: error: cannot find symbol
        ConfigurationSpi configSpi = new CustomConfigurationSpi(); // CustomConfigurationSpi should extend ConfigurationSpi
                                         ^
  symbol:   class CustomConfigurationSpi
  location: class ConfigurationSpi_1
./Data/javax_security_auth_login/javaFiles/ConfigurationSpi_1.java:8: error: engineGetAppConfigurationEntry(String) has protected access in ConfigurationSpi
        AppConfigurationEntry[] entries = configSpi.engineGetAppConfigurationEntry(name);
                                                   ^
2 errors


================================================================

Sample: ConfigurationSpi_2
----------------------------------------------------------------
output:
./Data/javax_security_auth_login/javaFiles/ConfigurationSpi_2.java:6: error: <anonymous ConfigurationSpi_2$1> is not abstract and does not override abstract method engineGetAppConfigurationEntry(String) in ConfigurationSpi
        ConfigurationSpi configurationSpi = new ConfigurationSpi() {
                                                                   ^
./Data/javax_security_auth_login/javaFiles/ConfigurationSpi_2.java:14: error: engineRefresh() has protected access in ConfigurationSpi
        configurationSpi.engineRefresh();
                        ^
2 errors


================================================================

Sample: LoginContext_1
----------------------------------------------------------------
output:
./Data/javax_security_auth_login/javaFiles/LoginContext_1.java:15: error: cannot find symbol
    static class MyCallbackHandler implements CallbackHandler {
                                              ^
  symbol:   class CallbackHandler
  location: class LoginContext_1
./Data/javax_security_auth_login/javaFiles/LoginContext_1.java:17: error: cannot find symbol
        public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
                           ^
  symbol:   class Callback
  location: class MyCallbackHandler
./Data/javax_security_auth_login/javaFiles/LoginContext_1.java:17: error: cannot find symbol
        public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
                                                        ^
  symbol:   class IOException
  location: class MyCallbackHandler
./Data/javax_security_auth_login/javaFiles/LoginContext_1.java:17: error: cannot find symbol
        public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
                                                                     ^
  symbol:   class UnsupportedCallbackException
  location: class MyCallbackHandler
./Data/javax_security_auth_login/javaFiles/LoginContext_1.java:7: error: no suitable constructor found for LoginContext(String,MyCallbackHandler)
            LoginContext lc = new LoginContext("Sample", new MyCallbackHandler());
                              ^
    constructor LoginContext.LoginContext(String,Subject) is not applicable
      (argument mismatch; MyCallbackHandler cannot be converted to Subject)
    constructor LoginContext.LoginContext(String,CallbackHandler) is not applicable
      (argument mismatch; MyCallbackHandler cannot be converted to CallbackHandler)
./Data/javax_security_auth_login/javaFiles/LoginContext_1.java:16: error: method does not override or implement a method from a supertype
        @Override
        ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
6 errors


================================================================

Sample: LoginContext_2
----------------------------------------------------------------
output:
./Data/javax_security_auth_login/javaFiles/LoginContext_2.java:7: error: illegal start of expression
        void logout() {
        ^
./Data/javax_security_auth_login/javaFiles/LoginContext_2.java:7: error: ';' expected
        void logout() {
                   ^
2 errors


================================================================

Sample: LoginContext_3
----------------------------------------------------------------
output:
./Data/javax_security_auth_login/javaFiles/LoginContext_3.java:18: error: cannot find symbol
class MyCallbackHandler implements CallbackHandler {
                                   ^
  symbol: class CallbackHandler
./Data/javax_security_auth_login/javaFiles/LoginContext_3.java:8: error: no suitable constructor found for LoginContext(String,MyCallbackHandler)
            LoginContext loginContext = new LoginContext("Sample", new MyCallbackHandler());
                                        ^
    constructor LoginContext.LoginContext(String,Subject) is not applicable
      (argument mismatch; MyCallbackHandler cannot be converted to Subject)
    constructor LoginContext.LoginContext(String,CallbackHandler) is not applicable
      (argument mismatch; MyCallbackHandler cannot be converted to CallbackHandler)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

