Sample: 0 FileCacheImageInputStream
----------------------------------------------------------------
1. `int read()`: This method reads the next byte of data from the input stream.
2. `int read(byte[] b)`: This method reads up to b.length bytes of data from the input stream into an array of bytes.
3. `int read(byte[] b, int off, int len)`: This method reads up to len bytes of data from the input stream into an array of bytes.
4. `boolean isCached()`: This method returns true if the input data is being cached.
5. `void close()`: This method closes this input stream and releases any system resources associated with the stream.
================================================================

Sample: 1 FileCacheImageOutputStream
----------------------------------------------------------------
1. `void setByteOrder(ByteOrder byteOrder)`: This method sets the byte order for subsequent read and write operations.
2. `void setBitOffset(int bitOffset)`: This method sets the bit offset within the current byte where the next read or write operation will occur.
3. `long getStreamPosition()`: This method returns the current stream position.
4. `void write(int b)`: This method writes a byte to the output stream.
5. `void write(byte[] b, int off, int len)`: This method writes len bytes from the specified byte array starting at offset off to the output stream.
================================================================

Sample: 2 FileImageInputStream
----------------------------------------------------------------
1. `int read()`: This method reads the next byte of data from the input stream.
2. `int read(byte[] b)`: This method reads up to b.length bytes of data from the input stream into an array of bytes.
3. `boolean isCached()`: This method returns true if this stream caches data in memory or on disk, false otherwise.
4. `void setByteOrder(ByteOrder byteOrder)`: This method sets the byte order for reading data from the stream.
5. `ImageInputStreamSpi getOriginatingProvider()`: This method returns the service provider that created this stream.
================================================================

Sample: 3 FileImageOutputStream
----------------------------------------------------------------
1. `void write(byte[] b, int off, int len)`: This method writes len bytes from the specified byte array starting at offset off to this file output stream.
2. `void write(int b)`: This method writes the specified byte to this file output stream.
3. `void writeBoolean(boolean v)`: This method writes a boolean to the output stream as a one-byte value.
4. `void writeBytes(String s)`: This method writes out the string to the file as a sequence of bytes.
5. `void writeChar(int v)`: This method writes a char to the output stream as a two-byte value, high byte first.
================================================================

Sample: 4 IIOByteBuffer
----------------------------------------------------------------
1. `int length()`: This method returns the length of the IIOByteBuffer.
2. `byte get(int index)`: This method returns the byte at the specified index in the IIOByteBuffer.
3. `void put(int index, byte b)`: This method sets the byte at the specified index in the IIOByteBuffer to the specified value.
4. `void get(byte[] b, int offset, int len)`: This method reads len bytes from the IIOByteBuffer starting at the specified offset into the byte array b.
5. `void put(byte[] b, int offset, int len)`: This method writes len bytes from the byte array b starting at the specified offset into the IIOByteBuffer.
================================================================

Sample: 5 ImageInputStreamImpl
----------------------------------------------------------------
1. `int read()`: This method reads the next byte of data from the input stream.
2. `int read(byte[] b)`: This method reads up to b.length bytes of data from the input stream into an array of bytes.
3. `long readLong()`: This method reads eight bytes of data from the input stream and returns a long value.
4. `int readUnsignedShort()`: This method reads two bytes of data from the input stream and returns an int value representing an unsigned 16-bit short.
5. `void setByteOrder(ByteOrder byteOrder)`: This method sets the byte order for reading data from the input stream.
================================================================

Sample: 6 ImageOutputStreamImpl
----------------------------------------------------------------
1. `int read()`: This method reads the next byte of data from the input stream.
2. `int read(byte[] b, int off, int len)`: This method reads up to len bytes of data from the input stream into an array of bytes.
3. `void write(int b)`: This method writes the specified byte to the output stream.
4. `void write(byte[] b, int off, int len)`: This method writes len bytes from the specified byte array starting at offset off to the output stream.
5. `void writeBits(long bits, int numBits)`: This method writes a sequence of bits to the output stream.
================================================================

Sample: 7 MemoryCacheImageInputStream
----------------------------------------------------------------
1. `int read()`: This method reads the next byte of data from the input source.
2. `int read(byte[] b)`: This method reads up to b.length bytes of data from the input source into an array of bytes.
3. `int read(byte[] b, int off, int len)`: This method reads up to len bytes of data from the input source into an array of bytes starting at the specified offset.
4. `void seek(long pos)`: This method seeks to the specified position in the input source.
5. `long length()`: This method returns the length of the input source in bytes.
================================================================

Sample: 8 MemoryCacheImageOutputStream
----------------------------------------------------------------
1. `void write(int b)`: This method writes a byte to the output stream.
2. `void write(byte[] b, int off, int len)`: This method writes a subarray of bytes.
3. `void write(byte[] b)`: This method writes an array of bytes to the output stream.
4. `void writeBoolean(boolean v)`: This method writes a boolean to the output stream.
5. `void writeBytes(String s)`: This method writes a string as a sequence of bytes.
================================================================

