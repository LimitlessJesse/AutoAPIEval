Sample: 0 AbstractBorder_1
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.AbstractBorder;
import java.awt.Component;
import java.awt.Graphics;

public class Main {
    public static void main(String[] args) {
        // Usage of paintBorder method
    }

    static class CustomBorder extends AbstractBorder {
        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            // Custom border painting logic here
        }
    }
}
```
================================================================

Sample: 1 AbstractBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.AbstractBorder;
import java.awt.*;

public class Main {
    public static void main(String[] args) {
        AbstractBorder border = new AbstractBorder() {
            @Override
            public Insets getBorderInsets(Component c) {
                return new Insets(10, 10, 10, 10); // Example, you can modify the values accordingly
            }
        };

        // Example usage
        JButton button = new JButton("Click me");
        button.setBorder(border);
    }
}
```
================================================================

Sample: 2 AbstractBorder_3
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.AbstractBorder;

public class Main {
    public static void main(String[] args) {
        // Create an instance of AbstractBorder
        AbstractBorder border = new AbstractBorder() {
            @Override
            public boolean isBorderOpaque() {
                return true; // Returns true to indicate that the border is opaque
            }
        };
        
        // Call the isBorderOpaque method on the border instance
        boolean isOpaque = border.isBorderOpaque();
        System.out.println("Border is opaque: " + isOpaque);
    }
}
```
================================================================

Sample: 3 AbstractBorder_4
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.AbstractBorder;
import java.awt.Component;
import java.awt.Rectangle;

public class Main {
    public static void main(String[] args) {
        Component c = new Component() {};
        int x = 10;
        int y = 10;
        int width = 100;
        int height = 50;

        AbstractBorder border = new AbstractBorder() {
            @Override
            public Rectangle getInteriorRectangle(Component c, int x, int y, int width, int height) {
                return new Rectangle(x, y, width, height);
            }
        };

        Rectangle interiorRectangle = border.getInteriorRectangle(c, x, y, width, height);
        System.out.println("Interior Rectangle: " + interiorRectangle);
    }
}
```
================================================================

Sample: 4 BevelBorder_1
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.BevelBorder;

public class Main {
    public static void main(String[] args) {
        BevelBorder bevelBorder = new BevelBorder(BevelBorder.RAISED);
        int bevelType = bevelBorder.getBevelType();
        System.out.println("Bevel Type: " + bevelType);
    }
}
```
================================================================

Sample: 5 BevelBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.BevelBorder;

public class Main {
    public static void main(String[] args) {
        BevelBorder border = new BevelBorder(BevelBorder.RAISED);
        System.out.println("Highlight Outer Color: " + border.getHighlightOuterColor());
    }
}
```
================================================================

Sample: 6 BevelBorder_3
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.BevelBorder;
import java.awt.Color;

public class Main {
    public static void main(String[] args) {
        BevelBorder border = new BevelBorder(BevelBorder.LOWERED, Color.BLACK, Color.WHITE);
        Color shadowInnerColor = border.getShadowInnerColor();
        System.out.println("Shadow Inner Color: " + shadowInnerColor);
    }
}
```
================================================================

Sample: 7 BevelBorder_4
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.BevelBorder;
import java.awt.Color;

public class Main {
    public static void main(String[] args) {
        BevelBorder bevelBorder = new BevelBorder(BevelBorder.RAISED, Color.RED, Color.BLUE);
        Color highlightInnerColor = bevelBorder.getHighlightInnerColor();
        System.out.println("Highlight inner color: " + highlightInnerColor);
    }
}
```
================================================================

Sample: 8 BevelBorder_5
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.BevelBorder;

public class Main {
    public static void main(String[] args) {
        BevelBorder bevelBorder = new BevelBorder(BevelBorder.RAISED);
        System.out.println("Outer shadow color: " + bevelBorder.getShadowOuterColor());
    }
}
```
================================================================

Sample: 9 CompoundBorder_1
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.CompoundBorder;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import java.awt.Color;

public class Main {
    public static void main(String[] args) {
        // Create an EmptyBorder and LineBorder
        Border emptyBorder = new EmptyBorder(10, 10, 10, 10);
        Border lineBorder = new LineBorder(Color.BLACK, 2);

        // Create a CompoundBorder with EmptyBorder inside LineBorder
        CompoundBorder compoundBorder = new CompoundBorder(lineBorder, emptyBorder);

        // Get the inside border
        Border insideBorder = compoundBorder.getInsideBorder();

        // Print the inside border
        System.out.println("Inside Border: " + insideBorder);
    }
}
```
================================================================

Sample: 10 CompoundBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.CompoundBorder;
import javax.swing.border.Border;

public class Main {
    public static void main(String[] args) {
        CompoundBorder compoundBorder = new CompoundBorder();
        Border outsideBorder = compoundBorder.getOutsideBorder();
        System.out.println("Outside Border: " + outsideBorder);
    }
}
```
================================================================

Sample: 11 EmptyBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.EmptyBorder;

public class Main {
    public static void main(String[] args) {
        EmptyBorder border = new EmptyBorder(10, 10, 10, 10);
        boolean isOpaque = border.isBorderOpaque();
        System.out.println("Is border opaque? " + isOpaque);
    }
}
```
================================================================

Sample: 12 EtchedBorder_1
----------------------------------------------------------------
```
import javax.swing.border.EtchedBorder;

public class Main {
    public static void main(String[] args) {
        EtchedBorder border = new EtchedBorder();
        System.out.println(border.getEtchType());
    }
}
```
================================================================

Sample: 13 EtchedBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.EtchedBorder;
import java.awt.Color;

public class Main {
    public static void main(String[] args) {
        Color highlightColor = new EtchedBorder().getHighlightColor();
        System.out.println("Highlight Color: " + highlightColor);
    }
}
```
================================================================

Sample: 14 EtchedBorder_3
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.EtchedBorder;
import java.awt.Color;

public class Main {
    public static void main(String[] args) {
        EtchedBorder etched = new EtchedBorder();
        Color shadowColor = etched.getShadowColor();
        System.out.println("Shadow Color: " + shadowColor);
    }
}
```
================================================================

Sample: 15 LineBorder_1
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.LineBorder;

public class Main {
    public static void main(String[] args) {
        LineBorder border = new LineBorder(java.awt.Color.BLACK, 2);
        int thickness = border.getThickness();
        System.out.println("Border thickness: " + thickness);
    }
}
```
================================================================

Sample: 16 LineBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.BorderFactory;
import javax.swing.border.LineBorder;
import java.awt.Color;

public class Main {
    public static void main(String[] args) {
        LineBorder lineBorder = new LineBorder(Color.BLACK);
        Color color = lineBorder.getLineColor();
        System.out.println("Line color: " + color);
    }
}
```
================================================================

Sample: 17 MatteBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.MatteBorder;
import java.awt.*;

public class Main {
    public static void main(String[] args) {
        MatteBorder matteBorder = new MatteBorder(10, 10, 10, 10, Color.RED);
        Color matteColor = matteBorder.getMatteColor();
        System.out.println("Matte Color: " + matteColor);
    }
}
```
================================================================

Sample: 18 TitledBorder_1
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.TitledBorder;

public class Main {
    public static void main(String[] args) {
        TitledBorder titledBorder = new TitledBorder("Title");
        String title = titledBorder.getTitle();
        System.out.println("Title: " + title);
    }
}
```
================================================================

Sample: 19 TitledBorder_2
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.TitledBorder;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class Main {
    public static void main(String[] args) {
        JFrame frame = new JFrame();
        JPanel panel = new JPanel();
        
        JLabel label = new JLabel("Title Test");
        panel.add(label);
        
        TitledBorder titledBorder = new TitledBorder("Original Title");
        panel.setBorder(titledBorder);
        
        frame.add(panel);
        frame.setSize(300, 200);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        
        titledBorder.setTitle("New Title");
        panel.setBorder(titledBorder);
    }
}
```
================================================================

Sample: 20 TitledBorder_3
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.TitledBorder;

public class Main {
    public static void main(String[] args) {
        TitledBorder title = new TitledBorder("Title");
        int position = title.getTitlePosition();
        System.out.println("Title position: " + position);
    }
}
```
================================================================

Sample: 21 TitledBorder_4
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.TitledBorder;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JFrame;
import java.awt.BorderLayout;

public class Main {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Title Justification Example");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        JPanel panel = new JPanel();
        TitledBorder border = new TitledBorder("Title");
        border.setTitleJustification(TitledBorder.CENTER);
        panel.setBorder(border);
        
        JLabel label = new JLabel("Hello, World!");
        panel.add(label);
        
        frame.add(panel, BorderLayout.CENTER);
        
        frame.setSize(300, 200);
        frame.setVisible(true);
    }
}
```
================================================================

Sample: 22 TitledBorder_5
----------------------------------------------------------------
Code snippet:
```java
import javax.swing.border.TitledBorder;
import javax.swing.*;
import java.awt.*;

public class Main {
    public static void main(String[] args) {
        JFrame frame = new JFrame();
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createTitledBorder("Title"));

        TitledBorder titledBorder = (TitledBorder) panel.getBorder();
        Font titleFont = new Font("Arial", Font.BOLD, 12);
        titledBorder.setTitleFont(titleFont);

        frame.add(panel);
        frame.setSize(300, 300);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
```
================================================================

