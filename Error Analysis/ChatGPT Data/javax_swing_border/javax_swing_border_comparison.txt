Sample: 0 AbstractBorder
----------------------------------------------------------------
1. `void paintBorder(Component c, Graphics g, int x, int y, int width, int height)`: This method paints the border for the specified component with the specified position and size.
2. `Insets getBorderInsets(Component c)`: This method returns the border insets of the specified component.
3. `boolean isBorderOpaque()`: This method returns whether or not the border is opaque.
4. `Rectangle getInteriorRectangle(Component c, int x, int y, int width, int height)`: This method returns the interior rectangle of the border for the specified component.
5. `BorderUIResource getUIResource()`: This method returns a BorderUIResource instance for the border.
================================================================

Sample: 1 BevelBorder
----------------------------------------------------------------
1. `int getBevelType()`: This method returns the type of bevel for the border.
2. `Color getHighlightOuterColor()`: This method returns the outer highlight color of the bevel.
3. `Color getShadowInnerColor()`: This method returns the inner shadow color of the bevel.
4. `Color getHighlightInnerColor()`: This method returns the inner highlight color of the bevel.
5. `Color getShadowOuterColor()`: This method returns the outer shadow color of the bevel.
================================================================

Sample: 2 CompoundBorder
----------------------------------------------------------------
1. `Border getInsideBorder()`: This method returns the inside border of this CompoundBorder.
2. `Border getOutsideBorder()`: This method returns the outside border of this CompoundBorder.
3. `void setInsideBorder(Border insideBorder)`: This method sets the inside border of this CompoundBorder to the specified border.
4. `void setOutsideBorder(Border outsideBorder)`: This method sets the outside border of this CompoundBorder to the specified border.
5. `Insets getBorderInsets(Component c)`: This method returns the insets of the CompoundBorder for the specified component.
================================================================

Sample: 3 EmptyBorder
----------------------------------------------------------------
1. `Insets getBorderInsets(Component c)`: This method returns the border insets for the specified component.
2. `boolean isBorderOpaque()`: This method returns whether or not the border is opaque.
3. `void setBorderInsets(Component c, Insets insets)`: This method sets the border insets for the specified component.
4. `void setLeft(int left)`: This method sets the left inset of the border.
5. `void setBottom(int bottom)`: This method sets the bottom inset of the border.
================================================================

Sample: 4 EtchedBorder
----------------------------------------------------------------
1. `int getEtchType()`: Returns the etch type of the border.
   
2. `Color getHighlightColor()`: Returns the highlight color of the border.

3. `Color getShadowColor()`: Returns the shadow color of the border.

4. `void setEtchType(int etchType)`: Sets the etch type of the border.

5. `void setHighlightColor(Color highlight)`: Sets the highlight color of the border.
================================================================

Sample: 5 LineBorder
----------------------------------------------------------------
1. `int getThickness()`: This method returns the thickness of the border.
2. `Color getLineColor()`: This method returns the color of the line.
3. `void setThickness(int thickness)`: This method sets the thickness of the border.
4. `void setLineColor(Color color)`: This method sets the color of the line.
5. `void setRoundedCorners(boolean rounded)`: This method sets whether the border has rounded corners or not.
================================================================

Sample: 6 MatteBorder
----------------------------------------------------------------
1. `int getThickness()`: This method returns the thickness of the MatteBorder.
2. `Color getMatteColor()`: This method returns the matte color of the MatteBorder.
3. `int getTileSize()`: This method returns the tile size of the MatteBorder.
4. `BorderUIResource getBorderUIResource()`: This method returns a UIResource instance for MatteBorder.
5. `Insets getBorderInsets(Component c)`: This method returns the border insets for the specified component.
================================================================

Sample: 7 SoftBevelBorder
----------------------------------------------------------------
1. `int getBevelType()`: This method returns the type of bevel for the border.
2. `Color getHighlightInnerColor()`: This method returns the highlight inner color of the border.
3. `void setHighlightOuterColor(Color highlightOuterColor)`: This method sets the highlight outer color of the border.
4. `void setShadowInnerColor(Color shadowInnerColor)`: This method sets the shadow inner color of the border.
5. `SoftBevelBorder(int bevelType, Color highlight, Color shadow)`: This constructor creates a new SoftBevelBorder with the specified bevel type, highlight color, and shadow color.
================================================================

Sample: 8 StrokeBorder
----------------------------------------------------------------
1. `Stroke getStroke()`: This method returns the stroke used to draw the border.
2. `void setStroke(Stroke s)`: This method sets the stroke used to draw the border to the specified stroke.
3. `void setDashArray(float[] dash)`: This method sets the array representing the lengths of the dash segments.
4. `void setDashPhase(float dashPhase)`: This method sets the dash phase offset.
5. `void setThickness(float thickness)`: This method sets the thickness of the border.
================================================================

Sample: 9 TitledBorder
----------------------------------------------------------------
1. `String getTitle()`: This method returns the title of the titled border.
2. `void setTitle(String title)`: This method sets the title of the titled border to the specified string.
3. `int getTitlePosition()`: This method returns the position of the title in the border.
4. `void setTitleJustification(int titleJustification)`: This method sets the justification for the title.
5. `void setTitleFont(Font titleFont)`: This method sets the font for the title.
================================================================

