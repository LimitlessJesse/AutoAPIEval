Sample: 0 Schema
----------------------------------------------------------------
1. `javax.xml.transform.stream.StreamSource getSourceSchema()`: This method returns the schema file used for validation as a StreamSource object.
2. `javax.xml.transform.stream.StreamSource getGetSystemId()`: This method returns the system identifier for the schema.
3. `javax.xml.validation.Validator newValidator()`: This method creates a new instance of a Validator for the schema.
4. `boolean isIgnoringElementContentWhitespace()`: This method returns true if the validator ignores element content white space during validation.
5. `javax.xml.transform.dom.DOMResult getDOMResult()`: This method returns the DOM object containing the result of the validation.
================================================================

Sample: 1 SchemaFactory
----------------------------------------------------------------
1. `Schema newSchema(Source schema)` : This method creates a new Schema object for validating XML.
2. `void setErrorHandler(ErrorHandler errorHandler)` : This method sets the ErrorHandler to be used during validation.
3. `Schema getSchema()` : This method returns the schema object that was most recently set using setSchema().
4. `void setResourceResolver LSResourceResolver(resourceResolver)` : This method sets the LSResourceResolver to be used during validation.
5. `Validator newValidator()` : This method creates a new Validator object for validating XML against the schema.
================================================================

Sample: 2 SchemaFactoryLoader
----------------------------------------------------------------
1. `SchemaFactory newFactory(String schemaLanguage)`: This method creates a new SchemaFactory for the specified schema language.
2. `SchemaFactory newDefaultFactory()`: This method creates a new SchemaFactory using the platform default SchemaFactory implementation.
3. `SchemaFactory newFactory(String schemaLanguage, String factoryClassName, ClassLoader classLoader)`: This method creates a new SchemaFactory for the specified schema language using the specified class loader to load the factory class.
4. `Set<String> supportedSchemaLanguages()`: This method returns a Set of Strings representing the schema languages supported by this implementation of SchemaFactoryLoader.
5. `void setFeature(String name, boolean value)`: This method sets the specified feature to the specified value on all created SchemaFactory instances.
================================================================

Sample: 3 TypeInfoProvider
----------------------------------------------------------------
1. `XmlSchemaTypeInfo getElementTypeInfo()`: This method returns the type information of the current element.
2. `XmlSchemaTypeInfo getAttributeTypeInfo(int index)`: This method returns the type information of the attribute at the specified index.
3. `XmlSchemaTypeInfo getElementTypeInfo(int index)`: This method returns the type information of the element at the specified index.
4. `XmlElementDecl getStartElementDecl()`: This method returns the element declaration information for the start element.
5. `XmlElementDecl getEndElementDecl()`: This method returns the element declaration information for the end element.
================================================================

Sample: 4 Validator
----------------------------------------------------------------
1. `void validate(Source source)`: This method validates the specified input source.
2. `void setFeature(String name, boolean value)`: This method sets the specified feature to the given value.
3. `void setProperty(String name, Object value)`: This method sets a property in the underlying implementation of Validator.
4. `java.util.Set<Object> getPropertyNames()`: This method returns a set of property names supported by the Validator.
5. `void setErrorHandler(ErrorHandler errorHandler)`: This method sets the error handler to be used by the Validator.
================================================================

Sample: 5 ValidatorHandler
----------------------------------------------------------------
1. `void startElement(String uri, String localName, String qName, Attributes atts)`: This method is called at the start of an element.
2. `void endElement(String uri, String localName, String qName)`: This method is called at the end of an element.
3. `void characters(char[] ch, int start, int length)`: This method is called when characters are found in the XML document.
4. `void startPrefixMapping(String prefix, String uri)`: This method is called when the start of a namespace prefix mapping is found.
5. `void endPrefixMapping(String prefix)`: This method is called when the end of a namespace prefix mapping is found.
================================================================

