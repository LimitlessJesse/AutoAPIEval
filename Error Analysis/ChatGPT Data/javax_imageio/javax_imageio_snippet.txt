Sample: 0 IIOImage_4
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.IIOImage;
import java.awt.image.BufferedImage;

public class Main {
    public static void main(String[] args) {
        BufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        IIOImage iioImage = new IIOImage(image, null, null);
        BufferedImage rasterImage = (BufferedImage) iioImage.getRaster();
        
        // Use rasterImage for further processing
    }
}
```
================================================================

Sample: 1 IIOImage_5
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.metadata.IIOMetadata;
import javax.imageio.ImageIO;
import javax.imageio.IIOImage;

public class Main {
    public static void main(String[] args) {
        try {
            // Create an image
            BufferedImage image = ImageIO.read(new File("example.jpg"));
            IIOMetadata metadata = image.getMetadata();

            // Use IIOMetadata to access metadata information
            // For example, get the names of metadata formats
            String[] metadataFormats = metadata.getMetadataFormatNames();
            for (String format : metadataFormats) {
                System.out.println("Metadata format: " + format);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 2 IIOParam_2
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.IIOParam;
import javax.imageio.IIOParamController;

public class Main {
    public static void main(String[] args) {
        IIOParam iioParam = new IIOParam();
        IIOParamController controller = new IIOParamController() {
            @Override
            public void activateController() {
                // Controller logic
            }
        };
        iioParam.setController(controller);
    }
}
```
================================================================

Sample: 3 ImageIO_1
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;
import java.awt.image.BufferedImage;

public class Main {
    public static void main(String[] args) {
        try {
            File file = new File("image.jpg");
            BufferedImage image = ImageIO.read(file);
            System.out.println("Image width: " + image.getWidth());
            System.out.println("Image height: " + image.getHeight());
        } catch (IOException e) {
            System.out.println("Error reading the image file.");
        }
    }
}
```
================================================================

Sample: 4 ImageIO_3
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import java.io.IOException;
import java.util.Iterator;

public class Main {
    public static void main(String[] args) {
        try {
            String formatName = "JPEG"; // specify the format name
            Iterator<ImageReader> readers = ImageIO.getImageReadersByFormatName(formatName);
            
            while (readers.hasNext()) {
                ImageReader reader = readers.next();
                System.out.println("ImageReader: " + reader);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 5 ImageIO_4
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageIO;
import javax.imageio.ImageWriter;
import javax.imageio.ImageWriterSpi;

public class Main {
    public static void main(String[] args) {
        String formatName = "JPEG";
        Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByFormatName(formatName);
        
        while(imageWriters.hasNext()){
            ImageWriter writer = imageWriters.next();
            ImageWriterSpi provider = writer.getOriginatingProvider();
            System.out.println("Writer: " + writer + ", Provider: " + provider);
        }
    }
}
```
================================================================

Sample: 6 ImageReader_1
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.ImageTypeSpecifier;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;

public class Main {
    public static void main(String[] args) {
        try {
            File file = new File("image.jpg");
            ImageReader reader = ImageIO.getImageReadersByFormatName("JPEG").next();
            reader.setInput(ImageIO.createImageInputStream(file));
            Iterator<ImageTypeSpecifier> imageTypes = reader.getImageTypes(0);
            while (imageTypes.hasNext()) {
                ImageTypeSpecifier type = imageTypes.next();
                System.out.println(type);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 7 ImageReader_2
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;

public class Main {
    public static void main(String[] args) {
        ImageReader reader = null; // Initialize your ImageReader object here
        
        ImageReadParam param = reader.getDefaultReadParam();
        System.out.println("Default ImageReadParam: " + param);
    }
}
```
================================================================

Sample: 8 ImageReader_4
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageReader;
import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        try {
            File file = new File("image.jpg");
            ImageReader reader = ImageIO.getImageReadersByFormatName("jpg").next();

            reader.setInput(ImageIO.createImageInputStream(file));

            int numImages = reader.getNumImages(true);

            System.out.println("Number of images: " + numImages);

            reader.dispose();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 9 ImageReadParam_4
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageReadParam;
import java.awt.Dimension;

public class Main {
    public static void main(String[] args) {
        ImageReadParam param = new ImageReadParam();
        param.setSourceRenderSize(new Dimension(100, 100));
    }
}
```
================================================================

Sample: 10 ImageTypeSpecifier_1
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageTypeSpecifier;

public class Main {
    public static void main(String[] args) {
        ImageTypeSpecifier imageTypeSpecifier = new ImageTypeSpecifier();
        int numComponents = imageTypeSpecifier.getNumComponents();
        System.out.println("Number of components: " + numComponents);
    }
}
```
================================================================

Sample: 11 ImageTypeSpecifier_2
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageTypeSpecifier;

public class Main {
    public static void main(String[] args) {
        ImageTypeSpecifier typeSpecifier = ImageTypeSpecifier.createInterleaved(
            new int[] {0}, // bands
            new int[] {DataBuffer.TYPE_BYTE}, // dataType
            false, // isAlphaPremultiplied
            false // hasAlpha
        );
        
        for (int i = 0; i < typeSpecifier.getNumBands(); i++) {
            int bitsPerBand = typeSpecifier.getBitsPerBand(i);
            System.out.println("Bits per band for band " + i + ": " + bitsPerBand);
        }
    }
}
```
================================================================

Sample: 12 ImageTypeSpecifier_3
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageTypeSpecifier;
import java.awt.color.ColorModel;

public class Main {
    public static void main(String[] args) {
        ImageTypeSpecifier its = ImageTypeSpecifier.createFromBufferedImageType(BufferedImage.TYPE_INT_RGB);
        ColorModel colorModel = its.getColorModel();
        System.out.println(colorModel);
    }
}
```
================================================================

Sample: 13 ImageTypeSpecifier_4
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageTypeSpecifier;

public class Main {
    public static void main(String[] args) {
        ImageTypeSpecifier imageTypeSpecifier = null; // Instantiate your ImageTypeSpecifier object here
        int numBands = imageTypeSpecifier.getNumBands();
        System.out.println("Number of bands: " + numBands);
    }
}
```
================================================================

Sample: 14 ImageWriteParam_1
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageWriteParam;

public class Main {
    public static void main(String[] args) {
        ImageWriteParam param = new ImageWriteParam(null);
        param.setCompressionMode(ImageWriteParam.MODE_COPY_FROM_METADATA);
        System.out.println("Compression mode set to: " + param.getCompressionMode());
    }
}
```
================================================================

Sample: 15 ImageWriteParam_2
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageWriteParam;

public class Main {
    public static void main(String[] args) {
        ImageWriteParam param = new ImageWriteParam(null);
        int compressionMode = param.getCompressionMode();
        
        System.out.println("Compression Mode: " + compressionMode);
    }
}
```
================================================================

Sample: 16 ImageWriteParam_3
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageWriteParam;

public class Main {
    public static void main(String[] args) {
        ImageWriteParam param = new ImageWriteParam(null);
        param.setCompressionQuality(0.5f);
    }
}
```
================================================================

Sample: 17 ImageWriteParam_4
----------------------------------------------------------------
Code snippet:
```java
import java.util.Iterator;

public class Main {
    public static void main(String[] args) {
        Iterator<String> iterator = new Iterator<String>() {
            @Override
            public boolean hasNext() {
                return false;
            }

            @Override
            public String next() {
                return null;
            }
        };
    }
}
```
================================================================

Sample: 18 ImageWriteParam_5
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageWriteParam;

public class Main {
    public static void main(String[] args) {
        ImageWriteParam param = new ImageWriteParam(null);
        System.out.println(param.getLocale());
    }
}
```
================================================================

Sample: 19 ImageWriter_2
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageTypeSpecifier;
import javax.imageio.ImageWriteParam;
import javax.imageio.metadata.IIOMetadata;

public class Main {
    public static void main(String[] args) {
        ImageTypeSpecifier imageType = null; // initialize with actual image type
        ImageWriteParam param = null; // initialize with actual ImageWriteParam
        IIOMetadata metadata = null; // initialize with actual IIOMetadata
        
        // Get default image metadata
        IIOMetadata defaultImageMetadata = metadata.getDefaultImageMetadata(imageType, param);
        
        // Use defaultImageMetadata as needed
    }
}
```
================================================================

Sample: 20 ImageWriter_3
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageWriter;
import javax.imageio.ImageWriteParam;

public class Main {
    public static void main(String[] args) {
        ImageWriter writer = // get ImageWriter instance
        ImageWriteParam writeParam = writer.getDefaultWriteParam();
        // further operations with the default write param
    }
}
```
================================================================

Sample: 21 ImageWriter_4
----------------------------------------------------------------
Code snippet:
```java
import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.metadata.IIOMetadata;

public class Main {
    public static void main(String[] args) {
        ImageWriteParam param = ImageIO.getImageWritersByFormatName("jpg").next().getDefaultWriteParam();
        IIOMetadata streamMetadata = ImageIO.getImageWritersByFormatName("jpg").next().getDefaultStreamMetadata(param);
        System.out.println(streamMetadata);
    }
}
```
================================================================

