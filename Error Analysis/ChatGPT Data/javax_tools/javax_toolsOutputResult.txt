Sample: ForwardingFileObject_1
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_1.java:5: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject fileObject = new ForwardingFileObject() {
                                          ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
1 error


================================================================

Sample: ForwardingFileObject_2
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_2.java:13: error: cannot find symbol
            JavaFileObject underlyingFile = file.getWrappedObject();
                                                ^
  symbol:   method getWrappedObject()
  location: variable file of type ForwardingFileObject
1 error


================================================================

Sample: ForwardingFileObject_3
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_3.java:6: error: constructor ForwardingFileObject in class ForwardingFileObject<F> cannot be applied to given types;
        ForwardingFileObject forwardingFileObject = new ForwardingFileObject() {
                                                    ^
  required: FileObject
  found:    no arguments
  reason: actual and formal argument lists differ in length
  where F is a type-variable:
    F extends FileObject declared in class ForwardingFileObject
./Data/javax_tools/javaFiles/ForwardingFileObject_3.java:7: error: method does not override or implement a method from a supertype
            @Override
            ^
2 errors


================================================================

Sample: ForwardingFileObject_5
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingFileObject_5.java:7: error: cannot find symbol
        ForwardingFileObject<JavaFileObject> fileObject = new ForwardingFileObject<JavaFileObject>(forwardingFileObject) {
                                                                                                   ^
  symbol:   variable forwardingFileObject
  location: class ForwardingFileObject_5
./Data/javax_tools/javaFiles/ForwardingFileObject_5.java:9: error: cannot find symbol
            public Reader openReader(boolean ignoreEncodingErrors) {
                   ^
  symbol: class Reader
2 errors


================================================================

Sample: ForwardingJavaFileManager_1
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/ForwardingJavaFileManager_1.java:18: error: unreported exception IOException; must be caught or declared to be thrown
            super.close();
                       ^
1 error


================================================================

Sample: ForwardingJavaFileManager_3
----------------------------------------------------------------
================================================================

Sample: SimpleJavaFileObject_1
----------------------------------------------------------------
output:
./Data/javax_tools/javaFiles/SimpleJavaFileObject_1.java:12: error: unreported exception IOException; must be caught or declared to be thrown
        System.out.println(fileObject.getCharContent(false));
                                                    ^
1 error


================================================================

Sample: ToolProvider_2
----------------------------------------------------------------
stdout:
JavaCompiler retrieved successfully: com.sun.tools.javac.api.JavacTool@2eda0940

================================================================

