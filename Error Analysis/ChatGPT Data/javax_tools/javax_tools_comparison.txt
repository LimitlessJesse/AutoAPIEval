Sample: 0 DiagnosticCollector
----------------------------------------------------------------
1. `List<Diagnostic<? extends JCTree>> getDiagnostics()`: This method returns a list of diagnostics collected by this DiagnosticCollector.
2. `void report()`: This method prints out all collected diagnostics to the standard error stream.
3. `boolean isNotEmpty()`: This method checks if the DiagnosticCollector has collected any diagnostics.
4. `int getCount()`: This method returns the number of diagnostics collected by this DiagnosticCollector.
5. `void reset()`: This method resets the DiagnosticCollector, clearing all collected diagnostics.
================================================================

Sample: 1 ForwardingFileObject
----------------------------------------------------------------
1. `CharSequence getCharContent(boolean ignoreEncodingErrors)`: This method returns the character content of this file object as a CharSequence.

2. `OutputStream openOutputStream()`: This method opens an output stream for writing to this file object.

3. `Writer openWriter()`: This method opens a writer for writing to this file object.

4. `Writer openWriter(boolean append)`: This method opens a writer for writing to this file object, optionally appending to an existing file.

5. `Reader openReader(boolean ignoreEncodingErrors)`: This method opens a reader for reading from this file object.
================================================================

Sample: 2 ForwardingJavaFileManager
----------------------------------------------------------------
1. `void close()`: Closes this file manager.
2. `boolean contains(Object obj)`: Returns true if this file manager contains the specified object.
3. `boolean isSameFile(FileObject a, FileObject b)`: Tests if two file objects represent the same file.
4. `Iterable<? extends JavaFileObject> list(Location location, String packageName, Set<JavaFileObject.Kind> kinds, boolean recurse)`: Returns a list of file objects for all the Java source files in a package.
5. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: Gets a file object for output representing the specified class of the specified kind in the given location.
================================================================

Sample: 3 ForwardingJavaFileObject
----------------------------------------------------------------
1. `CharSequence getCharContent(boolean ignoreEncodingErrors)`: This method returns the content of the file as a CharSequence.
2. `Writer openWriter()`: This method opens a writer for this file object and returns it.
3. `InputStream openInputStream()`: This method opens an input stream for this file object and returns it.
4. `OutputStream openOutputStream()`: This method opens an output stream for this file object and returns it.
5. `boolean delete()`: This method deletes the file corresponding to this file object.
================================================================

Sample: 4 SimpleJavaFileObject
----------------------------------------------------------------
1. `CharSequence getCharContent(boolean ignoreEncodingErrors)`: This method returns the character content of this file object as a CharSequence.
2. `byte[] getBytes()`: This method returns the bytes that make up this file object's content.
3. `Kind getKind()`: This method returns the kind of this file object.
4. `JavaFileObject.Kind getKind()`: This method returns the kind of file represented by this file object.
5. `JavaFileObject.Kind getKind()`: This method returns the kind of this file object.
================================================================

Sample: 5 ToolProvider
----------------------------------------------------------------
1. `Iterable<JavaCompiler> getSystemJavaCompilers()` 
2. `JavaCompiler getSystemJavaCompiler()` 
3. `Iterable<JavaFileManager> getStandardFileManager(DiagnosticListener<? super JavaFileObject> diagnosticListener, Locale locale, Charset charset)` 
4. `Iterable<String> isSupportedOption(String option)` 
5. `int run(InputStream in, OutputStream out, OutputStream err, String... arguments)`
================================================================

