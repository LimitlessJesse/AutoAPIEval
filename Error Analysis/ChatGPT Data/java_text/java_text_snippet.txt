Sample: 0 Annotation_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.Annotation;

public class Main {
    public static void main(String[] args) {
        Annotation annotation = new Annotation("example");
        Object value = annotation.getValue();
        System.out.println("Annotation value: " + value);
    }
}
```
================================================================

Sample: 1 Annotation_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.Annotation;

public class Main {
    public static void main(String[] args) {
        Annotation annotation = new Annotation("example");
        System.out.println(annotation.toString());
    }
}
```
================================================================

Sample: 2 AttributedString_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.AttributedCharacterIterator;
import java.text.AttributedString;

public class Main {
    public static void main(String[] args) {
        AttributedString attributedString = new AttributedString("Hello World");
        AttributedCharacterIterator.Attribute attribute = AttributedCharacterIterator.Attribute.LANGUAGE;
        Object value = "English";
        
        attributedString.addAttribute(attribute, value);
    }
}
```
================================================================

Sample: 3 AttributedString_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.AttributedString;
import java.text.AttributedCharacterIterator;

public class Main {
    public static void main(String[] args) {
        AttributedString attributedString = new AttributedString("Hello World");
        AttributedCharacterIterator.Attribute attribute = AttributedCharacterIterator.Attribute.LANGUAGE;
        Object value = "English";
        int beginIndex = 0;
        int endIndex = 5;
        attributedString.addAttribute(attribute, value, beginIndex, endIndex);
    }
}
```
================================================================

Sample: 4 AttributedString_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.AttributedString;
import java.text.AttributedCharacterIterator;

public class Main {
    public static void main(String[] args) {
        AttributedString attributedString = new AttributedString("Hello World");
        AttributedCharacterIterator iterator = attributedString.getIterator();
        
        int start = iterator.getBeginIndex();
        int end = iterator.getEndIndex();
        for (int i = start; i < end; i++) {
            iterator.setIndex(i);
            System.out.println("Character: " + iterator.current());
        }
    }
}
```
================================================================

Sample: 5 AttributedString_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.AttributedCharacterIterator;
import java.text.AttributedString;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        AttributedString attributedString = new AttributedString("Example Text");
        Map<AttributedCharacterIterator.Attribute, ?> attributes = null;
        int beginIndex = 0;
        int endIndex = 5;
        
        attributedString.addAttributes(attributes, beginIndex, endIndex);
    }
}
```
================================================================

Sample: 6 Bidi_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.Bidi;

public class Main {
    public static void main(String[] args) {
        Bidi bidi = new Bidi("Hello", Bidi.DIRECTION_LEFT_TO_RIGHT);
        int runCount = bidi.getRunCount();
        System.out.println("Run count: " + runCount);
    }
}
```
================================================================

Sample: 7 Bidi_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.Bidi;

public class Main {
    public static void main(String[] args) {
        Bidi bidi = new Bidi("Hello", Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT);
        int runLevel = bidi.getRunLevel(0);
        System.out.println("Run Level: " + runLevel);
    }
}
```
================================================================

Sample: 8 Bidi_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.Bidi;

public class Main {
    public static void main(String[] args) {
        Bidi bidi = new Bidi("Hello", 0);
        int runLimit = bidi.getRunLimit(0);
        System.out.println("Run limit at index 0: " + runLimit);
    }
}
```
================================================================

Sample: 9 Bidi_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.Bidi;

public class Main {
    public static void main(String[] args) {
        Bidi bidi = new Bidi("Hello", Bidi.DIRECTION_LEFT_TO_RIGHT);
        boolean mixed = bidi.isMixed();
        System.out.println("Is mixed: " + mixed);
    }
}
```
================================================================

Sample: 10 BreakIterator_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.BreakIterator;

public class Main {
    public static void main(String[] args) {
        BreakIterator iterator = BreakIterator.getWordInstance();
        String text = "Hello World";
        iterator.setText(text);
        
        int first = iterator.first();
        System.out.println("First position: " + first);
    }
}
```
================================================================

Sample: 11 BreakIterator_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.BreakIterator;

public class Main {
    public static void main(String[] args) {
        String text = "This is a sample text. Showing how to use BreakIterator.";
        BreakIterator boundary = BreakIterator.getSentenceInstance();
        boundary.setText(text);
        
        int lastPosition = boundary.first();
        while (boundary.next() != BreakIterator.DONE) {
            lastPosition = boundary.current();
        }
        
        System.out.println("Last position: " + lastPosition);
    }
}
```
================================================================

Sample: 12 BreakIterator_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.BreakIterator;

public class Main {
    public static void main(String[] args) {
        String text = "Hello World. This is a sample text.";
        
        BreakIterator iterator = BreakIterator.getWordInstance();
        iterator.setText(text);
        
        int start = iterator.first();
        int end = iterator.next();
        
        while (end != BreakIterator.DONE) {
            String word = text.substring(start, end);
            System.out.println(word);
            start = end;
            end = iterator.next();
        }
    }
}
```
================================================================

Sample: 13 BreakIterator_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.BreakIterator;

public class Main {
    public static void main(String[] args) {
        String text = "Hello! How are you?";
        BreakIterator iterator = BreakIterator.getWordInstance();
        iterator.setText(text);

        int end = iterator.first();
        int start = iterator.next();
        while (start != BreakIterator.DONE) {
            String word = text.substring(end, start);
            System.out.println(word);
            end = start;
            start = iterator.next();
        }
    }
}
```
================================================================

Sample: 14 BreakIterator_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.BreakIterator;

public class Main {
    public static void main(String[] args) {
        String text = "Hello World";
        BreakIterator iterator = BreakIterator.getCharacterInstance();
        iterator.setText(text);

        int offset = 3;
        int nextIndex = iterator.following(offset);

        System.out.println("Next character index after offset " + offset + ": " + nextIndex);
    }
}
```
================================================================

Sample: 15 ChoiceFormat_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.ChoiceFormat;

public class Main {
    public static void main(String[] args) {
        ChoiceFormat choiceFormat = new ChoiceFormat("1#one|2#two|3#three");
        System.out.println(choiceFormat.toPattern());
    }
}
```
================================================================

Sample: 16 ChoiceFormat_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.ChoiceFormat;

public class Main {
    public static void main(String[] args) {
        double[] limits = {1, 2, 3};
        String[] grades = {"A", "B", "C", "D"};
        
        ChoiceFormat choiceFormat = new ChoiceFormat(limits, grades);
        System.out.println("Original: " + choiceFormat.format(2));
        
        choiceFormat.applyPattern("0#F|1#D|2#C|3#B|4#A");
        System.out.println("Updated: " + choiceFormat.format(2));
    }
}
```
================================================================

Sample: 17 ChoiceFormat_4
----------------------------------------------------------------
Code snippet:

```java
import java.text.ChoiceFormat;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        double[] limits = {1, 2, 3, 4}; 
        String[] formats = {"One", "Two", "Three", "Four"};
        ChoiceFormat choiceFormat = new ChoiceFormat(limits, formats);
        
        Object[] formatArray = choiceFormat.getFormats();
        
        System.out.println("Formats:");
        System.out.println(Arrays.toString(formatArray));
    }
}
```
================================================================

Sample: 18 ChoiceFormat_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.ChoiceFormat;

public class Main {
    public static void main(String[] args) {
        // Define an array of limits
        double[] limits = {1, 2, 3, 4, 5};
        
        // Creating a ChoiceFormat object with specified limits
        ChoiceFormat cf = new ChoiceFormat(limits);
        
        // Get the limits array from ChoiceFormat object
        double[] retrievedLimits = cf.getLimits();
        
        // Printing the retrieved limits
        for (double limit : retrievedLimits) {
            System.out.println(limit);
        }
    }
}
```
================================================================

Sample: 19 CollationElementIterator_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.CollationElementIterator;
import java.text.RuleBasedCollator;
import java.text.ParseException;

public class Main {
    public static void main(String[] args) {
        RuleBasedCollator myCollator = null;
        try {
            myCollator = new RuleBasedCollator("< a < b < c");
        } catch (ParseException e) {
            e.printStackTrace();
        }
        
        CollationElementIterator myIterator = myCollator.getCollationElementIterator("abc");
        int expansion = myIterator.getMaxExpansion(0); // Getting the maximum length of any expansion sequence starting with the specified collation element.
        System.out.println("Maximum expansion for the first collation element: " + expansion);
    }
}
```
================================================================

Sample: 20 CollationElementIterator_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.CollationElementIterator;
import java.text.RuleBasedCollator;
import java.text.ParseException;

public class Main {
    public static void main(String[] args) {
        try {
            RuleBasedCollator collator = new RuleBasedCollator("< your customized collator rules >");
            CollationElementIterator iterator = collator.getCollationElementIterator("stringToIterate");
            
            while(iterator.next() != CollationElementIterator.NULLORDER) {
                int offset = iterator.getOffset();
                System.out.println("Offset: " + offset);
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
}
```
================================================================

Sample: 21 CollationElementIterator_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.CollationElementIterator;
import java.text.RuleBasedCollator;

public class Main {
    public static void main(String[] args) {
        RuleBasedCollator collator = (RuleBasedCollator) Collator.getInstance();
        collator.setStrength(Collator.IDENTICAL);
        CollationElementIterator iter = collator.getCollationElementIterator("text");

        int order = iter.next();
        System.out.println(order);
    }
}
```
================================================================

Sample: 22 CollationKey_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.Collator;
import java.text.CollationKey;

public class Main {
    public static void main(String[] args) {
        Collator collator = Collator.getInstance();
        CollationKey key = collator.getCollationKey("banana");
        byte[] byteArray = key.toByteArray();
        
        System.out.println("Byte Array length: " + byteArray.length);
    }
}
```
================================================================

Sample: 23 CollationKey_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.Collator;
import java.text.CollationKey;

public class Main {
    public static void main(String[] args) {
        Collator collator = Collator.getInstance();
        
        CollationKey key1 = collator.getCollationKey("apple");
        CollationKey key2 = collator.getCollationKey("banana");
        
        int comparison = key1.compareTo(key2);
        if (comparison < 0) {
            System.out.println("apple comes before banana");
        } else if (comparison > 0) {
            System.out.println("apple comes after banana");
        } else {
            System.out.println("apple and banana are equal");
        }
    }
}
```
================================================================

Sample: 24 CollationKey_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.CollationKey;
import java.text.Collator;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        // Create a Collator for the current locale
        Collator collator = Collator.getInstance(Locale.getDefault());
        
        // Get the CollationKey for a specific string
        CollationKey key = collator.getCollationKey("apple");
        
        // Get the source string from the CollationKey
        String sourceString = key.getSourceString();
        
        System.out.println("Source String: " + sourceString);
    }
}
```
================================================================

Sample: 25 Collator_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.Collator;

public class Main {
    public static void main(String[] args) {
        // Create a Collator object for comparing strings
        Collator collator = Collator.getInstance();

        // Compare two strings using Collator
        String source = "apple";
        String target = "banana";
        int result = collator.compare(source, target);

        // Print the comparison result
        if(result < 0) {
            System.out.println(source + " comes before " + target);
        } else if(result > 0) {
            System.out.println(source + " comes after " + target);
        } else {
            System.out.println(source + " is equal to " + target);
        }
    }
}
```
================================================================

Sample: 26 Collator_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.Collator;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        Locale locale = new Locale("en", "US");
        Collator collator = Collator.getInstance(locale);
        
        String str1 = "apple";
        String str2 = "banana";
        
        int result = collator.compare(str1, str2);
        
        if (result < 0) {
            System.out.println("\"apple\" is less than \"banana\"");
        } else if (result > 0) {
            System.out.println("\"apple\" is greater than \"banana\"");
        } else {
            System.out.println("\"apple\" is equal to \"banana\"");
        }
    }
}
```
================================================================

Sample: 27 Collator_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.Collator;

public class Main {
    public static void main(String[] args) {
        // Create Collator object
        Collator collator = Collator.getInstance();
        
        // Display hash code of Collator object
        System.out.println("Hash Code of Collator: " + collator.hashCode());
    }
}
```
================================================================

Sample: 28 Collator_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.Collator;

public class Main {
    public static void main(String[] args) {
        Collator collator = Collator.getInstance();
        Collator collatorClone = (Collator) collator.clone();
        
        String str1 = "apple";
        String str2 = "banana";
        
        int result = collator.compare(str1, str2);
        System.out.println("Comparison result using original collator: " + result);
        
        int resultClone = collatorClone.compare(str1, str2);
        System.out.println("Comparison result using cloned collator: " + resultClone);
    }
}
```
================================================================

Sample: 29 Collator_5
----------------------------------------------------------------
`int getStrength()`: This method returns the current comparison strength of the Collator.
 
Code snippet:
```java
import java.text.Collator;

public class Main {
    public static void main(String[] args) {
        Collator collator = Collator.getInstance();
        int strength = collator.getStrength();
        System.out.println("Current Comparison Strength: " + strength);
    }
}
```
================================================================

Sample: 30 DateFormat_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = dateFormat.format(date);
        System.out.println("Formatted Date: " + formattedDate);
    }
}
```
================================================================

Sample: 31 DateFormat_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        String source = "2022-01-01";
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        
        try {
            Date date = df.parse(source);
            System.out.println("Parsed date: " + date);
        } catch (ParseException e) {
            System.out.println("Parse Exception: " + e.getMessage());
        }
    }
}
```
================================================================

Sample: 32 DateFormat_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        DateFormat df = DateFormat.getTimeInstance(DateFormat.SHORT);
        String time = df.format(new Date());
        System.out.println(time);
    }
}
```
================================================================

Sample: 33 DateFormat_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        // Create a Date instance
        Date currentDate = new Date();
        
        // Get a DateFormat instance for the default locale with the specified style
        DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.MEDIUM);
        
        // Format the date and print it
        String formattedDate = dateFormat.format(currentDate);
        System.out.println("Formatted Date: " + formattedDate);
    }
}
```  
================================================================

Sample: 34 DateFormat_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.util.TimeZone;

public class Main {
    public static void main(String[] args) {
        DateFormat dateFormat = DateFormat.getDateTimeInstance();
        TimeZone timeZone = TimeZone.getTimeZone("GMT+2");
        dateFormat.setTimeZone(timeZone);
        System.out.println("Formatted date with timezone: " + dateFormat.format(System.currentTimeMillis()));
    }
}
```
================================================================

Sample: 35 DateFormat_Field_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.text.DateFormat.Field;

public class Main {
    public static void main(String[] args) {
        DateFormat.Field field = DateFormat.Field.DAY_OF_WEEK;
        int calendarField = field.getCalendarField();
        System.out.println("Calendar field value for DAY_OF_WEEK: " + calendarField);
    }
}
```
================================================================

Sample: 36 DateFormat_Field_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormat;
import java.text.DateFormat.Field;

public class Main {
    public static void main(String[] args) {
        DateFormat.Field field = DateFormat.Field.ofCalendarField(1);
        System.out.println(field);
    }
}
```
================================================================

Sample: 37 DateFormatSymbols_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DateFormatSymbols symbols = new DateFormatSymbols();
        String[] months = symbols.getMonths();
        
        for(String month : months){
            System.out.println(month);
        }
    }
}
```
================================================================

Sample: 38 DateFormatSymbols_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DateFormatSymbols symbols = new DateFormatSymbols();
        String[] weekdays = symbols.getWeekdays();
        
        System.out.println("Weekdays:");
        for (String weekday : weekdays) {
            System.out.println(weekday);
        }
    }
}
```
================================================================

Sample: 39 DateFormatSymbols_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DateFormatSymbols symbols = new DateFormatSymbols();
        String[] shortMonths = symbols.getShortMonths();
        
        for(String month : shortMonths) {
            System.out.println(month);
        }
    }
}
```
================================================================

Sample: 40 DateFormatSymbols_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DateFormatSymbols dfs = new DateFormatSymbols();
        String[] shortWeekdays = dfs.getShortWeekdays();
        
        for(int i=1; i<shortWeekdays.length; i++){
            System.out.println("Short weekday " + i + ": " + shortWeekdays[i]);
        }
    }
}
```
================================================================

Sample: 41 DateFormatSymbols_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.DateFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DateFormatSymbols symbols = new DateFormatSymbols();
        String[] amPmStrings = symbols.getAmPmStrings();
        
        System.out.println("AM String: " + amPmStrings[0]);
        System.out.println("PM String: " + amPmStrings[1]);
    }
}
```
================================================================

Sample: 42 DecimalFormat_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormat;
import java.text.FieldPosition;

public class Main {
    public static void main(String[] args) {
        DecimalFormat df = new DecimalFormat("#,###.00");
        StringBuffer sb = new StringBuffer();
        FieldPosition pos = new FieldPosition(0);
        sb = df.format(12345.67, sb, pos);
        System.out.println(sb);
    }
}
```
================================================================

Sample: 43 DecimalFormat_4
----------------------------------------------------------------
`Object clone()`: This method creates and returns a copy of this DecimalFormat object.

Code snippet:
```java
import java.text.DecimalFormat;

public class Main {
    public static void main(String[] args) {
        DecimalFormat df = new DecimalFormat("#,###.00");
        DecimalFormat dfCopy = (DecimalFormat) df.clone();
        System.out.println("Original DecimalFormat: " + df.format(1234567.89));
        System.out.println("Cloned DecimalFormat: " + dfCopy.format(9876543.21));
    }
}
```
================================================================

Sample: 44 DecimalFormat_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormat;

public class Main {
    public static void main(String[] args) {
        DecimalFormat df = new DecimalFormat("#,##0.00");
        System.out.println("Value before setting decimal separator always shown: " + df.format(1234567.89));

        df.setDecimalSeparatorAlwaysShown(true);
        System.out.println("Value after setting decimal separator always shown: " + df.format(1234567.89));
    }
}
```
================================================================

Sample: 45 DecimalFormatSymbols_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        char decimalSeparator = symbols.getDecimalSeparator();
        System.out.println("Decimal Separator: " + decimalSeparator);
    }
}
```
================================================================

Sample: 46 DecimalFormatSymbols_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        char groupingSeparator = symbols.getGroupingSeparator();
        System.out.println("Grouping Separator: " + groupingSeparator);
    }
}
```
================================================================

Sample: 47 DecimalFormatSymbols_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        String currencySymbol = symbols.getCurrencySymbol();
        
        System.out.println("Currency Symbol: " + currencySymbol);
    }
}
```
================================================================

Sample: 48 DecimalFormatSymbols_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        char minusSign = symbols.getMinusSign();
        System.out.println("Minus sign: " + minusSign);
    }
}
```
================================================================

Sample: 49 DecimalFormatSymbols_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.DecimalFormatSymbols;

public class Main {
    public static void main(String[] args) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        System.out.println("Default decimal separator: " + symbols.getDecimalSeparator());
        
        symbols.setDecimalSeparator(',');
        System.out.println("New decimal separator: " + symbols.getDecimalSeparator());
    }
}
```
================================================================

Sample: 50 FieldPosition_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.FieldPosition;

public class Main {
    public static void main(String[] args) {
        FieldPosition fieldPosition = new FieldPosition(0);
        fieldPosition.setBeginIndex(5);
        System.out.println("Begin Index: " + fieldPosition.getBeginIndex());
    }
}
```
================================================================

Sample: 51 FieldPosition_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.FieldPosition;

public class Main {
    public static void main(String[] args) {
        FieldPosition fieldPosition = new FieldPosition(FieldPosition.BEGIN_INDEX);
        System.out.println("Begin index: " + fieldPosition.getBeginIndex());
    }
}
```
================================================================

Sample: 52 FieldPosition_3
----------------------------------------------------------------
`void setEndIndex(int index)`: This method sets the end index of the field position.

Code snippet:
```java
import java.text.FieldPosition;

public class Main {
    public static void main(String[] args) {
        FieldPosition fieldPosition = new FieldPosition(0);
        fieldPosition.setEndIndex(5);
        System.out.println(fieldPosition.getEndIndex());
    }
}
```
================================================================

Sample: 53 FieldPosition_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.FieldPosition;

public class Main {
    public static void main(String[] args) {
        FieldPosition fieldPosition = new FieldPosition(0);
        int endIndex = fieldPosition.getEndIndex();
        System.out.println("End index: " + endIndex);
    }
}
```
================================================================

Sample: 54 FieldPosition_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.FieldPosition;

public class Main {
    public static void main(String[] args) {
        FieldPosition fieldPosition = new FieldPosition(0);
        String sampleString = "Java is fun!";
        StringBuffer stringBuffer = new StringBuffer();

        String result = fieldPosition.toString(sampleString, stringBuffer);
        System.out.println(result);
    }
}
```
================================================================

Sample: 55 Format_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        String dateStr = "2021-10-15";
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        try {
            Date date = dateFormat.parse(dateStr);
            System.out.println(date);
        } catch (ParseException e) {
            System.out.println("Error parsing date");
        }
    }
}
```
================================================================

Sample: 56 Format_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.FieldPosition;
import java.text.Format;

public class Main {
    public static void main(String[] args) {
        Format format = new Format() {
            @Override
            public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
                // Implement the formatting logic here
                return toAppendTo.append(obj.toString());
            }

            @Override
            public Object parseObject(String source, ParsePosition pos) {
                return null;
            }
        };
        
        StringBuffer buffer = new StringBuffer();
        FieldPosition fieldPosition = new FieldPosition(0);
        format.format("Hello, World!", buffer, fieldPosition);
        System.out.println(buffer);
    }
}
```
================================================================

Sample: 57 Format_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.FieldPosition;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        StringBuffer buffer = new StringBuffer();
        FieldPosition position = new FieldPosition(1);
        Format formatter = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();

        formatter.format(date, buffer, position);
        System.out.println(buffer.toString());
    }
}
```
================================================================

Sample: 58 Format_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.Format;
import java.text.ParsePosition;

public class Main {
    public static void main(String[] args) {
        Format format = new Format() {
            @Override
            public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
                return null;
            }

            @Override
            public Object parseObject(String source, ParsePosition pos) {
                return null;
            }
        };

        String source = "123";
        ParsePosition parsePosition = new ParsePosition(0);
        Object parsedObject = format.parseObject(source, parsePosition);
        System.out.println(parsedObject);
    }
}
```
================================================================

Sample: 59 MessageFormat_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.MessageFormat;

public class Main {
    public static void main(String[] args) {
        String pattern = "Hello, {0}! Today is {1}.";
        
        String formattedMessage = MessageFormat.format(pattern, "Alice", "Monday");
        
        System.out.println(formattedMessage);
    }
}
```
================================================================

Sample: 60 MessageFormat_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.MessageFormat;

public class Main {
    public static void main(String[] args) {
        String pattern = "The {0} jumped over the {1}.";
        
        MessageFormat messageFormat = new MessageFormat(pattern);
        messageFormat.applyPattern("The {0} ran past the {1}.");
        
        Object[] arguments = {"fox", "dog"};
        String formattedMessage = messageFormat.format(arguments);
        
        System.out.println(formattedMessage);
    }
}
```
================================================================

Sample: 61 MessageFormat_3
----------------------------------------------------------------
`void setLocale(Locale newLocale)`: Sets the locale to be used during localization.

Code snippet:
```java
import java.text.MessageFormat;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        Locale locale = new Locale("en", "US");
        MessageFormat msgFmt = new MessageFormat("Hello, {0}");
        msgFmt.setLocale(locale);
        
        Object[] params = {"World"};
        String formattedMessage = msgFmt.format(params);
        System.out.println(formattedMessage);
    }
}
```
================================================================

Sample: 62 MessageFormat_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.Format;
import java.text.MessageFormat;

public class Main {
    public static void main(String[] args) {
        MessageFormat messageFormat = new MessageFormat("The price is {0,number,currency}");
        Format newFormat = new java.text.DecimalFormat("#,##0.00");
        
        messageFormat.setFormatByArgumentIndex(0, newFormat);
        
        Object[] priceArgs = {1234.56};
        String formattedMessage = messageFormat.format(priceArgs);
        
        System.out.println(formattedMessage);
    }
}
```
================================================================

Sample: 63 MessageFormat_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.MessageFormat;

public class Main {
    public static void main(String[] args) {
        String pattern = "Hello, {0}!";
        String message = MessageFormat.format(pattern, "World");
        System.out.println(message);
    }
}
```
================================================================

Sample: 64 Normalizer_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.Normalizer;

public class Main {
    public static void main(String[] args) {
        String original = "héllô";
        String normalized = Normalizer.normalize(original, Normalizer.Form.NFD);
        System.out.println("Original: " + original);
        System.out.println("Normalized: " + normalized);
    }
}
```
================================================================

Sample: 65 Normalizer_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.Normalizer;

public class Main {
    public static void main(String[] args) {
        String text = "légèreté";
        Normalizer.Form form = Normalizer.Form.NFD;
        
        boolean isNormalized = Normalizer.isNormalized(text, form);
        
        if (isNormalized) {
            System.out.println("The text is normalized.");
        } else {
            System.out.println("The text is not normalized.");
        }
    }
}
```
================================================================

Sample: 66 NumberFormat_1
----------------------------------------------------------------
```java
import java.text.NumberFormat;

public class Main {
    public static void main(String[] args) {
        NumberFormat numberFormat = NumberFormat.getInstance();
        double number = 12345.6789;
        System.out.println(numberFormat.format(number));
    }
}
```
================================================================

Sample: 67 NumberFormat_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.NumberFormat;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        double number = 12345.67;
        
        NumberFormat numberFormat = NumberFormat.getInstance(Locale.US);
        String formattedNumber = numberFormat.format(number);
        
        System.out.println(formattedNumber);
    }
}
```
================================================================

Sample: 68 NumberFormat_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.NumberFormat;
import java.text.ParseException;

public class Main {
    public static void main(String[] args) {
        NumberFormat nf = NumberFormat.getInstance();
        try {
            Number number = nf.parse("42");
            System.out.println("Parsed number: " + number);
        } catch (ParseException e) {
            System.out.println("Error parsing number: " + e.getMessage());
        }
    }
}
```
================================================================

Sample: 69 NumberFormat_4
----------------------------------------------------------------
Code snippet:
```java
import java.text.NumberFormat;

public class Main {
    public static void main(String[] args) {
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(2);
        double number = 123.456789;
        System.out.println(nf.format(number));
    }
}
```
================================================================

Sample: 70 NumberFormat_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.NumberFormat;
import java.util.Locale;

public class Main {
    public static void main(String[] args) {
        NumberFormat numberFormat = NumberFormat.getInstance(Locale.US);
        
        // Before setting grouping used
        System.out.println("Grouping used before setting: " + numberFormat.isGroupingUsed());
        
        // Set grouping used to false
        numberFormat.setGroupingUsed(false);
        System.out.println("Grouping used after setting to false: " + numberFormat.isGroupingUsed());
        
        // Set grouping used to true
        numberFormat.setGroupingUsed(true);
        System.out.println("Grouping used after setting to true: " + numberFormat.isGroupingUsed());
    }
}
```
================================================================

Sample: 71 RuleBasedCollator_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.RuleBasedCollator;

public class Main {
    public static void main(String[] args) {
        RuleBasedCollator collator = (RuleBasedCollator) RuleBasedCollator.getInstance();
        String rules = collator.getRules();
        System.out.println("Collator Rules: " + rules);
    }
}
```
================================================================

Sample: 72 SimpleDateFormat_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.SimpleDateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        SimpleDateFormat sdf = new SimpleDateFormat();
        sdf.applyLocalizedPattern("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        String formattedDate = sdf.format(date);
        System.out.println(formattedDate);
    }
}
```
================================================================

Sample: 73 SimpleDateFormat_3
----------------------------------------------------------------
`void applyPattern(String pattern)`: This method updates the format pattern of SimpleDateFormat to the specified pattern.

Code snippet:
```java
import java.text.SimpleDateFormat;

public class Main {
    public static void main(String[] args) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        System.out.println("Default pattern: " + sdf.toPattern());
        
        sdf.applyPattern("E yyyy.MM.dd 'at' hh:mm:ss a zzz");
        System.out.println("Updated pattern: " + sdf.toPattern());
    }
}
```
================================================================

Sample: 74 SimpleDateFormat_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.SimpleDateFormat;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String pattern = sdf.toPattern();
        System.out.println("Pattern: " + pattern);
    }
}
```
================================================================

Sample: 75 StringCharacterIterator_1
----------------------------------------------------------------
Code snippet:
```java
import java.text.StringCharacterIterator;

public class Main {
    public static void main(String[] args) {
        String str = "Hello";
        StringCharacterIterator sci = new StringCharacterIterator(str);
        char firstChar = sci.first();
        System.out.println("First character: " + firstChar);
    }
}
```
================================================================

Sample: 76 StringCharacterIterator_2
----------------------------------------------------------------
Code snippet:
```java
import java.text.StringCharacterIterator;

public class Main {
    public static void main(String[] args) {
        String str = "Hello";
        StringCharacterIterator it = new StringCharacterIterator(str);
        char lastChar = it.last();
        System.out.println("Last character: " + lastChar);
    }
}
```
================================================================

Sample: 77 StringCharacterIterator_3
----------------------------------------------------------------
Code snippet:
```java
import java.text.StringCharacterIterator;

public class Main {
    public static void main(String[] args) {
        String text = "Hello";
        StringCharacterIterator iterator = new StringCharacterIterator(text);

        for(char c = iterator.first(); c != StringCharacterIterator.DONE; c = iterator.next()) {
            System.out.println(iterator.current());
        }
    }
}
```
================================================================

Sample: 78 StringCharacterIterator_4
----------------------------------------------------------------
`char next()`: This method returns the next character in the iteration. 

Code snippet:
```java
import java.text.StringCharacterIterator;

public class Main {
    public static void main(String[] args) {
        String text = "Hello";
        StringCharacterIterator iterator = new StringCharacterIterator(text);
        
        char nextChar = iterator.next();
        System.out.println("Next character: " + nextChar);
    }
}
```
================================================================

Sample: 79 StringCharacterIterator_5
----------------------------------------------------------------
Code snippet:
```java
import java.text.StringCharacterIterator;

public class Main {
    public static void main(String[] args) {
        String str = "Hello";
        StringCharacterIterator sci = new StringCharacterIterator(str);
        
        char current = sci.current();
        System.out.println("Current character: " + current);
        
        char prev = sci.previous();
        System.out.println("Previous character: " + prev);
    }
}
```
================================================================

