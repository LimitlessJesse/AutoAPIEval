Sample: Annotation_3
----------------------------------------------------------------
stdout:
Annotation value: example

================================================================

Sample: Annotation_5
----------------------------------------------------------------
stdout:
java.text.Annotation[value=example]

================================================================

Sample: AttributedString_1
----------------------------------------------------------------
================================================================

Sample: AttributedString_3
----------------------------------------------------------------
================================================================

Sample: AttributedString_4
----------------------------------------------------------------
stdout:
Character: H
Character: e
Character: l
Character: l
Character: o
Character:  
Character: W
Character: o
Character: r
Character: l
Character: d

================================================================

Sample: AttributedString_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException
	at java.base/java.text.AttributedString.addAttributes(AttributedString.java:370)
	at AttributedString_5.main(AttributedString_5.java:12)

================================================================

Sample: Bidi_1
----------------------------------------------------------------
stdout:
Run count: 1

================================================================

Sample: Bidi_2
----------------------------------------------------------------
stdout:
Run Level: 0

================================================================

Sample: Bidi_3
----------------------------------------------------------------
stdout:
Run limit at index 0: 5

================================================================

Sample: Bidi_5
----------------------------------------------------------------
stdout:
Is mixed: false

================================================================

Sample: BreakIterator_1
----------------------------------------------------------------
stdout:
First position: 0

================================================================

Sample: BreakIterator_2
----------------------------------------------------------------
stdout:
Last position: 56

================================================================

Sample: BreakIterator_3
----------------------------------------------------------------
stdout:
Hello
 
World
.
 
This
 
is
 
a
 
sample
 
text
.

================================================================

Sample: BreakIterator_4
----------------------------------------------------------------
stdout:
Hello
!
 
How
 
are
 
you
?

================================================================

Sample: BreakIterator_5
----------------------------------------------------------------
stdout:
Next character index after offset 3: 4

================================================================

Sample: ChoiceFormat_2
----------------------------------------------------------------
stdout:
1.0#one|2.0#two|3.0#three

================================================================

Sample: ChoiceFormat_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: Array and limit arrays must be of the same length.
	at java.base/java.text.ChoiceFormat.setChoices(ChoiceFormat.java:355)
	at java.base/java.text.ChoiceFormat.<init>(ChoiceFormat.java:334)
	at ChoiceFormat_3.main(ChoiceFormat_3.java:8)

================================================================

Sample: ChoiceFormat_4
----------------------------------------------------------------
stdout:
Formats:
[One, Two, Three, Four]

================================================================

Sample: ChoiceFormat_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/ChoiceFormat_5.java:9: error: incompatible types: double[] cannot be converted to String
        ChoiceFormat cf = new ChoiceFormat(limits);
                                           ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: CollationElementIterator_1
----------------------------------------------------------------
stdout:
Maximum expansion for the first collation element: 1

================================================================

Sample: CollationElementIterator_2
----------------------------------------------------------------
stderr:
java.text.ParseException: Unquoted punctuation character : 3e
	at java.base/java.text.PatternEntry$Parser.next(PatternEntry.java:265)
	at java.base/java.text.MergeCollation.addPattern(MergeCollation.java:180)
	at java.base/java.text.MergeCollation.setPattern(MergeCollation.java:166)
	at java.base/java.text.MergeCollation.<init>(MergeCollation.java:73)
	at java.base/java.text.RBTableBuilder.build(RBTableBuilder.java:113)
	at java.base/java.text.RBCollationTables.<init>(RBCollationTables.java:83)
	at java.base/java.text.RuleBasedCollator.<init>(RuleBasedCollator.java:301)
	at java.base/java.text.RuleBasedCollator.<init>(RuleBasedCollator.java:282)
	at CollationElementIterator_2.main(CollationElementIterator_2.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CollationElementIterator_3
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/CollationElementIterator_3.java:6: error: cannot find symbol
        RuleBasedCollator collator = (RuleBasedCollator) Collator.getInstance();
                                                         ^
  symbol:   variable Collator
  location: class CollationElementIterator_3
./Data/java_text/javaFiles/CollationElementIterator_3.java:7: error: cannot find symbol
        collator.setStrength(Collator.IDENTICAL);
                             ^
  symbol:   variable Collator
  location: class CollationElementIterator_3
2 errors


================================================================

Sample: CollationKey_1
----------------------------------------------------------------
stdout:
Byte Array length: 40

================================================================

Sample: CollationKey_2
----------------------------------------------------------------
stdout:
apple comes before banana

================================================================

Sample: CollationKey_3
----------------------------------------------------------------
stdout:
Source String: apple

================================================================

Sample: Collator_1
----------------------------------------------------------------
stdout:
apple comes before banana

================================================================

Sample: Collator_2
----------------------------------------------------------------
stdout:
"apple" is less than "banana"

================================================================

Sample: Collator_3
----------------------------------------------------------------
stdout:
Hash Code of Collator: 681002966

================================================================

Sample: Collator_4
----------------------------------------------------------------
stdout:
Comparison result using original collator: -1
Comparison result using cloned collator: -1

================================================================

Sample: Collator_5
----------------------------------------------------------------
stdout:
Current Comparison Strength: 2

================================================================

Sample: DateFormat_1
----------------------------------------------------------------
stdout:
Formatted Date: 2024-04-28

================================================================

Sample: DateFormat_2
----------------------------------------------------------------
stdout:
Parsed date: Sat Jan 01 00:00:00 CST 2022

================================================================

Sample: DateFormat_3
----------------------------------------------------------------
stdout:
1:59 a.m.

================================================================

Sample: DateFormat_4
----------------------------------------------------------------
stdout:
Formatted Date: Apr. 28, 2024

================================================================

Sample: DateFormat_5
----------------------------------------------------------------
stdout:
Formatted date with timezone: Apr. 28, 2024, 8:59:49 a.m.

================================================================

Sample: DateFormat_Field_2
----------------------------------------------------------------
stdout:
Calendar field value for DAY_OF_WEEK: 7

================================================================

Sample: DateFormat_Field_4
----------------------------------------------------------------
stdout:
java.text.DateFormat$Field(year)

================================================================

Sample: DateFormatSymbols_1
----------------------------------------------------------------
stdout:
January
February
March
April
May
June
July
August
September
October
November
December


================================================================

Sample: DateFormatSymbols_2
----------------------------------------------------------------
stdout:
Weekdays:

Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday

================================================================

Sample: DateFormatSymbols_3
----------------------------------------------------------------
stdout:
Jan.
Feb.
Mar.
Apr.
May
Jun.
Jul.
Aug.
Sep.
Oct.
Nov.
Dec.


================================================================

Sample: DateFormatSymbols_4
----------------------------------------------------------------
stdout:
Short weekday 1: Sun.
Short weekday 2: Mon.
Short weekday 3: Tue.
Short weekday 4: Wed.
Short weekday 5: Thu.
Short weekday 6: Fri.
Short weekday 7: Sat.

================================================================

Sample: DateFormatSymbols_5
----------------------------------------------------------------
stdout:
AM String: a.m.
PM String: p.m.

================================================================

Sample: DecimalFormat_2
----------------------------------------------------------------
stdout:
12,345.67

================================================================

Sample: DecimalFormat_4
----------------------------------------------------------------
stdout:
Original DecimalFormat: 1,234,567.89
Cloned DecimalFormat: 9,876,543.21

================================================================

Sample: DecimalFormat_5
----------------------------------------------------------------
stdout:
Value before setting decimal separator always shown: 1,234,567.89
Value after setting decimal separator always shown: 1,234,567.89

================================================================

Sample: DecimalFormatSymbols_1
----------------------------------------------------------------
stdout:
Decimal Separator: .

================================================================

Sample: DecimalFormatSymbols_2
----------------------------------------------------------------
stdout:
Grouping Separator: ,

================================================================

Sample: DecimalFormatSymbols_3
----------------------------------------------------------------
stdout:
Currency Symbol: $

================================================================

Sample: DecimalFormatSymbols_4
----------------------------------------------------------------
stdout:
Minus sign: -

================================================================

Sample: DecimalFormatSymbols_5
----------------------------------------------------------------
stdout:
Default decimal separator: .
New decimal separator: ,

================================================================

Sample: FieldPosition_1
----------------------------------------------------------------
stdout:
Begin Index: 5

================================================================

Sample: FieldPosition_2
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/FieldPosition_2.java:5: error: cannot find symbol
        FieldPosition fieldPosition = new FieldPosition(FieldPosition.BEGIN_INDEX);
                                                                     ^
  symbol:   variable BEGIN_INDEX
  location: class FieldPosition
1 error


================================================================

Sample: FieldPosition_3
----------------------------------------------------------------
stdout:
5

================================================================

Sample: FieldPosition_4
----------------------------------------------------------------
stdout:
End index: 0

================================================================

Sample: FieldPosition_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/FieldPosition_5.java:9: error: method toString in class FieldPosition cannot be applied to given types;
        String result = fieldPosition.toString(sampleString, stringBuffer);
                                     ^
  required: no arguments
  found:    String,StringBuffer
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: Format_1
----------------------------------------------------------------
stdout:
Fri Oct 15 00:00:00 CDT 2021

================================================================

Sample: Format_2
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Format_2.java:14: error: cannot find symbol
            public Object parseObject(String source, ParsePosition pos) {
                                                     ^
  symbol: class ParsePosition
1 error


================================================================

Sample: Format_4
----------------------------------------------------------------
stdout:
2024-04-28

================================================================

Sample: Format_5
----------------------------------------------------------------
output:
./Data/java_text/javaFiles/Format_5.java:8: error: cannot find symbol
            public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
                                                                            ^
  symbol: class FieldPosition
1 error


================================================================

Sample: MessageFormat_1
----------------------------------------------------------------
stdout:
Hello, Alice! Today is Monday.

================================================================

Sample: MessageFormat_2
----------------------------------------------------------------
stdout:
The fox ran past the dog.

================================================================

Sample: MessageFormat_3
----------------------------------------------------------------
stdout:
Hello, World

================================================================

Sample: MessageFormat_4
----------------------------------------------------------------
stdout:
The price is 1,234.56

================================================================

Sample: MessageFormat_5
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: Normalizer_1
----------------------------------------------------------------
stdout:
Original: héllô
Normalized: héllô

================================================================

Sample: Normalizer_2
----------------------------------------------------------------
stdout:
The text is not normalized.

================================================================

Sample: NumberFormat_1
----------------------------------------------------------------
stdout:
12,345.679

================================================================

Sample: NumberFormat_2
----------------------------------------------------------------
stdout:
12,345.67

================================================================

Sample: NumberFormat_3
----------------------------------------------------------------
stdout:
Parsed number: 42

================================================================

Sample: NumberFormat_4
----------------------------------------------------------------
stdout:
123.46

================================================================

Sample: NumberFormat_5
----------------------------------------------------------------
stdout:
Grouping used before setting: true
Grouping used after setting to false: false
Grouping used after setting to true: true

================================================================

Sample: RuleBasedCollator_5
----------------------------------------------------------------
stdout:
Collator Rules: ='​'=‌=‍=‎=‏=  = = = == = = = ='	'='' == ='' = = == = = = == = = = == = == = = = = == = = = = == = = = = == = = = = == = = = = == =;' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';' ';'　';'﻿';'' ;'	' ;'
';'';'';́;̀;̆;̂;̌;̊;̍;̈;̋;̃;̇;̄;̷;̧;̨;̣;̲;̅;̉;̎;̏;̐;̑;̒;̓;̔;̕;̖;̗;̘;̙;̚;̛;̜;̝;̞;̟;̠;̡;̢;̤;̥;̦;̩;̪;̫;̬;̭;̮;̯;̰;̱;̳;̴;̵;̶;̸;̹;̺;̻;̼;̽;̾;̿;͂;̈́;ͅ;͠;͡;҃;҄;҅;҆;⃐;⃑;⃒;⃓;⃔;⃕;⃖;⃗;⃘;⃙;⃚;⃛;⃜;⃝;⃞;⃟;⃠;⃡,'-';­;‐;‑;‒;–;—;―;−<'_'<¯<','<';'<':'<'!'<¡<'?'<¿<'/'<'.'<´<'`'<'^'<¨<'~'<·<¸<'''<'"'<«<»<'('<')'<'['<']'<'{'<'}'<§<¶<©<®<'@'<¤<฿<¢<₡<₢<'$'<₫<€<₣<₤<₥<₦<₧<£<₨<₪<₩<¥<'*'<'\'<'&'<'#'<'%'<'+'<±<÷<×<'<'<'='<'>'<¬<'|'<¦<°<µ<0<1<2<3<4<5<6<7<8<9<¼<½<¾<a,A<b,B<c,C<d,D<ð,Ð<e,E<f,F<g,G<h,H<i,I<j,J<k,K<l,L<m,M<n,N<o,O<p,P<q,Q<r,R<s, S & SS,ß<t,T& TH, Þ &TH, þ <u,U<v,V<w,W<x,X<y,Y<z,Z&AE,Æ&AE,æ&OE,Œ&OE,œ

================================================================

Sample: SimpleDateFormat_2
----------------------------------------------------------------
stdout:
28/04/2024 02:00:31

================================================================

Sample: SimpleDateFormat_3
----------------------------------------------------------------
stdout:
Default pattern: yyyy-MM-dd
Updated pattern: E yyyy.MM.dd 'at' hh:mm:ss a zzz

================================================================

Sample: SimpleDateFormat_5
----------------------------------------------------------------
stdout:
Pattern: yyyy-MM-dd

================================================================

Sample: StringCharacterIterator_1
----------------------------------------------------------------
stdout:
First character: H

================================================================

Sample: StringCharacterIterator_2
----------------------------------------------------------------
stdout:
Last character: o

================================================================

Sample: StringCharacterIterator_3
----------------------------------------------------------------
stdout:
H
e
l
l
o

================================================================

Sample: StringCharacterIterator_4
----------------------------------------------------------------
stdout:
Next character: e

================================================================

Sample: StringCharacterIterator_5
----------------------------------------------------------------
stdout:
Current character: H
Previous character: ￿

================================================================

