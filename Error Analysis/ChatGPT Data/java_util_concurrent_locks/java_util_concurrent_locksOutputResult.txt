Sample: AbstractQueuedLongSynchronizer_3
----------------------------------------------------------------
output:
./Data/java_util_concurrent_locks/javaFiles/AbstractQueuedLongSynchronizer_3.java:5: error: AbstractQueuedLongSynchronizer is abstract; cannot be instantiated
        AbstractQueuedLongSynchronizer aqs = new AbstractQueuedLongSynchronizer();
                                             ^
1 error


================================================================

Sample: AbstractQueuedLongSynchronizer_4
----------------------------------------------------------------
output:
./Data/java_util_concurrent_locks/javaFiles/AbstractQueuedLongSynchronizer_4.java:5: error: AbstractQueuedLongSynchronizer is abstract; cannot be instantiated
        AbstractQueuedLongSynchronizer sync = new AbstractQueuedLongSynchronizer();
                                              ^
1 error


================================================================

Sample: AbstractQueuedLongSynchronizer_5
----------------------------------------------------------------
output:
./Data/java_util_concurrent_locks/javaFiles/AbstractQueuedLongSynchronizer_5.java:7: error: isHeldExclusively() in CustomSync cannot override isHeldExclusively() in AbstractQueuedLongSynchronizer
        boolean isHeldExclusively() {
                ^
  attempting to assign weaker access privileges; was protected
1 error


================================================================

Sample: AbstractQueuedSynchronizer_1
----------------------------------------------------------------
stdout:
Try Acquire Result: true

================================================================

Sample: AbstractQueuedSynchronizer_2
----------------------------------------------------------------
output:
./Data/java_util_concurrent_locks/javaFiles/AbstractQueuedSynchronizer_2.java:7: error: acquire(int) in CustomSync cannot override acquire(int) in AbstractQueuedSynchronizer
        void acquire(int arg) {
             ^
  overridden method is final
1 error


================================================================

Sample: AbstractQueuedSynchronizer_3
----------------------------------------------------------------
output:
./Data/java_util_concurrent_locks/javaFiles/AbstractQueuedSynchronizer_3.java:12: error: getState() in CustomSync cannot override getState() in AbstractQueuedSynchronizer
        protected int getState() {
                      ^
  overridden method is final
1 error


================================================================

Sample: ReentrantLock_1
----------------------------------------------------------------
stdout:
Lock acquired
Lock released

================================================================

Sample: ReentrantLock_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalMonitorStateException
	at java.base/java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:175)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1007)
	at java.base/java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494)
	at ReentrantLock_2.main(ReentrantLock_2.java:6)

================================================================

Sample: ReentrantLock_3
----------------------------------------------------------------
stdout:
Is lock locked? false

================================================================

Sample: ReentrantLock_4
----------------------------------------------------------------
stdout:
Hold count of the lock: 0

================================================================

Sample: ReentrantLock_5
----------------------------------------------------------------
stdout:
Is lock held by current thread? false

================================================================

Sample: ReentrantReadWriteLock_4
----------------------------------------------------------------
stdout:
Number of readers holding the read lock: 0

================================================================

Sample: ReentrantReadWriteLock_5
----------------------------------------------------------------
stdout:
Is write locked: false

================================================================

Sample: ReentrantReadWriteLock_ReadLock_2
----------------------------------------------------------------
stdout:
Reading shared data...

================================================================

Sample: ReentrantReadWriteLock_ReadLock_4
----------------------------------------------------------------
stdout:
Is lock acquired: true

================================================================

Sample: ReentrantReadWriteLock_ReadLock_5
----------------------------------------------------------------
stdout:
Read lock acquired

================================================================

Sample: StampedLock_1
----------------------------------------------------------------
stdout:
Optimistic reading successful

================================================================

Sample: StampedLock_2
----------------------------------------------------------------
================================================================

Sample: StampedLock_3
----------------------------------------------------------------
stdout:
Write lock acquired

================================================================

Sample: StampedLock_5
----------------------------------------------------------------
stdout:
Optimistic read conversion failed

================================================================

