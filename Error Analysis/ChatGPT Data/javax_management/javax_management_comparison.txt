Sample: 0 Attribute
----------------------------------------------------------------
1. `Object getValue()`: Returns the value of the attribute.
2. `void setValue(Object value)`: Sets the value of the attribute to the specified value.
3. `String getName()`: Returns the name of the attribute.
4. `boolean isReadable()`: Checks if the attribute is readable.
5. `boolean isWritable()`: Checks if the attribute is writable.
================================================================

Sample: 1 AttributeChangeNotification
----------------------------------------------------------------
1. `String getAttributeName()`: This method returns the name of the attribute that has changed.
2. `Attribute getValue()`: This method returns the new value of the attribute that has changed.
3. `AttributeChangeNotification clone()`: This method creates and returns a copy of this object.
4. `String toString()`: This method returns a string representation of the object.
5. `void setSequenceNumber(long newValue)`: This method sets the sequence number of the notification.
================================================================

Sample: 2 AttributeChangeNotificationFilter
----------------------------------------------------------------
1. `void enableAttribute(String attribute)`: This method enables the specified attribute for notification filtering.
2. `void disableAttribute(String attribute)`: This method disables the specified attribute for notification filtering.
3. `String[] getEnabledAttributes()`: This method returns an array of the currently enabled attributes for notification filtering.
4. `boolean isAttributeEnabled(String attribute)`: This method checks if the specified attribute is enabled for notification filtering.
5. `void setAttributeName(String attribute)`: This method sets the attribute name for notification filtering.
================================================================

Sample: 3 AttributeList
----------------------------------------------------------------
1. `boolean contains(Attribute attribute)`: This method returns true if the list contains the specified Attribute object.

2. `int size()`: This method returns the number of attributes in the list.

3. `void add(Attribute attribute)`: This method adds the specified Attribute object to the end of the list.

4. `boolean remove(Attribute attribute)`: This method removes the specified Attribute object from the list.

5. `Attribute get(int index)`: This method returns the Attribute object at the specified index in the list.
================================================================

Sample: 4 AttributeValueExp
----------------------------------------------------------------
1. `boolean isNumericValue()`: This method returns a boolean indicating if the value is numeric.
2. `String getUnits()`: This method returns the units for the attribute value.
3. `boolean isInstanceOf(String className)`: This method returns a boolean indicating if the value is an instance of the specified class name.
4. `long longValue()`: This method returns the long value of the attribute.
5. `double doubleValue()`: This method returns the double value of the attribute.
================================================================

Sample: 5 DefaultLoaderRepository
----------------------------------------------------------------
1. `MBeanClassLoaderRepository class_loader_repository()`: This method returns the MBeanClassLoaderRepository used by the DefaultLoaderRepository.
2. `DefaultLoaderRepository new_instance()`: This method creates a new instance of DefaultLoaderRepository.
3. `String[] load_all_class_names()`: This method returns an array of class names loaded by the DefaultLoaderRepository.
4. `ClassLoader load_class(String className)`: This method loads the class with the specified name using the DefaultLoaderRepository.
5. `void addMBean(ClassLoader loader, ObjectName name)`: This method adds an MBean server to the list maintained by the DefaultLoaderRepository.
================================================================

Sample: 6 ImmutableDescriptor
----------------------------------------------------------------
1. `java.lang.Object getField(String fieldName)`: This method returns the value of the named field.
2. `String[] getFieldNames()`: This method returns an array of field names.
3. `String[] getFields()`: This method returns an array of fields in the descriptor.
4. `java.lang.String[] legalValues(String name)`: This method returns the legal values for a field.
5. `boolean isValid(String name, Object value)`: This method checks if a field name and value are valid.
================================================================

Sample: 7 JMX
----------------------------------------------------------------
1. `void registerMBean(Object object, ObjectName name)`: This method registers an MBean in the MBean server.
2. `void unregisterMBean(ObjectName name)`: This method unregisters an MBean from the MBean server.
3. `MBeanInfo getMBeanInfo(ObjectName name)`: This method retrieves the metadata that describes an MBean.
4. `List<ObjectName> queryNames(ObjectName name, QueryExp query)`: This method queries the MBean server to get a list of matching object names.
5. `void addNotificationListener(ObjectName name, NotificationListener listener, NotificationFilter filter, Object handback)`: This method adds a notification listener to a registered MBean.
================================================================

Sample: 8 MBeanAttributeInfo
----------------------------------------------------------------
1. `String getName()`: Returns the name of the attribute.
2. `String getDescription()`: Returns a human-readable description of the attribute.
3. `boolean isReadable()`: Returns true if the attribute is readable, false otherwise.
4. `boolean isWritable()`: Returns true if the attribute is writable, false otherwise.
5. `boolean isIs()` : Returns true if the attribute is a boolean getter, false otherwise.
================================================================

Sample: 9 MBeanConstructorInfo
----------------------------------------------------------------
1. `String getDescription()`: This method returns the description of the constructor.
2. `int getDescriptor()`: This method returns the descriptor for the constructor.
3. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects, one per parameter, describing each parameter in the constructor.
4. `String toString()`: This method returns a string representation of the MBeanConstructorInfo object.
5. `boolean equals(Object obj)`: This method compares the specified object with this MBeanConstructorInfo object for equality.
================================================================

Sample: 10 MBeanFeatureInfo
----------------------------------------------------------------
1. `String getDescription()`: Returns a human-readable description of the MBean feature.
2. `String getName()`: Returns the name of the MBean feature.
3. `String getType()`: Returns the type of the MBean feature.
4. `boolean isReadable()`: Returns true if the MBean feature is readable, false otherwise.
5. `boolean isWritable()`: Returns true if the MBean feature is writable, false otherwise.
================================================================

Sample: 11 MBeanInfo
----------------------------------------------------------------
1. `String getDescription()`: This method returns the human readable description of the MBean.
2. `String getClassName()`: This method returns the Java class name of the MBean.
3. `MBeanAttributeInfo[] getAttributes()`: This method returns an array of MBeanAttributeInfo objects describing the attributes exposed for management by the MBean.
4. `MBeanConstructorInfo[] getConstructors()`: This method returns an array of MBeanConstructorInfo objects describing the public constructors of the MBean.
5. `MBeanNotificationInfo[] getNotifications()`: This method returns an array of MBeanNotificationInfo objects describing the notifications emitted by the MBean.
================================================================

Sample: 12 MBeanNotificationInfo
----------------------------------------------------------------
1. `String[] getNotifTypes()`: This method returns an array of notification types that the MBean can send.
2. `String getDescription()`: This method returns a human-readable description of the notifications sent by the MBean.
3. `String getName()`: This method returns the name of the notification class.
4. `boolean isDescriptor()`: This method indicates whether the Class object for the descriptor is included in the MBeanNotificationInfo.
5. `String[] getNotifTypes()`: This method returns an array of notification types that the MBean can send.
================================================================

Sample: 13 MBeanOperationInfo
----------------------------------------------------------------
1. `String getDescription()`: This method returns the human-readable description of the operation.
2. `int getImpact()`: This method returns the impact of the operation, which can be one of the MBeanOperationInfo.INFO, MBeanOperationInfo.ACTION, or MBeanOperationInfo.ACTION_INFO constants.
3. `String getName()`: This method returns the name of the operation.
4. `MBeanParameterInfo[] getSignature()`: This method returns an array of MBeanParameterInfo objects, containing the parameters for the operation.
5. `String getReturnType()`: This method returns the return type of the operation as a String.
================================================================

Sample: 14 MBeanParameterInfo
----------------------------------------------------------------
1. `String getDescription()`: This method returns the description of the parameter.
2. `String getName()`: This method returns the name of the parameter.
3. `int hashCode()`: This method returns the hash code value for the object.
4. `boolean equals(Object obj)`: This method compares the specified object with this MBeanParameterInfo instance for equality.
5. `String toString()`: This method returns a string representation of the object.
================================================================

Sample: 15 MBeanPermission
----------------------------------------------------------------
1. `void add(javax.management.MBeanPermission.Permission permission)`: This method adds a new MBeanPermission to the current object.
2. `void remove(javax.management.MBeanPermission.Permission permission)`: This method removes the specified MBeanPermission from the current object.
3. `boolean implies(javax.management.MBeanPermission.Permission permission)`: This method checks if the specified permission is implied by this MBeanPermission object.
4. `java.lang.String getActions()`: This method returns the actions associated with this MBeanPermission object.
5. `java.lang.String getClassName()`: This method returns the class name of the MBean associated with this MBeanPermission object.
================================================================

Sample: 16 MBeanServerBuilder
----------------------------------------------------------------
1. `MBeanServer newMBeanServer(java.lang.String defaultDomain, javax.management.MBeanServer outer, javax.management.MBeanServerDelegate delegate)`: This method creates a new MBeanServer implementation of the specified MBeanServerBuilder.
2. `MBeanServerDelegate newMBeanServerDelegate()`: This method creates a new MBeanServerDelegate implementation.
3. `MBeanServerBuilder newMBeanServerBuilder()`: This method creates a new MBeanServerBuilder implementation.
4. `void setMBeanServerBuilder(javax.management.MBeanServerBuilder builder)`: This method sets the MBeanServerBuilder delegate for the MBeanServerFactory.
5. `void setMBeanServerDelegate(javax.management.MBeanServerDelegate delegate)`: This method sets the MBeanServerDelegate delegate for the MBeanServerFactory.
================================================================

Sample: 17 MBeanServerDelegate
----------------------------------------------------------------
1. `String getImplementationName()`: This method returns the implementation name.
2. `String getImplementationVersion()`: This method returns the implementation version.
3. `String getImplementationVendor()`: This method returns the implementation vendor.
4. `String getSpecificationName()`: This method returns the specification name.
5. `String getSpecificationVersion()`: This method returns the specification version.
================================================================

Sample: 18 MBeanServerFactory
----------------------------------------------------------------
1. `MBeanServer createMBeanServer()`: This method creates a new MBeanServer instance.
2. `List<MBeanServer> findMBeanServer(String agentId)`: This method returns a list of MBeanServer instances based on the provided agentId.
3. `void releaseMBeanServer(MBeanServer mbeanServer)`: This method releases a MBeanServer instance.
4. `MBeanServer getDefaultMBeanServer()`: This method returns the default MBeanServer instance.
5. `MBeanServer newMBeanServer(String defaultDomain, MBeanServer outer)`: This method creates a new MBeanServer instance with the specified default domain and outer MBeanServer.
================================================================

Sample: 19 MBeanServerInvocationHandler
----------------------------------------------------------------
1. `Object invoke(ObjectName name, String operationName, Object[] params, String[] signature)`: This method invokes a method on a JMX MBean.
2. `Object getAttribute(ObjectName name, String attribute)`: This method gets the value of a specific attribute of a JMX MBean.
3. `void setAttribute(ObjectName name, Attribute attribute)`: This method sets the value of a specific attribute of a JMX MBean.
4. `Object[] getAttributes(ObjectName name, String[] attributes)`: This method gets the values of multiple attributes of a JMX MBean.
5. `void setAttributes(ObjectName name, AttributeList attributes)`: This method sets the values of multiple attributes of a JMX MBean.
================================================================

Sample: 20 MBeanServerNotification
----------------------------------------------------------------
1. `ObjectName getMBeanName()`: Returns the object name of the MBean that generated the notification.
2. `String getType()`: Returns the type of the notification.
3. `MBeanServerNotification clone()`: Returns a clone of this notification.
4. `String getMessage()`: Returns the message associated with the notification.
5. `ObjectName getMBeanServerName()`: Returns the object name of the MBean server that sent the notification.
================================================================

Sample: 21 MBeanServerPermission
----------------------------------------------------------------
1. `void checkPermission(javax.management.MBeanPermission perm)`: This method checks if the specified MBeanPermission object is granted.
2. `void checkPermission(javax.management.MBeanTrustPermission trustPerm)`: This method checks if the specified MBeanTrustPermission object is granted.
3. `boolean equals(Object p)`: This method compares the specified object with this MBeanServerPermission object for equality.
4. `int hashCode()`: This method returns the hash code value for this MBeanServerPermission object.
5. `String toString()`: This method returns a string representation of the object.
================================================================

Sample: 22 MBeanTrustPermission
----------------------------------------------------------------
1. `void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method adds a listener to the MBean
2. `void removeNotificationListener(NotificationListener listener)`: This method removes a listener from the MBean
3. `void deleteNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method deletes a listener from the MBean
4. `void removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method removes a listener from the MBean with a filter and handback object
5. `void sendNotification(Notification notification)`: This method sends a notification to all registered listeners.
================================================================

Sample: 23 Notification
----------------------------------------------------------------
1. `void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method adds a listener to receive notifications from the MBean.
2. `void removeNotificationListener(NotificationListener listener)`: This method removes a listener from the list of listeners for notifications emitted by the MBean.
3. `void removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method removes a listener from the list of listeners for notifications emitted by the MBean, filtering based on the passed filter and handback object.
4. `void sendNotification(Notification notification)`: This method sends a notification to the listeners registered to receive notifications from the MBean.
5. `void sendNotification(String message)`: This method constructs a notification with the specified message and sends it to the listeners registered to receive notifications from the MBean.
================================================================

Sample: 24 NotificationBroadcasterSupport
----------------------------------------------------------------
1. `void removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method removes a listener from this MBean. 
2. `void removeNotificationListener(NotificationListener listener)`: This method removes a listener from this MBean.
3. `void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback)`: This method adds a listener to this MBean.
4. `MBeanNotificationInfo[] getNotificationInfo()`: This method returns an array of all the notification instances that this MBean sends.
5. `void sendNotification(Notification notification)`: This method sends a notification.
================================================================

Sample: 25 NotificationFilterSupport
----------------------------------------------------------------
1. `void enableType(String type)`: This method enables the filtering of notifications based on the specified notification type.
2. `void disableType(String type)`: This method disables the filtering of notifications based on the specified notification type.
3. `boolean isNotificationEnabled(Notification notification)`: This method checks if the specified notification is enabled based on the filtering criteria.
4. `String getEnabledTypes()`: This method returns a comma-separated string of all the enabled notification types.
5. `void enableType(String type, boolean enabled)`: This method enables or disables the filtering of notifications based on the specified notification type.
================================================================

Sample: 26 ObjectInstance
----------------------------------------------------------------
1. ObjectName getObjectName()
   - Return type: ObjectName

2. MBeanInfo getMBeanInfo()
   - Return type: MBeanInfo

3. boolean equals(Object obj)
   - Return type: boolean
   - Parameters: Object obj

4. int hashCode()
   - Return type: int

5. String toString()
   - Return type: String
================================================================

Sample: 27 ObjectName
----------------------------------------------------------------
1. `boolean isPattern()`: This method returns true if the ObjectName instance represents a pattern.
2. `String getKeyProperty(String key)`: This method returns the value associated with the specified key in the ObjectName.
3. `String getDomain()`: This method returns the domain part of the ObjectName.
4. `boolean applyPattern(String name)`: This method sets the ObjectName as a pattern based on the given name.
5. `Hashtable<String, String> getKeyPropertyList()`: This method returns a Hashtable containing the key properties of the ObjectName.
================================================================

Sample: 28 Query
----------------------------------------------------------------
1. `ObjectValue op`
2. `String toString()`
================================================================

Sample: 29 QueryEval
----------------------------------------------------------------
1. `javax.management.QueryEval()`: This constructor creates a new QueryEval object.
2. `java.lang.Object clone()`: This method creates and returns a copy of this QueryEval object.
3. `java.lang.String getExpression()`: This method returns the expression string of this QueryEval object.
4. `java.lang.String getInstance()` : This method returns the MBeanServerDelegate string of this QueryEval object.
5. `javax.management.QueryEval setError()`: This method sets the error flag of this QueryEval object.
================================================================

Sample: 30 StandardEmitterMBean
----------------------------------------------------------------
1. void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback): This method adds a notification listener to this MBean.

2. void removeNotificationListener(NotificationListener listener): This method removes a listener from this MBean.

3. MBeanNotificationInfo[] getNotificationInfo(): This method returns an array of MBeanNotificationInfo objects describing the notifications emitted by this MBean.

4. void sendNotification(Notification notification): This method sends a notification.

5. void sendNotification(String message): This method sends a textual notification.
================================================================

Sample: 31 StandardMBean
----------------------------------------------------------------
1. `String getClassName()`: This method returns the class name of the MBean interface.
2. `String getDescription()`: This method returns the human readable description of the MBean.
3. `ObjectName getObjectName()`: This method returns the ObjectName of the MBean.
4. `String getObjectName()`: This method returns the ObjectName of the MBean as a String.
5. `void setModelMBeanInfo(ModelMBeanInfo mbi)`: This method sets the ModelMBeanInfo for the MBean.
================================================================

Sample: 32 StringValueExp
----------------------------------------------------------------
1. `java.lang.String getValue()`: Returns the string value represented by this StringValueExp object.
2. `java.lang.String toString()`: Returns a string representation of the StringValueExp object.
3. `java.lang.StringExp apply(ObjectName name)` : Applies the StringValueExp to the MBean specified.
4. `java.lang.Object clone()`: Creates a new instance of the StringValueExp object with the same value as this instance.
5. `boolean isStringValue()`: Returns true as this is a StringValueExp.
================================================================

