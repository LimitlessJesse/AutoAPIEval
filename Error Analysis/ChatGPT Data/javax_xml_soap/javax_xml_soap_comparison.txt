Sample: 0 AttachmentPart
----------------------------------------------------------------
1. `String getContentId()`: This method returns the content id of this AttachmentPart.
2. `void clearContent()`: This method removes the content of this AttachmentPart.
3. `void setRawContent(InputStream content, String contentType)`: This method sets the raw content of this AttachmentPart with the specified InputStream and content type.
4. `InputStream getRawContent()`: This method returns the raw content of this AttachmentPart as an InputStream.
5. `void addMimeHeader(String name, String value)`: This method adds a MIME header with the specified name and value to this AttachmentPart.
================================================================

Sample: 1 MessageFactory
----------------------------------------------------------------
1. `javax.xml.soap.SOAPMessage createMessage()`: This method creates a new SOAPMessage object.
2. `javax.xml.soap.SOAPMessage createMessage(javax.xml.soap.MimeHeaders headers, java.io.InputStream in)`: This method creates a new SOAPMessage object with the specified MimeHeaders and InputStream.
3. `javax.xml.soap.Detail createDetail()`: This method creates a new Detail object.
4. `javax.xml.soap.Name createName(java.lang.String localName, java.lang.String prefix, java.lang.String uri)`: This method creates a new Name object with the specified local name, prefix, and URI.
5. `javax.xml.soap.SOAPHeader createHeader()`: This method creates a new SOAPHeader object.
================================================================

Sample: 2 MimeHeader
----------------------------------------------------------------
1. `String getValue()`: This method returns the value of this MimeHeader object.
2. `String getName()`: This method returns the name of this MimeHeader object.
3. `void setHeader(String name, String value)`: This method sets the specified name and value as the header.
4. `Iterator getAllHeaders()`: This method returns an iterator over all the MimeHeader objects in this MimeHeaders object.
5. `int getHeaderSize()`: This method returns the number of headers in this MimeHeaders object.
================================================================

Sample: 3 MimeHeaders
----------------------------------------------------------------
1. `void addHeader(String name, String value)`: This method adds a Mime header with the specified name and value.
2. `String getHeader(String name)`: This method returns the value of the specified Mime header.
3. `Iterator getAllHeaders()`: This method returns an Iterator of all the Mime headers in the MimeHeaders object.
4. `void setHeader(String name, String value)`: This method sets the specified Mime header with the provided value.
5. `void removeHeader(String name)`: This method removes the specified Mime header.
================================================================

Sample: 4 SAAJMetaFactory
----------------------------------------------------------------
1. `SOAPMessage createMessage()`: This method creates a new instance of a SOAPMessage.
2. `AttachmentPart createAttachmentPart()`: This method creates a new instance of an AttachmentPart.
3. `Detail createDetail()`: This method creates a new instance of a Detail object.
4. `Name createName(String localName, String prefix, String uri)`: This method creates a new Name object with the specified local name, prefix, and URI.
5. `SOAPFactory newInstance()` : This method creates a new instance of a SOAPFactory.
================================================================

Sample: 5 SAAJResult
----------------------------------------------------------------
1. `void setSOAPMessage(SOAPMessage message)`: Sets the SOAPMessage to be used as the source for the transformation.
2. `SOAPMessage getSOAPMessage()`: Returns the SOAPMessage object that represents the result.
3. `void writeTo(Result result)`: Transforms the content to the specified result, which must be an object that implements the javax.xml.transform.Result interface.
4. `void writeTo(OutputStream out)`: Writes the content to the specified output stream.
5. `void writeTo(Writer out)`: Writes the content to the specified writer.
================================================================

Sample: 6 SOAPConnection
----------------------------------------------------------------
1. `SOAPMessage call(SOAPMessage message, Object to)`: This method sends the specified SOAPMessage object to the specified endpoint and returns the response as a SOAPMessage.
2. `void close()`: This method closes the SOAPConnection.
3. `SOAPMessage get(Object to)`: This method retrieves the specified endpoint's current implementation for receiving messages.
4. `void setMaintainSession(boolean maintain)`: This method sets whether this SOAPConnection should maintain sessions.
5. `void setTimeOut(int timeout)`: This method sets the timeout in milliseconds for an entire SOAPConnection.
================================================================

Sample: 7 SOAPConnectionFactory
----------------------------------------------------------------
1. `SOAPConnection createConnection()`: This method creates a new SOAP connection.
2. `void dispose()`: This method closes the connection to the SOAP factory.
3. `SOAPConnection getConnection()`: This method returns the currently active SOAP connection.
4. `SOAPConnectionFactory newInstance()`: This method gets an instance of the SOAPConnectionFactory.
5. `SOAPMessage createMessage()`: This method creates a new SOAP message.
================================================================

Sample: 8 SOAPElementFactory
----------------------------------------------------------------
1. `SOAPElement create(String localName)`: This method creates a new SOAPElement object with the specified local name.
2. `SOAPElement addChildElement(QName qname)`: This method creates a new SOAPElement object with the specified QName and adds it as a child element.
3. `SOAPElement addTextNode(String text)`: This method creates a new SOAPElement object representing a text node with the specified text.
4. `SOAPElement addAttribute(QName qname, String value)`: This method adds an attribute with the specified QName and value to the SOAPElement.
5. `SOAPElement addNamespaceDeclaration(String prefix, String uri)`: This method adds a namespace declaration with the specified prefix and URI to the SOAPElement.
================================================================

Sample: 9 SOAPFactory
----------------------------------------------------------------
1. `SOAPElement createElement(Name name)`: This method creates a new SOAPElement object initialized with the specified Name object.
2. `SOAPElement createElement(String localName)`: This method creates a new SOAPElement object initialized with the specified local name.
3. `Name createName(String localName)`: This method creates a new Name object for the specified local name.
4. `Name createName(String localName, String prefix, String uri)`: This method creates a new Name object for the specified local name, prefix, and URI.
5. `SOAPFault createFault(String reasonText, QName faultCode)`: This method creates a new SOAPFault object with the specified reason text and fault code.
================================================================

Sample: 10 SOAPMessage
----------------------------------------------------------------
1. `javax.xml.soap.SOAPPart getSOAPPart()`: This method returns the SOAPPart object for this SOAPMessage.
2. `javax.xml.soap.SOAPEnvelope getSOAPEnvelope()`: This method returns the SOAPEnvelope object associated with this SOAPMessage.
3. `javax.xml.soap.SOAPBody getSOAPBody()`: This method returns the SOAPBody object for this SOAPMessage.
4. `javax.xml.soap.SOAPHeader getSOAPHeader()`: This method returns the SOAPHeader object for this SOAPMessage.
5. `void saveChanges()`: This method saves any changes made to this SOAPMessage.
================================================================

Sample: 11 SOAPPart
----------------------------------------------------------------
1. `javax.xml.soap.SOAPEnvelope getEnvelope()`: This method retrieves the SOAPEnvelope object associated with this SOAPPart.
2. `void setContent(Source source)`: This method sets the content of the SOAPPart with the given Source object.
3. `java.util.Iterator<MimeHeader> getAllMimeHeaders()`: This method returns an Iterator over all the MIME headers for this SOAPPart object.
4. `javax.xml.soap.SOAPMessage getParent()`: This method returns the SOAPMessage object that contains this SOAPPart object.
5. `void removeAllMimeHeaders()`: This method removes all the MIME headers for this SOAPPart object.
================================================================

