Sample: AffineTransform_1
----------------------------------------------------------------
stdout:
AffineTransform[[0.0, -1.0, 0.0], [1.0, -0.0, 0.0]]

================================================================

Sample: AffineTransform_2
----------------------------------------------------------------
stdout:
Transformed: AffineTransform[[2.0, 0.0, 0.0], [0.0, 1.5, 0.0]]

================================================================

Sample: AffineTransform_3
----------------------------------------------------------------
stdout:
Transform matrix after shearing: AffineTransform[[1.0, 0.5, 0.0], [0.1, 1.0, 0.0]]

================================================================

Sample: AffineTransform_4
----------------------------------------------------------------
stdout:
Transform after translation: AffineTransform[[1.0, 0.0, 10.0], [0.0, 1.0, 20.0]]

================================================================

Sample: AffineTransform_5
----------------------------------------------------------------
stdout:
Concatenated Transform: AffineTransform[[1.414213562373095, -1.414213562373095, 2.0E-15], [1.414213562373095, 1.414213562373095, 28.284271247461906]]

================================================================

Sample: Arc2D_1
----------------------------------------------------------------
stdout:
Angle Extent: 90.0

================================================================

Sample: Arc2D_2
----------------------------------------------------------------
stdout:
Start Angle: 45.0

================================================================

Sample: Arc2D_3
----------------------------------------------------------------
stdout:
Arc Type: 0

================================================================

Sample: Arc2D_4
----------------------------------------------------------------
stdout:
Bounds: java.awt.geom.Rectangle2D$Double[x=50.0,y=0.0,w=49.99999999999999,h=50.000000000000014]

================================================================

Sample: Arc2D_Double_1
----------------------------------------------------------------
stdout:
Angle Extent: 90.0

================================================================

Sample: Arc2D_Double_2
----------------------------------------------------------------
stdout:
Angle Start: 45.0

================================================================

Sample: Arc2D_Double_3
----------------------------------------------------------------
stdout:
Height of the arc: 100.0

================================================================

Sample: Arc2D_Double_4
----------------------------------------------------------------
stdout:
Width of the elliptical arc: 100.0

================================================================

Sample: Arc2D_Double_5
----------------------------------------------------------------
stdout:
Arc X: 100.0
Arc Y: 100.0
Arc Width: 200.0
Arc Height: 150.0
Start Angle: 45.0
Extent: 90.0
Arc Type: 0

================================================================

Sample: Arc2D_Float_1
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Arc2D_Float_1.java:5: error: incompatible types: possible lossy conversion from double to float
        Arc2D.Float arc = new Arc2D.Float(1.0f, 2.0f, 100.0f, 200.0f, 45.0, 90.0, Arc2D.OPEN);
                                                                      ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: Arc2D_Float_3
----------------------------------------------------------------
stdout:
Start Angle: 45.0

================================================================

Sample: Arc2D_Float_4
----------------------------------------------------------------
stdout:
Angle Extent: 90.0

================================================================

Sample: Arc2D_Float_5
----------------------------------------------------------------
stdout:
Angle start: 45.0

================================================================

Sample: Area_1
----------------------------------------------------------------
stdout:
Area 1: java.awt.geom.Area@16f7c8c1

================================================================

Sample: Area_2
----------------------------------------------------------------
stdout:
java.awt.geom.Rectangle2D$Double[x=0.0,y=0.0,w=100.0,h=100.0]

================================================================

Sample: Area_3
----------------------------------------------------------------
stdout:
Intersected Area: java.awt.geom.Area@17baae6e

================================================================

Sample: Area_4
----------------------------------------------------------------
stdout:
Result of exclusiveOr: java.awt.geom.Area@16f7c8c1

================================================================

Sample: Area_5
----------------------------------------------------------------
stdout:
Is Area empty? true

================================================================

Sample: CubicCurve2D_1
----------------------------------------------------------------
stdout:
P1: (0.0, 0.0)

================================================================

Sample: CubicCurve2D_2
----------------------------------------------------------------
stdout:
P2 x-coordinate: 150.0
P2 y-coordinate: 0.0

================================================================

Sample: CubicCurve2D_3
----------------------------------------------------------------
stdout:
Control Point 1: (50.0, 50.0)

================================================================

Sample: CubicCurve2D_4
----------------------------------------------------------------
stdout:
Control Point 2: (150.0, 100.0)

================================================================

Sample: CubicCurve2D_Double_1
----------------------------------------------------------------
stdout:
P1 Point: (0.0, 0.0)

================================================================

Sample: CubicCurve2D_Double_2
----------------------------------------------------------------
stdout:
Control point 1: (20.0, 20.0)

================================================================

Sample: CubicCurve2D_Double_3
----------------------------------------------------------------
stdout:
Control point 2: Point2D.Double[100.0, 0.0]

================================================================

Sample: CubicCurve2D_Double_4
----------------------------------------------------------------
stdout:
P2(x,y): Point2D.Double[150.0, 50.0]

================================================================

Sample: CubicCurve2D_Float_1
----------------------------------------------------------------
stdout:
java.awt.geom.CubicCurve2D$Float@706a04ae

================================================================

Sample: CubicCurve2D_Float_2
----------------------------------------------------------------
stdout:
P1 Point: (0.0, 0.0)

================================================================

Sample: CubicCurve2D_Float_3
----------------------------------------------------------------
stdout:
P2 coordinates: (150.0, 150.0)

================================================================

Sample: CubicCurve2D_Float_4
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/CubicCurve2D_Float_4.java:8: error: cannot find symbol
        Point2D ctrlP1 = curve.getCtrlP1();
        ^
  symbol:   class Point2D
  location: class CubicCurve2D_Float_4
1 error


================================================================

Sample: CubicCurve2D_Float_5
----------------------------------------------------------------
stdout:
Control Point 2: Point2D.Float[5.0, 6.0]

================================================================

Sample: Dimension2D_1
----------------------------------------------------------------
stdout:
Width: 10.0

================================================================

Sample: Dimension2D_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_2.java:5: error: cannot find symbol
        Dimension2D dimension = new Dimension(10, 20);
                                    ^
  symbol:   class Dimension
  location: class Dimension2D_2
1 error


================================================================

Sample: Dimension2D_3
----------------------------------------------------------------
stdout:
Width: 0.0
Height: 0.0

================================================================

Sample: Dimension2D_4
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_4.java:5: error: cannot find symbol
        Dimension2D dimension = new Dimension(10, 20);
                                    ^
  symbol:   class Dimension
  location: class Dimension2D_4
1 error


================================================================

Sample: Dimension2D_5
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/Dimension2D_5.java:5: error: cannot find symbol
        Dimension2D dimension = new Dimension(10.5, 20.3);
                                    ^
  symbol:   class Dimension
  location: class Dimension2D_5
1 error


================================================================

Sample: Ellipse2D_5
----------------------------------------------------------------
stdout:
Ellipses intersect: true

================================================================

Sample: Ellipse2D_Double_1
----------------------------------------------------------------
stdout:
X coordinate of the ellipse: 0.0

================================================================

Sample: Ellipse2D_Double_2
----------------------------------------------------------------
stdout:
Y coordinate of Ellipse: 0.0

================================================================

Sample: Ellipse2D_Double_3
----------------------------------------------------------------
stdout:
Width of the ellipse: 100.0

================================================================

Sample: Ellipse2D_Double_4
----------------------------------------------------------------
stdout:
Height of the ellipse: 50.0

================================================================

Sample: Ellipse2D_Float_1
----------------------------------------------------------------
stdout:
Ellipse Frame: java.awt.geom.Ellipse2D$Float@21b20000

================================================================

Sample: FlatteningPathIterator_1
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_1.java:7: error: incompatible types: int[] cannot be converted to int
        FlatteningPathIterator pathIterator = new FlatteningPathIterator(new java.awt.geom.GeneralPath(types, coords), 0.5);
                                                                                                       ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: FlatteningPathIterator_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.awt.geom.PathIterator.isDone()" because "this.src" is null
	at java.desktop/java.awt.geom.FlatteningPathIterator.next(FlatteningPathIterator.java:204)
	at java.desktop/java.awt.geom.FlatteningPathIterator.<init>(FlatteningPathIterator.java:129)
	at java.desktop/java.awt.geom.FlatteningPathIterator.<init>(FlatteningPathIterator.java:95)
	at FlatteningPathIterator_2.main(FlatteningPathIterator_2.java:5)

================================================================

Sample: FlatteningPathIterator_3
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_3.java:7: error: cannot find symbol
        Path2D path = new Path2D.Double();
        ^
  symbol:   class Path2D
  location: class FlatteningPathIterator_3
./Data/java_awt_geom/javaFiles/FlatteningPathIterator_3.java:7: error: package Path2D does not exist
        Path2D path = new Path2D.Double();
                                ^
2 errors


================================================================

Sample: Line2D_Double_1
----------------------------------------------------------------
stdout:
Point 1 coordinates: (0.0, 0.0)

================================================================

Sample: Line2D_Double_2
----------------------------------------------------------------
stdout:
P2: Point2D.Double[10.0, 10.0]

================================================================

Sample: Line2D_Double_3
----------------------------------------------------------------
stdout:
X1 coordinate: 0.0

================================================================

Sample: Line2D_Double_4
----------------------------------------------------------------
stdout:
Y coordinate of the starting point: 0.0

================================================================

Sample: Line2D_Double_5
----------------------------------------------------------------
stdout:
X2 coordinate: 10.0

================================================================

Sample: Line2D_Float_5
----------------------------------------------------------------
stdout:
Line coordinates: (0.0, 0.0), (100.0, 100.0)

================================================================

Sample: Path2D_1
----------------------------------------------------------------
stdout:
Path moved to (10.0, 20.0)

================================================================

Sample: Path2D_2
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@7276c8cd

================================================================

Sample: Path2D_3
----------------------------------------------------------------
================================================================

Sample: Path2D_4
----------------------------------------------------------------
================================================================

Sample: Path2D_5
----------------------------------------------------------------
stdout:
Point (5, 5) is inside the path: false

================================================================

Sample: Path2D_Double_1
----------------------------------------------------------------
stdout:
java.awt.geom.Path2D$Double@1786f9d5

================================================================

Sample: Path2D_Double_2
----------------------------------------------------------------
stdout:
0

================================================================

Sample: Path2D_Double_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.awt.geom.IllegalPathStateException: missing initial moveto in path definition
	at java.desktop/java.awt.geom.Path2D$Double.needRoom(Path2D.java:1250)
	at java.desktop/java.awt.geom.Path2D$Double.curveTo(Path2D.java:1347)
	at Path2D_Double_3.main(Path2D_Double_3.java:7)

================================================================

Sample: Path2D_Float_1
----------------------------------------------------------------
================================================================

Sample: Path2D_Float_2
----------------------------------------------------------------
================================================================

Sample: Path2D_Float_3
----------------------------------------------------------------
================================================================

Sample: Path2D_Float_4
----------------------------------------------------------------
================================================================

Sample: Point2D_1
----------------------------------------------------------------
stdout:
Distance between point1 and point2: 5.0

================================================================

Sample: Point2D_2
----------------------------------------------------------------
stdout:
X Coordinate: 3.0

================================================================

Sample: Point2D_3
----------------------------------------------------------------
stdout:
Y coordinate: 4.0

================================================================

Sample: Point2D_5
----------------------------------------------------------------
stdout:
Point location set to: (10.5, 20.0)

================================================================

Sample: Point2D_Double_1
----------------------------------------------------------------
stdout:
X Coordinate: 3.0

================================================================

Sample: Point2D_Double_2
----------------------------------------------------------------
stdout:
Y coordinate: 4.0

================================================================

Sample: Point2D_Double_3
----------------------------------------------------------------
stdout:
Point Location: (3.5, 7.2)

================================================================

Sample: Point2D_Float_2
----------------------------------------------------------------
stdout:
Point location: 10.5, 20.700000762939453

================================================================

Sample: Point2D_Float_3
----------------------------------------------------------------
stdout:
Point2D.Float[10.5, 20.5]

================================================================

Sample: Point2D_Float_5
----------------------------------------------------------------
stdout:
X coordinate: 5.0

================================================================

Sample: QuadCurve2D_Double_1
----------------------------------------------------------------
stdout:
P1: 0.0, 0.0

================================================================

Sample: QuadCurve2D_Double_2
----------------------------------------------------------------
output:
./Data/java_awt_geom/javaFiles/QuadCurve2D_Double_2.java:6: error: package QuadCurve2D does not exist
        QuadCurve2D.Double curve = new QuadCurve2D.Double(10, 10, 50, 80, 90, 10);
                   ^
./Data/java_awt_geom/javaFiles/QuadCurve2D_Double_2.java:6: error: package QuadCurve2D does not exist
        QuadCurve2D.Double curve = new QuadCurve2D.Double(10, 10, 50, 80, 90, 10);
                                                  ^
2 errors


================================================================

Sample: QuadCurve2D_Double_3
----------------------------------------------------------------
stdout:
P2 coordinates: (100.0, 0.0)

================================================================

Sample: QuadCurve2D_Double_4
----------------------------------------------------------------
stdout:
Curve control points set successfully.

================================================================

Sample: QuadCurve2D_Float_5
----------------------------------------------------------------
stdout:
java.awt.geom.QuadCurve2D$Float@2eda0940

================================================================

Sample: Rectangle2D_3
----------------------------------------------------------------
stdout:
Rectangle coordinates: (10.0, 10.0)
Rectangle dimensions: 100.0 x 50.0

================================================================

Sample: Rectangle2D_4
----------------------------------------------------------------
stdout:
X: 10.0
Y: 10.0
Width: 100.0
Height: 50.0

================================================================

Sample: Rectangle2D_5
----------------------------------------------------------------
stdout:
Intersection Area: 4.0

================================================================

Sample: Rectangle2D_Double_1
----------------------------------------------------------------
stdout:
Width: 20.0

================================================================

Sample: Rectangle2D_Double_2
----------------------------------------------------------------
stdout:
Height of the rectangle: 50.0

================================================================

Sample: Rectangle2D_Double_4
----------------------------------------------------------------
stdout:
Rectangle X: 10.0
Rectangle Y: 10.0
Rectangle Width: 100.0
Rectangle Height: 50.0

================================================================

Sample: Rectangle2D_Float_4
----------------------------------------------------------------
stdout:
Is Rectangle Empty: true

================================================================

Sample: RoundRectangle2D_1
----------------------------------------------------------------
stdout:
Arc Width: 5.0

================================================================

Sample: RoundRectangle2D_2
----------------------------------------------------------------
stdout:
Arc Height: 20.0

================================================================

Sample: RoundRectangle2D_4
----------------------------------------------------------------
stdout:
Round Rectangle: x=10.0, y=10.0, width=100.0, height=50.0, arcWidth=20.0, arcHeight=20.0

================================================================

Sample: RoundRectangle2D_5
----------------------------------------------------------------
stdout:
X: 20.0, Y: 20.0, Width: 120.0, Height: 60.0

================================================================

Sample: RoundRectangle2D_Double_1
----------------------------------------------------------------
stdout:
Arc Width: 20.0

================================================================

Sample: RoundRectangle2D_Double_2
----------------------------------------------------------------
stdout:
Arc Height: 20.0

================================================================

Sample: RoundRectangle2D_Double_3
----------------------------------------------------------------
stdout:
X coordinate of the rectangle: 10.0

================================================================

Sample: RoundRectangle2D_Double_4
----------------------------------------------------------------
stdout:
Y coordinate of the rectangle: 10.0

================================================================

Sample: RoundRectangle2D_Float_3
----------------------------------------------------------------
stdout:
X: 10.0, Y: 10.0, Width: 100.0, Height: 50.0, ArcWidth: 20.0, ArcHeight: 20.0

================================================================

