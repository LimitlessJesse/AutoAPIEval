Sample: 0 JPEGHuffmanTable
----------------------------------------------------------------
1. `int[] getLengths()`: This method returns an array of lengths for the Huffman table.
2. `int[] getValues()`: This method returns an array of values for the Huffman table.
3. `int[] getCodes()`: This method returns an array of codes for the Huffman table.
4. `int getTableClass()`: This method returns the table class of the Huffman table.
5. `int hashCode()`: This method returns the hash code value for the object.
================================================================

Sample: 1 JPEGImageReadParam
----------------------------------------------------------------
1. `void setSourceRenderSize(Dimension size)`: Set the size to which images should be rendered during decoding.
2. `Dimension getSourceRenderSize()`: Get the size to which images should be rendered during decoding.
3. `void setQTable(int tableNum, byte[] qTable)`: Set the quantization table for the specified table number.
4. `byte[] getQTable(int tableNum)`: Get the quantization table for the specified table number.
5. `void setSourceSubsampling(int sourceXSubsampling, int sourceYSubsampling, int subsamplingXOffset, int subsamplingYOffset)`: Set the source subsampling parameters for the image read.
================================================================

Sample: 2 JPEGImageWriteParam
----------------------------------------------------------------
1. `void setCompressionQuality(float quality)`: This method sets the compression quality to be used.
2. `void setProgressiveMode(int mode)`: This method sets the type of progressive encoding to use.
3. `void setOptimizeHuffmanTables(boolean optimize)`: This method sets whether or not to optimize Huffman tables for the JPEG stream.
4. `void setWriteJFIFHeader(boolean write)`: This method sets whether or not to write a JFIF header in the output stream.
5. `void setWriteImageOnly(boolean imageOnly)`: This method sets whether to write only the image data, excluding any metadata.
================================================================

Sample: 3 JPEGQTable
----------------------------------------------------------------
1. `int[][] getTable()`: This method returns the quantization table as a two-dimensional array of integers.
2. `void setTable(int[][] qTable)`: This method sets the quantization table to the specified two-dimensional array of integers.
3. `boolean isTwoPass(): This method returns a boolean indicating if the quantization table requires two passes for encoding.
4. `int getLength()`: This method returns the length of the quantization table.
5. `void setQuality(float quality)`: This method sets the quality value for the quantization table.
================================================================

