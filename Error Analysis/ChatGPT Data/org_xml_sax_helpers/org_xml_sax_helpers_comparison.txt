Sample: 0 AttributeListImpl
----------------------------------------------------------------
1. `String getName(int i)`: This method returns the name of the attribute at the specified index i.
2. `String getType(int i)`: This method returns the type of the attribute at the specified index i.
3. `String getType(String name)`: This method returns the type of the attribute with the specified name.
4. `String getValue(int i)`: This method returns the value of the attribute at the specified index i.
5. `String getValue(String name)`: This method returns the value of the attribute with the specified name.
================================================================

Sample: 1 AttributesImpl
----------------------------------------------------------------
1. `void clear()`: This method clears all of the attribute values.
2. `int getIndex(String qName)`: This method returns the index of an attribute by qualified name.
3. `String getLocalName(int index)`: This method returns the local name of an attribute by index.
4. `String getQName(int index)`: This method returns the qualified (prefixed) name of an attribute by index.
5. `String getType(int index)`: This method returns the attribute type by index.
================================================================

Sample: 2 DefaultHandler
----------------------------------------------------------------
1. `void startElement(String uri, String localName, String qName, Attributes attributes)`: This method is called when an element start tag is encountered.
2. `void endElement(String uri, String localName, String qName)`: This method is called when an element end tag is encountered.
3. `void characters(char[] ch, int start, int length)`: This method is called when character data is encountered.
4. `void startDocument()`: This method is called at the start of the document.
5. `void endDocument()`: This method is called at the end of the document.
================================================================

Sample: 3 LocatorImpl
----------------------------------------------------------------
1. int getLineNumber()
2. String getPublicId()
3. String getSystemId()
4. int getColumnNumber()
5. String getEncoding()
================================================================

Sample: 4 NamespaceSupport
----------------------------------------------------------------
1. `void declarePrefix(String prefix, String uri)`: This method declares a prefix for a URI in the current context.
2. `String getURI(String prefix)`: This method returns the URI to which the prefix is mapped in the current context.
3. `Enumeration getPrefixes()`: This method returns an enumeration of all the prefixes currently declared in the current context.
4. `void pushContext()`: This method pushes a new Namespace context on the context stack.
5. `void popContext()`: This method pops the current Namespace context off the context stack.
================================================================

Sample: 5 ParserAdapter
----------------------------------------------------------------
1. `void startDocument()` 
2. `void endDocument()`
3. `void startElement(String uri, String localName, String qName, Attributes attributes)`
4. `void endElement(String uri, String localName, String qName)`
5. `void characters(char[] ch, int start, int length)`
================================================================

Sample: 6 ParserFactory
----------------------------------------------------------------
1. `XMLReader createXMLReader()`: This method creates a new XML reader.
2. `void setNamespaceAware(boolean awareness)`: This method sets the namespace processing to be done during parsing.
3. `void setFeature(String name, boolean value)`: This method sets the value of a feature.
4. `void setProperty(String name, Object value)`: This method sets the value of a property.
5. `ContentHandler createContentHandler()`: This method creates a new content handler.
================================================================

Sample: 7 XMLFilterImpl
----------------------------------------------------------------
1. `void startDocument()`: This method is called at the start of a document.
2. `void endDocument()`: This method is called at the end of a document.
3. `void startPrefixMapping(String prefix, String uri)`: This method declares a prefix/namespace mapping.
4. `void endPrefixMapping(String prefix)`: This method signals the end of the namespace prefix mapping.
5. `void startElement(String uri, String localName, String qName, Attributes attributes)`: This method is called at the start of an element.
================================================================

Sample: 8 XMLReaderAdapter
----------------------------------------------------------------
1. `ContentHandler getContentHandler()`: This method returns the content handler associated with this XMLReaderAdapter.
2. `DTDHandler getDTDHandler()`: This method returns the DTD handler associated with this XMLReaderAdapter.
3. `EntityResolver getEntityResolver()`: This method returns the entity resolver associated with this XMLReaderAdapter.
4. `ErrorHandler getErrorHandler()`: This method returns the error handler associated with this XMLReaderAdapter.
5. `final void setContentHandler(ContentHandler handler)`: This method sets the content handler for this XMLReaderAdapter to the specified handler.
================================================================

Sample: 9 XMLReaderFactory
----------------------------------------------------------------
1. `XMLReader createXMLReader()`: This method creates a new instance of an XMLReader.
2. `XMLReader createXMLReader(String className)`: This method creates a new instance of an XMLReader using the specified class name.
3. `XMLReader createXMLReader(boolean namespaceAware)`: This method creates a new instance of an XMLReader with the specified namespace awareness.
4. `XMLReader createXMLReader(boolean namespaceAware, boolean validating)`: This method creates a new instance of an XMLReader with the specified namespace awareness and validation.
5. `XMLReader createXMLReader(String className, boolean namespaceAware, boolean validating)`: This method creates a new instance of an XMLReader using the specified class name, namespace awareness, and validation settings.
================================================================

