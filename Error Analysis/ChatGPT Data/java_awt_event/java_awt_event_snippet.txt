Sample: 0 ActionEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ActionEvent;

public class Main {
    public static void main(String[] args) {
        ActionEvent event = new ActionEvent(new Object(), 1, "Command");
        int modifiers = event.getModifiers();
        System.out.println("Modifiers: " + modifiers);
    }
}
```
================================================================

Sample: 1 ActionEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ActionEvent;

public class Main {
    public static void main(String[] args) {
        ActionEvent event = new ActionEvent("Button", ActionEvent.ACTION_PERFORMED, "Click");
        String actionCommand = event.getActionCommand();
        System.out.println("Action Command: " + actionCommand);
    }
}
```
================================================================

Sample: 2 ActionEvent_4
----------------------------------------------------------------
`long getWhen()`: This method returns the time when the event occurred.

Code snippet:
```java
import java.awt.event.ActionEvent;

public class Main {
    public static void main(String[] args) {
        ActionEvent event = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, "Button Clicked");
        long eventTime = event.getWhen();
        System.out.println("Event occurred at: " + eventTime);
    }
}
```
================================================================

Sample: 3 ComponentAdapter_1
----------------------------------------------------------------
`void componentHidden(ComponentEvent e)`: This method is called when the component has been hidden.

Code snippet:
```java
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class Main {
    public static void main(String[] args) {
        
    }
    
    class MyComponentAdapter extends ComponentAdapter {
        public void componentHidden(ComponentEvent e) {
            System.out.println("Component hidden event received");
        }
    }
}
```
================================================================

Sample: 4 ComponentAdapter_2
----------------------------------------------------------------
`void ComponentMoved(ComponentEvent e)`: This method is called when a component is moved. Here is a code snippet showing how to use it:

```java
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JFrame;

public class Main {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Component Moved Example");
        frame.setSize(300, 300);
        frame.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentMoved(ComponentEvent e) {
                System.out.println("Component moved to: " + e.getComponent().getLocation());
            }
        });
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
```
================================================================

Sample: 5 ComponentAdapter_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class Main {

    public static void main(String[] args) {
        // Create a new component adapter
        ComponentAdapter adapter = new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                System.out.println("Component Resized: " + e.getComponent());
                // Add your custom resizing logic here
            }
        };

        // Example of adding the component adapter to a component (e.g., JFrame)
        // component.addComponentListener(adapter);
    }
}
```
================================================================

Sample: 6 ComponentAdapter_4
----------------------------------------------------------------
Void componentShown(ComponentEvent e): This method is called when the component has been shown on the screen and gets executed.

Code snippet:
```java
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class Main {
    public static void main(String[] args) {
        ComponentAdapter adapter = new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {
                System.out.println("Component is shown on the screen.");
            }
        };
    }
}
```
================================================================

Sample: 7 ContainerAdapter_1
----------------------------------------------------------------
void componentAdded(ContainerEvent e): This method is called when a new component is added to the container.

Code snippet:
```java
import java.awt.event.ContainerAdapter;
import java.awt.event.ContainerEvent;

public class MyContainerAdapter extends ContainerAdapter {
    
    @Override
    public void componentAdded(ContainerEvent e) {
        System.out.println("Component added to container");
    }

    public static void main(String[] args) {
        // Create a container and add components to it to trigger the componentAdded event
    }
}
```
================================================================

Sample: 8 ContainerAdapter_2
----------------------------------------------------------------
void componentRemoved(ContainerEvent e): This method is called when a component has been removed from the container.

Code snippet:
```java
import java.awt.event.ContainerAdapter;
import java.awt.event.ContainerEvent;

public class Main {
    public static void main(String[] args) {
        MyContainerListener containerListener = new MyContainerListener();
        containerListener.componentRemoved(new ContainerEvent(new Container(), ContainerEvent.COMPONENT_REMOVED, new Object()));
    }

    static class MyContainerListener extends ContainerAdapter {
        @Override
        public void componentRemoved(ContainerEvent e) {
            System.out.println("Component removed from container");
        }
    }

    static class Container {}
}
```
================================================================

Sample: 9 ContainerEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.Component;
import java.awt.event.ContainerEvent;

public class Main {
    public static void main(String[] args) {
        ContainerEvent containerEvent = new ContainerEvent(new Component() {}, ContainerEvent.COMPONENT_ADDED, new Component() {});
        Component childComponent = containerEvent.getChild();
        System.out.println("Child Component: " + childComponent);
    }
}
```
================================================================

Sample: 10 FocusAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        // Create a focus adapter
        FocusAdapter focusAdapter = new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                System.out.println("Focus gained");
                // Add your custom logic here
            }
        };
        
        // Simulate focus gained event
        FocusEvent focusEvent = new FocusEvent(new Object(), FocusEvent.FOCUS_GAINED);
        focusAdapter.focusGained(focusEvent);
    }
}
```
================================================================

Sample: 11 FocusAdapter_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        // Creating a focus adapter
        FocusAdapter focusAdapter = new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                // Your implementation when focus is lost
                System.out.println("Focus Lost");
            }
        };

        // Simulating focus lost event
        FocusEvent focusEvent = new FocusEvent(new Object(), FocusEvent.FOCUS_LOST);
        focusAdapter.focusLost(focusEvent);
    }
}
```
================================================================

Sample: 12 FocusEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.FocusEvent;
import java.awt.Component;

public class Main {
    public static void main(String[] args) {
        Component sourceComponent = new Component() {
        };
        
        Component oppositeComponent = new Component() {
        };
        
        FocusEvent focusEvent = new FocusEvent(sourceComponent, FocusEvent.FOCUS_GAINED, true, oppositeComponent);
        
        Component result = focusEvent.getOppositeComponent();
        System.out.println("Opposite Component: " + result);
    }
}
```
================================================================

Sample: 13 FocusEvent_2
----------------------------------------------------------------
Method: `boolean isTemporary()`: This method is used to determine whether this focus event is a temporary event. Returns true if the event is temporary, false otherwise.

Code snippet:
```java
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        // Creating a FocusEvent object
        FocusEvent focusEvent = new FocusEvent(null, FocusEvent.FOCUS_GAINED);

        // Checking if the focus event is temporary
        boolean isTemp = focusEvent.isTemporary();

        // Printing the result
        System.out.println("Is temporary event: " + isTemp);
    }
}
```
================================================================

Sample: 14 FocusEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.FocusEvent;

public class Main {
    public static void main(String[] args) {
        FocusEvent event = new FocusEvent(component, id, temporary);
        boolean temporary = event.isTemporary();
        System.out.println("Is temporary event: " + temporary);
    }
}
```
================================================================

Sample: 15 HierarchyBoundsAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.HierarchyEvent;
import java.awt.event.HierarchyBoundsAdapter;

public class Main {
    public static void main(String[] args) {
        // Create a HierarchyBoundsAdapter object
        HierarchyBoundsAdapter adapter = new HierarchyBoundsAdapter() {
            @Override
            public void ancestorMoved(HierarchyEvent e) {
                System.out.println("Ancestor moved event occurred");
                // Add your custom code here
            }
        };
        
        // Simulate the ancestor moved event
        HierarchyEvent event = new HierarchyEvent(new java.awt.Component() {}, HierarchyEvent.ANCESTOR_MOVED, new java.awt.Component() {}, new java.awt.Rectangle());
        
        // Call the ancestorMoved method
        adapter.ancestorMoved(event);
    }
}
```
================================================================

Sample: 16 HierarchyBoundsAdapter_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.HierarchyBoundsAdapter;
import java.awt.event.HierarchyEvent;

public class Main {
    public static void main(String[] args) {
        // Create a HierarchyBoundsAdapter with overridden ancestorResized method
        HierarchyBoundsAdapter adapter = new HierarchyBoundsAdapter() {
            @Override
            public void ancestorResized(HierarchyEvent e) {
                System.out.println("Hierarchy event: ancestor resized");
            }
        };

        // Simulate calling ancestorResized method
        HierarchyEvent event = new HierarchyEvent(new Object(), HierarchyEvent.ANCESTOR_RESIZED, new Object(), new Object());
        adapter.ancestorResized(event);
    }
}
```
================================================================

Sample: 17 HierarchyBoundsAdapter_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.HierarchyBoundsAdapter;
import java.awt.event.HierarchyEvent;

public class Main {
    public static void main(String[] args) {

        // Implementing the HierarchyBoundsAdapter
        HierarchyBoundsAdapter adapter = new HierarchyBoundsAdapter() {
            @Override
            public void ancestorMoved(HierarchyEvent e) {
                System.out.println("Ancestor moved event occurred");
            }
        };
    }
}
```
================================================================

Sample: 18 HierarchyBoundsAdapter_5
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.HierarchyEvent;
import java.awt.event.HierarchyBoundsAdapter;

public class Main {
    public static void main(String[] args) {
        MyHierarchyBoundsAdapter adapter = new MyHierarchyBoundsAdapter();
        adapter.ancestorResized(null);
    }

    static class MyHierarchyBoundsAdapter extends HierarchyBoundsAdapter {
        @Override
        public void ancestorResized(HierarchyEvent e) {
            System.out.println("Ancestor Resized Event Occurred");
        }
    }
}
```
================================================================

Sample: 19 HierarchyEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.*;
import java.awt.event.HierarchyEvent;
import java.awt.event.HierarchyListener;

public class Main {
    public static void main(String[] args) {
        Panel panel = new Panel();
        
        panel.addHierarchyListener(new HierarchyListener() {
            @Override
            public void hierarchyChanged(HierarchyEvent e) {
                if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0) {
                    System.out.println("Component visibility changed");
                }
            }
        });
    }
}
```
================================================================

Sample: 20 HierarchyEvent_5
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.HierarchyEvent;
import java.awt.Component;

public class Main {
    public static void main(String[] args) {
        Component component = new Component() {
            @Override
            public String paramString() {
                return "Custom component";
            }
        };
        
        HierarchyEvent event = new HierarchyEvent(component, HierarchyEvent.DISPLAYABILITY_CHANGED, component, null);
        System.out.println(event.paramString());
    }
}
```
================================================================

Sample: 21 InputEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        int modifiers = InputEvent.ALT_DOWN_MASK | InputEvent.CTRL_DOWN_MASK;
        System.out.println("Modifiers: " + modifiers);
    }
}
```
================================================================

Sample: 22 InputEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0);
        int modifiers = event.getModifiersEx();
        System.out.println("Modifiers: " + modifiers);
    }
}
```
================================================================

Sample: 23 InputEvent_4
----------------------------------------------------------------
`long getWhen()`: This method returns the time when the event occurred.

Code snippet:
```java
import java.awt.event.InputEvent;

public class Main {
    public static void main(String[] args) {
        InputEvent event = new InputEvent(null, 0, 0, 0, 0, 0, 0, false);
        long eventTime = event.getWhen();
        System.out.println("Event time: " + eventTime);
    }
}
```
================================================================

Sample: 24 InputMethodEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputMethodEvent;
import java.awt.font.TextHitInfo;

public class Main {
    public static void main(String[] args) {
        InputMethodEvent event = new InputMethodEvent(null, 0, null, 0, null, 0, 0, TextHitInfo.leading(5), TextHitInfo.trailing(7));
        TextHitInfo caret = event.getCaret();
        System.out.println("Caret is at: " + caret.getInsertionIndex());
    }
}
```
================================================================

Sample: 25 InputMethodEvent_3
----------------------------------------------------------------
`String getText()`: This method returns the text contained in the AttributedCharacterIterator associated with this InputMethodEvent.

Code snippet:
```java
import java.awt.event.InputMethodEvent;
import java.text.AttributedCharacterIterator;

public class Main {
    public static void main(String[] args) {
        // Create an InputMethodEvent object (inputMethodEvent) for demonstration
        InputMethodEvent inputMethodEvent = new InputMethodEvent(null, 0, null, 0, null, 0, null, null);

        // Get the AttributedCharacterIterator associated with the InputMethodEvent
        AttributedCharacterIterator iterator = inputMethodEvent.getText();

        // Print the text contained in the AttributedCharacterIterator
        StringBuilder text = new StringBuilder();
        for (char c = iterator.first(); c != AttributedCharacterIterator.DONE; c = iterator.next()) {
            text.append(c);
        }
        System.out.println("Text: " + text.toString());
    }
}
```
================================================================

Sample: 26 InputMethodEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InputMethodEvent;

public class Main {
    public static void main(String[] args) {
        InputMethodEvent event = new InputMethodEvent(null, 0, null, 0, null, null, 0);
        int committedCharCount = event.getCommittedCharacterCount();
        System.out.println("Committed character count: " + committedCharCount);
    }
}
```
================================================================

Sample: 27 InputMethodEvent_5
----------------------------------------------------------------
void consume(InputMethodEvent event): This method is called by the event source when a text change event is received from an active input method. 

Code snippet:
```java
import java.awt.event.InputMethodEvent;

public class Main {
    public static void main(String[] args) {
        
    }

    public void consume(InputMethodEvent event) {
        // Implement code here to handle the InputMethodEvent
    }
}
```
================================================================

Sample: 28 InvocationEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InvocationEvent;

public class Main {
    public static void main(String[] args) {
        InvocationEvent event = new InvocationEvent(this, null);
        event.dispatch();
    }
}
```
================================================================

Sample: 29 InvocationEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.InvocationEvent;

public class Main {
    public static void main(String[] args) {
        InvocationEvent event = new InvocationEvent(new Object(), () -> {
            System.out.println("Invocation Event");
        });
        
        boolean dispatched = event.isDispatched();
        System.out.println("Is Event Dispatched: " + dispatched);
    }
}
```
================================================================

Sample: 30 ItemEvent_1
----------------------------------------------------------------
`Object getItem(ItemEvent e)`: This method returns the selected item from the event.

Code snippet:
```java
import java.awt.event.ItemEvent;

public class Main {
    public static void main(String[] args) {
        ItemEvent event = new ItemEvent(this, ItemEvent.ITEM_STATE_CHANGED, "Item", ItemEvent.SELECTED);
        Object selectedItem = event.getItem();
        System.out.println("Selected item: " + selectedItem);
    }
}
```
================================================================

Sample: 31 ItemEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ItemEvent;

public class Main {
    public static void main(String[] args) {
        ItemEvent event = new ItemEvent(null, ItemEvent.ITEM_STATE_CHANGED, null, ItemEvent.SELECTED);
        int stateChange = event.getStateChange();
        System.out.println("State Change: " + stateChange);
    }
}
```
================================================================

Sample: 32 ItemEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.ItemEvent;

public class Main {
    public static void main(String[] args) {
        ItemEvent event = new ItemEvent(null, ItemEvent.ITEM_STATE_CHANGED, "source", ItemEvent.SELECTED);
        System.out.println(event.paramString());
    }
}
```
================================================================

Sample: 33 KeyEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        // Create a KeyEvent object
        KeyEvent event = new KeyEvent(null, KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_A, KeyEvent.CHAR_UNDEFINED);

        // Get the key code from the event
        int keyCode = event.getKeyCode();

        // Print the key code
        System.out.println("Key code: " + keyCode);
    }
}
```
================================================================

Sample: 34 KeyEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyEvent keyEvent = new KeyEvent(new Object(), KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_A, KeyEvent.CHAR_UNDEFINED);
        char keyChar = keyEvent.getKeyChar();
        System.out.println("Pressed key char: " + keyChar);
    }
}
```
================================================================

Sample: 35 KeyEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyEvent event = new KeyEvent(null, 0, 0, 0, 0, KeyEvent.CHAR_UNDEFINED);
        boolean isActionKey = event.isActionKey();
        System.out.println("Is action key: " + isActionKey);
    }
}
```
================================================================

Sample: 36 KeyEvent_5
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.KeyEvent;

public class Main {
    public static void main(String[] args) {
        KeyEvent keyEvent = new KeyEvent(null, KeyEvent.KEY_TYPED, System.currentTimeMillis(), 0, KeyEvent.VK_UNDEFINED, 'A');
        String paramString = keyEvent.paramString();
        System.out.println(paramString);
    }
}
```
================================================================

Sample: 37 MouseAdapter_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {

    public static void main(String[] args) {
        // Creating a MouseAdapter object
        MouseAdapter mouseAdapter = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Code to handle mouse click event
                System.out.println("Mouse Clicked!");
            }
        };
    }
}
```
================================================================

Sample: 38 MouseAdapter_2
----------------------------------------------------------------
`void mouseEntered(MouseEvent e)`: This method is called when the mouse enters a component. Here is an example implementation using java.awt.event.MouseAdapter:

Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter mouseAdapter = new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                System.out.println("Mouse entered component");
            }
        };
    }
}
```
================================================================

Sample: 39 MouseAdapter_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseAdapter mouseAdapter = new MouseAdapter() {
            @Override
            public void mouseExited(MouseEvent e) {
                System.out.println("Mouse exited");
            }
        };
    }
}
```
================================================================

Sample: 40 MouseAdapter_4
----------------------------------------------------------------
`void mousePressed(MouseEvent e)`: This method is invoked when a mouse button has been pressed on a component.

Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main extends MouseAdapter {
    public static void main(String[] args) {
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        System.out.println("Mouse pressed at: " + e.getX() + ", " + e.getY());
    }
}
```
================================================================

Sample: 41 MouseAdapter_5
----------------------------------------------------------------
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        
    }

    public void mouseReleased(MouseEvent e) {
        // Implement your logic here for mouseReleased event
    }
}
```
================================================================

Sample: 42 MouseEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 0, 0, 0, false);
        int x = event.getX();
        System.out.println("X coordinate: " + x);
    }
}
```
================================================================

Sample: 43 MouseEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 0, 0, 0, false);
        int y = event.getY();
        System.out.println("Y coordinate: " + y);
    }
}
```
================================================================

Sample: 44 MouseEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 0, 0, 0, false);
        int button = event.getButton();
        System.out.println("Button clicked: " + button);
    }
}
```
================================================================

Sample: 45 MouseEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseEvent event = new MouseEvent(null, 0, 0, 0, 0, 0, 0, false);
        int clickCount = event.getClickCount();
        System.out.println("Click count: " + clickCount);
    }
}
```
================================================================

Sample: 46 MouseMotionAdapter_1
----------------------------------------------------------------
void mouseDragged(MouseEvent e): This method is called whenever a mouse is dragged with a button down. 

Code snippet:
```java
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        MouseMotionAdapter adapter = new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                System.out.println("Mouse dragged at x=" + e.getX() + ", y=" + e.getY());
            }
        };
    }
}
```
================================================================

Sample: 47 MouseMotionAdapter_2
----------------------------------------------------------------
`void mouseMoved(MouseEvent e)`: This method is called when the mouse is moved. It gets the x and y coordinates of the mouse pointer.

Code snippet:
```java
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

public class Main {
    public static void main(String[] args) {
        MyMouseMotionAdapter adapter = new MyMouseMotionAdapter();
        adapter.mouseMoved(new MouseEvent(null, 0, 0, 0, 100, 200, 0, false));
    }

    static class MyMouseMotionAdapter extends MouseMotionAdapter {
        @Override
        public void mouseMoved(MouseEvent e) {
            System.out.println("Mouse moved to: (" + e.getX() + ", " + e.getY() + ")");
        }
    }
}
```
================================================================

Sample: 48 MouseWheelEvent_1
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        MouseWheelEvent event = new MouseWheelEvent(null, 0, 0, 0, 0, 0, 0, false, 0, 0, 0);
        int wheelRotation = event.getWheelRotation();
        System.out.println("Wheel Rotation: " + wheelRotation);
    }
}
```
================================================================

Sample: 49 MouseWheelEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        // Create a MouseWheelEvent object for demonstration
        MouseWheelEvent event = new MouseWheelEvent(new Object(), 0, 0, 0, 0, 0, 0, 0, false, 0, 0);
        
        // Get the scroll amount from the MouseWheelEvent object
        int scrollAmount = event.getScrollAmount();
        
        // Print the scroll amount
        System.out.println("Scroll amount: " + scrollAmount);
    }
}
```
================================================================

Sample: 50 MouseWheelEvent_3
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        MouseWheelEvent event = new MouseWheelEvent(new Object(), 0, 0, 0, 0, 0, 0, false, 0, 0, 0);
        int scrollType = event.getScrollType();
        System.out.println("Scroll Type: " + scrollType);
    }
}
```
================================================================

Sample: 51 MouseWheelEvent_4
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.MouseWheelEvent;

public class Main {
    public static void main(String[] args) {
        MouseWheelEvent event = new MouseWheelEvent(new Object(), 0, 0, 0, 0, 0, 0, false, MouseWheelEvent.WHEEL_UNIT_SCROLL, 1, 1);
        int unitsToScroll = event.getUnitsToScroll();
        System.out.println("Units to scroll: " + unitsToScroll);
    }
}
```
================================================================

Sample: 52 TextEvent_3
----------------------------------------------------------------
`String paramString()`: This method returns a string representation of this TextEvent object.

Code snippet:
```java
import java.awt.event.TextEvent;

public class Main {
    public static void main(String[] args) {
        TextEvent textEvent = new TextEvent(new Object(), TextEvent.TEXT_VALUE_CHANGED);
        System.out.println(textEvent.paramString());
    }
}
```
================================================================

Sample: 53 WindowAdapter_1
----------------------------------------------------------------
`void windowOpened(WindowEvent e)`: This method gets called when the window is first opened.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        MyWindowAdapter adapter = new MyWindowAdapter();
        adapter.windowOpened(new WindowEvent(new java.awt.Frame(), WindowEvent.WINDOW_OPENED));
    }

    static class MyWindowAdapter extends WindowAdapter {
        @Override
        public void windowOpened(WindowEvent e) {
            System.out.println("Window Opened");
        }
    }
}
```
================================================================

Sample: 54 WindowAdapter_2
----------------------------------------------------------------
`void windowClosing(WindowEvent e)`: This method is called when the user attempts to close the window by clicking the close button. 

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        // Create a window adapter with windowClosing method overridden
        WindowAdapter windowAdapter = new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Perform actions when window is closing
                System.out.println("Window is closing...");
            }
        };

        // Simulate window closing event
        WindowEvent closingEvent = new WindowEvent(new Object(), WindowEvent.WINDOW_CLOSING);
        windowAdapter.windowClosing(closingEvent);
    }
}
```
================================================================

Sample: 55 WindowAdapter_3
----------------------------------------------------------------
`void windowClosed(WindowEvent e)`: This method is called when the user closes the window. It can be used to perform cleanup actions before the window is closed completely.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        WindowAdapter windowAdapter = new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                System.out.println("Window is closed");
            }
        };
    }
}
```
================================================================

Sample: 56 WindowAdapter_4
----------------------------------------------------------------
void windowIconified(WindowEvent e): This method is called when the window is minimized or iconified.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    
    public static void main(String[] args) {
        // Create a new window adapter
        WindowAdapter adapter = new WindowAdapter() {
            @Override
            public void windowIconified(WindowEvent e) {
                System.out.println("Window iconified");
            }
        };
        
        // Simulate window being minimized
        adapter.windowIconified(new WindowEvent(new Object(), WindowEvent.WINDOW_ICONIFIED));
    }
}
```
================================================================

Sample: 57 WindowAdapter_5
----------------------------------------------------------------
`void windowDeiconified(WindowEvent e)`: This method is called when the window is restored from a minimized state.

Code snippet:
```java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Main {
    public static void main(String[] args) {
        
    }

    public void windowDeiconified(WindowEvent e) {
        // Add your implementation here
    }
}
```
================================================================

Sample: 58 WindowEvent_2
----------------------------------------------------------------
Code snippet:
```java
import java.awt.event.WindowEvent;
import java.awt.Window;

public class Main {
    public static void main(String[] args) {
        WindowEvent windowEvent = new WindowEvent(new Window(null), WindowEvent.WINDOW_CLOSING);
        Window window = windowEvent.getWindow();
        System.out.println("Window: " + window);
    }
}
```
================================================================

