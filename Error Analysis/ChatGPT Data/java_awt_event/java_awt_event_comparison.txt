Sample: 0 ActionEvent
----------------------------------------------------------------
1. `Object getSource()`: This method returns the object on which the event initially occurred.
2. `int getModifiers()`: This method returns the modifiers that are currently down (modifiers change based on which mouse or keyboard event occurred).
3. `String getActionCommand()`: This method returns the command string associated with this action.
4. `long getWhen()`: This method returns the time when the event occurred.
5. `boolean isShiftDown()`: This method returns whether or not the Shift modifier is down.
================================================================

Sample: 1 AdjustmentEvent
----------------------------------------------------------------
1. int getAdjustmentType(): This method returns the type of adjustment event.
2. int getValue(): This method returns the current value of the adjustable object that triggered the event.
3. int getAdjustmentType(): This method returns the type of adjustment event.
4. int getMinimum(): This method returns the minimum value that the adjustable object can have.
5. int getMaximum(): This method returns the maximum value that the adjustable object can have.
================================================================

Sample: 2 AWTEventListenerProxy
----------------------------------------------------------------
1. void eventDispatched(AWTEvent event)
2. void listenerRemoved(AWTEventListener listener)
3. void listenerAdded(AWTEventListener listener)
4. AWTEventListener getListener()
5. boolean equals(Object obj)
================================================================

Sample: 3 ComponentAdapter
----------------------------------------------------------------
1. `void componentHidden(ComponentEvent e)`: This method is called when the component has been hidden.
2. `void componentMoved(ComponentEvent e)`: This method is called when the component has been moved.
3. `void componentResized(ComponentEvent e)`: This method is called when the component has been resized.
4. `void componentShown(ComponentEvent e)`: This method is called when the component has been shown.
5. `void componentAdded(ContainerEvent e)`: This method is called when a component has been added to a container.
================================================================

Sample: 4 ComponentEvent
----------------------------------------------------------------
1. Component getComponent(): This method returns the component that originated the event.
2. int getID(): This method returns the event's id.
3. int getNewHeight(): This method returns the new height of the component after the event.
4. int getOldWidth(): This method returns the old width of the component before the event.
5. String paramString(): This method returns a parameter string identifying this event.
================================================================

Sample: 5 ContainerAdapter
----------------------------------------------------------------
1. `void componentAdded(ContainerEvent e)`: This method is called when a component has been added to the container.
2. `void componentRemoved(ContainerEvent e)`: This method is called when a component has been removed from the container.
3. `void hierarchyChanged(HierarchyEvent e)`: This method is called when the hierarchy of the container has changed.
4. `void containerResized(ComponentEvent e)`: This method is called when the container has been resized.
5. `void containerMoved(ComponentEvent e)`: This method is called when the container has been moved.
================================================================

Sample: 6 ContainerEvent
----------------------------------------------------------------
1. `void componentAdded(ContainerEvent e)`: This method is called when a component has been added to the container.
2. `void componentRemoved(ContainerEvent e)`: This method is called when a component has been removed from the container.
3. `Component getContainer()`: This method returns the container that the event originated from.
4. `Component getChild()`: This method returns the component that was added or removed from the container.
5. `long getWhen()`: This method returns the timestamp when the event occurred.
================================================================

Sample: 7 FocusAdapter
----------------------------------------------------------------
1. `void focusGained(FocusEvent e)`: This method is called when a component gains the keyboard focus.
2. `void focusLost(FocusEvent e)`: This method is called when a component loses the keyboard focus.
================================================================

Sample: 8 FocusEvent
----------------------------------------------------------------
1. `Component getOppositeComponent()`: This method retrieves the other Component involved in this focus event.
2. `boolean isTemporary()`: This method returns whether or not this focus event is a temporary focus event.
3. `void consume()`: This method consumes this focus event, preventing it from being dispatched to any other listeners.
4. `boolean isTemporary()`: This method returns whether or not this focus event is a temporary focus event.
5. `void setSource(Component source)`: This method sets the source of this event to the specified Component.
================================================================

Sample: 9 HierarchyBoundsAdapter
----------------------------------------------------------------
1. `void ancestorMoved(HierarchyEvent e)`: This method is called when an ancestor window of this component is moved.
2. `void ancestorResized(HierarchyEvent e)`: This method is called when an ancestor window of this component is resized.
3. `void hierarchyChanged(HierarchyEvent e)`: This method is called when the hierarchy of this component has changed.
4. `void ancestorMoved(HierarchyEvent e)`: This method is called when an ancestor window of this component is moved.
5. `void ancestorResized(HierarchyEvent e)`: This method is called when an ancestor window of this component is resized.
================================================================

Sample: 10 HierarchyEvent
----------------------------------------------------------------
1. `int getChangeFlags()`: This method returns the type of hierarchy change.
2. `Component getChanged()`: This method returns the component on which the hierarchy change occurred.
3. `long getWhen()`: This method returns the time at which the event occurred.
4. `void processHierarchyEvent(HierarchyEvent e)`: This method processes hierarchy events occurring on this component.
5. `String paramString()`: This method returns a parameter string identifying this event.
================================================================

Sample: 11 InputEvent
----------------------------------------------------------------
1. `int getModifiers()`: Returns the modifier keys down during this event.

2. `int getModifiersEx()`: Returns the extended modifier keys down during this event.

3. `int getModifiersExText(int modifiers)`: Returns a string describing the extended modifier keys and mouse buttons, such as "Shift", "Button1", or "Ctrl+Shift".

4. `long getWhen()`: Returns the time stamp of when this event occurred.

5. `int getID()`: Returns the event type as defined in InputEvent.
================================================================

Sample: 12 InputMethodEvent
----------------------------------------------------------------
1. `InputMethodEvent(Component source, int id, TextHitInfo insertionIndex, AttributedCharacterIterator text, JComponent whenFocused)`: Constructor for creating an InputMethodEvent with the specified parameters.
2. `TextHitInfo getCaret()` : Returns the position of the text insertion caret.
3. `AttributedCharacterIterator getText()` : Returns the text being processed by the input method.
4. `int getCommittedCharacterCount()` : Returns the number of committed characters in the input sequence.
5. `void consume()` : Consumes this event so that it will not be processed in the default manner by the source which originated it.
================================================================

Sample: 13 InvocationEvent
----------------------------------------------------------------
1. `void dispatch()` 
2. `boolean isDispatched()`
3. `Runnable getRunnable()`
4. `Object getTarget()`
5. `boolean isAppContextDisposed()`
================================================================

Sample: 14 ItemEvent
----------------------------------------------------------------
1. `Object getItem()`: This method returns the item that was selected or deselected.
2. `int getStateChange()`: This method returns the state change of the item event, indicating if the item was selected or deselected.
3. `void setItemSelectable(boolean selectable)`: This method sets whether the item can be selected or deselected by the user.
4. `String paramString()`: This method returns a parameter string identifying this item event.
5. `String toString()`: This method returns a string representation of the item event.
================================================================

Sample: 15 KeyAdapter
----------------------------------------------------------------
1. void keyPressed(KeyEvent e)
2. void keyReleased(KeyEvent e)
3. void keyTyped(KeyEvent e)
================================================================

Sample: 16 KeyEvent
----------------------------------------------------------------
1. `int getKeyCode()`: This method returns the integer key code associated with the key event.
2. `char getKeyChar()`: This method returns the character associated with the key event.
3. `int getModifiers()`: This method returns the modifiers associated with the key event.
4. `boolean isActionKey()`: This method returns true if the key event is an action key, false otherwise.
5. `String paramString()`: This method returns a string representation of the key event.
================================================================

Sample: 17 MouseAdapter
----------------------------------------------------------------
1. `void mouseClicked(MouseEvent e)`: This method is called when a mouse button is clicked.
2. `void mouseEntered(MouseEvent e)`: This method is called when the mouse enters a component.
3. `void mouseExited(MouseEvent e)`: This method is called when the mouse exits a component.
4. `void mousePressed(MouseEvent e)`: This method is called when a mouse button is pressed.
5. `void mouseReleased(MouseEvent e)`: This method is called when a mouse button is released.
================================================================

Sample: 18 MouseEvent
----------------------------------------------------------------
1. `int getX()`: This method returns the x coordinate of the mouse pointer when the event occurred.
2. `int getY()`: This method returns the y coordinate of the mouse pointer when the event occurred.
3. `int getButton()`: This method returns the button number that changed state.
4. `int getClickCount()`: This method returns the number of quick, consecutive clicks the user has made.
5. `int getModifiers()`: This method returns the modifiers keys down during event.
================================================================

Sample: 19 MouseMotionAdapter
----------------------------------------------------------------
1. `void mouseDragged(MouseEvent e)`: This method is called when a mouse is dragged.
2. `void mouseMoved(MouseEvent e)`: This method is called when a mouse is moved.
3. `void mouseEntered(MouseEvent e)`: This method is called when the mouse enters a component.
4. `void mouseExited(MouseEvent e)`: This method is called when the mouse exits a component.
5. `void mouseReleased(MouseEvent e)`: This method is called when a mouse button is released.
================================================================

Sample: 20 MouseWheelEvent
----------------------------------------------------------------
1. `int getWheelRotation()`: This method returns the number of notches the mouse wheel was rotated.
2. `int getScrollAmount()`: This method returns the scroll amount, in "units" which is a type of logical measurement and an element is determined by the concrete subclass.
3. `int getScrollType()`: This method returns the type of scrolling that occurred.
4. `int getUnitsToScroll()`: This method returns the mouse wheel movement in "units" of a lesser degree of precision, typically representing a line.
5. `boolean isShiftDown()`: This method returns whether or not the Shift modifier is down on this event.
================================================================

Sample: 21 PaintEvent
----------------------------------------------------------------
1. void setPaintMode(): This method sets the paint mode to overwrite the existing pixels.
2. void setXORMode(Color c1): This method sets the XOR mode for this graphics context.
3. Graphics getGraphics(): This method returns the Graphics context used by this component for painting.
4. Rectangle getUpdateRect(): This method gets the update region of this component.
5. void update(Graphics g): This method calls the update method of the component.
================================================================

Sample: 22 TextEvent
----------------------------------------------------------------
1. `int getModifiers()`: This method returns the current state of the event's modifiers.
2. `long getWhen()`: This method returns the timestamp when the event occurred.
3. `String paramString()`: This method returns a parameter string identifying this text event.
4. `TextEvent(Object source, int id)`: Constructor method for creating a new TextEvent with the specified source object and event ID.
5. `void consume()`: This method marks this event as consumed, preventing any further propagation of the event.
================================================================

Sample: 23 WindowAdapter
----------------------------------------------------------------
1. `void windowOpened(WindowEvent e)`: This method is called when the window is first opened.
2. `void windowClosing(WindowEvent e)`: This method is called when the user attempts to close the window.
3. `void windowClosed(WindowEvent e)`: This method is called after the window has been closed.
4. `void windowIconified(WindowEvent e)`: This method is called when the window is minimized.
5. `void windowDeiconified(WindowEvent e)`: This method is called when the window is restored from a minimized state.
================================================================

Sample: 24 WindowEvent
----------------------------------------------------------------
1. `int getID()`: This method returns the identifier of the window event.
2. `Window getWindow()`: This method returns the Window object that is the source of the event.
3. `void setID(int id)`: This method sets the identifier of the window event.
4. `void setOppositeWindow(Window opposite)`: This method sets the opposite window involved in this window event.
5. `void setSource(Window newSource)`: This method sets the new source of the window event.
================================================================

