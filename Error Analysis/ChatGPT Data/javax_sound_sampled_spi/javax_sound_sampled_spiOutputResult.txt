Sample: AudioFileReader_1
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/AudioFileReader_1.java:11: error: ';' expected
            AudioFileFormat audioFileFormat = audioFileReader.getAudioFileFormat(inputStream);
                           ^
1 error


================================================================

Sample: AudioFileWriter_1
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_1.java:8: error: AudioFileWriter is abstract; cannot be instantiated
        AudioFileWriter writer = new AudioFileWriter();
                                 ^
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_1.java:9: error: no suitable constructor found for AudioInputStream(no arguments)
        AudioInputStream stream = new AudioInputStream();
                                  ^
    constructor AudioInputStream.AudioInputStream(InputStream,AudioFormat,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor AudioInputStream.AudioInputStream(TargetDataLine) is not applicable
      (actual and formal argument lists differ in length)
2 errors


================================================================

Sample: AudioFileWriter_2
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_2.java:9: error: AudioFileWriter is abstract; cannot be instantiated
        AudioFileWriter audioFileWriter = new AudioFileWriter();
                                          ^
1 error


================================================================

Sample: AudioFileWriter_3
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_3.java:6: error: <anonymous AudioFileWriter_3$1> is not abstract and does not override abstract method write(AudioInputStream,Type,File) in AudioFileWriter
        AudioFileWriter audioFileWriter = new AudioFileWriter() {
                                                                ^
1 error


================================================================

Sample: AudioFileWriter_4
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_4.java:8: error: no suitable constructor found for AudioInputStream(no arguments)
        AudioInputStream audioInputStream = new AudioInputStream(); // create an AudioInputStream object
                                            ^
    constructor AudioInputStream.AudioInputStream(InputStream,AudioFormat,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor AudioInputStream.AudioInputStream(TargetDataLine) is not applicable
      (actual and formal argument lists differ in length)
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_4.java:18: error: MyAudioFileWriter is not abstract and does not override abstract method write(AudioInputStream,Type,File) in AudioFileWriter
class MyAudioFileWriter extends AudioFileWriter {
^
2 errors


================================================================

Sample: AudioFileWriter_5
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/AudioFileWriter_5.java:6: error: AudioFileWriter is abstract; cannot be instantiated
        AudioFileWriter audioFileWriter = new AudioFileWriter();
                                          ^
1 error


================================================================

Sample: FormatConversionProvider_1
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_1.java:6: error: FormatConversionProvider is abstract; cannot be instantiated
        FormatConversionProvider provider = new FormatConversionProvider(); // Instantiate FormatConversionProvider
                                            ^
1 error


================================================================

Sample: FormatConversionProvider_2
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_2.java:7: error: <anonymous FormatConversionProvider_2$1> is not abstract and does not override abstract method getAudioInputStream(AudioFormat,AudioInputStream) in FormatConversionProvider
        FormatConversionProvider provider = new FormatConversionProvider() {
                                                                           ^
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_2.java:13: error: method does not override or implement a method from a supertype
            @Override
            ^
2 errors


================================================================

Sample: FormatConversionProvider_4
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_4.java:16: error: cannot find symbol
            AudioInputStream convertedStream = FormatConversionProvider.provider().getAudioInputStream(targetEncoding, audioInputStream);
                                                                       ^
  symbol:   method provider()
  location: class FormatConversionProvider
1 error


================================================================

Sample: FormatConversionProvider_5
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_5.java:7: error: illegal start of expression
        FormatConversionProvider provider = /* Some way to get the provider */;
                                                                              ^
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_5.java:8: error: illegal start of expression
        AudioFormat targetFormat = /* Create the desired target AudioFormat */;
                                                                              ^
./Data/javax_sound_sampled_spi/javaFiles/FormatConversionProvider_5.java:9: error: illegal start of expression
        AudioInputStream sourceStream = /* Obtain the source AudioInputStream */;
                                                                                ^
3 errors


================================================================

Sample: MixerProvider_1
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/MixerProvider_1.java:6: error: non-static method getMixerInfo() cannot be referenced from a static context
        Mixer.Info[] mixerInfo = MixerProvider.getMixerInfo();
                                              ^
1 error


================================================================

Sample: MixerProvider_2
----------------------------------------------------------------
output:
./Data/javax_sound_sampled_spi/javaFiles/MixerProvider_2.java:7: error: cannot find symbol
        MixerProvider provider = AudioSystem.getMixerProvider(mixerInfo[0]);
                                            ^
  symbol:   method getMixerProvider(Info)
  location: class AudioSystem
1 error


================================================================

Sample: MixerProvider_5
----------------------------------------------------------------
================================================================

