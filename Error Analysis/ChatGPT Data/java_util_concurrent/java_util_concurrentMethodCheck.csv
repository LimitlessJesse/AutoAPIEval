Sample Number,ClassName,Snippet Number,Method,Exist
0,AbstractExecutorService,1,void execute(Runnable command),False
0,AbstractExecutorService,2,Future<T> submit(Callable<T> task),False
0,AbstractExecutorService,3,Future<?> submit(Runnable task),True
0,AbstractExecutorService,4,void shutdown(),False
0,AbstractExecutorService,5,List<Runnable> shutdownNow(),False
2,CompletableFuture,1,<U> CompletableFuture<U> supplyAsync(Supplier<U> supplier),True
2,CompletableFuture,2,CompletableFuture<Void> runAsync(Runnable runnable),True
2,CompletableFuture,3,"CompletableFuture<U> thenApply(Function<? super T,? extends U> fn)",False
2,CompletableFuture,4,CompletableFuture<Void> thenAccept(Consumer<? super T> action),True
2,CompletableFuture,5,"CompletableFuture<U> handle(BiFunction<? super T,Throwable,? extends U> fn)",False
3,ConcurrentHashMap,1,"V put(K key, V value)",True
3,ConcurrentHashMap,2,V get(Object key),True
3,ConcurrentHashMap,3,boolean containsKey(Object key),True
3,ConcurrentHashMap,4,V remove(Object key),True
3,ConcurrentHashMap,5,int size(),True
4,ConcurrentHashMap.KeySetView,1,Spliterator<E> spliterator(),False
4,ConcurrentHashMap.KeySetView,2,boolean remove(Object o),True
4,ConcurrentHashMap.KeySetView,3,boolean removeAll(Collection<?> c),True
4,ConcurrentHashMap.KeySetView,4,boolean retainAll(Collection<?> c),True
4,ConcurrentHashMap.KeySetView,5,Object[] toArray(),True
5,ConcurrentLinkedDeque,1,boolean offerFirst(E e),True
5,ConcurrentLinkedDeque,2,E pollLast(),True
5,ConcurrentLinkedDeque,3,E peekFirst(),True
5,ConcurrentLinkedDeque,4,boolean removeLastOccurrence(Object o),True
5,ConcurrentLinkedDeque,5,boolean isEmpty(),True
6,ConcurrentLinkedQueue,1,boolean offer(E e),True
6,ConcurrentLinkedQueue,2,E poll(),True
6,ConcurrentLinkedQueue,3,E peek(),True
6,ConcurrentLinkedQueue,4,boolean isEmpty(),True
6,ConcurrentLinkedQueue,5,int size(),True
7,ConcurrentSkipListMap,1,"V put(K key, V value)",True
7,ConcurrentSkipListMap,2,V get(Object key),True
7,ConcurrentSkipListMap,3,V remove(Object key),True
7,ConcurrentSkipListMap,4,"ConcurrentNavigableMap<K,V> subMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive)",True
7,ConcurrentSkipListMap,5,NavigableSet<K> navigableKeySet(),True
8,ConcurrentSkipListSet,1,boolean add(E e),True
8,ConcurrentSkipListSet,2,E ceiling(E e),True
8,ConcurrentSkipListSet,3,E floor(E e),True
8,ConcurrentSkipListSet,4,E pollFirst(),True
8,ConcurrentSkipListSet,5,E pollLast(),True
9,CopyOnWriteArrayList,1,void addIfAbsent(E e),False
9,CopyOnWriteArrayList,2,"E set(int index, E element)",True
9,CopyOnWriteArrayList,3,boolean removeIf(Predicate<? super E> filter),True
9,CopyOnWriteArrayList,4,Object[] toArray(),True
9,CopyOnWriteArrayList,5,void clear(),True
10,CopyOnWriteArraySet,1,boolean addIfAbsent(E e),False
10,CopyOnWriteArraySet,2,boolean remove(Object o),True
10,CopyOnWriteArraySet,3,boolean removeAll(Collection<?> c),True
10,CopyOnWriteArraySet,4,void clear(),True
10,CopyOnWriteArraySet,5,CopyOnWriteArraySet<E> clone(),False
11,CountDownLatch,1,void await(),True
11,CountDownLatch,2,"boolean await(long timeout, TimeUnit unit) throws InterruptedException",True
11,CountDownLatch,3,void countDown(),True
11,CountDownLatch,4,int getCount(),False
11,CountDownLatch,5,boolean await(long timeout) throws InterruptedException,False
12,CountedCompleter,1,void compute(),True
12,CountedCompleter,2,CountedCompleter<?> getCompleter(),True
12,CountedCompleter,3,int getPendingCount(),True
12,CountedCompleter,4,void setPendingCount(int count),True
12,CountedCompleter,5,void tryComplete(),True
13,CyclicBarrier,1,int await(),True
13,CyclicBarrier,2,"int await(long timeout, TimeUnit unit)",True
13,CyclicBarrier,3,int getNumberWaiting(),True
13,CyclicBarrier,4,int getParties(),True
13,CyclicBarrier,5,boolean isBroken(),True
14,DelayQueue,1,boolean offer(E e),True
14,DelayQueue,2,E poll(),True
14,DelayQueue,3,E peek(),True
14,DelayQueue,4,Iterator<E> iterator(),True
14,DelayQueue,5,int size(),True
15,Exchanger,1,V exchange(V x),True
15,Exchanger,2,int getQueuedParties(),False
15,Exchanger,3,boolean remove(Object x),False
15,Exchanger,4,boolean hasWaitingConsumer(),False
15,Exchanger,5,"V exchange(V x, long timeout, TimeUnit unit) throws InterruptedException, TimeoutException",True
16,ExecutorCompletionService,1,Future<V> submit(Callable<V> task),True
16,ExecutorCompletionService,2,"Future<V> submit(Runnable task, V result)",True
16,ExecutorCompletionService,3,Future<V> take(),True
16,ExecutorCompletionService,4,Future<V> poll(),True
16,ExecutorCompletionService,5,"Future<V> poll(long timeout, TimeUnit unit)",True
17,Executors,1,ExecutorService newFixedThreadPool(int nThreads),True
17,Executors,2,ScheduledExecutorService newScheduledThreadPool(int corePoolSize),True
17,Executors,3,ExecutorService newSingleThreadExecutor(),True
17,Executors,4,ScheduledExecutorService newSingleThreadScheduledExecutor(),True
17,Executors,5,ExecutorService newCachedThreadPool(),True
18,ForkJoinPool,1,V invoke(ForkJoinTask<T> task),False
18,ForkJoinPool,2,void execute(ForkJoinTask<?> task),True
18,ForkJoinPool,3,ForkJoinPool getPool(),False
18,ForkJoinPool,4,int getParallelism(),True
18,ForkJoinPool,5,long getStealCount(),True
19,ForkJoinTask,1,void exec(),False
19,ForkJoinTask,2,V getRawResult(),True
19,ForkJoinTask,3,void setRawResult(V value),True
19,ForkJoinTask,4,boolean exec(),True
19,ForkJoinTask,5,boolean isCompletedAbnormally(),True
20,ForkJoinWorkerThread,1,ForkJoinWorkerThread getWorkerThread(),False
20,ForkJoinWorkerThread,2,int getPoolIndex(),True
20,ForkJoinWorkerThread,3,ForkJoinPool getPool(),True
20,ForkJoinWorkerThread,4,long getId(),False
20,ForkJoinWorkerThread,5,int getQueuedTaskCount(),False
21,FutureTask,1,void run(),True
21,FutureTask,2,void cancel(boolean mayInterruptIfRunning),False
21,FutureTask,3,boolean isCancelled(),True
21,FutureTask,4,boolean isDone(),True
21,FutureTask,5,"T get() throws InterruptedException, ExecutionException",False
22,LinkedBlockingDeque,1,void putLast(E e),True
22,LinkedBlockingDeque,2,E takeFirst(),True
22,LinkedBlockingDeque,3,boolean offerFirst(E e),True
22,LinkedBlockingDeque,4,int remainingCapacity(),True
22,LinkedBlockingDeque,5,Iterator<E> descendingIterator(),True
23,LinkedBlockingQueue,1,boolean offer(E e),True
23,LinkedBlockingQueue,2,E poll(),True
23,LinkedBlockingQueue,3,E peek(),True
23,LinkedBlockingQueue,4,void put(E e),True
23,LinkedBlockingQueue,5,boolean remove(Object o),True
24,LinkedTransferQueue,1,boolean tryTransfer(E e),True
24,LinkedTransferQueue,2,"boolean tryTransfer(E e, long timeout, TimeUnit unit)",True
24,LinkedTransferQueue,3,void transfer(E e),True
24,LinkedTransferQueue,4,boolean hasWaitingConsumer(),True
24,LinkedTransferQueue,5,int getWaitingConsumerCount(),True
26,PriorityBlockingQueue,1,boolean offer(E e),True
26,PriorityBlockingQueue,2,E poll(),True
26,PriorityBlockingQueue,3,E peek(),True
26,PriorityBlockingQueue,4,int size(),True
26,PriorityBlockingQueue,5,void clear(),True
28,RecursiveTask,1,V compute(),True
28,RecursiveTask,2,Collection<RecursiveTask<S>> getRawResult(),False
28,RecursiveTask,3,void setRawResult(Collection<RecursiveTask<S>> result),False
28,RecursiveTask,4,protected abstract S compute(),False
28,RecursiveTask,5,protected void setRawResult(S value),False
29,ScheduledThreadPoolExecutor,1,"ScheduledFuture<?> schedule(Runnable command, long delay, TimeUnit unit)",True
29,ScheduledThreadPoolExecutor,2,"ScheduledFuture<?> scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit)",True
29,ScheduledThreadPoolExecutor,3,"ScheduledFuture<?> scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit)",True
29,ScheduledThreadPoolExecutor,4,ScheduledFuture<V> submit(Callable<V> task),False
29,ScheduledThreadPoolExecutor,5,ScheduledFuture<?> submit(Runnable task),False
30,Semaphore,1,void acquire(),True
30,Semaphore,2,void release(),True
30,Semaphore,3,int availablePermits(),True
30,Semaphore,4,boolean tryAcquire(),True
30,Semaphore,5,int getQueueLength(),True
31,SynchronousQueue,1,E take(),True
31,SynchronousQueue,2,boolean offer(E e),True
31,SynchronousQueue,3,E poll(),True
31,SynchronousQueue,4,"boolean offer(E e, long timeout, TimeUnit unit)",True
31,SynchronousQueue,5,E peek(),True
33,ThreadPoolExecutor,1,void execute(Runnable command),True
33,ThreadPoolExecutor,2,List<Runnable> shutdownNow(),True
33,ThreadPoolExecutor,3,void setCorePoolSize(int corePoolSize),True
33,ThreadPoolExecutor,4,long getTaskCount(),True
33,ThreadPoolExecutor,5,boolean isShutdown(),True
34,ThreadPoolExecutor.AbortPolicy,1,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
34,ThreadPoolExecutor.AbortPolicy,2,void shutdown(),False
34,ThreadPoolExecutor.AbortPolicy,3,List<Runnable> shutdownNow(),False
34,ThreadPoolExecutor.AbortPolicy,4,boolean isShutdown(),False
34,ThreadPoolExecutor.AbortPolicy,5,boolean isTerminated(),False
35,ThreadPoolExecutor.CallerRunsPolicy,1,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
35,ThreadPoolExecutor.CallerRunsPolicy,2,"void afterExecute(Runnable r, Throwable t)",False
35,ThreadPoolExecutor.CallerRunsPolicy,3,"void beforeExecute(Thread t, Runnable r)",False
35,ThreadPoolExecutor.CallerRunsPolicy,4,void terminated(),False
35,ThreadPoolExecutor.CallerRunsPolicy,5,void purge(),False
36,ThreadPoolExecutor.DiscardOldestPolicy,1,ThreadPoolExecutor.DiscardOldestPolicy(),False
36,ThreadPoolExecutor.DiscardOldestPolicy,2,"void rejectedExecution(Runnable r, ThreadPoolExecutor executor)",True
36,ThreadPoolExecutor.DiscardOldestPolicy,3,"boolean offer(Runnable r, ThreadPoolExecutor executor)",False
36,ThreadPoolExecutor.DiscardOldestPolicy,4,void onRejection(ThreadPoolExecutor executor),False
36,ThreadPoolExecutor.DiscardOldestPolicy,5,"void onExecutionError(Runnable r, Throwable t)",False
37,ThreadPoolExecutor.DiscardPolicy,1,ThreadPoolExecutor.DiscardPolicy(),False
37,ThreadPoolExecutor.DiscardPolicy,2,"void rejectedExecution(Runnable r, ThreadPoolExecutor e)",True
37,ThreadPoolExecutor.DiscardPolicy,3,String toString(),False
37,ThreadPoolExecutor.DiscardPolicy,4,boolean equals(Object obj),False
37,ThreadPoolExecutor.DiscardPolicy,5,int hashCode(),False
