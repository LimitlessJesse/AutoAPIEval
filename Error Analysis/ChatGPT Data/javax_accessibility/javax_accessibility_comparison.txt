Sample: 0 AccessibleAttributeSequence
----------------------------------------------------------------
1. `int getStartIndex()`: This method returns the start index of the accessible attribute sequence.
2. `int getEndIndex()`: This method returns the end index of the accessible attribute sequence.
3. `Object getAccessible()`: This method returns the Accessible object associated with the attribute sequence.
4. `String getText(int start, int end)`: This method returns the text string contained within the specified range of indices.
5. `int getIndexAtPoint(Point p)`: This method returns the index at the specified point.
================================================================

Sample: 1 AccessibleBundle
----------------------------------------------------------------
1. `String getKey()`: Returns the key of the accessible bundle.
2. `String toDisplayString()`: Returns a localized display name for the object.
3. `Object lookupResource(String key)`: Looks up a resource in the accessible bundle using the specified key.
4. `String toDisplayString(String resourceName)`: Returns a localized string for the specified resource name.
5. `AccessibleBundle getCurrentAccessibleBundle()`: Returns the currently active AccessibleBundle.
================================================================

Sample: 2 AccessibleContext
----------------------------------------------------------------
1. `AccessibleState[] getAccessibleStateSet()`: This method returns an array of AccessibleState objects containing the current state set of the accessible object.

2. `int getAccessibleIndexInParent()`: This method returns the index of the accessible child within its accessible parent.

3. `AccessibleRole getAccessibleRole()`: This method returns the role of the accessible object.

4. `AccessibleRelationSet getAccessibleRelationSet()`: This method returns the AccessibleRelationSet describing the object's relationships with other objects.

5. `AccessibleSelection getAccessibleSelection()`: This method returns the AccessibleSelection of the object.
================================================================

Sample: 3 AccessibleHyperlink
----------------------------------------------------------------
1. `AccessibleHyperlink[] getHyperlinks()`: This method returns an array of AccessibleHyperlink objects representing the hyperlinks available in the AccessibleContext.

2. `int getAccessibleHyperlinkCount()`: This method returns the number of hyperlinks available in the AccessibleContext.

3. `AccessibleHyperlink getLink(int index)`: This method returns the AccessibleHyperlink object at the specified index in the list of hyperlinks.

4. `int getIndexAtPoint(Point point)`: This method returns the index of the hyperlink at the specified screen coordinates.

5. `boolean isValid()`: This method returns a boolean value indicating whether the hyperlink is valid and can be activated.
================================================================

Sample: 4 AccessibleRelation
----------------------------------------------------------------
1. `void setRelationType(String key)`
2. `void setTarget(Object target)`
3. `int getTargetCount()`
4. `Object getTarget(int i)`
5. `String getRelationType()`
================================================================

Sample: 5 AccessibleRelationSet
----------------------------------------------------------------
1. `boolean add(javax.accessibility.AccessibleRelation relation)`: This method adds the specified accessible relation to this set.
2. `boolean remove(javax.accessibility.AccessibleRelation relation)`: This method removes the specified accessible relation from this set.
3. `java.util.Set<javax.accessibility.AccessibleRelation> getAll()`: This method returns all the accessible relations in this set.
4. `int size()`: This method returns the number of accessible relations in this set.
5. `void clear()`: This method removes all accessible relations from this set.
================================================================

Sample: 6 AccessibleResourceBundle
----------------------------------------------------------------
1. `void keySetChanged()`: This method notifies listeners that the key set of the resource bundle has changed.
2. `void resourceBundlesChanged()`: This method notifies listeners that the resource bundles have changed.
================================================================

Sample: 7 AccessibleRole
----------------------------------------------------------------
1. `String toDisplayString()`
2. `int getID()`
3. `AccessibleState getAccessibleStateSet()`
4. `AccessibleRelationSet getAccessibleRelationSet()`
5. `AccessibleComponent getComponent()`
================================================================

Sample: 8 AccessibleState
----------------------------------------------------------------
1. `Accessible getAccessibleComponent()` - returns an Accessible representing the component that contains this object

2. `Accessible getAccessibleParent()` - returns the Accessible parent of this object

3. `AccessibleStateSet getAccessibleStateSet()` - returns the AccessibleStateSet for this object

4. `String toDisplayString()` - returns a localized String representing the state of this object

5. `String toString()` - returns a String representing the state of this object
================================================================

Sample: 9 AccessibleStateSet
----------------------------------------------------------------
1. boolean add(javax.accessibility.AccessibleState state)
2. boolean contains(javax.accessibility.AccessibleState state)
3. boolean remove(javax.accessibility.AccessibleState state)
4. void clear()
5. int size()
================================================================

Sample: 10 AccessibleTextSequence
----------------------------------------------------------------
1. `char charAt(int i)`: This method returns the char value at the specified index.
2. `int length()`: This method returns the length of the accessible text sequence.
3. `String getText(int startIndex, int endIndex)`: This method returns the text between the specified start and end indexes.
4. `int getIndexAtPoint(Point p)`: This method returns the index of the character at the specified point.
5. `int getCharCount()`: This method returns the number of characters in the accessible text sequence.
================================================================

