Sample Number,ClassName,Snippet Number,Method,Exist
0,AudioFileFormat,1,AudioFileFormat.Type getType(),True
0,AudioFileFormat,2,"Map<String, Object> properties()",False
0,AudioFileFormat,3,int getByteLength(),True
0,AudioFileFormat,4,int getFrameLength(),True
0,AudioFileFormat,5,long getMicrosecondLength(),False
1,AudioFileFormat.Type,1,String getExtension(),True
1,AudioFileFormat.Type,2,String toString(),True
1,AudioFileFormat.Type,3,int equals(Object obj),False
1,AudioFileFormat.Type,4,int hashCode(),True
1,AudioFileFormat.Type,5,String toString(),True
2,AudioFormat,1,int getSampleRate(),False
2,AudioFormat,2,int getChannels(),True
2,AudioFormat,3,int getSampleSizeInBits(),True
2,AudioFormat,4,boolean isBigEndian(),True
2,AudioFormat,5,float getFrameRate(),True
3,AudioFormat.Encoding,1,boolean equals(Object obj),True
3,AudioFormat.Encoding,2,int hashCode(),True
3,AudioFormat.Encoding,3,String toString(),True
3,AudioFormat.Encoding,4,boolean matches(Encoding encoding),False
3,AudioFormat.Encoding,5,Object clone(),False
4,AudioInputStream,1,int available(),True
4,AudioInputStream,2,AudioFormat getFormat(),True
4,AudioInputStream,3,long getFrameLength(),True
4,AudioInputStream,4,"int read(byte[] b, int off, int len)",True
4,AudioInputStream,5,long skip(long n),True
5,AudioPermission,1,javax.sound.sampled.AudioPermission getAudioPermission(),False
5,AudioPermission,2,boolean implies(java.security.Permission permission),False
5,AudioPermission,3,String getActions(),False
5,AudioPermission,4,boolean equals(Object obj),False
5,AudioPermission,5,int hashCode(),False
6,AudioSystem,1,Mixer.Info[] getMixerInfo(),True
6,AudioSystem,2,Mixer getMixer(Mixer.Info info),True
6,AudioSystem,3,TargetDataLine getTargetDataLine(AudioFormat format),True
6,AudioSystem,4,SourceDataLine getSourceDataLine(AudioFormat format),True
6,AudioSystem,5,Clip getClip(),True
7,BooleanControl,1,boolean getValue(),True
7,BooleanControl,2,void setValue(boolean value),True
7,BooleanControl,3,boolean getMin(),False
7,BooleanControl,4,boolean getMax(),False
7,BooleanControl,5,void setLabel(String label),False
8,BooleanControl.Type,1,boolean getValue(),False
8,BooleanControl.Type,2,void setValue(boolean value),False
8,BooleanControl.Type,3,String toString(),False
8,BooleanControl.Type,4,boolean getInitialValue(),False
8,BooleanControl.Type,5,boolean isMidTick(),False
9,CompoundControl,1,Control[] getMemberControls(),True
9,CompoundControl,2,float getMaximum(),False
9,CompoundControl,3,float getMinimum(),False
9,CompoundControl,4,String getUnits(),False
9,CompoundControl,5,Object getControl(Type controlType),False
10,CompoundControl.Type,1,int getMax(),False
10,CompoundControl.Type,2,int getMin(),False
10,CompoundControl.Type,3,String toString(),False
10,CompoundControl.Type,4,boolean equals(Object obj),False
10,CompoundControl.Type,5,int hashCode(),False
11,Control,1,Control[] getControls(),False
11,Control,2,boolean isSupported(),False
11,Control,3,Object getControl(Type type),False
11,Control,4,String getType(),False
11,Control,5,void setValue(Object value),False
12,Control.Type,1,Control.Type getControlType(),False
12,Control.Type,2,boolean equals(Object obj),True
12,Control.Type,3,String toString(),True
12,Control.Type,4,int hashCode(),True
12,Control.Type,5,Control.Type[] values(),False
13,DataLine.Info,1,javax.sound.sampled.DataLine.Info getLineClass(),False
13,DataLine.Info,2,javax.sound.sampled.AudioFormat getFormats()[ ],False
13,DataLine.Info,3,boolean isFormatSupported(AudioFormat format),True
13,DataLine.Info,4,boolean isSource(),False
13,DataLine.Info,5,boolean isTarget(),False
14,EnumControl,1,Class<Control.Type> getType(),False
14,EnumControl,2,String getUnits(),False
14,EnumControl,3,Object[] getValues(),True
14,EnumControl,4,Number getMax(),False
14,EnumControl,5,Number getMin(),False
15,EnumControl.Type,1,Class<T> getControlType(),False
15,EnumControl.Type,2,String toString(),False
15,EnumControl.Type,3,boolean equals(Object obj),False
15,EnumControl.Type,4,int hashCode(),False
15,EnumControl.Type,5,String getName(),False
16,FloatControl,1,float getMaximum(),True
16,FloatControl,2,float getMinimum(),True
16,FloatControl,3,String getUnits(),True
16,FloatControl,4,float getPrecision(),True
16,FloatControl,5,void setValue(float newValue),True
17,FloatControl.Type,1,float getMaximum(),False
17,FloatControl.Type,2,float getMinimum(),False
17,FloatControl.Type,3,float getPrecision(),False
17,FloatControl.Type,4,float getValue(),False
17,FloatControl.Type,5,void setValue(float value),False
18,Line.Info,1,Class<?> getLineClass(),True
18,Line.Info,2,boolean matches(Line.Info info),True
18,Line.Info,3,Line.Info[] getSourceLineInfo(),False
18,Line.Info,4,Line.Info[] getSourceDataLineInfo(),False
18,Line.Info,5,Line.Info[] getTargetDataLineInfo(),False
19,LineEvent,1,Line getLine(),True
19,LineEvent,2,LineEvent.Type getType(),True
19,LineEvent,3,boolean isControlOpen(),False
19,LineEvent,4,boolean isOpen(),False
19,LineEvent,5,boolean isRunning(),False
20,LineEvent.Type,1,LineEvent.Type getType(),False
20,LineEvent.Type,2,String toString(),True
20,LineEvent.Type,3,boolean equals(Object obj),True
20,LineEvent.Type,4,int hashCode(),True
20,LineEvent.Type,5,LineEvent.Type valueOf(String name),False
21,Mixer.Info,1,String getDescription(),True
21,Mixer.Info,2,String getName(),True
21,Mixer.Info,3,Line.Info[] getSourceLineInfo(Line.Info info),False
21,Mixer.Info,4,Line.Info[] getTargetLineInfo(Line.Info info),False
21,Mixer.Info,5,"boolean isSynchronizationSupported(Line.Info info, boolean canSync)",False
22,Port.Info,1,Port.Info[] getPortInfo(),False
22,Port.Info,2,String getName(),True
22,Port.Info,3,Port.Info getPortInfo(Line.Info lineInfo),False
22,Port.Info,4,boolean isSource(),True
22,Port.Info,5,boolean isTarget(),False
23,ReverbType,1,ReverbType BEAM_BOX(),False
23,ReverbType,2,ReverbType SMALL_ROOM(),False
23,ReverbType,3,ReverbType LARGE_ROOM(),False
23,ReverbType,4,ReverbType MEDIUM_ROOM(),False
23,ReverbType,5,ReverbType LARGE_HALL(),False
