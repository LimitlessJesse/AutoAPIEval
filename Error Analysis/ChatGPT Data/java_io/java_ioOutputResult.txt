Sample: BufferedInputStream_1
----------------------------------------------------------------
stdout:
Input data: 105

================================================================

Sample: BufferedInputStream_2
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: test.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_2.main(BufferedInputStream_2.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_3
----------------------------------------------------------------
stderr:
File not found
java.io.FileNotFoundException: example.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_3.main(BufferedInputStream_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: example.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at BufferedInputStream_4.main(BufferedInputStream_4.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: BufferedInputStream_5
----------------------------------------------------------------
stdout:
An error occurred: example.txt (No such file or directory)

================================================================

Sample: BufferedOutputStream_1
----------------------------------------------------------------
================================================================

Sample: BufferedOutputStream_2
----------------------------------------------------------------
================================================================

Sample: BufferedOutputStream_3
----------------------------------------------------------------
stdout:
Data has been written to the file.

================================================================

Sample: BufferedWriter_2
----------------------------------------------------------------
stdout:
Lines written to file.

================================================================

Sample: BufferedWriter_3
----------------------------------------------------------------
================================================================

Sample: BufferedWriter_4
----------------------------------------------------------------
================================================================

Sample: ByteArrayInputStream_2
----------------------------------------------------------------
stdout:
Bytes read: 3
Byte at index 0: 65
Byte at index 1: 66
Byte at index 2: 67

================================================================

Sample: ByteArrayInputStream_3
----------------------------------------------------------------
stdout:
Available bytes in the input stream: 5

================================================================

Sample: ByteArrayInputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayInputStream_4.java:12: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: ByteArrayInputStream_5
----------------------------------------------------------------
stdout:
1 2 3 4 5 
================================================================

Sample: ByteArrayOutputStream_1
----------------------------------------------------------------
stdout:
A

================================================================

Sample: ByteArrayOutputStream_2
----------------------------------------------------------------
stdout:
66 67 68 
================================================================

Sample: ByteArrayOutputStream_3
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: ByteArrayOutputStream_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayOutputStream_4.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        baos.write("Hello, World!".getBytes());
                  ^
1 error


================================================================

Sample: ByteArrayOutputStream_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ByteArrayOutputStream_5.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        byteArrayOutputStream.write("Hello, World!".getBytes());
                                   ^
1 error


================================================================

Sample: CharArrayReader_1
----------------------------------------------------------------
stdout:
a

================================================================

Sample: CharArrayReader_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IndexOutOfBoundsException: Range [1, 1 + 3) out of bounds for length 3
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromIndexSize(Preconditions.java:82)
	at java.base/jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:361)
	at java.base/java.util.Objects.checkFromIndexSize(Objects.java:413)
	at java.base/java.io.CharArrayReader.read(CharArrayReader.java:134)
	at CharArrayReader_2.main(CharArrayReader_2.java:14)

================================================================

Sample: CharArrayReader_3
----------------------------------------------------------------
stdout:
abcde
================================================================

Sample: CharArrayReader_4
----------------------------------------------------------------
stdout:
markSupported: true

================================================================

Sample: CharArrayReader_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/CharArrayReader_5.java:9: error: unreported exception IOException; must be caught or declared to be thrown
        reader.mark(3);
                   ^
1 error


================================================================

Sample: CharArrayWriter_1
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: CharArrayWriter_2
----------------------------------------------------------------
stdout:
A
================================================================

Sample: Console_1
----------------------------------------------------------------
stdout:
Console is not available

================================================================

Sample: Console_2
----------------------------------------------------------------
stdout:
No console available

================================================================

Sample: Console_3
----------------------------------------------------------------
stdout:
Console is not available

================================================================

Sample: Console_4
----------------------------------------------------------------
stdout:
No console available

================================================================

Sample: DataOutputStream_1
----------------------------------------------------------------
================================================================

Sample: DataOutputStream_3
----------------------------------------------------------------
================================================================

Sample: DataOutputStream_4
----------------------------------------------------------------
================================================================

Sample: DataOutputStream_5
----------------------------------------------------------------
================================================================

Sample: File_1
----------------------------------------------------------------
stdout:
File created successfully

================================================================

Sample: File_2
----------------------------------------------------------------
stdout:
File does not exist

================================================================

Sample: File_3
----------------------------------------------------------------
================================================================

Sample: File_4
----------------------------------------------------------------
stdout:
Directory created successfully

================================================================

Sample: File_5
----------------------------------------------------------------
stdout:
File size (in bytes): 0

================================================================

Sample: FileDescriptor_2
----------------------------------------------------------------
stdout:
Error syncing file descriptor: sync failed

================================================================

Sample: FileDescriptor_3
----------------------------------------------------------------
stdout:
Is valid: true

================================================================

Sample: FileOutputStream_1
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: FileOutputStream_2
----------------------------------------------------------------
stdout:
Data has been written to output.txt

================================================================

Sample: FileOutputStream_3
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: FileOutputStream_4
----------------------------------------------------------------
stdout:
File closed successfully.

================================================================

Sample: FilePermission_2
----------------------------------------------------------------
stdout:
read

================================================================

Sample: FilePermission_3
----------------------------------------------------------------
stdout:
Are the FilePermission objects equal? true

================================================================

Sample: FilePermission_4
----------------------------------------------------------------
stdout:
Hashcode of FilePermission object: -412458632

================================================================

Sample: FilterOutputStream_1
----------------------------------------------------------------
stdout:
Byte has been written to output.txt

================================================================

Sample: FilterOutputStream_2
----------------------------------------------------------------
stdout:
A B C D E 
================================================================

Sample: FilterOutputStream_3
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_4
----------------------------------------------------------------
================================================================

Sample: FilterOutputStream_5
----------------------------------------------------------------
================================================================

Sample: FilterReader_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_1.java:7: error: FilterReader is abstract; cannot be instantiated
        FilterReader filterReader = new FilterReader(new Reader() {
                                    ^
1 error


================================================================

Sample: FilterReader_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_2.java:11: error: FilterReader is abstract; cannot be instantiated
            FilterReader filterReader = new FilterReader(new StringReader(text));
                                        ^
1 error


================================================================

Sample: FilterReader_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at java.base/java.io.FileReader.<init>(FileReader.java:60)
	at FilterReader_3.main(FilterReader_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: FilterReader_4
----------------------------------------------------------------
stdout:
Skipped 6 characters

================================================================

Sample: FilterReader_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/FilterReader_5.java:8: error: FilterReader is abstract; cannot be instantiated
        FilterReader reader = new FilterReader(new StringReader(text));
                              ^
1 error


================================================================

Sample: FilterWriter_1
----------------------------------------------------------------
stdout:
a

================================================================

Sample: FilterWriter_4
----------------------------------------------------------------
stdout:
World

================================================================

Sample: FilterWriter_5
----------------------------------------------------------------
stdout:
Hello

================================================================

Sample: InputStream_1
----------------------------------------------------------------
stdout:
Enter a number:
You entered: 105

================================================================

Sample: InputStream_2
----------------------------------------------------------------
stdout:
Number of bytes read: 7
Data read from input stream: in case   

================================================================

Sample: InputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: example.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at InputStream_3.main(InputStream_3.java:6)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: InputStream_4
----------------------------------------------------------------
stdout:
An error occurred

stderr:
java.io.FileNotFoundException: sample.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at InputStream_4.main(InputStream_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: InputStream_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/InputStream_5.java:18: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: InputStreamReader_1
----------------------------------------------------------------
stdout:
Enter a number: 

stderr:
Exception in thread "main" java.lang.NumberFormatException: For input string: "in case"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at InputStreamReader_1.main(InputStreamReader_1.java:12)

================================================================

Sample: InputStreamReader_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/InputStreamReader_3.java:7: error: incompatible types: String cannot be converted to Charset
        Charset encoding = isr.getEncoding();
                                          ^
1 error


================================================================

Sample: InputStreamReader_4
----------------------------------------------------------------
stdout:
Input stream closed successfully

================================================================

Sample: LineNumberInputStream_1
----------------------------------------------------------------
stdout:
Read data: 105

stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberInputStream_2
----------------------------------------------------------------
stdout:
Number of bytes read: 7

stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberInputStream_3
----------------------------------------------------------------
stdout:
Bytes available for reading: 3

stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberInputStream_4
----------------------------------------------------------------
stdout:
Skipped 7 bytes.

stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberInputStream_5
----------------------------------------------------------------
stderr:
Note: ./Data/java_io/javaFiles/LineNumberInputStream_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: LineNumberReader_1
----------------------------------------------------------------
stdout:
Line 1: Line 1
Line 2: Line 2
Line 3: Line 3

================================================================

Sample: LineNumberReader_2
----------------------------------------------------------------
stdout:
Line read: Hello World!

================================================================

Sample: LineNumberReader_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at java.base/java.io.FileReader.<init>(FileReader.java:60)
	at LineNumberReader_3.main(LineNumberReader_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: data.ser (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at ObjectInputStream_1.main(ObjectInputStream_1.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_2
----------------------------------------------------------------
stderr:
java.io.EOFException
	at java.base/java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2915)
	at java.base/java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:3410)
	at java.base/java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:954)
	at java.base/java.io.ObjectInputStream.<init>(ObjectInputStream.java:392)
	at ObjectInputStream_2.main(ObjectInputStream_2.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_3.java:9: error: invalid method declaration; return type required
    public Main(String name, int age) {
           ^
1 error


================================================================

Sample: ObjectInputStream_4
----------------------------------------------------------------
stdout:
An error occurred.

stderr:
java.io.EOFException
	at java.base/java.io.ObjectInputStream$BlockDataInputStream.readBoolean(ObjectInputStream.java:3374)
	at java.base/java.io.ObjectInputStream.readBoolean(ObjectInputStream.java:1062)
	at ObjectInputStream_4.main(ObjectInputStream_4.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_5
----------------------------------------------------------------
stderr:
java.io.EOFException
	at java.base/java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2915)
	at java.base/java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:3410)
	at java.base/java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:954)
	at java.base/java.io.ObjectInputStream.<init>(ObjectInputStream.java:392)
	at ObjectInputStream_5.main(ObjectInputStream_5.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectInputStream_GetField_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_GetField_1.java:21: error: cannot find symbol
            fields = ObjectInputStream.GetField(obj);
                                      ^
  symbol:   method GetField(MyClass)
  location: class ObjectInputStream
1 error


================================================================

Sample: ObjectInputStream_GetField_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_GetField_2.java:10: error: unreported exception IOException; must be caught or declared to be thrown
        byte result = getField.get("fieldName", (byte) 10);
                                  ^
1 error


================================================================

Sample: ObjectInputStream_GetField_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_GetField_3.java:9: error: unreported exception IOException; must be caught or declared to be thrown
        char value = field.get(name, defaultValue);
                              ^
1 error


================================================================

Sample: ObjectInputStream_GetField_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_GetField_4.java:8: error: unreported exception IOException; must be caught or declared to be thrown
        double value = getField.get("fieldName", 0.0);
                                   ^
1 error


================================================================

Sample: ObjectInputStream_GetField_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectInputStream_GetField_5.java:11: error: cannot find symbol
            ObjectStreamClass osc = ObjectStreamClass.lookup(Main.class);
                                                             ^
  symbol:   class Main
  location: class ObjectInputStream_GetField_5
1 error


================================================================

Sample: ObjectOutputStream_PutField_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectOutputStream_PutField_1.java:6: error: constructor ObjectOutputStream in class ObjectOutputStream cannot be applied to given types;
            ObjectOutputStream.PutField putField = new ObjectOutputStream().putFields();
                                                   ^
  required: no arguments
  found:    no arguments
  reason: ObjectOutputStream() has protected access in ObjectOutputStream
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ObjectOutputStream_PutField_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectOutputStream_PutField_2.java:40: error: cannot find symbol
            public void write(ObjectOutput out) {
                              ^
  symbol: class ObjectOutput
./Data/java_io/javaFiles/ObjectOutputStream_PutField_2.java:5: error: <anonymous ObjectOutputStream_PutField_2$1> is not abstract and does not override abstract method put(String,boolean) in PutField
        ObjectOutputStream.PutField putField = new ObjectOutputStream.PutField() {
                                                                                 ^
Note: ./Data/java_io/javaFiles/ObjectOutputStream_PutField_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
2 errors


================================================================

Sample: ObjectOutputStream_PutField_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectOutputStream_PutField_3.java:12: error: cannot find symbol
            ObjectOutputStream.PutField putField = objectOutput.putFields();
                                                               ^
  symbol:   method putFields()
  location: variable objectOutput of type ObjectOutput
./Data/java_io/javaFiles/ObjectOutputStream_PutField_3.java:14: error: cannot find symbol
            objectOutput.writeFields();
                        ^
  symbol:   method writeFields()
  location: variable objectOutput of type ObjectOutput
2 errors


================================================================

Sample: ObjectOutputStream_PutField_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectOutputStream_PutField_4.java:5: error: ObjectOutputStream.PutFieldImpl has private access in ObjectOutputStream
        ObjectOutputStream.PutField putField = new ObjectOutputStream.PutFieldImpl();
                                                                     ^
1 error


================================================================

Sample: ObjectOutputStream_PutField_5
----------------------------------------------------------------
stderr:
java.io.NotActiveException: not in call to writeObject
	at java.base/java.io.ObjectOutputStream.putFields(ObjectOutputStream.java:461)
	at ObjectOutputStream_PutField_5.main(ObjectOutputStream_PutField_5.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: ObjectStreamClass_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/ObjectStreamClass_1.java:5: error: cannot find symbol
        long serialVersionUID = ObjectStreamClass.lookup(Main.class).getSerialVersionUID();
                                                         ^
  symbol:   class Main
  location: class ObjectStreamClass_1
1 error


================================================================

Sample: ObjectStreamClass_2
----------------------------------------------------------------
stdout:
Class name: java.lang.String

================================================================

Sample: ObjectStreamClass_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.io.ObjectStreamClass.getField(String)" because "<local2>" is null
	at ObjectStreamClass_3.main(ObjectStreamClass_3.java:14)

================================================================

Sample: ObjectStreamClass_4
----------------------------------------------------------------
stdout:
SerialVersionUID of ArrayList class: 8683452581122892189

================================================================

Sample: ObjectStreamClass_5
----------------------------------------------------------------
stdout:
Class name: java.io.ObjectStreamClass

================================================================

Sample: ObjectStreamField_1
----------------------------------------------------------------
stdout:
name

================================================================

Sample: ObjectStreamField_2
----------------------------------------------------------------
stdout:
Offset: 0

================================================================

Sample: ObjectStreamField_3
----------------------------------------------------------------
stdout:
Field type: class java.lang.String

================================================================

Sample: ObjectStreamField_4
----------------------------------------------------------------
stdout:
Type of the field: Ljava/lang/String;

================================================================

Sample: ObjectStreamField_5
----------------------------------------------------------------
stdout:
Type Code: L

================================================================

Sample: OutputStream_1
----------------------------------------------------------------
stdout:
Data written to file successfully.

================================================================

Sample: OutputStream_2
----------------------------------------------------------------
================================================================

Sample: OutputStream_3
----------------------------------------------------------------
stdout:
Output stream closed successfully.

================================================================

Sample: OutputStream_4
----------------------------------------------------------------
stdout:
Data has been written to output.txt

================================================================

Sample: OutputStream_5
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/OutputStream_5.java:18: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: OutputStreamWriter_1
----------------------------------------------------------------
================================================================

Sample: OutputStreamWriter_4
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: OutputStreamWriter_5
----------------------------------------------------------------
================================================================

Sample: PipedInputStream_1
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:305)
	at PipedInputStream_1.main(PipedInputStream_1.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedInputStream_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:305)
	at java.base/java.io.PipedInputStream.read(PipedInputStream.java:377)
	at PipedInputStream_3.main(PipedInputStream_3.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedInputStream_4
----------------------------------------------------------------
================================================================

Sample: PipedInputStream_5
----------------------------------------------------------------
stdout:
Bytes Available: 0

================================================================

Sample: PipedOutputStream_1
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedOutputStream.write(PipedOutputStream.java:120)
	at PipedOutputStream_1.main(PipedOutputStream_1.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedOutputStream_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedOutputStream.write(PipedOutputStream.java:141)
	at PipedOutputStream_3.main(PipedOutputStream_3.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedOutputStream_4
----------------------------------------------------------------
================================================================

Sample: PipedOutputStream_5
----------------------------------------------------------------
stdout:
PipedOutputStream closed successfully

================================================================

Sample: PipedReader_1
----------------------------------------------------------------
timeout: process took too long
================================================================

Sample: PipedReader_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/PipedReader_2.java:8: error: cannot find symbol
            reader.write('A');
                  ^
  symbol:   method write(char)
  location: variable reader of type PipedReader
1 error


================================================================

Sample: PipedReader_3
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedReader.read(PipedReader.java:293)
	at PipedReader_3.main(PipedReader_3.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedReader_4
----------------------------------------------------------------
stderr:
java.io.IOException: Pipe not connected
	at java.base/java.io.PipedReader.ready(PipedReader.java:337)
	at PipedReader_4.main(PipedReader_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: PipedReader_5
----------------------------------------------------------------
================================================================

Sample: PrintStream_1
----------------------------------------------------------------
stdout:
true
================================================================

Sample: PrintStream_2
----------------------------------------------------------------
stdout:
A
================================================================

Sample: PrintStream_3
----------------------------------------------------------------
stdout:
42
================================================================

Sample: PrintStream_4
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PrintStream_5
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintWriter_1
----------------------------------------------------------------
stdout:
Hello, World!
================================================================

Sample: PrintWriter_2
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: PrintWriter_3
----------------------------------------------------------------
stdout:
Hello
================================================================

Sample: PrintWriter_4
----------------------------------------------------------------
================================================================

Sample: PrintWriter_5
----------------------------------------------------------------
stdout:
Hello, World! The answer to life, the universe, and everything is 42
================================================================

Sample: RandomAccessFile_1
----------------------------------------------------------------
stdout:
Current File Pointer offset: 7

================================================================

Sample: RandomAccessFile_2
----------------------------------------------------------------
================================================================

Sample: RandomAccessFile_3
----------------------------------------------------------------
stdout:
Read integer value: -1393754107

================================================================

Sample: RandomAccessFile_4
----------------------------------------------------------------
stdout:
An error occurred.

stderr:
java.io.FileNotFoundException: sample.txt (No such file or directory)
	at java.base/java.io.RandomAccessFile.open0(Native Method)
	at java.base/java.io.RandomAccessFile.open(RandomAccessFile.java:344)
	at java.base/java.io.RandomAccessFile.<init>(RandomAccessFile.java:259)
	at java.base/java.io.RandomAccessFile.<init>(RandomAccessFile.java:213)
	at java.base/java.io.RandomAccessFile.<init>(RandomAccessFile.java:127)
	at RandomAccessFile_4.main(RandomAccessFile_4.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: RandomAccessFile_5
----------------------------------------------------------------
================================================================

Sample: Reader_1
----------------------------------------------------------------
stdout:
Read number: 49

================================================================

Sample: Reader_2
----------------------------------------------------------------
stdout:
Number of characters read: 5
Characters read: 
H e l l o 
================================================================

Sample: Reader_3
----------------------------------------------------------------
stderr:
Error reading file: file.txt (No such file or directory)

================================================================

Sample: Reader_4
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/Reader_4.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        if(reader.ready()) {
                       ^
1 error


================================================================

Sample: Reader_5
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at java.base/java.io.FileReader.<init>(FileReader.java:60)
	at Reader_5.main(Reader_5.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: SequenceInputStream_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file1.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at SequenceInputStream_1.main(SequenceInputStream_1.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: SequenceInputStream_2
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/SequenceInputStream_2.java:15: error: unreported exception IOException; must be caught or declared to be thrown
        int bytesRead = sequenceInput.read(buffer, 0, 5);
                                          ^
./Data/java_io/javaFiles/SequenceInputStream_2.java:23: error: unreported exception IOException; must be caught or declared to be thrown
        sequenceInput.close();
                           ^
2 errors


================================================================

Sample: SequenceInputStream_3
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file1.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at SequenceInputStream_3.main(SequenceInputStream_3.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: SequenceInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: file1.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at SequenceInputStream_4.main(SequenceInputStream_4.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: StreamTokenizer_1
----------------------------------------------------------------
stdout:
Number: 10
Number: 20
Number: 30

================================================================

Sample: StreamTokenizer_4
----------------------------------------------------------------
stdout:
Token: Hello
Token: World
Token: null
Token: This
Token: is
Token: a
Token: test

================================================================

Sample: StringBufferInputStream_1
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringBufferInputStream_1.java:10: error: unreported exception IOException; must be caught or declared to be thrown
        stream.close();
                    ^
Note: ./Data/java_io/javaFiles/StringBufferInputStream_1.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error


================================================================

Sample: StringBufferInputStream_2
----------------------------------------------------------------
stdout:
Bytes read: 5
Hello     

stderr:
Note: ./Data/java_io/javaFiles/StringBufferInputStream_2.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: StringBufferInputStream_3
----------------------------------------------------------------
stdout:
Skipped 6 bytes

stderr:
Note: ./Data/java_io/javaFiles/StringBufferInputStream_3.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: StringBufferInputStream_4
----------------------------------------------------------------
stdout:
Number of bytes available: 13

stderr:
Note: ./Data/java_io/javaFiles/StringBufferInputStream_4.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: StringBufferInputStream_5
----------------------------------------------------------------
stdout:
Hello, World!
stderr:
Note: ./Data/java_io/javaFiles/StringBufferInputStream_5.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

================================================================

Sample: StringReader_1
----------------------------------------------------------------
stdout:
12345
================================================================

Sample: StringReader_2
----------------------------------------------------------------
stdout:
Number of characters read: 3
Characters read: 
    E x a 
================================================================

Sample: StringReader_3
----------------------------------------------------------------
stdout:
World
================================================================

Sample: StringReader_4
----------------------------------------------------------------
stdout:
Read data: T

================================================================

Sample: StringReader_5
----------------------------------------------------------------
stdout:
markSupported(): true

================================================================

Sample: StringWriter_1
----------------------------------------------------------------
stdout:
Hello, this is a test string

================================================================

Sample: StringWriter_2
----------------------------------------------------------------
stdout:
A

================================================================

Sample: StringWriter_3
----------------------------------------------------------------
output:
./Data/java_io/javaFiles/StringWriter_3.java:14: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
1 error


================================================================

Sample: StringWriter_4
----------------------------------------------------------------
stdout:
World

================================================================

Sample: StringWriter_5
----------------------------------------------------------------
stdout:
Hello, World!

================================================================

Sample: Writer_1
----------------------------------------------------------------
stdout:
write() method executed successfully.

================================================================

Sample: Writer_2
----------------------------------------------------------------
================================================================

Sample: Writer_3
----------------------------------------------------------------
================================================================

Sample: Writer_4
----------------------------------------------------------------
================================================================

