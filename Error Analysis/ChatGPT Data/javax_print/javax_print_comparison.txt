Sample: 0 DocFlavor
----------------------------------------------------------------
1. `String getMediaType()`: Returns the MIME type representing the doc flavor.
   
2. `Class<?> getRepresentationClass()`: Returns the representation class of the doc flavor.

3. `String getMimeType()`: Returns the MIME type string of the doc flavor.

4. `String getMediaSubtype()`: Returns the media subtype string of the doc flavor.

5. `DocFlavor.BYTE_ARRAY getByteStreamFlavor()`: Returns a doc flavor with the MIME type set to application/octet-stream and the representation class set to byte[].
================================================================

Sample: 1 DocFlavor.BYTE_ARRAY
----------------------------------------------------------------
1. `byte[] getBytes()`: This method returns the byte array of the document.
2. `int length()`: This method returns the length of the byte array.
3. `String getMimeType()`: This method returns the MIME type of the document.
4. `Class<?> getRepresentationClass()`: This method returns the representation class of the document.
5. `String getStringForCharset(String charsetName)`: This method returns a string representation of the byte array using the specified charset.
================================================================

Sample: 2 DocFlavor.CHAR_ARRAY
----------------------------------------------------------------
1. `char[] getChars()`: This method returns the character array.
2. `int getSize()`: This method returns the size of the character array.
3. `boolean isAwt">isAwt()`: This method returns true if the document flavor's MIME type is of the AWT flavor.
4. `boolean isFlavorTextType()`: This method returns true if the document flavor's MIME type is equivalent to "text/plain" or "text/html".
5. `boolean isMimeTypeEqual(String mimeType)`: This method compares the DocumentFlavor's MIME type against the given MIME type.
================================================================

Sample: 3 DocFlavor.INPUT_STREAM
----------------------------------------------------------------
1. `javax.print.DocFlavor.INPUT_STREAM()`: Constructor for creating a new input stream doc flavor.
2. `boolean equals(Object obj)`: Compares this input stream doc flavor to the specified object.
3. `String getRepresentationClassName()`: Returns the fully-qualified name of the class of the representation class object associated with this doc flavor.
4. `DocFlavor.SERVICE_FORMATTED getMediaSubtype()`: Returns the media subtype as a DocFlavor object.
5. `String toString()`: Returns a string representation of this input stream doc flavor.
================================================================

Sample: 4 DocFlavor.READER
----------------------------------------------------------------
1. `DocFlavor.BYTE_ARRAY getMediaType()`: This method returns the media type of the document flavor.
2. `int getRepresentationClass()`: This method returns the representation class name of the document flavor.
3. `String getMimeType()`: This method returns the MIME type of the document flavor.
4. `Class<?> getRepresentationClass(): This method returns the representation class of the document flavor.
5. `DocFlavor serviceFormat(Class<?> representationClass)`: This method returns a new doc flavor object with the given representation class.
================================================================

Sample: 5 DocFlavor.SERVICE_FORMATTED
----------------------------------------------------------------
1. `Class<?> getRepresentationClass()`: This method returns the representation class of the formatted data.
2. `String toString()`: This method returns a string representation of the object.
3. `boolean equals(Object obj)`: This method compares this doc flavor to the specified object.
4. `int hashCode()`: This method returns a hash code value for the object.
5. `String getMediaType()`: This method returns the MIME type string for this doc flavor.
================================================================

Sample: 6 DocFlavor.STRING
----------------------------------------------------------------
1. `DocFlavor.STRING()` : This method constructs a new String flavor. 
2. `boolean equals(Object o)`: This method compares this String to the specified object. 
3. `int hashCode()`: This method returns a hash code value for the String. 
4. `String toString()`: This method returns the string representation of the String.
5. `Class<?> getClass()`: This method returns the runtime class of this String.
================================================================

Sample: 7 DocFlavor.URL
----------------------------------------------------------------
1. `String getMimeType()`: This method returns the MIME type string corresponding to this flavor.
2. `URL getURL()`: This method returns the URL.
3. `String getURL()`: This method returns the URL as a String.
4. `URL printData()`: This method sends the data to the printer.
5. `void writeTo(OutputStream out) throws IOException`: This method writes a stream of bytes to the output stream.
================================================================

Sample: 8 PrintServiceLookup
----------------------------------------------------------------
1. PrintService[] lookupPrintServices() 
   - Return type: PrintService[]
   
2. PrintService[] lookupMultiDocPrintServices(DocFlavor flavor, AttributeSet attributes)
   - Return type: PrintService[]
   - Parameters: 
     - DocFlavor flavor: the flavor to be supported by the print services
     - AttributeSet attributes: the attributes to be supported by the print services

3. PrintService[] lookupPrintServices(DocFlavor flavor, AttributeSet attributes)
   - Return type: PrintService[]
   - Parameters: 
     - DocFlavor flavor: the flavor to be supported by the print services
     - AttributeSet attributes: the attributes to be supported by the print services

4. PrintService[] lookupStreamPrintServices(String mimeType)
   - Return type: PrintService[]
   - Parameters: 
     - String mimeType: the mime type of the data to be printed

5. MultiDocPrintService[] lookupMultiDocPrintServices(DocFlavor[] flavors, AttributeSet attributes)
   - Return type: MultiDocPrintService[]
   - Parameters: 
     - DocFlavor[] flavors: an array of flavors to be supported by the print services
     - AttributeSet attributes: the attributes to be supported by the print services
================================================================

Sample: 9 ServiceUI
----------------------------------------------------------------
1. `PrintService printDialog(PrintRequestAttributeSet attributes)`: This method displays a dialog that allows the user to select a PrintService. It returns the selected PrintService.
2. `PrintService[] lookupPrintServices()`: This method returns an array of all PrintService objects available in the system.
3. `ServiceUIFactory createFactory(Class serviceClass, String factoryName)`: This method returns a ServiceUIFactory implementation for a specified service class and factory name.
4. `JDialog printDialog(Dialog owner, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, PrintRequestAttributeSet attributes)`: This method displays a dialog at the specified location and allows the user to select a PrintService. It returns the selected PrintService.
5. `PrintService lookupDefaultPrintService()`: This method returns the default PrintService for the system.
================================================================

Sample: 10 ServiceUIFactory
----------------------------------------------------------------
1. `JLabel getUI(PrintService service)`: This method returns a JLabel that represents a service.
2. `JButton getOKButton()`: This method returns a JButton that can be used as an "OK" button.
3. `JButton getCancelButton()`: This method returns a JButton that can be used as a "Cancel" button.
4. `JButton getPreviewButton()`: This method returns a JButton that can be used as a "Preview" button.
5. `JPanel getExtrasPanel(PrintService service)`: This method returns a JPanel that contains extra controls for the specified service.
================================================================

Sample: 11 SimpleDoc
----------------------------------------------------------------
1. `DocFlavor getDocFlavor()`: This method returns the doc flavor associated with the print data.
2. `Doc getDoc()`: This method returns the print data representation object.
3. `PrintJobAttributeSet getAttributes()`: This method returns the printing attributes for this print job.
4. `int getResendDelay()`: This method returns the delay time in milliseconds before resending a print job.
5. `int getCopyCount()`: This method returns the number of copies to be printed.
================================================================

Sample: 12 StreamPrintService
----------------------------------------------------------------
1. `String getServiceName()`: This method returns the name of the print service.
2. `OutputStream getOutputStream()`: This method returns an output stream for this print service.
3. `void dispose()`: This method disposes of this print service.
4. `boolean equals(Object obj)`: This method compares this print service to the specified object.
5. `int hashCode()`: This method returns a hash code value for the print service.
================================================================

Sample: 13 StreamPrintServiceFactory
----------------------------------------------------------------
1. `StreamPrintService[] getPrintServices()`: Returns an array of StreamPrintService objects, one for each printer available to the Java runtime.
   
2. `StreamPrintService createPrinter(StreamPrintServiceFactory factory)` : Creates a new StreamPrintService object using the specified StreamPrintServiceFactory.

3. `StreamPrintService findFactoryOrderByAttribute(StreamPrintServiceFactory[] factories, String attrValue)`: Finds a StreamPrintServiceFactory object in the given array of factories that has the specified attribute value.

4. `StreamPrintService findFactoryOrderByPriority(StreamPrintServiceFactory[] factories)`: Finds a StreamPrintServiceFactory object in the given array of factories based on their priority order.

5. `StreamPrintServiceFactory[] getFactories(StreamPrintService service, DocumentType docFlavor)`: Returns an array of StreamPrintServiceFactory objects that can create StreamPrintServices supporting the specified document type.
================================================================

