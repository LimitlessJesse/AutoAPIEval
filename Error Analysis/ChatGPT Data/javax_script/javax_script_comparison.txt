Sample: 0 AbstractScriptEngine
----------------------------------------------------------------
1. void put(String key, Object value): This method associates the specified value with the specified key in this script engine's bindings.
2. Object get(String key): This method returns the value to which the specified key is mapped in this script engine's bindings.
3. Bindings createBindings(): This method creates a new Bindings backed by the ScriptEngine environment. 
4. void setBindings(Bindings bindings, int scope): This method sets the specified bindings in the specified scope for scripts.
5. List<String> getExtensions(): This method returns a list of filename extensions, which are used to identify scripts.
================================================================

Sample: 1 CompiledScript
----------------------------------------------------------------
1. `Object eval()`: This method evaluates the script.
2. `void eval(Reader reader)`: This method evaluates the script in the context of the ScriptEngine using the specified Reader.
3. `void eval(String script)`: This method evaluates the script in the context of the ScriptEngine using the specified script.
4. `Object getEngine()`: This method returns the engine that was used to compile or evaluate the script.
5. `void setContext(ScriptContext context)`: This method sets the ScriptContext to be used by the compiled script.
================================================================

Sample: 2 ScriptEngineManager
----------------------------------------------------------------
1. `ScriptEngine getEngineByName(String shortName)`: Returns a script engine by its short name.
2. `List<ScriptEngineFactory> getEngineFactories()`: Returns a list of all script engine factories found.
3. `ScriptEngine getEngineByExtension(String extension)`: Returns a script engine by the file extension of a script.
4. `ScriptEngine getEngineByMimeType(String mimeType)`: Returns a script engine by the MIME type of a script.
5. `ScriptEngine getEngineByFileName(String fileName)`: Returns a script engine by the file name of a script.
================================================================

Sample: 3 SimpleBindings
----------------------------------------------------------------
1. `void put(String key, Object value)`: This method associates the specified value with the specified key in this bindings.
2. `Object get(Object key)`: This method returns the value to which the specified key is mapped in this bindings.
3. `void remove(Object key)`: This method removes the mapping for a key from this bindings if it is present.
4. `boolean containsKey(Object key)`: This method returns true if this bindings contains a mapping for the specified key.
5. `int size()`: This method returns the number of key-value mappings in this bindings.
================================================================

Sample: 4 SimpleScriptContext
----------------------------------------------------------------
1. `void setBindings(Bindings bindings, int scope)`: This method sets the specified bindings in the specified scope of the script context.
2. `Bindings getBindings(int scope)`: This method returns the bindings for the specified scope of the script context.
3. `void setAttribute(String name, Object value, int scope)`: This method sets the specified attribute in the specified scope of the script context.
4. `Object getAttribute(String name, int scope)`: This method returns the value of the specified attribute in the specified scope of the script context.
5. `Writer getWriter()`: This method returns the writer for output in the script context.
================================================================

