Sample: 0 IIOMetadata
----------------------------------------------------------------
1. `String getNativeMetadataFormatName()`: This method returns the name of the native metadata format supported by the writer associated with this metadata object.
   
2. `IIOMetadataNode getAsTree(String formatName)`: This method returns an IIOMetadataNode object that represents the metadata in the named format, or null if the specified format is not among the supported formats.

3. `void mergeTree(String formatName, Node root)`: This method merges the given root node into the current metadata tree, calling appendChild as necessary.

4. `void setFromTree(String formatName, Node root)`: This method initializes the current metadata object with the contents of the given tree, taking into account the desired default settings.

5. `void reset()`: This method resets the internal state of the metadata object to its initial state.
================================================================

Sample: 1 IIOMetadataFormatImpl
----------------------------------------------------------------
1. `javax.imageio.metadata.IIOMetadataFormatImpl.Element getChild(String name)`: This method returns the child element with the specified name.
2. `javax.imageio.metadata.IIOMetadataFormatImpl.Element getParent()`: This method returns the parent element of this element.
3. `boolean isCollection()`: This method returns true if this element represents a collection of child elements.
4. `boolean canNodeAppear(String nodeName, javax.imageio.metadata.IIOMetadataNode parent)`: This method returns true if the specified node can appear as a child of the specified parent node.
5. `javax.imageio.metadata.IIOMetadataFormatImpl.Attribute getAttribute(String attributeName)`: This method returns the attribute with the specified name.
================================================================

Sample: 2 IIOMetadataNode
----------------------------------------------------------------
1. `void setUserObject(Object userObject)`: This method sets the user object associated with this node.
2. `Object getUserObject()`: This method returns the user object associated with this node.
3. `void setAttribute(String key, String value)`: This method sets the attribute with the specified key to the specified value.
4. `String getAttribute(String key)`: This method returns the value of the attribute with the specified key.
5. `void appendChild(IIOMetadataNode child)`: This method appends the specified child node to this node.
================================================================

