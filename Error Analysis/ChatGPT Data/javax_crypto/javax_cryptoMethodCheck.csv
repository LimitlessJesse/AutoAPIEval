Sample Number,ClassName,Snippet Number,Method,Exist
0,Cipher,1,"int doFinal(byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset)",True
0,Cipher,2,"void init(int opmode, Key key, AlgorithmParameterSpec params)",True
0,Cipher,3,"byte[] update(byte[] input, int inputOffset, int inputLen)",True
0,Cipher,4,"void init(int opmode, Key key)",True
0,Cipher,5,int getOutputSize(int inputLen),True
1,CipherInputStream,1,int read(),True
1,CipherInputStream,2,int read(byte[] b),True
1,CipherInputStream,3,"int read(byte[] b, int off, int len)",True
1,CipherInputStream,4,long skip(long n),True
1,CipherInputStream,5,int available(),True
2,CipherOutputStream,1,void write(int b),True
2,CipherOutputStream,2,"void write(byte[] b, int off, int len)",True
2,CipherOutputStream,3,void flush(),True
2,CipherOutputStream,4,void close(),True
2,CipherOutputStream,5,void setCipher(Cipher c),False
3,CipherSpi,1,int engineGetBlockSize(),True
3,CipherSpi,2,byte[] engineGetIV(),True
3,CipherSpi,3,int engineGetOutputSize(int inputLen),True
3,CipherSpi,4,int engineGetKeySize(java.security.Key key),False
3,CipherSpi,5,void engineSetMode(String mode),True
4,EncryptedPrivateKeyInfo,1,byte[] getEncryptedData(),True
4,EncryptedPrivateKeyInfo,2,String getAlgName(),True
4,EncryptedPrivateKeyInfo,3,AlgorithmParameters getAlgParameters(),True
4,EncryptedPrivateKeyInfo,4,String getFormat(),False
4,EncryptedPrivateKeyInfo,5,PrivateKey decryptPrivateKey(Key key),False
5,ExemptionMechanism,1,boolean isCryptoAllowed(),False
5,ExemptionMechanism,2,void checkPermission(Permission perm),False
5,ExemptionMechanism,3,String getName(),True
5,ExemptionMechanism,4,void requestExemption(Certificate cert),False
5,ExemptionMechanism,5,boolean isExemptionCertificate(Certificate cert),False
6,ExemptionMechanismSpi,1,byte[] engineGenExemptionBlob(),True
6,ExemptionMechanismSpi,2,"boolean engineExemptionBlobMatches(byte[] which, byte[] blob)",False
6,ExemptionMechanismSpi,3,"void engineInit(boolean forEncryption, AlgorithmParameterSpec params)",False
6,ExemptionMechanismSpi,4,boolean engineIsCryptoAllowed(Key key),False
6,ExemptionMechanismSpi,5,void engineAuthorize(Key key),False
7,KeyAgreement,1,"void doPhase(Key key, boolean lastPhase)",False
7,KeyAgreement,2,Key generateSecret(),False
7,KeyAgreement,3,String getAlgorithm(),True
7,KeyAgreement,4,Provider getProvider(),True
7,KeyAgreement,5,void init(Key key),True
8,KeyAgreementSpi,1,"void engineInit(Key key, SecureRandom random)",True
8,KeyAgreementSpi,2,"void engineDoPhase(Key key, boolean lastPhase)",False
8,KeyAgreementSpi,3,byte[] engineGenerateSecret(),True
8,KeyAgreementSpi,4,"int engineGenerateSecret(byte[] sharedSecret, int offset)",True
8,KeyAgreementSpi,5,SecretKey engineGenerateSecret(String algorithm),True
9,KeyGenerator,1,KeyGenerator getInstance(String algorithm),True
9,KeyGenerator,2,void init(int keysize),True
9,KeyGenerator,3,SecretKey generateKey(),True
9,KeyGenerator,4,String getAlgorithm(),True
9,KeyGenerator,5,Provider getProvider(),True
10,KeyGeneratorSpi,1,byte[] generateKey(),False
10,KeyGeneratorSpi,2,"void init(int keysize, SecureRandom random)",False
10,KeyGeneratorSpi,3,KeyGeneratorSpi clone(),False
10,KeyGeneratorSpi,4,void engineInit(AlgorithmParameterSpec params),False
10,KeyGeneratorSpi,5,SecureRandom getSecureRandom(),False
11,Mac,1,void init(Key key),True
11,Mac,2,void update(byte[] input),True
11,Mac,3,void reset(),True
11,Mac,4,byte[] doFinal(),True
11,Mac,5,int getMacLength(),True
12,MacSpi,1,"void engineInit(Key key, AlgorithmParameterSpec params)",True
12,MacSpi,2,void engineUpdate(byte input),True
12,MacSpi,3,void engineReset(),True
12,MacSpi,4,int engineGetMacLength(),True
12,MacSpi,5,byte[] engineDoFinal(),True
13,NullCipher,1,"void doFinal(byte[] output, int outputOffset)",False
13,NullCipher,2,int getOutputSize(int inputLen),False
13,NullCipher,3,"void init(int opmode, Key key)",False
13,NullCipher,4,"void update(byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset)",False
13,NullCipher,5,"int update(byte[] input, int inputOffset, int inputLen)",False
14,SealedObject,1,Object getObject(),False
14,SealedObject,2,"SealedObject reseal(SealedObject so, Cipher c)",False
14,SealedObject,3,boolean wasSealed(Object sealable),False
14,SealedObject,4,String getAlgorithm(),True
14,SealedObject,5,int getSerializedLength(),False
15,SecretKeyFactory,1,SecretKey generateSecret(KeySpec keySpec),True
15,SecretKeyFactory,2,"SecretKey generateSecret(SecretKey key, Class<?> keySpec)",False
15,SecretKeyFactory,3,"KeySpec getKeySpec(SecretKey key, Class<?> keySpec)",True
15,SecretKeyFactory,4,String getAlgorithm(),True
15,SecretKeyFactory,5,SecretKey translateKey(SecretKey key),True
16,SecretKeyFactorySpi,1,SecretKey engineGenerateSecret(KeySpec keySpec),True
16,SecretKeyFactorySpi,2,"KeySpec engineGetKeySpec(SecretKey key, Class keySpec)",False
16,SecretKeyFactorySpi,3,SecretKey engineTranslateKey(SecretKey key),True
16,SecretKeyFactorySpi,4,byte[] engineGetEncoded(SecretKey key),False
16,SecretKeyFactorySpi,5,"void engineInit(Key key, AlgorithmParameterSpec params, SecureRandom random)",False
