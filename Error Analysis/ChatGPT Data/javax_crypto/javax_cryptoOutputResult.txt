Sample: Cipher_1
----------------------------------------------------------------
stdout:
Encrypted data: �4���# �,�r�G��

================================================================

Sample: Cipher_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Cipher_2.java:8: error: illegal start of expression
        Key key = ...; // Initialize your key
                  ^
./Data/javax_crypto/javaFiles/Cipher_2.java:9: error: illegal start of expression
        AlgorithmParameterSpec params = ...; // Initialize your AlgorithmParameterSpec
                                        ^
2 errors


================================================================

Sample: Cipher_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Cipher_3.java:9: error: cannot find symbol
            cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, "AES"));
                                                 ^
  symbol:   class SecretKeySpec
  location: class Cipher_3
1 error


================================================================

Sample: Cipher_4
----------------------------------------------------------------
================================================================

Sample: Cipher_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Cipher_5.java:6: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
                                          ^
1 error


================================================================

Sample: CipherInputStream_1
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: encryptedFile.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at CipherInputStream_1.main(CipherInputStream_1.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CipherInputStream_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherInputStream_2.java:10: error: cannot find symbol
            while ((bytesRead = cipherInputStream.read(buffer)) != -1) {
                                ^
  symbol:   variable cipherInputStream
  location: class CipherInputStream_2
1 error


================================================================

Sample: CipherInputStream_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherInputStream_3.java:9: error: cannot find symbol
            CipherInputStream cis = new CipherInputStream(fis, cipher);
                                                               ^
  symbol:   variable cipher
  location: class CipherInputStream_3
1 error


================================================================

Sample: CipherInputStream_4
----------------------------------------------------------------
stderr:
java.io.FileNotFoundException: input.txt (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at CipherInputStream_4.main(CipherInputStream_4.java:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CipherInputStream_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherInputStream_5.java:6: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
                                          ^
./Data/javax_crypto/javaFiles/CipherInputStream_5.java:10: error: unreported exception IOException; must be caught or declared to be thrown
        while (cipherInputStream.available() > 0) {
                                          ^
./Data/javax_crypto/javaFiles/CipherInputStream_5.java:11: error: unreported exception IOException; must be caught or declared to be thrown
            int data = cipherInputStream.read();
                                             ^
./Data/javax_crypto/javaFiles/CipherInputStream_5.java:18: error: unreported exception IOException; must be caught or declared to be thrown
        cipherInputStream.close();
                               ^
4 errors


================================================================

Sample: CipherOutputStream_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherOutputStream_1.java:11: error: ';' expected
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
                  ^
1 error


================================================================

Sample: CipherOutputStream_2
----------------------------------------------------------------
stderr:
java.lang.IllegalStateException: Cipher not initialized
	at java.base/javax.crypto.Cipher.getOutputSize(Cipher.java:1021)
	at java.base/javax.crypto.CipherOutputStream.ensureCapacity(CipherOutputStream.java:95)
	at java.base/javax.crypto.CipherOutputStream.write(CipherOutputStream.java:184)
	at CipherOutputStream_2.main(CipherOutputStream_2.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CipherOutputStream_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherOutputStream_3.java:5: error: constructor CipherOutputStream in class CipherOutputStream cannot be applied to given types;
        CipherOutputStream cipherOutputStream = new CipherOutputStream(System.out);
                                                ^
  required: OutputStream
  found:    PrintStream
  reason: CipherOutputStream(OutputStream) has protected access in CipherOutputStream
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: CipherOutputStream_4
----------------------------------------------------------------
stderr:
java.lang.NullPointerException: Cannot invoke "javax.crypto.CipherOutputStream.close()" because "<local1>" is null
	at CipherOutputStream_4.main(CipherOutputStream_4.java:7)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: CipherSpi_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherSpi_1.java:9: error: cannot find symbol
            CipherSpi cipherSpi = cipher.getProvider().getCipher(cipher.getAlgorithm());
                                                      ^
  symbol:   method getCipher(String)
  location: class Provider
./Data/javax_crypto/javaFiles/CipherSpi_1.java:10: error: engineGetBlockSize() has protected access in CipherSpi
            int blockSize = cipherSpi.engineGetBlockSize();
                                     ^
2 errors


================================================================

Sample: CipherSpi_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/CipherSpi_5.java:9: error: MyCipherSpi is not abstract and does not override abstract method engineDoFinal(byte[],int,int,byte[],int) in CipherSpi
    static class MyCipherSpi extends CipherSpi {
           ^
1 error


================================================================

Sample: EncryptedPrivateKeyInfo_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_1.java:5: error: '.class' expected
        EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = new EncryptedPrivateKeyInfo(byte[] encryptedData);
                                                                                             ^
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_1.java:5: error: ';' expected
        EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = new EncryptedPrivateKeyInfo(byte[] encryptedData);
                                                                                                          ^
2 errors


================================================================

Sample: EncryptedPrivateKeyInfo_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_2.java:5: error: no suitable constructor found for EncryptedPrivateKeyInfo(no arguments)
        EncryptedPrivateKeyInfo info = new EncryptedPrivateKeyInfo();
                                       ^
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(String,byte[]) is not applicable
      (actual and formal argument lists differ in length)
    constructor EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(AlgorithmParameters,byte[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: EncryptedPrivateKeyInfo_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/EncryptedPrivateKeyInfo_3.java:8: error: ';' expected
        byte[] encoded = {} // your encrypted private key info bytes here
                           ^
1 error


================================================================

Sample: ExemptionMechanism_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanism_3.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        ExemptionMechanism ex = ExemptionMechanism.getInstance("Test");
                                                              ^
1 error


================================================================

Sample: ExemptionMechanismSpi_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_1.java:5: error: <anonymous ExemptionMechanismSpi_1$1> is not abstract and does not override abstract method engineGenExemptionBlob(byte[],int) in ExemptionMechanismSpi
        ExemptionMechanismSpi spi = new ExemptionMechanismSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/ExemptionMechanismSpi_1.java:13: error: method engineGenExemptionBlob in class ExemptionMechanismSpi cannot be applied to given types;
        byte[] exemptionBlob = spi.engineGenExemptionBlob();
                                  ^
  required: no arguments
  found:    no arguments
  reason: engineGenExemptionBlob() has protected access in ExemptionMechanismSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyAgreement_3
----------------------------------------------------------------
stdout:
Key agreement algorithm: DiffieHellman

================================================================

Sample: KeyAgreement_4
----------------------------------------------------------------
stdout:
Provider: SunJCE

================================================================

Sample: KeyAgreement_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreement_5.java:14: error: unreported exception InvalidKeyException; must be caught or declared to be thrown
            keyAgreement.init(keyPair.getPrivate());
                             ^
1 error


================================================================

Sample: KeyAgreementSpi_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_1.java:9: error: ';' expected
        SecureRandom random = // initialize SecureRandom object
                    ^
1 error


================================================================

Sample: KeyAgreementSpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_3.java:6: error: KeyAgreementSpi is abstract; cannot be instantiated
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi();
                                          ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_3.java:9: error: method engineGenerateSecret in class KeyAgreementSpi cannot be applied to given types;
        byte[] secret = keyAgreementSpi.engineGenerateSecret();
                                       ^
  required: no arguments
  found:    no arguments
  reason: engineGenerateSecret() has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyAgreementSpi_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_4.java:8: error: <anonymous KeyAgreementSpi_4$1> is not abstract and does not override abstract method engineGenerateSecret(String) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_4.java:22: error: method engineGenerateSecret in class KeyAgreementSpi cannot be applied to given types;
        keyAgreementSpi.engineGenerateSecret(sharedSecret, offset);
                       ^
  required: byte[],int
  found:    byte[],int
  reason: engineGenerateSecret(byte[],int) has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyAgreementSpi_5
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/KeyAgreementSpi_5.java:7: error: <anonymous KeyAgreementSpi_5$1> is not abstract and does not override abstract method engineGenerateSecret(String) in KeyAgreementSpi
        KeyAgreementSpi keyAgreementSpi = new KeyAgreementSpi() {
                                                                ^
./Data/javax_crypto/javaFiles/KeyAgreementSpi_5.java:15: error: method engineGenerateSecret in class KeyAgreementSpi cannot be applied to given types;
        SecretKey secretKey = keyAgreementSpi.engineGenerateSecret(algorithm);
                                             ^
  required: String
  found:    String
  reason: engineGenerateSecret(String) has protected access in KeyAgreementSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyGenerator_1
----------------------------------------------------------------
stdout:
KeyGenerator algorithm: AES

================================================================

Sample: KeyGenerator_2
----------------------------------------------------------------
================================================================

Sample: KeyGenerator_3
----------------------------------------------------------------
stdout:
Generated Key: javax.crypto.spec.SecretKeySpec@17aed

================================================================

Sample: KeyGenerator_4
----------------------------------------------------------------
stdout:
Algorithm: AES

================================================================

Sample: KeyGenerator_5
----------------------------------------------------------------
stdout:
Provider: SunJCE version 17

================================================================

Sample: Mac_1
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Mac_1.java:12: error: unreported exception InvalidKeyException; must be caught or declared to be thrown
            mac.init(key);
                    ^
1 error


================================================================

Sample: Mac_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/Mac_2.java:18: error: package javax.xml.bind does not exist
            System.out.println("MAC result: " + javax.xml.bind.DatatypeConverter.printHexBinary(result));
                                                              ^
1 error


================================================================

Sample: Mac_3
----------------------------------------------------------------
stdout:
MAC object reset successfully.

================================================================

Sample: Mac_4
----------------------------------------------------------------
stdout:
MAC result: E��b�Fq�k)�{�����n����

================================================================

Sample: Mac_5
----------------------------------------------------------------
stdout:
MAC Length: 32

================================================================

Sample: MacSpi_2
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/MacSpi_2.java:6: error: <anonymous MacSpi_2$1> is not abstract and does not override abstract method engineReset() in MacSpi
        MacSpi macSpi = new MacSpi() {
                                     ^
./Data/javax_crypto/javaFiles/MacSpi_2.java:8: error: engineUpdate(byte) in <anonymous MacSpi_2$1> cannot override engineUpdate(byte) in MacSpi
            protected int engineUpdate(byte input) {
                          ^
  return type int is not compatible with void
./Data/javax_crypto/javaFiles/MacSpi_2.java:7: error: method does not override or implement a method from a supertype
            @Override
            ^
3 errors


================================================================

Sample: MacSpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/MacSpi_3.java:5: error: illegal start of expression
        void engineReset() {
        ^
./Data/javax_crypto/javaFiles/MacSpi_3.java:5: error: ';' expected
        void engineReset() {
                        ^
2 errors


================================================================

Sample: SealedObject_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SealedObject_4.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        SealedObject sealedObject = new SealedObject("Hello", null);
                                    ^
1 error


================================================================

Sample: SecretKeyFactory_1
----------------------------------------------------------------
stdout:
Generated secret key: com.sun.crypto.provider.PBKDF2KeyImpl@f00a7301

================================================================

Sample: SecretKeyFactory_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SecretKeyFactory_3.java:21: error: exception InvalidKeyException is never thrown in body of corresponding try statement
        } catch (NoSuchAlgorithmException | InvalidKeyException e) {
                                            ^
./Data/javax_crypto/javaFiles/SecretKeyFactory_3.java:19: error: unreported exception InvalidKeySpecException; must be caught or declared to be thrown
            KeySpec keySpec = factory.getKeySpec(key, keySpecClass);
                                                ^
2 errors


================================================================

Sample: SecretKeyFactory_4
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SecretKeyFactory_4.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("AES");
                                                                  ^
1 error


================================================================

Sample: SecretKeyFactory_5
----------------------------------------------------------------
stderr:
java.security.NoSuchAlgorithmException: AES SecretKeyFactory not available
	at java.base/javax.crypto.SecretKeyFactory.<init>(SecretKeyFactory.java:118)
	at java.base/javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:164)
	at SecretKeyFactory_5.main(SecretKeyFactory_5.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.execute(Main.java:419)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.run(Main.java:192)
	at jdk.compiler/com.sun.tools.javac.launcher.Main.main(Main.java:132)

================================================================

Sample: SecretKeyFactorySpi_3
----------------------------------------------------------------
output:
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_3.java:9: error: <anonymous SecretKeyFactorySpi_3$1> is not abstract and does not override abstract method engineGetKeySpec(SecretKey,Class<?>) in SecretKeyFactorySpi
            SecretKeyFactorySpi factory = new SecretKeyFactorySpi() {
                                                                    ^
./Data/javax_crypto/javaFiles/SecretKeyFactorySpi_3.java:22: error: engineTranslateKey(SecretKey) has protected access in SecretKeyFactorySpi
            SecretKey translatedKey = factory.engineTranslateKey(originalKey);
                                             ^
2 errors


================================================================

