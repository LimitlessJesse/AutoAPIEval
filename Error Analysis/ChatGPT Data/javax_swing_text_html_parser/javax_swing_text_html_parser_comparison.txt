Sample: 0 AttributeList
----------------------------------------------------------------
1. `AttributeList getNext()`: This method returns the next AttributeList in the list.
2. `String getName()`: This method returns the name of the attribute.
3. `String getValue()`: This method returns the value of the attribute.
4. `int getType()`: This method returns the type of the attribute.
5. `AttributeList getNextAttribute()`: This method returns the next AttributeList that represents the next attribute in the list.
================================================================

Sample: 1 ContentModel
----------------------------------------------------------------
1. `ContentModel getOmitted()`: This method returns the content model specifying elements that are omitted in the content model.
2. `Element getElement()`: This method returns the element that the content model belongs to.
3. `ContentModel[] getFlow()`: This method returns an array of content models representing valid content following this model.
4. `ContentModel[] getPCData()`: This method returns an array of content models representing parsed character data.
5. `ContentModel[] getMixed()` : This method returns an array of content models representing mixed content.
================================================================

Sample: 2 DocumentParser
----------------------------------------------------------------
1. `void handleComment(char[] text, int pos)`: This method handles a comment encountered during parsing.
2. `void handleStartTag(TagElement tag)`: This method handles the start tag of an element encountered during parsing.
3. `void handleEndTag(TagElement tag)`: This method handles the end tag of an element encountered during parsing.
4. `void handleSimpleTag(TagElement tag, MutableAttributeSet attr)`: This method handles a simple tag element encountered during parsing.
5. `void handleError(int pos, String errorMsg)`: This method handles an error encountered during parsing.
================================================================

Sample: 3 DTD
----------------------------------------------------------------
1. `boolean elementExists(String elementName)`: This method checks if an element with the specified name exists in the DTD.
2. `boolean attributeExists(String elementName, String attributeName)`: This method checks if an attribute with the specified name exists for the given element in the DTD.
3. `void addElement(String elementName)`: This method adds a new element with the specified name to the DTD.
4. `void addAttribute(String elementName, String attributeName, int type)`: This method adds a new attribute with the specified name and type to the given element in the DTD.
5. `void removeElement(String elementName)`: This method removes the element with the specified name from the DTD.
================================================================

Sample: 4 Element
----------------------------------------------------------------
1. `AttributeListIterator next()`: This method returns the next AttributeList in the iteration.
2. `InputForm getForm()`: This method returns the InputForm associated with this element.
3. `String getName()`: This method returns the name of the element.
4. `ContentModel getContent()`: This method returns the ContentModel associated with this element.
5. `boolean isEmpty()`: This method returns true if the element is empty.
================================================================

Sample: 5 Entity
----------------------------------------------------------------
1. `int size()`: This method returns the number of entities in the entity array.
2. `Entity getElement(String name)`: This method returns the entity with the specified name.
3. `Enumeration<String> getElements()`: This method returns an enumeration of all the entity names.
4. `void addTagElement(String name, char tag)`: This method adds a new entity with the specified name and tag.
5. `String mapNameToCharacter(String name)`: This method returns the mapped character for the specified entity name.
================================================================

Sample: 6 Parser
----------------------------------------------------------------
1. `void parse(Reader reader, ContentHandler callback, boolean ignoreCharSet)`: This method parses the given input Reader and calls methods on the specified ContentHandler.
2. `DTD parseDTDMarkup(Reader reader, String filename, int lineNumber)`: This method parses the given DTD data from the Reader and returns a DTD object.
3. `void parse(Reader reader, ContentHandler callback)`: This method parses the given input Reader and calls methods on the specified ContentHandler without ignoring character set.
4. `void parse(InputSource input, ContentHandler callback)`: This method parses the given InputSource and calls methods on the specified ContentHandler.
5. `TagElement tag`: This method returns the TagElement representing the current tag being processed by the parser.
================================================================

Sample: 7 ParserDelegator
----------------------------------------------------------------
1. `void handleSimpleTag(HTML.Tag t, MutableAttributeSet a, int pos)`: This method handles a simple HTML tag.
2. `void handleStartTag(HTML.Tag t, MutableAttributeSet a, int pos)`: This method handles the start of an HTML tag.
3. `void handleEndTag(HTML.Tag t, int pos)`: This method handles the end of an HTML tag.
4. `void handleComment(char[] data, int pos)`: This method handles an HTML comment.
5. `void handleError(String errorMsg, int pos)`: This method handles an error encountered during parsing.
================================================================

Sample: 8 TagElement
----------------------------------------------------------------
1. `javax.swing.text.html.parser.Element getElement()`: This method returns the Element associated with this TagElement.
2. `AttributeList getAttributes()`: This method returns the AttributeList associated with this TagElement.
3. `javax.swing.text.html.parser.ContentModel getContent()`: This method returns the ContentModel associated with this TagElement.
4. `boolean breaksFlow()`: This method returns true if this TagElement is considered a break in the flow of the document.
5. `boolean isEmpty()`: This method returns true if this TagElement is considered an empty element.
================================================================

