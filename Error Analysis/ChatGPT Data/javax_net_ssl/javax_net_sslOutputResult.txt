Sample: ExtendedSSLSession_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/ExtendedSSLSession_4.java:5: error: illegal start of expression
        ExtendedSSLSession sslSession = ... // obtain ExtendedSSLSession object
                                        ^
1 error


================================================================

Sample: ExtendedSSLSession_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/ExtendedSSLSession_5.java:5: error: <anonymous ExtendedSSLSession_5$1> is not abstract and does not override abstract method getLocalSupportedSignatureAlgorithms() in ExtendedSSLSession
        ExtendedSSLSession session = new ExtendedSSLSession() {
                                                              ^
1 error


================================================================

Sample: HandshakeCompletedEvent_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.SSLSocket.addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)" because "<local1>" is null
	at HandshakeCompletedEvent_1.main(HandshakeCompletedEvent_1.java:9)

================================================================

Sample: HandshakeCompletedEvent_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: null source
	at java.base/java.util.EventObject.<init>(EventObject.java:57)
	at java.base/javax.net.ssl.HandshakeCompletedEvent.<init>(HandshakeCompletedEvent.java:65)
	at HandshakeCompletedEvent_2.main(HandshakeCompletedEvent_2.java:6)

================================================================

Sample: HandshakeCompletedEvent_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.HandshakeCompletedEvent.getLocalCertificates()" because "<local1>" is null
	at HandshakeCompletedEvent_3.main(HandshakeCompletedEvent_3.java:7)

================================================================

Sample: HandshakeCompletedEvent_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/HandshakeCompletedEvent_4.java:7: error: unreported exception SSLPeerUnverifiedException; must be caught or declared to be thrown
        Certificate[] certificates = event.getPeerCertificates();
                                                              ^
1 error


================================================================

Sample: HttpsURLConnection_3
----------------------------------------------------------------
stdout:
Cipher Suite: TLS_AES_256_GCM_SHA384

================================================================

Sample: HttpsURLConnection_4
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.HttpsURLConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)" because "<local1>" is null
	at HttpsURLConnection_4.main(HttpsURLConnection_4.java:16)

================================================================

Sample: HttpsURLConnection_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)" because "<local1>" is null
	at HttpsURLConnection_5.main(HttpsURLConnection_5.java:10)

================================================================

Sample: KeyManagerFactory_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/KeyManagerFactory_2.java:7: error: no suitable method found for init(no arguments)
        factory.init(/*initialize with your keystore and password*/);
               ^
    method KeyManagerFactory.init(KeyStore,char[]) is not applicable
      (actual and formal argument lists differ in length)
    method KeyManagerFactory.init(ManagerFactoryParameters) is not applicable
      (actual and formal argument lists differ in length)
./Data/javax_net_ssl/javaFiles/KeyManagerFactory_2.java:11: error: cannot find symbol
        for (KeyManager keyManager : keyManager) {
                                     ^
  symbol:   variable keyManager
  location: class KeyManagerFactory_2
2 errors


================================================================

Sample: KeyManagerFactory_3
----------------------------------------------------------------
stdout:
SunX509

================================================================

Sample: KeyManagerFactory_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/KeyManagerFactory_4.java:8: error: '.class' expected
        char[] password = // initialize password here
               ^
./Data/javax_net_ssl/javaFiles/KeyManagerFactory_4.java:9: error: illegal start of expression
        try {
        ^
2 errors


================================================================

Sample: KeyManagerFactory_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/KeyManagerFactory_5.java:6: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance("SunX509");
                                                                           ^
./Data/javax_net_ssl/javaFiles/KeyManagerFactory_5.java:8: error: unreported exception InvalidAlgorithmParameterException; must be caught or declared to be thrown
        keyManagerFactory.init(spec);
                              ^
2 errors


================================================================

Sample: KeyManagerFactorySpi_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/KeyManagerFactorySpi_2.java:10: error: <anonymous KeyManagerFactorySpi_2$1> is not abstract and does not override abstract method engineGetKeyManagers() in KeyManagerFactorySpi
        KeyManagerFactorySpi keyManagerFactorySpi = new KeyManagerFactorySpi() {
                                                                               ^
./Data/javax_net_ssl/javaFiles/KeyManagerFactorySpi_2.java:17: error: method engineInit in class KeyManagerFactorySpi cannot be applied to given types;
        keyManagerFactorySpi.engineInit(ks, password);
                            ^
  required: KeyStore,char[]
  found:    KeyStore,char[]
  reason: engineInit(KeyStore,char[]) has protected access in KeyManagerFactorySpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: KeyManagerFactorySpi_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/KeyManagerFactorySpi_4.java:6: error: <anonymous KeyManagerFactorySpi_4$1> is not abstract and does not override abstract method engineGetKeyManagers() in KeyManagerFactorySpi
        KeyManagerFactorySpi keyManagerFactorySpi = new KeyManagerFactorySpi() {
                                                                               ^
1 error


================================================================

Sample: SNIHostName_1
----------------------------------------------------------------
stdout:
ASCII Name: www.example.com

================================================================

Sample: SNIMatcher_1
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SNIMatcher_1.java:10: error: cannot find symbol
                if (serverName.getType() == SNIHostName.TYPE) {
                                                       ^
  symbol:   variable TYPE
  location: class SNIHostName
1 error


================================================================

Sample: SNIServerName_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SNIServerName_2.java:5: error: SNIServerName is abstract; cannot be instantiated
        SNIServerName serverName = new SNIServerName((short) 0, new byte[]{0x01, 0x02, 0x03});
                                   ^
1 error


================================================================

Sample: SNIServerName_3
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SNIServerName_3.java:5: error: constructor SNIServerName in class SNIServerName cannot be applied to given types;
        SNIServerName serverName = new SNIServerName() {
                                   ^
  required: int,byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_net_ssl/javaFiles/SNIServerName_3.java:7: error: getType() in <anonymous SNIServerName_3$1> cannot override getType() in SNIServerName
            public int getType() {
                       ^
  overridden method is final
./Data/javax_net_ssl/javaFiles/SNIServerName_3.java:12: error: getEncoded() in <anonymous SNIServerName_3$1> cannot override getEncoded() in SNIServerName
            public byte[] getEncoded() {
                          ^
  overridden method is final
3 errors


================================================================

Sample: SNIServerName_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SNIServerName_4.java:5: error: constructor SNIServerName in class SNIServerName cannot be applied to given types;
        SNIServerName sniServerName = new SNIServerName() {
                                      ^
  required: int,byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_net_ssl/javaFiles/SNIServerName_4.java:7: error: getType() in <anonymous SNIServerName_4$1> cannot override getType() in SNIServerName
            public int getType() {
                       ^
  overridden method is final
./Data/javax_net_ssl/javaFiles/SNIServerName_4.java:12: error: getEncoded() in <anonymous SNIServerName_4$1> cannot override getEncoded() in SNIServerName
            public byte[] getEncoded() {
                          ^
  overridden method is final
3 errors


================================================================

Sample: SNIServerName_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SNIServerName_5.java:5: error: constructor SNIServerName in class SNIServerName cannot be applied to given types;
        SNIServerName serverName1 = new SNIServerName() {
                                    ^
  required: int,byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_net_ssl/javaFiles/SNIServerName_5.java:7: error: getType() in <anonymous SNIServerName_5$1> cannot override getType() in SNIServerName
            public int getType() {
                       ^
  overridden method is final
./Data/javax_net_ssl/javaFiles/SNIServerName_5.java:12: error: getEncoded() in <anonymous SNIServerName_5$1> cannot override getEncoded() in SNIServerName
            public byte[] getEncoded() {
                          ^
  overridden method is final
./Data/javax_net_ssl/javaFiles/SNIServerName_5.java:29: error: constructor SNIServerName in class SNIServerName cannot be applied to given types;
        SNIServerName serverName2 = new SNIServerName() {
                                    ^
  required: int,byte[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
./Data/javax_net_ssl/javaFiles/SNIServerName_5.java:31: error: getType() in <anonymous SNIServerName_5$2> cannot override getType() in SNIServerName
            public int getType() {
                       ^
  overridden method is final
./Data/javax_net_ssl/javaFiles/SNIServerName_5.java:36: error: getEncoded() in <anonymous SNIServerName_5$2> cannot override getEncoded() in SNIServerName
            public byte[] getEncoded() {
                          ^
  overridden method is final
6 errors


================================================================

Sample: SSLContext_1
----------------------------------------------------------------
stdout:
Supported Cipher Suites: TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV
Supported Protocols: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1, SSLv3, SSLv2Hello

================================================================

Sample: SSLContext_3
----------------------------------------------------------------
stdout:
SSLEngine created successfully

================================================================

Sample: SSLContext_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLContext_4.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        SSLContext sslContext = SSLContext.getDefault();
                                                     ^
1 error


================================================================

Sample: SSLContextSpi_3
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLContextSpi_3.java:19: error: <anonymous SSLContextSpi_3$1> is not abstract and does not override abstract method engineGetClientSessionContext() in SSLContextSpi
            SSLContextSpi engine = new SSLContextSpi() {
                                                       ^
./Data/javax_net_ssl/javaFiles/SSLContextSpi_3.java:29: error: engineInit(KeyManager[],TrustManager[],SecureRandom) has protected access in SSLContextSpi
            engine.engineInit(keyManagers, trustManagers, random);
                  ^
2 errors


================================================================

Sample: SSLContextSpi_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLContextSpi_4.java:8: error: cannot find symbol
        SSLContextSpi spi = context.getProvider().createContext("TLS", null);
                                                 ^
  symbol:   method createContext(String,<null>)
  location: class Provider
./Data/javax_net_ssl/javaFiles/SSLContextSpi_4.java:9: error: method engineCreateSSLEngine in class SSLContextSpi cannot be applied to given types;
        SSLEngine engine = spi.engineCreateSSLEngine();
                              ^
  required: no arguments
  found:    no arguments
  reason: engineCreateSSLEngine() has protected access in SSLContextSpi
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: SSLEngine_1
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLEngine_1.java:6: error: cannot find symbol
        SSLEngine sslEngine = SSLEngine.getDefault();
                                       ^
  symbol:   method getDefault()
  location: class SSLEngine
1 error


================================================================

Sample: SSLEngine_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLEngine_2.java:5: error: cannot find symbol
        SSLEngine engine = SSLEngine.getInstance("TLS");
                                    ^
  symbol:   method getInstance(String)
  location: class SSLEngine
1 error


================================================================

Sample: SSLEngine_3
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLEngine_3.java:6: error: unreported exception SSLException; must be caught or declared to be thrown
        sslEngine.closeInbound();
                              ^
1 error


================================================================

Sample: SSLEngine_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLEngine_5.java:5: error: cannot find symbol
        SSLEngine sslEngine = SSLEngine.getInstance("TLS");
                                       ^
  symbol:   method getInstance(String)
  location: class SSLEngine
1 error


================================================================

Sample: SSLEngineResult_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLEngineResult_2.java:6: error: cannot find symbol
        SSLEngineResult.HandshakeStatus handshakeStatus = sslEngineResult.getHandshakeStatus();
                                                          ^
  symbol:   variable sslEngineResult
  location: class SSLEngineResult_2
1 error


================================================================

Sample: SSLEngineResult_5
----------------------------------------------------------------
stdout:
Bytes Produced: 20

================================================================

Sample: SSLParameters_1
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot read the array length because "<local3>" is null
	at SSLParameters_1.main(SSLParameters_1.java:9)

================================================================

Sample: SSLParameters_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot read the array length because "<local3>" is null
	at SSLParameters_2.main(SSLParameters_2.java:7)

================================================================

Sample: SSLParameters_3
----------------------------------------------------------------
stdout:
false

================================================================

Sample: SSLParameters_4
----------------------------------------------------------------
stdout:
Want client authentication: false

================================================================

Sample: SSLServerSocket_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLServerSocket_2.java:7: error: variable sslServerSocket might not have been initialized
        String[] supportedCipherSuites = sslServerSocket.getSupportedCipherSuites();
                                         ^
1 error


================================================================

Sample: SSLServerSocket_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.SSLServerSocket.getUseClientMode()" because "<local1>" is null
	at SSLServerSocket_3.main(SSLServerSocket_3.java:6)

================================================================

Sample: SSLServerSocket_4
----------------------------------------------------------------
stdout:
WantClientAuth set to true

================================================================

Sample: SSLServerSocket_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.SSLServerSocket.setNeedClientAuth(boolean)" because "<local1>" is null
	at SSLServerSocket_5.main(SSLServerSocket_5.java:7)

================================================================

Sample: SSLServerSocketFactory_4
----------------------------------------------------------------
stdout:
TLS_AES_256_GCM_SHA384
TLS_AES_128_GCM_SHA256
TLS_CHACHA20_POLY1305_SHA256
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
TLS_DHE_RSA_WITH_AES_256_CBC_SHA
TLS_DHE_DSS_WITH_AES_256_CBC_SHA
TLS_DHE_RSA_WITH_AES_128_CBC_SHA
TLS_DHE_DSS_WITH_AES_128_CBC_SHA
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
TLS_RSA_WITH_AES_256_GCM_SHA384
TLS_RSA_WITH_AES_128_GCM_SHA256
TLS_RSA_WITH_AES_256_CBC_SHA256
TLS_RSA_WITH_AES_128_CBC_SHA256
TLS_RSA_WITH_AES_256_CBC_SHA
TLS_RSA_WITH_AES_128_CBC_SHA
TLS_EMPTY_RENEGOTIATION_INFO_SCSV

================================================================

Sample: SSLServerSocketFactory_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLServerSocketFactory_5.java:5: error: cannot find symbol
        String[] supportedCipherSuites = SSLServerSocketFactory.getDefault().getSupportedCipherSuites();
                                                                            ^
  symbol:   method getSupportedCipherSuites()
  location: class ServerSocketFactory
1 error


================================================================

Sample: SSLSessionBindingEvent_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: null source
	at java.base/java.util.EventObject.<init>(EventObject.java:57)
	at java.base/javax.net.ssl.SSLSessionBindingEvent.<init>(SSLSessionBindingEvent.java:69)
	at SSLSessionBindingEvent_2.main(SSLSessionBindingEvent_2.java:5)

================================================================

Sample: SSLSocket_1
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLSocket_1.java:5: error: <anonymous SSLSocket_1$1> is not abstract and does not override abstract method getEnableSessionCreation() in SSLSocket
        SSLSocket socket = new SSLSocket() {
                                           ^
1 error


================================================================

Sample: SSLSocket_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "javax.net.ssl.SSLSocket.getEnableSessionCreation()" because "<local1>" is null
	at SSLSocket_3.main(SSLSocket_3.java:6)

================================================================

Sample: SSLSocket_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLSocket_4.java:5: error: illegal start of expression
        SSLSocket sslSocket = ...; // Initialize your SSLSocket here
                              ^
1 error


================================================================

Sample: SSLSocket_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/SSLSocket_5.java:5: error: cannot find symbol
        SSLSocket sslSocket = (SSLSocket) socket;
                                          ^
  symbol:   variable socket
  location: class SSLSocket_5
1 error


================================================================

Sample: SSLSocketFactory_5
----------------------------------------------------------------
stdout:
Error creating SSL Socket: Underlying socket is not connected

================================================================

Sample: TrustManagerFactory_1
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/TrustManagerFactory_1.java:8: error: reference to init is ambiguous
            trustManagerFactory.init(null);
                               ^
  both method init(KeyStore) in TrustManagerFactory and method init(ManagerFactoryParameters) in TrustManagerFactory match
1 error


================================================================

Sample: TrustManagerFactory_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/TrustManagerFactory_2.java:5: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance("X509");
                                                                                 ^
1 error


================================================================

Sample: TrustManagerFactory_3
----------------------------------------------------------------
================================================================

Sample: TrustManagerFactory_5
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/TrustManagerFactory_5.java:6: error: unreported exception NoSuchAlgorithmException; must be caught or declared to be thrown
        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance("SunX509");
                                                                                 ^
./Data/javax_net_ssl/javaFiles/TrustManagerFactory_5.java:7: error: unreported exception KeyStoreException; must be caught or declared to be thrown
        KeyStore ks = KeyStore.getInstance("JKS");
                                          ^
./Data/javax_net_ssl/javaFiles/TrustManagerFactory_5.java:8: error: unreported exception KeyStoreException; must be caught or declared to be thrown
        trustManagerFactory.init(ks);
                                ^
3 errors


================================================================

Sample: TrustManagerFactorySpi_1
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_1.java:6: error: <anonymous TrustManagerFactorySpi_1$1> is not abstract and does not override abstract method engineGetTrustManagers() in TrustManagerFactorySpi
        TrustManagerFactorySpi trustManagerFactorySpi = new TrustManagerFactorySpi() {
                                                                                     ^
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_1.java:14: error: no suitable method found for engineInit(<anonymous ManagerFactoryParameters>)
        trustManagerFactorySpi.engineInit(new ManagerFactoryParameters() {
                              ^
    method TrustManagerFactorySpi.engineInit(ManagerFactoryParameters) is not applicable
      (engineInit(ManagerFactoryParameters) has protected access in TrustManagerFactorySpi)
    method TrustManagerFactorySpi.engineInit(KeyStore) is not applicable
      (argument mismatch; <anonymous ManagerFactoryParameters> cannot be converted to KeyStore)
2 errors


================================================================

Sample: TrustManagerFactorySpi_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_2.java:6: error: <anonymous TrustManagerFactorySpi_2$1> is not abstract and does not override abstract method engineInit(ManagerFactoryParameters) in TrustManagerFactorySpi
        TrustManagerFactorySpi trustManagerFactorySpi = new TrustManagerFactorySpi() {
                                                                                     ^
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_2.java:13: error: engineGetTrustManagers() has protected access in TrustManagerFactorySpi
        TrustManager[] trustManagers = trustManagerFactorySpi.engineGetTrustManagers();
                                                             ^
2 errors


================================================================

Sample: TrustManagerFactorySpi_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_4.java:7: error: <anonymous TrustManagerFactorySpi_4$1> is not abstract and does not override abstract method engineGetTrustManagers() in TrustManagerFactorySpi
        TrustManagerFactorySpi trustManagerFactorySpi = new TrustManagerFactorySpi() {
                                                                                     ^
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_4.java:9: error: engineInit(KeyStore) in <anonymous TrustManagerFactorySpi_4$1> cannot override engineInit(KeyStore) in TrustManagerFactorySpi
            protected void engineInit(KeyStore ks) throws Exception {
                           ^
  overridden method does not throw Exception
./Data/javax_net_ssl/javaFiles/TrustManagerFactorySpi_4.java:17: error: no suitable method found for engineInit(<null>)
            trustManagerFactorySpi.engineInit(null);
                                  ^
    method TrustManagerFactorySpi.engineInit(KeyStore) is not applicable
      (engineInit(KeyStore) has protected access in TrustManagerFactorySpi)
    method TrustManagerFactorySpi.engineInit(ManagerFactoryParameters) is not applicable
      (engineInit(ManagerFactoryParameters) has protected access in TrustManagerFactorySpi)
3 errors


================================================================

Sample: X509ExtendedTrustManager_1
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_1.java:7: error: <anonymous X509ExtendedTrustManager_1$1> is not abstract and does not override abstract method checkServerTrusted(X509Certificate[],String,SSLEngine) in X509ExtendedTrustManager
        X509ExtendedTrustManager trustManager = new X509ExtendedTrustManager() {
                                                                               ^
1 error


================================================================

Sample: X509ExtendedTrustManager_2
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_2.java:1: error: cannot find symbol
import javax.net.ssl.X509Certificate;
                    ^
  symbol:   class X509Certificate
  location: package javax.net.ssl
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_2.java:11: error: cannot find symbol
    public void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket) {
                                   ^
  symbol:   class X509Certificate
  location: class X509ExtendedTrustManager_2
2 errors


================================================================

Sample: X509ExtendedTrustManager_3
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_3.java:1: error: cannot find symbol
import javax.net.ssl.X509Certificate;
                    ^
  symbol:   class X509Certificate
  location: package javax.net.ssl
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_3.java:10: error: cannot find symbol
    public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) {
                                   ^
  symbol:   class X509Certificate
  location: class X509ExtendedTrustManager_3
2 errors


================================================================

Sample: X509ExtendedTrustManager_4
----------------------------------------------------------------
output:
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_4.java:1: error: cannot find symbol
import javax.net.ssl.X509Certificate;
                    ^
  symbol:   class X509Certificate
  location: package javax.net.ssl
./Data/javax_net_ssl/javaFiles/X509ExtendedTrustManager_4.java:10: error: cannot find symbol
    public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine) {
                                   ^
  symbol:   class X509Certificate
  location: class X509ExtendedTrustManager_4
2 errors


================================================================

