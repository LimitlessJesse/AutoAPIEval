Sample: KerberosKey_2
----------------------------------------------------------------
output:
./Data/javax_security_auth_kerberos/javaFiles/KerberosKey_2.java:6: error: incompatible types: byte[] cannot be converted to KerberosPrincipal
        KerberosKey key = new KerberosKey(new byte[]{1, 2, 3}, 1, 1);
                                          ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: KerberosPrincipal_1
----------------------------------------------------------------
stdout:
Principal name: username@REALM

================================================================

Sample: KerberosPrincipal_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.IllegalArgumentException: KrbException: Cannot locate default realm
	at java.security.jgss/javax.security.auth.kerberos.KerberosPrincipal.<init>(KerberosPrincipal.java:199)
	at java.security.jgss/javax.security.auth.kerberos.KerberosPrincipal.<init>(KerberosPrincipal.java:141)
	at KerberosPrincipal_2.main(KerberosPrincipal_2.java:6)

================================================================

Sample: KerberosPrincipal_3
----------------------------------------------------------------
stdout:
Hash Code of KerberosPrincipal: 1731402373

================================================================

Sample: KerberosPrincipal_4
----------------------------------------------------------------
stdout:
username@REALM

================================================================

Sample: KerberosTicket_2
----------------------------------------------------------------
output:
./Data/javax_security_auth_kerberos/javaFiles/KerberosTicket_2.java:7: error: cannot find symbol
        KerberosPrincipal client = kerberosTicket.getClient();
                                   ^
  symbol:   variable kerberosTicket
  location: class KerberosTicket_2
1 error


================================================================

Sample: KerberosTicket_3
----------------------------------------------------------------
output:
./Data/javax_security_auth_kerberos/javaFiles/KerberosTicket_3.java:6: error: constructor KerberosTicket in class KerberosTicket cannot be applied to given types;
        KerberosTicket ticket = new KerberosTicket(new byte[]{}, new KerberosPrincipal("server"));
                                ^
  required: byte[],KerberosPrincipal,KerberosPrincipal,byte[],int,boolean[],Date,Date,Date,Date,InetAddress[]
  found:    byte[],KerberosPrincipal
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: KerberosTicket_4
----------------------------------------------------------------
output:
./Data/javax_security_auth_kerberos/javaFiles/KerberosTicket_4.java:5: error: constructor KerberosTicket in class KerberosTicket cannot be applied to given types;
        KerberosTicket ticket = new KerberosTicket();
                                ^
  required: byte[],KerberosPrincipal,KerberosPrincipal,byte[],int,boolean[],Date,Date,Date,Date,InetAddress[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: KerberosTicket_5
----------------------------------------------------------------
output:
./Data/javax_security_auth_kerberos/javaFiles/KerberosTicket_5.java:5: error: constructor KerberosTicket in class KerberosTicket cannot be applied to given types;
        KerberosTicket ticket = new KerberosTicket();
                                ^
  required: byte[],KerberosPrincipal,KerberosPrincipal,byte[],int,boolean[],Date,Date,Date,Date,InetAddress[]
  found:    no arguments
  reason: actual and formal argument lists differ in length
1 error


================================================================

Sample: KeyTab_1
----------------------------------------------------------------
================================================================

Sample: ServicePermission_1
----------------------------------------------------------------
stdout:
Permission implies: true

================================================================

Sample: ServicePermission_2
----------------------------------------------------------------
stdout:
Actions: initiate,accept

================================================================

