Sample: 0 Activatable
----------------------------------------------------------------
1. `Remote obj`: Returns the remote reference of the activatable remote object.
2. `ActivationDesc getActivationDesc()`: Returns the activation descriptor for the remote object.
3. `ActivationID getID()`: Returns the activation id for the remote object.
4. `void inactiveObject(ActivationID id)`: Deactivates the remote object with the specified activation id.
5. `void activeObject(ActivationID id, MarshalledObject obj)`: Activates the remote object with the specified activation id and parameters.
================================================================

Sample: 1 ActivationDesc
----------------------------------------------------------------
1. `ActivationGroupID getGroupID()`: Returns the activation group identifier associated with this activation descriptor.
2. `ActivationGroupDesc getGroupDesc()`: Returns the activation group descriptor associated with this activation descriptor.
3. `String getClassName()`: Returns the fully-qualified class name of the object to be activated.
4. `MarshalledObject getData()`: Returns the marshalled object that specifies the object's initialization data.
5. `ActivationSystem getSystem()`: Returns the activation system for this remote object activation.
================================================================

Sample: 2 ActivationGroup
----------------------------------------------------------------
1. `ActivationGroupDesc setActivationGroupDesc(ActivationGroupDesc desc)`: This method sets the activation group descriptor for the group.
2. `ActivationGroupDesc getActivationGroupDesc()`: This method returns the activation group descriptor for the group.
3. `ActivationGroupID getActivationGroupID()`: This method returns the activation group identifier for the group.
4. `boolean inactiveObject(ActivationID id)`: This method requests that the object with the specified identifier be deactivated.
5. `void activeObject(ActivationID id, Remote obj)`: This method requests activation group to activate object with the specified identifier and remote object.
================================================================

Sample: 3 ActivationGroup_Stub
----------------------------------------------------------------
1. `void activeObject(ActivationID id, Remote obj, boolean restart)` - Activates the object associated with the specified ActivationID.
2. `ActivationDesc createDesc(ActivationID id, MarshalledObject obj)` - Creates an ActivationDesc for the specified ActivationID and MarshalledObject.
3. `void inactiveObject(ActivationID id)` - Deactivates the object associated with the specified ActivationID.
4. `MarshalledObject newInstance(ActivationID id, ActivationDesc desc)` - Creates a new instance of the object specified by the ActivationDesc and ActivationID.
5. `boolean inactiveGroup()` - Deactivates the ActivationGroup.
================================================================

Sample: 4 ActivationGroupDesc
----------------------------------------------------------------
1. `ActivationGroupID getGroupID()`: return type - ActivationGroupID, parameters - none
2. `Properties getCommandEnvironment()`: return type - Properties, parameters - none
3. `String getClassName()`: return type - String, parameters - none
4. `ActivationDesc getActivationDesc()`: return type - ActivationDesc, parameters - none
5. `String getLocation()`: return type - String, parameters - none
================================================================

Sample: 5 ActivationGroupDesc.CommandEnvironment
----------------------------------------------------------------
1. `String getCommandPath()`: Returns the command path for the activation group.

2. `String[] getCommandOptions()`: Returns the command options for the activation group.

3. `void setCommandPath(String path)`: Sets the command path for the activation group.

4. `void setCommandOptions(String[] options)`: Sets the command options for the activation group.

5. `ActivationGroupEnv createEnv(Properties overrides)`: Creates an ActivationGroupEnv based on the specified properties overrides.
================================================================

Sample: 6 ActivationGroupID
----------------------------------------------------------------
1. `int hashCode()`: This method returns a hash code value for the object.
2. `boolean equals(Object obj)`: This method compares this ActivationGroupID to another object.
3. `String toString()`: This method returns a String representation of the object.
4. `ActivationGroupDesc getActivationGroupDesc()`: This method returns the ActivationGroupDesc for this ActivationGroupID.
5. `boolean equals(ActivationGroupID id)`: This method compares this ActivationGroupID to another ActivationGroupID.
================================================================

Sample: 7 ActivationID
----------------------------------------------------------------
1. `ActivationDesc getActivationDesc()`: This method returns the ActivationDesc associated with this ActivationID.
2. `ActivationSystem getSystem()`: This method returns the ActivationSystem for this ActivationID.
3. `UID getUID()`: This method returns the UID for this ActivationID.
4. `String toString()`: This method returns a string representation of the ActivationID.
5. `int hashCode()`: This method returns a hash code value for the ActivationID.
================================================================

