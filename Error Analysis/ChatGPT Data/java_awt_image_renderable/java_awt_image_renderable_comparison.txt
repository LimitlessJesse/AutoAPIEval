Sample: 0 ParameterBlock
----------------------------------------------------------------
1. `int getNumSources()`: This method returns the number of RenderableImage sources in the ParameterBlock.
2. `void addSource(Object source)`: This method adds a RenderableImage source to the ParameterBlock.
3. `Object getSource(int index)`: This method returns the RenderableImage source at the specified index.
4. `void removeSource(int index)`: This method removes the RenderableImage source at the specified index from the ParameterBlock.
5. `void setSource(int index, Object source)`: This method sets the RenderableImage source at the specified index in the ParameterBlock.
================================================================

Sample: 1 RenderableImageOp
----------------------------------------------------------------
1. `RenderedImage createRendering(RenderContext renderContext)`: This method creates a RenderedImage with a given RenderContext.
2. `Rectangle2D getBounds2D()`: This method returns the bounding box for the output of the operation, provided that it is known. 
3. `Shape getDependencyRegion(int srcIndex, Rectangle2D outputRgn)`: This method returns the region of interest for the destination input for a given source and output region.
4. `RenderableImage createScaledRendering(int w, int h, RenderingHints hints)`: This method creates a scaled rendering of the RenderableImage with the specified width, height, and rendering hints.
5. `RenderableImage createDefaultRendering()`: This method creates a default rendering of the RenderableImage.
================================================================

Sample: 2 RenderableImageProducer
----------------------------------------------------------------
1. `RenderableImage create(RenderContext renderContext)`: This method creates a RenderableImage with the specified RenderContext.
2. `Point2D getImagePosition(Point2D srcPt, Point2D dstPt)`: This method returns the image position given a source point and a destination point.
3. `Rectangle2D getRenderedImageBounds()`: This method returns the bounds of the rendered image.
4. `RenderedImage createRendering(RenderContext renderContext)`: This method creates a RenderedImage with the specified RenderContext.
5. `CachableRed createDefaultRendering()`: This method creates a default rendering of the image.
================================================================

Sample: 3 RenderContext
----------------------------------------------------------------
1. `Object getRenderingHint(Key hintKey)`: This method retrieves a rendering hint given a hint key.
2. `RenderingHints getRenderingHints()`: This method returns the rendering hints of this RenderContext.
3. `AffineTransform getTransform()`: This method returns the current transform of this RenderContext.
4. `Boolean isDynamic()` : This method returns a boolean indicating whether this RenderContext is dynamic.
5. `RenderedImage getRendering()`: This method returns the RenderedImage being rendered by this RenderContext.
================================================================

