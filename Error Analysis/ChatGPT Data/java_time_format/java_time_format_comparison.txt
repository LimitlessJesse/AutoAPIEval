Sample: 0 DateTimeFormatter
----------------------------------------------------------------
1. `static DateTimeFormatter ofPattern(String pattern)`: This method returns a new DateTimeFormatter using the specified pattern.
2. `static DateTimeFormatter ofLocalizedDateTime(FormatStyle dateStyle, FormatStyle timeStyle)`: This method returns a formatter using the specified date and time style.
3. `static DateTimeFormatter ISO_LOCAL_DATE`: This method returns a formatter that formats dates in ISO_LOCAL_DATE format.
4. `static DateTimeFormatter ISO_DATE_TIME`: This method returns a formatter that formats dates and times in ISO_DATE_TIME format.
5. `DateTimeFormatter withLocale(Locale locale)`: This method returns a copy of this formatter with a new locale.
================================================================

Sample: 1 DateTimeFormatterBuilder
----------------------------------------------------------------
1. `DateTimeFormatter toFormatter()`: This method returns a new DateTimeFormatter with the characteristics of this builder.
2. `DateTimeFormatterBuilder parseCaseInsensitive()`: This method configures the builder to be case insensitive when parsing text.
3. `DateTimeFormatterBuilder appendLiteral(char literal)`: This method appends a literal character to the formatter.
4. `DateTimeFormatterBuilder appendValue(TemporalField field, int width)`: This method appends the value of a date-time field to the formatter using a specified width.
5. `DateTimeFormatterBuilder padNext(int padWidth, char padChar)`: This method specifies that the next field should be padded to a fixed width using the specified padding character.
================================================================

Sample: 2 DecimalStyle
----------------------------------------------------------------
1. `char getDecimalSeparator()`: This method returns the character used as the decimal separator.
2. `char getPositiveSign()`: This method returns the character used as the positive sign.
3. `DecimalStyle withDecimalSeparator(char decimalSeparator)`: This method returns a new DecimalStyle with the specified decimal separator.
4. `DecimalStyle withPositiveSign(char positiveSign)`: This method returns a new DecimalStyle with the specified positive sign.
5. `DecimalStyle withZeroDigit(char zeroDigit)`: This method returns a new DecimalStyle with the specified zero digit.
================================================================

