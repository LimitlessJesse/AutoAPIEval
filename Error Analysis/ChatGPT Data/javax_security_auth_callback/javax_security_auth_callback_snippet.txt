Sample: 0 ChoiceCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ChoiceCallback;

public class Main {
    public static void main(String[] args) {
        // Create a ChoiceCallback object
        ChoiceCallback choiceCallback = new ChoiceCallback("Choose one", new String[]{"Option 1", "Option 2", "Option 3"}, 0, false);

        // Get the selected indexes from the ChoiceCallback object
        int[] selectedIndexes = choiceCallback.getSelectedIndexes();

        // Display the selected indexes
        for (int index : selectedIndexes) {
            System.out.println("Selected Index: " + index);
        }
    }
}
```
================================================================

Sample: 1 ChoiceCallback_3
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ChoiceCallback;

public class Main {
    public static void main(String[] args) {
        ChoiceCallback callback = new ChoiceCallback("Choose an option:", new String[]{"Option 1", "Option 2"}, 0, false);
        int[] selectedIndexes = {1};
        callback.setSelectedIndexes(selectedIndexes);
    }
}
```
================================================================

Sample: 2 ChoiceCallback_5
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ChoiceCallback;

public class Main {
    public static void main(String[] args) {
        ChoiceCallback callback = new ChoiceCallback("Choose an option", new String[]{"Option 1", "Option 2"}, 0, false);
        String prompt = callback.getPrompt();

        System.out.println("Prompt: " + prompt);
    }
}
```
================================================================

Sample: 3 ConfirmationCallback_2
----------------------------------------------------------------
void setSelectedIndex(int index)`: This method sets the selected index in the ConfirmationCallback.

Code snippet:
```java
import javax.security.auth.callback.ConfirmationCallback;

public class Main {
    public static void main(String[] args) {
        ConfirmationCallback confirmationCallback = new ConfirmationCallback(ConfirmationCallback.INFORMATION, ConfirmationCallback.YES_NO_CANCEL, ConfirmationCallback.YES);
        
        // Set selected index to NO
        confirmationCallback.setSelectedIndex(1);
        System.out.println("Selected index: " + confirmationCallback.getSelectedIndex()); // Output: 1
    }
}
```
================================================================

Sample: 4 ConfirmationCallback_3
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ConfirmationCallback;

public class Main {
    public static void main(String[] args) {

        ConfirmationCallback confirmationCallback = new ConfirmationCallback(ConfirmationCallback.INFORMATION, ConfirmationCallback.YES_NO_OPTION, ConfirmationCallback.YES);
        int selectedIndex = confirmationCallback.getSelectedIndex();
        System.out.println("Selected Index: " + selectedIndex);
    }
}
```
================================================================

Sample: 5 ConfirmationCallback_5
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.ConfirmationCallback;

public class Main {
    public static void main(String[] args) {
        ConfirmationCallback confirmationCallback = new ConfirmationCallback(ConfirmationCallback.INFORMATION, ConfirmationCallback.YES_NO_OPTION, ConfirmationCallback.YES);
        int defaultOption = confirmationCallback.getDefaultOption();
        System.out.println("Default option: " + defaultOption);
    }
}
```
================================================================

Sample: 6 NameCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.NameCallback;

public class Main {
    public static void main(String[] args) {
        NameCallback callback = new NameCallback("Please enter your name: ");
        String name = callback.getName();
        System.out.println("Hello, " + name);
    }
}
```
================================================================

Sample: 7 NameCallback_2
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.NameCallback;

public class Main {
    public static void main(String[] args) {
        NameCallback nameCallback = new NameCallback("Prompt");
        nameCallback.setName("John Doe");
        System.out.println("Name set successfully: " + nameCallback.getName());
    }
}
```
================================================================

Sample: 8 PasswordCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("Enter your password: ", false);
        char[] password = passwordCallback.getPassword();
        System.out.println("Password entered: " + String.valueOf(password));
    }
}
```
================================================================

Sample: 9 PasswordCallback_2
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback passwordCallback = new PasswordCallback("Enter your password: ", false);
        char[] password = "myPassword".toCharArray();
        passwordCallback.setPassword(password);
        System.out.println("Password set successfully.");
    }
}
```
================================================================

Sample: 10 PasswordCallback_3
----------------------------------------------------------------
Boolean isEchoOn(): This method returns a boolean indicating whether password echoing is enabled.

Code snippet:
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback callback = new PasswordCallback("Enter password: ", false);
        boolean isEchoOn = callback.isEchoOn();
        System.out.println("Is password echoing enabled? " + isEchoOn);
    }
}
```
================================================================

Sample: 11 PasswordCallback_5
----------------------------------------------------------------
```java
import javax.security.auth.callback.PasswordCallback;

public class Main {
    public static void main(String[] args) {
        PasswordCallback pc = new PasswordCallback("prompt", false);
        String prompt = pc.getPrompt();
        System.out.println("Prompt: " + prompt);
    }
}
```
================================================================

Sample: 12 TextInputCallback_1
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.TextInputCallback;

public class Main {
    public static void main(String[] args) {
        TextInputCallback callback = new TextInputCallback("Enter text: ");
        // Assuming some text input is set for callback
        String text = callback.getText();
        System.out.println("Entered text: " + text);
    }
}
```
================================================================

Sample: 13 TextInputCallback_2
----------------------------------------------------------------
Code snippet:
```java
import javax.security.auth.callback.TextInputCallback;

public class Main {
    public static void main(String[] args) {
        TextInputCallback callback = new TextInputCallback("Enter text: ");
        callback.setText("Hello World");
        System.out.println(callback.getText());
    }
}
```
================================================================

Sample: 14 TextInputCallback_3
----------------------------------------------------------------
```java
import javax.security.auth.callback.TextInputCallback;

public class Main {
    public static void main(String[] args) {
        TextInputCallback callback = new TextInputCallback("Please enter your name: ");
        String prompt = callback.getPrompt();
        System.out.println(prompt);
    }
}
```
================================================================

