Sample: DSAPrivateKeySpec_1
----------------------------------------------------------------
stdout:
x value: 1234567890

================================================================

Sample: DSAPrivateKeySpec_2
----------------------------------------------------------------
stdout:
P value: 54321

================================================================

Sample: DSAPrivateKeySpec_3
----------------------------------------------------------------
stdout:
Q: 101112

================================================================

Sample: DSAPrivateKeySpec_4
----------------------------------------------------------------
stdout:
Value of 'g': 24680

================================================================

Sample: DSAPublicKeySpec_1
----------------------------------------------------------------
stdout:
Y value: 1

================================================================

Sample: ECFieldF2m_1
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECFieldF2m_1.java:5: error: no suitable constructor found for ECFieldF2m(int,int,int,int)
        ECFieldF2m field = new ECFieldF2m(8, 1, 2, 3);
                           ^
    constructor ECFieldF2m.ECFieldF2m(int) is not applicable
      (actual and formal argument lists differ in length)
    constructor ECFieldF2m.ECFieldF2m(int,BigInteger) is not applicable
      (actual and formal argument lists differ in length)
    constructor ECFieldF2m.ECFieldF2m(int,int[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: ECFieldF2m_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECFieldF2m_2.java:5: error: no suitable constructor found for ECFieldF2m(int,int,int,int,int[])
        ECFieldF2m fieldF2m = new ECFieldF2m(5, 3, 2, 1, new int[]{1, 0, 1});
                              ^
    constructor ECFieldF2m.ECFieldF2m(int) is not applicable
      (actual and formal argument lists differ in length)
    constructor ECFieldF2m.ECFieldF2m(int,BigInteger) is not applicable
      (actual and formal argument lists differ in length)
    constructor ECFieldF2m.ECFieldF2m(int,int[]) is not applicable
      (actual and formal argument lists differ in length)
1 error


================================================================

Sample: ECFieldFp_1
----------------------------------------------------------------
stdout:
Prime value: 13

================================================================

Sample: ECFieldFp_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECFieldFp_2.java:5: error: incompatible types: int cannot be converted to BigInteger
        ECFieldFp field = new ECFieldFp(7); // Create an ECFieldFp object with prime value 7
                                        ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ECFieldFp_4
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECFieldFp_4.java:5: error: incompatible types: int cannot be converted to BigInteger
        ECFieldFp ecField = new ECFieldFp(10);
                                          ^
./Data/java_security_spec/javaFiles/ECFieldFp_4.java:6: error: incompatible types: int cannot be converted to BigInteger
        ECFieldFp ecField2 = new ECFieldFp(10);
                                           ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
2 errors


================================================================

Sample: ECFieldFp_5
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECFieldFp_5.java:5: error: incompatible types: int cannot be converted to BigInteger
        ECFieldFp ecFieldFp = new ECFieldFp(10); // Create an instance of ECFieldFp with prime number 10
                                            ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: ECGenParameterSpec_1
----------------------------------------------------------------
stdout:
ECGenParameterSpec Name: secp256r1

================================================================

Sample: ECParameterSpec_3
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: field is null
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:104)
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:83)
	at ECParameterSpec_3.main(ECParameterSpec_3.java:6)

================================================================

Sample: ECPrivateKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_2.java:10: error: cannot find symbol
        EllipticCurve curve = new EllipticCurve(new ECFieldFp(BigInteger.TEN), BigInteger.ONE, BigInteger.TWO);
                                                    ^
  symbol:   class ECFieldFp
  location: class ECPrivateKeySpec_2
./Data/java_security_spec/javaFiles/ECPrivateKeySpec_2.java:11: error: constructor ECPrivateKeySpec in class ECPrivateKeySpec cannot be applied to given types;
        ECPrivateKeySpec privateKeySpec = new ECPrivateKeySpec(s, curve, w);
                                          ^
  required: BigInteger,ECParameterSpec
  found:    BigInteger,EllipticCurve,ECPoint
  reason: actual and formal argument lists differ in length
2 errors


================================================================

Sample: ECPublicKeySpec_1
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPublicKeySpec_1.java:20: error: illegal start of expression
            ECParameterSpec ecParameterSpec = new ECParameterSpec(...);
                                                                  ^
1 error


================================================================

Sample: ECPublicKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/ECPublicKeySpec_2.java:20: error: incompatible types: BigInteger cannot be converted to ECField
            new BigInteger("1"),
            ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: EllipticCurve_5
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.NullPointerException: field is null
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:104)
	at java.base/java.security.spec.EllipticCurve.<init>(EllipticCurve.java:83)
	at EllipticCurve_5.main(EllipticCurve_5.java:5)

================================================================

Sample: MGF1ParameterSpec_1
----------------------------------------------------------------
stdout:
Digest Algorithm: SHA-256

================================================================

Sample: PKCS8EncodedKeySpec_1
----------------------------------------------------------------
stdout:
Encoded byte array: [B@5579bb86

================================================================

Sample: PKCS8EncodedKeySpec_2
----------------------------------------------------------------
stdout:
Key format: PKCS#8

================================================================

Sample: PSSParameterSpec_1
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/PSSParameterSpec_1.java:5: error: cannot find symbol
        PSSParameterSpec pssParameterSpec = new PSSParameterSpec.Builder().getSaltLength();
                                                                ^
  symbol:   class Builder
  location: class PSSParameterSpec
1 error


================================================================

Sample: PSSParameterSpec_3
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/PSSParameterSpec_3.java:5: error: incompatible types: int cannot be converted to String
        PSSParameterSpec pss = new PSSParameterSpec(20, "MGF1", null, 32, 1);
                                                    ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: PSSParameterSpec_4
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/PSSParameterSpec_4.java:5: error: incompatible types: String cannot be converted to AlgorithmParameterSpec
        PSSParameterSpec pssParameterSpec = new PSSParameterSpec("SHA-256", "MGF1", "SHA-1", 32, 1);
                                                                                    ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
1 error


================================================================

Sample: RSAKeyGenParameterSpec_2
----------------------------------------------------------------
stdout:
Public Exponent: 65537

================================================================

Sample: RSAOtherPrimeInfo_2
----------------------------------------------------------------
stdout:
Exponent: 17

================================================================

Sample: RSAOtherPrimeInfo_3
----------------------------------------------------------------
stdout:
Other Prime Info: java.security.spec.RSAOtherPrimeInfo@3b94d659

================================================================

Sample: RSAPrivateCrtKeySpec_1
----------------------------------------------------------------
stdout:
Public Exponent: 1234567890

================================================================

Sample: RSAPrivateCrtKeySpec_2
----------------------------------------------------------------
stdout:
PrimeP: 54321

================================================================

Sample: RSAPrivateCrtKeySpec_3
----------------------------------------------------------------
stdout:
PrimeQ: 5678

================================================================

Sample: RSAPrivateCrtKeySpec_4
----------------------------------------------------------------
stdout:
Prime Exponent P: 17

================================================================

Sample: RSAPrivateCrtKeySpec_5
----------------------------------------------------------------
stdout:
Prime Exponent Q: 46802

================================================================

Sample: RSAPrivateKeySpec_1
----------------------------------------------------------------
stdout:
Modulus: 1

================================================================

Sample: RSAPublicKeySpec_2
----------------------------------------------------------------
stdout:
Retrieved Modulus: 1234567890

================================================================

Sample: RSAPublicKeySpec_3
----------------------------------------------------------------
stdout:
Public Exponent: 65537

================================================================

Sample: X509EncodedKeySpec_1
----------------------------------------------------------------
stdout:
Encoded key: [50, 69, 103, 18]

================================================================

Sample: X509EncodedKeySpec_2
----------------------------------------------------------------
output:
./Data/java_security_spec/javaFiles/X509EncodedKeySpec_2.java:14: error: exception NoSuchAlgorithmException is never thrown in body of corresponding try statement
        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {
                 ^
./Data/java_security_spec/javaFiles/X509EncodedKeySpec_2.java:14: error: exception InvalidKeySpecException is never thrown in body of corresponding try statement
        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {
                                            ^
2 errors


================================================================

