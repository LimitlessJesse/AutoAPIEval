Sample: 0 MBeanServerNotificationFilter
----------------------------------------------------------------
1. `void enableType(String typeName)`: Enables the notifications for MBeans of the specified type.
2. `void disableType(String typeName)`: Disables the notifications for MBeans of the specified type.
3. `String[] getEnabledTypes()`: Returns an array of the names of the MBean types for which notifications are enabled.
4. `void disableAllTypes()`: Disables all MBean notifications.
5. `void enableAllTypes()`: Enables notifications for all MBean types.
================================================================

Sample: 1 RelationNotification
----------------------------------------------------------------
1. `List<String> getRoles()`: This method returns a list of role names associated with the relation.
2. `ObjectName getObjectName()`: This method returns the ObjectName of the MBean sending the notification.
3. `String getRelationId()`: This method returns the id of the relation associated with the notification.
4. `Integer getNotificationId()`: This method returns the identifier of the notification.
5. `String getRelationTypeName()`: This method returns the type of relation associated with the notification.
================================================================

Sample: 2 RelationService
----------------------------------------------------------------
1. `void createRelationType(String relationTypeName, RoleInfo[] roleInfos)`: This method creates a new relation type with the given name and roles.
   
2. `void removeRelation(String relationId)`: This method removes the relation identified by the given relation id.

3. `void sendRelationCreationNotification(String relationId)`: This method sends a notification for the creation of the relation identified by the given id.

4. `List<String> findRelationsOfType(String relationTypeName)`: This method returns a list of relation ids for relations of the specified type.

5. `Boolean hasRelation(String relationId)`: This method checks if a relation with the given id exists.
================================================================

Sample: 3 RelationSupport
----------------------------------------------------------------
1. `void handleMBeanUnregistration(ObjectName objectName)`: This method handles the MBean unregistration, updating the relations
2. `Boolean hasMBeanNotificationBroadcaster()`: This method returns true if the MBean handles notifications itself
3. `List<ObjectName> findAssociatedMBeans(ObjectName mbeanObjectName, String relationTypeName, String relationId)`: This method finds the MBeans associated with a given MBean in a given relation
4. `TabularData getRoleInfos()`: This method returns role infos for the relation
5. `Boolean checkRoleWriting(String roleName, List<ObjectName> objectNames, Object roleValue)`: This method checks if writing on a given role is allowed
================================================================

Sample: 4 RelationTypeSupport
----------------------------------------------------------------
1. `RelationTypeSupport createRelationType(String relationTypeName)`: This method creates a new relation type with the specified name.
2. `List<String> getRoleInfos()`: This method returns a list of role names defined for this relation type.
3. `void removeRoleInfo(String roleInfoName)`: This method removes the role information with the specified name from this relation type.
4. `void addRoleInfo(RoleInfo roleInfo)`: This method adds a new role information object to this relation type.
5. `void setRelationServiceFlag(boolean flag)`: This method sets the flag indicating whether this relation type is managed by a relation service.
================================================================

Sample: 5 Role
----------------------------------------------------------------
1. `java.lang.Boolean getWrite`: This method returns a Boolean representing the "write" flag value for this Role.
2. `void setWrite(java.lang.Boolean writeFlag)`: This method sets the "write" flag value for this Role to the specified value.
3. `java.util.List<ObjectName> getRoles`: This method returns a List of ObjectNames representing the current associated roles for this Role.
4. `void setRoles(java.util.List<ObjectName> roles)`: This method sets the associated roles for this Role to the specified list of ObjectNames.
5. `java.lang.String getRoleName`: This method returns a String representing the name of this Role.
================================================================

Sample: 6 RoleInfo
----------------------------------------------------------------
1. `String getName()`: This method returns the name of the role.
2. `void setDescription(String description)`: This method sets the description of the role.
3. `boolean isWritable()`: This method returns true if the role is writable, false otherwise.
4. `List<String> getRoleNames()`: This method returns a list of names of all roles managed in relation.
5. `String getMinDegree()`: This method returns the minimum degree for role.
================================================================

Sample: 7 RoleList
----------------------------------------------------------------
1. `void clear()`: This method clears all the elements from the RoleList.
2. `List<Role> getAllRoles()`: This method returns a list of all the roles in the RoleList.
3. `int size()`: This method returns the number of roles in the RoleList.
4. `Role retrieve(String roleName)`: This method retrieves the role with the specified name from the RoleList.
5. `void remove(String roleName)`: This method removes the role with the specified name from the RoleList.
================================================================

Sample: 8 RoleResult
----------------------------------------------------------------
1. `RoleList getResult()`: This method returns the RoleList object associated with this RoleResult.
2. `Role` getRole()`: This method returns the Role object corresponding to this RoleResult.
3. `String getRoleName()`: This method returns the name of the Role associated with this RoleResult.
4. `boolean isSuccess()`: This method checks if the result was successful.
5. `void setRoleList(RoleList roleList)`: This method sets the RoleList object for this RoleResult.
================================================================

Sample: 9 RoleStatus
----------------------------------------------------------------
1. `String getRoleName()`: This method returns the name of the role status.
2. `List<ObjectName> getRoleValue()`: This method returns a list of ObjectNames corresponding to the current role value.
3. `void setRoleName(String roleName)`: This method sets the name of the role status.
4. `void setRoleValue(List<ObjectName> roleValue)`: This method sets the role value with the specified list of ObjectNames.
5. `boolean equals(Object obj)`: This method compares the specified object with this role status for equality.
================================================================

Sample: 10 RoleUnresolved
----------------------------------------------------------------
1. `String getRoleName()`: This method returns the name of the unresolved role.
2. `String getRoleValue()`: This method returns the value of the unresolved role.
3. `String getObjectName()`: This method returns the name of the ObjectName where the role is not resolved.
4. `String getRoleTypeName()`: This method returns the type of the unresolved role.
5. `ObjectName getRoleObject()`: This method returns the ObjectName representing the role value that is not resolved.
================================================================

Sample: 11 RoleUnresolvedList
----------------------------------------------------------------
1. `RoleUnresolved remove(int index)`: This method removes the element at the specified position in this list and returns the removed element.
2. `RoleUnresolved get(int index)`: This method returns the element at the specified position in this list.
3. `int size()`: This method returns the number of elements in this list.
4. `boolean isEmpty()`: This method returns true if this list contains no elements.
5. `void clear()`: This method removes all elements from this list.
================================================================

