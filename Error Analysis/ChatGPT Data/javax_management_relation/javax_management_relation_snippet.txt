Sample: 0 RelationNotification_2
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.ObjectName;
import javax.management.relation.RelationNotification;

public class Main {
    public static void main(String[] args) {
        RelationNotification notification = new RelationNotification("mytype", "source", 1, "message", new ObjectName("domain", "key", "value"));
        ObjectName objectName = notification.getObjectName();
        System.out.println("Object Name: " + objectName);
    }
}
```
================================================================

Sample: 1 RelationNotification_3
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationNotification;

public class Main {
    public static void main(String[] args) {
        RelationNotification notification = new RelationNotification("", null, 0, "", "", "", "");
        String relationId = notification.getRelationId();
        System.out.println("Relation Id: " + relationId);
    }
}
```
================================================================

Sample: 2 RelationNotification_5
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationNotification;

public class Main {
    public static void main(String[] args) {
        RelationNotification notification = new RelationNotification("notificationType", "source", 1, "sequenceNumber", "message", "relationId", "relationTypeName");
        String relationTypeName = notification.getRelationTypeName();
        System.out.println("Relation Type Name: " + relationTypeName);
    }
}
```
================================================================

Sample: 3 RelationService_1
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationService;
import javax.management.relation.RoleInfo;

public class Main {
    public static void main(String[] args) {
        RelationService relationService = new RelationService();
        String relationTypeName = "SampleRelation";
        RoleInfo[] roleInfos = {new RoleInfo("Role1", "java.lang.String", true, false, 1, 1, "Description")};
        relationService.createRelationType(relationTypeName, roleInfos);
    }
}
```
================================================================

Sample: 4 RelationService_2
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationService;

public class Main {
    public static void main(String[] args) {
        RelationService relationService = new RelationService();
        String relationId = "exampleRelation";
        
        // Removing the specified relation
        relationService.removeRelation(relationId);
    }
}
```
================================================================

Sample: 5 RelationService_3
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationService;

public class Main {
    public static void main(String[] args) {
        RelationService relationService = new RelationService();
        relationService.sendRelationCreationNotification("relationIdExample");
    }
}
```
================================================================

Sample: 6 RelationService_4
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationService;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        RelationService relationService = new RelationService();
        List<String> relations = relationService.findRelationsOfType("relationTypeName");
        System.out.println(relations);
    }
}
```
================================================================

Sample: 7 RelationService_5
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RelationService;

public class Main {
    public static void main(String[] args) {
        RelationService relationService = new RelationService();
        String relationId = "exampleRelation";
        
        boolean hasRelation = relationService.hasRelation(relationId);
        System.out.println("Does relation exist: " + hasRelation);
    }
}
```
================================================================

Sample: 8 RelationTypeSupport_4
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RoleInfo;
import javax.management.relation.RelationTypeSupport;

public class Main {
    public static void main(String[] args) {
        RelationTypeSupport relationTypeSupport = new RelationTypeSupport("ExampleType");
        RoleInfo roleInfo = new RoleInfo("RoleName", "RoleDescription");
        
        relationTypeSupport.addRoleInfo(roleInfo);
    }
}
```
================================================================

Sample: 9 RoleInfo_1
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RoleInfo;

public class Main {
    public static void main(String[] args) {
        RoleInfo roleInfo = new RoleInfo("roleName", "roleType");
        System.out.println("Role Name: " + roleInfo.getName());
    }
}
```
================================================================

Sample: 10 RoleInfo_3
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RoleInfo;

public class Main {
    public static void main(String[] args) {
        RoleInfo roleInfo = new RoleInfo("roleName", new String[]{"MBeanClassName1", "MBeanClassName2"});
        boolean isWritable = roleInfo.isWritable();
        System.out.println("Is Writable: " + isWritable);
    }
}
```
================================================================

Sample: 11 RoleUnresolved_1
----------------------------------------------------------------
Code snippet:
```java
import javax.management.relation.RoleUnresolved;

public class Main {
    public static void main(String[] args) {
        RoleUnresolved roleUnresolved = new RoleUnresolved();
        String roleName = roleUnresolved.getRoleName();
        System.out.println("Role Name: " + roleName);
    }
}
```
================================================================

