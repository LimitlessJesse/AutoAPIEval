Sample: FileHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/FileHandler_1.java:18: error: cannot find symbol
        fileHandler.publish(logRecord);
        ^
  symbol:   variable fileHandler
  location: class FileHandler_1
1 error


================================================================

Sample: FileHandler_2
----------------------------------------------------------------
================================================================

Sample: Formatter_1
----------------------------------------------------------------
================================================================

Sample: Formatter_2
----------------------------------------------------------------
stdout:
Log Header: 

================================================================

Sample: Formatter_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_3.java:8: error: ';' expected
        Formatter formatter = // initialize your Formatter instance
                 ^
./Data/java_util_logging/javaFiles/Formatter_3.java:9: error: ';' expected
        String tail = formatter.getTail(handler);
              ^
2 errors


================================================================

Sample: Formatter_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Formatter_5.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "Sample log message");
                                         ^
  symbol:   variable Level
  location: class Formatter_5
1 error


================================================================

Sample: Handler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Handler_1.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "Sample log message");
                                         ^
  symbol:   variable Level
  location: class Handler_1
1 error


================================================================

Sample: Handler_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Handler_2.java:11: error: MyCustomHandler is not abstract and does not override abstract method close() in Handler
class MyCustomHandler extends Handler {
^
1 error


================================================================

Sample: Handler_3
----------------------------------------------------------------
================================================================

Sample: Handler_4
----------------------------------------------------------------
stdout:
Handler encoding: null

================================================================

Sample: Handler_5
----------------------------------------------------------------
stdout:
java.util.logging.ErrorManager@4ae82894

================================================================

Sample: Level_1
----------------------------------------------------------------
stdout:
Level name: SEVERE

================================================================

Sample: Level_2
----------------------------------------------------------------
stdout:
Parsed Level: INFO

================================================================

Sample: Level_3
----------------------------------------------------------------
stdout:
The integer value of level is: 800

================================================================

Sample: Level_4
----------------------------------------------------------------
stdout:
INFO

================================================================

Sample: Level_5
----------------------------------------------------------------
stdout:
false

================================================================

Sample: Logger_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Logger_1.java:5: error: cannot find symbol
        Logger logger = Logger.getLogger(Main.class.getName());
                                         ^
  symbol:   class Main
  location: class Logger_1
1 error


================================================================

Sample: Logger_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Logger_2.java:6: error: cannot find symbol
        Logger logger = Logger.getLogger(Main.class.getName());
                                         ^
  symbol:   class Main
  location: class Logger_2
1 error


================================================================

Sample: Logger_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Logger_3.java:5: error: cannot find symbol
        Logger logger = Logger.getLogger(Main.class.getName());
                                         ^
  symbol:   class Main
  location: class Logger_3
1 error


================================================================

Sample: Logger_4
----------------------------------------------------------------
stderr:
Apr. 28, 2024 2:14:21 A.M. Logger_4 log
INFO: This is an info message

================================================================

Sample: Logger_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/Logger_5.java:6: error: cannot find symbol
        Logger logger = Logger.getLogger(Main.class.getName());
                                         ^
  symbol:   class Main
  location: class Logger_5
1 error


================================================================

Sample: LogManager_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogManager_2.java:15: error: cannot find symbol
            readConfiguration(Main.class.getResourceAsStream("logging.properties"));
                              ^
  symbol:   class Main
  location: class LogManager_2
1 error


================================================================

Sample: LogManager_4
----------------------------------------------------------------
================================================================

Sample: LogManager_5
----------------------------------------------------------------
stdout:
Access checked successfully

stderr:
./Data/java_util_logging/javaFiles/LogManager_5.java:7: warning: [removal] checkAccess() in LogManager has been deprecated and marked for removal
            manager.checkAccess();
                   ^
1 warning

================================================================

Sample: LogRecord_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_1.java:5: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class LogRecord_1
1 error


================================================================

Sample: LogRecord_2
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_2.java:5: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class LogRecord_2
1 error


================================================================

Sample: LogRecord_3
----------------------------------------------------------------
stdout:
Log level: INFO

================================================================

Sample: LogRecord_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/LogRecord_4.java:5: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class LogRecord_4
1 error


================================================================

Sample: MemoryHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_1.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "Sample log message");
                                         ^
  symbol:   variable Level
  location: class MemoryHandler_1
./Data/java_util_logging/javaFiles/MemoryHandler_1.java:8: error: method push in class MemoryHandler cannot be applied to given types;
        handler.push(record);
               ^
  required: no arguments
  found:    LogRecord
  reason: actual and formal argument lists differ in length
2 errors


================================================================

Sample: MemoryHandler_2
----------------------------------------------------------------
stderr:
Exception in thread "main" java.lang.RuntimeException: The handler java.util.logging.MemoryHandler does not specify a target
	at java.logging/java.util.logging.MemoryHandler.<init>(MemoryHandler.java:114)
	at MemoryHandler_2.main(MemoryHandler_2.java:7)

================================================================

Sample: MemoryHandler_3
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_3.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "Sample log message");
                                         ^
  symbol:   variable Level
  location: class MemoryHandler_3
1 error


================================================================

Sample: MemoryHandler_5
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/MemoryHandler_5.java:11: error: method formatMessage in class Formatter cannot be applied to given types;
        memoryHandler.publish(memoryHandler.getFormatter().formatMessage(null, "Logging message 1", Level.INFO));
                                                          ^
  required: LogRecord
  found:    <null>,String,Level
  reason: actual and formal argument lists differ in length
./Data/java_util_logging/javaFiles/MemoryHandler_5.java:12: error: method formatMessage in class Formatter cannot be applied to given types;
        memoryHandler.publish(memoryHandler.getFormatter().formatMessage(null, "Logging message 2", Level.WARNING));
                                                          ^
  required: LogRecord
  found:    <null>,String,Level
  reason: actual and formal argument lists differ in length
./Data/java_util_logging/javaFiles/MemoryHandler_5.java:15: error: cannot find symbol
        System.out.println(memoryHandler.getPushLevel() + " " + memoryHandler.getMemoryUsage());
                                                                             ^
  symbol:   method getMemoryUsage()
  location: variable memoryHandler of type MemoryHandler
./Data/java_util_logging/javaFiles/MemoryHandler_5.java:21: error: cannot find symbol
        System.out.println(memoryHandler.getPushLevel() + " " + memoryHandler.getMemoryUsage());
                                                                             ^
  symbol:   method getMemoryUsage()
  location: variable memoryHandler of type MemoryHandler
4 errors


================================================================

Sample: SimpleFormatter_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SimpleFormatter_1.java:7: error: cannot find symbol
        LogRecord record = new LogRecord(Level.INFO, "This is a log message");
                                         ^
  symbol:   variable Level
  location: class SimpleFormatter_1
1 error


================================================================

Sample: SocketHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/SocketHandler_1.java:13: error: exception IOException is never thrown in body of corresponding try statement
        } catch (IOException e) {
          ^
./Data/java_util_logging/javaFiles/SocketHandler_1.java:6: error: unreported exception IOException; must be caught or declared to be thrown
        SocketHandler socketHandler = new SocketHandler();
                                      ^
2 errors


================================================================

Sample: StreamHandler_1
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/StreamHandler_1.java:8: error: setOutputStream(OutputStream) has protected access in StreamHandler
        handler.setOutputStream(outputStream);
               ^
1 error


================================================================

Sample: StreamHandler_4
----------------------------------------------------------------
output:
./Data/java_util_logging/javaFiles/StreamHandler_4.java:6: error: unreported exception UnsupportedEncodingException; must be caught or declared to be thrown
        handler.setEncoding("UTF-8");
                           ^
1 error


================================================================

