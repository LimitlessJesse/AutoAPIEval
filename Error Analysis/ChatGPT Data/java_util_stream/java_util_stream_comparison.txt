Sample: 0 Collectors
----------------------------------------------------------------
1. `Collector<T, A, R> toList()`: This method collects all elements of a stream into a List.

2. `Collector<T, A, R> toSet()`: This method collects all elements of a stream into a Set.

3. `Collector<T, A, R> joining()`: This method concatenates the elements of a stream into a single String.

4. `Collector<T, A, R> groupingBy(Function<? super T, ? extends K> classifier)`: This method groups the elements of a stream by a classifier function.

5. `Collector<T, A, R> partitioningBy(Predicate<? super T> predicate)`: This method partitions the elements of a stream into two groups based on a predicate.
================================================================

Sample: 1 StreamSupport
----------------------------------------------------------------
1. `Stream<T> concat(Stream<? extends T> a, Stream<? extends T> b)`: This method creates a new stream consisting of the elements of the first stream followed by the elements of the second stream.
2. `Stream<T> filter(Predicate<? super T> predicate)`: This method returns a stream consisting of the elements of this stream that match the given predicate.
3. `Stream<T> limit(long maxSize)`: This method returns a stream consisting of the elements of this stream, truncated to be no longer than maxSize in length.
4. `Stream<T> distinct()`: This method returns a stream consisting of the distinct elements of this stream.
5. `<R> Stream<R> map(Function<? super T,? extends R> mapper)`: This method returns a new stream consisting of the results of applying the given function to the elements of this stream.
================================================================

